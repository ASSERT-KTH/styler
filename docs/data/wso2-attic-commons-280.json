{
    "project_name": "wso2-attic-commons",
    "error_id": "280",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public String toString () {\n    return ObjectPrinter.toString(this, new Object[] { \"closure\", _closure, \"method\", _method.getName(), \"args\", _args});\n  }\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/280/Continuation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/280/Continuation.java\nindex bb2ff55df79..515af09d6da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/280/Continuation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/280/Continuation.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.jacob.soup;\n \n import org.apache.ode.jacob.JacobObject;\n@@ -52,8 +53,8 @@ public class Continuation extends ExecutionQueueObject {\n     return _args;\n   }\n \n-  public String toString () {\n-    return ObjectPrinter.toString(this, new Object[] { \"closure\", _closure, \"method\", _method.getName(), \"args\", _args});\n+  public String toString() {\n+    return ObjectPrinter.toString(this, new Object[] {\"closure\", _closure, \"method\", _method.getName(), \"args\", _args});\n   }\n \n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/280/Continuation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/280/Continuation.java\nindex bb2ff55df79..86313f8e0c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/280/Continuation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/280/Continuation.java\n@@ -56,4 +56,4 @@ public class Continuation extends ExecutionQueueObject {\n     return ObjectPrinter.toString(this, new Object[] { \"closure\", _closure, \"method\", _method.getName(), \"args\", _args});\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
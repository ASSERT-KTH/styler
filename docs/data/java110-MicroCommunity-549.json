{
    "project_name": "java110-MicroCommunity",
    "error_id": "549",
    "information": {
        "errors": [
            {
                "line": "161",
                "column": "76",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n        //\u6dfb\u52a0\u5c0f\u533a\u697c\n        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n\n\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/549/AppUserBindingOwnerListener.java\nindex f1fe9853ec2..52e5dc8c230 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/549/AppUserBindingOwnerListener.java\n@@ -158,7 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/549/AppUserBindingOwnerListener.java\nindex f1fe9853ec2..56602f4bd06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/549/AppUserBindingOwnerListener.java\n@@ -120,7 +120,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         Assert.hasLength(openId, \"\u8be5\u7528\u6237\u4e0d\u662f\u80fd\u529b\u5f00\u653e\u7528\u6237\");\n \n         OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n-        ownerAppUserDto.setStates(new String[]{\"10000\", \"12000\"});\n+        ownerAppUserDto.setStates(new String[] {\"10000\", \"12000\"});\n \n         List<OwnerAppUserDto> ownerAppUserDtos = ownerAppUserInnerServiceSMOImpl.queryOwnerAppUsers(ownerAppUserDto);\n \n@@ -158,8 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n-\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n     }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/549/AppUserBindingOwnerListener.java\nindex f1fe9853ec2..2c0e7ac11d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/549/AppUserBindingOwnerListener.java\n@@ -158,10 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n-\n-\n-\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n     }\n \n \n@@ -212,4 +209,4 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/549/AppUserBindingOwnerListener.java\nindex f1fe9853ec2..35848af6252 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/549/AppUserBindingOwnerListener.java\n@@ -20,13 +20,13 @@ import com.java110.dto.owner.OwnerDto;\n import com.java110.core.event.service.api.ServiceDataFlowEvent;\n import com.java110.utils.cache.MappingCache;\n import com.java110.utils.constant.*;\n+\n import com.java110.utils.util.Assert;\n import com.java110.utils.util.BeanConvertUtil;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n-\n import java.util.List;\n import java.util.Map;\n \n@@ -39,10 +39,10 @@ import java.util.Map;\n  * add by wuxw 2019/4/26\n  **/\n \n+\n @Java110Listener(\"appUserBindingOwnerListener\")\n public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener {\n \n-\n     private static final int DEFAULT_SEQ_COMMUNITY_MEMBER = 2;\n \n     @Autowired\n@@ -65,7 +65,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n \n     @Autowired\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n-\n     private static Logger logger = LoggerFactory.getLogger(AppUserBindingOwnerListener.class);\n \n     @Override\n@@ -89,7 +88,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n \n         //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n         Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n-\n         Assert.hasKeyAndValue(headers, \"user_id\", \"\u8bf7\u6c42\u5934\u4e2d\u672a\u5305\u542b\u7528\u6237\u4fe1\u606f\");\n         SmsDto smsDto = new SmsDto();\n         smsDto.setTel(reqJson.getString(\"link\"));\n@@ -102,26 +100,20 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n     }\n \n     @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n-\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n         //\u5224\u65ad\u662f\u5426\u6709\u7528\u6237ID\n         Map<String, String> headers = event.getDataFlowContext().getRequestCurrentHeaders();\n-\n         String userId = headers.get(\"user_id\");\n         UserDto userDto = new UserDto();\n         userDto.setUserId(userId);\n         List<UserDto> userDtos = userInnerServiceSMOImpl.getUsers(userDto);\n-\n         Assert.listOnlyOne(userDtos, \"\u672a\u627e\u5230\u76f8\u5e94\u7528\u6237\u4fe1\u606f\uff0c\u6216\u67e5\u8be2\u5230\u591a\u6761\");\n-\n         String openId = userDtos.get(0).getOpenId();\n-\n         Assert.hasLength(openId, \"\u8be5\u7528\u6237\u4e0d\u662f\u80fd\u529b\u5f00\u653e\u7528\u6237\");\n-\n         OwnerAppUserDto ownerAppUserDto = BeanConvertUtil.covertBean(reqJson, OwnerAppUserDto.class);\n-        ownerAppUserDto.setStates(new String[]{\"10000\", \"12000\"});\n-\n+        ownerAppUserDto.setStates(new String[] {\"10000\", \"12000\"});\n         List<OwnerAppUserDto> ownerAppUserDtos = ownerAppUserInnerServiceSMOImpl.queryOwnerAppUsers(ownerAppUserDto);\n \n         //Assert.listOnlyOne(ownerAppUserDtos, \"\u5df2\u7ecf\u7533\u8bf7\u8fc7\u5165\u9a7b\u5c0f\u533a\");\n@@ -130,27 +122,22 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         }\n \n         //\u67e5\u8be2\u5c0f\u533a\u662f\u5426\u5b58\u5728\n+\n         CommunityDto communityDto = new CommunityDto();\n         communityDto.setCityCode(reqJson.getString(\"areaCode\"));\n         communityDto.setName(reqJson.getString(\"communityName\"));\n         communityDto.setState(\"1100\");\n         List<CommunityDto> communityDtos = communityInnerServiceSMOImpl.queryCommunitys(communityDto);\n-\n         Assert.listOnlyOne(communityDtos, \"\u586b\u5199\u5c0f\u533a\u4fe1\u606f\u9519\u8bef\");\n-\n         CommunityDto tmpCommunityDto = communityDtos.get(0);\n-\n         OwnerDto ownerDto = new OwnerDto();\n         ownerDto.setCommunityId(tmpCommunityDto.getCommunityId());\n         ownerDto.setIdCard(reqJson.getString(\"idCard\"));\n         ownerDto.setName(reqJson.getString(\"appUserName\"));\n         ownerDto.setLink(reqJson.getString(\"link\"));\n         List<OwnerDto> ownerDtos = ownerInnerServiceSMOImpl.queryOwnerMembers(ownerDto);\n-\n         Assert.listOnlyOne(ownerDtos, \"\u586b\u5199\u4e1a\u4e3b\u4fe1\u606f\u9519\u8bef\");\n-\n         OwnerDto tmpOwnerDto = ownerDtos.get(0);\n-\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         String paramIn = dataFlowContext.getReqData();\n         JSONObject paramObj = JSONObject.parseObject(paramIn);\n@@ -158,19 +145,14 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n-\n-\n-\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n     }\n \n-\n     @Override\n     public int getOrder() {\n         return 0;\n     }\n \n-\n     public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n         return fileInnerServiceSMOImpl;\n     }\n@@ -179,7 +161,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         this.fileInnerServiceSMOImpl = fileInnerServiceSMOImpl;\n     }\n \n-\n     public ICommunityInnerServiceSMO getCommunityInnerServiceSMOImpl() {\n         return communityInnerServiceSMOImpl;\n     }\n@@ -188,7 +169,6 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         this.communityInnerServiceSMOImpl = communityInnerServiceSMOImpl;\n     }\n \n-\n     public IOwnerInnerServiceSMO getOwnerInnerServiceSMOImpl() {\n         return ownerInnerServiceSMOImpl;\n     }\n@@ -212,4 +192,4 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/549/AppUserBindingOwnerListener.java\nindex f1fe9853ec2..52e5dc8c230 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/549/AppUserBindingOwnerListener.java\n@@ -158,7 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/549/AppUserBindingOwnerListener.java\nindex f1fe9853ec2..52e5dc8c230 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/549/AppUserBindingOwnerListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/549/AppUserBindingOwnerListener.java\n@@ -158,7 +158,7 @@ public class AppUserBindingOwnerListener extends AbstractServiceApiPlusListener\n         paramObj.put(\"userId\", userId);\n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto,context);\n+        ownerBMOImpl.addOwnerAppUser(paramObj, tmpCommunityDto, tmpOwnerDto, context);\n \n \n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
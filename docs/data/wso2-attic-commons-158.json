{
    "project_name": "wso2-attic-commons",
    "error_id": "158",
    "information": {
        "errors": [
            {
                "line": "75",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        if (canonicalForm != null) {\n            firstTilde = canonicalForm.indexOf('~') ;\n            _csetId = Integer.parseInt(canonicalForm.substring(0, firstTilde == -1 ? canonicalForm.length() : firstTilde));\n        }\n\n        if (firstTilde != -1) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/158/CorrelationKey.java\nindex 547cd676a6e..77b39e8313b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/158/CorrelationKey.java\n@@ -72,7 +72,9 @@ public class CorrelationKey implements Serializable {\n         int firstTilde = -1;\n         if (canonicalForm != null) {\n             firstTilde = canonicalForm.indexOf('~') ;\n-            _csetId = Integer.parseInt(canonicalForm.substring(0, firstTilde == -1 ? canonicalForm.length() : firstTilde));\n+            _csetId = Integer.parseInt(canonicalForm.substring(0\n+\n+            , firstTilde == -1 ? canonicalForm.length() : firstTilde));\n         }\n \n         if (firstTilde != -1) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/158/CorrelationKey.java\nindex 547cd676a6e..234f6532b99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/158/CorrelationKey.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.common;\n \n import java.io.Serializable;\n@@ -46,180 +47,192 @@ import org.apache.ode.utils.CollectionUtils;\n  */\n public class CorrelationKey implements Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-\n-    /** CorrelationSet identifier. */\n-    private int _csetId;\n-    /** Key values. */\n-    private final String _keyValues[];\n-    /** System-Wide Unique? */\n-    private boolean unique = false;\n-\n-    /**\n-     * Constructor.\n-     * \n-     * @param csetId\n-     *            correlation set identifier\n-     * @param keyValues\n-     *            correlation key values\n-     */\n-    public CorrelationKey(int csetId, String[] keyValues) {\n-        _csetId = csetId;\n-        _keyValues = keyValues;\n+  private static final long serialVersionUID = 1L;\n+\n+  /**\n+   * CorrelationSet identifier.\n+   */\n+  private int _csetId;\n+  /**\n+   * Key values.\n+   */\n+  private final String _keyValues[];\n+  /**\n+   * System-Wide Unique?\n+   */\n+  private boolean unique = false;\n+\n+  /**\n+   * Constructor.\n+   *\n+   * @param csetId    correlation set identifier\n+   * @param keyValues correlation key values\n+   */\n+  public CorrelationKey(int csetId, String[] keyValues) {\n+    _csetId = csetId;\n+    _keyValues = keyValues;\n+  }\n+\n+  public CorrelationKey(String canonicalForm) {\n+    int firstTilde = -1;\n+    if (canonicalForm != null) {\n+      firstTilde = canonicalForm.indexOf('~');\n+      _csetId = Integer.parseInt(canonicalForm.substring(0, firstTilde == -1 ? canonicalForm.length() : firstTilde));\n     }\n \n-    public CorrelationKey(String canonicalForm) {\n-        int firstTilde = -1;\n-        if (canonicalForm != null) {\n-            firstTilde = canonicalForm.indexOf('~') ;\n-            _csetId = Integer.parseInt(canonicalForm.substring(0, firstTilde == -1 ? canonicalForm.length() : firstTilde));\n-        }\n-\n-        if (firstTilde != -1) {\n-            List<String> keys = new ArrayList<String>();\n-            char chars[] = canonicalForm.toCharArray();\n-            StringBuffer work = new StringBuffer();\n-            for (int i = firstTilde + 1; i < chars.length; ++i) {\n-                boolean isLast = (i == chars.length - 1);\n-                if (chars[i] == '~' && !isLast && chars[i + 1] == '~') {\n-                    work.append(chars[i++]);\n-                } else if (chars[i] == '~') {\n-                    keys.add(work.toString());\n-                    work = new StringBuffer();\n-                } else {\n-                    work.append(chars[i]);\n-                }\n-            }\n-            keys.add(work.toString());\n-            _keyValues = new String[keys.size()];\n-            keys.toArray(_keyValues);\n+    if (firstTilde != -1) {\n+      List<String> keys = new ArrayList<String>();\n+      char chars[] = canonicalForm.toCharArray();\n+      StringBuffer work = new StringBuffer();\n+      for (int i = firstTilde + 1; i < chars.length; ++i) {\n+        boolean isLast = (i == chars.length - 1);\n+        if (chars[i] == '~' && !isLast && chars[i + 1] == '~') {\n+          work.append(chars[i++]);\n+        } else if (chars[i] == '~') {\n+          keys.add(work.toString());\n+          work = new StringBuffer();\n         } else {\n-            _keyValues = new String[0];\n+          work.append(chars[i]);\n         }\n+      }\n+      keys.add(work.toString());\n+      _keyValues = new String[keys.size()];\n+      keys.toArray(_keyValues);\n+    } else {\n+      _keyValues = new String[0];\n     }\n-\n-    /** Return the OCorrelation id for the correlation set */\n-    public int getCSetId() {\n-        return _csetId;\n+  }\n+\n+  /**\n+   * Return the OCorrelation id for the correlation set\n+   */\n+  public int getCSetId() {\n+    return _csetId;\n+  }\n+\n+  /**\n+   * Return the values for the correlation set\n+   */\n+  public String[] getValues() {\n+    return _keyValues;\n+  }\n+\n+  /**\n+   * Check if this key matches any member in a set of keys.\n+   *\n+   * @param keys set of keys to match against\n+   * @return <code>true</code> if one of the keys in the set\n+   * <code>equals(..)</code> this key, <code>false</code>\n+   * otherwise\n+   */\n+  public boolean isMatch(CorrelationKey[] keys) {\n+    for (CorrelationKey key : keys) {\n+      if (key.equals(this)) {\n+        return true;\n+      }\n     }\n \n-    /** Return the values for the correlation set */\n-    public String[] getValues() {\n-        return _keyValues;\n+    return false;\n+  }\n+\n+  /**\n+   * Is this correlation key system-wide unique?\n+   *\n+   * @return <code>true</code> if the key is declared to be unique\n+   * otherwise <code>false</code>\n+   */\n+  public boolean isUnique() {\n+    return unique;\n+  }\n+\n+  public void setUnique(boolean unique) {\n+    this.unique = unique;\n+  }\n+\n+  /**\n+   * Equals comperator method.\n+   *\n+   * @param o <code>CorrelationKey</code> object to compare with\n+   * @return <code>true</code> if the given object\n+   */\n+  public boolean equals(Object o) {\n+    CorrelationKey okey = (CorrelationKey) o;\n+\n+    if (okey == null || okey._csetId != _csetId || okey._keyValues.length != _keyValues.length) {\n+      return false;\n     }\n \n-    /**\n-     * Check if this key matches any member in a set of keys.\n-     * \n-     * @param keys\n-     *            set of keys to match against\n-     * \n-     * @return <code>true</code> if one of the keys in the set\n-     *         <code>equals(..)</code> this key, <code>false</code>\n-     *         otherwise\n-     */\n-    public boolean isMatch(CorrelationKey[] keys) {\n-        for (CorrelationKey key : keys)\n-            if (key.equals(this)) {\n-                return true;\n-            }\n-\n+    for (int i = 0; i < _keyValues.length; ++i) {\n+      if (!_keyValues[i].equals(okey._keyValues[i])) {\n         return false;\n+      }\n     }\n \n-    /**\n-     * Is this correlation key system-wide unique?\n-     * \n-     * @return <code>true</code> if the key is declared to be unique  \n-     *         otherwise <code>false</code>\n-     */\n-    public boolean isUnique() {\n-        return unique;\n+    return true;\n+  }\n+\n+  /**\n+   * Generate a hash code from the hash codes of the elements.\n+   *\n+   * @see HashMap#hashCode\n+   * @see Object#hashCode\n+   */\n+  public int hashCode() {\n+    int hashCode = _csetId;\n+    for (String _keyValue : _keyValues) {\n+      hashCode ^= _keyValue.hashCode();\n     }\n-    \n-    public void setUnique(boolean unique) {\n-        this.unique = unique;\n+    return hashCode;\n+  }\n+\n+  public List<String> toCanonicalList() {\n+    ArrayList<String> ret = new ArrayList<String>(_keyValues.length + 1);\n+    ret.add(((Integer) _csetId).toString());\n+    for (String i : _keyValues) {\n+      ret.add(i);\n     }\n-    \n-    /**\n-     * Equals comperator method.\n-     * \n-     * @param o\n-     *            <code>CorrelationKey</code> object to compare with\n-     * \n-     * @return <code>true</code> if the given object\n-     */\n-    public boolean equals(Object o) {\n-        CorrelationKey okey = (CorrelationKey) o;\n-\n-        if (okey == null || okey._csetId != _csetId || okey._keyValues.length != _keyValues.length)\n-            return false;\n-\n-        for (int i = 0; i < _keyValues.length; ++i)\n-            if (!_keyValues[i].equals(okey._keyValues[i]))\n-                return false;\n-\n-        return true;\n-    }\n-\n-    /**\n-     * Generate a hash code from the hash codes of the elements.\n-     * \n-     * @see HashMap#hashCode\n-     * @see Object#hashCode\n-     */\n-    public int hashCode() {\n-        int hashCode = _csetId;\n-        for (String _keyValue : _keyValues)\n-            hashCode ^= _keyValue.hashCode();\n-        return hashCode;\n-    }\n-\n-    public List<String> toCanonicalList() {\n-        ArrayList<String> ret = new ArrayList<String>(_keyValues.length + 1);\n-        ret.add(((Integer) _csetId).toString());\n-        for (String i : _keyValues)\n-            ret.add(i);\n-        return ret;\n-    }\n-\n-    /**\n-     * @see Object#toString\n-     */\n-    public String toString() {\n-        StringBuffer buf = new StringBuffer(\"{CorrelationKey \");\n-        buf.append(\"setId=\");\n-        buf.append(_csetId);\n-        buf.append(\", values=\");\n-        buf.append(CollectionUtils.makeCollection(ArrayList.class, _keyValues));\n-        buf.append('}');\n-\n-        return buf.toString();\n-    }\n-\n-    public String toCanonicalString() {\n-        StringBuffer buf = new StringBuffer();\n-        buf.append(this.getCSetId());\n+    return ret;\n+  }\n+\n+  /**\n+   * @see Object#toString\n+   */\n+  public String toString() {\n+    StringBuffer buf = new StringBuffer(\"{CorrelationKey \");\n+    buf.append(\"setId=\");\n+    buf.append(_csetId);\n+    buf.append(\", values=\");\n+    buf.append(CollectionUtils.makeCollection(ArrayList.class, _keyValues));\n+    buf.append('}');\n+\n+    return buf.toString();\n+  }\n+\n+  public String toCanonicalString() {\n+    StringBuffer buf = new StringBuffer();\n+    buf.append(this.getCSetId());\n+    buf.append('~');\n+    for (int i = 0; i < getValues().length; ++i) {\n+      if (i != 0) {\n         buf.append('~');\n-        for (int i = 0; i < getValues().length; ++i) {\n-            if (i != 0)\n-                buf.append('~');\n-            escapeTilde(buf, getValues()[i]);\n-        }\n-        return buf.toString();\n+      }\n+      escapeTilde(buf, getValues()[i]);\n     }\n+    return buf.toString();\n+  }\n \n-    static void escapeTilde(StringBuffer buf, String str) {\n-        if (str == null)\n-            return;\n-        char[] chars = str.toCharArray();\n-        for (char achar : chars) {\n-            if (achar == '~') {\n-                buf.append(\"~~\");\n-            } else {\n-                buf.append(achar);\n-            }\n-        }\n+  static void escapeTilde(StringBuffer buf, String str) {\n+    if (str == null) {\n+      return;\n+    }\n+    char[] chars = str.toCharArray();\n+    for (char achar : chars) {\n+      if (achar == '~') {\n+        buf.append(\"~~\");\n+      } else {\n+        buf.append(achar);\n+      }\n     }\n+  }\n \n }\n",
            "diff_size": 239
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/158/CorrelationKey.java\nindex 547cd676a6e..85e2f1c9ee7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/158/CorrelationKey.java\n@@ -71,7 +71,7 @@ public class CorrelationKey implements Serializable {\n     public CorrelationKey(String canonicalForm) {\n         int firstTilde = -1;\n         if (canonicalForm != null) {\n-            firstTilde = canonicalForm.indexOf('~') ;\n+            firstTilde = canonicalForm.indexOf('~');\n             _csetId = Integer.parseInt(canonicalForm.substring(0, firstTilde == -1 ? canonicalForm.length() : firstTilde));\n         }\n \n@@ -222,4 +222,4 @@ public class CorrelationKey implements Serializable {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/158/CorrelationKey.java\nindex 547cd676a6e..77b39e8313b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/158/CorrelationKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/158/CorrelationKey.java\n@@ -72,7 +72,9 @@ public class CorrelationKey implements Serializable {\n         int firstTilde = -1;\n         if (canonicalForm != null) {\n             firstTilde = canonicalForm.indexOf('~') ;\n-            _csetId = Integer.parseInt(canonicalForm.substring(0, firstTilde == -1 ? canonicalForm.length() : firstTilde));\n+            _csetId = Integer.parseInt(canonicalForm.substring(0\n+\n+            , firstTilde == -1 ? canonicalForm.length() : firstTilde));\n         }\n \n         if (firstTilde != -1) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3912",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3912/LuceneIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3912/LuceneIndexProvider.java\nindex 486c1f48f2f..93db95bb2dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3912/LuceneIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3912/LuceneIndexProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema;\n \n import java.io.File;\n@@ -47,139 +48,137 @@ import static org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor.Type.UNIQU\n \n public class LuceneIndexProvider extends IndexProvider\n {\n-    static final int PRIORITY = 1;\n-\n-    private final IndexStorageFactory indexStorageFactory;\n-    private final Config config;\n-    private final OperationalMode operationalMode;\n-    private final FileSystemAbstraction fileSystem;\n-    private final Monitor monitor;\n-\n-    public LuceneIndexProvider( FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory,\n-                                IndexDirectoryStructure.Factory directoryStructureFactory, Monitor monitor, Config config,\n-                                OperationalMode operationalMode )\n+  static final int PRIORITY = 1;\n+\n+  private final IndexStorageFactory indexStorageFactory;\n+  private final Config config;\n+  private final OperationalMode operationalMode;\n+  private final FileSystemAbstraction fileSystem;\n+  private final Monitor monitor;\n+\n+  public LuceneIndexProvider(FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory,\n+                             IndexDirectoryStructure.Factory directoryStructureFactory, Monitor monitor, Config config,\n+                             OperationalMode operationalMode)\n+  {\n+    super(LuceneIndexProviderFactory.PROVIDER_DESCRIPTOR, PRIORITY, directoryStructureFactory);\n+    this.monitor = monitor;\n+    this.indexStorageFactory = buildIndexStorageFactory(fileSystem, directoryFactory);\n+    this.fileSystem = fileSystem;\n+    this.config = config;\n+    this.operationalMode = operationalMode;\n+  }\n+\n+  public static IndexDirectoryStructure.Factory defaultDirectoryStructure(File storeDir)\n+  {\n+    return IndexDirectoryStructure.directoriesByProviderKey(storeDir);\n+  }\n+\n+  /**\n+   * Visible <b>only</b> for testing.\n+   */\n+  protected IndexStorageFactory buildIndexStorageFactory(FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory)\n+  {\n+    return new IndexStorageFactory(directoryFactory, fileSystem, directoryStructure());\n+  }\n+\n+  @Override\n+  public IndexPopulator getPopulator(long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig)\n+  {\n+    SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create(descriptor, config)\n+        .withFileSystem(fileSystem)\n+        .withOperationalMode(operationalMode)\n+        .withSamplingConfig(samplingConfig)\n+        .withIndexStorage(getIndexStorage(indexId))\n+        .withWriterConfig(IndexWriterConfigs::population)\n+        .build();\n+    if (luceneIndex.isReadOnly())\n     {\n-        super( LuceneIndexProviderFactory.PROVIDER_DESCRIPTOR, PRIORITY, directoryStructureFactory );\n-        this.monitor = monitor;\n-        this.indexStorageFactory = buildIndexStorageFactory( fileSystem, directoryFactory );\n-        this.fileSystem = fileSystem;\n-        this.config = config;\n-        this.operationalMode = operationalMode;\n+      throw new UnsupportedOperationException(\"Can't create populator for read only index\");\n     }\n-\n-    public static IndexDirectoryStructure.Factory defaultDirectoryStructure( File storeDir )\n+    if (descriptor.type() == UNIQUE)\n     {\n-        return IndexDirectoryStructure.directoriesByProviderKey( storeDir );\n-    }\n-\n-    /**\n-     * Visible <b>only</b> for testing.\n-     */\n-    protected IndexStorageFactory buildIndexStorageFactory( FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory )\n+      return new UniqueLuceneIndexPopulator(luceneIndex, descriptor);\n+    } else\n     {\n-        return new IndexStorageFactory( directoryFactory, fileSystem, directoryStructure() );\n+      return new NonUniqueLuceneIndexPopulator(luceneIndex, samplingConfig);\n     }\n-\n-    @Override\n-    public IndexPopulator getPopulator( long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig )\n+  }\n+\n+  @Override\n+  public IndexAccessor getOnlineAccessor(long indexId, SchemaIndexDescriptor descriptor,\n+                                         IndexSamplingConfig samplingConfig) throws IOException\n+  {\n+    SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create(descriptor, config)\n+        .withOperationalMode(operationalMode)\n+        .withSamplingConfig(samplingConfig)\n+        .withIndexStorage(getIndexStorage(indexId))\n+        .build();\n+    luceneIndex.open();\n+    return new LuceneIndexAccessor(luceneIndex, descriptor);\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {   // Nothing to shut down\n+  }\n+\n+  @Override\n+  public InternalIndexState getInitialState(long indexId, SchemaIndexDescriptor descriptor)\n+  {\n+    PartitionedIndexStorage indexStorage = getIndexStorage(indexId);\n+    String failure = indexStorage.getStoredIndexFailure();\n+    if (failure != null)\n     {\n-        SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create( descriptor, config )\n-                                        .withFileSystem( fileSystem )\n-                                        .withOperationalMode( operationalMode )\n-                                        .withSamplingConfig( samplingConfig )\n-                                        .withIndexStorage( getIndexStorage( indexId ) )\n-                                        .withWriterConfig( IndexWriterConfigs::population )\n-                                        .build();\n-        if ( luceneIndex.isReadOnly() )\n-        {\n-            throw new UnsupportedOperationException( \"Can't create populator for read only index\" );\n-        }\n-        if ( descriptor.type() == UNIQUE )\n-        {\n-            return new UniqueLuceneIndexPopulator( luceneIndex, descriptor );\n-        }\n-        else\n-        {\n-            return new NonUniqueLuceneIndexPopulator( luceneIndex, samplingConfig );\n-        }\n+      return InternalIndexState.FAILED;\n     }\n-\n-    @Override\n-    public IndexAccessor getOnlineAccessor( long indexId, SchemaIndexDescriptor descriptor,\n-            IndexSamplingConfig samplingConfig ) throws IOException\n+    try\n     {\n-        SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create( descriptor, config )\n-                                            .withOperationalMode( operationalMode )\n-                                            .withSamplingConfig( samplingConfig )\n-                                            .withIndexStorage( getIndexStorage( indexId ) )\n-                                            .build();\n-        luceneIndex.open();\n-        return new LuceneIndexAccessor( luceneIndex, descriptor );\n-    }\n-\n-    @Override\n-    public void shutdown()\n-    {   // Nothing to shut down\n-    }\n-\n-    @Override\n-    public InternalIndexState getInitialState( long indexId, SchemaIndexDescriptor descriptor )\n-    {\n-        PartitionedIndexStorage indexStorage = getIndexStorage( indexId );\n-        String failure = indexStorage.getStoredIndexFailure();\n-        if ( failure != null )\n-        {\n-            return InternalIndexState.FAILED;\n-        }\n-        try\n-        {\n-            return indexIsOnline( indexStorage, descriptor ) ? InternalIndexState.ONLINE : InternalIndexState.POPULATING;\n-        }\n-        catch ( IOException e )\n-        {\n-            monitor.failedToOpenIndex( indexId, descriptor, \"Requesting re-population.\", e );\n-            return InternalIndexState.POPULATING;\n-        }\n-    }\n-\n-    @Override\n-    public IndexCapability getCapability( SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        return IndexCapability.NO_CAPABILITY;\n-    }\n-\n-    @Override\n-    public StoreMigrationParticipant storeMigrationParticipant( final FileSystemAbstraction fs, PageCache pageCache )\n+      return indexIsOnline(indexStorage, descriptor) ? InternalIndexState.ONLINE : InternalIndexState.POPULATING;\n+    } catch (IOException e)\n     {\n-        return new SchemaIndexMigrator( fs, this );\n+      monitor.failedToOpenIndex(indexId, descriptor, \"Requesting re-population.\", e);\n+      return InternalIndexState.POPULATING;\n     }\n-\n-    @Override\n-    public String getPopulationFailure( long indexId, SchemaIndexDescriptor descriptor ) throws IllegalStateException\n+  }\n+\n+  @Override\n+  public IndexCapability getCapability(SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    return IndexCapability.NO_CAPABILITY;\n+  }\n+\n+  @Override\n+  public StoreMigrationParticipant storeMigrationParticipant(final FileSystemAbstraction fs, PageCache pageCache)\n+  {\n+    return new SchemaIndexMigrator(fs, this);\n+  }\n+\n+  @Override\n+  public String getPopulationFailure(long indexId, SchemaIndexDescriptor descriptor) throws IllegalStateException\n+  {\n+    String failure = getIndexStorage(indexId).getStoredIndexFailure();\n+    if (failure == null)\n     {\n-        String failure = getIndexStorage( indexId ).getStoredIndexFailure();\n-        if ( failure == null )\n-        {\n-            throw new IllegalStateException( \"Index \" + indexId + \" isn't failed\" );\n-        }\n-        return failure;\n+      throw new IllegalStateException(\"Index \" + indexId + \" isn't failed\");\n     }\n+    return failure;\n+  }\n \n-    private PartitionedIndexStorage getIndexStorage( long indexId )\n-    {\n-        return indexStorageFactory.indexStorageOf( indexId );\n-    }\n+  private PartitionedIndexStorage getIndexStorage(long indexId)\n+  {\n+    return indexStorageFactory.indexStorageOf(indexId);\n+  }\n \n-    private boolean indexIsOnline( PartitionedIndexStorage indexStorage, SchemaIndexDescriptor descriptor ) throws IOException\n+  private boolean indexIsOnline(PartitionedIndexStorage indexStorage, SchemaIndexDescriptor descriptor) throws IOException\n+  {\n+    try (SchemaIndex index = LuceneSchemaIndexBuilder.create(descriptor, config).withIndexStorage(indexStorage).build())\n     {\n-        try ( SchemaIndex index = LuceneSchemaIndexBuilder.create( descriptor, config ).withIndexStorage( indexStorage ).build() )\n-        {\n-            if ( index.exists() )\n-            {\n-                index.open();\n-                return index.isOnline();\n-            }\n-            return false;\n-        }\n+      if (index.exists())\n+      {\n+        index.open();\n+        return index.isOnline();\n+      }\n+      return false;\n     }\n+  }\n }\n",
            "diff_size": 198
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3912/LuceneIndexProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3912/LuceneIndexProvider.java\nindex 486c1f48f2f..bad326db54d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3912/LuceneIndexProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3912/LuceneIndexProvider.java\n@@ -48,17 +48,15 @@ import static org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor.Type.UNIQU\n public class LuceneIndexProvider extends IndexProvider\n {\n     static final int PRIORITY = 1;\n-\n-    private final IndexStorageFactory indexStorageFactory;\n+private final IndexStorageFactory indexStorageFactory;\n     private final Config config;\n     private final OperationalMode operationalMode;\n     private final FileSystemAbstraction fileSystem;\n     private final Monitor monitor;\n \n-    public LuceneIndexProvider( FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory,\n-                                IndexDirectoryStructure.Factory directoryStructureFactory, Monitor monitor, Config config,\n+    public LuceneIndexProvider( FileSystemAbstraction fileSystem, DirectoryFactory directoryFactory, IndexDirectoryStructure.Factory directoryStructureFactory, Monitor monitor, Config config,\n                                 OperationalMode operationalMode )\n-    {\n+{\n         super( LuceneIndexProviderFactory.PROVIDER_DESCRIPTOR, PRIORITY, directoryStructureFactory );\n         this.monitor = monitor;\n         this.indexStorageFactory = buildIndexStorageFactory( fileSystem, directoryFactory );\n@@ -83,18 +81,16 @@ public class LuceneIndexProvider extends IndexProvider\n     @Override\n     public IndexPopulator getPopulator( long indexId, SchemaIndexDescriptor descriptor, IndexSamplingConfig samplingConfig )\n     {\n-        SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create( descriptor, config )\n-                                        .withFileSystem( fileSystem )\n+        SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create( descriptor, config ).withFileSystem( fileSystem )\n                                         .withOperationalMode( operationalMode )\n                                         .withSamplingConfig( samplingConfig )\n-                                        .withIndexStorage( getIndexStorage( indexId ) )\n-                                        .withWriterConfig( IndexWriterConfigs::population )\n-                                        .build();\n-        if ( luceneIndex.isReadOnly() )\n+                                        .withIndexStorage( getIndexStorage( indexId ) ).withWriterConfig( IndexWriterConfigs::population ).build();\n+if ( luceneIndex.isReadOnly() )\n         {\n             throw new UnsupportedOperationException( \"Can't create populator for read only index\" );\n         }\n-        if ( descriptor.type() == UNIQUE )\n+\n+if ( descriptor.type() == UNIQUE )\n         {\n             return new UniqueLuceneIndexPopulator( luceneIndex, descriptor );\n         }\n@@ -107,19 +103,18 @@ public class LuceneIndexProvider extends IndexProvider\n     @Override\n     public IndexAccessor getOnlineAccessor( long indexId, SchemaIndexDescriptor descriptor,\n             IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n-        SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create( descriptor, config )\n-                                            .withOperationalMode( operationalMode )\n+{\n+        SchemaIndex luceneIndex = LuceneSchemaIndexBuilder.create( descriptor, config ).withOperationalMode( operationalMode )\n                                             .withSamplingConfig( samplingConfig )\n-                                            .withIndexStorage( getIndexStorage( indexId ) )\n-                                            .build();\n-        luceneIndex.open();\n+                                            .withIndexStorage( getIndexStorage( indexId ) ).build();\n+luceneIndex.open();\n         return new LuceneIndexAccessor( luceneIndex, descriptor );\n     }\n \n     @Override\n     public void shutdown()\n-    {   // Nothing to shut down\n+    {\n+    // Nothing to shut down\n     }\n \n     @Override\n@@ -131,7 +126,8 @@ public class LuceneIndexProvider extends IndexProvider\n         {\n             return InternalIndexState.FAILED;\n         }\n-        try\n+\n+try\n         {\n             return indexIsOnline( indexStorage, descriptor ) ? InternalIndexState.ONLINE : InternalIndexState.POPULATING;\n         }\n@@ -162,7 +158,8 @@ public class LuceneIndexProvider extends IndexProvider\n         {\n             throw new IllegalStateException( \"Index \" + indexId + \" isn't failed\" );\n         }\n-        return failure;\n+\n+return failure;\n     }\n \n     private PartitionedIndexStorage getIndexStorage( long indexId )\n@@ -182,4 +179,4 @@ public class LuceneIndexProvider extends IndexProvider\n             return false;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "605",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/605/BoltKernelGraphDatabaseServiceProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/605/BoltKernelGraphDatabaseServiceProvider.java\nindex 3b71be1a8ef..2cb5346bf86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/605/BoltKernelGraphDatabaseServiceProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/605/BoltKernelGraphDatabaseServiceProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.dbapi.impl;\n \n import java.time.Duration;\n@@ -52,61 +53,61 @@ public class BoltKernelGraphDatabaseServiceProvider implements BoltGraphDatabase\n     private final NamedDatabaseId namedDatabaseId;\n     private final Duration perBookmarkTimeout;\n \n-    public BoltKernelGraphDatabaseServiceProvider( GraphDatabaseAPI databaseAPI, TransactionIdTracker transactionIdTracker, Duration perBookmarkTimeout )\n+    public BoltKernelGraphDatabaseServiceProvider(GraphDatabaseAPI databaseAPI, TransactionIdTracker transactionIdTracker, Duration perBookmarkTimeout)\n     {\n         this.databaseAPI = databaseAPI;\n-        this.queryExecutionEngine = resolveDependency( databaseAPI, QueryExecutionEngine.class );\n+        this.queryExecutionEngine = resolveDependency(databaseAPI, QueryExecutionEngine.class);\n         this.transactionIdTracker = transactionIdTracker;\n-        this.transactionalContextFactory = newTransactionalContextFactory( databaseAPI );\n-        this.namedDatabaseId = resolveDependency( databaseAPI, Database.class ).getNamedDatabaseId();\n+        this.transactionalContextFactory = newTransactionalContextFactory(databaseAPI);\n+        this.namedDatabaseId = resolveDependency(databaseAPI, Database.class).getNamedDatabaseId();\n         this.perBookmarkTimeout = perBookmarkTimeout;\n     }\n \n-    private static <T> T resolveDependency( GraphDatabaseAPI databaseContext, Class<T> clazz )\n+    private static <T> T resolveDependency(GraphDatabaseAPI databaseContext, Class<T> clazz)\n     {\n-        return databaseContext.getDependencyResolver().resolveDependency( clazz );\n+        return databaseContext.getDependencyResolver().resolveDependency(clazz);\n     }\n \n-    private static TransactionalContextFactory newTransactionalContextFactory( GraphDatabaseAPI databaseContext )\n+    private static TransactionalContextFactory newTransactionalContextFactory(GraphDatabaseAPI databaseContext)\n     {\n-        GraphDatabaseQueryService queryService = resolveDependency( databaseContext, GraphDatabaseQueryService.class );\n-        return Neo4jTransactionalContextFactory.create( queryService );\n+        GraphDatabaseQueryService queryService = resolveDependency(databaseContext, GraphDatabaseQueryService.class);\n+        return Neo4jTransactionalContextFactory.create(queryService);\n     }\n \n-    private void awaitUpToDate( List<Bookmark> bookmarks )\n+    private void awaitUpToDate(List<Bookmark> bookmarks)\n     {\n-        for ( var bookmark : bookmarks )\n+        for (var bookmark : bookmarks)\n         {\n-            var databaseId = databaseIdFromBookmarkOrCurrent( bookmark );\n-            transactionIdTracker.awaitUpToDate( databaseId, bookmark.txId(), perBookmarkTimeout );\n+            var databaseId = databaseIdFromBookmarkOrCurrent(bookmark);\n+            transactionIdTracker.awaitUpToDate(databaseId, bookmark.txId(), perBookmarkTimeout);\n         }\n     }\n \n     private BookmarkMetadata bookmarkWithTxId()\n     {\n-        return new BookmarkMetadata( transactionIdTracker.newestTransactionId( namedDatabaseId ), namedDatabaseId );\n+        return new BookmarkMetadata(transactionIdTracker.newestTransactionId(namedDatabaseId), namedDatabaseId);\n     }\n \n     @Override\n-    public BoltTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, List<Bookmark> bookmarks,\n-            Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata, RoutingContext routingContext )\n+    public BoltTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, List<Bookmark> bookmarks,\n+                                            Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata, RoutingContext routingContext)\n     {\n-        awaitUpToDate( bookmarks );\n-        InternalTransaction topLevelInternalTransaction = beginInternalTransaction( type, loginContext, clientInfo, txTimeout, txMetadata );\n+        awaitUpToDate(bookmarks);\n+        InternalTransaction topLevelInternalTransaction = beginInternalTransaction(type, loginContext, clientInfo, txTimeout, txMetadata);\n         KernelTransaction kernelTransaction = topLevelInternalTransaction.kernelTransaction();\n-        if ( KernelTransaction.Type.IMPLICIT == type )\n+        if (KernelTransaction.Type.IMPLICIT == type)\n         {\n-            return new PeriodicBoltKernelTransaction( queryExecutionEngine, transactionalContextFactory,\n-                    topLevelInternalTransaction, this::bookmarkWithTxId );\n+            return new PeriodicBoltKernelTransaction(queryExecutionEngine, transactionalContextFactory,\n+              topLevelInternalTransaction, this::bookmarkWithTxId);\n         }\n-        return new BoltKernelTransaction( queryExecutionEngine, transactionalContextFactory, kernelTransaction, topLevelInternalTransaction,\n-                this::bookmarkWithTxId );\n+        return new BoltKernelTransaction(queryExecutionEngine, transactionalContextFactory, kernelTransaction, topLevelInternalTransaction,\n+          this::bookmarkWithTxId);\n     }\n \n     @Override\n-    public boolean isPeriodicCommit( String query )\n+    public boolean isPeriodicCommit(String query)\n     {\n-        return queryExecutionEngine.isPeriodicCommit( query );\n+        return queryExecutionEngine.isPeriodicCommit(query);\n     }\n \n     @Override\n@@ -115,31 +116,30 @@ public class BoltKernelGraphDatabaseServiceProvider implements BoltGraphDatabase\n         return namedDatabaseId;\n     }\n \n-    private InternalTransaction beginInternalTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo,\n-            Duration txTimeout, Map<String,Object> txMetadata )\n+    private InternalTransaction beginInternalTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo,\n+                                                         Duration txTimeout, Map<String, Object> txMetadata)\n     {\n         InternalTransaction internalTransaction;\n-        if ( txTimeout == null )\n+        if (txTimeout == null)\n         {\n-            internalTransaction = databaseAPI.beginTransaction( type, loginContext, clientInfo );\n-        }\n-        else\n+            internalTransaction = databaseAPI.beginTransaction(type, loginContext, clientInfo);\n+        } else\n         {\n-            internalTransaction = databaseAPI.beginTransaction( type, loginContext, clientInfo, txTimeout.toMillis(), TimeUnit.MILLISECONDS );\n+            internalTransaction = databaseAPI.beginTransaction(type, loginContext, clientInfo, txTimeout.toMillis(), TimeUnit.MILLISECONDS);\n         }\n \n-        if ( txMetadata != null )\n+        if (txMetadata != null)\n         {\n-            internalTransaction.setMetaData( txMetadata );\n+            internalTransaction.setMetaData(txMetadata);\n         }\n \n         return internalTransaction;\n     }\n \n-    private NamedDatabaseId databaseIdFromBookmarkOrCurrent( Bookmark bookmark )\n+    private NamedDatabaseId databaseIdFromBookmarkOrCurrent(Bookmark bookmark)\n     {\n         var specifiedDatabaseId = bookmark.databaseId();\n-        if ( specifiedDatabaseId == null )\n+        if (specifiedDatabaseId == null)\n         {\n             // bookmark does not contain a database ID so it's an old bookmark and the current database ID should be used\n             return namedDatabaseId;\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1427",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "127",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "113",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1427/QueryStatusResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1427/QueryStatusResult.java\nindex 4cb5e0fafd0..5466ea547d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1427/QueryStatusResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1427/QueryStatusResult.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin;\n \n import java.time.ZoneId;\n@@ -46,72 +47,108 @@ public class QueryStatusResult\n {\n     public final String queryId;\n     public final String username;\n-    public final Map<String,Object> metaData;\n+    public final Map<String, Object> metaData;\n     public final String query;\n-    public final Map<String,Object> parameters;\n-    /** @since Neo4j 3.2 */\n+    public final Map<String, Object> parameters;\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final String planner;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final String runtime;\n-    /** @since Neo4j 3.2 */\n-    public final List<Map<String,String>> indexes;\n+    /**\n+     * @since Neo4j 3.2\n+     */\n+    public final List<Map<String, String>> indexes;\n     public final String startTime;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final String protocol;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final String clientAddress;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final String requestUri;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final String status;\n-    /** @since Neo4j 3.2 */\n-    public final Map<String,Object> resourceInformation;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n+    public final Map<String, Object> resourceInformation;\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final long activeLockCount;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final long elapsedTimeMillis; // TODO: this field should be of a Duration type (when Cypher supports that)\n-    /** @since Neo4j 3.2, will be {@code null} if measuring CPU time is not supported. */\n+    /**\n+     * @since Neo4j 3.2, will be {@code null} if measuring CPU time is not supported.\n+     */\n     public final Long cpuTimeMillis; // TODO: we want this field to be of a Duration type (when Cypher supports that)\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final long waitTimeMillis; // TODO: we want this field to be of a Duration type (when Cypher supports that)\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final Long idleTimeMillis; // TODO: we want this field to be of a Duration type (when Cypher supports that)\n-    /** @since Neo4j 3.2, will be {@code null} if measuring allocation is not supported. */\n+    /**\n+     * @since Neo4j 3.2, will be {@code null} if measuring allocation is not supported.\n+     */\n     public final Long allocatedBytes;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final long pageHits;\n-    /** @since Neo4j 3.2 */\n+    /**\n+     * @since Neo4j 3.2\n+     */\n     public final long pageFaults;\n-    /** @since Neo4j 3.5 */\n+    /**\n+     * @since Neo4j 3.5\n+     */\n     public final String connectionId;\n-    /** @since Neo4j 4.0 */\n+    /**\n+     * @since Neo4j 4.0\n+     */\n     public final String database;\n \n-    QueryStatusResult( ExecutingQuery query, TransactionalEntityFactory manager, ZoneId zoneId, String database ) throws InvalidArgumentsException\n+    QueryStatusResult(ExecutingQuery query, TransactionalEntityFactory manager, ZoneId zoneId, String database) throws InvalidArgumentsException\n     {\n-        this( query.snapshot(), manager, zoneId, database );\n+        this(query.snapshot(), manager, zoneId, database);\n     }\n \n-    private QueryStatusResult( QuerySnapshot query, TransactionalEntityFactory manager, ZoneId zoneId, String database ) throws InvalidArgumentsException\n+    private QueryStatusResult(QuerySnapshot query, TransactionalEntityFactory manager, ZoneId zoneId, String database) throws InvalidArgumentsException\n     {\n-        this.queryId = new QueryId( query.internalQueryId() ).toString();\n+        this.queryId = new QueryId(query.internalQueryId()).toString();\n         this.username = query.username();\n-        this.query = query.obfuscatedQueryText().orElse( null );\n+        this.query = query.obfuscatedQueryText().orElse(null);\n         this.database = database;\n-        this.parameters = asRawMap( query.obfuscatedQueryParameters().orElse( MapValue.EMPTY ), new ParameterWriter( manager ) );\n-        this.startTime = ProceduresTimeFormatHelper.formatTime( query.startTimestampMillis(), zoneId );\n-        this.elapsedTimeMillis = asMillis( query.elapsedTimeMicros() );\n+        this.parameters = asRawMap(query.obfuscatedQueryParameters().orElse(MapValue.EMPTY), new ParameterWriter(manager));\n+        this.startTime = ProceduresTimeFormatHelper.formatTime(query.startTimestampMillis(), zoneId);\n+        this.elapsedTimeMillis = asMillis(query.elapsedTimeMicros());\n         ClientConnectionInfo clientConnection = query.clientConnection();\n         this.protocol = clientConnection.protocol();\n         this.clientAddress = clientConnection.clientAddress();\n         this.requestUri = clientConnection.requestURI();\n         this.metaData = query.transactionAnnotationData();\n-        this.cpuTimeMillis = asMillis( query.cpuTimeMicros() );\n+        this.cpuTimeMillis = asMillis(query.cpuTimeMicros());\n         this.status = query.status();\n         this.resourceInformation = query.resourceInformation();\n         this.activeLockCount = query.activeLockCount();\n-        this.waitTimeMillis = asMillis( query.waitTimeMicros() );\n-        this.idleTimeMillis = asMillis( query.idleTimeMicros() );\n+        this.waitTimeMillis = asMillis(query.waitTimeMicros());\n+        this.idleTimeMillis = asMillis(query.idleTimeMicros());\n         this.planner = query.planner();\n         this.runtime = query.runtime();\n         this.indexes = query.indexes();\n@@ -122,19 +159,19 @@ public class QueryStatusResult\n         this.connectionId = clientConnection.connectionId();\n     }\n \n-    private Long asMillis( Long micros )\n+    private Long asMillis(Long micros)\n     {\n-        return micros == null ? null : TimeUnit.MICROSECONDS.toMillis( micros );\n+        return micros == null ? null : TimeUnit.MICROSECONDS.toMillis(micros);\n     }\n \n-    private static Map<String,Object> asRawMap( MapValue mapValue, ParameterWriter writer )\n+    private static Map<String, Object> asRawMap(MapValue mapValue, ParameterWriter writer)\n     {\n-        HashMap<String,Object> map = new HashMap<>();\n-        mapValue.foreach( ( s, value ) ->\n+        HashMap<String, Object> map = new HashMap<>();\n+        mapValue.foreach((s, value) ->\n         {\n-            value.writeTo( writer );\n-            map.put( s, writer.value() );\n-        } );\n+            value.writeTo(writer);\n+            map.put(s, writer.value());\n+        });\n         return map;\n     }\n \n@@ -142,25 +179,25 @@ public class QueryStatusResult\n     {\n         private final TransactionalEntityFactory entityFactory;\n \n-        private ParameterWriter( TransactionalEntityFactory entityFactory )\n+        private ParameterWriter(TransactionalEntityFactory entityFactory)\n         {\n             this.entityFactory = entityFactory;\n         }\n \n         @Override\n-        protected Node newNodeEntityById( long id )\n+        protected Node newNodeEntityById(long id)\n         {\n-            return entityFactory.newNodeEntity( id );\n+            return entityFactory.newNodeEntity(id);\n         }\n \n         @Override\n-        protected Relationship newRelationshipEntityById( long id )\n+        protected Relationship newRelationshipEntityById(long id)\n         {\n-            return entityFactory.newRelationshipEntity( id );\n+            return entityFactory.newRelationshipEntity(id);\n         }\n \n         @Override\n-        protected Point newPoint( CoordinateReferenceSystem crs, double[] coordinate )\n+        protected Point newPoint(CoordinateReferenceSystem crs, double[] coordinate)\n         {\n             return new Point()\n             {\n@@ -173,7 +210,7 @@ public class QueryStatusResult\n                 @Override\n                 public List<Coordinate> getCoordinates()\n                 {\n-                    return singletonList( new Coordinate( coordinate ) );\n+                    return singletonList(new Coordinate(coordinate));\n                 }\n \n                 @Override\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1427/QueryStatusResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1427/QueryStatusResult.java\nindex 4cb5e0fafd0..5e4480bd569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1427/QueryStatusResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1427/QueryStatusResult.java\n@@ -184,4 +184,4 @@ public class QueryStatusResult\n             };\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
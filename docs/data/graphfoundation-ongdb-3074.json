{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3074",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3074/PluginPointFactoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3074/PluginPointFactoryImpl.java\nindex eed81b9e53d..847f29c907c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3074/PluginPointFactoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3074/PluginPointFactoryImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.plugins;\n \n import java.lang.annotation.Annotation;\n@@ -41,196 +42,188 @@ import org.neo4j.graphdb.RelationshipType;\n class PluginPointFactoryImpl implements PluginPointFactory\n {\n \n-    @Override\n-    public PluginPoint createFrom( ServerPlugin plugin, Method method, Class<?> discovery )\n+  @Override\n+  public PluginPoint createFrom(ServerPlugin plugin, Method method, Class<?> discovery)\n+  {\n+    ResultConverter result = ResultConverter.get(method.getGenericReturnType());\n+    Type[] types = method.getGenericParameterTypes();\n+    Annotation[][] annotations = method.getParameterAnnotations();\n+    SourceExtractor sourceExtractor = null;\n+    DataExtractor[] extractors = new DataExtractor[types.length];\n+    for (int i = 0; i < types.length; i++)\n     {\n-        ResultConverter result = ResultConverter.get( method.getGenericReturnType() );\n-        Type[] types = method.getGenericParameterTypes();\n-        Annotation[][] annotations = method.getParameterAnnotations();\n-        SourceExtractor sourceExtractor = null;\n-        DataExtractor[] extractors = new DataExtractor[types.length];\n-        for ( int i = 0; i < types.length; i++ )\n+      Description description = null;\n+      Parameter param = null;\n+      Source source = null;\n+      for (Annotation annotation : annotations[i])\n+      {\n+        if (annotation instanceof Description)\n         {\n-            Description description = null;\n-            Parameter param = null;\n-            Source source = null;\n-            for ( Annotation annotation : annotations[i] )\n-            {\n-                if ( annotation instanceof Description )\n-                {\n-                    description = (Description) annotation;\n-                }\n-                else if ( annotation instanceof Parameter )\n-                {\n-                    param = (Parameter) annotation;\n-                }\n-                else if ( annotation instanceof Source )\n-                {\n-                    source = (Source) annotation;\n-                }\n-            }\n-            if ( param != null && source != null )\n-            {\n-                throw new IllegalStateException( String.format(\n-                        \"Method parameter %d of %s cannot be retrieved as both Parameter and Source\",\n-                        Integer.valueOf( i ), method ) );\n-            }\n-            else if ( source != null )\n-            {\n-                if ( types[i] != discovery )\n-                {\n-                    throw new IllegalStateException( \"Source parameter type (\" + types[i]\n-                                                     + \") must equal the discovery type (\" + discovery.getName() + \").\" );\n-                }\n-                if ( sourceExtractor != null )\n-                {\n-                    throw new IllegalStateException( \"Server Extension methods may have at most one Source parameter.\" );\n-                }\n-                extractors[i] = sourceExtractor = new SourceExtractor( source, description );\n-            }\n-            else if ( param != null )\n-            {\n-                extractors[i] = parameterExtractor( types[i], param, description );\n-            }\n-            else\n-            {\n-                throw new IllegalStateException(\n-                        \"Parameters of Server Extension methods must be annotated as either Source or Parameter.\" );\n-            }\n+          description = (Description) annotation;\n+        } else if (annotation instanceof Parameter)\n+        {\n+          param = (Parameter) annotation;\n+        } else if (annotation instanceof Source)\n+        {\n+          source = (Source) annotation;\n+        }\n+      }\n+      if (param != null && source != null)\n+      {\n+        throw new IllegalStateException(String.format(\n+            \"Method parameter %d of %s cannot be retrieved as both Parameter and Source\",\n+            Integer.valueOf(i), method));\n+      } else if (source != null)\n+      {\n+        if (types[i] != discovery)\n+        {\n+          throw new IllegalStateException(\"Source parameter type (\" + types[i]\n+              + \") must equal the discovery type (\" + discovery.getName() + \").\");\n+        }\n+        if (sourceExtractor != null)\n+        {\n+          throw new IllegalStateException(\"Server Extension methods may have at most one Source parameter.\");\n         }\n-        return new PluginMethod( nameOf( method ), discovery, plugin, result, method, extractors,\n-                method.getAnnotation( Description.class ) );\n+        extractors[i] = sourceExtractor = new SourceExtractor(source, description);\n+      } else if (param != null)\n+      {\n+        extractors[i] = parameterExtractor(types[i], param, description);\n+      } else\n+      {\n+        throw new IllegalStateException(\n+            \"Parameters of Server Extension methods must be annotated as either Source or Parameter.\");\n+      }\n     }\n+    return new PluginMethod(nameOf(method), discovery, plugin, result, method, extractors,\n+        method.getAnnotation(Description.class));\n+  }\n \n-    private static ParameterExtractor parameterExtractor( Type type, Parameter parameter, Description description )\n+  private static ParameterExtractor parameterExtractor(Type type, Parameter parameter, Description description)\n+  {\n+    if (type instanceof ParameterizedType)\n     {\n-        if ( type instanceof ParameterizedType )\n+      ParameterizedType paramType = (ParameterizedType) type;\n+      Class<?> raw = (Class<?>) paramType.getRawType();\n+      Type componentType = paramType.getActualTypeArguments()[0];\n+      Class<?> component = null;\n+      if (componentType instanceof Class<?>)\n+      {\n+        component = (Class<?>) componentType;\n+      }\n+      if (Set.class == raw)\n+      {\n+        TypeCaster caster = TYPES.get(component);\n+        if (caster != null)\n         {\n-            ParameterizedType paramType = (ParameterizedType) type;\n-            Class<?> raw = (Class<?>) paramType.getRawType();\n-            Type componentType = paramType.getActualTypeArguments()[0];\n-            Class<?> component = null;\n-            if ( componentType instanceof Class<?> )\n+          return new ListParameterExtractor(caster, component, parameter, description)\n+          {\n+            @Override\n+            Object convert(Object[] result)\n             {\n-                component = (Class<?>) componentType;\n-            }\n-            if ( Set.class == raw )\n-            {\n-                TypeCaster caster = TYPES.get( component );\n-                if ( caster != null )\n-                {\n-                    return new ListParameterExtractor( caster, component, parameter, description )\n-                    {\n-                        @Override\n-                        Object convert( Object[] result )\n-                        {\n-                            return new HashSet<>( Arrays.asList( result ) );\n-                        }\n-                    };\n-                }\n-            }\n-            else if ( List.class == raw || Collection.class == raw || Iterable.class == raw )\n-            {\n-                TypeCaster caster = TYPES.get( component );\n-                if ( caster != null )\n-                {\n-                    return new ListParameterExtractor( caster, component, parameter, description )\n-                    {\n-                        @Override\n-                        Object convert( Object[] result )\n-                        {\n-                            return Arrays.asList( result );\n-                        }\n-                    };\n-                }\n+              return new HashSet<>(Arrays.asList(result));\n             }\n+          };\n         }\n-        else if ( type instanceof Class<?> )\n+      } else if (List.class == raw || Collection.class == raw || Iterable.class == raw)\n+      {\n+        TypeCaster caster = TYPES.get(component);\n+        if (caster != null)\n         {\n-            Class<?> raw = (Class<?>) type;\n-            if ( raw.isArray() )\n+          return new ListParameterExtractor(caster, component, parameter, description)\n+          {\n+            @Override\n+            Object convert(Object[] result)\n             {\n-                TypeCaster caster = TYPES.get( raw.getComponentType() );\n-                if ( caster != null )\n-                {\n-                    return new ListParameterExtractor( caster, raw.getComponentType(), parameter, description )\n-                    {\n-                        @Override\n-                        Object convert( Object[] result )\n-                        {\n-                            return result;\n-                        }\n-                    };\n-                }\n-            }\n-            else\n-            {\n-                TypeCaster caster = TYPES.get( raw );\n-                if ( caster != null )\n-                {\n-                    return new ParameterExtractor( caster, raw, parameter, description );\n-                }\n+              return Arrays.asList(result);\n             }\n+          };\n         }\n-        else if ( type instanceof GenericArrayType )\n+      }\n+    } else if (type instanceof Class<?>)\n+    {\n+      Class<?> raw = (Class<?>) type;\n+      if (raw.isArray())\n+      {\n+        TypeCaster caster = TYPES.get(raw.getComponentType());\n+        if (caster != null)\n         {\n-            GenericArrayType array = (GenericArrayType) type;\n-            Type component = array.getGenericComponentType();\n-            if ( component instanceof Class<?> )\n+          return new ListParameterExtractor(caster, raw.getComponentType(), parameter, description)\n+          {\n+            @Override\n+            Object convert(Object[] result)\n             {\n-                TypeCaster caster = TYPES.get( component );\n-                if ( caster != null )\n-                {\n-                    return new ListParameterExtractor( caster, (Class<?>) component, parameter, description )\n-                    {\n-                        @Override\n-                        Object convert( Object[] result )\n-                        {\n-                            return result;\n-                        }\n-                    };\n-                }\n+              return result;\n             }\n+          };\n         }\n-        throw new IllegalStateException( \"Unsupported parameter type: \" + type );\n-    }\n-\n-    private static void put( Map<Class<?>, TypeCaster> types, TypeCaster caster, Class<?>... keys )\n+      } else\n+      {\n+        TypeCaster caster = TYPES.get(raw);\n+        if (caster != null)\n+        {\n+          return new ParameterExtractor(caster, raw, parameter, description);\n+        }\n+      }\n+    } else if (type instanceof GenericArrayType)\n     {\n-        for ( Class<?> key : keys )\n+      GenericArrayType array = (GenericArrayType) type;\n+      Type component = array.getGenericComponentType();\n+      if (component instanceof Class<?>)\n+      {\n+        TypeCaster caster = TYPES.get(component);\n+        if (caster != null)\n         {\n-            types.put( key, caster );\n+          return new ListParameterExtractor(caster, (Class<?>) component, parameter, description)\n+          {\n+            @Override\n+            Object convert(Object[] result)\n+            {\n+              return result;\n+            }\n+          };\n         }\n+      }\n     }\n+    throw new IllegalStateException(\"Unsupported parameter type: \" + type);\n+  }\n \n-    private static final Map<Class<?>, TypeCaster> TYPES = new HashMap<>();\n-    static\n+  private static void put(Map<Class<?>, TypeCaster> types, TypeCaster caster, Class<?>... keys)\n+  {\n+    for (Class<?> key : keys)\n     {\n-        put( TYPES, new StringTypeCaster(), String.class );\n-        put( TYPES, new ByteTypeCaster(), byte.class, Byte.class );\n-        put( TYPES, new ShortTypeCaster(), short.class, Short.class );\n-        put( TYPES, new IntegerTypeCaster(), int.class, Integer.class );\n-        put( TYPES, new LongTypeCaster(), long.class, Long.class );\n-        put( TYPES, new CharacterTypeCaster(), char.class, Character.class );\n-        put( TYPES, new BooleanTypeCaster(), boolean.class, Boolean.class );\n-        put( TYPES, new FloatTypeCaster(), float.class, Float.class );\n-        put( TYPES, new DoubleTypeCaster(), double.class, Double.class );\n-        put( TYPES, new MapTypeCaster(), Map.class );\n-        put( TYPES, new NodeTypeCaster(), Node.class );\n-        put( TYPES, new RelationshipTypeCaster(), Relationship.class );\n-        put( TYPES, new RelationshipTypeTypeCaster(), RelationshipType.class );\n-        put( TYPES, new UriTypeCaster(), URI.class );\n-        put( TYPES, new URLTypeCaster(), URL.class );\n+      types.put(key, caster);\n     }\n+  }\n \n-    private static String nameOf( Method method )\n+  private static final Map<Class<?>, TypeCaster> TYPES = new HashMap<>();\n+\n+  static\n+  {\n+    put(TYPES, new StringTypeCaster(), String.class);\n+    put(TYPES, new ByteTypeCaster(), byte.class, Byte.class);\n+    put(TYPES, new ShortTypeCaster(), short.class, Short.class);\n+    put(TYPES, new IntegerTypeCaster(), int.class, Integer.class);\n+    put(TYPES, new LongTypeCaster(), long.class, Long.class);\n+    put(TYPES, new CharacterTypeCaster(), char.class, Character.class);\n+    put(TYPES, new BooleanTypeCaster(), boolean.class, Boolean.class);\n+    put(TYPES, new FloatTypeCaster(), float.class, Float.class);\n+    put(TYPES, new DoubleTypeCaster(), double.class, Double.class);\n+    put(TYPES, new MapTypeCaster(), Map.class);\n+    put(TYPES, new NodeTypeCaster(), Node.class);\n+    put(TYPES, new RelationshipTypeCaster(), Relationship.class);\n+    put(TYPES, new RelationshipTypeTypeCaster(), RelationshipType.class);\n+    put(TYPES, new UriTypeCaster(), URI.class);\n+    put(TYPES, new URLTypeCaster(), URL.class);\n+  }\n+\n+  private static String nameOf(Method method)\n+  {\n+    Name name = method.getAnnotation(Name.class);\n+    if (name != null)\n     {\n-        Name name = method.getAnnotation( Name.class );\n-        if ( name != null )\n-        {\n-            return name.value();\n-        }\n-        return method.getName();\n+      return name.value();\n     }\n+    return method.getName();\n+  }\n \n }\n",
            "diff_size": 258
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3074/PluginPointFactoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3074/PluginPointFactoryImpl.java\nindex eed81b9e53d..fd6998aeac0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3074/PluginPointFactoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3074/PluginPointFactoryImpl.java\n@@ -40,7 +40,6 @@ import org.neo4j.graphdb.RelationshipType;\n \n class PluginPointFactoryImpl implements PluginPointFactory\n {\n-\n     @Override\n     public PluginPoint createFrom( ServerPlugin plugin, Method method, Class<?> discovery )\n     {\n@@ -71,22 +70,21 @@ class PluginPointFactoryImpl implements PluginPointFactory\n             }\n             if ( param != null && source != null )\n             {\n-                throw new IllegalStateException( String.format(\n-                        \"Method parameter %d of %s cannot be retrieved as both Parameter and Source\",\n+                throw new IllegalStateException( String.format( \"Method parameter %d of %s cannot be retrieved as both Parameter and Source\",\n                         Integer.valueOf( i ), method ) );\n             }\n             else if ( source != null )\n             {\n                 if ( types[i] != discovery )\n                 {\n-                    throw new IllegalStateException( \"Source parameter type (\" + types[i]\n-                                                     + \") must equal the discovery type (\" + discovery.getName() + \").\" );\n-                }\n+                    throw new IllegalStateException( \"Source parameter type (\" + types[i] + \") must equal the discovery type (\" + discovery.getName() + \").\" );\n+    }\n                 if ( sourceExtractor != null )\n                 {\n                     throw new IllegalStateException( \"Server Extension methods may have at most one Source parameter.\" );\n                 }\n-                extractors[i] = sourceExtractor = new SourceExtractor( source, description );\n+\n+extractors[i] = sourceExtractor = new SourceExtractor( source, description );\n             }\n             else if ( param != null )\n             {\n@@ -94,9 +92,8 @@ class PluginPointFactoryImpl implements PluginPointFactory\n             }\n             else\n             {\n-                throw new IllegalStateException(\n-                        \"Parameters of Server Extension methods must be annotated as either Source or Parameter.\" );\n-            }\n+                throw new IllegalStateException( \"Parameters of Server Extension methods must be annotated as either Source or Parameter.\" );\n+    }\n         }\n         return new PluginMethod( nameOf( method ), discovery, plugin, result, method, extractors,\n                 method.getAnnotation( Description.class ) );\n@@ -114,7 +111,8 @@ class PluginPointFactoryImpl implements PluginPointFactory\n             {\n                 component = (Class<?>) componentType;\n             }\n-            if ( Set.class == raw )\n+\n+if ( Set.class == raw )\n             {\n                 TypeCaster caster = TYPES.get( component );\n                 if ( caster != null )\n@@ -230,7 +228,7 @@ class PluginPointFactoryImpl implements PluginPointFactory\n         {\n             return name.value();\n         }\n-        return method.getName();\n-    }\n \n-}\n+return method.getName();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
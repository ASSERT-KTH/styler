{
    "project_name": "neo4j-neo4j",
    "error_id": "2244",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "156",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "225",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "230",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2244/ChunkedOutput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2244/ChunkedOutput.java\nindex 420c723a370..329ba7dc11e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2244/ChunkedOutput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2244/ChunkedOutput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.packstream;\n \n import io.netty.buffer.ByteBuf;\n@@ -54,35 +55,37 @@ public class ChunkedOutput implements PackOutput\n     private int currentChunkStartIndex;\n     private boolean closed;\n \n-    /** Are currently in the middle of writing a chunk? */\n+    /**\n+     * Are currently in the middle of writing a chunk?\n+     */\n     private boolean chunkOpen;\n     private int currentMessageStartIndex = NO_MESSAGE;\n \n-    public ChunkedOutput( Channel ch, TransportThrottleGroup throttleGroup )\n+    public ChunkedOutput(Channel ch, TransportThrottleGroup throttleGroup)\n     {\n-        this( ch, DEFAULT_BUFFER_SIZE, throttleGroup );\n+        this(ch, DEFAULT_BUFFER_SIZE, throttleGroup);\n     }\n \n-    public ChunkedOutput( Channel ch, int bufferSize, TransportThrottleGroup throttleGroup )\n+    public ChunkedOutput(Channel ch, int bufferSize, TransportThrottleGroup throttleGroup)\n     {\n-        this( ch, bufferSize, MAX_CHUNK_SIZE, throttleGroup );\n+        this(ch, bufferSize, MAX_CHUNK_SIZE, throttleGroup);\n     }\n \n-    public ChunkedOutput( Channel channel, int maxBufferSize, int maxChunkSize, TransportThrottleGroup throttleGroup )\n+    public ChunkedOutput(Channel channel, int maxBufferSize, int maxChunkSize, TransportThrottleGroup throttleGroup)\n     {\n-        this.channel = Objects.requireNonNull( channel );\n+        this.channel = Objects.requireNonNull(channel);\n         this.maxBufferSize = maxBufferSize;\n         this.maxChunkSize = maxChunkSize;\n         this.buffer = allocateBuffer();\n-        this.throttleGroup = Objects.requireNonNull( throttleGroup );\n+        this.throttleGroup = Objects.requireNonNull(throttleGroup);\n     }\n \n     @Override\n     public void beginMessage()\n     {\n-        if ( currentMessageStartIndex != NO_MESSAGE )\n+        if (currentMessageStartIndex != NO_MESSAGE)\n         {\n-            throw new IllegalStateException( \"Message has already been started, index: \" + currentMessageStartIndex );\n+            throw new IllegalStateException(\"Message has already been started, index: \" + currentMessageStartIndex);\n         }\n \n         currentMessageStartIndex = buffer.writerIndex();\n@@ -95,9 +98,9 @@ public class ChunkedOutput implements PackOutput\n         currentMessageStartIndex = NO_MESSAGE;\n \n         closeChunkIfOpen();\n-        buffer.writeShort( MESSAGE_BOUNDARY );\n+        buffer.writeShort(MESSAGE_BOUNDARY);\n \n-        if ( buffer.readableBytes() >= maxBufferSize )\n+        if (buffer.readableBytes() >= maxBufferSize)\n         {\n             flush();\n         }\n@@ -114,7 +117,7 @@ public class ChunkedOutput implements PackOutput\n     @Override\n     public void messageReset()\n     {\n-        if ( currentMessageStartIndex != NO_MESSAGE )\n+        if (currentMessageStartIndex != NO_MESSAGE)\n         {\n             reset();\n         }\n@@ -123,25 +126,24 @@ public class ChunkedOutput implements PackOutput\n     @Override\n     public PackOutput flush() throws IOException\n     {\n-        if ( buffer != null && buffer.readableBytes() > 0 )\n+        if (buffer != null && buffer.readableBytes() > 0)\n         {\n             closeChunkIfOpen();\n \n             // check for and apply write throttles\n             try\n             {\n-                throttleGroup.writeThrottle().acquire( channel );\n-            }\n-            catch ( TransportThrottleException ex )\n+                throttleGroup.writeThrottle().acquire(channel);\n+            } catch (TransportThrottleException ex)\n             {\n-                throw new BoltIOException( Status.Request.InvalidUsage, ex.getMessage(), ex );\n+                throw new BoltIOException(Status.Request.InvalidUsage, ex.getMessage(), ex);\n             }\n \n             // Local copy and clear the buffer field. This ensures that the buffer is not re-released if the flush call fails\n             ByteBuf out = this.buffer;\n             this.buffer = null;\n \n-            channel.writeAndFlush( out, channel.voidPromise() );\n+            channel.writeAndFlush(out, channel.voidPromise());\n \n             buffer = allocateBuffer();\n         }\n@@ -149,69 +151,69 @@ public class ChunkedOutput implements PackOutput\n     }\n \n     @Override\n-    public PackOutput writeByte( byte value ) throws IOException\n+    public PackOutput writeByte(byte value) throws IOException\n     {\n-        ensure( Byte.BYTES );\n-        buffer.writeByte( value );\n+        ensure(Byte.BYTES);\n+        buffer.writeByte(value);\n         return this;\n     }\n \n     @Override\n-    public PackOutput writeShort( short value ) throws IOException\n+    public PackOutput writeShort(short value) throws IOException\n     {\n-        ensure( Short.BYTES );\n-        buffer.writeShort( value );\n+        ensure(Short.BYTES);\n+        buffer.writeShort(value);\n         return this;\n     }\n \n     @Override\n-    public PackOutput writeInt( int value ) throws IOException\n+    public PackOutput writeInt(int value) throws IOException\n     {\n-        ensure( Integer.BYTES );\n-        buffer.writeInt( value );\n+        ensure(Integer.BYTES);\n+        buffer.writeInt(value);\n         return this;\n     }\n \n     @Override\n-    public PackOutput writeLong( long value ) throws IOException\n+    public PackOutput writeLong(long value) throws IOException\n     {\n-        ensure( Long.BYTES );\n-        buffer.writeLong( value );\n+        ensure(Long.BYTES);\n+        buffer.writeLong(value);\n         return this;\n     }\n \n     @Override\n-    public PackOutput writeDouble( double value ) throws IOException\n+    public PackOutput writeDouble(double value) throws IOException\n     {\n-        ensure( Double.BYTES );\n-        buffer.writeDouble( value );\n+        ensure(Double.BYTES);\n+        buffer.writeDouble(value);\n         return this;\n     }\n \n     @Override\n-    public PackOutput writeBytes( ByteBuffer data ) throws IOException\n+    public PackOutput writeBytes(ByteBuffer data) throws IOException\n     {\n-        while ( data.remaining() > 0 )\n+        while (data.remaining() > 0)\n         {\n             // Ensure there is an open chunk, and that it has at least one byte of space left\n-            ensure( 1 );\n+            ensure(1);\n \n             int oldLimit = data.limit();\n-            data.limit( data.position() + Math.min( availableBytesInCurrentChunk(), data.remaining() ) );\n-            buffer.writeBytes( data );\n-            data.limit( oldLimit );\n+            data.limit(data.position() + Math.min(availableBytesInCurrentChunk(), data.remaining()));\n+            buffer.writeBytes(data);\n+            data.limit(oldLimit);\n         }\n         return this;\n     }\n \n     @Override\n-    public PackOutput writeBytes( byte[] data, int offset, int length ) throws IOException\n+    public PackOutput writeBytes(byte[] data, int offset, int length) throws IOException\n     {\n-        if ( offset + length > data.length )\n+        if (offset + length > data.length)\n         {\n-            throw new IOException( \"Asked to write \" + length + \" bytes, but there is only \" + (data.length - offset) + \" bytes available in data provided.\" );\n+            throw new IOException(\"Asked to write \" + length + \" bytes, but there is only \" + (data.length - offset) + \" bytes available in data provided.\");\n         }\n-        return writeBytes( ByteBuffer.wrap( data, offset, length ) );\n+        return writeBytes(ByteBuffer.wrap(data, offset, length));\n     }\n \n     @Override\n@@ -220,14 +222,12 @@ public class ChunkedOutput implements PackOutput\n         try\n         {\n             flush();\n-        }\n-        catch ( IOException ignore )\n+        } catch (IOException ignore)\n         {\n-        }\n-        finally\n+        } finally\n         {\n             closed = true;\n-            if ( buffer != null )\n+            if (buffer != null)\n             {\n                 buffer.release();\n                 buffer = null;\n@@ -235,21 +235,20 @@ public class ChunkedOutput implements PackOutput\n         }\n     }\n \n-    private void ensure( int numberOfBytes ) throws IOException\n+    private void ensure(int numberOfBytes) throws IOException\n     {\n         assertOpen();\n         assertMessageStarted();\n \n-        if ( chunkOpen )\n+        if (chunkOpen)\n         {\n             int targetChunkSize = currentChunkBodySize() + numberOfBytes + CHUNK_HEADER_SIZE;\n-            if ( targetChunkSize > maxChunkSize )\n+            if (targetChunkSize > maxChunkSize)\n             {\n                 closeChunkIfOpen();\n                 startNewChunk();\n             }\n-        }\n-        else\n+        } else\n         {\n             startNewChunk();\n         }\n@@ -260,16 +259,16 @@ public class ChunkedOutput implements PackOutput\n         currentChunkStartIndex = buffer.writerIndex();\n \n         // write empty chunk header\n-        buffer.writeShort( 0 );\n+        buffer.writeShort(0);\n         chunkOpen = true;\n     }\n \n     private void closeChunkIfOpen()\n     {\n-        if ( chunkOpen )\n+        if (chunkOpen)\n         {\n             int chunkBodySize = currentChunkBodySize();\n-            buffer.setShort( currentChunkStartIndex, chunkBodySize );\n+            buffer.setShort(currentChunkStartIndex, chunkBodySize);\n             chunkOpen = false;\n         }\n     }\n@@ -286,24 +285,24 @@ public class ChunkedOutput implements PackOutput\n \n     private ByteBuf allocateBuffer()\n     {\n-        return channel.alloc().buffer( maxBufferSize );\n+        return channel.alloc().buffer(maxBufferSize);\n     }\n \n     private void assertMessageStarted()\n     {\n-        if ( currentMessageStartIndex == NO_MESSAGE )\n+        if (currentMessageStartIndex == NO_MESSAGE)\n         {\n-            throw new IllegalStateException( \"Message has not been started\" );\n+            throw new IllegalStateException(\"Message has not been started\");\n         }\n     }\n \n     private void assertOpen() throws PackOutputClosedException\n     {\n-        if ( closed )\n+        if (closed)\n         {\n             throw new PackOutputClosedException(\n-                    String.format( \"Network channel towards %s is closed. Client has probably been stopped.\", channel.remoteAddress() ),\n-                    String.format( \"%s\", channel.remoteAddress() ) );\n+              String.format(\"Network channel towards %s is closed. Client has probably been stopped.\", channel.remoteAddress()),\n+              String.format(\"%s\", channel.remoteAddress()));\n         }\n     }\n \n@@ -313,7 +312,7 @@ public class ChunkedOutput implements PackOutput\n         currentMessageStartIndex = NO_MESSAGE;\n \n         // truncate the buffer to remove all data written by an unfinished message\n-        buffer.capacity( writerIndex );\n+        buffer.capacity(writerIndex);\n         chunkOpen = false;\n     }\n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
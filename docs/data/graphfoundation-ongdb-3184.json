{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3184",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3184/TxAllPropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3184/TxAllPropertyCursor.java\nindex 14bbd97c67d..5f5f0114600 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3184/TxAllPropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3184/TxAllPropertyCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.cursor;\n \n import java.util.Iterator;\n@@ -31,55 +32,54 @@ import org.neo4j.storageengine.api.StorageProperty;\n  */\n public class TxAllPropertyCursor extends TxAbstractPropertyCursor\n {\n-    private Iterator<StorageProperty> added;\n+  private Iterator<StorageProperty> added;\n \n-    public TxAllPropertyCursor( Consumer<TxAbstractPropertyCursor> instanceCache )\n-    {\n-        super( instanceCache );\n-    }\n+  public TxAllPropertyCursor(Consumer<TxAbstractPropertyCursor> instanceCache)\n+  {\n+    super(instanceCache);\n+  }\n \n-    @Override\n-    public boolean next()\n+  @Override\n+  public boolean next()\n+  {\n+    if (added == null)\n     {\n-        if ( added == null )\n-        {\n-            while ( cursor.next() )\n-            {\n-                int propertyKeyId = cursor.get().propertyKeyId();\n-\n-                StorageProperty changedProperty = state.getChangedProperty( propertyKeyId );\n-                if ( changedProperty != null )\n-                {\n-                    this.property = changedProperty;\n-                    return true;\n-                }\n-\n-                if ( !state.isPropertyRemoved( propertyKeyId ) )\n-                {\n-                    this.property = new PropertyKeyValue( propertyKeyId, cursor.get().value() );\n-                    return true;\n-                }\n-            }\n+      while (cursor.next())\n+      {\n+        int propertyKeyId = cursor.get().propertyKeyId();\n \n-            added = state.addedProperties();\n-        }\n-\n-        if ( added != null && added.hasNext() )\n+        StorageProperty changedProperty = state.getChangedProperty(propertyKeyId);\n+        if (changedProperty != null)\n         {\n-            property = added.next();\n-            return true;\n+          this.property = changedProperty;\n+          return true;\n         }\n-        else\n+\n+        if (!state.isPropertyRemoved(propertyKeyId))\n         {\n-            property = null;\n-            return false;\n+          this.property = new PropertyKeyValue(propertyKeyId, cursor.get().value());\n+          return true;\n         }\n+      }\n+\n+      added = state.addedProperties();\n     }\n \n-    @Override\n-    public void close()\n+    if (added != null && added.hasNext())\n+    {\n+      property = added.next();\n+      return true;\n+    } else\n     {\n-        this.added = null;\n-        super.close();\n+      property = null;\n+      return false;\n     }\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    this.added = null;\n+    super.close();\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3184/TxAllPropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3184/TxAllPropertyCursor.java\nindex 14bbd97c67d..7565e8830f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3184/TxAllPropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3184/TxAllPropertyCursor.java\n@@ -46,8 +46,7 @@ public class TxAllPropertyCursor extends TxAbstractPropertyCursor\n             while ( cursor.next() )\n             {\n                 int propertyKeyId = cursor.get().propertyKeyId();\n-\n-                StorageProperty changedProperty = state.getChangedProperty( propertyKeyId );\n+StorageProperty changedProperty = state.getChangedProperty( propertyKeyId );\n                 if ( changedProperty != null )\n                 {\n                     this.property = changedProperty;\n@@ -82,4 +81,4 @@ public class TxAllPropertyCursor extends TxAbstractPropertyCursor\n         this.added = null;\n         super.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
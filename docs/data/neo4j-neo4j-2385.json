{
    "project_name": "neo4j-neo4j",
    "error_id": "2385",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2385/DefaultNodeValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2385/DefaultNodeValueIndexCursor.java\nindex 72430bf232a..83a1e1d5cdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2385/DefaultNodeValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2385/DefaultNodeValueIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.set.primitive.ImmutableLongSet;\n@@ -39,9 +40,9 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n     private final DefaultNodeCursor securityNodeCursor;\n     private int[] propertyIds;\n \n-    DefaultNodeValueIndexCursor( CursorPool<DefaultNodeValueIndexCursor> pool, DefaultNodeCursor securityNodeCursor, MemoryTracker memoryTracker )\n+    DefaultNodeValueIndexCursor(CursorPool<DefaultNodeValueIndexCursor> pool, DefaultNodeCursor securityNodeCursor, MemoryTracker memoryTracker)\n     {\n-        super( pool, memoryTracker );\n+        super(pool, memoryTracker);\n         this.securityNodeCursor = securityNodeCursor;\n     }\n \n@@ -52,31 +53,31 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n      * of all nodes in the index, we can skip checking on every node we get back.\n      */\n     @Override\n-    protected boolean canAccessAllDescribedEntities( IndexDescriptor descriptor, AccessMode accessMode )\n+    protected boolean canAccessAllDescribedEntities(IndexDescriptor descriptor, AccessMode accessMode)\n     {\n         propertyIds = descriptor.schema().getPropertyIds();\n-        final long[] labelIds = Arrays.stream( descriptor.schema().getEntityTokenIds() ).mapToLong( i -> i ).toArray();\n+        final long[] labelIds = Arrays.stream(descriptor.schema().getEntityTokenIds()).mapToLong(i -> i).toArray();\n \n-        for ( long label : labelIds )\n+        for (long label : labelIds)\n         {\n             /*\n              * If there can be nodes in the index that that are disallowed to traverse,\n              * post-filtering is needed.\n              */\n-            if ( !accessMode.allowsTraverseAllNodesWithLabel( label ) )\n+            if (!accessMode.allowsTraverseAllNodesWithLabel(label))\n             {\n                 return false;\n             }\n         }\n \n-        for ( int propId : propertyIds )\n+        for (int propId : propertyIds)\n         {\n             /*\n              * If reading the property is denied for some label,\n              * there can be property values in the index that are disallowed,\n              * so post-filtering is needed.\n              */\n-            if ( accessMode.disallowsReadPropertyForSomeLabel( propId ) )\n+            if (accessMode.disallowsReadPropertyForSomeLabel(propId))\n             {\n                 return false;\n             }\n@@ -86,9 +87,9 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n              * there can be property values in the index that are disallowed,\n              * so post-filtering is needed.\n              */\n-            for ( long label : labelIds )\n+            for (long label : labelIds)\n             {\n-                if ( !accessMode.allowsReadNodeProperty( () -> Labels.from( label ), propId ) )\n+                if (!accessMode.allowsReadNodeProperty(() -> Labels.from(label), propId))\n                 {\n                     return false;\n                 }\n@@ -98,9 +99,9 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n     }\n \n     @Override\n-    void traceOnEntity( KernelReadTracer tracer, long entity )\n+    void traceOnEntity(KernelReadTracer tracer, long entity)\n     {\n-        tracer.onNode( entity );\n+        tracer.onNode(entity);\n     }\n \n     @Override\n@@ -110,10 +111,10 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n     }\n \n     @Override\n-    protected boolean allowed( long reference, AccessMode accessMode )\n+    protected boolean allowed(long reference, AccessMode accessMode)\n     {\n-        readEntity( read -> read.singleNode( reference, securityNodeCursor ) );\n-        if ( !securityNodeCursor.next() )\n+        readEntity(read -> read.singleNode(reference, securityNodeCursor));\n+        if (!securityNodeCursor.next())\n         {\n             // This node is not visible to this security context\n             return false;\n@@ -121,18 +122,18 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n \n         boolean allowed = true;\n         long[] labels = securityNodeCursor.labelsIgnoringTxStateSetRemove().all();\n-        for ( int prop : propertyIds )\n+        for (int prop : propertyIds)\n         {\n-            allowed &= accessMode.allowsReadNodeProperty( () -> Labels.from( labels ), prop );\n+            allowed &= accessMode.allowsReadNodeProperty(() -> Labels.from(labels), prop);\n         }\n \n         return allowed;\n     }\n \n     @Override\n-    public void node( NodeCursor cursor )\n+    public void node(NodeCursor cursor)\n     {\n-        readEntity( read -> read.singleNode( entityReference(), cursor ) );\n+        readEntity(read -> read.singleNode(entityReference(), cursor));\n     }\n \n     @Override\n@@ -142,14 +143,14 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n     }\n \n     @Override\n-    protected ImmutableLongSet removed( TransactionState txState, LongSet removedFromIndex )\n+    protected ImmutableLongSet removed(TransactionState txState, LongSet removedFromIndex)\n     {\n-        return mergeToSet( txState.addedAndRemovedNodes().getRemoved(), removedFromIndex ).toImmutable();\n+        return mergeToSet(txState.addedAndRemovedNodes().getRemoved(), removedFromIndex).toImmutable();\n     }\n \n     public void release()\n     {\n-        if ( securityNodeCursor != null )\n+        if (securityNodeCursor != null)\n         {\n             securityNodeCursor.close();\n             securityNodeCursor.release();\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2385/DefaultNodeValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2385/DefaultNodeValueIndexCursor.java\nindex 72430bf232a..89a37a489c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2385/DefaultNodeValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2385/DefaultNodeValueIndexCursor.java\n@@ -155,4 +155,4 @@ class DefaultNodeValueIndexCursor extends DefaultEntityValueIndexCursor<DefaultN\n             securityNodeCursor.release();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
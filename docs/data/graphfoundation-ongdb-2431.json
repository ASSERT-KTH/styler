{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2431",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2431/Permissions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2431/Permissions.java\nindex 474da197e9f..d9b09703924 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2431/Permissions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2431/Permissions.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import java.util.Collections;\n@@ -24,25 +25,25 @@ import java.util.EnumSet;\n \n public final class Permissions\n {\n-    enum Grant\n-    {\n-        DATA_READ,\n-        DATA_WRITE,\n-        SCHEMA_READ,\n-        SCHEMA_WRITE,\n-        TOKEN_WRITE\n-    }\n+  enum Grant\n+  {\n+    DATA_READ,\n+    DATA_WRITE,\n+    SCHEMA_READ,\n+    SCHEMA_WRITE,\n+    TOKEN_WRITE\n+  }\n \n-    private final EnumSet<Grant> grants;\n+  private final EnumSet<Grant> grants;\n \n-    Permissions( Grant... grants )\n-    {\n-        this.grants = EnumSet.noneOf( Grant.class );\n-        Collections.addAll( this.grants, grants );\n-    }\n+  Permissions(Grant... grants)\n+  {\n+    this.grants = EnumSet.noneOf(Grant.class);\n+    Collections.addAll(this.grants, grants);\n+  }\n \n-    boolean permits( Grant grant )\n-    {\n-        return grants.contains( grant );\n-    }\n+  boolean permits(Grant grant)\n+  {\n+    return grants.contains(grant);\n+  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2431/Permissions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2431/Permissions.java\nindex 474da197e9f..233a9b7757d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2431/Permissions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2431/Permissions.java\n@@ -26,10 +26,7 @@ public final class Permissions\n {\n     enum Grant\n     {\n-        DATA_READ,\n-        DATA_WRITE,\n-        SCHEMA_READ,\n-        SCHEMA_WRITE,\n+        DATA_READ, DATA_WRITE, SCHEMA_READ, SCHEMA_WRITE,\n         TOKEN_WRITE\n     }\n \n@@ -45,4 +42,4 @@ public final class Permissions\n     {\n         return grants.contains( grant );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3333",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3333/DbmsOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3333/DbmsOperations.java\nindex 6cd7aaba8d2..56389652414 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3333/DbmsOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3333/DbmsOperations.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.dbms;\n \n import org.neo4j.collection.RawIterator;\n@@ -33,30 +34,36 @@ import org.neo4j.values.AnyValue;\n  */\n public interface DbmsOperations\n {\n-    //=================================================\n-    //== PROCEDURE OPERATIONS ==\n-    //=================================================\n+  //=================================================\n+  //== PROCEDURE OPERATIONS ==\n+  //=================================================\n \n-    /** Invoke a DBMS procedure by name */\n-    RawIterator<Object[],ProcedureException> procedureCallDbms(\n-            QualifiedName name,\n-            Object[] input,\n-            SecurityContext securityContext,\n-            ResourceTracker resourceTracker\n-    ) throws ProcedureException;\n+  /**\n+   * Invoke a DBMS procedure by name\n+   */\n+  RawIterator<Object[], ProcedureException> procedureCallDbms(\n+      QualifiedName name,\n+      Object[] input,\n+      SecurityContext securityContext,\n+      ResourceTracker resourceTracker\n+  ) throws ProcedureException;\n \n-    /** Invoke a DBMS procedure by id */\n-    RawIterator<Object[],ProcedureException> procedureCallDbms(\n-            int id,\n-            Object[] input,\n-            SecurityContext securityContext,\n-            ResourceTracker resourceTracker\n-    ) throws ProcedureException;\n+  /**\n+   * Invoke a DBMS procedure by id\n+   */\n+  RawIterator<Object[], ProcedureException> procedureCallDbms(\n+      int id,\n+      Object[] input,\n+      SecurityContext securityContext,\n+      ResourceTracker resourceTracker\n+  ) throws ProcedureException;\n \n-    /** Invoke a DBMS function by name */\n-    AnyValue functionCallDbms(\n-            QualifiedName name,\n-            AnyValue[] input,\n-            SecurityContext securityContext\n-    ) throws ProcedureException;\n+  /**\n+   * Invoke a DBMS function by name\n+   */\n+  AnyValue functionCallDbms(\n+      QualifiedName name,\n+      AnyValue[] input,\n+      SecurityContext securityContext\n+  ) throws ProcedureException;\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3333/DbmsOperations.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3333/DbmsOperations.java\nindex 6cd7aaba8d2..0e4bb12b31c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3333/DbmsOperations.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3333/DbmsOperations.java\n@@ -38,25 +38,19 @@ public interface DbmsOperations\n     //=================================================\n \n     /** Invoke a DBMS procedure by name */\n-    RawIterator<Object[],ProcedureException> procedureCallDbms(\n-            QualifiedName name,\n+    RawIterator<Object[],ProcedureException> procedureCallDbms( QualifiedName name,\n             Object[] input,\n             SecurityContext securityContext,\n-            ResourceTracker resourceTracker\n-    ) throws ProcedureException;\n+            ResourceTracker resourceTracker ) throws ProcedureException;\n \n     /** Invoke a DBMS procedure by id */\n-    RawIterator<Object[],ProcedureException> procedureCallDbms(\n-            int id,\n+    RawIterator<Object[],ProcedureException> procedureCallDbms( int id,\n             Object[] input,\n             SecurityContext securityContext,\n-            ResourceTracker resourceTracker\n-    ) throws ProcedureException;\n+            ResourceTracker resourceTracker ) throws ProcedureException;\n \n     /** Invoke a DBMS function by name */\n-    AnyValue functionCallDbms(\n-            QualifiedName name,\n+    AnyValue functionCallDbms( QualifiedName name,\n             AnyValue[] input,\n-            SecurityContext securityContext\n-    ) throws ProcedureException;\n-}\n+            SecurityContext securityContext ) throws ProcedureException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
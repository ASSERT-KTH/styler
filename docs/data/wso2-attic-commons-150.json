{
    "project_name": "wso2-attic-commons",
    "error_id": "150",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 140).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "//         opts.setAction(\"square\");\n//         opts.setProperty(org.apache.axis2.Constants.Configuration.ENABLE_REST, Boolean.TRUE);\n//         opts.setProperty(org.apache.axis2.Constants.Configuration.HTTP_METHOD, org.apache.axis2.Constants.Configuration.HTTP_METHOD_GET);\n//         client.setOptions(opts);\n//         OMFactory fac = OMAbstractFactory.getOMFactory();\n//         OMNamespace omNs = fac.createOMNamespace(\"http://ws.apache.org/axis2\", \"ns\");",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/150/RestClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/150/RestClient.java\nindex 32c314e7357..a966e9917d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/150/RestClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/150/RestClient.java\n@@ -1,35 +1,2 @@\n //import org.apache.axis2.addressing.EndpointReference;\n-//import org.apache.axis2.client.Options;\n-//import org.apache.axis2.client.ServiceClient;\n-//import org.apache.axis2.rpc.client.RPCServiceClient;\n-//import org.apache.axis2.databinding.utils.Constants;\n-//import static org.apache.axis2.databinding.utils.Constants.*;\n-//import org.apache.axiom.om.OMElement;\n-//import org.apache.axiom.om.OMNamespace;\n-//import org.apache.axiom.om.OMAbstractFactory;\n-//import org.apache.axiom.om.OMFactory;\n-//import org.apache.abdera.protocol.server.provider.managed.Configuration;\n-//\n-//import javax.xml.namespace.QName;\n-//public class RestClient {\n-//    public static void main(String[] args) throws Exception {\n-//         ServiceClient client = new ServiceClient();\n-//         Options opts = new Options();\n-//         opts.setTo(new EndpointReference(\"http://localhost:8281/services/SquareService/square\"));\n-//         opts.setAction(\"square\");\n-//         opts.setProperty(org.apache.axis2.Constants.Configuration.ENABLE_REST, Boolean.TRUE);\n-//         opts.setProperty(org.apache.axis2.Constants.Configuration.HTTP_METHOD, org.apache.axis2.Constants.Configuration.HTTP_METHOD_GET);\n-//         client.setOptions(opts);\n-//         OMFactory fac = OMAbstractFactory.getOMFactory();\n-//         OMNamespace omNs = fac.createOMNamespace(\"http://ws.apache.org/axis2\", \"ns\");\n-//         OMElement method = fac.createOMElement(\"square\", omNs);\n-//         OMElement value = fac.createOMElement(\"a\", omNs);\n-//         method.addChild(value);\n-//         value.setText(\"10\");\n-////          OMElement value2 = fac.createOMElement(\"b\", omNs);\n-////         method.addChild(value2);\n-////         value2.setText(\"10\");\n-//         OMElement res = client.sendReceive(method);\n-//         System.out.println(res);\n-//         }\n-//}\n+//import org.\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2485",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2485/IndexMapReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2485/IndexMapReference.java\nindex 11e436ba62a..a45fe000b91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2485/IndexMapReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2485/IndexMapReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import org.neo4j.collection.primitive.PrimitiveIntSet;\n@@ -27,97 +28,97 @@ import org.neo4j.values.storable.Value;\n \n public class IndexMapReference implements IndexMapSnapshotProvider\n {\n-    private volatile IndexMap indexMap = new IndexMap();\n+  private volatile IndexMap indexMap = new IndexMap();\n \n-    @Override\n-    public IndexMap indexMapSnapshot()\n-    {\n-        return indexMap.clone();\n-    }\n+  @Override\n+  public IndexMap indexMapSnapshot()\n+  {\n+    return indexMap.clone();\n+  }\n \n-    /**\n-     * Modifies the index map under synchronization. Accepts a {@link ThrowingFunction} which gets as input\n-     * a snapshot of the current {@link IndexMap}. That {@link IndexMap} is meant to be modified by the function\n-     * and in the end returned. The function can also return another {@link IndexMap} instance if it wants to, e.g.\n-     * for clearing the map. The returned map will be set as the current index map before exiting the method.\n-     *\n-     * This is the only way contents of the {@link IndexMap} considered the current one can be modified.\n-     *\n-     * @param modifier the function modifying the snapshot.\n-     * @throws E exception thrown by the function.\n-     */\n-    public synchronized <E extends Exception> void modify( ThrowingFunction<IndexMap,IndexMap,E> modifier ) throws E\n-    {\n-        IndexMap snapshot = indexMapSnapshot();\n-        indexMap = modifier.apply( snapshot );\n-    }\n+  /**\n+   * Modifies the index map under synchronization. Accepts a {@link ThrowingFunction} which gets as input\n+   * a snapshot of the current {@link IndexMap}. That {@link IndexMap} is meant to be modified by the function\n+   * and in the end returned. The function can also return another {@link IndexMap} instance if it wants to, e.g.\n+   * for clearing the map. The returned map will be set as the current index map before exiting the method.\n+   * <p>\n+   * This is the only way contents of the {@link IndexMap} considered the current one can be modified.\n+   *\n+   * @param modifier the function modifying the snapshot.\n+   * @throws E exception thrown by the function.\n+   */\n+  public synchronized <E extends Exception> void modify(ThrowingFunction<IndexMap, IndexMap, E> modifier) throws E\n+  {\n+    IndexMap snapshot = indexMapSnapshot();\n+    indexMap = modifier.apply(snapshot);\n+  }\n \n-    public IndexProxy getIndexProxy( long indexId ) throws IndexNotFoundKernelException\n+  public IndexProxy getIndexProxy(long indexId) throws IndexNotFoundKernelException\n+  {\n+    IndexProxy proxy = indexMap.getIndexProxy(indexId);\n+    if (proxy == null)\n     {\n-        IndexProxy proxy = indexMap.getIndexProxy( indexId );\n-        if ( proxy == null )\n-        {\n-            throw new IndexNotFoundKernelException( \"No index for index id \" + indexId + \" exists.\" );\n-        }\n-        return proxy;\n+      throw new IndexNotFoundKernelException(\"No index for index id \" + indexId + \" exists.\");\n     }\n+    return proxy;\n+  }\n \n-    public IndexProxy getIndexProxy( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n+  public IndexProxy getIndexProxy(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    IndexProxy proxy = indexMap.getIndexProxy(descriptor);\n+    if (proxy == null)\n     {\n-        IndexProxy proxy = indexMap.getIndexProxy( descriptor );\n-        if ( proxy == null )\n-        {\n-            throw new IndexNotFoundKernelException( \"No index for \" + descriptor + \" exists.\" );\n-        }\n-        return proxy;\n+      throw new IndexNotFoundKernelException(\"No index for \" + descriptor + \" exists.\");\n     }\n+    return proxy;\n+  }\n \n-    public long getIndexId( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n+  public long getIndexId(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    IndexProxy proxy = indexMap.getIndexProxy(descriptor);\n+    if (proxy == null)\n     {\n-        IndexProxy proxy = indexMap.getIndexProxy( descriptor );\n-        if ( proxy == null )\n-        {\n-            throw new IndexNotFoundKernelException( \"No index for \" + descriptor + \" exists.\" );\n-        }\n-        return indexMap.getIndexId( descriptor );\n+      throw new IndexNotFoundKernelException(\"No index for \" + descriptor + \" exists.\");\n     }\n+    return indexMap.getIndexId(descriptor);\n+  }\n \n-    public long getOnlineIndexId( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n+  public long getOnlineIndexId(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    IndexProxy proxy = getIndexProxy(descriptor);\n+    switch (proxy.getState())\n     {\n-        IndexProxy proxy = getIndexProxy( descriptor );\n-        switch ( proxy.getState() )\n-        {\n-        case ONLINE:\n-            return indexMap.getIndexId( descriptor );\n+      case ONLINE:\n+        return indexMap.getIndexId(descriptor);\n \n-        default:\n-            throw new IndexNotFoundKernelException( \"Expected index on \" + descriptor + \" to be online.\" );\n-        }\n+      default:\n+        throw new IndexNotFoundKernelException(\"Expected index on \" + descriptor + \" to be online.\");\n     }\n+  }\n \n-    public Iterable<IndexProxy> getAllIndexProxies()\n-    {\n-        return indexMap.getAllIndexProxies();\n-    }\n+  public Iterable<IndexProxy> getAllIndexProxies()\n+  {\n+    return indexMap.getAllIndexProxies();\n+  }\n \n-    public Iterable<SchemaDescriptor> getRelatedIndexes(\n-            long[] changedLabels, long[] unchangedLabels, PrimitiveIntSet properties )\n-    {\n-        return indexMap.getRelatedIndexes( changedLabels, unchangedLabels, properties );\n-    }\n+  public Iterable<SchemaDescriptor> getRelatedIndexes(\n+      long[] changedLabels, long[] unchangedLabels, PrimitiveIntSet properties)\n+  {\n+    return indexMap.getRelatedIndexes(changedLabels, unchangedLabels, properties);\n+  }\n \n-    public IndexUpdaterMap createIndexUpdaterMap( IndexUpdateMode mode )\n-    {\n-        return new IndexUpdaterMap( indexMap, mode );\n-    }\n+  public IndexUpdaterMap createIndexUpdaterMap(IndexUpdateMode mode)\n+  {\n+    return new IndexUpdaterMap(indexMap, mode);\n+  }\n \n-    public void validateBeforeCommit( SchemaDescriptor index, Value[] tuple )\n+  public void validateBeforeCommit(SchemaDescriptor index, Value[] tuple)\n+  {\n+    IndexProxy proxy = indexMap.getIndexProxy(index);\n+    if (proxy != null)\n     {\n-        IndexProxy proxy = indexMap.getIndexProxy( index );\n-        if ( proxy != null )\n-        {\n-            // Do this null-check since from the outside there's a best-effort matching going on between updates and actual indexes backing those.\n-            proxy.validateBeforeCommit( tuple );\n-        }\n+      // Do this null-check since from the outside there's a best-effort matching going on between updates and actual indexes backing those.\n+      proxy.validateBeforeCommit(tuple);\n     }\n+  }\n }\n",
            "diff_size": 96
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2485/IndexMapReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2485/IndexMapReference.java\nindex 11e436ba62a..86616a8c38c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2485/IndexMapReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2485/IndexMapReference.java\n@@ -59,7 +59,8 @@ public class IndexMapReference implements IndexMapSnapshotProvider\n         {\n             throw new IndexNotFoundKernelException( \"No index for index id \" + indexId + \" exists.\" );\n         }\n-        return proxy;\n+\n+return proxy;\n     }\n \n     public IndexProxy getIndexProxy( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n@@ -69,7 +70,8 @@ public class IndexMapReference implements IndexMapSnapshotProvider\n         {\n             throw new IndexNotFoundKernelException( \"No index for \" + descriptor + \" exists.\" );\n         }\n-        return proxy;\n+\n+return proxy;\n     }\n \n     public long getIndexId( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n@@ -79,7 +81,8 @@ public class IndexMapReference implements IndexMapSnapshotProvider\n         {\n             throw new IndexNotFoundKernelException( \"No index for \" + descriptor + \" exists.\" );\n         }\n-        return indexMap.getIndexId( descriptor );\n+\n+return indexMap.getIndexId( descriptor );\n     }\n \n     public long getOnlineIndexId( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n@@ -89,8 +92,7 @@ public class IndexMapReference implements IndexMapSnapshotProvider\n         {\n         case ONLINE:\n             return indexMap.getIndexId( descriptor );\n-\n-        default:\n+    default:\n             throw new IndexNotFoundKernelException( \"Expected index on \" + descriptor + \" to be online.\" );\n         }\n     }\n@@ -100,8 +102,7 @@ public class IndexMapReference implements IndexMapSnapshotProvider\n         return indexMap.getAllIndexProxies();\n     }\n \n-    public Iterable<SchemaDescriptor> getRelatedIndexes(\n-            long[] changedLabels, long[] unchangedLabels, PrimitiveIntSet properties )\n+    public Iterable<SchemaDescriptor> getRelatedIndexes( long[] changedLabels, long[] unchangedLabels, PrimitiveIntSet properties )\n     {\n         return indexMap.getRelatedIndexes( changedLabels, unchangedLabels, properties );\n     }\n@@ -120,4 +121,4 @@ public class IndexMapReference implements IndexMapSnapshotProvider\n             proxy.validateBeforeCommit( tuple );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
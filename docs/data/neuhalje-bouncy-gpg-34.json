{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "34",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/34/PublicKeyAlgorithm.java\nindex fa63c1f5cdd..94e14e39543 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/34/PublicKeyAlgorithm.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/34/PublicKeyAlgorithm.java\nindex fa63c1f5cdd..77e1f5b797f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/34/PublicKeyAlgorithm.java\n@@ -52,11 +52,12 @@ public enum PublicKeyAlgorithm {\n     this.algorithmId = algorithmId;\n   }\n \n-  public static PublicKeyAlgorithm fromId(int id) { // NOPMD: ShortVariable\n+  public static PublicKeyAlgorithm fromId(int id) {\n+  // NOPMD: ShortVariable\n     return MAP.get(id);\n   }\n \n   public int getAlgorithmId() {\n     return algorithmId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/34/PublicKeyAlgorithm.java\nindex fa63c1f5cdd..29a779a24e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/34/PublicKeyAlgorithm.java\n@@ -19,8 +19,10 @@ import java.util.HashMap;\n import java.util.Map;\n import org.bouncycastle.bcpg.PublicKeyAlgorithmTags;\n \n+\n public enum PublicKeyAlgorithm {\n \n+\n   RSA_GENERAL(PublicKeyAlgorithmTags.RSA_GENERAL),\n   RSA_ENCRYPT(PublicKeyAlgorithmTags.RSA_ENCRYPT),\n   RSA_SIGN(PublicKeyAlgorithmTags.RSA_SIGN),\n@@ -38,20 +40,24 @@ public enum PublicKeyAlgorithm {\n   DIFFIE_HELLMAN(PublicKeyAlgorithmTags.DIFFIE_HELLMAN),\n   ;\n \n+\n   private static final Map<Integer, PublicKeyAlgorithm> MAP = new HashMap<>();\n \n+\n   static {\n     for (final PublicKeyAlgorithm p : PublicKeyAlgorithm.values()) {\n       MAP.put(p.algorithmId, p);\n     }\n   }\n \n+\n   private final int algorithmId;\n \n   PublicKeyAlgorithm(int algorithmId) {\n     this.algorithmId = algorithmId;\n   }\n \n+\n   public static PublicKeyAlgorithm fromId(int id) { // NOPMD: ShortVariable\n     return MAP.get(id);\n   }\n@@ -59,4 +65,4 @@ public enum PublicKeyAlgorithm {\n   public int getAlgorithmId() {\n     return algorithmId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'algorithms' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/34/PublicKeyAlgorithm.java\nindex fa63c1f5cdd..98d52180622 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/34/PublicKeyAlgorithm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/34/PublicKeyAlgorithm.java\n@@ -13,7 +13,10 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms;\n+\n+package name.neuhalfen.projects.crypto.bouncycastle.openpgp.\n+\n+algorithms ;\n \n import java.util.HashMap;\n import java.util.Map;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
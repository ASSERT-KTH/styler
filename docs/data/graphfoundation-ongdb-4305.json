{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4305",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4305/CodeBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4305/CodeBlock.java\nindex cfb3839afc1..fa8f652bff6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4305/CodeBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4305/CodeBlock.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.util.Iterator;\n@@ -29,192 +30,191 @@ import static org.neo4j.codegen.TypeReference.typeReference;\n public class CodeBlock implements AutoCloseable\n {\n \n-    final ClassGenerator clazz;\n-    private MethodEmitter emitter;\n-    private final CodeBlock parent;\n-    private boolean done;\n-    private boolean continuableBlock;\n-\n-    protected LocalVariables localVariables = new LocalVariables();\n-\n-    CodeBlock( CodeBlock parent )\n-    {\n-        this( parent, parent.continuableBlock );\n-    }\n-\n-    CodeBlock( CodeBlock parent, boolean continuableBlock )\n-    {\n-        this.clazz = parent.clazz;\n-        this.emitter = parent.emitter;\n-        parent.emitter = InvalidState.IN_SUB_BLOCK;\n-        this.parent = parent;\n-        //copy over local variables from parent\n-        this.localVariables = copy( parent.localVariables );\n-        this.continuableBlock = continuableBlock;\n-    }\n-\n-    CodeBlock( ClassGenerator clazz, MethodEmitter emitter, Parameter... parameters )\n-    {\n-        this.clazz = clazz;\n-        this.emitter = emitter;\n-        this.parent = null;\n-        this.continuableBlock = false;\n-        localVariables.createNew( clazz.handle(), \"this\" );\n-        for ( Parameter parameter : parameters )\n-        {\n-            localVariables.createNew( parameter.type(), parameter.name() );\n-        }\n-    }\n-\n-    public ClassGenerator classGenerator()\n-    {\n-        return clazz;\n-    }\n-\n-    public CodeBlock parent()\n-    {\n-        return parent;\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        endBlock();\n-        if ( parent != null )\n-        {\n-            parent.emitter = emitter;\n-        }\n-        else\n-        {\n-            emitter.done();\n-        }\n-        this.emitter = InvalidState.BLOCK_CLOSED;\n-    }\n-\n-    protected void endBlock()\n-    {\n-        if ( !done )\n-        {\n-            emitter.endBlock();\n-            done = true;\n-        }\n-    }\n-\n-    public void expression( Expression expression )\n-    {\n-        emitter.expression( expression );\n-    }\n-\n-    LocalVariable local( String name )\n-    {\n-        return localVariables.get( name );\n-    }\n-\n-    public LocalVariable declare( TypeReference type, String name )\n-    {\n-        LocalVariable local = localVariables.createNew( type, name );\n-        emitter.declare( local );\n-        return local;\n-    }\n-\n-    public void assign( LocalVariable local, Expression value )\n-    {\n-        emitter.assignVariableInScope( local, value );\n-    }\n-\n-    public void assign( Class<?> type, String name, Expression value )\n-    {\n-        assign( typeReference( type ), name, value );\n-    }\n-\n-    public void assign( TypeReference type, String name, Expression value )\n-    {\n-        LocalVariable variable = localVariables.createNew( type, name );\n-        emitter.assign( variable, value );\n-    }\n-\n-    public void put( Expression target, FieldReference field, Expression value )\n-    {\n-        emitter.put( target, field, value );\n-    }\n-\n-    public Expression self()\n-    {\n-        return load( \"this\" );\n-    }\n-\n-    public Expression load( String name )\n-    {\n-        return Expression.load( local( name ) );\n-    }\n-\n-    /*\n-     * Foreach is just syntactic sugar for a while loop.\n-     *\n-     */\n-    public CodeBlock forEach( Parameter local, Expression iterable )\n-    {\n-        String iteratorName = local.name() + \"Iter\";\n-\n-        assign( Iterator.class, iteratorName, Expression.invoke( iterable,\n-                MethodReference.methodReference( Iterable.class, Iterator.class, \"iterator\" ) ) );\n-        CodeBlock block = whileLoop( Expression\n-                .invoke( load( iteratorName ), methodReference( Iterator.class, boolean.class, \"hasNext\" ) ) );\n-        block.assign( local.type(), local.name(),\n-                Expression.cast( local.type(), Expression.invoke( block.load( iteratorName ),\n-                        methodReference( Iterator.class, Object.class, \"next\" ) ) ) );\n-\n-        return block;\n-    }\n-\n-    public CodeBlock whileLoop( Expression test )\n-    {\n-        emitter.beginWhile( test );\n-        return new CodeBlock( this, true );\n-    }\n-\n-    public CodeBlock ifStatement( Expression test )\n-    {\n-        emitter.beginIf( test );\n-        return new CodeBlock( this );\n-    }\n-\n-    public CodeBlock block()\n-    {\n-        emitter.beginBlock();\n-        return new CodeBlock( this );\n-    }\n-\n-    public void tryCatch( Consumer<CodeBlock> body, Consumer<CodeBlock> onError, Parameter exception )\n-    {\n-        emitter.tryCatchBlock( body, onError, localVariables.createNew( exception.type(), exception.name() ), this );\n-    }\n-\n-    public void returns()\n-    {\n-        emitter.returns();\n-    }\n-\n-    public void returns( Expression value )\n-    {\n-        emitter.returns( value );\n-    }\n-\n-    public void continueIfPossible()\n-    {\n-        if ( continuableBlock )\n-        {\n-            emitter.continues();\n-        }\n-    }\n-\n-    public void throwException( Expression exception )\n-    {\n-        emitter.throwException( exception );\n-    }\n-\n-    public TypeReference owner()\n-    {\n-        return clazz.handle();\n-    }\n+  final ClassGenerator clazz;\n+  private MethodEmitter emitter;\n+  private final CodeBlock parent;\n+  private boolean done;\n+  private boolean continuableBlock;\n+\n+  protected LocalVariables localVariables = new LocalVariables();\n+\n+  CodeBlock(CodeBlock parent)\n+  {\n+    this(parent, parent.continuableBlock);\n+  }\n+\n+  CodeBlock(CodeBlock parent, boolean continuableBlock)\n+  {\n+    this.clazz = parent.clazz;\n+    this.emitter = parent.emitter;\n+    parent.emitter = InvalidState.IN_SUB_BLOCK;\n+    this.parent = parent;\n+    //copy over local variables from parent\n+    this.localVariables = copy(parent.localVariables);\n+    this.continuableBlock = continuableBlock;\n+  }\n+\n+  CodeBlock(ClassGenerator clazz, MethodEmitter emitter, Parameter... parameters)\n+  {\n+    this.clazz = clazz;\n+    this.emitter = emitter;\n+    this.parent = null;\n+    this.continuableBlock = false;\n+    localVariables.createNew(clazz.handle(), \"this\");\n+    for (Parameter parameter : parameters)\n+    {\n+      localVariables.createNew(parameter.type(), parameter.name());\n+    }\n+  }\n+\n+  public ClassGenerator classGenerator()\n+  {\n+    return clazz;\n+  }\n+\n+  public CodeBlock parent()\n+  {\n+    return parent;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    endBlock();\n+    if (parent != null)\n+    {\n+      parent.emitter = emitter;\n+    } else\n+    {\n+      emitter.done();\n+    }\n+    this.emitter = InvalidState.BLOCK_CLOSED;\n+  }\n+\n+  protected void endBlock()\n+  {\n+    if (!done)\n+    {\n+      emitter.endBlock();\n+      done = true;\n+    }\n+  }\n+\n+  public void expression(Expression expression)\n+  {\n+    emitter.expression(expression);\n+  }\n+\n+  LocalVariable local(String name)\n+  {\n+    return localVariables.get(name);\n+  }\n+\n+  public LocalVariable declare(TypeReference type, String name)\n+  {\n+    LocalVariable local = localVariables.createNew(type, name);\n+    emitter.declare(local);\n+    return local;\n+  }\n+\n+  public void assign(LocalVariable local, Expression value)\n+  {\n+    emitter.assignVariableInScope(local, value);\n+  }\n+\n+  public void assign(Class<?> type, String name, Expression value)\n+  {\n+    assign(typeReference(type), name, value);\n+  }\n+\n+  public void assign(TypeReference type, String name, Expression value)\n+  {\n+    LocalVariable variable = localVariables.createNew(type, name);\n+    emitter.assign(variable, value);\n+  }\n+\n+  public void put(Expression target, FieldReference field, Expression value)\n+  {\n+    emitter.put(target, field, value);\n+  }\n+\n+  public Expression self()\n+  {\n+    return load(\"this\");\n+  }\n+\n+  public Expression load(String name)\n+  {\n+    return Expression.load(local(name));\n+  }\n+\n+  /*\n+   * Foreach is just syntactic sugar for a while loop.\n+   *\n+   */\n+  public CodeBlock forEach(Parameter local, Expression iterable)\n+  {\n+    String iteratorName = local.name() + \"Iter\";\n+\n+    assign(Iterator.class, iteratorName, Expression.invoke(iterable,\n+        MethodReference.methodReference(Iterable.class, Iterator.class, \"iterator\")));\n+    CodeBlock block = whileLoop(Expression\n+        .invoke(load(iteratorName), methodReference(Iterator.class, boolean.class, \"hasNext\")));\n+    block.assign(local.type(), local.name(),\n+        Expression.cast(local.type(), Expression.invoke(block.load(iteratorName),\n+            methodReference(Iterator.class, Object.class, \"next\"))));\n+\n+    return block;\n+  }\n+\n+  public CodeBlock whileLoop(Expression test)\n+  {\n+    emitter.beginWhile(test);\n+    return new CodeBlock(this, true);\n+  }\n+\n+  public CodeBlock ifStatement(Expression test)\n+  {\n+    emitter.beginIf(test);\n+    return new CodeBlock(this);\n+  }\n+\n+  public CodeBlock block()\n+  {\n+    emitter.beginBlock();\n+    return new CodeBlock(this);\n+  }\n+\n+  public void tryCatch(Consumer<CodeBlock> body, Consumer<CodeBlock> onError, Parameter exception)\n+  {\n+    emitter.tryCatchBlock(body, onError, localVariables.createNew(exception.type(), exception.name()), this);\n+  }\n+\n+  public void returns()\n+  {\n+    emitter.returns();\n+  }\n+\n+  public void returns(Expression value)\n+  {\n+    emitter.returns(value);\n+  }\n+\n+  public void continueIfPossible()\n+  {\n+    if (continuableBlock)\n+    {\n+      emitter.continues();\n+    }\n+  }\n+\n+  public void throwException(Expression exception)\n+  {\n+    emitter.throwException(exception);\n+  }\n+\n+  public TypeReference owner()\n+  {\n+    return clazz.handle();\n+  }\n }\n",
            "diff_size": 189
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4305/CodeBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4305/CodeBlock.java\nindex cfb3839afc1..10ffbe5650d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4305/CodeBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4305/CodeBlock.java\n@@ -27,9 +27,7 @@ import static org.neo4j.codegen.MethodReference.methodReference;\n import static org.neo4j.codegen.TypeReference.typeReference;\n \n public class CodeBlock implements AutoCloseable\n-{\n-\n-    final ClassGenerator clazz;\n+{ final ClassGenerator clazz;\n     private MethodEmitter emitter;\n     private final CodeBlock parent;\n     private boolean done;\n@@ -158,13 +156,9 @@ public class CodeBlock implements AutoCloseable\n \n         assign( Iterator.class, iteratorName, Expression.invoke( iterable,\n                 MethodReference.methodReference( Iterable.class, Iterator.class, \"iterator\" ) ) );\n-        CodeBlock block = whileLoop( Expression\n-                .invoke( load( iteratorName ), methodReference( Iterator.class, boolean.class, \"hasNext\" ) ) );\n-        block.assign( local.type(), local.name(),\n-                Expression.cast( local.type(), Expression.invoke( block.load( iteratorName ),\n-                        methodReference( Iterator.class, Object.class, \"next\" ) ) ) );\n-\n-        return block;\n+CodeBlock block = whileLoop( Expression.invoke( load( iteratorName ), methodReference( Iterator.class, boolean.class, \"hasNext\" ) ) );\n+block.assign( local.type(), local.name(), Expression.cast( local.type(), Expression.invoke( block.load( iteratorName ), methodReference( Iterator.class, Object.class, \"next\" ) ) ) );\n+return block;\n     }\n \n     public CodeBlock whileLoop( Expression test )\n@@ -217,4 +211,4 @@ public class CodeBlock implements AutoCloseable\n     {\n         return clazz.handle();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
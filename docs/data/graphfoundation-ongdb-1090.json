{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1090",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1090/DatabaseRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1090/DatabaseRepresentation.java\nindex 8e85f60ee96..6a4800baceb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1090/DatabaseRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1090/DatabaseRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import org.neo4j.kernel.internal.Version;\n@@ -37,33 +38,33 @@ import static org.neo4j.server.rest.web.Surface.PATH_TRANSACTION;\n public class DatabaseRepresentation extends MappingRepresentation implements ExtensibleRepresentation\n {\n \n-    public DatabaseRepresentation()\n-    {\n-        super( RepresentationType.GRAPHDB );\n-    }\n+  public DatabaseRepresentation()\n+  {\n+    super(RepresentationType.GRAPHDB);\n+  }\n \n-    @Override\n-    public String getIdentity()\n-    {\n-        // This is in fact correct - there is only one graphdb - hence no id\n-        return null;\n-    }\n+  @Override\n+  public String getIdentity()\n+  {\n+    // This is in fact correct - there is only one graphdb - hence no id\n+    return null;\n+  }\n \n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n-    {\n-        serializer.putRelativeUri( \"node\", PATH_NODES );\n-        serializer.putRelativeUri( \"relationship\", PATH_RELATIONSHIPS );\n-        serializer.putRelativeUri( \"node_index\", PATH_NODE_INDEX );\n-        serializer.putRelativeUri( \"relationship_index\", PATH_RELATIONSHIP_INDEX );\n-        serializer.putRelativeUri( \"extensions_info\", PATH_EXTENSIONS );\n-        serializer.putRelativeUri( \"relationship_types\", PATH_RELATIONSHIP_TYPES );\n-        serializer.putRelativeUri( \"batch\", PATH_BATCH );\n-        serializer.putRelativeUri( \"cypher\", PATH_CYPHER );\n-        serializer.putRelativeUri( \"indexes\", PATH_SCHEMA_INDEX );\n-        serializer.putRelativeUri( \"constraints\", PATH_SCHEMA_CONSTRAINT );\n-        serializer.putRelativeUri( \"transaction\", PATH_TRANSACTION );\n-        serializer.putRelativeUri( \"node_labels\", PATH_LABELS );\n-        serializer.putString( \"neo4j_version\", Version.getNeo4jVersion() );\n-    }\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    serializer.putRelativeUri(\"node\", PATH_NODES);\n+    serializer.putRelativeUri(\"relationship\", PATH_RELATIONSHIPS);\n+    serializer.putRelativeUri(\"node_index\", PATH_NODE_INDEX);\n+    serializer.putRelativeUri(\"relationship_index\", PATH_RELATIONSHIP_INDEX);\n+    serializer.putRelativeUri(\"extensions_info\", PATH_EXTENSIONS);\n+    serializer.putRelativeUri(\"relationship_types\", PATH_RELATIONSHIP_TYPES);\n+    serializer.putRelativeUri(\"batch\", PATH_BATCH);\n+    serializer.putRelativeUri(\"cypher\", PATH_CYPHER);\n+    serializer.putRelativeUri(\"indexes\", PATH_SCHEMA_INDEX);\n+    serializer.putRelativeUri(\"constraints\", PATH_SCHEMA_CONSTRAINT);\n+    serializer.putRelativeUri(\"transaction\", PATH_TRANSACTION);\n+    serializer.putRelativeUri(\"node_labels\", PATH_LABELS);\n+    serializer.putString(\"neo4j_version\", Version.getNeo4jVersion());\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1090/DatabaseRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1090/DatabaseRepresentation.java\nindex 8e85f60ee96..da1ba162b8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1090/DatabaseRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1090/DatabaseRepresentation.java\n@@ -36,7 +36,6 @@ import static org.neo4j.server.rest.web.Surface.PATH_TRANSACTION;\n \n public class DatabaseRepresentation extends MappingRepresentation implements ExtensibleRepresentation\n {\n-\n     public DatabaseRepresentation()\n     {\n         super( RepresentationType.GRAPHDB );\n@@ -66,4 +65,4 @@ public class DatabaseRepresentation extends MappingRepresentation implements Ext\n         serializer.putRelativeUri( \"node_labels\", PATH_LABELS );\n         serializer.putString( \"neo4j_version\", Version.getNeo4jVersion() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1090/DatabaseRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1090/DatabaseRepresentation.java\nindex 8e85f60ee96..d7e20aa4f87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1090/DatabaseRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1090/DatabaseRepresentation.java\n@@ -20,23 +20,32 @@\n package org.neo4j.server.rest.repr;\n \n import org.neo4j.kernel.internal.Version;\n-\n import static org.neo4j.server.rest.web.Surface.PATH_BATCH;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_CYPHER;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_EXTENSIONS;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_LABELS;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_NODES;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_NODE_INDEX;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_RELATIONSHIPS;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_RELATIONSHIP_INDEX;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_RELATIONSHIP_TYPES;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_SCHEMA_CONSTRAINT;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_SCHEMA_INDEX;\n+\n import static org.neo4j.server.rest.web.Surface.PATH_TRANSACTION;\n \n public class DatabaseRepresentation extends MappingRepresentation implements ExtensibleRepresentation\n {\n-\n     public DatabaseRepresentation()\n     {\n         super( RepresentationType.GRAPHDB );\n@@ -66,4 +75,4 @@ public class DatabaseRepresentation extends MappingRepresentation implements Ext\n         serializer.putRelativeUri( \"node_labels\", PATH_LABELS );\n         serializer.putString( \"neo4j_version\", Version.getNeo4jVersion() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
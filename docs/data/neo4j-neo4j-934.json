{
    "project_name": "neo4j-neo4j",
    "error_id": "934",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/934/BasicSystemGraphRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/934/BasicSystemGraphRealm.java\nindex d51e81dfd5d..b121dfa4e74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/934/BasicSystemGraphRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/934/BasicSystemGraphRealm.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.systemgraph;\n \n import java.util.Map;\n@@ -44,59 +45,57 @@ public class BasicSystemGraphRealm extends AuthManager\n     private final AuthenticationStrategy authenticationStrategy;\n \n     public BasicSystemGraphRealm(\n-            SystemGraphRealmHelper systemGraphRealmHelper,\n-            AuthenticationStrategy authenticationStrategy )\n+      SystemGraphRealmHelper systemGraphRealmHelper,\n+      AuthenticationStrategy authenticationStrategy)\n     {\n         this.systemGraphRealmHelper = systemGraphRealmHelper;\n         this.authenticationStrategy = authenticationStrategy;\n     }\n \n     @Override\n-    public LoginContext login( Map<String,Object> authToken ) throws InvalidAuthTokenException\n+    public LoginContext login(Map<String, Object> authToken) throws InvalidAuthTokenException\n     {\n         try\n         {\n-            assertValidScheme( authToken );\n+            assertValidScheme(authToken);\n \n-            String username = AuthToken.safeCast( AuthToken.PRINCIPAL, authToken );\n-            byte[] password = AuthToken.safeCastCredentials( AuthToken.CREDENTIALS, authToken );\n+            String username = AuthToken.safeCast(AuthToken.PRINCIPAL, authToken);\n+            byte[] password = AuthToken.safeCastCredentials(AuthToken.CREDENTIALS, authToken);\n \n             try\n             {\n-                User user = systemGraphRealmHelper.getUser( username );\n-                AuthenticationResult result = authenticationStrategy.authenticate( user, password );\n-                if ( result == AuthenticationResult.SUCCESS && user.passwordChangeRequired() )\n+                User user = systemGraphRealmHelper.getUser(username);\n+                AuthenticationResult result = authenticationStrategy.authenticate(user, password);\n+                if (result == AuthenticationResult.SUCCESS && user.passwordChangeRequired())\n                 {\n                     result = AuthenticationResult.PASSWORD_CHANGE_REQUIRED;\n                 }\n-                return new BasicLoginContext( user, result );\n-            }\n-            catch ( InvalidArgumentsException | FormatException e )\n+                return new BasicLoginContext(user, result);\n+            } catch (InvalidArgumentsException | FormatException e)\n             {\n-                return new BasicLoginContext( null, AuthenticationResult.FAILURE );\n+                return new BasicLoginContext(null, AuthenticationResult.FAILURE);\n             }\n-        }\n-        finally\n+        } finally\n         {\n-            AuthToken.clearCredentials( authToken );\n+            AuthToken.clearCredentials(authToken);\n         }\n     }\n \n     @Override\n-    public void log( String message, SecurityContext securityContext )\n+    public void log(String message, SecurityContext securityContext)\n     {\n     }\n \n-    private void assertValidScheme( Map<String,Object> token ) throws InvalidAuthTokenException\n+    private void assertValidScheme(Map<String, Object> token) throws InvalidAuthTokenException\n     {\n-        String scheme = AuthToken.safeCast( AuthToken.SCHEME_KEY, token );\n-        if ( scheme.equals( \"none\" ) )\n+        String scheme = AuthToken.safeCast(AuthToken.SCHEME_KEY, token);\n+        if (scheme.equals(\"none\"))\n         {\n-            throw invalidToken( \", scheme 'none' is only allowed when auth is disabled.\" );\n+            throw invalidToken(\", scheme 'none' is only allowed when auth is disabled.\");\n         }\n-        if ( !scheme.equals( AuthToken.BASIC_SCHEME ) )\n+        if (!scheme.equals(AuthToken.BASIC_SCHEME))\n         {\n-            throw invalidToken( \", scheme '\" + scheme + \"' is not supported.\" );\n+            throw invalidToken(\", scheme '\" + scheme + \"' is not supported.\");\n         }\n     }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/934/BasicSystemGraphRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/934/BasicSystemGraphRealm.java\nindex d51e81dfd5d..3205cb2a906 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/934/BasicSystemGraphRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/934/BasicSystemGraphRealm.java\n@@ -99,4 +99,4 @@ public class BasicSystemGraphRealm extends AuthManager\n             throw invalidToken( \", scheme '\" + scheme + \"' is not supported.\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
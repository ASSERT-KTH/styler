{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4155",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4155/CheckTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4155/CheckTypes.java\nindex 545db5ef26e..3b0187ba88b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4155/CheckTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4155/CheckTypes.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.txlog.checktypes;\n \n import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n@@ -24,30 +25,30 @@ import org.neo4j.kernel.impl.transaction.command.Command;\n \n public class CheckTypes\n {\n-    public static final NodeCheckType NODE = new NodeCheckType();\n-    public static final PropertyCheckType PROPERTY = new PropertyCheckType();\n-    public static final RelationshipCheckType RELATIONSHIP = new RelationshipCheckType();\n-    public static final RelationshipGroupCheckType RELATIONSHIP_GROUP = new RelationshipGroupCheckType();\n-    public static final NeoStoreCheckType NEO_STORE = new NeoStoreCheckType();\n+  public static final NodeCheckType NODE = new NodeCheckType();\n+  public static final PropertyCheckType PROPERTY = new PropertyCheckType();\n+  public static final RelationshipCheckType RELATIONSHIP = new RelationshipCheckType();\n+  public static final RelationshipGroupCheckType RELATIONSHIP_GROUP = new RelationshipGroupCheckType();\n+  public static final NeoStoreCheckType NEO_STORE = new NeoStoreCheckType();\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static final CheckType<? extends Command, ? extends AbstractBaseRecord>[] CHECK_TYPES =\n-            new CheckType[]{NODE, PROPERTY, RELATIONSHIP, RELATIONSHIP_GROUP, NEO_STORE};\n+  @SuppressWarnings(\"unchecked\")\n+  public static final CheckType<? extends Command, ? extends AbstractBaseRecord>[] CHECK_TYPES =\n+      new CheckType[] {NODE, PROPERTY, RELATIONSHIP, RELATIONSHIP_GROUP, NEO_STORE};\n \n-    private CheckTypes()\n-    {\n-    }\n+  private CheckTypes()\n+  {\n+  }\n \n-    public static <C extends Command,R extends AbstractBaseRecord> CheckType<C,R> fromName( String name )\n+  public static <C extends Command, R extends AbstractBaseRecord> CheckType<C, R> fromName(String name)\n+  {\n+    for (CheckType<?, ?> checkType : CHECK_TYPES)\n     {\n-        for ( CheckType<?,?> checkType : CHECK_TYPES )\n-        {\n-            if ( checkType.name().equals( name ) )\n-            {\n-                //noinspection unchecked\n-                return (CheckType<C,R>) checkType;\n-            }\n-        }\n-        throw new IllegalArgumentException( \"Unknown check named \" + name );\n+      if (checkType.name().equals(name))\n+      {\n+        //noinspection unchecked\n+        return (CheckType<C, R>) checkType;\n+      }\n     }\n+    throw new IllegalArgumentException(\"Unknown check named \" + name);\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4155/CheckTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4155/CheckTypes.java\nindex 545db5ef26e..858cf0cf5e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4155/CheckTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4155/CheckTypes.java\n@@ -31,16 +31,15 @@ public class CheckTypes\n     public static final NeoStoreCheckType NEO_STORE = new NeoStoreCheckType();\n \n     @SuppressWarnings( \"unchecked\" )\n-    public static final CheckType<? extends Command, ? extends AbstractBaseRecord>[] CHECK_TYPES =\n-            new CheckType[]{NODE, PROPERTY, RELATIONSHIP, RELATIONSHIP_GROUP, NEO_STORE};\n+    public static final CheckType<? extends Command, ? extends AbstractBaseRecord>[] CHECK_TYPES = new CheckType[]{NODE, PROPERTY, RELATIONSHIP, RELATIONSHIP_GROUP, NEO_STORE};\n \n-    private CheckTypes()\n+private CheckTypes()\n     {\n     }\n \n-    public static <C extends Command,R extends AbstractBaseRecord> CheckType<C,R> fromName( String name )\n+    public static <C extends Command, R extends AbstractBaseRecord> CheckType<C,R> fromName( String name )\n     {\n-        for ( CheckType<?,?> checkType : CHECK_TYPES )\n+        for ( CheckType<?, ?> checkType : CHECK_TYPES )\n         {\n             if ( checkType.name().equals( name ) )\n             {\n@@ -50,4 +49,4 @@ public class CheckTypes\n         }\n         throw new IllegalArgumentException( \"Unknown check named \" + name );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
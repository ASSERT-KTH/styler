{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2562",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "118",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "174",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2562/HandshakeServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2562/HandshakeServer.java\nindex f649130268b..8752e7ca576 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2562/HandshakeServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2562/HandshakeServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import java.util.Collections;\n@@ -35,176 +36,169 @@ import static org.neo4j.causalclustering.protocol.handshake.StatusCode.SUCCESS;\n \n public class HandshakeServer implements ServerMessageHandler\n {\n-    private final Channel channel;\n-    private final ApplicationProtocolRepository applicationProtocolRepository;\n-    private final ModifierProtocolRepository modifierProtocolRepository;\n-    private final SupportedProtocols<Integer,ApplicationProtocol> supportedApplicationProtocol;\n-    private final ProtocolStack.Builder protocolStackBuilder = ProtocolStack.builder();\n-    private final CompletableFuture<ProtocolStack> protocolStackFuture = new CompletableFuture<>();\n-    private boolean magicReceived;\n-    private boolean initialised;\n-\n-    HandshakeServer( ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository, Channel channel )\n+  private final Channel channel;\n+  private final ApplicationProtocolRepository applicationProtocolRepository;\n+  private final ModifierProtocolRepository modifierProtocolRepository;\n+  private final SupportedProtocols<Integer, ApplicationProtocol> supportedApplicationProtocol;\n+  private final ProtocolStack.Builder protocolStackBuilder = ProtocolStack.builder();\n+  private final CompletableFuture<ProtocolStack> protocolStackFuture = new CompletableFuture<>();\n+  private boolean magicReceived;\n+  private boolean initialised;\n+\n+  HandshakeServer(ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository, Channel channel)\n+  {\n+    this.channel = channel;\n+    this.applicationProtocolRepository = applicationProtocolRepository;\n+    this.modifierProtocolRepository = modifierProtocolRepository;\n+    this.supportedApplicationProtocol = applicationProtocolRepository.supportedProtocol();\n+  }\n+\n+  public void init()\n+  {\n+    channel.writeAndFlush(InitialMagicMessage.instance());\n+    initialised = true;\n+  }\n+\n+  private void ensureMagic()\n+  {\n+    if (!magicReceived)\n     {\n-        this.channel = channel;\n-        this.applicationProtocolRepository = applicationProtocolRepository;\n-        this.modifierProtocolRepository = modifierProtocolRepository;\n-        this.supportedApplicationProtocol = applicationProtocolRepository.supportedProtocol();\n+      decline(\"No magic value received\");\n+      throw new IllegalStateException(\"Magic value not received.\");\n     }\n-\n-    public void init()\n+    if (!initialised)\n     {\n-        channel.writeAndFlush( InitialMagicMessage.instance() );\n-        initialised = true;\n+      init();\n     }\n+  }\n \n-    private void ensureMagic()\n+  @Override\n+  public void handle(InitialMagicMessage magicMessage)\n+  {\n+    if (!magicMessage.isCorrectMagic())\n     {\n-        if ( !magicReceived )\n-        {\n-            decline( \"No magic value received\" );\n-            throw new IllegalStateException( \"Magic value not received.\" );\n-        }\n-        if ( !initialised )\n-        {\n-            init();\n-        }\n+      decline(\"Incorrect magic value received\");\n     }\n+    // TODO: check clusterId as well\n \n-    @Override\n-    public void handle( InitialMagicMessage magicMessage )\n-    {\n-        if ( !magicMessage.isCorrectMagic() )\n-        {\n-            decline( \"Incorrect magic value received\" );\n-        }\n-        // TODO: check clusterId as well\n+    magicReceived = true;\n+  }\n \n-        magicReceived = true;\n-    }\n+  @Override\n+  public void handle(ApplicationProtocolRequest request)\n+  {\n+    ensureMagic();\n \n-    @Override\n-    public void handle( ApplicationProtocolRequest request )\n+    ApplicationProtocolResponse response;\n+    if (!request.protocolName().equals(supportedApplicationProtocol.identifier().canonicalName()))\n     {\n-        ensureMagic();\n-\n-        ApplicationProtocolResponse response;\n-        if ( !request.protocolName().equals( supportedApplicationProtocol.identifier().canonicalName() ) )\n-        {\n-            response = ApplicationProtocolResponse.NO_PROTOCOL;\n-            channel.writeAndFlush( response );\n-            decline( String.format( \"Requested protocol %s not supported\", request.protocolName() ) );\n-        }\n-        else\n-        {\n-            Optional<ApplicationProtocol> selected = applicationProtocolRepository.select( request.protocolName(), supportedVersionsFor( request ) );\n-\n-            if ( selected.isPresent() )\n-            {\n-                ApplicationProtocol selectedProtocol = selected.get();\n-                protocolStackBuilder.application( selectedProtocol );\n-                response = new ApplicationProtocolResponse( SUCCESS, selectedProtocol.category(), selectedProtocol.implementation() );\n-                channel.writeAndFlush( response );\n-            }\n-            else\n-            {\n-                response = ApplicationProtocolResponse.NO_PROTOCOL;\n-                channel.writeAndFlush( response );\n-                decline( String.format( \"Do not support requested protocol %s versions %s\", request.protocolName(), request.versions() ) );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void handle( ModifierProtocolRequest modifierProtocolRequest )\n+      response = ApplicationProtocolResponse.NO_PROTOCOL;\n+      channel.writeAndFlush(response);\n+      decline(String.format(\"Requested protocol %s not supported\", request.protocolName()));\n+    } else\n     {\n-        ensureMagic();\n-\n-        ModifierProtocolResponse response;\n-        Optional<ModifierProtocol> selected =\n-                modifierProtocolRepository.select( modifierProtocolRequest.protocolName(), supportedVersionsFor( modifierProtocolRequest ) );\n-\n-        if ( selected.isPresent() )\n-        {\n-            ModifierProtocol modifierProtocol = selected.get();\n-            protocolStackBuilder.modifier( modifierProtocol );\n-            response = new ModifierProtocolResponse( SUCCESS, modifierProtocol.category(), modifierProtocol.implementation() );\n-        }\n-        else\n-        {\n-            response = ModifierProtocolResponse.failure( modifierProtocolRequest.protocolName() );\n-        }\n-\n-        channel.writeAndFlush( response );\n+      Optional<ApplicationProtocol> selected = applicationProtocolRepository.select(request.protocolName(), supportedVersionsFor(request));\n+\n+      if (selected.isPresent())\n+      {\n+        ApplicationProtocol selectedProtocol = selected.get();\n+        protocolStackBuilder.application(selectedProtocol);\n+        response = new ApplicationProtocolResponse(SUCCESS, selectedProtocol.category(), selectedProtocol.implementation());\n+        channel.writeAndFlush(response);\n+      } else\n+      {\n+        response = ApplicationProtocolResponse.NO_PROTOCOL;\n+        channel.writeAndFlush(response);\n+        decline(String.format(\"Do not support requested protocol %s versions %s\", request.protocolName(), request.versions()));\n+      }\n     }\n+  }\n \n-    @Override\n-    public void handle( SwitchOverRequest switchOverRequest )\n-    {\n-        ensureMagic();\n-        ProtocolStack protocolStack = protocolStackBuilder.build();\n-        Optional<ApplicationProtocol> switchOverProtocol =\n-                applicationProtocolRepository.select( switchOverRequest.protocolName(), switchOverRequest.version() );\n-        List<ModifierProtocol> switchOverModifiers = switchOverRequest.modifierProtocols()\n-                .stream()\n-                .map( pair -> modifierProtocolRepository.select( pair.first(), pair.other() ) )\n-                .flatMap( Streams::ofOptional )\n-                .collect( Collectors.toList() );\n-\n-        if ( !switchOverProtocol.isPresent() )\n-        {\n-            channel.writeAndFlush( SwitchOverResponse.FAILURE );\n-            decline( String.format( \"Cannot switch to protocol %s version %d\", switchOverRequest.protocolName(), switchOverRequest.version() ) );\n-        }\n-        else if ( protocolStack.applicationProtocol() == null )\n-        {\n-            channel.writeAndFlush( SwitchOverResponse.FAILURE );\n-            decline( String.format( \"Attempted to switch to protocol %s version %d before negotiation complete\",\n-                    switchOverRequest.protocolName(), switchOverRequest.version() ) );\n-        }\n-        else if ( !switchOverProtocol.get().equals( protocolStack.applicationProtocol() ) )\n-        {\n-            channel.writeAndFlush( SwitchOverResponse.FAILURE );\n-            decline( String.format( \"Switch over mismatch: requested %s version %s but negotiated %s version %s\",\n-                    switchOverRequest.protocolName(), switchOverRequest.version(),\n-                    protocolStack.applicationProtocol().category(), protocolStack.applicationProtocol().implementation() ) );\n-        }\n-        else if ( !switchOverModifiers.equals( protocolStack.modifierProtocols() ) )\n-        {\n-            channel.writeAndFlush( SwitchOverResponse.FAILURE );\n-            decline( String.format( \"Switch over mismatch: requested modifiers %s but negotiated %s\",\n-                    switchOverRequest.modifierProtocols(), protocolStack.modifierProtocols() ) );\n-        }\n-        else\n-        {\n-            SwitchOverResponse response = new SwitchOverResponse( SUCCESS );\n-            channel.writeAndFlush( response );\n-\n-            protocolStackFuture.complete( protocolStack );\n-        }\n-    }\n+  @Override\n+  public void handle(ModifierProtocolRequest modifierProtocolRequest)\n+  {\n+    ensureMagic();\n \n-    private Set<String> supportedVersionsFor( ModifierProtocolRequest request )\n-    {\n-        return modifierProtocolRepository.supportedProtocolFor( request.protocolName() )\n-                .map( supported -> supported.mutuallySupportedVersionsFor( request.versions() ) )\n-                // else protocol has been excluded in config\n-                .orElse( Collections.emptySet() );\n-    }\n+    ModifierProtocolResponse response;\n+    Optional<ModifierProtocol> selected =\n+        modifierProtocolRepository.select(modifierProtocolRequest.protocolName(), supportedVersionsFor(modifierProtocolRequest));\n \n-    private Set<Integer> supportedVersionsFor( ApplicationProtocolRequest request )\n+    if (selected.isPresent())\n     {\n-        return supportedApplicationProtocol.mutuallySupportedVersionsFor( request.versions() );\n-    }\n-\n-    private void decline( String message )\n+      ModifierProtocol modifierProtocol = selected.get();\n+      protocolStackBuilder.modifier(modifierProtocol);\n+      response = new ModifierProtocolResponse(SUCCESS, modifierProtocol.category(), modifierProtocol.implementation());\n+    } else\n     {\n-        channel.dispose();\n-        protocolStackFuture.completeExceptionally( new ServerHandshakeException( message, protocolStackBuilder ) );\n+      response = ModifierProtocolResponse.failure(modifierProtocolRequest.protocolName());\n     }\n \n-    CompletableFuture<ProtocolStack> protocolStackFuture()\n+    channel.writeAndFlush(response);\n+  }\n+\n+  @Override\n+  public void handle(SwitchOverRequest switchOverRequest)\n+  {\n+    ensureMagic();\n+    ProtocolStack protocolStack = protocolStackBuilder.build();\n+    Optional<ApplicationProtocol> switchOverProtocol =\n+        applicationProtocolRepository.select(switchOverRequest.protocolName(), switchOverRequest.version());\n+    List<ModifierProtocol> switchOverModifiers = switchOverRequest.modifierProtocols()\n+        .stream()\n+        .map(pair -> modifierProtocolRepository.select(pair.first(), pair.other()))\n+        .flatMap(Streams::ofOptional)\n+        .collect(Collectors.toList());\n+\n+    if (!switchOverProtocol.isPresent())\n+    {\n+      channel.writeAndFlush(SwitchOverResponse.FAILURE);\n+      decline(String.format(\"Cannot switch to protocol %s version %d\", switchOverRequest.protocolName(), switchOverRequest.version()));\n+    } else if (protocolStack.applicationProtocol() == null)\n     {\n-        return protocolStackFuture;\n+      channel.writeAndFlush(SwitchOverResponse.FAILURE);\n+      decline(String.format(\"Attempted to switch to protocol %s version %d before negotiation complete\",\n+          switchOverRequest.protocolName(), switchOverRequest.version()));\n+    } else if (!switchOverProtocol.get().equals(protocolStack.applicationProtocol()))\n+    {\n+      channel.writeAndFlush(SwitchOverResponse.FAILURE);\n+      decline(String.format(\"Switch over mismatch: requested %s version %s but negotiated %s version %s\",\n+          switchOverRequest.protocolName(), switchOverRequest.version(),\n+          protocolStack.applicationProtocol().category(), protocolStack.applicationProtocol().implementation()));\n+    } else if (!switchOverModifiers.equals(protocolStack.modifierProtocols()))\n+    {\n+      channel.writeAndFlush(SwitchOverResponse.FAILURE);\n+      decline(String.format(\"Switch over mismatch: requested modifiers %s but negotiated %s\",\n+          switchOverRequest.modifierProtocols(), protocolStack.modifierProtocols()));\n+    } else\n+    {\n+      SwitchOverResponse response = new SwitchOverResponse(SUCCESS);\n+      channel.writeAndFlush(response);\n+\n+      protocolStackFuture.complete(protocolStack);\n     }\n+  }\n+\n+  private Set<String> supportedVersionsFor(ModifierProtocolRequest request)\n+  {\n+    return modifierProtocolRepository.supportedProtocolFor(request.protocolName())\n+        .map(supported -> supported.mutuallySupportedVersionsFor(request.versions()))\n+        // else protocol has been excluded in config\n+        .orElse(Collections.emptySet());\n+  }\n+\n+  private Set<Integer> supportedVersionsFor(ApplicationProtocolRequest request)\n+  {\n+    return supportedApplicationProtocol.mutuallySupportedVersionsFor(request.versions());\n+  }\n+\n+  private void decline(String message)\n+  {\n+    channel.dispose();\n+    protocolStackFuture.completeExceptionally(new ServerHandshakeException(message, protocolStackBuilder));\n+  }\n+\n+  CompletableFuture<ProtocolStack> protocolStackFuture()\n+  {\n+    return protocolStackFuture;\n+  }\n }\n",
            "diff_size": 239
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
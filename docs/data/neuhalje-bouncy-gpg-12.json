{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * 2048R/0x3DF16BD7C3F280F3 2015-09-27 uid [ultimate] Rezi Recipient (Password: recipient)\n   * &lt;recipient@example.com&gt; sub 2048R/0x54A3DB374F787AB7 2015-09-27 . Most implementations\n   * delegate to an implementation of {@link name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.callbacks.KeyringConfigCallback}\n   *\n   * @param keyID The password for this key is needed\n   * @return the passphrase OR null (if unknown/no passphrase)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/12/KeyringConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/12/KeyringConfig.java\nindex 2ae3c6d3e8a..0b80711a729 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/12/KeyringConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/12/KeyringConfig.java\n@@ -40,4 +40,4 @@ public interface KeyringConfig {\n    * @return calculator\n    */\n   KeyFingerPrintCalculator getKeyFingerPrintCalculator();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/12/KeyringConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/12/KeyringConfig.java\nindex 2ae3c6d3e8a..2c83be86a0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/12/KeyringConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/12/KeyringConfig.java\n@@ -13,10 +13,13 @@ import org.bouncycastle.openpgp.operator.KeyFingerPrintCalculator;\n  *\n  * @see KeyringConfigs\n  */\n+\n+\n public interface KeyringConfig {\n \n   PGPPublicKeyRingCollection getPublicKeyRings() throws IOException, PGPException;\n \n+\n   PGPSecretKeyRingCollection getSecretKeyRings() throws IOException, PGPException;\n \n   /**\n@@ -31,6 +34,8 @@ public interface KeyringConfig {\n    * @param keyID The password for this key is needed\n    * @return the passphrase OR null (if unknown/no passphrase)\n    */\n+\n+\n   @Nullable\n   char[] decryptionSecretKeyPassphraseForSecretKeyId(long keyID);\n \n@@ -39,5 +44,7 @@ public interface KeyringConfig {\n    *\n    * @return calculator\n    */\n+\n+\n   KeyFingerPrintCalculator getKeyFingerPrintCalculator();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
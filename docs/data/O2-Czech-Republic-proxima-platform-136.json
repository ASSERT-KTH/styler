{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "136",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    final String input = \"Super awesome string.\";\n    final byte[] compressed = StringCompressions.gzip(input, StandardCharsets.UTF_8);\n    Assert.assertEquals(input, StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/136/StringCompressionsTest.java\nindex 00552563dbc..8f740589291 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/136/StringCompressionsTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.util;\n \n import java.nio.charset.StandardCharsets;\n@@ -25,6 +26,7 @@ public class StringCompressionsTest {\n   public void testGzip() {\n     final String input = \"Super awesome string.\";\n     final byte[] compressed = StringCompressions.gzip(input, StandardCharsets.UTF_8);\n-    Assert.assertEquals(input, StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));\n+    Assert.assertEquals(input,\n+        StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/136/StringCompressionsTest.java\nindex 00552563dbc..5227a0c5096 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/136/StringCompressionsTest.java\n@@ -27,4 +27,4 @@ public class StringCompressionsTest {\n     final byte[] compressed = StringCompressions.gzip(input, StandardCharsets.UTF_8);\n     Assert.assertEquals(input, StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/136/StringCompressionsTest.java\nindex 00552563dbc..36df3fcb41d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/136/StringCompressionsTest.java\n@@ -19,6 +19,7 @@ import java.nio.charset.StandardCharsets;\n import org.junit.Assert;\n import org.junit.Test;\n \n+\n public class StringCompressionsTest {\n \n   @Test\n@@ -27,4 +28,4 @@ public class StringCompressionsTest {\n     final byte[] compressed = StringCompressions.gzip(input, StandardCharsets.UTF_8);\n     Assert.assertEquals(input, StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "column": "95",
                    "severity": "error",
                    "message": "'}' at column 95 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "28",
                    "column": "95",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "28",
                    "column": "96",
                    "severity": "error",
                    "message": "'}' at column 96 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "28",
                    "column": "96",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "28",
                    "column": "96",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/136/StringCompressionsTest.java\nindex 00552563dbc..41064da5b0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/136/StringCompressionsTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/136/StringCompressionsTest.java\n@@ -25,6 +25,4 @@ public class StringCompressionsTest {\n   public void testGzip() {\n     final String input = \"Super awesome string.\";\n     final byte[] compressed = StringCompressions.gzip(input, StandardCharsets.UTF_8);\n-    Assert.assertEquals(input, StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));\n-  }\n-}\n+    Assert.assertEquals(input, StringCompressions.gunzip(compressed, StandardCharsets.UTF_8));}}\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
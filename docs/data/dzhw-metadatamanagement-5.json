{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 108).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public static final Set<I18nString> ALL =\n      Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/5/ConceptAttachmentTypes.java\nindex f09f940a7d7..fc3d639efd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/5/ConceptAttachmentTypes.java\n@@ -19,5 +19,6 @@ public class ConceptAttachmentTypes {\n   public static final I18nString OTHER = new ImmutableI18nString(\"Sonstiges\", \"Other\");\n \n   public static final Set<I18nString> ALL =\n-      Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n+      Collections.unmodifiableSet(\n+          new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/5/ConceptAttachmentTypes.java\nindex f09f940a7d7..cc4520b89ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/5/ConceptAttachmentTypes.java\n@@ -20,4 +20,4 @@ public class ConceptAttachmentTypes {\n \n   public static final Set<I18nString> ALL =\n       Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/5/ConceptAttachmentTypes.java\nindex f09f940a7d7..9cc382e7ef9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/5/ConceptAttachmentTypes.java\n@@ -4,20 +4,17 @@ import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n import eu.dzhw.fdz.metadatamanagement.common.domain.ImmutableI18nString;\n \n /**\n  * All valid types of a {@link ConceptAttachmentMetadata}.\n  */\n+\n+\n public class ConceptAttachmentTypes {\n-  public static final I18nString DOCUMENTATION =\n-      new ImmutableI18nString(\"Dokumentation\", \"Documentation\");\n-  public static final I18nString INSTRUMENT =\n-      new ImmutableI18nString(\"Instrument\", \"Instrument\");\n+  public static final I18nString DOCUMENTATION = new ImmutableI18nString(\"Dokumentation\", \"Documentation\");\n+  public static final I18nString INSTRUMENT = new ImmutableI18nString(\"Instrument\", \"Instrument\");\n   public static final I18nString OTHER = new ImmutableI18nString(\"Sonstiges\", \"Other\");\n-\n-  public static final Set<I18nString> ALL =\n-      Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n-}\n+  public static final Set<I18nString> ALL = Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 6, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/5/ConceptAttachmentTypes.java\nindex f09f940a7d7..c39ff956965 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/5/ConceptAttachmentTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/5/ConceptAttachmentTypes.java\n@@ -19,5 +19,6 @@ public class ConceptAttachmentTypes {\n   public static final I18nString OTHER = new ImmutableI18nString(\"Sonstiges\", \"Other\");\n \n   public static final Set<I18nString> ALL =\n-      Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION, INSTRUMENT, OTHER)));\n-}\n+      Collections.unmodifiableSet(new HashSet<I18nString>(Arrays.asList(DOCUMENTATION ,INSTRUMENT ,OTHER)))\n+;\n+      }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
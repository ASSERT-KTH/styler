{
    "project_name": "decorators-squad-versioneye-api",
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "121",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final JsonArray users = this.team.getJsonArray(\"users\");\n        final List<UserData> members = new ArrayList<>();\n        for(int idx = 0; idx < users.size(); idx++) {\n            members.add(new JsonUserData(users.getJsonObject(idx)));\n        }\n        return members;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/28/JsonTeam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/28/JsonTeam.java\nindex 45e5170188b..d60b9e643ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/28/JsonTeam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/28/JsonTeam.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2017, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.versioneye;\n \n import java.util.ArrayList;\n@@ -45,7 +46,7 @@ final class JsonTeam implements Team {\n      * Team.\n      */\n     private JsonObject team;\n-    \n+\n     /**\n      * Ctor.\n      * @param team Given team.\n@@ -53,7 +54,7 @@ final class JsonTeam implements Team {\n     JsonTeam(final JsonObject team) {\n         this.team = team;\n     }\n-    \n+\n     @Override\n     public String teamId() {\n         return this.team.getString(\"ids\");\n@@ -118,7 +119,7 @@ final class JsonTeam implements Team {\n     public List<UserData> users() {\n         final JsonArray users = this.team.getJsonArray(\"users\");\n         final List<UserData> members = new ArrayList<>();\n-        for(int idx = 0; idx < users.size(); idx++) {\n+        for (int idx = 0; idx < users.size(); idx++) {\n             members.add(new JsonUserData(users.getJsonObject(idx)));\n         }\n         return members;\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/28/JsonTeam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/28/JsonTeam.java\nindex 45e5170188b..f855de84269 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/28/JsonTeam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/28/JsonTeam.java\n@@ -139,4 +139,4 @@ final class JsonTeam implements Team {\n         return this.team;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "123",
                    "column": "16",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "123",
                    "column": "18",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "column": "11",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "126",
                    "column": "13",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "column": "14",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "column": "4",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "column": "2",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/28/JsonTeam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/28/JsonTeam.java\nindex 45e5170188b..46392b404bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/28/JsonTeam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/28/JsonTeam.java\n@@ -29,7 +29,6 @@ package com.amihaiemil.versioneye;\n \n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.json.JsonArray;\n import javax.json.JsonObject;\n \n@@ -39,21 +38,27 @@ import javax.json.JsonObject;\n  * @version $Id: 2a05c5f2f72068eec3d89e2db8462ef1be0b2563 $\n  * @since 1.0.0\n  */\n+\n+\n final class JsonTeam implements Team {\n \n     /**\n      * Team.\n      */\n+\n+\n     private JsonObject team;\n     \n     /**\n      * Ctor.\n      * @param team Given team.\n      */\n+\n+\n     JsonTeam(final JsonObject team) {\n         this.team = team;\n     }\n-    \n+\n     @Override\n     public String teamId() {\n         return this.team.getString(\"ids\");\n@@ -115,13 +120,23 @@ final class JsonTeam implements Team {\n     }\n \n     @Override\n-    public List<UserData> users() {\n-        final JsonArray users = this.team.getJsonArray(\"users\");\n-        final List<UserData> members = new ArrayList<>();\n-        for(int idx = 0; idx < users.size(); idx++) {\n-            members.add(new JsonUserData(users.getJsonObject(idx)));\n-        }\n-        return members;\n+    public List < UserData> users() {\n+        final JsonArray users=\n+this.team.getJsonArray(\"users\");\n+final List < UserData> members=\n+new ArrayList <>();\n+\n+\n+for(int idx=\n+0 ;\n+\n+\n+idx< users.size();\n+\n+\n+                idx++) {\n+members.add(new JsonUserData(users.getJsonObject(idx)));\n+} return members;\n     }\n \n     @Override\n@@ -139,4 +154,4 @@ final class JsonTeam implements Team {\n         return this.team;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
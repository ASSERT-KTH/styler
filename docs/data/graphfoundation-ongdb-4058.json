{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4058",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4058/ByteBufInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4058/ByteBufInput.java\nindex b3ae138687f..4108ab54da4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4058/ByteBufInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4058/ByteBufInput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.packstream;\n \n import io.netty.buffer.ByteBuf;\n@@ -27,67 +28,67 @@ import static java.util.Objects.requireNonNull;\n \n public class ByteBufInput implements PackInput\n {\n-    private ByteBuf buf;\n+  private ByteBuf buf;\n \n-    public void start( ByteBuf newBuf )\n-    {\n-        assertNotStarted();\n-        buf = requireNonNull( newBuf );\n-    }\n+  public void start(ByteBuf newBuf)\n+  {\n+    assertNotStarted();\n+    buf = requireNonNull(newBuf);\n+  }\n \n-    public void stop()\n-    {\n-        buf = null;\n-    }\n+  public void stop()\n+  {\n+    buf = null;\n+  }\n \n-    @Override\n-    public byte readByte()\n-    {\n-        return buf.readByte();\n-    }\n+  @Override\n+  public byte readByte()\n+  {\n+    return buf.readByte();\n+  }\n \n-    @Override\n-    public short readShort()\n-    {\n-        return buf.readShort();\n-    }\n+  @Override\n+  public short readShort()\n+  {\n+    return buf.readShort();\n+  }\n \n-    @Override\n-    public int readInt()\n-    {\n-        return buf.readInt();\n-    }\n+  @Override\n+  public int readInt()\n+  {\n+    return buf.readInt();\n+  }\n \n-    @Override\n-    public long readLong()\n-    {\n-        return buf.readLong();\n-    }\n+  @Override\n+  public long readLong()\n+  {\n+    return buf.readLong();\n+  }\n \n-    @Override\n-    public double readDouble()\n-    {\n-        return buf.readDouble();\n-    }\n+  @Override\n+  public double readDouble()\n+  {\n+    return buf.readDouble();\n+  }\n \n-    @Override\n-    public PackInput readBytes( byte[] into, int offset, int toRead ) throws IOException\n-    {\n-        buf.readBytes( into, offset, toRead );\n-        return this;\n-    }\n+  @Override\n+  public PackInput readBytes(byte[] into, int offset, int toRead) throws IOException\n+  {\n+    buf.readBytes(into, offset, toRead);\n+    return this;\n+  }\n \n-    @Override\n-    public byte peekByte()\n-    {\n-        return buf.getByte( buf.readerIndex() );\n-    }\n+  @Override\n+  public byte peekByte()\n+  {\n+    return buf.getByte(buf.readerIndex());\n+  }\n \n-    private void assertNotStarted()\n+  private void assertNotStarted()\n+  {\n+    if (buf != null)\n     {\n-        if ( buf != null )\n-        {\n-            throw new IllegalStateException( \"Already started\" );\n-        }\n+      throw new IllegalStateException(\"Already started\");\n     }\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4058/ByteBufInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4058/ByteBufInput.java\nindex b3ae138687f..aa08895f640 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4058/ByteBufInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4058/ByteBufInput.java\n@@ -90,4 +90,4 @@ public class ByteBufInput implements PackInput\n             throw new IllegalStateException( \"Already started\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
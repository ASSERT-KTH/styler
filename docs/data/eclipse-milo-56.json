{
    "project_name": "eclipse-milo",
    "error_id": "56",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "34",
                "severity": "error",
                "message": "'}' at column 34 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class UInt16Conversions {\n\n    private UInt16Conversions() {}\n\n    @NotNull\n    static Boolean uInt16ToBoolean(@NotNull UShort us) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/56/UInt16Conversions.java\nindex 6fb83922a7c..6d7cc532825 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/56/UInt16Conversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt16Conversions {\n \n-    private UInt16Conversions() {}\n+    private UInt16Conversions() {\n+    }\n \n     @NotNull\n     static Boolean uInt16ToBoolean(@NotNull UShort us) {\n@@ -122,11 +123,16 @@ final class UInt16Conversions {\n     static Object explicitConversion(@NotNull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return uInt16ToBoolean(us);\n-            case Byte:      return uInt16ToByte(us);\n-            case SByte:     return uInt16ToSByte(us);\n-            case String:    return uInt16ToString(us);\n-            default:        return implicitConversion(us, targetType);\n+            case Boolean:\n+                return uInt16ToBoolean(us);\n+            case Byte:\n+                return uInt16ToByte(us);\n+            case SByte:\n+                return uInt16ToSByte(us);\n+            case String:\n+                return uInt16ToString(us);\n+            default:\n+                return implicitConversion(us, targetType);\n         }\n         //@formatter:on\n     }\n@@ -135,15 +141,24 @@ final class UInt16Conversions {\n     static Object implicitConversion(@NotNull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:        return uInt16ToDouble(us);\n-            case Float:         return uInt16ToFloat(us);\n-            case Int16:         return uInt16ToInt16(us);\n-            case Int32:         return uInt16ToInt32(us);\n-            case Int64:         return uInt16ToInt64(us);\n-            case StatusCode:    return uInt16ToStatusCode(us);\n-            case UInt32:        return uInt16ToUInt32(us);\n-            case UInt64:        return uInt16ToUInt64(us);\n-            default:            return null;\n+            case Double:\n+                return uInt16ToDouble(us);\n+            case Float:\n+                return uInt16ToFloat(us);\n+            case Int16:\n+                return uInt16ToInt16(us);\n+            case Int32:\n+                return uInt16ToInt32(us);\n+            case Int64:\n+                return uInt16ToInt64(us);\n+            case StatusCode:\n+                return uInt16ToStatusCode(us);\n+            case UInt32:\n+                return uInt16ToUInt32(us);\n+            case UInt64:\n+                return uInt16ToUInt64(us);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/56/UInt16Conversions.java\nindex 6fb83922a7c..26e51e85798 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/56/UInt16Conversions.java\n@@ -122,11 +122,13 @@ final class UInt16Conversions {\n     static Object explicitConversion(@NotNull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return uInt16ToBoolean(us);\n+            case Boolean:\n+    return uInt16ToBoolean(us);\n             case Byte:      return uInt16ToByte(us);\n             case SByte:     return uInt16ToSByte(us);\n             case String:    return uInt16ToString(us);\n-            default:        return implicitConversion(us, targetType);\n+            default:\n+    return implicitConversion(us, targetType);\n         }\n         //@formatter:on\n     }\n@@ -136,10 +138,14 @@ final class UInt16Conversions {\n         //@formatter:off\n         switch (targetType) {\n             case Double:        return uInt16ToDouble(us);\n-            case Float:         return uInt16ToFloat(us);\n-            case Int16:         return uInt16ToInt16(us);\n-            case Int32:         return uInt16ToInt32(us);\n-            case Int64:         return uInt16ToInt64(us);\n+            case Float:\n+    return uInt16ToFloat(us);\n+            case Int16:\n+    return uInt16ToInt16(us);\n+            case Int32:\n+    return uInt16ToInt32(us);\n+            case Int64:\n+    return uInt16ToInt64(us);\n             case StatusCode:    return uInt16ToStatusCode(us);\n             case UInt32:        return uInt16ToUInt32(us);\n             case UInt64:        return uInt16ToUInt64(us);\n@@ -148,4 +154,4 @@ final class UInt16Conversions {\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/56/UInt16Conversions.java\nindex 6fb83922a7c..1471274af2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/56/UInt16Conversions.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt16Conversions {\n \n-    private UInt16Conversions() {}\n+    private UInt16Conversions() {\n+    }\n \n     @NotNull\n     static Boolean uInt16ToBoolean(@NotNull UShort us) {\n@@ -109,10 +110,7 @@ final class UInt16Conversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof UShort) {\n             UShort us = (UShort) o;\n-\n-            return implicit ?\n-                implicitConversion(us, targetType) :\n-                explicitConversion(us, targetType);\n+            return implicit ? implicitConversion(us, targetType) : explicitConversion(us, targetType);\n         } else {\n             return null;\n         }\n@@ -122,11 +120,19 @@ final class UInt16Conversions {\n     static Object explicitConversion(@NotNull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return uInt16ToBoolean(us);\n-            case Byte:      return uInt16ToByte(us);\n-            case SByte:     return uInt16ToSByte(us);\n-            case String:    return uInt16ToString(us);\n-            default:        return implicitConversion(us, targetType);\n+            case Boolean:\n+                return uInt16ToBoolean(us);\n+\n+            case Byte:\n+                return uInt16ToByte(us);\n+\n+            case SByte:\n+                return uInt16ToSByte(us);\n+\n+            case String:\n+                return uInt16ToString(us);\n+            default:\n+                return implicitConversion(us, targetType);\n         }\n         //@formatter:on\n     }\n@@ -135,17 +141,33 @@ final class UInt16Conversions {\n     static Object implicitConversion(@NotNull UShort us, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:        return uInt16ToDouble(us);\n-            case Float:         return uInt16ToFloat(us);\n-            case Int16:         return uInt16ToInt16(us);\n-            case Int32:         return uInt16ToInt32(us);\n-            case Int64:         return uInt16ToInt64(us);\n-            case StatusCode:    return uInt16ToStatusCode(us);\n-            case UInt32:        return uInt16ToUInt32(us);\n-            case UInt64:        return uInt16ToUInt64(us);\n-            default:            return null;\n+            case Double:\n+                return uInt16ToDouble(us);\n+\n+            case Float:\n+                return uInt16ToFloat(us);\n+\n+            case Int16:\n+                return uInt16ToInt16(us);\n+\n+            case Int32:\n+                return uInt16ToInt32(us);\n+\n+            case Int64:\n+                return uInt16ToInt64(us);\n+\n+            case StatusCode:\n+                return uInt16ToStatusCode(us);\n+\n+            case UInt32:\n+                return uInt16ToUInt32(us);\n+\n+            case UInt64:\n+                return uInt16ToUInt64(us);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/56/UInt16Conversions.java\nindex 6fb83922a7c..58797f49818 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/56/UInt16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/56/UInt16Conversions.java\n@@ -25,9 +25,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class UInt16Conversions {\n \n-    private UInt16Conversions() {}\n+    private UInt16Conversions() {\n \n-    @NotNull\n+    } @NotNull\n     static Boolean uInt16ToBoolean(@NotNull UShort us) {\n         return us.intValue() != 0;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
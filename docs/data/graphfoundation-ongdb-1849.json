{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1849",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1849/SnapshotExecutionEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1849/SnapshotExecutionEngine.java\nindex 9e990c45aa4..6ae1cf5ed2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1849/SnapshotExecutionEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1849/SnapshotExecutionEngine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import java.util.Map;\n@@ -41,81 +42,81 @@ import org.neo4j.values.virtual.MapValue;\n  */\n public class SnapshotExecutionEngine extends ExecutionEngine\n {\n-    private final int maxQueryExecutionAttempts;\n+  private final int maxQueryExecutionAttempts;\n \n-    SnapshotExecutionEngine( GraphDatabaseQueryService queryService, Config config, LogProvider logProvider,\n-            CompatibilityFactory compatibilityFactory )\n-    {\n-        super( queryService, logProvider, compatibilityFactory );\n-        this.maxQueryExecutionAttempts = config.get( GraphDatabaseSettings.snapshot_query_retries );\n-    }\n+  SnapshotExecutionEngine(GraphDatabaseQueryService queryService, Config config, LogProvider logProvider,\n+                          CompatibilityFactory compatibilityFactory)\n+  {\n+    super(queryService, logProvider, compatibilityFactory);\n+    this.maxQueryExecutionAttempts = config.get(GraphDatabaseSettings.snapshot_query_retries);\n+  }\n \n-    @Override\n-    public Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException\n-    {\n-        return executeWithRetries( query, parameters, context, super::executeQuery );\n-    }\n+  @Override\n+  public Result executeQuery(String query, MapValue parameters, TransactionalContext context)\n+      throws QueryExecutionKernelException\n+  {\n+    return executeWithRetries(query, parameters, context, super::executeQuery);\n+  }\n \n-    @Override\n-    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException\n-    {\n-        return executeWithRetries( query, parameters, context, super::executeQuery );\n-    }\n+  @Override\n+  public Result executeQuery(String query, Map<String, Object> parameters, TransactionalContext context)\n+      throws QueryExecutionKernelException\n+  {\n+    return executeWithRetries(query, parameters, context, super::executeQuery);\n+  }\n \n-    @Override\n-    public Result profileQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException\n-    {\n-        return executeWithRetries( query, parameters, context, super::profileQuery );\n-    }\n+  @Override\n+  public Result profileQuery(String query, Map<String, Object> parameters, TransactionalContext context)\n+      throws QueryExecutionKernelException\n+  {\n+    return executeWithRetries(query, parameters, context, super::profileQuery);\n+  }\n \n-    protected <T> Result executeWithRetries( String query, T parameters, TransactionalContext context,\n-            ParametrizedQueryExecutor<T> executor ) throws QueryExecutionKernelException\n+  protected <T> Result executeWithRetries(String query, T parameters, TransactionalContext context,\n+                                          ParametrizedQueryExecutor<T> executor) throws QueryExecutionKernelException\n+  {\n+    VersionContext versionContext = getCursorContext(context);\n+    EagerResult eagerResult;\n+    int attempt = 0;\n+    boolean dirtySnapshot;\n+    do\n     {\n-        VersionContext versionContext = getCursorContext( context );\n-        EagerResult eagerResult;\n-        int attempt = 0;\n-        boolean dirtySnapshot;\n-        do\n-        {\n-            if ( attempt == maxQueryExecutionAttempts )\n-            {\n-                return throwQueryExecutionException(\n-                        \"Unable to get clean data snapshot for query '%s' after %d attempts.\", query, attempt );\n-            }\n-            attempt++;\n-            versionContext.initRead();\n-            Result result = executor.execute( query, parameters, context );\n-            eagerResult = new EagerResult( result, versionContext );\n-            eagerResult.consume();\n-            dirtySnapshot = versionContext.isDirty();\n-            if ( dirtySnapshot && result.getQueryStatistics().containsUpdates() )\n-            {\n-                return throwQueryExecutionException(\n-                        \"Unable to get clean data snapshot for query '%s' that perform updates.\", query, attempt );\n-            }\n-        }\n-        while ( dirtySnapshot );\n-        return eagerResult;\n+      if (attempt == maxQueryExecutionAttempts)\n+      {\n+        return throwQueryExecutionException(\n+            \"Unable to get clean data snapshot for query '%s' after %d attempts.\", query, attempt);\n+      }\n+      attempt++;\n+      versionContext.initRead();\n+      Result result = executor.execute(query, parameters, context);\n+      eagerResult = new EagerResult(result, versionContext);\n+      eagerResult.consume();\n+      dirtySnapshot = versionContext.isDirty();\n+      if (dirtySnapshot && result.getQueryStatistics().containsUpdates())\n+      {\n+        return throwQueryExecutionException(\n+            \"Unable to get clean data snapshot for query '%s' that perform updates.\", query, attempt);\n+      }\n     }\n+    while (dirtySnapshot);\n+    return eagerResult;\n+  }\n \n-    private Result throwQueryExecutionException( String message, Object... parameters ) throws\n-            QueryExecutionKernelException\n-    {\n-        throw new QueryExecutionKernelException( new UnstableSnapshotException( message, parameters ) );\n-    }\n+  private Result throwQueryExecutionException(String message, Object... parameters) throws\n+      QueryExecutionKernelException\n+  {\n+    throw new QueryExecutionKernelException(new UnstableSnapshotException(message, parameters));\n+  }\n \n-    private static VersionContext getCursorContext( TransactionalContext context )\n-    {\n-        return ((KernelStatement) context.statement()).getVersionContext();\n-    }\n+  private static VersionContext getCursorContext(TransactionalContext context)\n+  {\n+    return ((KernelStatement) context.statement()).getVersionContext();\n+  }\n \n-    @FunctionalInterface\n-    protected interface ParametrizedQueryExecutor<T>\n-    {\n-        Result execute( String query, T parameters, TransactionalContext context ) throws QueryExecutionKernelException;\n-    }\n+  @FunctionalInterface\n+  protected interface ParametrizedQueryExecutor<T>\n+  {\n+    Result execute(String query, T parameters, TransactionalContext context) throws QueryExecutionKernelException;\n+  }\n \n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1849/SnapshotExecutionEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1849/SnapshotExecutionEngine.java\nindex 9e990c45aa4..e7d63d93cf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1849/SnapshotExecutionEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1849/SnapshotExecutionEngine.java\n@@ -51,29 +51,25 @@ public class SnapshotExecutionEngine extends ExecutionEngine\n     }\n \n     @Override\n-    public Result executeQuery( String query, MapValue parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException\n-    {\n+    public Result executeQuery( String query, MapValue parameters, TransactionalContext context ) throws QueryExecutionKernelException\n+{\n         return executeWithRetries( query, parameters, context, super::executeQuery );\n     }\n \n     @Override\n-    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException\n-    {\n+    public Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context ) throws QueryExecutionKernelException\n+{\n         return executeWithRetries( query, parameters, context, super::executeQuery );\n     }\n \n     @Override\n-    public Result profileQuery( String query, Map<String,Object> parameters, TransactionalContext context )\n-            throws QueryExecutionKernelException\n-    {\n+    public Result profileQuery( String query, Map<String,Object> parameters, TransactionalContext context ) throws QueryExecutionKernelException\n+{\n         return executeWithRetries( query, parameters, context, super::profileQuery );\n     }\n \n-    protected <T> Result executeWithRetries( String query, T parameters, TransactionalContext context,\n-            ParametrizedQueryExecutor<T> executor ) throws QueryExecutionKernelException\n-    {\n+    protected <T> Result executeWithRetries( String query, T parameters, TransactionalContext context, ParametrizedQueryExecutor<T> executor ) throws QueryExecutionKernelException\n+{\n         VersionContext versionContext = getCursorContext( context );\n         EagerResult eagerResult;\n         int attempt = 0;\n@@ -82,8 +78,7 @@ public class SnapshotExecutionEngine extends ExecutionEngine\n         {\n             if ( attempt == maxQueryExecutionAttempts )\n             {\n-                return throwQueryExecutionException(\n-                        \"Unable to get clean data snapshot for query '%s' after %d attempts.\", query, attempt );\n+                return throwQueryExecutionException( \"Unable to get clean data snapshot for query '%s' after %d attempts.\", query, attempt );\n             }\n             attempt++;\n             versionContext.initRead();\n@@ -93,17 +88,15 @@ public class SnapshotExecutionEngine extends ExecutionEngine\n             dirtySnapshot = versionContext.isDirty();\n             if ( dirtySnapshot && result.getQueryStatistics().containsUpdates() )\n             {\n-                return throwQueryExecutionException(\n-                        \"Unable to get clean data snapshot for query '%s' that perform updates.\", query, attempt );\n-            }\n+                return throwQueryExecutionException( \"Unable to get clean data snapshot for query '%s' that perform updates.\", query, attempt );\n+    }\n         }\n         while ( dirtySnapshot );\n         return eagerResult;\n     }\n \n-    private Result throwQueryExecutionException( String message, Object... parameters ) throws\n-            QueryExecutionKernelException\n-    {\n+    private Result throwQueryExecutionException( String message, Object... parameters ) throws QueryExecutionKernelException\n+{\n         throw new QueryExecutionKernelException( new UnstableSnapshotException( message, parameters ) );\n     }\n \n@@ -117,5 +110,4 @@ public class SnapshotExecutionEngine extends ExecutionEngine\n     {\n         Result execute( String query, T parameters, TransactionalContext context ) throws QueryExecutionKernelException;\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
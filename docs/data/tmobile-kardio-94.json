{
    "project_name": "tmobile-kardio",
    "error_id": "94",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic enum HealthCheckType {\n\tURL_200_CHECK (1),\n\tTCP_CHECK (2),\n\tDUMMY(3);\n\t",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler/94/HealthCheckType.java\nindex a1d66dfcc8c..bd17a3fdd7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler/94/HealthCheckType.java\n@@ -23,7 +23,7 @@ package com.tmobile.kardio.surveiller.enums;\n  * Enumeration that has the different health check types\n  */\n public enum HealthCheckType {\n-\tURL_200_CHECK (1),\n+URL_200_CHECK (1),\n \tTCP_CHECK (2),\n \tDUMMY(3);\n \t\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/94/HealthCheckType.java\nindex a1d66dfcc8c..fd0b65f6351 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/94/HealthCheckType.java\n@@ -1,12 +1,12 @@\n /*******************************************************************************\n  * Copyright 2019 T-Mobile USA, Inc.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n  * use this file except in compliance with the License.  You may obtain a copy\n  * of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n@@ -17,27 +17,29 @@\n  * its contributors may be used to endorse or promote products derived from this\n  * software without specific prior written permission.\n  ******************************************************************************/\n+\n package com.tmobile.kardio.surveiller.enums;\n \n /**\n  * Enumeration that has the different health check types\n  */\n public enum HealthCheckType {\n-\tURL_200_CHECK (1),\n-\tTCP_CHECK (2),\n-\tDUMMY(3);\n-\t\n-\tprivate final Integer healthCheckTypeId;\n+    URL_200_CHECK(1),\n+    TCP_CHECK(2),\n+    DUMMY(3);\n+\n+    private final Integer healthCheckTypeId;\n \n-\tHealthCheckType(Integer healthCheckTypeId) {\n-\t\tthis.healthCheckTypeId = healthCheckTypeId;\n-\t}\n+    HealthCheckType(Integer healthCheckTypeId) {\n+        this.healthCheckTypeId = healthCheckTypeId;\n+    }\n \n-\t/**\n-\t * Get healthCheckTypeId\n-\t * @return\n-\t */\n-\tpublic Integer getHealthCheckTypeId() {\n-\t\treturn healthCheckTypeId;\n-\t}\n+    /**\n+     * Get healthCheckTypeId\n+     *\n+     * @return\n+     */\n+    public Integer getHealthCheckTypeId() {\n+        return healthCheckTypeId;\n+    }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/94/HealthCheckType.java\nindex a1d66dfcc8c..495d5689c02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/94/HealthCheckType.java\n@@ -23,21 +23,20 @@ package com.tmobile.kardio.surveiller.enums;\n  * Enumeration that has the different health check types\n  */\n public enum HealthCheckType {\n-\tURL_200_CHECK (1),\n-\tTCP_CHECK (2),\n-\tDUMMY(3);\n-\t\n-\tprivate final Integer healthCheckTypeId;\n+    URL_200_CHECK(1), TCP_CHECK(2), DUMMY(3);\n \n-\tHealthCheckType(Integer healthCheckTypeId) {\n-\t\tthis.healthCheckTypeId = healthCheckTypeId;\n-\t}\n+    private final Integer healthCheckTypeId;\n+\n+HealthCheckType(Integer healthCheckTypeId) {\n+    this.healthCheckTypeId = healthCheckTypeId;\n+    }\n \n \t/**\n \t * Get healthCheckTypeId\n \t * @return\n \t */\n \tpublic Integer getHealthCheckTypeId() {\n-\t\treturn healthCheckTypeId;\n-\t}\n-}\n+    return healthCheckTypeId;\n+    }\n+\n+    }\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/94/HealthCheckType.java\nindex a1d66dfcc8c..677c7d23f71 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/94/HealthCheckType.java\n@@ -22,22 +22,23 @@ package com.tmobile.kardio.surveiller.enums;\n /**\n  * Enumeration that has the different health check types\n  */\n+\n+\n public enum HealthCheckType {\n-\tURL_200_CHECK (1),\n-\tTCP_CHECK (2),\n-\tDUMMY(3);\n-\t\n-\tprivate final Integer healthCheckTypeId;\n+    URL_200_CHECK(1), TCP_CHECK(2), DUMMY(3);\n+\n+    private final Integer healthCheckTypeId;\n+\n+    HealthCheckType(Integer healthCheckTypeId) {\n+        this.healthCheckTypeId = healthCheckTypeId;\n+    }\n \n-\tHealthCheckType(Integer healthCheckTypeId) {\n-\t\tthis.healthCheckTypeId = healthCheckTypeId;\n-\t}\n+    /**\n+     * Get healthCheckTypeId\n+     * @return\n+     */\n \n-\t/**\n-\t * Get healthCheckTypeId\n-\t * @return\n-\t */\n-\tpublic Integer getHealthCheckTypeId() {\n-\t\treturn healthCheckTypeId;\n-\t}\n-}\n+    public Integer getHealthCheckTypeId() {\n+        return healthCheckTypeId;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_random/94/HealthCheckType.java\nindex a1d66dfcc8c..bd17a3fdd7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_random/94/HealthCheckType.java\n@@ -23,7 +23,7 @@ package com.tmobile.kardio.surveiller.enums;\n  * Enumeration that has the different health check types\n  */\n public enum HealthCheckType {\n-\tURL_200_CHECK (1),\n+URL_200_CHECK (1),\n \tTCP_CHECK (2),\n \tDUMMY(3);\n \t\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_three_grams/94/HealthCheckType.java\nindex a1d66dfcc8c..1a9f3e038ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/94/HealthCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_three_grams/94/HealthCheckType.java\n@@ -23,7 +23,7 @@ package com.tmobile.kardio.surveiller.enums;\n  * Enumeration that has the different health check types\n  */\n public enum HealthCheckType {\n-\tURL_200_CHECK (1),\n+    URL_200_CHECK (1),\n \tTCP_CHECK (2),\n \tDUMMY(3);\n \t\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
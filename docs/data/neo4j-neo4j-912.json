{
    "project_name": "neo4j-neo4j",
    "error_id": "912",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/912/LogEntryWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/912/LogEntryWriter.java\nindex 34b220054a9..cfc8cb3de84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/912/LogEntryWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/912/LogEntryWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.io.IOException;\n@@ -37,84 +38,84 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogEntryTypeCodes.TX_S\n \n public class LogEntryWriter<T extends WritableChecksumChannel>\n {\n-    private final Visitor<StorageCommand,IOException> serializer;\n+    private final Visitor<StorageCommand, IOException> serializer;\n     protected final T channel;\n     private final byte parserSetVersion;\n \n-    public LogEntryWriter( T channel, LogEntryParserSet parserSet )\n+    public LogEntryWriter(T channel, LogEntryParserSet parserSet)\n     {\n         this.channel = channel;\n         this.parserSetVersion = parserSet.versionByte();\n-        this.serializer = new StorageCommandSerializer( channel, this );\n+        this.serializer = new StorageCommandSerializer(channel, this);\n     }\n \n-    public void writeLogEntryHeader( byte type, WritableChannel channel ) throws IOException\n+    public void writeLogEntryHeader(byte type, WritableChannel channel) throws IOException\n     {\n-        channel.put( parserSetVersion ).put( type );\n+        channel.put(parserSetVersion).put(type);\n     }\n \n-    private void writeStartEntry( LogEntryStart entry ) throws IOException\n+    private void writeStartEntry(LogEntryStart entry) throws IOException\n     {\n-        writeStartEntry( entry.getTimeWritten(), entry.getLastCommittedTxWhenTransactionStarted(),\n-                entry.getPreviousChecksum(), entry.getAdditionalHeader() );\n+        writeStartEntry(entry.getTimeWritten(), entry.getLastCommittedTxWhenTransactionStarted(),\n+          entry.getPreviousChecksum(), entry.getAdditionalHeader());\n     }\n \n-    public void writeStartEntry( long timeWritten, long latestCommittedTxWhenStarted,\n-            int previousChecksum, byte[] additionalHeaderData ) throws IOException\n+    public void writeStartEntry(long timeWritten, long latestCommittedTxWhenStarted,\n+                                int previousChecksum, byte[] additionalHeaderData) throws IOException\n     {\n         channel.beginChecksum();\n-        writeLogEntryHeader( TX_START, channel );\n-        channel.putLong( timeWritten )\n-                .putLong( latestCommittedTxWhenStarted )\n-                .putInt( previousChecksum )\n-                .putInt( additionalHeaderData.length )\n-                .put( additionalHeaderData, additionalHeaderData.length );\n+        writeLogEntryHeader(TX_START, channel);\n+        channel.putLong(timeWritten)\n+          .putLong(latestCommittedTxWhenStarted)\n+          .putInt(previousChecksum)\n+          .putInt(additionalHeaderData.length)\n+          .put(additionalHeaderData, additionalHeaderData.length);\n     }\n \n-    private void writeCommitEntry( LogEntryCommit entry ) throws IOException\n+    private void writeCommitEntry(LogEntryCommit entry) throws IOException\n     {\n-        writeCommitEntry( entry.getTxId(), entry.getTimeWritten() );\n+        writeCommitEntry(entry.getTxId(), entry.getTimeWritten());\n     }\n \n-    public int writeCommitEntry( long transactionId, long timeWritten ) throws IOException\n+    public int writeCommitEntry(long transactionId, long timeWritten) throws IOException\n     {\n-        writeLogEntryHeader( TX_COMMIT, channel );\n-        channel.putLong( transactionId )\n-                .putLong( timeWritten );\n+        writeLogEntryHeader(TX_COMMIT, channel);\n+        channel.putLong(transactionId)\n+          .putLong(timeWritten);\n         return channel.putChecksum();\n     }\n \n-    public void serialize( TransactionRepresentation tx ) throws IOException\n+    public void serialize(TransactionRepresentation tx) throws IOException\n     {\n-        tx.accept( serializer );\n+        tx.accept(serializer);\n     }\n \n-    public void serialize( CommittedTransactionRepresentation tx ) throws IOException\n+    public void serialize(CommittedTransactionRepresentation tx) throws IOException\n     {\n-        writeStartEntry( tx.getStartEntry() );\n-        serialize( tx.getTransactionRepresentation() );\n-        writeCommitEntry( tx.getCommitEntry() );\n+        writeStartEntry(tx.getStartEntry());\n+        serialize(tx.getTransactionRepresentation());\n+        writeCommitEntry(tx.getCommitEntry());\n     }\n \n-    public void serialize( Collection<StorageCommand> commands ) throws IOException\n+    public void serialize(Collection<StorageCommand> commands) throws IOException\n     {\n-        for ( StorageCommand command : commands )\n+        for (StorageCommand command : commands)\n         {\n-            serializer.visit( command );\n+            serializer.visit(command);\n         }\n     }\n \n-    public void serialize( StorageCommand command ) throws IOException\n+    public void serialize(StorageCommand command) throws IOException\n     {\n-        serializer.visit( command );\n+        serializer.visit(command);\n     }\n \n-    public void writeLegacyCheckPointEntry( LogPosition logPosition ) throws IOException\n+    public void writeLegacyCheckPointEntry(LogPosition logPosition) throws IOException\n     {\n         channel.beginChecksum();\n-        writeLogEntryHeader( LEGACY_CHECK_POINT, channel );\n-        channel.putLong( logPosition.getLogVersion() )\n-                .putLong( logPosition.getByteOffset() );\n+        writeLogEntryHeader(LEGACY_CHECK_POINT, channel);\n+        channel.putLong(logPosition.getLogVersion())\n+          .putLong(logPosition.getByteOffset());\n         channel.putChecksum();\n     }\n \n@@ -123,22 +124,22 @@ public class LogEntryWriter<T extends WritableChecksumChannel>\n         return channel;\n     }\n \n-    private static class StorageCommandSerializer implements Visitor<StorageCommand,IOException>\n+    private static class StorageCommandSerializer implements Visitor<StorageCommand, IOException>\n     {\n         private final WritableChannel channel;\n         private final LogEntryWriter entryWriter;\n \n-        StorageCommandSerializer( WritableChannel channel, LogEntryWriter entryWriter )\n+        StorageCommandSerializer(WritableChannel channel, LogEntryWriter entryWriter)\n         {\n             this.channel = channel;\n             this.entryWriter = entryWriter;\n         }\n \n         @Override\n-        public boolean visit( StorageCommand command ) throws IOException\n+        public boolean visit(StorageCommand command) throws IOException\n         {\n-            entryWriter.writeLogEntryHeader( COMMAND, channel );\n-            command.serialize( channel );\n+            entryWriter.writeLogEntryHeader(COMMAND, channel);\n+            command.serialize(channel);\n             return false;\n         }\n     }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
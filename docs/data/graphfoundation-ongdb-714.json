{
    "project_name": "graphfoundation-ongdb",
    "error_id": "714",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/714/InputCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/714/InputCache.java\nindex 8687c3a18d0..70d1559e68e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/714/InputCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/714/InputCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.Closeable;\n@@ -87,123 +88,122 @@ import static org.neo4j.io.fs.OpenMode.READ_WRITE;\n  *     ELSE IF {@link #NEW_TYPE}\n  *     4B token id\n  * </pre>\n- *\n+ * <p>\n  * The format stores entities in batches, each batch having a small header containing number of bytes\n  * and number of entities.\n  */\n public class InputCache implements Closeable\n {\n-    private static final String HEADER = \"-header\";\n-    private static final String NODES = \"nodes\";\n-    private static final String RELATIONSHIPS = \"relationships\";\n-    private static final String NODES_HEADER = NODES + HEADER;\n-    private static final String RELATIONSHIPS_HEADER = RELATIONSHIPS + HEADER;\n-\n-    static final byte SAME_GROUP = 0;\n-    static final byte NEW_GROUP = 1;\n-    static final byte PROPERTY_KEY_TOKEN = 0;\n-    static final byte LABEL_TOKEN = 1;\n-    static final byte RELATIONSHIP_TYPE_TOKEN = 2;\n-    static final byte GROUP_TOKEN = 3;\n-    static final byte HIGH_TOKEN_TYPE = 4;\n-    static final short HAS_FIRST_PROPERTY_ID = -1;\n-    static final byte HAS_LABEL_FIELD = 3;\n-    static final byte LABEL_REMOVAL = 1;\n-    static final byte LABEL_ADDITION = 2;\n-    static final byte END_OF_LABEL_CHANGES = 0;\n-    static final byte HAS_TYPE_ID = 2;\n-    static final byte SAME_TYPE = 0;\n-    static final byte NEW_TYPE = 1;\n-    static final byte END_OF_HEADER = -2;\n-    static final short END_OF_ENTITIES = -3;\n-\n-    private final FileSystemAbstraction fs;\n-    private final File cacheDirectory;\n-    private final RecordFormats recordFormats;\n-    private final int chunkSize;\n-\n-    /**\n-     * @param fs {@link FileSystemAbstraction} to use\n-     * @param cacheDirectory directory for placing the cached files\n-     * @param recordFormats which {@link RecordFormats format} records are in\n-     * @param chunkSize rough size of chunks written to the cache\n-     */\n-    public InputCache( FileSystemAbstraction fs, File cacheDirectory, RecordFormats recordFormats, int chunkSize )\n-    {\n-        this.fs = fs;\n-        this.cacheDirectory = cacheDirectory;\n-        this.recordFormats = recordFormats;\n-        this.chunkSize = chunkSize;\n-    }\n-\n-    public InputCacher cacheNodes() throws IOException\n-    {\n-        return new InputNodeCacheWriter( channel( NODES, READ_WRITE ), channel( NODES_HEADER, READ_WRITE ),\n-                recordFormats, chunkSize );\n-    }\n-\n-    public InputCacher cacheRelationships() throws IOException\n-    {\n-        return new InputRelationshipCacheWriter( channel( RELATIONSHIPS, READ_WRITE ),\n-                channel( RELATIONSHIPS_HEADER, READ_WRITE ), recordFormats, chunkSize );\n-    }\n-\n-    private StoreChannel channel( String type, OpenMode openMode ) throws IOException\n-    {\n-        return fs.open( file( type ), openMode );\n-    }\n-\n-    private File file( String type )\n+  private static final String HEADER = \"-header\";\n+  private static final String NODES = \"nodes\";\n+  private static final String RELATIONSHIPS = \"relationships\";\n+  private static final String NODES_HEADER = NODES + HEADER;\n+  private static final String RELATIONSHIPS_HEADER = RELATIONSHIPS + HEADER;\n+\n+  static final byte SAME_GROUP = 0;\n+  static final byte NEW_GROUP = 1;\n+  static final byte PROPERTY_KEY_TOKEN = 0;\n+  static final byte LABEL_TOKEN = 1;\n+  static final byte RELATIONSHIP_TYPE_TOKEN = 2;\n+  static final byte GROUP_TOKEN = 3;\n+  static final byte HIGH_TOKEN_TYPE = 4;\n+  static final short HAS_FIRST_PROPERTY_ID = -1;\n+  static final byte HAS_LABEL_FIELD = 3;\n+  static final byte LABEL_REMOVAL = 1;\n+  static final byte LABEL_ADDITION = 2;\n+  static final byte END_OF_LABEL_CHANGES = 0;\n+  static final byte HAS_TYPE_ID = 2;\n+  static final byte SAME_TYPE = 0;\n+  static final byte NEW_TYPE = 1;\n+  static final byte END_OF_HEADER = -2;\n+  static final short END_OF_ENTITIES = -3;\n+\n+  private final FileSystemAbstraction fs;\n+  private final File cacheDirectory;\n+  private final RecordFormats recordFormats;\n+  private final int chunkSize;\n+\n+  /**\n+   * @param fs             {@link FileSystemAbstraction} to use\n+   * @param cacheDirectory directory for placing the cached files\n+   * @param recordFormats  which {@link RecordFormats format} records are in\n+   * @param chunkSize      rough size of chunks written to the cache\n+   */\n+  public InputCache(FileSystemAbstraction fs, File cacheDirectory, RecordFormats recordFormats, int chunkSize)\n+  {\n+    this.fs = fs;\n+    this.cacheDirectory = cacheDirectory;\n+    this.recordFormats = recordFormats;\n+    this.chunkSize = chunkSize;\n+  }\n+\n+  public InputCacher cacheNodes() throws IOException\n+  {\n+    return new InputNodeCacheWriter(channel(NODES, READ_WRITE), channel(NODES_HEADER, READ_WRITE),\n+        recordFormats, chunkSize);\n+  }\n+\n+  public InputCacher cacheRelationships() throws IOException\n+  {\n+    return new InputRelationshipCacheWriter(channel(RELATIONSHIPS, READ_WRITE),\n+        channel(RELATIONSHIPS_HEADER, READ_WRITE), recordFormats, chunkSize);\n+  }\n+\n+  private StoreChannel channel(String type, OpenMode openMode) throws IOException\n+  {\n+    return fs.open(file(type), openMode);\n+  }\n+\n+  private File file(String type)\n+  {\n+    return new File(cacheDirectory, \"input-\" + type);\n+  }\n+\n+  public InputIterable nodes()\n+  {\n+    return entities(() -> new InputNodeCacheReader(channel(NODES, READ), channel(NODES_HEADER, READ)));\n+  }\n+\n+  public InputIterable relationships()\n+  {\n+    return entities(() -> new InputRelationshipCacheReader(channel(RELATIONSHIPS, READ), channel(RELATIONSHIPS_HEADER, READ)));\n+  }\n+\n+  private InputIterable entities(final ThrowingSupplier<InputIterator, IOException> factory)\n+  {\n+    return new InputIterable()\n     {\n-        return new File( cacheDirectory, \"input-\" + type );\n-    }\n-\n-    public InputIterable nodes()\n-    {\n-        return entities( () -> new InputNodeCacheReader( channel( NODES, READ ), channel( NODES_HEADER, READ ) ) );\n-    }\n-\n-    public InputIterable relationships()\n-    {\n-        return entities( () -> new InputRelationshipCacheReader( channel( RELATIONSHIPS, READ ), channel( RELATIONSHIPS_HEADER, READ ) ) );\n-    }\n-\n-    private InputIterable entities( final ThrowingSupplier<InputIterator, IOException> factory )\n-    {\n-        return new InputIterable()\n+      @Override\n+      public InputIterator iterator()\n+      {\n+        try\n         {\n-            @Override\n-            public InputIterator iterator()\n-            {\n-                try\n-                {\n-                    return factory.get();\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new InputException( \"Unable to open reader for cached entities\", e );\n-                }\n-            }\n-\n-            @Override\n-            public boolean supportsMultiplePasses()\n-            {\n-                return true;\n-            }\n-        };\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        fs.deleteFile( file( NODES ) );\n-        fs.deleteFile( file( RELATIONSHIPS ) );\n-        fs.deleteFile( file( NODES_HEADER ) );\n-        fs.deleteFile( file( RELATIONSHIPS_HEADER ) );\n-    }\n-\n-    static ByteBuffer newChunkHeaderBuffer()\n-    {\n-        return ByteBuffer.allocate( Integer.BYTES );\n-    }\n+          return factory.get();\n+        } catch (IOException e)\n+        {\n+          throw new InputException(\"Unable to open reader for cached entities\", e);\n+        }\n+      }\n+\n+      @Override\n+      public boolean supportsMultiplePasses()\n+      {\n+        return true;\n+      }\n+    };\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    fs.deleteFile(file(NODES));\n+    fs.deleteFile(file(RELATIONSHIPS));\n+    fs.deleteFile(file(NODES_HEADER));\n+    fs.deleteFile(file(RELATIONSHIPS_HEADER));\n+  }\n+\n+  static ByteBuffer newChunkHeaderBuffer()\n+  {\n+    return ByteBuffer.allocate(Integer.BYTES);\n+  }\n }\n",
            "diff_size": 130
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/714/InputCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/714/InputCache.java\nindex 8687c3a18d0..3711f81f16c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/714/InputCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/714/InputCache.java\n@@ -116,8 +116,7 @@ public class InputCache implements Closeable\n     static final byte NEW_TYPE = 1;\n     static final byte END_OF_HEADER = -2;\n     static final short END_OF_ENTITIES = -3;\n-\n-    private final FileSystemAbstraction fs;\n+private final FileSystemAbstraction fs;\n     private final File cacheDirectory;\n     private final RecordFormats recordFormats;\n     private final int chunkSize;\n@@ -144,8 +143,7 @@ public class InputCache implements Closeable\n \n     public InputCacher cacheRelationships() throws IOException\n     {\n-        return new InputRelationshipCacheWriter( channel( RELATIONSHIPS, READ_WRITE ),\n-                channel( RELATIONSHIPS_HEADER, READ_WRITE ), recordFormats, chunkSize );\n+        return new InputRelationshipCacheWriter( channel( RELATIONSHIPS, READ_WRITE ), channel( RELATIONSHIPS_HEADER, READ_WRITE ), recordFormats, chunkSize );\n     }\n \n     private StoreChannel channel( String type, OpenMode openMode ) throws IOException\n@@ -168,7 +166,7 @@ public class InputCache implements Closeable\n         return entities( () -> new InputRelationshipCacheReader( channel( RELATIONSHIPS, READ ), channel( RELATIONSHIPS_HEADER, READ ) ) );\n     }\n \n-    private InputIterable entities( final ThrowingSupplier<InputIterator, IOException> factory )\n+    private InputIterable entities( final ThrowingSupplier<InputIterator,IOException> factory )\n     {\n         return new InputIterable()\n         {\n@@ -206,4 +204,4 @@ public class InputCache implements Closeable\n     {\n         return ByteBuffer.allocate( Integer.BYTES );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
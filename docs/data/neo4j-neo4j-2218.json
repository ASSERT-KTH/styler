{
    "project_name": "neo4j-neo4j",
    "error_id": "2218",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2218/XForwardUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2218/XForwardUtil.java\nindex 07160e95ef3..a995b80a302 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2218/XForwardUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2218/XForwardUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import java.net.URI;\n@@ -33,34 +34,34 @@ public class XForwardUtil\n     {\n     }\n \n-    public static String externalUri( String internalUri, String xForwardedHost, String xForwardedProto )\n+    public static String externalUri(String internalUri, String xForwardedHost, String xForwardedProto)\n     {\n-        return externalUri( UriBuilder.fromUri( internalUri ), xForwardedHost, xForwardedProto ).toString();\n+        return externalUri(UriBuilder.fromUri(internalUri), xForwardedHost, xForwardedProto).toString();\n     }\n \n-    public static URI externalUri( URI internalUri, String xForwardedHost, String xForwardedProto )\n+    public static URI externalUri(URI internalUri, String xForwardedHost, String xForwardedProto)\n     {\n-        return externalUri( UriBuilder.fromUri( internalUri ), xForwardedHost, xForwardedProto );\n+        return externalUri(UriBuilder.fromUri(internalUri), xForwardedHost, xForwardedProto);\n     }\n \n-    private static URI externalUri( UriBuilder builder, String xForwardedHost, String xForwardedProto )\n+    private static URI externalUri(UriBuilder builder, String xForwardedHost, String xForwardedProto)\n     {\n-        ForwardedHost forwardedHost = new ForwardedHost( xForwardedHost );\n-        ForwardedProto forwardedProto = new ForwardedProto( xForwardedProto );\n+        ForwardedHost forwardedHost = new ForwardedHost(xForwardedHost);\n+        ForwardedProto forwardedProto = new ForwardedProto(xForwardedProto);\n \n-        if ( forwardedHost.isValid )\n+        if (forwardedHost.isValid)\n         {\n-            builder.host( forwardedHost.getHost() );\n+            builder.host(forwardedHost.getHost());\n \n-            if ( forwardedHost.hasExplicitlySpecifiedPort() )\n+            if (forwardedHost.hasExplicitlySpecifiedPort())\n             {\n-                builder.port( forwardedHost.getPort() );\n+                builder.port(forwardedHost.getPort());\n             }\n         }\n \n-        if ( forwardedProto.isValid() )\n+        if (forwardedProto.isValid())\n         {\n-            builder.scheme( forwardedProto.getScheme() );\n+            builder.scheme(forwardedProto.getScheme());\n         }\n \n         return builder.build();\n@@ -72,38 +73,37 @@ public class XForwardUtil\n         int port = -1;\n         boolean isValid;\n \n-        ForwardedHost( String headerValue )\n+        ForwardedHost(String headerValue)\n         {\n-            if ( headerValue == null )\n+            if (headerValue == null)\n             {\n                 this.isValid = false;\n                 return;\n             }\n \n-            String firstHostInXForwardedHostHeader = headerValue.split( \",\" )[0].trim();\n+            String firstHostInXForwardedHostHeader = headerValue.split(\",\")[0].trim();\n \n             try\n             {\n-                UriBuilder.fromUri( firstHostInXForwardedHostHeader ).build();\n-            }\n-            catch ( IllegalArgumentException ex )\n+                UriBuilder.fromUri(firstHostInXForwardedHostHeader).build();\n+            } catch (IllegalArgumentException ex)\n             {\n                 this.isValid = false;\n                 return;\n             }\n \n-            String[] strings = firstHostInXForwardedHostHeader.split( \":\" );\n-            if ( strings.length > 0 )\n+            String[] strings = firstHostInXForwardedHostHeader.split(\":\");\n+            if (strings.length > 0)\n             {\n                 this.host = strings[0];\n                 isValid = true;\n             }\n-            if ( strings.length > 1 )\n+            if (strings.length > 1)\n             {\n-                this.port = Integer.parseInt( strings[1] );\n+                this.port = Integer.parseInt(strings[1]);\n                 isValid = true;\n             }\n-            if ( strings.length > 2 )\n+            if (strings.length > 2)\n             {\n                 this.isValid = false;\n             }\n@@ -129,14 +129,14 @@ public class XForwardUtil\n     {\n         final String headerValue;\n \n-        ForwardedProto( String headerValue )\n+        ForwardedProto(String headerValue)\n         {\n-            this.headerValue = requireNonNullElse( headerValue, \"\" );\n+            this.headerValue = requireNonNullElse(headerValue, \"\");\n         }\n \n         boolean isValid()\n         {\n-            return headerValue.toLowerCase().equals( \"http\" ) || headerValue.toLowerCase().equals( \"https\" );\n+            return headerValue.toLowerCase().equals(\"http\") || headerValue.toLowerCase().equals(\"https\");\n         }\n \n         String getScheme()\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2218/XForwardUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2218/XForwardUtil.java\nindex 07160e95ef3..f28890bc069 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2218/XForwardUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2218/XForwardUtil.java\n@@ -144,4 +144,4 @@ public class XForwardUtil\n             return headerValue;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
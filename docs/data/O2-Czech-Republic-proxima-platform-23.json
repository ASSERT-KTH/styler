{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public DataAccessor createAccessor(\n      DirectDataOperator operator, AttributeFamilyDescriptor family) {\n    return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg());\n  }\n\n  static URI remap(URI input) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/23/HadoopStorage.java\nindex 3a7ace549cf..73eb35df57b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/23/HadoopStorage.java\n@@ -35,7 +35,8 @@ public class HadoopStorage implements DataAccessorFactory {\n   @Override\n   public DataAccessor createAccessor(\n       DirectDataOperator operator, AttributeFamilyDescriptor family) {\n-    return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg());\n+        return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(),family.getCfg\n+      ());\n   }\n \n   static URI remap(URI input) {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/23/HadoopStorage.java\nindex 3a7ace549cf..55027d944dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/23/HadoopStorage.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.hadoop;\n \n import com.google.common.base.Preconditions;\n@@ -35,7 +36,8 @@ public class HadoopStorage implements DataAccessorFactory {\n   @Override\n   public DataAccessor createAccessor(\n       DirectDataOperator operator, AttributeFamilyDescriptor family) {\n-    return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg());\n+    return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(),\n+        family.getCfg());\n   }\n \n   static URI remap(URI input) {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "78",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/23/HadoopStorage.java\nindex 3a7ace549cf..6f7222e4859 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/23/HadoopStorage.java\n@@ -40,20 +40,17 @@ public class HadoopStorage implements DataAccessorFactory {\n \n   static URI remap(URI input) {\n     if (input.getScheme().equals(\"hadoop\")) {\n-      Preconditions.checkArgument(\n-          !Strings.isNullOrEmpty(input.getSchemeSpecificPart())\n+      Preconditions.checkArgument(!Strings.isNullOrEmpty(input.getSchemeSpecificPart())\n               && !(\"//\" + input.getPath()).equals(input.getSchemeSpecificPart()),\n           \"When using generic `hadoop` scheme, please use scheme-specific part \"\n               + \"for actual filesystem scheme (e.g. hadoop:file:///)\");\n-      return URI.create(input.getSchemeSpecificPart());\n+return URI.create(input.getSchemeSpecificPart());\n     }\n     return input;\n   }\n \n   @Override\n   public Accept accepts(URI uri) {\n-    return uri.getScheme().equals(\"hdfs\") || uri.getScheme().equals(\"hadoop\")\n-        ? Accept.ACCEPT\n-        : Accept.REJECT;\n+    return uri.getScheme().equals(\"hdfs\") || uri.getScheme().equals(\"hadoop\")? Accept.ACCEPT : Accept.REJECT;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 284).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "77",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "92",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/23/HadoopStorage.java\nindex 3a7ace549cf..91bc79ed1b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/23/HadoopStorage.java\n@@ -26,6 +26,8 @@ import lombok.EqualsAndHashCode;\n import lombok.extern.slf4j.Slf4j;\n \n /** Writer to HDFS. */\n+\n+\n @Slf4j\n @EqualsAndHashCode\n public class HadoopStorage implements DataAccessorFactory {\n@@ -33,18 +35,13 @@ public class HadoopStorage implements DataAccessorFactory {\n   private static final long serialVersionUID = 1L;\n \n   @Override\n-  public DataAccessor createAccessor(\n-      DirectDataOperator operator, AttributeFamilyDescriptor family) {\n+  public DataAccessor createAccessor(DirectDataOperator operator, AttributeFamilyDescriptor family) {\n     return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg());\n   }\n \n   static URI remap(URI input) {\n     if (input.getScheme().equals(\"hadoop\")) {\n-      Preconditions.checkArgument(\n-          !Strings.isNullOrEmpty(input.getSchemeSpecificPart())\n-              && !(\"//\" + input.getPath()).equals(input.getSchemeSpecificPart()),\n-          \"When using generic `hadoop` scheme, please use scheme-specific part \"\n-              + \"for actual filesystem scheme (e.g. hadoop:file:///)\");\n+      Preconditions.checkArgument(!Strings.isNullOrEmpty(input.getSchemeSpecificPart()) && !(\"//\" + input.getPath()).equals(input.getSchemeSpecificPart()), \"When using generic `hadoop` scheme, please use scheme-specific part \" + \"for actual filesystem scheme (e.g. hadoop:file:///)\");\n       return URI.create(input.getSchemeSpecificPart());\n     }\n     return input;\n@@ -52,8 +49,6 @@ public class HadoopStorage implements DataAccessorFactory {\n \n   @Override\n   public Accept accepts(URI uri) {\n-    return uri.getScheme().equals(\"hdfs\") || uri.getScheme().equals(\"hadoop\")\n-        ? Accept.ACCEPT\n-        : Accept.REJECT;\n+    return uri.getScheme().equals(\"hdfs\")|| uri.getScheme().equals(\"hadoop\")? Accept.ACCEPT: Accept.REJECT;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "101",
                    "severity": "error",
                    "message": "'}' at column 101 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "38",
                    "column": "102",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/23/HadoopStorage.java\nindex 3a7ace549cf..631a990f7ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/23/HadoopStorage.java\n@@ -35,10 +35,7 @@ public class HadoopStorage implements DataAccessorFactory {\n   @Override\n   public DataAccessor createAccessor(\n       DirectDataOperator operator, AttributeFamilyDescriptor family) {\n-    return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg());\n-  }\n-\n-  static URI remap(URI input) {\n+        return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg()); }static URI remap(URI input) {\n     if (input.getScheme().equals(\"hadoop\")) {\n       Preconditions.checkArgument(\n           !Strings.isNullOrEmpty(input.getSchemeSpecificPart())\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/23/HadoopStorage.java\nindex 3a7ace549cf..73eb35df57b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/23/HadoopStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/23/HadoopStorage.java\n@@ -35,7 +35,8 @@ public class HadoopStorage implements DataAccessorFactory {\n   @Override\n   public DataAccessor createAccessor(\n       DirectDataOperator operator, AttributeFamilyDescriptor family) {\n-    return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(), family.getCfg());\n+        return new HadoopDataAccessor(family.getEntity(), family.getStorageUri(),family.getCfg\n+      ());\n   }\n \n   static URI remap(URI input) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2145",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2145/PathEvaluator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2145/PathEvaluator.java\nindex 04fb8af11fc..8ee21e55af0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2145/PathEvaluator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2145/PathEvaluator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n import org.neo4j.graphdb.Path;\n@@ -35,33 +36,34 @@ import org.neo4j.graphdb.Path;\n  */\n public interface PathEvaluator<STATE> extends Evaluator\n {\n-    /**\n-     * Evaluates a {@link Path} and returns an {@link Evaluation} containing\n-     * information about whether or not to include it in the traversal result,\n-     * i.e return it from the {@link Traverser}. And also whether or not to\n-     * continue traversing down that {@code path} or if it instead should be\n-     * pruned so that the traverser won't continue down that branch represented\n-     * by {@code path}.\n-     *\n-     * @param path the {@link Path} to evaluate.\n-     * @param state the state of this branch in the current traversal.\n-     * @return an {@link Evaluation} containing information about whether or not\n-     * to return it from the {@link Traverser} and whether or not to continue\n-     * down that path.\n-     */\n-    Evaluation evaluate( Path path, BranchState<STATE> state );\n+  /**\n+   * Evaluates a {@link Path} and returns an {@link Evaluation} containing\n+   * information about whether or not to include it in the traversal result,\n+   * i.e return it from the {@link Traverser}. And also whether or not to\n+   * continue traversing down that {@code path} or if it instead should be\n+   * pruned so that the traverser won't continue down that branch represented\n+   * by {@code path}.\n+   *\n+   * @param path  the {@link Path} to evaluate.\n+   * @param state the state of this branch in the current traversal.\n+   * @return an {@link Evaluation} containing information about whether or not\n+   * to return it from the {@link Traverser} and whether or not to continue\n+   * down that path.\n+   */\n+  Evaluation evaluate(Path path, BranchState<STATE> state);\n \n-    /**\n-     * Adapter for {@link PathEvaluator}.\n-     * @param <STATE> the type of the state object\n-     */\n-    abstract class Adapter<STATE> implements PathEvaluator<STATE>\n+  /**\n+   * Adapter for {@link PathEvaluator}.\n+   *\n+   * @param <STATE> the type of the state object\n+   */\n+  abstract class Adapter<STATE> implements PathEvaluator<STATE>\n+  {\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public Evaluation evaluate(Path path)\n     {\n-        @Override\n-        @SuppressWarnings( \"unchecked\" )\n-        public Evaluation evaluate( Path path )\n-        {\n-            return evaluate( path, BranchState.NO_STATE );\n-        }\n+      return evaluate(path, BranchState.NO_STATE);\n     }\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2145/PathEvaluator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2145/PathEvaluator.java\nindex 04fb8af11fc..7ca5c7da5df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2145/PathEvaluator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2145/PathEvaluator.java\n@@ -64,4 +64,4 @@ public interface PathEvaluator<STATE> extends Evaluator\n             return evaluate( path, BranchState.NO_STATE );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
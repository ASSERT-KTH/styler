{
    "project_name": "Angel-ML-angel",
    "error_id": "795",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/795/DenseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/795/DenseIntRowUpdateSplit.java\nindex 9531d5ddf38..ecf30f776a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/795/DenseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/795/DenseIntRowUpdateSplit.java\n@@ -35,8 +35,8 @@ public class DenseIntRowUpdateSplit extends RowUpdateSplit {\n   /**\r\n    * Create a new dense int row split update\r\n    *\r\n-   * @param start start position\r\n-   * @param end end position\r\n+   * @param start  start position\r\n+   * @param end    end position\r\n    * @param values values of row update\r\n    */\r\n   public DenseIntRowUpdateSplit(int rowIndex, int start, int end, int[] values) {\r\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/795/DenseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/795/DenseIntRowUpdateSplit.java\nindex 9531d5ddf38..49d7b6853da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/795/DenseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/795/DenseIntRowUpdateSplit.java\n@@ -13,9 +13,8 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\r\n  * the License.\r\n  *\r\n- */\r\n-\r\n-\r\n+ */\n+\n package com.tencent.angel.psagent.matrix.oplog.cache;\r\n \r\n import com.tencent.angel.ml.math2.VFactory;\r\n@@ -74,11 +73,10 @@ public class DenseIntRowUpdateSplit extends RowUpdateSplit {\n       data[i] = buf.readInt();\r\n     }\r\n     vector = VFactory.denseIntVector(data);\r\n-  }\r\n-\r\n-\r\n-  @Override\r\n+  }\n+\n+@Override\r\n   public int bufferLen() {\r\n     return 4 + super.bufferLen() + (end - start) * 4;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/795/DenseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/795/DenseIntRowUpdateSplit.java\nindex 9531d5ddf38..7021853a2d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/795/DenseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/795/DenseIntRowUpdateSplit.java\n@@ -16,20 +16,22 @@\n  */\r\n \r\n \r\n-package com.tencent.angel.psagent.matrix.oplog.cache;\r\n-\r\n-import com.tencent.angel.ml.math2.VFactory;\r\n-import com.tencent.angel.ml.math2.utils.RowType;\r\n+package com.tencent.angel.psagent.matrix.oplog.cache;\n+\n+import com.tencent.angel.ml.math2.VFactory;\n+import com.tencent.angel.ml.math2.utils.RowType;\n import io.netty.buffer.ByteBuf;\r\n \r\n /**\r\n  * Row split of dense int row update.\r\n- */\r\n+ */\n+\n public class DenseIntRowUpdateSplit extends RowUpdateSplit {\r\n \r\n   /**\r\n    * values of row\r\n-   */\r\n+   */\n+\n   private final int[] values;\r\n \r\n   /**\r\n@@ -38,47 +40,50 @@ public class DenseIntRowUpdateSplit extends RowUpdateSplit {\n    * @param start start position\r\n    * @param end end position\r\n    * @param values values of row update\r\n-   */\r\n-  public DenseIntRowUpdateSplit(int rowIndex, int start, int end, int[] values) {\r\n-    super(rowIndex, RowType.T_INT_DENSE, start, end);\r\n-    this.values = values;\r\n-  }\r\n-\r\n-  public DenseIntRowUpdateSplit() {\r\n-    this(-1, -1, -1, null);\r\n+   */\n+\n+  public DenseIntRowUpdateSplit(int rowIndex, int start, int end, int[] values) {\n+    super(rowIndex, RowType.T_INT_DENSE, start, end);\n+    this.values = values;\n+  }\n+\n+  public DenseIntRowUpdateSplit() {\n+    this(-1, -1, -1, null);\n   }\r\n \r\n   /**\r\n    * Get values of row update\r\n    *\r\n    * @return int[] values of row update\r\n-   */\r\n-  public int[] getValues() {\r\n-    return values;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    super.serialize(buf);\r\n-    buf.writeInt(end - start);\r\n-    for (int i = start; i < end; i++) {\r\n-      buf.writeInt(values[i]);\r\n-    }\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    super.deserialize(buf);\r\n-    int[] data = new int[buf.readInt()];\r\n-    for (int i = 0; i < data.length; i++) {\r\n-      data[i] = buf.readInt();\r\n-    }\r\n-    vector = VFactory.denseIntVector(data);\r\n-  }\r\n-\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 4 + super.bufferLen() + (end - start) * 4;\r\n-  }\r\n-}\r\n+   */\n+\n+  public int[] getValues() {\n+    return values;\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf buf) {\n+    super.serialize(buf);\n+    buf.writeInt(end - start);\n+    for (int i = start; i < end; i++) {\n+      buf.writeInt(values[i]);\n+    }\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n+    super.deserialize(buf);\n+\n+    int[] data = new int[buf.readInt()];\n+    for (int i = 0; i < data.length; i++) {\n+      data[i] = buf.readInt();\n+    }\n+    vector = VFactory.denseIntVector(data);\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    return 4 + super.bufferLen() + (end - start) * 4;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
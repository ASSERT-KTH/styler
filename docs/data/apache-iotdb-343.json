{
    "project_name": "apache-iotdb",
    "error_id": "343",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.cluster.server.handlers.caller;\n\nimport org.apache.iotdb.cluster.config.ClusterDescriptor;\nimport org.apache.iotdb.cluster.log.Log;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/343/AppendNodeEntryHandler.java\nindex fa744d1fbcd..ca7495abf03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/343/AppendNodeEntryHandler.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.server.handlers.caller;\n \n import org.apache.iotdb.cluster.config.ClusterDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/343/AppendNodeEntryHandler.java\nindex fa744d1fbcd..ca7495abf03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/343/AppendNodeEntryHandler.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.server.handlers.caller;\n \n import org.apache.iotdb.cluster.config.ClusterDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'\"{}: Received an agreement from {} for {}, remaining votes to succeed: {}\"' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'member' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'receiver' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'log' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'remaining' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'\"{}: Log [{}] {} is accepted by the quorum\"' has incorrect indentation level 13, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'member' has incorrect indentation level 13, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'log' has incorrect indentation level 13, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "'log' has incorrect indentation level 13, expected level should be 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'\"{}: Cannot append log {}: cannot connect to {}: {}\"' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "'member' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'log' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'receiver' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'exception' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/343/AppendNodeEntryHandler.java\nindex fa744d1fbcd..b631bf901cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/343/AppendNodeEntryHandler.java\n@@ -25,11 +25,9 @@ import org.apache.iotdb.cluster.server.member.RaftMember;\n import org.apache.iotdb.cluster.server.monitor.Peer;\n import org.apache.iotdb.cluster.server.monitor.Timer;\n import org.apache.iotdb.cluster.server.monitor.Timer.Statistic;\n-\n import org.apache.thrift.async.AsyncMethodCallback;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.net.ConnectException;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.concurrent.atomic.AtomicInteger;\n@@ -43,10 +41,10 @@ import static org.apache.iotdb.cluster.server.Response.RESPONSE_AGREE;\n  * log is the single nodes, it requires the agreement from the quorum of the nodes to reach\n  * consistency.\n  */\n+\n public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n \n   private static final Logger logger = LoggerFactory.getLogger(AppendNodeEntryHandler.class);\n-\n   private RaftMember member;\n   private AtomicLong receiverTerm;\n   private Log log;\n@@ -62,8 +60,7 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n   private long sendStart = Long.MIN_VALUE;\n \n   public AppendNodeEntryHandler() {\n-    if (Timer.ENABLE_INSTRUMENTING\n-        && ClusterDescriptor.getInstance().getConfig().isUseAsyncServer()) {\n+    if (Timer.ENABLE_INSTRUMENTING && ClusterDescriptor.getInstance().getConfig().isUseAsyncServer()) {\n       sendStart = System.nanoTime();\n     }\n   }\n@@ -87,17 +84,17 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n       if (resp == RESPONSE_AGREE) {\n         int remaining = voteCounter.decrementAndGet();\n         logger.debug(\n-            \"{}: Received an agreement from {} for {}, remaining votes to succeed: {}\",\n-            member.getName(),\n-            receiver,\n-            log,\n-            remaining);\n+           \"{}: Received an agreement from {} for {}, remaining votes to succeed: {}\",\n+           member.getName(),\n+           receiver,\n+           log,\n+           remaining);\n         if (remaining == 0) {\n           logger.debug(\n-              \"{}: Log [{}] {} is accepted by the quorum\",\n-              member.getName(),\n-              log.getCurrLogIndex(),\n-              log);\n+             \"{}: Log [{}] {} is accepted by the quorum\",\n+             member.getName(),\n+             log.getCurrLogIndex(),\n+             log);\n           voteCounter.notifyAll();\n         }\n         peer.setMatchIndex(Math.max(log.getCurrLogIndex(), peer.getMatchIndex()));\n@@ -106,11 +103,11 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n         // the leader ship is stale, wait for the new leader's heartbeat\n         long prevReceiverTerm = receiverTerm.get();\n         logger.debug(\n-            \"{}: Received a rejection from {} because term is stale: {}/{}\",\n-            member.getName(),\n-            receiver,\n-            prevReceiverTerm,\n-            resp);\n+                  \"{}: Received a rejection from {} because term is stale: {}/{}\",\n+                  member.getName(),\n+                  receiver,\n+                  prevReceiverTerm,\n+                  resp);\n         if (resp > prevReceiverTerm) {\n           receiverTerm.set(resp);\n         }\n@@ -118,8 +115,7 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n         voteCounter.notifyAll();\n       } else {\n         // e.g., Response.RESPONSE_LOG_MISMATCH\n-        logger.debug(\n-            \"{}: The log {} is rejected by {} because: {}\", member.getName(), log, receiver, resp);\n+        logger.debug(\"{}: The log {} is rejected by {} because: {}\", member.getName(), log, receiver, resp);\n         onFail();\n       }\n       // rejected because the receiver's logs are stale or the receiver has no cluster info, just\n@@ -131,11 +127,11 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n   public void onError(Exception exception) {\n     if (exception instanceof ConnectException) {\n       logger.warn(\n-          \"{}: Cannot append log {}: cannot connect to {}: {}\",\n-          member.getName(),\n-          log,\n-          receiver,\n-          exception.getMessage());\n+         \"{}: Cannot append log {}: cannot connect to {}: {}\",\n+         member.getName(),\n+         log,\n+         receiver,\n+         exception.getMessage());\n     } else {\n       logger.warn(\"{}: Cannot append log {} to {}\", member.getName(), log, receiver, exception);\n     }\n@@ -163,8 +159,7 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n \n   public void setVoteCounter(AtomicInteger voteCounter) {\n     this.voteCounter = voteCounter;\n-    this.failedDecreasingCounter =\n-        ClusterDescriptor.getInstance().getConfig().getReplicationNum() - voteCounter.get();\n+    this.failedDecreasingCounter = ClusterDescriptor.getInstance().getConfig().getReplicationNum() - voteCounter.get();\n   }\n \n   public void setLeaderShipStale(AtomicBoolean leaderShipStale) {\n@@ -182,4 +177,4 @@ public class AppendNodeEntryHandler implements AsyncMethodCallback<Long> {\n   public void setReceiverTerm(AtomicLong receiverTerm) {\n     this.receiverTerm = receiverTerm;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/343/AppendNodeEntryHandler.java\nindex fa744d1fbcd..ca7495abf03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/343/AppendNodeEntryHandler.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.server.handlers.caller;\n \n import org.apache.iotdb.cluster.config.ClusterDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/343/AppendNodeEntryHandler.java\nindex fa744d1fbcd..ca7495abf03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/343/AppendNodeEntryHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/343/AppendNodeEntryHandler.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.server.handlers.caller;\n \n import org.apache.iotdb.cluster.config.ClusterDescriptor;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
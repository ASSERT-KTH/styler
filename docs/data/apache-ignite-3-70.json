{
    "project_name": "apache-ignite-3",
    "error_id": "70",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "    implements InstructionNode {\n    private final String name;\n    private final Label label;\n\n    public LabelNode() {\n        this.label = new Label();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/70/LabelNode.java\nindex 6e324f86457..c9c5dfe8939 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/70/LabelNode.java\n@@ -23,6 +23,7 @@ import org.objectweb.asm.MethodVisitor;\n public class LabelNode\n     implements InstructionNode {\n     private final String name;\n+\n     private final Label label;\n \n     public LabelNode() {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/70/LabelNode.java\nindex 6e324f86457..22793bbab4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/70/LabelNode.java\n@@ -11,6 +11,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.facebook.presto.bytecode.instruction;\n \n import com.facebook.presto.bytecode.BytecodeNode;\n@@ -22,49 +23,50 @@ import org.objectweb.asm.MethodVisitor;\n \n public class LabelNode\n     implements InstructionNode {\n-    private final String name;\n-    private final Label label;\n+  private final String name;\n+\n+  private final Label label;\n \n-    public LabelNode() {\n-        this.label = new Label();\n-        this.name = \"label@\" + label.hashCode();\n-    }\n+  public LabelNode() {\n+    this.label = new Label();\n+    this.name = \"label@\" + label.hashCode();\n+  }\n \n-    public LabelNode(LabelNode labelNode) {\n-        this.label = labelNode.getLabel();\n-        this.name = \"label@\" + label.hashCode();\n-    }\n+  public LabelNode(LabelNode labelNode) {\n+    this.label = labelNode.getLabel();\n+    this.name = \"label@\" + label.hashCode();\n+  }\n \n-    public LabelNode(String name) {\n-        this.label = new Label();\n-        this.name = name + \"@\" + label.hashCode();\n-    }\n+  public LabelNode(String name) {\n+    this.label = new Label();\n+    this.name = name + \"@\" + label.hashCode();\n+  }\n \n-    public String getName() {\n-        return name;\n-    }\n+  public String getName() {\n+    return name;\n+  }\n \n-    public Label getLabel() {\n-        return label;\n-    }\n+  public Label getLabel() {\n+    return label;\n+  }\n \n-    @Override\n-    public void accept(MethodVisitor visitor, MethodGenerationContext generationContext) {\n-        visitor.visitLabel(label);\n-    }\n+  @Override\n+  public void accept(MethodVisitor visitor, MethodGenerationContext generationContext) {\n+    visitor.visitLabel(label);\n+  }\n \n-    @Override\n-    public String toString() {\n-        return getClass().getSimpleName() + \"{name=\" + name + '}';\n-    }\n+  @Override\n+  public String toString() {\n+    return getClass().getSimpleName() + \"{name=\" + name + '}';\n+  }\n \n-    @Override\n-    public List<BytecodeNode> getChildNodes() {\n-        return List.of();\n-    }\n+  @Override\n+  public List<BytecodeNode> getChildNodes() {\n+    return List.of();\n+  }\n \n-    @Override\n-    public <T> T accept(BytecodeNode parent, BytecodeVisitor<T> visitor) {\n-        return visitor.visitLabel(parent, this);\n-    }\n+  @Override\n+  public <T> T accept(BytecodeNode parent, BytecodeVisitor<T> visitor) {\n+    return visitor.visitLabel(parent, this);\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/70/LabelNode.java\nindex 6e324f86457..21440967865 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/70/LabelNode.java\n@@ -67,4 +67,4 @@ public class LabelNode\n     public <T> T accept(BytecodeNode parent, BytecodeVisitor<T> visitor) {\n         return visitor.visitLabel(parent, this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "38",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "50",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "59",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "74",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/70/LabelNode.java\nindex 6e324f86457..15a86d899e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/70/LabelNode.java\n@@ -20,26 +20,33 @@ import java.util.List;\n import org.objectweb.asm.Label;\n import org.objectweb.asm.MethodVisitor;\n \n-public class LabelNode\n-    implements InstructionNode {\n+\n+public class LabelNode implements InstructionNode {\n+\n     private final String name;\n+\n+\n     private final Label label;\n \n+\n     public LabelNode() {\n         this.label = new Label();\n         this.name = \"label@\" + label.hashCode();\n     }\n \n+\n     public LabelNode(LabelNode labelNode) {\n         this.label = labelNode.getLabel();\n         this.name = \"label@\" + label.hashCode();\n     }\n \n+\n     public LabelNode(String name) {\n         this.label = new Label();\n         this.name = name + \"@\" + label.hashCode();\n     }\n \n+\n     public String getName() {\n         return name;\n     }\n@@ -48,23 +55,23 @@ public class LabelNode\n         return label;\n     }\n \n-    @Override\n-    public void accept(MethodVisitor visitor, MethodGenerationContext generationContext) {\n+\n+    @Override public void accept(MethodVisitor visitor, MethodGenerationContext generationContext) {\n         visitor.visitLabel(label);\n     }\n \n-    @Override\n-    public String toString() {\n+\n+    @Override public String toString() {\n         return getClass().getSimpleName() + \"{name=\" + name + '}';\n     }\n \n-    @Override\n-    public List<BytecodeNode> getChildNodes() {\n+\n+    @Override public List<BytecodeNode> getChildNodes() {\n         return List.of();\n     }\n \n-    @Override\n-    public <T> T accept(BytecodeNode parent, BytecodeVisitor<T> visitor) {\n+\n+    @Override public <T> T accept(BytecodeNode parent, BytecodeVisitor<T> visitor) {\n         return visitor.visitLabel(parent, this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/70/LabelNode.java\nindex 6e324f86457..c9c5dfe8939 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/70/LabelNode.java\n@@ -23,6 +23,7 @@ import org.objectweb.asm.MethodVisitor;\n public class LabelNode\n     implements InstructionNode {\n     private final String name;\n+\n     private final Label label;\n \n     public LabelNode() {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/70/LabelNode.java\nindex 6e324f86457..c9c5dfe8939 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/70/LabelNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/70/LabelNode.java\n@@ -23,6 +23,7 @@ import org.objectweb.asm.MethodVisitor;\n public class LabelNode\n     implements InstructionNode {\n     private final String name;\n+\n     private final Label label;\n \n     public LabelNode() {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
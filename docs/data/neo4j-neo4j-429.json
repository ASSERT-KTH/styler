{
    "project_name": "neo4j-neo4j",
    "error_id": "429",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/429/Dumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/429/Dumper.java\nindex 4239e0e7219..c8f5743c4a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/429/Dumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/429/Dumper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.archive;\n \n import org.apache.commons.compress.archivers.ArchiveEntry;\n@@ -55,105 +56,106 @@ public class Dumper\n     public Dumper()\n     {\n         operations = new ArrayList<>();\n-        progressPrinter = new ArchiveProgressPrinter( null );\n+        progressPrinter = new ArchiveProgressPrinter(null);\n     }\n \n-    public Dumper( PrintStream output )\n+    public Dumper(PrintStream output)\n     {\n         operations = new ArrayList<>();\n-        progressPrinter = new ArchiveProgressPrinter( output );\n+        progressPrinter = new ArchiveProgressPrinter(output);\n     }\n \n-    public void dump( Path dbPath, Path transactionalLogsPath, Path archive, CompressionFormat format, Predicate<Path> exclude ) throws IOException\n+    public void dump(Path dbPath, Path transactionalLogsPath, Path archive, CompressionFormat format, Predicate<Path> exclude) throws IOException\n     {\n-        checkWritableDirectory( archive.getParent() );\n+        checkWritableDirectory(archive.getParent());\n         operations.clear();\n \n-        visitPath( dbPath, exclude );\n-        if ( !Util.isSameOrChildFile( dbPath, transactionalLogsPath ) )\n+        visitPath(dbPath, exclude);\n+        if (!Util.isSameOrChildFile(dbPath, transactionalLogsPath))\n         {\n-            visitPath( transactionalLogsPath, exclude );\n+            visitPath(transactionalLogsPath, exclude);\n         }\n \n         progressPrinter.reset();\n-        for ( ArchiveOperation operation : operations )\n+        for (ArchiveOperation operation : operations)\n         {\n             progressPrinter.maxBytes += operation.size;\n             progressPrinter.maxFiles += operation.isFile ? 1 : 0;\n         }\n \n-        try ( ArchiveOutputStream stream = openArchiveOut( archive, format );\n-              Resource ignore = progressPrinter.startPrinting() )\n+        try (ArchiveOutputStream stream = openArchiveOut(archive, format);\n+             Resource ignore = progressPrinter.startPrinting())\n         {\n-            for ( ArchiveOperation operation : operations )\n+            for (ArchiveOperation operation : operations)\n             {\n-                operation.addToArchive( stream );\n+                operation.addToArchive(stream);\n             }\n         }\n     }\n \n-    private void visitPath( Path transactionalLogsPath, Predicate<Path> exclude ) throws IOException\n+    private void visitPath(Path transactionalLogsPath, Predicate<Path> exclude) throws IOException\n     {\n-        Files.walkFileTree( transactionalLogsPath,\n-                onlyMatching( exclude.negate(),\n-                        throwExceptions(\n-                                onDirectory( dir -> dumpDirectory( transactionalLogsPath, dir ),\n-                                        onFile( file -> dumpFile( transactionalLogsPath, file ),\n-                                                justContinue() ) ) ) ) );\n+        Files.walkFileTree(transactionalLogsPath,\n+          onlyMatching(exclude.negate(),\n+            throwExceptions(\n+              onDirectory(dir -> dumpDirectory(transactionalLogsPath, dir),\n+                onFile(file -> dumpFile(transactionalLogsPath, file),\n+                  justContinue())))));\n     }\n \n-    private ArchiveOutputStream openArchiveOut( Path archive, CompressionFormat format ) throws IOException\n+    private ArchiveOutputStream openArchiveOut(Path archive, CompressionFormat format) throws IOException\n     {\n         // StandardOpenOption.CREATE_NEW is important here because it atomically asserts that the file doesn't\n         // exist as it is opened, avoiding a TOCTOU race condition which results in a security vulnerability. I\n         // can't see a way to write a test to verify that we are using this option rather than just implementing\n         // the check ourselves non-atomically.\n-        OutputStream out = Files.newOutputStream( archive, StandardOpenOption.CREATE_NEW );\n-        OutputStream compress = format.compress( out );\n+        OutputStream out = Files.newOutputStream(archive, StandardOpenOption.CREATE_NEW);\n+        OutputStream compress = format.compress(out);\n \n         // Add enough archive meta-data that the load command can print a meaningful progress indicator.\n-        if ( format == CompressionFormat.ZSTD )\n+        if (format == CompressionFormat.ZSTD)\n         {\n-            writeArchiveMetadata( compress );\n+            writeArchiveMetadata(compress);\n         }\n \n-        TarArchiveOutputStream tarball = new TarArchiveOutputStream( compress ) ;\n-        tarball.setLongFileMode( TarArchiveOutputStream.LONGFILE_POSIX );\n-        tarball.setBigNumberMode( TarArchiveOutputStream.BIGNUMBER_POSIX );\n+        TarArchiveOutputStream tarball = new TarArchiveOutputStream(compress);\n+        tarball.setLongFileMode(TarArchiveOutputStream.LONGFILE_POSIX);\n+        tarball.setBigNumberMode(TarArchiveOutputStream.BIGNUMBER_POSIX);\n         return tarball;\n     }\n \n     /**\n      * @see Loader#readArchiveMetadata(InputStream)\n      */\n-    void writeArchiveMetadata( OutputStream stream ) throws IOException\n+    void writeArchiveMetadata(OutputStream stream) throws IOException\n     {\n-        DataOutputStream metadata = new DataOutputStream( stream ); // Unbuffered. No need for flushing.\n-        metadata.writeInt( 1 ); // Archive format version. Increment whenever the metadata format changes.\n-        metadata.writeLong( progressPrinter.maxFiles );\n-        metadata.writeLong( progressPrinter.maxBytes );\n+        DataOutputStream metadata = new DataOutputStream(stream); // Unbuffered. No need for flushing.\n+        metadata.writeInt(1); // Archive format version. Increment whenever the metadata format changes.\n+        metadata.writeLong(progressPrinter.maxFiles);\n+        metadata.writeLong(progressPrinter.maxBytes);\n     }\n \n-    private void dumpFile( Path root, Path file ) throws IOException\n+    private void dumpFile(Path root, Path file) throws IOException\n     {\n-        withEntry( stream -> writeFile( file, stream ), root, file );\n+        withEntry(stream -> writeFile(file, stream), root, file);\n     }\n \n-    private void dumpDirectory( Path root, Path dir ) throws IOException\n+    private void dumpDirectory(Path root, Path dir) throws IOException\n     {\n-        withEntry( stream -> {}, root, dir );\n+        withEntry(stream -> {\n+        }, root, dir);\n     }\n \n-    private void withEntry( ThrowingConsumer<ArchiveOutputStream, IOException> operation, Path root, Path file ) throws IOException\n+    private void withEntry(ThrowingConsumer<ArchiveOutputStream, IOException> operation, Path root, Path file) throws IOException\n     {\n-        operations.add( new ArchiveOperation( operation, root, file ) );\n+        operations.add(new ArchiveOperation(operation, root, file));\n     }\n \n-    private void writeFile( Path file, ArchiveOutputStream archiveStream ) throws IOException\n+    private void writeFile(Path file, ArchiveOutputStream archiveStream) throws IOException\n     {\n-        try ( InputStream in = Files.newInputStream( file ) )\n+        try (InputStream in = Files.newInputStream(file))\n         {\n-            copy( in, archiveStream, progressPrinter );\n+            copy(in, archiveStream, progressPrinter);\n         }\n     }\n \n@@ -165,26 +167,26 @@ public class Dumper\n         final Path root;\n         final Path file;\n \n-        private ArchiveOperation( ThrowingConsumer<ArchiveOutputStream, IOException> operation, Path root, Path file ) throws IOException\n+        private ArchiveOperation(ThrowingConsumer<ArchiveOutputStream, IOException> operation, Path root, Path file) throws IOException\n         {\n             this.operation = operation;\n-            this.isFile = Files.isRegularFile( file );\n-            this.size = isFile ? Files.size( file ) : 0;\n+            this.isFile = Files.isRegularFile(file);\n+            this.size = isFile ? Files.size(file) : 0;\n             this.root = root;\n             this.file = file;\n         }\n \n-        void addToArchive( ArchiveOutputStream stream ) throws IOException\n+        void addToArchive(ArchiveOutputStream stream) throws IOException\n         {\n-            ArchiveEntry entry = createEntry( file, root, stream );\n-            stream.putArchiveEntry( entry );\n-            operation.accept( stream );\n+            ArchiveEntry entry = createEntry(file, root, stream);\n+            stream.putArchiveEntry(entry);\n+            operation.accept(stream);\n             stream.closeArchiveEntry();\n         }\n \n-        private ArchiveEntry createEntry( Path file, Path root, ArchiveOutputStream archive ) throws IOException\n+        private ArchiveEntry createEntry(Path file, Path root, ArchiveOutputStream archive) throws IOException\n         {\n-            return archive.createArchiveEntry( file.toFile(), \"./\" + root.relativize( file ) );\n+            return archive.createArchiveEntry(file.toFile(), \"./\" + root.relativize(file));\n         }\n     }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
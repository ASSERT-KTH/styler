{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "144",
    "information": {
        "errors": [
            {
                "line": "59",
                "column": "9",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        else\n        {\n        \tthis.schema = schema;\n        }\n        this.types = new TypesBridgeImpl();\n        this.atoms = new XmlAtomBridge(this.schema);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "79",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/144/TypedXmlNodeContext.java\nindex c15b9bca75b..ae49b35489a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/144/TypedXmlNodeContext.java\n@@ -56,7 +56,7 @@ public class TypedXmlNodeContext\n         }\n         else\n         {\n-        \tthis.schema = schema;\n+        this.schema = schema;\n         }\n         this.types = new TypesBridgeImpl();\n         this.atoms = new XmlAtomBridge(this.schema);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/144/TypedXmlNodeContext.java\nindex c15b9bca75b..01a24d2a1a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/144/TypedXmlNodeContext.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.bridge.cx.typed;\n \n import javax.xml.namespace.QName;\n@@ -44,58 +45,46 @@ import org.genxdm.typed.types.TypesBridge;\n import org.genxdm.xs.SchemaComponentCache;\n \n public class TypedXmlNodeContext\n-    implements TypedContext<XmlNode, XmlAtom>\n-{\n+    implements TypedContext<XmlNode, XmlAtom> {\n \n-    public TypedXmlNodeContext(XmlNodeContext context, SchemaComponentCache schema)\n-    {\n+    public TypedXmlNodeContext(XmlNodeContext context, SchemaComponentCache schema) {\n         this.context = PreCondition.assertNotNull(context, \"context\");\n-        if (schema == null)\n-        {\n+        if (schema == null) {\n             this.schema = new SchemaCacheFactory().newSchemaCache();\n-        }\n-        else\n-        {\n-        \tthis.schema = schema;\n+        } else {\n+            this.schema = schema;\n         }\n         this.types = new TypesBridgeImpl();\n         this.atoms = new XmlAtomBridge(this.schema);\n         this.model = new TypedXmlNodeModel(atoms);\n         gator = new GenericValidator<XmlNode, XmlAtom>(this);\n     }\n-    \n-    public AtomBridge<XmlAtom> getAtomBridge()\n-    {\n+\n+    public AtomBridge<XmlAtom> getAtomBridge() {\n         return atoms;\n     }\n \n-    public TypesBridge getTypesBridge()\n-    {\n+    public TypesBridge getTypesBridge() {\n         return types;\n     }\n \n-    public SchemaComponentCache getSchema()\n-    {\n-    \treturn schema;\n+    public SchemaComponentCache getSchema() {\n+        return schema;\n     }\n-    \n-    public TypedModel<XmlNode, XmlAtom> getModel()\n-    {\n+\n+    public TypedModel<XmlNode, XmlAtom> getModel() {\n         return model;\n     }\n \n-    public ProcessingContext<XmlNode> getProcessingContext()\n-    {\n+    public ProcessingContext<XmlNode> getProcessingContext() {\n         return context;\n     }\n \n-    public TypedCursor<XmlNode, XmlAtom> newCursor(final XmlNode node)\n-    {\n+    public TypedCursor<XmlNode, XmlAtom> newCursor(final XmlNode node) {\n         return new TypedXmlNodeCursor(this, node);\n     }\n \n-    public SequenceBuilder<XmlNode, XmlAtom> newSequenceBuilder()\n-    {\n+    public SequenceBuilder<XmlNode, XmlAtom> newSequenceBuilder() {\n         // TODO: this is temporary; it enables namespace fixup that we\n         // need, but does so by piling on the virtual calls.  fix is\n         // either combining the filter and the wrapper, or pulling the\n@@ -107,33 +96,39 @@ public class TypedXmlNodeContext\n     }\n \n     @Override\n-    public ValidatingDocumentHandler<XmlNode, XmlAtom> newDocumentHandler(final SAXValidator<XmlAtom> validator, final XMLReporter reporter, final Resolver resolver)\n-    {\n+    public ValidatingDocumentHandler<XmlNode, XmlAtom> newDocumentHandler(\n+        final SAXValidator<XmlAtom> validator, final XMLReporter reporter,\n+        final Resolver resolver) {\n         return new ValidatingDocumentHandler<XmlNode, XmlAtom>(this, validator, reporter, resolver);\n     }\n \n     @Override\n-    public XmlNode validate(ContentGenerator source, ValidationHandler<XmlAtom> validator, QName initialType)\n-    {\n+    public XmlNode validate(ContentGenerator source, ValidationHandler<XmlAtom> validator,\n+                            QName initialType) {\n         return gator.validate(source, validator, initialType);\n     }\n \n     @Override\n-    public XmlNode validate(XmlNode source, ValidationHandler<XmlAtom> validator, QName initialType)\n-    {\n+    public XmlNode validate(XmlNode source, ValidationHandler<XmlAtom> validator,\n+                            QName initialType) {\n         return gator.validate(source, validator, initialType);\n     }\n-    \n+\n     @Override\n-    public void validateTree(XmlNode source, ValidationHandler<XmlAtom> validator, QName initialType)\n-    {\n+    public void validateTree(XmlNode source, ValidationHandler<XmlAtom> validator,\n+                             QName initialType) {\n         gator.validateTree(new TreeCursor(this, source), validator, initialType);\n     }\n \n     private final XmlNodeContext context;\n+\n     private final TypedXmlNodeModel model;\n+\n     private final XmlAtomBridge atoms;\n+\n     private final TypesBridge types;\n+\n     private final SchemaComponentCache schema;\n+\n     private final GenericValidator<XmlNode, XmlAtom> gator;\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/144/TypedXmlNodeContext.java\nindex c15b9bca75b..06bb4c2e0ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/144/TypedXmlNodeContext.java\n@@ -56,8 +56,8 @@ public class TypedXmlNodeContext\n         }\n         else\n         {\n-        \tthis.schema = schema;\n-        }\n+    this.schema = schema;\n+    }\n         this.types = new TypesBridgeImpl();\n         this.atoms = new XmlAtomBridge(this.schema);\n         this.model = new TypedXmlNodeModel(atoms);\n@@ -76,7 +76,7 @@ public class TypedXmlNodeContext\n \n     public SchemaComponentCache getSchema()\n     {\n-    \treturn schema;\n+    return schema;\n     }\n     \n     public TypedModel<XmlNode, XmlAtom> getModel()\n@@ -136,4 +136,4 @@ public class TypedXmlNodeContext\n     private final TypesBridge types;\n     private final SchemaComponentCache schema;\n     private final GenericValidator<XmlNode, XmlAtom> gator;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/144/TypedXmlNodeContext.java\nindex c15b9bca75b..86b26e41ddc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/144/TypedXmlNodeContext.java\n@@ -17,7 +17,6 @@ package org.genxdm.bridge.cx.typed;\n \n import javax.xml.namespace.QName;\n import javax.xml.stream.XMLReporter;\n-\n import org.genxdm.ProcessingContext;\n import org.genxdm.bridge.cx.base.XmlNodeContext;\n import org.genxdm.bridge.cx.tree.XmlNode;\n@@ -43,10 +42,8 @@ import org.genxdm.typed.types.AtomBridge;\n import org.genxdm.typed.types.TypesBridge;\n import org.genxdm.xs.SchemaComponentCache;\n \n-public class TypedXmlNodeContext\n-    implements TypedContext<XmlNode, XmlAtom>\n+public class TypedXmlNodeContext implements TypedContext<XmlNode, XmlAtom>\n {\n-\n     public TypedXmlNodeContext(XmlNodeContext context, SchemaComponentCache schema)\n     {\n         this.context = PreCondition.assertNotNull(context, \"context\");\n@@ -56,14 +53,14 @@ public class TypedXmlNodeContext\n         }\n         else\n         {\n-        \tthis.schema = schema;\n+            this.schema = schema;\n         }\n         this.types = new TypesBridgeImpl();\n         this.atoms = new XmlAtomBridge(this.schema);\n         this.model = new TypedXmlNodeModel(atoms);\n         gator = new GenericValidator<XmlNode, XmlAtom>(this);\n     }\n-    \n+\n     public AtomBridge<XmlAtom> getAtomBridge()\n     {\n         return atoms;\n@@ -76,9 +73,9 @@ public class TypedXmlNodeContext\n \n     public SchemaComponentCache getSchema()\n     {\n-    \treturn schema;\n+        return schema;\n     }\n-    \n+\n     public TypedModel<XmlNode, XmlAtom> getModel()\n     {\n         return model;\n@@ -123,7 +120,7 @@ public class TypedXmlNodeContext\n     {\n         return gator.validate(source, validator, initialType);\n     }\n-    \n+\n     @Override\n     public void validateTree(XmlNode source, ValidationHandler<XmlAtom> validator, QName initialType)\n     {\n@@ -136,4 +133,4 @@ public class TypedXmlNodeContext\n     private final TypesBridge types;\n     private final SchemaComponentCache schema;\n     private final GenericValidator<XmlNode, XmlAtom> gator;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "79",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/144/TypedXmlNodeContext.java\nindex c15b9bca75b..ae49b35489a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/144/TypedXmlNodeContext.java\n@@ -56,7 +56,7 @@ public class TypedXmlNodeContext\n         }\n         else\n         {\n-        \tthis.schema = schema;\n+        this.schema = schema;\n         }\n         this.types = new TypesBridgeImpl();\n         this.atoms = new XmlAtomBridge(this.schema);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "79",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/144/TypedXmlNodeContext.java\nindex c15b9bca75b..ea1299ec31c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/144/TypedXmlNodeContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/144/TypedXmlNodeContext.java\n@@ -56,7 +56,7 @@ public class TypedXmlNodeContext\n         }\n         else\n         {\n-        \tthis.schema = schema;\n+            this.schema = schema;\n         }\n         this.types = new TypesBridgeImpl();\n         this.atoms = new XmlAtomBridge(this.schema);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
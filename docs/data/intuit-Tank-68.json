{
    "project_name": "intuit-Tank",
    "error_id": "68",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     */\n    public boolean isValid() {\n        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n    }\n\n    @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "94",
                    "severity": "warning",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "100",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/68/InstanceTag.java\nindex ebb0882996c..3cbefc98e80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/68/InstanceTag.java\n@@ -44,10 +44,7 @@ public class InstanceTag implements Serializable {\n      * @return\n      */\n     public boolean isValid() {\n-        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n-    }\n-\n-    @Override\n+        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length()< 127 &&value.length() < 255;}@Override\n     public boolean equals(Object o) {\n         if (!(o instanceof InstanceTag)) {\n             return false;\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/68/InstanceTag.java\nindex ebb0882996c..cd75e193f1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/68/InstanceTag.java\n@@ -8,62 +8,62 @@ import org.apache.commons.lang.builder.HashCodeBuilder;\n \n public class InstanceTag implements Serializable {\n \n-    private static final long serialVersionUID = 1L;\n+  private static final long serialVersionUID = 1L;\n \n-    private String name;\n-    private String value;\n+  private String name;\n+  private String value;\n \n-    /**\n-     * @param name\n-     * @param value\n-     */\n-    public InstanceTag(String name, String value) {\n-        super();\n-        this.name = name;\n-        this.value = value;\n-    }\n+  /**\n+   * @param name\n+   * @param value\n+   */\n+  public InstanceTag(String name, String value) {\n+    super();\n+    this.name = name;\n+    this.value = value;\n+  }\n \n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n+  /**\n+   * @return the name\n+   */\n+  public String getName() {\n+    return name;\n+  }\n \n-    /**\n-     * @return the value\n-     */\n-    public String getValue() {\n-        return value;\n-    }\n+  /**\n+   * @return the value\n+   */\n+  public String getValue() {\n+    return value;\n+  }\n \n-    /**\n-     * tests to see if this tag has a name and a value and they are less than\n-     * the max size\n-     * \n-     * @return\n-     */\n-    public boolean isValid() {\n-        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n-    }\n+  /**\n+   * tests to see if this tag has a name and a value and they are less than\n+   * the max size\n+   *\n+   * @return\n+   */\n+  public boolean isValid() {\n+    return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n+  }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (!(o instanceof InstanceTag)) {\n-            return false;\n-        }\n-        InstanceTag other = (InstanceTag) o;\n-        return new EqualsBuilder().append(this.name, other.name).isEquals();\n+  @Override\n+  public boolean equals(Object o) {\n+    if (!(o instanceof InstanceTag)) {\n+      return false;\n     }\n+    InstanceTag other = (InstanceTag) o;\n+    return new EqualsBuilder().append(this.name, other.name).isEquals();\n+  }\n \n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder().append(name).toHashCode();\n-    }\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder().append(name).toHashCode();\n+  }\n \n-    @Override\n-    public String toString() {\n-        return name + \" = \" + value;\n-    }\n+  @Override\n+  public String toString() {\n+    return name + \" = \" + value;\n+  }\n \n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/68/InstanceTag.java\nindex ebb0882996c..dd6cf0fed87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/68/InstanceTag.java\n@@ -66,4 +66,4 @@ public class InstanceTag implements Serializable {\n         return name + \" = \" + value;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/68/InstanceTag.java\nindex ebb0882996c..fa2b61bd8a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/68/InstanceTag.java\n@@ -1,15 +1,16 @@\n package com.intuit.tank.vm.settings;\n \n-import java.io.Serializable;\n \n+\n+import java.io.Serializable;\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n \n+\n public class InstanceTag implements Serializable {\n \n     private static final long serialVersionUID = 1L;\n-\n     private String name;\n     private String value;\n \n@@ -17,6 +18,7 @@ public class InstanceTag implements Serializable {\n      * @param name\n      * @param value\n      */\n+\n     public InstanceTag(String name, String value) {\n         super();\n         this.name = name;\n@@ -26,6 +28,8 @@ public class InstanceTag implements Serializable {\n     /**\n      * @return the name\n      */\n+\n+\n     public String getName() {\n         return name;\n     }\n@@ -33,6 +37,8 @@ public class InstanceTag implements Serializable {\n     /**\n      * @return the value\n      */\n+\n+\n     public String getValue() {\n         return value;\n     }\n@@ -43,6 +49,8 @@ public class InstanceTag implements Serializable {\n      * \n      * @return\n      */\n+\n+\n     public boolean isValid() {\n         return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n     }\n@@ -66,4 +74,4 @@ public class InstanceTag implements Serializable {\n         return name + \" = \" + value;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "94",
                    "severity": "warning",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "100",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/68/InstanceTag.java\nindex ebb0882996c..3cbefc98e80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/68/InstanceTag.java\n@@ -44,10 +44,7 @@ public class InstanceTag implements Serializable {\n      * @return\n      */\n     public boolean isValid() {\n-        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n-    }\n-\n-    @Override\n+        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length()< 127 &&value.length() < 255;}@Override\n     public boolean equals(Object o) {\n         if (!(o instanceof InstanceTag)) {\n             return false;\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "47",
                    "column": "44",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "44",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "warning",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "warning",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "9",
                    "severity": "warning",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/68/InstanceTag.java\nindex ebb0882996c..7fbf7c2e67e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/68/InstanceTag.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/68/InstanceTag.java\n@@ -44,10 +44,13 @@ public class InstanceTag implements Serializable {\n      * @return\n      */\n     public boolean isValid() {\n-        return StringUtils.isNotBlank(name) && StringUtils.isNotBlank(value) && name.length() < 127 && value.length() < 255;\n-    }\n+        return StringUtils.isNotBlank(name)&&StringUtils.isNotBlank(value)&&name\n+        .length()< 127\n \n-    @Override\n+        &&value.length() < 255;\n+     }\n+\n+     @Override\n     public boolean equals(Object o) {\n         if (!(o instanceof InstanceTag)) {\n             return false;\n",
            "diff_size": 6
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
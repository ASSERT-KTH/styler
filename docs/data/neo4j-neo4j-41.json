{
    "project_name": "neo4j-neo4j",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/41/CountsChanges.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/41/CountsChanges.java\nindex 2952d5c7c39..cbf235f1a1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/41/CountsChanges.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/41/CountsChanges.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.counts;\n \n import java.util.ArrayList;\n@@ -38,15 +39,15 @@ class CountsChanges\n {\n     static final long ABSENT = -1;\n \n-    private final ConcurrentHashMap<CountsKey,AtomicLong> changes = new ConcurrentHashMap<>();\n-    private volatile ConcurrentHashMap<CountsKey,AtomicLong> previousChanges;\n+    private final ConcurrentHashMap<CountsKey, AtomicLong> changes = new ConcurrentHashMap<>();\n+    private volatile ConcurrentHashMap<CountsKey, AtomicLong> previousChanges;\n     private volatile boolean frozen;\n \n     CountsChanges()\n     {\n     }\n \n-    private CountsChanges( ConcurrentHashMap<CountsKey,AtomicLong> previousChanges )\n+    private CountsChanges(ConcurrentHashMap<CountsKey, AtomicLong> previousChanges)\n     {\n         this.previousChanges = previousChanges;\n     }\n@@ -54,12 +55,13 @@ class CountsChanges\n     /**\n      * Makes this instance immutable and returns a new (mutable) instance with this instance as the instance to first read counts from,\n      * since those counts represent persisted counts which may or may not yet have made it to the backing tree.\n+     *\n      * @return a new instance which will replace this instance for making updates to.\n      */\n     CountsChanges freezeAndFork()\n     {\n         frozen = true;\n-        return new CountsChanges( changes );\n+        return new CountsChanges(changes);\n     }\n \n     /**\n@@ -73,35 +75,35 @@ class CountsChanges\n     /**\n      * Make a relative counts change to the given key.\n      *\n-     * @param key {@link CountsKey} the key to make the update for.\n-     * @param delta the delta for the count, can be positive or negative.\n+     * @param key                  {@link CountsKey} the key to make the update for.\n+     * @param delta                the delta for the count, can be positive or negative.\n      * @param defaultToStoredCount where to read the absolute count if it isn't already loaded into this instance (or the \"old\" instance).\n      */\n-    void add( CountsKey key, long delta, Function<CountsKey,AtomicLong> defaultToStoredCount )\n+    void add(CountsKey key, long delta, Function<CountsKey, AtomicLong> defaultToStoredCount)\n     {\n-        Preconditions.checkState( !frozen, \"Can't make changes in a frozen state\" );\n-        getCounter( key, defaultToStoredCount ).addAndGet( delta );\n+        Preconditions.checkState(!frozen, \"Can't make changes in a frozen state\");\n+        getCounter(key, defaultToStoredCount).addAndGet(delta);\n     }\n \n-    private AtomicLong getCounter( CountsKey key, Function<CountsKey,AtomicLong> defaultToStoredCount )\n+    private AtomicLong getCounter(CountsKey key, Function<CountsKey, AtomicLong> defaultToStoredCount)\n     {\n-        ConcurrentHashMap<CountsKey,AtomicLong> prev = previousChanges;\n-        Function<CountsKey,AtomicLong> defaultFunction = prev == null ? defaultToStoredCount : k ->\n+        ConcurrentHashMap<CountsKey, AtomicLong> prev = previousChanges;\n+        Function<CountsKey, AtomicLong> defaultFunction = prev == null ? defaultToStoredCount : k ->\n         {\n-            AtomicLong prevCount = prev.get( k );\n-            if ( prevCount != null )\n+            AtomicLong prevCount = prev.get(k);\n+            if (prevCount != null)\n             {\n-                return new AtomicLong( prevCount.get() );\n+                return new AtomicLong(prevCount.get());\n             }\n-            return defaultToStoredCount.apply( k );\n+            return defaultToStoredCount.apply(k);\n         };\n-        return changes.computeIfAbsent( key, defaultFunction );\n+        return changes.computeIfAbsent(key, defaultFunction);\n     }\n \n-    Iterable<Map.Entry<CountsKey,AtomicLong>> sortedChanges( Comparator<CountsKey> comparator )\n+    Iterable<Map.Entry<CountsKey, AtomicLong>> sortedChanges(Comparator<CountsKey> comparator)\n     {\n-        List<Map.Entry<CountsKey,AtomicLong>> changeList = new ArrayList<>( changes.entrySet() );\n-        changeList.sort( ( e1, e2 ) -> comparator.compare( e1.getKey(), e2.getKey() ) );\n+        List<Map.Entry<CountsKey, AtomicLong>> changeList = new ArrayList<>(changes.entrySet());\n+        changeList.sort((e1, e2) -> comparator.compare(e1.getKey(), e2.getKey()));\n \n         return changes.entrySet();\n     }\n@@ -110,14 +112,14 @@ class CountsChanges\n      * @param key {@link CountsKey} to check.\n      * @return {@code true} if there have been an update to the given key in this instance or in the \"old\" instance.\n      */\n-    boolean containsChange( CountsKey key )\n+    boolean containsChange(CountsKey key)\n     {\n-        if ( changes.containsKey( key ) )\n+        if (changes.containsKey(key))\n         {\n             return true;\n         }\n-        ConcurrentHashMap<CountsKey,AtomicLong> prev = previousChanges;\n-        return prev != null && prev.containsKey( key );\n+        ConcurrentHashMap<CountsKey, AtomicLong> prev = previousChanges;\n+        return prev != null && prev.containsKey(key);\n     }\n \n     /**\n@@ -125,18 +127,18 @@ class CountsChanges\n      * @return the absolute count for the given key, be it from this instance or the \"old\" instance. If this key doesn't exist here then\n      * {@link #ABSENT} is returned, but that can still mean that the count exist, although in the backing tree.\n      */\n-    long get( CountsKey key )\n+    long get(CountsKey key)\n     {\n-        AtomicLong count = changes.get( key );\n-        if ( count != null )\n+        AtomicLong count = changes.get(key);\n+        if (count != null)\n         {\n             return count.get();\n         }\n-        ConcurrentHashMap<CountsKey,AtomicLong> prev = previousChanges;\n-        if ( prev != null )\n+        ConcurrentHashMap<CountsKey, AtomicLong> prev = previousChanges;\n+        if (prev != null)\n         {\n-            AtomicLong prevCount = prev.get( key );\n-            if ( prevCount != null )\n+            AtomicLong prevCount = prev.get(key);\n+            if (prevCount != null)\n             {\n                 return prevCount.get();\n             }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/41/CountsChanges.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/41/CountsChanges.java\nindex 2952d5c7c39..8ce4028742a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/41/CountsChanges.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/41/CountsChanges.java\n@@ -143,4 +143,4 @@ class CountsChanges\n         }\n         return ABSENT;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
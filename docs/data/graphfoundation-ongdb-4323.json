{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4323",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "154",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "361",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "365",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "373",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4323/PluginRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4323/PluginRealm.java\nindex 0e4a3246f12..37a3114041e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4323/PluginRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4323/PluginRealm.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth.plugin;\n \n import org.apache.shiro.authc.AuthenticationException;\n@@ -58,417 +59,408 @@ import static org.neo4j.server.security.enterprise.configuration.SecuritySetting\n \n public class PluginRealm extends AuthorizingRealm implements RealmLifecycle, ShiroAuthorizationInfoProvider\n {\n-    private AuthenticationPlugin authenticationPlugin;\n-    private AuthorizationPlugin authorizationPlugin;\n-    private final Config config;\n-    private AuthPlugin authPlugin;\n-    private final Log log;\n-    private final Clock clock;\n-    private final SecureHasher secureHasher;\n-\n-    private AuthProviderOperations authProviderOperations = new PluginRealmOperations();\n-\n-    public PluginRealm( Config config, SecurityLog securityLog, Clock clock, SecureHasher secureHasher )\n+  private AuthenticationPlugin authenticationPlugin;\n+  private AuthorizationPlugin authorizationPlugin;\n+  private final Config config;\n+  private AuthPlugin authPlugin;\n+  private final Log log;\n+  private final Clock clock;\n+  private final SecureHasher secureHasher;\n+\n+  private AuthProviderOperations authProviderOperations = new PluginRealmOperations();\n+\n+  public PluginRealm(Config config, SecurityLog securityLog, Clock clock, SecureHasher secureHasher)\n+  {\n+    this.config = config;\n+    this.clock = clock;\n+    this.secureHasher = secureHasher;\n+    this.log = securityLog;\n+\n+    setCredentialsMatcher(new CredentialsMatcher());\n+\n+    // Synchronize this default value with the javadoc for AuthProviderOperations.setAuthenticationCachingEnabled\n+    setAuthenticationCachingEnabled(false);\n+\n+    // Synchronize this default value with the javadoc for AuthProviderOperations.setAuthorizationCachingEnabled\n+    setAuthorizationCachingEnabled(true);\n+\n+    setRolePermissionResolver(PredefinedRolesBuilder.rolePermissionResolver);\n+  }\n+\n+  public PluginRealm(AuthenticationPlugin authenticationPlugin, AuthorizationPlugin authorizationPlugin,\n+                     Config config, SecurityLog securityLog, Clock clock, SecureHasher secureHasher)\n+  {\n+    this(config, securityLog, clock, secureHasher);\n+    this.authenticationPlugin = authenticationPlugin;\n+    this.authorizationPlugin = authorizationPlugin;\n+    resolvePluginName();\n+  }\n+\n+  public PluginRealm(AuthPlugin authPlugin, Config config, SecurityLog securityLog, Clock clock,\n+                     SecureHasher secureHasher)\n+  {\n+    this(config, securityLog, clock, secureHasher);\n+    this.authPlugin = authPlugin;\n+    resolvePluginName();\n+  }\n+\n+  private void resolvePluginName()\n+  {\n+    String pluginName = null;\n+    if (authPlugin != null)\n     {\n-        this.config = config;\n-        this.clock = clock;\n-        this.secureHasher = secureHasher;\n-        this.log = securityLog;\n-\n-        setCredentialsMatcher( new CredentialsMatcher() );\n-\n-        // Synchronize this default value with the javadoc for AuthProviderOperations.setAuthenticationCachingEnabled\n-        setAuthenticationCachingEnabled( false );\n-\n-        // Synchronize this default value with the javadoc for AuthProviderOperations.setAuthorizationCachingEnabled\n-        setAuthorizationCachingEnabled( true );\n+      pluginName = authPlugin.name();\n+    } else if (authenticationPlugin != null)\n+    {\n+      pluginName = authenticationPlugin.name();\n+    } else if (authorizationPlugin != null)\n+    {\n+      pluginName = authorizationPlugin.name();\n+    }\n \n-        setRolePermissionResolver( PredefinedRolesBuilder.rolePermissionResolver );\n+    if (pluginName != null && !pluginName.isEmpty())\n+    {\n+      setName(PLUGIN_REALM_NAME_PREFIX + pluginName);\n     }\n+    // Otherwise we rely on the Shiro default generated name\n+  }\n \n-    public PluginRealm( AuthenticationPlugin authenticationPlugin, AuthorizationPlugin authorizationPlugin,\n-            Config config, SecurityLog securityLog, Clock clock, SecureHasher secureHasher )\n+  private Collection<AuthorizationPlugin.PrincipalAndProvider> getPrincipalAndProviderCollection(\n+      PrincipalCollection principalCollection\n+  )\n+  {\n+    Collection<AuthorizationPlugin.PrincipalAndProvider> principalAndProviderCollection = new ArrayList<>();\n+\n+    for (String realm : principalCollection.getRealmNames())\n     {\n-        this( config, securityLog, clock, secureHasher );\n-        this.authenticationPlugin = authenticationPlugin;\n-        this.authorizationPlugin = authorizationPlugin;\n-        resolvePluginName();\n+      for (Object principal : principalCollection.fromRealm(realm))\n+      {\n+        principalAndProviderCollection.add(new AuthorizationPlugin.PrincipalAndProvider(principal, realm));\n+      }\n     }\n \n-    public PluginRealm( AuthPlugin authPlugin, Config config, SecurityLog securityLog, Clock clock,\n-            SecureHasher secureHasher )\n+    return principalAndProviderCollection;\n+  }\n+\n+  @Override\n+  protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals)\n+  {\n+    if (authorizationPlugin != null)\n+    {\n+      org.neo4j.server.security.enterprise.auth.plugin.spi.AuthorizationInfo authorizationInfo;\n+      try\n+      {\n+        authorizationInfo = authorizationPlugin.authorize(getPrincipalAndProviderCollection(principals));\n+      } catch (AuthorizationExpiredException e)\n+      {\n+        throw new org.neo4j.graphdb.security.AuthorizationExpiredException(\n+            \"Plugin '\" + getName() + \"' authorization info expired: \" + e.getMessage(), e);\n+      }\n+      if (authorizationInfo != null)\n+      {\n+        return PluginAuthorizationInfo.create(authorizationInfo);\n+      }\n+    } else if (authPlugin != null && !principals.fromRealm(getName()).isEmpty())\n     {\n-        this( config, securityLog, clock, secureHasher );\n-        this.authPlugin = authPlugin;\n-        resolvePluginName();\n+      // The cached authorization info has expired.\n+      // Since we do not have the subject's credentials we cannot perform a new\n+      // authenticateAndAuthorize() to renew authorization info.\n+      // Instead we need to fail with a special status, so that the client can react by re-authenticating.\n+      throw new org.neo4j.graphdb.security.AuthorizationExpiredException(\n+          \"Plugin '\" + getName() + \"' authorization info expired.\");\n     }\n+    return null;\n+  }\n \n-    private void resolvePluginName()\n+  @Override\n+  protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException\n+  {\n+    if (token instanceof ShiroAuthToken)\n     {\n-        String pluginName = null;\n-        if ( authPlugin != null )\n+      try\n+      {\n+        AuthToken pluginAuthToken =\n+            PluginApiAuthToken.createFromMap(((ShiroAuthToken) token).getAuthTokenMap());\n+        if (authPlugin != null)\n         {\n-            pluginName = authPlugin.name();\n-        }\n-        else if ( authenticationPlugin != null )\n-        {\n-            pluginName = authenticationPlugin.name();\n-        }\n-        else if ( authorizationPlugin != null )\n-        {\n-            pluginName = authorizationPlugin.name();\n-        }\n+          AuthInfo authInfo = authPlugin.authenticateAndAuthorize(pluginAuthToken);\n+          if (authInfo != null)\n+          {\n+            PluginAuthInfo pluginAuthInfo =\n+                PluginAuthInfo.createCacheable(authInfo, getName(), secureHasher);\n+\n+            cacheAuthorizationInfo(pluginAuthInfo);\n \n-        if ( pluginName != null && !pluginName.isEmpty() )\n+            return pluginAuthInfo;\n+          }\n+        } else if (authenticationPlugin != null)\n         {\n-            setName( PLUGIN_REALM_NAME_PREFIX + pluginName );\n+          org.neo4j.server.security.enterprise.auth.plugin.spi.AuthenticationInfo authenticationInfo =\n+              authenticationPlugin.authenticate(pluginAuthToken);\n+          if (authenticationInfo != null)\n+          {\n+            return PluginAuthenticationInfo.createCacheable(authenticationInfo, getName(), secureHasher);\n+          }\n         }\n-        // Otherwise we rely on the Shiro default generated name\n+      } catch (org.neo4j.server.security.enterprise.auth.plugin.api.AuthenticationException |\n+          InvalidAuthTokenException e)\n+      {\n+        throw new AuthenticationException(e.getMessage(), e.getCause());\n+      }\n     }\n-\n-    private Collection<AuthorizationPlugin.PrincipalAndProvider> getPrincipalAndProviderCollection(\n-            PrincipalCollection principalCollection\n-    )\n+    return null;\n+  }\n+\n+  private void cacheAuthorizationInfo(PluginAuthInfo authInfo)\n+  {\n+    // Use the existing authorizationCache in our base class\n+    Cache<Object, AuthorizationInfo> authorizationCache = getAuthorizationCache();\n+    Object key = getAuthorizationCacheKey(authInfo.getPrincipals());\n+    authorizationCache.put(key, authInfo);\n+  }\n+\n+  public boolean canAuthenticate()\n+  {\n+    return authPlugin != null || authenticationPlugin != null;\n+  }\n+\n+  public boolean canAuthorize()\n+  {\n+    return authPlugin != null || authorizationPlugin != null;\n+  }\n+\n+  @Override\n+  public AuthorizationInfo getAuthorizationInfoSnapshot(PrincipalCollection principalCollection)\n+  {\n+    return getAuthorizationInfo(principalCollection);\n+  }\n+\n+  @Override\n+  protected Object getAuthorizationCacheKey(PrincipalCollection principals)\n+  {\n+    return getAvailablePrincipal(principals);\n+  }\n+\n+  @Override\n+  protected Object getAuthenticationCacheKey(AuthenticationToken token)\n+  {\n+    return token != null ? token.getPrincipal() : null;\n+  }\n+\n+  @Override\n+  public boolean supports(AuthenticationToken token)\n+  {\n+    return supportsSchemeAndRealm(token);\n+  }\n+\n+  private boolean supportsSchemeAndRealm(AuthenticationToken token)\n+  {\n+    if (token instanceof ShiroAuthToken)\n     {\n-        Collection<AuthorizationPlugin.PrincipalAndProvider> principalAndProviderCollection = new ArrayList<>();\n-\n-        for ( String realm : principalCollection.getRealmNames() )\n-        {\n-            for ( Object principal : principalCollection.fromRealm( realm ) )\n-            {\n-                principalAndProviderCollection.add( new AuthorizationPlugin.PrincipalAndProvider( principal, realm ) );\n-            }\n-        }\n-\n-        return principalAndProviderCollection;\n+      ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n+      return shiroAuthToken.supportsRealm(getName());\n     }\n+    return false;\n+  }\n \n-    @Override\n-    protected AuthorizationInfo doGetAuthorizationInfo( PrincipalCollection principals )\n+  @Override\n+  public void initialize() throws Throwable\n+  {\n+    if (authenticationPlugin != null)\n     {\n-        if ( authorizationPlugin != null )\n-        {\n-            org.neo4j.server.security.enterprise.auth.plugin.spi.AuthorizationInfo authorizationInfo;\n-            try\n-            {\n-                 authorizationInfo = authorizationPlugin.authorize( getPrincipalAndProviderCollection( principals ) );\n-            }\n-            catch ( AuthorizationExpiredException e )\n-            {\n-                throw new org.neo4j.graphdb.security.AuthorizationExpiredException(\n-                        \"Plugin '\" + getName() + \"' authorization info expired: \" + e.getMessage(), e );\n-            }\n-            if ( authorizationInfo != null )\n-            {\n-                return PluginAuthorizationInfo.create( authorizationInfo );\n-            }\n-        }\n-        else if ( authPlugin != null && !principals.fromRealm( getName() ).isEmpty() )\n-        {\n-            // The cached authorization info has expired.\n-            // Since we do not have the subject's credentials we cannot perform a new\n-            // authenticateAndAuthorize() to renew authorization info.\n-            // Instead we need to fail with a special status, so that the client can react by re-authenticating.\n-            throw new org.neo4j.graphdb.security.AuthorizationExpiredException(\n-                    \"Plugin '\" + getName() + \"' authorization info expired.\" );\n-        }\n-        return null;\n+      authenticationPlugin.initialize(authProviderOperations);\n     }\n-\n-    @Override\n-    protected AuthenticationInfo doGetAuthenticationInfo( AuthenticationToken token ) throws AuthenticationException\n+    if (authorizationPlugin != null && authorizationPlugin != authenticationPlugin)\n     {\n-        if ( token instanceof ShiroAuthToken )\n-        {\n-            try\n-            {\n-                AuthToken pluginAuthToken =\n-                        PluginApiAuthToken.createFromMap( ((ShiroAuthToken) token).getAuthTokenMap() );\n-                if ( authPlugin != null )\n-                {\n-                    AuthInfo authInfo = authPlugin.authenticateAndAuthorize( pluginAuthToken );\n-                    if ( authInfo != null )\n-                    {\n-                        PluginAuthInfo pluginAuthInfo =\n-                                PluginAuthInfo.createCacheable( authInfo, getName(), secureHasher );\n-\n-                        cacheAuthorizationInfo( pluginAuthInfo );\n-\n-                        return pluginAuthInfo;\n-                    }\n-                }\n-                else if ( authenticationPlugin != null )\n-                {\n-                    org.neo4j.server.security.enterprise.auth.plugin.spi.AuthenticationInfo authenticationInfo =\n-                            authenticationPlugin.authenticate( pluginAuthToken );\n-                    if ( authenticationInfo != null )\n-                    {\n-                        return PluginAuthenticationInfo.createCacheable( authenticationInfo, getName(), secureHasher );\n-                    }\n-                }\n-            }\n-            catch ( org.neo4j.server.security.enterprise.auth.plugin.api.AuthenticationException |\n-                    InvalidAuthTokenException e )\n-            {\n-                throw new AuthenticationException( e.getMessage(), e.getCause() );\n-            }\n-        }\n-        return null;\n+      authorizationPlugin.initialize(authProviderOperations);\n     }\n-\n-    private void cacheAuthorizationInfo( PluginAuthInfo authInfo )\n+    if (authPlugin != null)\n     {\n-        // Use the existing authorizationCache in our base class\n-        Cache<Object, AuthorizationInfo> authorizationCache = getAuthorizationCache();\n-        Object key = getAuthorizationCacheKey( authInfo.getPrincipals() );\n-        authorizationCache.put( key, authInfo );\n+      authPlugin.initialize(authProviderOperations);\n     }\n+  }\n \n-    public boolean canAuthenticate()\n+  @Override\n+  public void start()\n+  {\n+    if (authenticationPlugin != null)\n     {\n-        return authPlugin != null || authenticationPlugin != null;\n+      authenticationPlugin.start();\n     }\n-\n-    public boolean canAuthorize()\n+    if (authorizationPlugin != null && authorizationPlugin != authenticationPlugin)\n     {\n-        return authPlugin != null || authorizationPlugin != null;\n+      authorizationPlugin.start();\n     }\n-\n-    @Override\n-    public AuthorizationInfo getAuthorizationInfoSnapshot( PrincipalCollection principalCollection )\n+    if (authPlugin != null)\n     {\n-        return getAuthorizationInfo( principalCollection );\n+      authPlugin.start();\n     }\n+  }\n \n-    @Override\n-    protected Object getAuthorizationCacheKey( PrincipalCollection principals )\n+  @Override\n+  public void stop()\n+  {\n+    if (authenticationPlugin != null)\n     {\n-        return getAvailablePrincipal( principals );\n+      authenticationPlugin.stop();\n     }\n-\n-    @Override\n-    protected Object getAuthenticationCacheKey( AuthenticationToken token )\n+    if (authorizationPlugin != null && authorizationPlugin != authenticationPlugin)\n+    {\n+      authorizationPlugin.stop();\n+    }\n+    if (authPlugin != null)\n     {\n-        return token != null ? token.getPrincipal() : null;\n+      authPlugin.stop();\n     }\n+  }\n \n-    @Override\n-    public boolean supports( AuthenticationToken token )\n+  @Override\n+  public void shutdown()\n+  {\n+    if (authenticationPlugin != null)\n+    {\n+      authenticationPlugin.shutdown();\n+    }\n+    if (authorizationPlugin != null && authorizationPlugin != authenticationPlugin)\n+    {\n+      authorizationPlugin.shutdown();\n+    }\n+    if (authPlugin != null)\n     {\n-        return supportsSchemeAndRealm( token );\n+      authPlugin.shutdown();\n     }\n+  }\n \n-    private boolean supportsSchemeAndRealm( AuthenticationToken token )\n+  private static CustomCacheableAuthenticationInfo.CredentialsMatcher getCustomCredentialsMatcherIfPresent(\n+      AuthenticationInfo info\n+  )\n+  {\n+    if (info instanceof CustomCredentialsMatcherSupplier)\n     {\n-        if ( token instanceof ShiroAuthToken )\n-        {\n-            ShiroAuthToken shiroAuthToken = (ShiroAuthToken) token;\n-            return shiroAuthToken.supportsRealm( getName() );\n-        }\n-        return false;\n+      return ((CustomCredentialsMatcherSupplier) info).getCredentialsMatcher();\n     }\n+    return null;\n+  }\n \n+  private class CredentialsMatcher implements org.apache.shiro.authc.credential.CredentialsMatcher\n+  {\n     @Override\n-    public void initialize() throws Throwable\n+    public boolean doCredentialsMatch(AuthenticationToken token, AuthenticationInfo info)\n     {\n-        if ( authenticationPlugin != null )\n+      CustomCacheableAuthenticationInfo.CredentialsMatcher\n+          customCredentialsMatcher = getCustomCredentialsMatcherIfPresent(info);\n+\n+      if (customCredentialsMatcher != null)\n+      {\n+        // Authentication info is originating from a CustomCacheableAuthenticationInfo\n+        Map<String, Object> authToken = ((ShiroAuthToken) token).getAuthTokenMap();\n+        try\n         {\n-            authenticationPlugin.initialize( authProviderOperations );\n-        }\n-        if ( authorizationPlugin != null && authorizationPlugin != authenticationPlugin )\n+          AuthToken pluginApiAuthToken = PluginApiAuthToken.createFromMap(authToken);\n+          return customCredentialsMatcher.doCredentialsMatch(pluginApiAuthToken);\n+        } catch (InvalidAuthTokenException e)\n         {\n-            authorizationPlugin.initialize( authProviderOperations );\n+          throw new AuthenticationException(e.getMessage());\n         }\n-        if ( authPlugin != null )\n+      } else if (info.getCredentials() != null)\n+      {\n+        // Authentication info is originating from a CacheableAuthenticationInfo or a CacheableAuthInfo\n+        return secureHasher.getHashedCredentialsMatcher()\n+            .doCredentialsMatch(PluginShiroAuthToken.of(token), info);\n+      } else\n+      {\n+        // Authentication info is originating from an AuthenticationInfo or an AuthInfo\n+        if (PluginRealm.this.isAuthenticationCachingEnabled())\n         {\n-            authPlugin.initialize( authProviderOperations );\n+          log.error(\"Authentication caching is enabled in plugin %s but it does not return \" +\n+              \"cacheable credentials. This configuration is not secure.\", getName());\n+          return false;\n         }\n+        return true; // Always match if we do not cache credentials\n+      }\n     }\n+  }\n+\n+  private class PluginRealmOperations implements AuthProviderOperations\n+  {\n+    private Log innerLog = new Log()\n+    {\n+      private String withPluginName(String msg)\n+      {\n+        return \"{\" + getName() + \"} \" + msg;\n+      }\n+\n+      @Override\n+      public void debug(String message)\n+      {\n+        log.debug(withPluginName(message));\n+      }\n+\n+      @Override\n+      public void info(String message)\n+      {\n+        log.info(withPluginName(message));\n+      }\n+\n+      @Override\n+      public void warn(String message)\n+      {\n+        log.warn(withPluginName(message));\n+      }\n+\n+      @Override\n+      public void error(String message)\n+      {\n+        log.error(withPluginName(message));\n+      }\n+\n+      @Override\n+      public boolean isDebugEnabled()\n+      {\n+        return log.isDebugEnabled();\n+      }\n+    };\n \n     @Override\n-    public void start()\n+    public Path neo4jHome()\n     {\n-        if ( authenticationPlugin != null )\n-        {\n-            authenticationPlugin.start();\n-        }\n-        if ( authorizationPlugin != null && authorizationPlugin != authenticationPlugin )\n-        {\n-            authorizationPlugin.start();\n-        }\n-        if ( authPlugin != null )\n-        {\n-            authPlugin.start();\n-        }\n+      return config.get(GraphDatabaseSettings.neo4j_home).getAbsoluteFile().toPath();\n     }\n \n     @Override\n-    public void stop()\n+    public Optional<Path> neo4jConfigFile()\n     {\n-        if ( authenticationPlugin != null )\n-        {\n-            authenticationPlugin.stop();\n-        }\n-        if ( authorizationPlugin != null && authorizationPlugin != authenticationPlugin )\n-        {\n-            authorizationPlugin.stop();\n-        }\n-        if ( authPlugin != null )\n-        {\n-            authPlugin.stop();\n-        }\n+      return Optional.empty();\n     }\n \n     @Override\n-    public void shutdown()\n+    public String neo4jVersion()\n     {\n-        if ( authenticationPlugin != null )\n-        {\n-            authenticationPlugin.shutdown();\n-        }\n-        if ( authorizationPlugin != null && authorizationPlugin != authenticationPlugin )\n-        {\n-            authorizationPlugin.shutdown();\n-        }\n-        if ( authPlugin != null )\n-        {\n-            authPlugin.shutdown();\n-        }\n+      return Version.getNeo4jVersion();\n     }\n \n-    private static CustomCacheableAuthenticationInfo.CredentialsMatcher getCustomCredentialsMatcherIfPresent(\n-            AuthenticationInfo info\n-    )\n+    @Override\n+    public Clock clock()\n     {\n-        if ( info instanceof CustomCredentialsMatcherSupplier )\n-        {\n-            return ((CustomCredentialsMatcherSupplier) info).getCredentialsMatcher();\n-        }\n-        return null;\n+      return clock;\n     }\n \n-    private class CredentialsMatcher implements org.apache.shiro.authc.credential.CredentialsMatcher\n+    @Override\n+    public Log log()\n     {\n-        @Override\n-        public boolean doCredentialsMatch( AuthenticationToken token, AuthenticationInfo info )\n-        {\n-            CustomCacheableAuthenticationInfo.CredentialsMatcher\n-                    customCredentialsMatcher = getCustomCredentialsMatcherIfPresent( info );\n-\n-            if ( customCredentialsMatcher != null )\n-            {\n-                // Authentication info is originating from a CustomCacheableAuthenticationInfo\n-                Map<String,Object> authToken = ((ShiroAuthToken) token).getAuthTokenMap();\n-                try\n-                {\n-                    AuthToken pluginApiAuthToken = PluginApiAuthToken.createFromMap( authToken );\n-                    return customCredentialsMatcher.doCredentialsMatch( pluginApiAuthToken );\n-                }\n-                catch ( InvalidAuthTokenException e )\n-                {\n-                    throw new AuthenticationException( e.getMessage() );\n-                }\n-            }\n-            else if ( info.getCredentials() != null )\n-            {\n-                // Authentication info is originating from a CacheableAuthenticationInfo or a CacheableAuthInfo\n-                return secureHasher.getHashedCredentialsMatcher()\n-                        .doCredentialsMatch( PluginShiroAuthToken.of( token ), info );\n-            }\n-            else\n-            {\n-                // Authentication info is originating from an AuthenticationInfo or an AuthInfo\n-                if ( PluginRealm.this.isAuthenticationCachingEnabled() )\n-                {\n-                    log.error( \"Authentication caching is enabled in plugin %s but it does not return \" +\n-                               \"cacheable credentials. This configuration is not secure.\", getName() );\n-                    return false;\n-                }\n-                return true; // Always match if we do not cache credentials\n-            }\n-        }\n+      return innerLog;\n     }\n \n-    private class PluginRealmOperations implements AuthProviderOperations\n+    @Override\n+    public void setAuthenticationCachingEnabled(boolean authenticationCachingEnabled)\n     {\n-        private Log innerLog = new Log()\n-        {\n-            private String withPluginName( String msg )\n-            {\n-                return \"{\" + getName() + \"} \" + msg;\n-            }\n-\n-            @Override\n-            public void debug( String message )\n-            {\n-                log.debug( withPluginName( message ) );\n-            }\n-\n-            @Override\n-            public void info( String message )\n-            {\n-                log.info( withPluginName( message ) );\n-            }\n-\n-            @Override\n-            public void warn( String message )\n-            {\n-                log.warn( withPluginName( message ) );\n-            }\n-\n-            @Override\n-            public void error( String message )\n-            {\n-                log.error( withPluginName( message ) );\n-            }\n-\n-            @Override\n-            public boolean isDebugEnabled()\n-            {\n-                return log.isDebugEnabled();\n-            }\n-        };\n-\n-        @Override\n-        public Path neo4jHome()\n-        {\n-            return config.get( GraphDatabaseSettings.neo4j_home ).getAbsoluteFile().toPath();\n-        }\n-\n-        @Override\n-        public Optional<Path> neo4jConfigFile()\n-        {\n-            return Optional.empty();\n-        }\n-\n-        @Override\n-        public String neo4jVersion()\n-        {\n-            return Version.getNeo4jVersion();\n-        }\n-\n-        @Override\n-        public Clock clock()\n-        {\n-            return clock;\n-        }\n-\n-        @Override\n-        public Log log()\n-        {\n-            return innerLog;\n-        }\n-\n-        @Override\n-        public void setAuthenticationCachingEnabled( boolean authenticationCachingEnabled )\n-        {\n-            PluginRealm.this.setAuthenticationCachingEnabled( authenticationCachingEnabled );\n-        }\n+      PluginRealm.this.setAuthenticationCachingEnabled(authenticationCachingEnabled);\n+    }\n \n-        @Override\n-        public void setAuthorizationCachingEnabled( boolean authorizationCachingEnabled )\n-        {\n-            PluginRealm.this.setAuthorizationCachingEnabled( authorizationCachingEnabled );\n-        }\n+    @Override\n+    public void setAuthorizationCachingEnabled(boolean authorizationCachingEnabled)\n+    {\n+      PluginRealm.this.setAuthorizationCachingEnabled(authorizationCachingEnabled);\n     }\n+  }\n }\n",
            "diff_size": 569
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
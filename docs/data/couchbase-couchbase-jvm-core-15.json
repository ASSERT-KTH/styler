{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "78",
                "column": "16",
                "severity": "warning",
                "message": "WhitespaceAround: 'catch' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "                infos.put(\"mem.swap.free\", sunBean.getFreeSwapSpaceSize());\n            }\n        } catch(final Throwable err) {\n            LOGGER.debug(\"com.sun.management.OperatingSystemMXBean not available, skipping extended system info.\");\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/15/Diagnostics.java\nindex d626126e8e7..c0110d75929 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/15/Diagnostics.java\n@@ -75,7 +75,7 @@ public class Diagnostics {\n                 infos.put(\"mem.swap.total\", sunBean.getTotalSwapSpaceSize());\n                 infos.put(\"mem.swap.free\", sunBean.getFreeSwapSpaceSize());\n             }\n-        } catch(final Throwable err) {\n+        } catch (final Throwable err) {\n             LOGGER.debug(\"com.sun.management.OperatingSystemMXBean not available, skipping extended system info.\");\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/15/Diagnostics.java\nindex d626126e8e7..6d584ceae09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/15/Diagnostics.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.core.env;\n \n import com.couchbase.client.core.logging.CouchbaseLogger;\n@@ -75,7 +76,7 @@ public class Diagnostics {\n                 infos.put(\"mem.swap.total\", sunBean.getTotalSwapSpaceSize());\n                 infos.put(\"mem.swap.free\", sunBean.getFreeSwapSpaceSize());\n             }\n-        } catch(final Throwable err) {\n+        } catch (final Throwable err) {\n             LOGGER.debug(\"com.sun.management.OperatingSystemMXBean not available, skipping extended system info.\");\n         }\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/15/Diagnostics.java\nindex d626126e8e7..b2293dc6ab6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/15/Diagnostics.java\n@@ -75,7 +75,7 @@ public class Diagnostics {\n                 infos.put(\"mem.swap.total\", sunBean.getTotalSwapSpaceSize());\n                 infos.put(\"mem.swap.free\", sunBean.getFreeSwapSpaceSize());\n             }\n-        } catch(final Throwable err) {\n+        } catch (final Throwable err) {\n             LOGGER.debug(\"com.sun.management.OperatingSystemMXBean not available, skipping extended system info.\");\n         }\n     }\n@@ -111,13 +111,11 @@ public class Diagnostics {\n      * @param infos a map where the infos are passed in.\n      */\n     public static void runtimeInfo(final Map<String, Object> infos) {\n-        infos.put(\"runtime.vm\", RUNTIME_BEAN.getVmVendor() + \"/\" + RUNTIME_BEAN.getVmName() + \": \"\n-            + RUNTIME_BEAN.getVmVersion());\n+        infos.put(\"runtime.vm\", RUNTIME_BEAN.getVmVendor() + \"/\" + RUNTIME_BEAN.getVmName() + \": \" + RUNTIME_BEAN.getVmVersion());\n         infos.put(\"runtime.startTime\", RUNTIME_BEAN.getStartTime());\n         infos.put(\"runtime.uptime\", RUNTIME_BEAN.getUptime());\n         infos.put(\"runtime.name\", RUNTIME_BEAN.getName());\n-        infos.put(\"runtime.spec\", RUNTIME_BEAN.getSpecVendor() + \"/\" + RUNTIME_BEAN.getSpecName() + \": \"\n-            + RUNTIME_BEAN.getSpecVersion());\n+        infos.put(\"runtime.spec\", RUNTIME_BEAN.getSpecVendor() + \"/\" + RUNTIME_BEAN.getSpecName() + \": \" + RUNTIME_BEAN.getSpecVersion());\n         infos.put(\"runtime.sysProperties\", RUNTIME_BEAN.getSystemProperties());\n     }\n \n@@ -170,4 +168,4 @@ public class Diagnostics {\n         sb.append(\"\\n}\");\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'OS_BEAN' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'OS_BEAN' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/15/Diagnostics.java\nindex d626126e8e7..8651bbc8957 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/15/Diagnostics.java\n@@ -23,7 +23,6 @@ package com.couchbase.client.core.env;\n \n import com.couchbase.client.core.logging.CouchbaseLogger;\n import com.couchbase.client.core.logging.CouchbaseLoggerFactory;\n-\n import java.lang.management.GarbageCollectorMXBean;\n import java.lang.management.ManagementFactory;\n import java.lang.management.MemoryMXBean;\n@@ -40,13 +39,14 @@ import java.util.TreeMap;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n+\n public class Diagnostics {\n \n     /**\n      * The logger used.\n      */\n-    private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(Diagnostics.class);\n \n+    private static final CouchbaseLogger LOGGER = CouchbaseLoggerFactory.getInstance(Diagnostics.class);\n     public static final OperatingSystemMXBean OS_BEAN = ManagementFactory.getOperatingSystemMXBean();\n     public static final MemoryMXBean MEM_BEAN = ManagementFactory.getMemoryMXBean();\n     public static final RuntimeMXBean RUNTIME_BEAN = ManagementFactory.getRuntimeMXBean();\n@@ -58,16 +58,16 @@ public class Diagnostics {\n      * @param infos a map where the infos are passed in.\n      */\n     public static void systemInfo(final Map<String, Object> infos) {\n-        infos.put(\"sys.os.name\", OS_BEAN.getName());\n+        infos.put(\"sys.os.name\",\n+OS_BEAN.getName());\n         infos.put(\"sys.os.version\", OS_BEAN.getVersion());\n-        infos.put(\"sys.os.arch\", OS_BEAN.getArch());\n+        infos.put(\"sys.os.arch\",\n+OS_BEAN.getArch());\n         infos.put(\"sys.cpu.num\", OS_BEAN.getAvailableProcessors());\n         infos.put(\"sys.cpu.loadAvg\", OS_BEAN.getSystemLoadAverage());\n-\n         try {\n             if (OS_BEAN instanceof com.sun.management.OperatingSystemMXBean) {\n                 com.sun.management.OperatingSystemMXBean sunBean = (com.sun.management.OperatingSystemMXBean) OS_BEAN;\n-\n                 infos.put(\"proc.cpu.time\", sunBean.getProcessCpuTime());\n                 infos.put(\"mem.physical.total\", sunBean.getTotalPhysicalMemorySize());\n                 infos.put(\"mem.physical.free\", sunBean.getFreePhysicalMemorySize());\n@@ -75,7 +75,7 @@ public class Diagnostics {\n                 infos.put(\"mem.swap.total\", sunBean.getTotalSwapSpaceSize());\n                 infos.put(\"mem.swap.free\", sunBean.getFreeSwapSpaceSize());\n             }\n-        } catch(final Throwable err) {\n+        } catch (final Throwable err) {\n             LOGGER.debug(\"com.sun.management.OperatingSystemMXBean not available, skipping extended system info.\");\n         }\n     }\n@@ -85,9 +85,9 @@ public class Diagnostics {\n      *\n      * @param infos a map where the infos are passed in.\n      */\n+\n     public static void gcInfo(final Map<String, Object> infos) {\n         List<GarbageCollectorMXBean> mxBeans = ManagementFactory.getGarbageCollectorMXBeans();\n-\n         for (GarbageCollectorMXBean mxBean : mxBeans) {\n             infos.put(\"gc.\" + mxBean.getName().toLowerCase() + \".collectionCount\", mxBean.getCollectionCount());\n             infos.put(\"gc.\" + mxBean.getName().toLowerCase() + \".collectionTime\", mxBean.getCollectionTime());\n@@ -99,6 +99,7 @@ public class Diagnostics {\n      *\n      * @param infos a map where the infos are passed in.\n      */\n+\n     public static void memInfo(final Map<String, Object> infos) {\n         infos.put(\"heap.used\", MEM_BEAN.getHeapMemoryUsage());\n         infos.put(\"offHeap.used\", MEM_BEAN.getNonHeapMemoryUsage());\n@@ -110,14 +111,13 @@ public class Diagnostics {\n      *\n      * @param infos a map where the infos are passed in.\n      */\n+\n     public static void runtimeInfo(final Map<String, Object> infos) {\n-        infos.put(\"runtime.vm\", RUNTIME_BEAN.getVmVendor() + \"/\" + RUNTIME_BEAN.getVmName() + \": \"\n-            + RUNTIME_BEAN.getVmVersion());\n+        infos.put(\"runtime.vm\", RUNTIME_BEAN.getVmVendor() + \"/\" + RUNTIME_BEAN.getVmName() + \": \" + RUNTIME_BEAN.getVmVersion());\n         infos.put(\"runtime.startTime\", RUNTIME_BEAN.getStartTime());\n         infos.put(\"runtime.uptime\", RUNTIME_BEAN.getUptime());\n         infos.put(\"runtime.name\", RUNTIME_BEAN.getName());\n-        infos.put(\"runtime.spec\", RUNTIME_BEAN.getSpecVendor() + \"/\" + RUNTIME_BEAN.getSpecName() + \": \"\n-            + RUNTIME_BEAN.getSpecVersion());\n+        infos.put(\"runtime.spec\", RUNTIME_BEAN.getSpecVendor() + \"/\" + RUNTIME_BEAN.getSpecName() + \": \" + RUNTIME_BEAN.getSpecVersion());\n         infos.put(\"runtime.sysProperties\", RUNTIME_BEAN.getSystemProperties());\n     }\n \n@@ -126,6 +126,7 @@ public class Diagnostics {\n      *\n      * @param infos a map where the infos are passed in.\n      */\n+\n     public static void threadInfo(final Map<String, Object> infos) {\n         infos.put(\"thread.count\", THREAD_BEAN.getThreadCount());\n         infos.put(\"thread.peakCount\", THREAD_BEAN.getPeakThreadCount());\n@@ -137,15 +138,14 @@ public class Diagnostics {\n      *\n      * @return the map populated with the information.\n      */\n+\n     public static Map<String, Object> collect() {\n         Map<String, Object> infos = new TreeMap<String, Object>();\n-\n         systemInfo(infos);\n         memInfo(infos);\n         threadInfo(infos);\n         gcInfo(infos);\n         runtimeInfo(infos);\n-\n         return infos;\n     }\n \n@@ -154,11 +154,10 @@ public class Diagnostics {\n      *\n      * @return a formatted string of available information.\n      */\n+\n     public static String collectAndFormat() {\n         Map<String, Object> infos = collect();\n-\n         StringBuilder sb = new StringBuilder();\n-\n         sb.append(\"Diagnostics {\\n\");\n         int count = 0;\n         for (Map.Entry<String, Object> info : infos.entrySet()) {\n@@ -170,4 +169,4 @@ public class Diagnostics {\n         sb.append(\"\\n}\");\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "78",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/15/Diagnostics.java\nindex d626126e8e7..c0110d75929 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/15/Diagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/15/Diagnostics.java\n@@ -75,7 +75,7 @@ public class Diagnostics {\n                 infos.put(\"mem.swap.total\", sunBean.getTotalSwapSpaceSize());\n                 infos.put(\"mem.swap.free\", sunBean.getFreeSwapSpaceSize());\n             }\n-        } catch(final Throwable err) {\n+        } catch (final Throwable err) {\n             LOGGER.debug(\"com.sun.management.OperatingSystemMXBean not available, skipping extended system info.\");\n         }\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
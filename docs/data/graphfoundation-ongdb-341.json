{
    "project_name": "graphfoundation-ongdb",
    "error_id": "341",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/341/ProcedureTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/341/ProcedureTransaction.java\nindex e2bc1b4b219..0d50a6c68be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/341/ProcedureTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/341/ProcedureTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure;\n \n import org.neo4j.graphdb.Transaction;\n@@ -27,31 +28,31 @@ import org.neo4j.graphdb.TransactionTerminatedException;\n  */\n public interface ProcedureTransaction\n {\n-    /**\n-     * Marks this transaction as terminated, which means that it will be, much like in the case of failure,\n-     * unconditionally rolled back when {@link Transaction#close()} is called. Once this method has been invoked, it doesn't\n-     * matter\n-     * if {@link Transaction#success()} is invoked afterwards -- the transaction will still be rolled back.\n-     *\n-     * Additionally, terminating a transaction causes all subsequent operations carried out within that\n-     * transaction to throw a {@link TransactionTerminatedException} in the owning thread.\n-     *\n-     * Note that, unlike the other transaction operations, this method can be called from threads other than\n-     * the owning thread of the transaction. When this method is called from a different thread,\n-     * it signals the owning thread to terminate the transaction and returns immediately.\n-     *\n-     * Calling this method on an already closed transaction has no effect.\n-     */\n-    void terminate();\n+  /**\n+   * Marks this transaction as terminated, which means that it will be, much like in the case of failure,\n+   * unconditionally rolled back when {@link Transaction#close()} is called. Once this method has been invoked, it doesn't\n+   * matter\n+   * if {@link Transaction#success()} is invoked afterwards -- the transaction will still be rolled back.\n+   * <p>\n+   * Additionally, terminating a transaction causes all subsequent operations carried out within that\n+   * transaction to throw a {@link TransactionTerminatedException} in the owning thread.\n+   * <p>\n+   * Note that, unlike the other transaction operations, this method can be called from threads other than\n+   * the owning thread of the transaction. When this method is called from a different thread,\n+   * it signals the owning thread to terminate the transaction and returns immediately.\n+   * <p>\n+   * Calling this method on an already closed transaction has no effect.\n+   */\n+  void terminate();\n \n-    /**\n-     * Marks this transaction as failed, which means that it will\n-     * unconditionally be rolled back when {@link Transaction#close()} is called. Once\n-     * this method has been invoked, it doesn't matter if\n-     * {@link Transaction#success()} is invoked afterwards -- the transaction will still be\n-     * rolled back.\n-     *\n-     * This method is not thread safe.\n-     */\n-    void failure();\n+  /**\n+   * Marks this transaction as failed, which means that it will\n+   * unconditionally be rolled back when {@link Transaction#close()} is called. Once\n+   * this method has been invoked, it doesn't matter if\n+   * {@link Transaction#success()} is invoked afterwards -- the transaction will still be\n+   * rolled back.\n+   * <p>\n+   * This method is not thread safe.\n+   */\n+  void failure();\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/341/ProcedureTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/341/ProcedureTransaction.java\nindex e2bc1b4b219..e172c218367 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/341/ProcedureTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/341/ProcedureTransaction.java\n@@ -54,4 +54,4 @@ public interface ProcedureTransaction\n      * This method is not thread safe.\n      */\n     void failure();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
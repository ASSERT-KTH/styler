{
    "project_name": "graphfoundation-ongdb",
    "error_id": "464",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/464/RaftLogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/464/RaftLogEntry.java\nindex 78c44803962..7da7233d385 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/464/RaftLogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/464/RaftLogEntry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log;\n \n import java.util.Objects;\n@@ -27,57 +28,57 @@ import static java.lang.String.format;\n \n public class RaftLogEntry\n {\n-    public static final RaftLogEntry[] empty = new RaftLogEntry[0];\n+  public static final RaftLogEntry[] empty = new RaftLogEntry[0];\n \n-    private final long term;\n-    private final ReplicatedContent content;\n+  private final long term;\n+  private final ReplicatedContent content;\n \n-    public RaftLogEntry( long term, ReplicatedContent content )\n-    {\n-        Objects.requireNonNull( content );\n-        this.term = term;\n-        this.content = content;\n-    }\n+  public RaftLogEntry(long term, ReplicatedContent content)\n+  {\n+    Objects.requireNonNull(content);\n+    this.term = term;\n+    this.content = content;\n+  }\n \n-    public long term()\n-    {\n-        return this.term;\n-    }\n+  public long term()\n+  {\n+    return this.term;\n+  }\n+\n+  public ReplicatedContent content()\n+  {\n+    return this.content;\n+  }\n \n-    public ReplicatedContent content()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return this.content;\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        RaftLogEntry that = (RaftLogEntry) o;\n+    RaftLogEntry that = (RaftLogEntry) o;\n \n-        return term == that.term && content.equals( that.content );\n-    }\n+    return term == that.term && content.equals(that.content);\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        int result = (int) (term ^ (term >>> 32));\n-        result = 31 * result + content.hashCode();\n-        return result;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) (term ^ (term >>> 32));\n+    result = 31 * result + content.hashCode();\n+    return result;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return format( \"{term=%d, content=%s}\", term, content );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"{term=%d, content=%s}\", term, content);\n+  }\n \n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/464/RaftLogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/464/RaftLogEntry.java\nindex 78c44803962..60f526c90c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/464/RaftLogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/464/RaftLogEntry.java\n@@ -56,7 +56,8 @@ public class RaftLogEntry\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -69,7 +70,7 @@ public class RaftLogEntry\n     @Override\n     public int hashCode()\n     {\n-        int result = (int) (term ^ (term >>> 32));\n+        int result = ( int) ( term ^ ( term >>> 32 ));\n         result = 31 * result + content.hashCode();\n         return result;\n     }\n@@ -79,5 +80,4 @@ public class RaftLogEntry\n     {\n         return format( \"{term=%d, content=%s}\", term, content );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
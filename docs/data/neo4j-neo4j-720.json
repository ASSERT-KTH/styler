{
    "project_name": "neo4j-neo4j",
    "error_id": "720",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/720/PropertyValueRecordSizeCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/720/PropertyValueRecordSizeCalculator.java\nindex f04ebc78276..c305babd4c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/720/PropertyValueRecordSizeCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/720/PropertyValueRecordSizeCalculator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.neo4j.internal.batchimport.input.PropertySizeCalculator;\n@@ -44,38 +45,38 @@ public class PropertyValueRecordSizeCalculator implements PropertySizeCalculator\n     private final int stringRecordSize;\n     private final int arrayRecordSize;\n \n-    public PropertyValueRecordSizeCalculator( PropertyStore propertyStore )\n+    public PropertyValueRecordSizeCalculator(PropertyStore propertyStore)\n     {\n-        this( propertyStore.getRecordSize(),\n-                propertyStore.getStringStore().getRecordSize(), propertyStore.getStringStore().getRecordDataSize(),\n-                propertyStore.getArrayStore().getRecordSize(), propertyStore.getArrayStore().getRecordDataSize() );\n+        this(propertyStore.getRecordSize(),\n+          propertyStore.getStringStore().getRecordSize(), propertyStore.getStringStore().getRecordDataSize(),\n+          propertyStore.getArrayStore().getRecordSize(), propertyStore.getArrayStore().getRecordDataSize());\n     }\n \n-    public PropertyValueRecordSizeCalculator( int propertyRecordSize,\n-            int stringRecordSize, int stringRecordDataSize,\n-            int arrayRecordSize, int arrayRecordDataSize )\n+    public PropertyValueRecordSizeCalculator(int propertyRecordSize,\n+                                             int stringRecordSize, int stringRecordDataSize,\n+                                             int arrayRecordSize, int arrayRecordDataSize)\n     {\n         this.propertyRecordSize = propertyRecordSize;\n         this.stringRecordSize = stringRecordSize;\n         this.arrayRecordSize = arrayRecordSize;\n-        this.stringRecordCounter = new StandardDynamicRecordAllocator( stringRecordIds, stringRecordDataSize );\n-        this.arrayRecordCounter = new StandardDynamicRecordAllocator( arrayRecordIds, arrayRecordDataSize );\n+        this.stringRecordCounter = new StandardDynamicRecordAllocator(stringRecordIds, stringRecordDataSize);\n+        this.arrayRecordCounter = new StandardDynamicRecordAllocator(arrayRecordIds, arrayRecordDataSize);\n     }\n \n     @Override\n-    public int calculateSize( Value[] values, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public int calculateSize(Value[] values, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n         stringRecordIds.reset();\n         arrayRecordIds.reset();\n \n         int propertyRecordsUsed = 0;\n         int freeBlocksInCurrentRecord = 0;\n-        for ( Value value : values )\n+        for (Value value : values)\n         {\n             PropertyBlock block = new PropertyBlock();\n-            PropertyStore.encodeValue( block, 0 /*doesn't matter*/, value, stringRecordCounter, arrayRecordCounter, true,\n-                    cursorTracer, memoryTracker );\n-            if ( block.getValueBlocks().length > freeBlocksInCurrentRecord )\n+            PropertyStore.encodeValue(block, 0 /*doesn't matter*/, value, stringRecordCounter, arrayRecordCounter, true,\n+              cursorTracer, memoryTracker);\n+            if (block.getValueBlocks().length > freeBlocksInCurrentRecord)\n             {\n                 propertyRecordsUsed++;\n                 freeBlocksInCurrentRecord = PropertyType.getPayloadSizeLongs();\n@@ -84,8 +85,8 @@ public class PropertyValueRecordSizeCalculator implements PropertySizeCalculator\n         }\n \n         int size = propertyRecordsUsed * propertyRecordSize;\n-        size += toIntExact( stringRecordIds.peek() ) * stringRecordSize;\n-        size += toIntExact( arrayRecordIds.peek() ) * arrayRecordSize;\n+        size += toIntExact(stringRecordIds.peek()) * stringRecordSize;\n+        size += toIntExact(arrayRecordIds.peek()) * arrayRecordSize;\n         return size;\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/720/PropertyValueRecordSizeCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/720/PropertyValueRecordSizeCalculator.java\nindex f04ebc78276..19334a64a06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/720/PropertyValueRecordSizeCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/720/PropertyValueRecordSizeCalculator.java\n@@ -88,4 +88,4 @@ public class PropertyValueRecordSizeCalculator implements PropertySizeCalculator\n         size += toIntExact( arrayRecordIds.peek() ) * arrayRecordSize;\n         return size;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
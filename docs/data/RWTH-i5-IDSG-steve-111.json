{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "111",
    "information": {
        "errors": [
            {
                "line": "53",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "    // Helpers\n    // -------------------------------------------------------------------------\n    \n    protected ChargePointService15_Client getClient15() {\n        return client15;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/111/Ocpp15Controller.java\nindex cfdf1e4cc51..28ce80d048f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/111/Ocpp15Controller.java\n@@ -50,7 +50,7 @@ public class Ocpp15Controller extends Ocpp12Controller {\n     // -------------------------------------------------------------------------\n     // Helpers\n     // -------------------------------------------------------------------------\n-    \n+\n     protected ChargePointService15_Client getClient15() {\n         return client15;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/111/Ocpp15Controller.java\nindex cfdf1e4cc51..a0aa5a9ae5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/111/Ocpp15Controller.java\n@@ -32,173 +32,173 @@ import static de.rwth.idsg.steve.web.dto.ocpp.ConfigurationKeyReadWriteEnum.RW;\n @RequestMapping(value = \"/manager/operations/v1.5\")\n public class Ocpp15Controller extends Ocpp12Controller {\n \n-    @Autowired\n-    @Qualifier(\"ChargePointService15_Client\")\n-    private ChargePointService15_Client client15;\n-\n-    // -------------------------------------------------------------------------\n-    // Paths\n-    // -------------------------------------------------------------------------\n-\n-    private static final String RESERVE_PATH = \"/ReserveNow\";\n-    private static final String CANCEL_RESERV_PATH = \"/CancelReservation\";\n-    private static final String DATA_TRANSFER_PATH = \"/DataTransfer\";\n-    protected static final String GET_CONF_PATH = \"/GetConfiguration\";\n-    private static final String GET_LIST_VERSION_PATH = \"/GetLocalListVersion\";\n-    private static final String SEND_LIST_PATH = \"/SendLocalList\";\n-\n-    // -------------------------------------------------------------------------\n-    // Helpers\n-    // -------------------------------------------------------------------------\n-    \n-    protected ChargePointService15_Client getClient15() {\n-        return client15;\n-    }\n-\n-    @Override\n-    protected ChargePointService12_Client getClient12() {\n-        return client15;\n-    }\n-\n-    @Override\n-    protected void setCommonAttributes(Model model) {\n-        model.addAttribute(\"cpList\", chargePointHelperService.getChargePointsV15());\n-        model.addAttribute(\"opVersion\", \"v1.5\");\n-    }\n-\n-    @Override\n-    protected Map<String, String> getConfigurationKeys(ConfigurationKeyReadWriteEnum confEnum) {\n-        // this conf enum is only relevant for versions >= occp 1.6\n-        return ConfigurationKeyEnum.OCPP_15_MAP;\n-    }\n-\n-    @Override\n-    protected String getRedirectPath() {\n-        return \"redirect:/manager/operations/v1.5/ChangeAvailability\";\n-    }\n-\n-    @Override\n-    protected String getPrefix() {\n-        return \"op15\";\n-    }\n-\n-    private void setAllUserIdTagList(Model model) {\n-        model.addAttribute(\"idTagList\", ocppTagRepository.getIdTags());\n-    }\n-\n-    // -------------------------------------------------------------------------\n-    // Http methods (GET)\n-    // -------------------------------------------------------------------------\n-\n-    @RequestMapping(value = RESERVE_PATH, method = RequestMethod.GET)\n-    public String getReserveNow(Model model) {\n-        setCommonAttributes(model);\n-        setActiveUserIdTagList(model);\n-        model.addAttribute(PARAMS, new ReserveNowParams());\n-        return getPrefix() + RESERVE_PATH;\n-    }\n-\n-    @RequestMapping(value = CANCEL_RESERV_PATH, method = RequestMethod.GET)\n-    public String getCancelReserv(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new CancelReservationParams());\n-        return getPrefix() + CANCEL_RESERV_PATH;\n-    }\n-\n-    @RequestMapping(value = DATA_TRANSFER_PATH, method = RequestMethod.GET)\n-    public String getDataTransfer(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new DataTransferParams());\n-        return getPrefix() + DATA_TRANSFER_PATH;\n-    }\n-\n-    @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.GET)\n-    public String getGetConf(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new GetConfigurationParams());\n-        model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n-        return getPrefix() + GET_CONF_PATH;\n-    }\n-\n-    @RequestMapping(value = GET_LIST_VERSION_PATH, method = RequestMethod.GET)\n-    public String getListVersion(Model model) {\n-        setCommonAttributes(model);\n-        model.addAttribute(PARAMS, new MultipleChargePointSelect());\n-        return getPrefix() + GET_LIST_VERSION_PATH;\n-    }\n-\n-    @RequestMapping(value = SEND_LIST_PATH, method = RequestMethod.GET)\n-    public String getSendList(Model model) {\n-        setCommonAttributes(model);\n-        setAllUserIdTagList(model);\n-        model.addAttribute(PARAMS, new SendLocalListParams());\n-        return getPrefix() + SEND_LIST_PATH;\n+  @Autowired\n+  @Qualifier(\"ChargePointService15_Client\")\n+  private ChargePointService15_Client client15;\n+\n+  // -------------------------------------------------------------------------\n+  // Paths\n+  // -------------------------------------------------------------------------\n+\n+  private static final String RESERVE_PATH = \"/ReserveNow\";\n+  private static final String CANCEL_RESERV_PATH = \"/CancelReservation\";\n+  private static final String DATA_TRANSFER_PATH = \"/DataTransfer\";\n+  protected static final String GET_CONF_PATH = \"/GetConfiguration\";\n+  private static final String GET_LIST_VERSION_PATH = \"/GetLocalListVersion\";\n+  private static final String SEND_LIST_PATH = \"/SendLocalList\";\n+\n+  // -------------------------------------------------------------------------\n+  // Helpers\n+  // -------------------------------------------------------------------------\n+\n+  protected ChargePointService15_Client getClient15() {\n+    return client15;\n+  }\n+\n+  @Override\n+  protected ChargePointService12_Client getClient12() {\n+    return client15;\n+  }\n+\n+  @Override\n+  protected void setCommonAttributes(Model model) {\n+    model.addAttribute(\"cpList\", chargePointHelperService.getChargePointsV15());\n+    model.addAttribute(\"opVersion\", \"v1.5\");\n+  }\n+\n+  @Override\n+  protected Map<String, String> getConfigurationKeys(ConfigurationKeyReadWriteEnum confEnum) {\n+    // this conf enum is only relevant for versions >= occp 1.6\n+    return ConfigurationKeyEnum.OCPP_15_MAP;\n+  }\n+\n+  @Override\n+  protected String getRedirectPath() {\n+    return \"redirect:/manager/operations/v1.5/ChangeAvailability\";\n+  }\n+\n+  @Override\n+  protected String getPrefix() {\n+    return \"op15\";\n+  }\n+\n+  private void setAllUserIdTagList(Model model) {\n+    model.addAttribute(\"idTagList\", ocppTagRepository.getIdTags());\n+  }\n+\n+  // -------------------------------------------------------------------------\n+  // Http methods (GET)\n+  // -------------------------------------------------------------------------\n+\n+  @RequestMapping(value = RESERVE_PATH, method = RequestMethod.GET)\n+  public String getReserveNow(Model model) {\n+    setCommonAttributes(model);\n+    setActiveUserIdTagList(model);\n+    model.addAttribute(PARAMS, new ReserveNowParams());\n+    return getPrefix() + RESERVE_PATH;\n+  }\n+\n+  @RequestMapping(value = CANCEL_RESERV_PATH, method = RequestMethod.GET)\n+  public String getCancelReserv(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new CancelReservationParams());\n+    return getPrefix() + CANCEL_RESERV_PATH;\n+  }\n+\n+  @RequestMapping(value = DATA_TRANSFER_PATH, method = RequestMethod.GET)\n+  public String getDataTransfer(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new DataTransferParams());\n+    return getPrefix() + DATA_TRANSFER_PATH;\n+  }\n+\n+  @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.GET)\n+  public String getGetConf(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new GetConfigurationParams());\n+    model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n+    return getPrefix() + GET_CONF_PATH;\n+  }\n+\n+  @RequestMapping(value = GET_LIST_VERSION_PATH, method = RequestMethod.GET)\n+  public String getListVersion(Model model) {\n+    setCommonAttributes(model);\n+    model.addAttribute(PARAMS, new MultipleChargePointSelect());\n+    return getPrefix() + GET_LIST_VERSION_PATH;\n+  }\n+\n+  @RequestMapping(value = SEND_LIST_PATH, method = RequestMethod.GET)\n+  public String getSendList(Model model) {\n+    setCommonAttributes(model);\n+    setAllUserIdTagList(model);\n+    model.addAttribute(PARAMS, new SendLocalListParams());\n+    return getPrefix() + SEND_LIST_PATH;\n+  }\n+\n+  // -------------------------------------------------------------------------\n+  // Http methods (POST)\n+  // -------------------------------------------------------------------------\n+\n+  @RequestMapping(value = RESERVE_PATH, method = RequestMethod.POST)\n+  public String postReserveNow(@Valid @ModelAttribute(PARAMS) ReserveNowParams params,\n+                               BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+      setCommonAttributes(model);\n+      setActiveUserIdTagList(model);\n+      return getPrefix() + RESERVE_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient15().reserveNow(params);\n+  }\n \n-    // -------------------------------------------------------------------------\n-    // Http methods (POST)\n-    // -------------------------------------------------------------------------\n-\n-    @RequestMapping(value = RESERVE_PATH, method = RequestMethod.POST)\n-    public String postReserveNow(@Valid @ModelAttribute(PARAMS) ReserveNowParams params,\n+  @RequestMapping(value = CANCEL_RESERV_PATH, method = RequestMethod.POST)\n+  public String postCancelReserv(@Valid @ModelAttribute(PARAMS) CancelReservationParams params,\n                                  BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            setActiveUserIdTagList(model);\n-            return getPrefix() + RESERVE_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().reserveNow(params);\n-    }\n-\n-    @RequestMapping(value = CANCEL_RESERV_PATH, method = RequestMethod.POST)\n-    public String postCancelReserv(@Valid @ModelAttribute(PARAMS) CancelReservationParams params,\n-                                   BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + CANCEL_RESERV_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().cancelReservation(params);\n+    if (result.hasErrors()) {\n+      setCommonAttributes(model);\n+      return getPrefix() + CANCEL_RESERV_PATH;\n     }\n+    return REDIRECT_TASKS_PATH + getClient15().cancelReservation(params);\n+  }\n \n-    @RequestMapping(value = DATA_TRANSFER_PATH, method = RequestMethod.POST)\n-    public String postDataTransfer(@Valid @ModelAttribute(PARAMS) DataTransferParams params,\n-                                   BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + DATA_TRANSFER_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().dataTransfer(params);\n-    }\n-\n-    @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.POST)\n-    public String postGetConf(@Valid @ModelAttribute(PARAMS) GetConfigurationParams params,\n-                              BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n-            return getPrefix() + GET_CONF_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().getConfiguration(params);\n-    }\n-\n-    @RequestMapping(value = GET_LIST_VERSION_PATH, method = RequestMethod.POST)\n-    public String postListVersion(@Valid @ModelAttribute(PARAMS) MultipleChargePointSelect params,\n-                                  BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            return getPrefix() + GET_LIST_VERSION_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().getLocalListVersion(params);\n-    }\n-\n-    @RequestMapping(value = SEND_LIST_PATH, method = RequestMethod.POST)\n-    public String postSendList(@Valid @ModelAttribute(PARAMS) SendLocalListParams params,\n-                               BindingResult result, Model model) {\n-        if (result.hasErrors()) {\n-            setCommonAttributes(model);\n-            setAllUserIdTagList(model);\n-            return getPrefix() + SEND_LIST_PATH;\n-        }\n-        return REDIRECT_TASKS_PATH + getClient15().sendLocalList(params);\n-    }\n+  @RequestMapping(value = DATA_TRANSFER_PATH, method = RequestMethod.POST)\n+  public String postDataTransfer(@Valid @ModelAttribute(PARAMS) DataTransferParams params,\n+                                 BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+      setCommonAttributes(model);\n+      return getPrefix() + DATA_TRANSFER_PATH;\n+    }\n+    return REDIRECT_TASKS_PATH + getClient15().dataTransfer(params);\n+  }\n+\n+  @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.POST)\n+  public String postGetConf(@Valid @ModelAttribute(PARAMS) GetConfigurationParams params,\n+                            BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+      setCommonAttributes(model);\n+      model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n+      return getPrefix() + GET_CONF_PATH;\n+    }\n+    return REDIRECT_TASKS_PATH + getClient15().getConfiguration(params);\n+  }\n+\n+  @RequestMapping(value = GET_LIST_VERSION_PATH, method = RequestMethod.POST)\n+  public String postListVersion(@Valid @ModelAttribute(PARAMS) MultipleChargePointSelect params,\n+                                BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+      setCommonAttributes(model);\n+      return getPrefix() + GET_LIST_VERSION_PATH;\n+    }\n+    return REDIRECT_TASKS_PATH + getClient15().getLocalListVersion(params);\n+  }\n+\n+  @RequestMapping(value = SEND_LIST_PATH, method = RequestMethod.POST)\n+  public String postSendList(@Valid @ModelAttribute(PARAMS) SendLocalListParams params,\n+                             BindingResult result, Model model) {\n+    if (result.hasErrors()) {\n+      setCommonAttributes(model);\n+      setAllUserIdTagList(model);\n+      return getPrefix() + SEND_LIST_PATH;\n+    }\n+    return REDIRECT_TASKS_PATH + getClient15().sendLocalList(params);\n+  }\n }\n",
            "diff_size": 181
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/111/Ocpp15Controller.java\nindex cfdf1e4cc51..51555170dce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/111/Ocpp15Controller.java\n@@ -18,7 +18,6 @@ import org.springframework.validation.BindingResult;\n import org.springframework.web.bind.annotation.ModelAttribute;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n-\n import javax.validation.Valid;\n import java.util.Map;\n \n@@ -28,6 +27,8 @@ import static de.rwth.idsg.steve.web.dto.ocpp.ConfigurationKeyReadWriteEnum.RW;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 07.11.2014\n  */\n+\n+\n @Controller\n @RequestMapping(value = \"/manager/operations/v1.5\")\n public class Ocpp15Controller extends Ocpp12Controller {\n@@ -39,7 +40,6 @@ public class Ocpp15Controller extends Ocpp12Controller {\n     // -------------------------------------------------------------------------\n     // Paths\n     // -------------------------------------------------------------------------\n-\n     private static final String RESERVE_PATH = \"/ReserveNow\";\n     private static final String CANCEL_RESERV_PATH = \"/CancelReservation\";\n     private static final String DATA_TRANSFER_PATH = \"/DataTransfer\";\n@@ -50,7 +50,6 @@ public class Ocpp15Controller extends Ocpp12Controller {\n     // -------------------------------------------------------------------------\n     // Helpers\n     // -------------------------------------------------------------------------\n-    \n     protected ChargePointService15_Client getClient15() {\n         return client15;\n     }\n@@ -147,7 +146,8 @@ public class Ocpp15Controller extends Ocpp12Controller {\n             setActiveUserIdTagList(model);\n             return getPrefix() + RESERVE_PATH;\n         }\n-        return REDIRECT_TASKS_PATH + getClient15().reserveNow(params);\n+        return REDIRECT_TASKS_PATH + getClient15()\n+            .reserveNow(params);\n     }\n \n     @RequestMapping(value = CANCEL_RESERV_PATH, method = RequestMethod.POST)\n@@ -157,7 +157,8 @@ public class Ocpp15Controller extends Ocpp12Controller {\n             setCommonAttributes(model);\n             return getPrefix() + CANCEL_RESERV_PATH;\n         }\n-        return REDIRECT_TASKS_PATH + getClient15().cancelReservation(params);\n+        return REDIRECT_TASKS_PATH + getClient15()\n+            .cancelReservation(params);\n     }\n \n     @RequestMapping(value = DATA_TRANSFER_PATH, method = RequestMethod.POST)\n@@ -167,7 +168,8 @@ public class Ocpp15Controller extends Ocpp12Controller {\n             setCommonAttributes(model);\n             return getPrefix() + DATA_TRANSFER_PATH;\n         }\n-        return REDIRECT_TASKS_PATH + getClient15().dataTransfer(params);\n+        return REDIRECT_TASKS_PATH + getClient15()\n+            .dataTransfer(params);\n     }\n \n     @RequestMapping(value = GET_CONF_PATH, method = RequestMethod.POST)\n@@ -178,7 +180,8 @@ public class Ocpp15Controller extends Ocpp12Controller {\n             model.addAttribute(\"ocppConfKeys\", getConfigurationKeys(RW));\n             return getPrefix() + GET_CONF_PATH;\n         }\n-        return REDIRECT_TASKS_PATH + getClient15().getConfiguration(params);\n+        return REDIRECT_TASKS_PATH + getClient15()\n+            .getConfiguration(params);\n     }\n \n     @RequestMapping(value = GET_LIST_VERSION_PATH, method = RequestMethod.POST)\n@@ -188,7 +191,8 @@ public class Ocpp15Controller extends Ocpp12Controller {\n             setCommonAttributes(model);\n             return getPrefix() + GET_LIST_VERSION_PATH;\n         }\n-        return REDIRECT_TASKS_PATH + getClient15().getLocalListVersion(params);\n+        return REDIRECT_TASKS_PATH + getClient15()\n+            .getLocalListVersion(params);\n     }\n \n     @RequestMapping(value = SEND_LIST_PATH, method = RequestMethod.POST)\n@@ -199,6 +203,7 @@ public class Ocpp15Controller extends Ocpp12Controller {\n             setAllUserIdTagList(model);\n             return getPrefix() + SEND_LIST_PATH;\n         }\n-        return REDIRECT_TASKS_PATH + getClient15().sendLocalList(params);\n+        return REDIRECT_TASKS_PATH + getClient15()\n+            .sendLocalList(params);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_random/111/Ocpp15Controller.java\nindex cfdf1e4cc51..28ce80d048f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_random/111/Ocpp15Controller.java\n@@ -50,7 +50,7 @@ public class Ocpp15Controller extends Ocpp12Controller {\n     // -------------------------------------------------------------------------\n     // Helpers\n     // -------------------------------------------------------------------------\n-    \n+\n     protected ChargePointService15_Client getClient15() {\n         return client15;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/111/Ocpp15Controller.java\nindex cfdf1e4cc51..9eccc5260da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/111/Ocpp15Controller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/111/Ocpp15Controller.java\n@@ -49,8 +49,8 @@ public class Ocpp15Controller extends Ocpp12Controller {\n \n     // -------------------------------------------------------------------------\n     // Helpers\n-    // -------------------------------------------------------------------------\n-    \n+\n+        // -------------------------------------------------------------------------\n     protected ChargePointService15_Client getClient15() {\n         return client15;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
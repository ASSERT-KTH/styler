{
    "project_name": "seedstack-business",
    "error_id": "51",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.specification;\n\nimport com.google.common.base.CharMatcher;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/51/StringSpecification.java\nindex e54f457e557..9a3c3a7b253 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/51/StringSpecification.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.specification;\n \n import com.google.common.base.CharMatcher;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/51/StringSpecification.java\nindex e54f457e557..9a3c3a7b253 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/51/StringSpecification.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.specification;\n \n import com.google.common.base.CharMatcher;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/51/StringSpecification.java\nindex e54f457e557..2af57d63792 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/51/StringSpecification.java\n@@ -168,4 +168,4 @@ public abstract class StringSpecification implements Specification<String> {\n             return this;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "56",
                    "column": "41",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "76",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "92",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 105.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "105",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 116.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "116",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 127.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "127",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 138.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "138",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 149.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "149",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "column": "26",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "151",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 160.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "160",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 172.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "172",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 0, indentation should be the same level as line 183.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "183",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/51/StringSpecification.java\nindex e54f457e557..2c1fd4dcf98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/51/StringSpecification.java\n@@ -13,6 +13,8 @@ import com.google.common.base.CharMatcher;\n  * Base class for specifications that compare strings. Allows to specify string-related comparison\n  * options like trimming or case sensitivity.\n  */\n+\n+\n public abstract class StringSpecification implements Specification<String> {\n \n     protected final String expectedString;\n@@ -23,6 +25,7 @@ public abstract class StringSpecification implements Specification<String> {\n      *\n      * @param expectedString the string to compare the candidate against.\n      */\n+\n     protected StringSpecification(String expectedString) {\n         this.expectedString = expectedString;\n         this.options = Options.empty();\n@@ -34,6 +37,7 @@ public abstract class StringSpecification implements Specification<String> {\n      * @param expectedString the string to compare the candidate against.\n      * @param options        the comparison options.\n      */\n+\n     protected StringSpecification(String expectedString, Options options) {\n         this.expectedString = expectedString;\n         this.options = options;\n@@ -43,19 +47,22 @@ public abstract class StringSpecification implements Specification<String> {\n     public boolean isSatisfiedBy(String candidateValue) {\n         String testValue = candidateValue;\n         if (options.isTrimmed()) {\n-            testValue = CharMatcher.whitespace().trimFrom(testValue);\n+            testValue = CharMatcher.whitespace()\n+                .trimFrom(testValue);\n         } else {\n-            if (options.isLeadTrimmed()) {\n-                testValue = CharMatcher.whitespace().trimLeadingFrom(testValue);\n-            }\n-            if (options.isTailTrimmed()) {\n-                testValue = CharMatcher.whitespace().trimTrailingFrom(testValue);\n+            if(options.isLeadTrimmed()) {\n+                testValue = CharMatcher.whitespace()\n+                    .trimLeadingFrom(testValue);\n+                                        }\n+            if(options.isTailTrimmed()) {\n+                testValue = CharMatcher.whitespace()\n+                    .trimTrailingFrom(testValue);\n             }\n         }\n         return isSatisfiedByString(testValue);\n     }\n \n-    protected abstract boolean isSatisfiedByString(String candidateString);\n+    protected abstract boolean isSatisfiedByString(String candidateString) ;\n \n     /**\n      * Returns the expected string.\n@@ -71,6 +78,7 @@ public abstract class StringSpecification implements Specification<String> {\n      *\n      * @return the comparison options.\n      */\n+\n     public Options getOptions() {\n         return options;\n     }\n@@ -78,23 +86,25 @@ public abstract class StringSpecification implements Specification<String> {\n     /**\n      * Options used for comparing strings.\n      */\n+\n     public static class Options {\n-        private boolean leadTrimmed;\n-        private boolean tailTrimmed;\n-        private boolean ignoringCase;\n \n-        public static Options empty() {\n-            return new Options();\n-        }\n+private boolean leadTrimmed;\n+private boolean tailTrimmed;\n+private boolean ignoringCase;\n+public static Options empty() {\n+   return new Options();\n+}\n \n         /**\n          * Returns if the comparison should ignore leading whitespace.\n          *\n          * @return true if the comparison should ignore leading whitespace, false otherwise.\n          */\n-        public boolean isLeadTrimmed() {\n-            return leadTrimmed;\n-        }\n+\n+public boolean isLeadTrimmed() {\n+   return leadTrimmed;\n+}\n \n         /**\n          * Sets if the comparison should ignore leading whitespace.\n@@ -102,19 +112,21 @@ public abstract class StringSpecification implements Specification<String> {\n          * @param leadTrimmed true if the comparison should ignore leading whitespace, false otherwise.\n          * @return itself for chaining.\n          */\n-        public Options setLeadTrimmed(boolean leadTrimmed) {\n-            this.leadTrimmed = leadTrimmed;\n-            return this;\n-        }\n+\n+public Options setLeadTrimmed(boolean leadTrimmed) {\n+   this.leadTrimmed = leadTrimmed;\n+   return this;\n+}\n \n         /**\n          * Returns if the comparison should ignore trailing whitespace.\n          *\n          * @return true if the comparison should ignore trailing whitespace, false otherwise.\n          */\n-        public boolean isTailTrimmed() {\n-            return tailTrimmed;\n-        }\n+\n+public boolean isTailTrimmed() {\n+   return tailTrimmed;\n+}\n \n         /**\n          * Sets if the comparison should ignore trailing whitespace.\n@@ -122,19 +134,21 @@ public abstract class StringSpecification implements Specification<String> {\n          * @param tailTrimmed true if the comparison should ignore trailing whitespace, false otherwise.\n          * @return itself for chaining.\n          */\n-        public Options setTailTrimmed(boolean tailTrimmed) {\n-            this.tailTrimmed = tailTrimmed;\n-            return this;\n-        }\n+\n+public Options setTailTrimmed(boolean tailTrimmed) {\n+   this.tailTrimmed = tailTrimmed;\n+   return this;\n+}\n \n         /**\n          * Returns if the comparison should ignore leading and trailing whitespace.\n          *\n          * @return true if the comparison should ignore leading and trailing whitespace, false otherwise.\n          */\n-        public boolean isTrimmed() {\n-            return isLeadTrimmed() && isTailTrimmed();\n-        }\n+\n+public boolean isTrimmed() {\n+   return isLeadTrimmed()&& isTailTrimmed();\n+}\n \n         /**\n          * Sets if the comparison should ignore leading and trailing whitespace.\n@@ -142,20 +156,22 @@ public abstract class StringSpecification implements Specification<String> {\n          * @param trimmed true if the comparison should ignore leading and trailing whitespace, false otherwise.\n          * @return itself for chaining.\n          */\n-        public Options setTrimmed(boolean trimmed) {\n-            setLeadTrimmed(trimmed);\n-            setTailTrimmed(trimmed);\n-            return this;\n-        }\n+\n+public Options setTrimmed(boolean trimmed) {\n+   setLeadTrimmed(trimmed);\n+   setTailTrimmed(trimmed);\n+   return this;\n+}\n \n         /**\n          * Returns if the comparison should ignore the case.\n          *\n          * @return true if the comparison should be sensitive to case differences, false otherwise.\n          */\n-        public boolean isIgnoringCase() {\n-            return ignoringCase;\n-        }\n+\n+public boolean isIgnoringCase() {\n+   return ignoringCase;\n+}\n \n         /**\n          * Sets if the comparison should ignore the case.\n@@ -163,9 +179,10 @@ public abstract class StringSpecification implements Specification<String> {\n          * @param ignoringCase true if the comparison should be sensitive to case differences, false otherwise.\n          * @return itself for chaining.\n          */\n-        public Options setIgnoringCase(boolean ignoringCase) {\n-            this.ignoringCase = ignoringCase;\n-            return this;\n-        }\n-    }\n+\n+public Options setIgnoringCase(boolean ignoringCase) {\n+   this.ignoringCase = ignoringCase;\n+   return this;\n }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 64
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/51/StringSpecification.java\nindex e54f457e557..9a3c3a7b253 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/51/StringSpecification.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.specification;\n \n import com.google.common.base.CharMatcher;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/51/StringSpecification.java\nindex e54f457e557..9a3c3a7b253 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/51/StringSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/51/StringSpecification.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.specification;\n \n import com.google.common.base.CharMatcher;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
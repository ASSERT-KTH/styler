{
    "project_name": "neo4j-neo4j",
    "error_id": "224",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/224/SpatialConfigExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/224/SpatialConfigExtractor.java\nindex 14f1d01a374..e4e9213719a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/224/SpatialConfigExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/224/SpatialConfigExtractor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -53,35 +54,34 @@ final class SpatialConfigExtractor\n     {\n     }\n \n-    static IndexConfig indexConfigFromSpatialFile( PageCache pageCache, List<SpatialFile> spatialFiles,\n-            PageCursorTracer cursorTracer, Log log ) throws IOException\n+    static IndexConfig indexConfigFromSpatialFile(PageCache pageCache, List<SpatialFile> spatialFiles,\n+                                                  PageCursorTracer cursorTracer, Log log) throws IOException\n     {\n-        Map<String,Value> map = new HashMap<>();\n-        for ( SpatialFile spatialFile : spatialFiles )\n+        Map<String, Value> map = new HashMap<>();\n+        for (SpatialFile spatialFile : spatialFiles)\n         {\n             try\n             {\n-                GBPTree.readHeader( pageCache, spatialFile.getIndexFile(), headerReader( map, spatialFile, log ), cursorTracer );\n-            }\n-            catch ( MetadataMismatchException e )\n+                GBPTree.readHeader(pageCache, spatialFile.getIndexFile(), headerReader(map, spatialFile, log), cursorTracer);\n+            } catch (MetadataMismatchException e)\n             {\n-                logExtractionFailure( \"Index meta data is corrupt and can not be parsed.\", log, spatialFile.getIndexFile() );\n+                logExtractionFailure(\"Index meta data is corrupt and can not be parsed.\", log, spatialFile.getIndexFile());\n                 map = Collections.emptyMap();\n                 break;\n             }\n         }\n-        return IndexConfig.with( map );\n+        return IndexConfig.with(map);\n     }\n \n-    private static Header.Reader headerReader( Map<String,Value> map, SpatialFile spatialFile, Log log )\n+    private static Header.Reader headerReader(Map<String, Value> map, SpatialFile spatialFile, Log log)\n     {\n         return headerBytes ->\n         {\n             byte state = headerBytes.get();\n-            if ( state != BYTE_FAILED )\n+            if (state != BYTE_FAILED)\n             {\n                 int typeId = headerBytes.getInt();\n-                if ( typeId == SPATIAL_INDEX_TYPE_SPACE_FILLING_CURVE )\n+                if (typeId == SPATIAL_INDEX_TYPE_SPACE_FILLING_CURVE)\n                 {\n                     try\n                     {\n@@ -90,27 +90,24 @@ final class SpatialConfigExtractor\n                         int dimensions = headerBytes.getInt();\n                         double[] min = new double[dimensions];\n                         double[] max = new double[dimensions];\n-                        for ( int i = 0; i < dimensions; i++ )\n+                        for (int i = 0; i < dimensions; i++)\n                         {\n                             min[i] = headerBytes.getDouble();\n                             max[i] = headerBytes.getDouble();\n                         }\n                         CoordinateReferenceSystem crs = spatialFile.getCrs();\n-                        SpatialIndexConfig.addSpatialConfig( map, crs, min, max );\n-                    }\n-                    catch ( BufferUnderflowException e )\n+                        SpatialIndexConfig.addSpatialConfig(map, crs, min, max);\n+                    } catch (BufferUnderflowException e)\n                     {\n-                        logExtractionFailure( \"Got an exception, \" + e + \".\", log, spatialFile.getIndexFile() );\n+                        logExtractionFailure(\"Got an exception, \" + e + \".\", log, spatialFile.getIndexFile());\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    logExtractionFailure( \"Spatial index file is of an unknown type, typeId=\" + state + \".\", log, spatialFile.getIndexFile() );\n+                    logExtractionFailure(\"Spatial index file is of an unknown type, typeId=\" + state + \".\", log, spatialFile.getIndexFile());\n                 }\n-            }\n-            else\n+            } else\n             {\n-                logExtractionFailure( \"Index is in FAILED state.\", log, spatialFile.getIndexFile() );\n+                logExtractionFailure(\"Index is in FAILED state.\", log, spatialFile.getIndexFile());\n             }\n         };\n     }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "bakdata-conquery",
    "error_id": "616",
    "information": {
        "errors": [
            {
                "line": "70",
                "severity": "error",
                "message": "Indent must use tab characters",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n\t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n\t\t\t\t\t  .add(store);\n\t\t\t}\n\t\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/616/BlockFactory.java\nindex 5f9219cace0..8784b80a96f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/616/BlockFactory.java\n@@ -67,7 +67,8 @@ public class BlockFactory {\n \t\tfor (Bucket bucket : buckets) {\n \t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n \t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n-\t\t\t\t\t  .add(store);\n+\t\t\t\t\t.add(store);\n+\n \t\t\t}\n \t\t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/616/BlockFactory.java\nindex 5f9219cace0..93404245b94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/616/BlockFactory.java\n@@ -19,70 +19,70 @@ import it.unimi.dsi.fastutil.ints.IntList;\n \n public class BlockFactory {\n \n-\tprivate static Object[][] transpose(List<Object[]> rows) {\n-\t\tfinal Object[][] transposed = new Object[rows.get(0).length][rows.size()];\n+    private static Object[][] transpose(List<Object[]> rows) {\n+        final Object[][] transposed = new Object[rows.get(0).length][rows.size()];\n \n-\t\tfor (int x = 0; x < rows.size(); x++) {\n-\t\t\tfor (int y = 0; y < rows.get(x).length; y++) {\n-\t\t\t\ttransposed[y][x] = rows.get(x)[y];\n-\t\t\t}\n-\t\t}\n+        for (int x = 0; x < rows.size(); x++) {\n+            for (int y = 0; y < rows.get(x).length; y++) {\n+                transposed[y][x] = rows.get(x)[y];\n+            }\n+        }\n \n-\t\treturn transposed;\n-\t}\n+        return transposed;\n+    }\n \n-\tpublic Bucket create(Import imp, List<Object[]> rows) {\n-\t\t// TODO: 01.10.2020 FK, this is obviously not optimal, data should be collected by row already\n-\t\tfinal Object[][] byColumns = transpose(rows);\n+    public Bucket create(Import imp, List<Object[]> rows) {\n+        // TODO: 01.10.2020 FK, this is obviously not optimal, data should be collected by row already\n+        final Object[][] byColumns = transpose(rows);\n \n-\t\tImportColumn[] columns = imp.getColumns();\n+        ImportColumn[] columns = imp.getColumns();\n \n-\t\tColumnStore[] stores = new ColumnStore[columns.length];\n+        ColumnStore[] stores = new ColumnStore[columns.length];\n \n-\t\tfor (int colIndex = 0; colIndex < columns.length; colIndex++) {\n-\t\t\tImportColumn column = columns[colIndex];\n+        for (int colIndex = 0; colIndex < columns.length; colIndex++) {\n+            ImportColumn column = columns[colIndex];\n \n-\t\t\tstores[colIndex] = column.getType().createStore(column, byColumns[colIndex]);\n-\t\t}\n+            stores[colIndex] = column.getType().createStore(column, byColumns[colIndex]);\n+        }\n \n-\t\treturn Bucket.create(0, imp, stores, new int[] {0}, new int[] {rows.get(0).length });\n-\t}\n+        return Bucket.create(0, imp, stores, new int[] {0}, new int[] {rows.get(0).length});\n+    }\n \n-\tpublic Bucket readSingleValue(NamespaceCollection namespaceCollection, Dataset dataset, int bucketNumber, Import imp, InputStream inputStream) throws IOException {\n-\t\treturn dataset.injectInto(namespaceCollection.injectInto(Jackson.BINARY_MAPPER)).readValue(inputStream, Bucket.class);\n-\t}\n-\t\n-\tpublic Bucket adaptValuesFrom(int bucketNumber, Import outImport, Bucket value, PreprocessedHeader header){\n-\t\t//TODO what does this do?\n-\t\treturn value;\n-\t}\n+    public Bucket readSingleValue(NamespaceCollection namespaceCollection, Dataset dataset, int bucketNumber, Import imp, InputStream inputStream) throws IOException {\n+        return dataset.injectInto(namespaceCollection.injectInto(Jackson.BINARY_MAPPER)).readValue(inputStream, Bucket.class);\n+    }\n \n-\tpublic Bucket combine(IntList includedEntities, Bucket[] buckets){\n+    public Bucket adaptValuesFrom(int bucketNumber, Import outImport, Bucket value, PreprocessedHeader header) {\n+        //TODO what does this do?\n+        return value;\n+    }\n \n-\t\tColumnStore<?>[] newStores = new ColumnStore[buckets[0].getStores().length];\n+    public Bucket combine(IntList includedEntities, Bucket[] buckets) {\n \n-\t\t// the order is important!\n-\t\tMap<ImportColumn, List<ColumnStore<?>>> stores = new HashMap<>();\n+        ColumnStore<?>[] newStores = new ColumnStore[buckets[0].getStores().length];\n \n-\t\tfor (Bucket bucket : buckets) {\n-\t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n-\t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n-\t\t\t\t\t  .add(store);\n-\t\t\t}\n-\t\t}\n+        // the order is important!\n+        Map<ImportColumn, List<ColumnStore<?>>> stores = new HashMap<>();\n \n-\t\tfor (Map.Entry<ImportColumn, List<ColumnStore<?>>> entries : stores.entrySet()) {\n-\t\t\tnewStores[entries.getKey().getPosition()] = entries.getValue().get(0).merge(entries.getValue());\n-\t\t}\n+        for (Bucket bucket : buckets) {\n+            for (ColumnStore<?> store : bucket.getStores()) {\n+                stores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n+                    .add(store);\n+            }\n+        }\n \n-\t\tfinal int[] ends = new int[buckets.length];\n+        for (Map.Entry<ImportColumn, List<ColumnStore<?>>> entries : stores.entrySet()) {\n+            newStores[entries.getKey().getPosition()] = entries.getValue().get(0).merge(entries.getValue());\n+        }\n \n-\t\tfor (int index = 0; index < buckets.length; index++) {\n-\t\t\tfinal Bucket bucket = buckets[index];\n-\t\t\tends[index] = bucket.getBucketSize();\n-\t\t}\n+        final int[] ends = new int[buckets.length];\n \n+        for (int index = 0; index < buckets.length; index++) {\n+            final Bucket bucket = buckets[index];\n+            ends[index] = bucket.getBucketSize();\n+        }\n \n-\t\treturn Bucket.create(buckets[0].getBucket(), buckets[0].getImp(), newStores, includedEntities.toArray(new int[0]), ends);\n-\t}\n+\n+        return Bucket.create(buckets[0].getBucket(), buckets[0].getImp(), newStores, includedEntities.toArray(new int[0]), ends);\n+    }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "56",
                    "column": "5",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 1, expected is 2, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "70",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/616/BlockFactory.java\nindex 5f9219cace0..5060a0463b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/616/BlockFactory.java\n@@ -45,19 +45,19 @@ public class BlockFactory {\n \t\t\tstores[colIndex] = column.getType().createStore(column, byColumns[colIndex]);\n \t\t}\n \n-\t\treturn Bucket.create(0, imp, stores, new int[] {0}, new int[] {rows.get(0).length });\n+\t\treturn Bucket.create(0, imp, stores, new int[] {0}, new int[] {rows.get(0).length});\n \t}\n \n \tpublic Bucket readSingleValue(NamespaceCollection namespaceCollection, Dataset dataset, int bucketNumber, Import imp, InputStream inputStream) throws IOException {\n \t\treturn dataset.injectInto(namespaceCollection.injectInto(Jackson.BINARY_MAPPER)).readValue(inputStream, Bucket.class);\n \t}\n \t\n-\tpublic Bucket adaptValuesFrom(int bucketNumber, Import outImport, Bucket value, PreprocessedHeader header){\n-\t\t//TODO what does this do?\n+\tpublic Bucket adaptValuesFrom(int bucketNumber, Import outImport, Bucket value, PreprocessedHeader header) {\n+\t//TODO what does this do?\n \t\treturn value;\n \t}\n \n-\tpublic Bucket combine(IntList includedEntities, Bucket[] buckets){\n+\tpublic Bucket combine(IntList includedEntities, Bucket[] buckets) {\n \n \t\tColumnStore<?>[] newStores = new ColumnStore[buckets[0].getStores().length];\n \n@@ -67,8 +67,8 @@ public class BlockFactory {\n \t\tfor (Bucket bucket : buckets) {\n \t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n \t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n-\t\t\t\t\t  .add(store);\n-\t\t\t}\n+.add(store);\n+\t}\n \t\t}\n \n \t\tfor (Map.Entry<ImportColumn, List<ColumnStore<?>>> entries : stores.entrySet()) {\n@@ -81,8 +81,6 @@ public class BlockFactory {\n \t\t\tfinal Bucket bucket = buckets[index];\n \t\t\tends[index] = bucket.getBucketSize();\n \t\t}\n-\n-\n-\t\treturn Bucket.create(buckets[0].getBucket(), buckets[0].getImp(), newStores, includedEntities.toArray(new int[0]), ends);\n+return Bucket.create(buckets[0].getBucket(), buckets[0].getImp(), newStores, includedEntities.toArray(new int[0]), ends);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/616/BlockFactory.java\nindex 5f9219cace0..bd659a5b683 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/616/BlockFactory.java\n@@ -6,7 +6,6 @@ import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-\n import com.bakdata.conquery.io.jackson.Jackson;\n import com.bakdata.conquery.models.datasets.Dataset;\n import com.bakdata.conquery.models.datasets.Import;\n@@ -19,70 +18,63 @@ import it.unimi.dsi.fastutil.ints.IntList;\n \n public class BlockFactory {\n \n-\tprivate static Object[][] transpose(List<Object[]> rows) {\n-\t\tfinal Object[][] transposed = new Object[rows.get(0).length][rows.size()];\n-\n-\t\tfor (int x = 0; x < rows.size(); x++) {\n-\t\t\tfor (int y = 0; y < rows.get(x).length; y++) {\n-\t\t\t\ttransposed[y][x] = rows.get(x)[y];\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn transposed;\n-\t}\n-\n-\tpublic Bucket create(Import imp, List<Object[]> rows) {\n-\t\t// TODO: 01.10.2020 FK, this is obviously not optimal, data should be collected by row already\n-\t\tfinal Object[][] byColumns = transpose(rows);\n-\n-\t\tImportColumn[] columns = imp.getColumns();\n-\n-\t\tColumnStore[] stores = new ColumnStore[columns.length];\n-\n-\t\tfor (int colIndex = 0; colIndex < columns.length; colIndex++) {\n-\t\t\tImportColumn column = columns[colIndex];\n-\n-\t\t\tstores[colIndex] = column.getType().createStore(column, byColumns[colIndex]);\n-\t\t}\n-\n-\t\treturn Bucket.create(0, imp, stores, new int[] {0}, new int[] {rows.get(0).length });\n-\t}\n-\n-\tpublic Bucket readSingleValue(NamespaceCollection namespaceCollection, Dataset dataset, int bucketNumber, Import imp, InputStream inputStream) throws IOException {\n-\t\treturn dataset.injectInto(namespaceCollection.injectInto(Jackson.BINARY_MAPPER)).readValue(inputStream, Bucket.class);\n-\t}\n-\t\n-\tpublic Bucket adaptValuesFrom(int bucketNumber, Import outImport, Bucket value, PreprocessedHeader header){\n-\t\t//TODO what does this do?\n-\t\treturn value;\n-\t}\n-\n-\tpublic Bucket combine(IntList includedEntities, Bucket[] buckets){\n-\n-\t\tColumnStore<?>[] newStores = new ColumnStore[buckets[0].getStores().length];\n-\n-\t\t// the order is important!\n-\t\tMap<ImportColumn, List<ColumnStore<?>>> stores = new HashMap<>();\n-\n-\t\tfor (Bucket bucket : buckets) {\n-\t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n-\t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n-\t\t\t\t\t  .add(store);\n-\t\t\t}\n-\t\t}\n-\n-\t\tfor (Map.Entry<ImportColumn, List<ColumnStore<?>>> entries : stores.entrySet()) {\n-\t\t\tnewStores[entries.getKey().getPosition()] = entries.getValue().get(0).merge(entries.getValue());\n-\t\t}\n-\n-\t\tfinal int[] ends = new int[buckets.length];\n-\n-\t\tfor (int index = 0; index < buckets.length; index++) {\n-\t\t\tfinal Bucket bucket = buckets[index];\n-\t\t\tends[index] = bucket.getBucketSize();\n-\t\t}\n-\n-\n-\t\treturn Bucket.create(buckets[0].getBucket(), buckets[0].getImp(), newStores, includedEntities.toArray(new int[0]), ends);\n-\t}\n-}\n+ private static Object[][] transpose(List<Object[]> rows) {\n+  final Object[][] transposed = new Object[rows.get(0).length][rows.size()];\n+  for(int x = 0;x<rows.size();x++) {\n+   for(int y = 0;y<rows.get(x).length;y++) {\n+    transposed[y][ x] = rows.get(x)[y];\n+   }\n+  }\n+  return transposed;\n+ }\n+\n+ public Bucket create(Import imp, List<Object[]> rows) {\n+  // TODO: 01.10.2020 FK, this is obviously not optimal, data should be collected by row already\n+  final Object[][] byColumns = transpose(rows);\n+  ImportColumn[] columns = imp.getColumns();\n+  ColumnStore[] stores = new ColumnStore[columns.length];\n+  for(int colIndex = 0;colIndex<columns.length;colIndex++) {\n+   ImportColumn column = columns[colIndex];\n+   stores[colIndex] = column.getType().createStore(column, byColumns[colIndex]);\n+  }\n+  return Bucket.create(0, imp, stores, new int[] {0}, new int[] {rows.get(0).length});\n+ }\n+\n+ public Bucket readSingleValue(NamespaceCollection namespaceCollection, Dataset dataset, int bucketNumber, Import imp, InputStream inputStream) throws IOException {\n+  return dataset.injectInto(namespaceCollection.injectInto(Jackson.BINARY_MAPPER)).readValue(inputStream, Bucket.class);\n+ }\n+\n+ public Bucket adaptValuesFrom(int bucketNumber, Import outImport, Bucket value, PreprocessedHeader header) {\n+  //TODO what does this do?\n+  return value;\n+ }\n+\n+ public Bucket combine(IntList includedEntities, Bucket[] buckets) {\n+  ColumnStore<?>[] newStores = new ColumnStore[buckets[0].getStores().length];\n+\n+  // the order is important!\n+  Map<ImportColumn, List<ColumnStore<?>>> stores = new HashMap<>();\n+  for(Bucket bucket :buckets) {\n+   for(ColumnStore<?> store :bucket.getStores()) {\n+    stores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length)).add(store);\n+   }\n+  }\n+\n+  for(Map.Entry<ImportColumn, List<ColumnStore<?>>> entries :stores.entrySet()) {\n+   newStores[entries.getKey().getPosition()] = entries.getValue().get(0).merge(entries.getValue());\n+  }\n+\n+  final int[] ends = new int[buckets.length];\n+  for(int index = 0;index<buckets.length;index++) {\n+   final Bucket bucket = buckets[index];\n+   ends[index] = bucket.getBucketSize();\n+  }\n+  return Bucket.create(\n+   buckets[0].getBucket(),\n+   buckets[0].getImp(),\n+   newStores,\n+   includedEntities.toArray(new int[0]),\n+   ends\n+  );\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 68
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/616/BlockFactory.java\nindex 5f9219cace0..8784b80a96f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/616/BlockFactory.java\n@@ -67,7 +67,8 @@ public class BlockFactory {\n \t\tfor (Bucket bucket : buckets) {\n \t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n \t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n-\t\t\t\t\t  .add(store);\n+\t\t\t\t\t.add(store);\n+\n \t\t\t}\n \t\t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "71",
                    "column": "1",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/616/BlockFactory.java\nindex 5f9219cace0..b076e74c46c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/616/BlockFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/616/BlockFactory.java\n@@ -66,10 +66,9 @@ public class BlockFactory {\n \n \t\tfor (Bucket bucket : buckets) {\n \t\t\tfor (ColumnStore<?> store : bucket.getStores()) {\n-\t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length))\n-\t\t\t\t\t  .add(store);\n+\t\t\t\tstores.computeIfAbsent(store.getColumn(), ignored -> new ArrayList<>(buckets.length)).add(store);\n \t\t\t}\n-\t\t}\n+}\n \n \t\tfor (Map.Entry<ImportColumn, List<ColumnStore<?>>> entries : stores.entrySet()) {\n \t\t\tnewStores[entries.getKey().getPosition()] = entries.getValue().get(0).merge(entries.getValue());\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2884",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2884/InconsistencyReport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2884/InconsistencyReport.java\nindex fbb7f1d6d3d..f65075b16c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2884/InconsistencyReport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2884/InconsistencyReport.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.report;\n \n import org.neo4j.consistency.RecordType;\n@@ -27,52 +28,52 @@ public class InconsistencyReport implements InconsistencyLogger\n     private final InconsistencyLogger logger;\n     private final ConsistencySummaryStatistics summary;\n \n-    public InconsistencyReport( InconsistencyLogger logger, ConsistencySummaryStatistics summary )\n+    public InconsistencyReport(InconsistencyLogger logger, ConsistencySummaryStatistics summary)\n     {\n         this.logger = logger;\n         this.summary = summary;\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord record, String message, Object... args )\n+    public void error(RecordType recordType, AbstractBaseRecord record, String message, Object... args)\n     {\n-        logger.error( recordType, record, message, args );\n+        logger.error(recordType, record, message, args);\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object... args )\n+    public void error(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                      String message, Object... args)\n     {\n-        logger.error( recordType, oldRecord, newRecord, message, args );\n+        logger.error(recordType, oldRecord, newRecord, message, args);\n     }\n \n     @Override\n-    public void error( String message )\n+    public void error(String message)\n     {\n-        logger.error( message );\n+        logger.error(message);\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord record, String message, Object... args )\n+    public void warning(RecordType recordType, AbstractBaseRecord record, String message, Object... args)\n     {\n-        logger.warning( recordType, record, message, args );\n+        logger.warning(recordType, record, message, args);\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object... args )\n+    public void warning(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                        String message, Object... args)\n     {\n-        logger.warning( recordType, oldRecord, newRecord, message, args );\n+        logger.warning(recordType, oldRecord, newRecord, message, args);\n     }\n \n     @Override\n-    public void warning( String message )\n+    public void warning(String message)\n     {\n-        logger.warning( message );\n+        logger.warning(message);\n     }\n \n-    public void updateSummary( RecordType type, int errors, int warnings )\n+    public void updateSummary(RecordType type, int errors, int warnings)\n     {\n-        summary.update( type, errors, warnings );\n+        summary.update(type, errors, warnings);\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2884/InconsistencyReport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2884/InconsistencyReport.java\nindex fbb7f1d6d3d..83b2a015c32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2884/InconsistencyReport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2884/InconsistencyReport.java\n@@ -42,7 +42,7 @@ public class InconsistencyReport implements InconsistencyLogger\n     @Override\n     public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n                        String message, Object... args )\n-    {\n+{\n         logger.error( recordType, oldRecord, newRecord, message, args );\n     }\n \n@@ -59,9 +59,8 @@ public class InconsistencyReport implements InconsistencyLogger\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object... args )\n-    {\n+    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object... args )\n+{\n         logger.warning( recordType, oldRecord, newRecord, message, args );\n     }\n \n@@ -75,4 +74,4 @@ public class InconsistencyReport implements InconsistencyLogger\n     {\n         summary.update( type, errors, warnings );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
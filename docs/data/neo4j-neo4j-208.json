{
    "project_name": "neo4j-neo4j",
    "error_id": "208",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "158",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "270",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/208/SchemaStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/208/SchemaStorage.java\nindex 82be9a627e1..8744dc32bf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/208/SchemaStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/208/SchemaStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.eclipse.collections.api.block.procedure.primitive.IntObjectProcedure;\n@@ -57,83 +58,83 @@ public class SchemaStorage implements SchemaRuleAccess, org.neo4j.kernel.impl.st\n     private final SchemaStore schemaStore;\n     private final TokenHolders tokenHolders;\n \n-    public SchemaStorage( SchemaStore schemaStore, TokenHolders tokenHolders )\n+    public SchemaStorage(SchemaStore schemaStore, TokenHolders tokenHolders)\n     {\n         this.schemaStore = schemaStore;\n         this.tokenHolders = tokenHolders;\n     }\n \n     @Override\n-    public long newRuleId( PageCursorTracer cursorTracer )\n+    public long newRuleId(PageCursorTracer cursorTracer)\n     {\n-        return schemaStore.nextId( cursorTracer );\n+        return schemaStore.nextId(cursorTracer);\n     }\n \n     @Override\n-    public Iterable<SchemaRule> getAll( PageCursorTracer cursorTracer )\n+    public Iterable<SchemaRule> getAll(PageCursorTracer cursorTracer)\n     {\n-        return streamAllSchemaRules( false, cursorTracer )::iterator;\n+        return streamAllSchemaRules(false, cursorTracer)::iterator;\n     }\n \n     @Override\n-    public SchemaRule loadSingleSchemaRule( long ruleId, PageCursorTracer cursorTracer ) throws MalformedSchemaRuleException\n+    public SchemaRule loadSingleSchemaRule(long ruleId, PageCursorTracer cursorTracer) throws MalformedSchemaRuleException\n     {\n         SchemaRecord record = schemaStore.newRecord();\n-        schemaStore.getRecord( ruleId, record, RecordLoad.NORMAL, cursorTracer );\n-        return readSchemaRule( record, cursorTracer );\n+        schemaStore.getRecord(ruleId, record, RecordLoad.NORMAL, cursorTracer);\n+        return readSchemaRule(record, cursorTracer);\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexesGetAll( PageCursorTracer cursorTracer )\n+    public Iterator<IndexDescriptor> indexesGetAll(PageCursorTracer cursorTracer)\n     {\n-        return indexRules( streamAllSchemaRules( false, cursorTracer ) ).iterator();\n+        return indexRules(streamAllSchemaRules(false, cursorTracer)).iterator();\n     }\n \n     @Override\n-    public Iterator<IndexDescriptor> indexesGetAllIgnoreMalformed( PageCursorTracer cursorTracer )\n+    public Iterator<IndexDescriptor> indexesGetAllIgnoreMalformed(PageCursorTracer cursorTracer)\n     {\n-        return indexRules( streamAllSchemaRules( true, cursorTracer ) ).iterator();\n+        return indexRules(streamAllSchemaRules(true, cursorTracer)).iterator();\n     }\n \n     @Override\n-    public IndexDescriptor[] indexGetForSchema( SchemaDescriptorSupplier supplier, PageCursorTracer cursorTracer )\n+    public IndexDescriptor[] indexGetForSchema(SchemaDescriptorSupplier supplier, PageCursorTracer cursorTracer)\n     {\n         SchemaDescriptor schema = supplier.schema();\n-        return indexRules( streamAllSchemaRules( false, cursorTracer ) )\n-                .filter( rule -> rule.schema().equals( schema ) )\n-                .toArray( IndexDescriptor[]::new );\n+        return indexRules(streamAllSchemaRules(false, cursorTracer))\n+          .filter(rule -> rule.schema().equals(schema))\n+          .toArray(IndexDescriptor[]::new);\n     }\n \n     @Override\n-    public IndexDescriptor indexGetForName( String indexName, PageCursorTracer cursorTracer )\n+    public IndexDescriptor indexGetForName(String indexName, PageCursorTracer cursorTracer)\n     {\n-        return indexRules( streamAllSchemaRules( false, cursorTracer ) )\n-                .filter( idx -> idx.getName().equals( indexName ) )\n-                .findAny().orElse( null );\n+        return indexRules(streamAllSchemaRules(false, cursorTracer))\n+          .filter(idx -> idx.getName().equals(indexName))\n+          .findAny().orElse(null);\n     }\n \n     @Override\n-    public ConstraintDescriptor constraintsGetSingle( ConstraintDescriptor descriptor, PageCursorTracer cursorTracer )\n-            throws SchemaRuleNotFoundException, DuplicateSchemaRuleException\n+    public ConstraintDescriptor constraintsGetSingle(ConstraintDescriptor descriptor, PageCursorTracer cursorTracer)\n+      throws SchemaRuleNotFoundException, DuplicateSchemaRuleException\n     {\n-        ConstraintDescriptor[] rules = constraintRules( streamAllSchemaRules( false, cursorTracer ) )\n-                .filter( descriptor::equals )\n-                .toArray( ConstraintDescriptor[]::new );\n-        if ( rules.length == 0 )\n+        ConstraintDescriptor[] rules = constraintRules(streamAllSchemaRules(false, cursorTracer))\n+          .filter(descriptor::equals)\n+          .toArray(ConstraintDescriptor[]::new);\n+        if (rules.length == 0)\n         {\n-            throw new SchemaRuleNotFoundException( descriptor, tokenHolders );\n+            throw new SchemaRuleNotFoundException(descriptor, tokenHolders);\n         }\n-        if ( rules.length > 1 )\n+        if (rules.length > 1)\n         {\n-            throw new DuplicateSchemaRuleException( descriptor, tokenHolders );\n+            throw new DuplicateSchemaRuleException(descriptor, tokenHolders);\n         }\n         return rules[0];\n     }\n \n     @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetAllIgnoreMalformed( PageCursorTracer cursorTracer )\n+    public Iterator<ConstraintDescriptor> constraintsGetAllIgnoreMalformed(PageCursorTracer cursorTracer)\n     {\n-        return constraintRules( streamAllSchemaRules( true, cursorTracer ) ).iterator();\n+        return constraintRules(streamAllSchemaRules(true, cursorTracer)).iterator();\n     }\n \n     @Override\n@@ -142,144 +143,143 @@ public class SchemaStorage implements SchemaRuleAccess, org.neo4j.kernel.impl.st\n         return new PropertyBasedSchemaRecordChangeTranslator()\n         {\n             @Override\n-            protected IntObjectMap<Value> asMap( SchemaRule rule ) throws KernelException\n+            protected IntObjectMap<Value> asMap(SchemaRule rule) throws KernelException\n             {\n-                return SchemaStore.convertSchemaRuleToMap( rule, tokenHolders );\n+                return SchemaStore.convertSchemaRuleToMap(rule, tokenHolders);\n             }\n \n             @Override\n-            protected void setConstraintIndexOwnerProperty( long constraintId, IntObjectProcedure<Value> proc ) throws KernelException\n+            protected void setConstraintIndexOwnerProperty(long constraintId, IntObjectProcedure<Value> proc) throws KernelException\n             {\n-                int propertyId = SchemaStore.getOwningConstraintPropertyKeyId( tokenHolders );\n-                proc.value( propertyId, Values.longValue( constraintId ) );\n+                int propertyId = SchemaStore.getOwningConstraintPropertyKeyId(tokenHolders);\n+                proc.value(propertyId, Values.longValue(constraintId));\n             }\n         };\n     }\n \n     @Override\n-    public void writeSchemaRule( SchemaRule rule, PageCursorTracer cursorTracer, MemoryTracker memoryTracker ) throws KernelException\n+    public void writeSchemaRule(SchemaRule rule, PageCursorTracer cursorTracer, MemoryTracker memoryTracker) throws KernelException\n     {\n-        IntObjectMap<Value> protoProperties = SchemaStore.convertSchemaRuleToMap( rule, tokenHolders );\n+        IntObjectMap<Value> protoProperties = SchemaStore.convertSchemaRuleToMap(rule, tokenHolders);\n         PropertyStore propertyStore = schemaStore.propertyStore();\n         Collection<PropertyBlock> blocks = new ArrayList<>();\n-        protoProperties.forEachKeyValue( ( keyId, value ) ->\n+        protoProperties.forEachKeyValue((keyId, value) ->\n         {\n             PropertyBlock block = new PropertyBlock();\n-            propertyStore.encodeValue( block, keyId, value, cursorTracer, memoryTracker );\n-            blocks.add( block );\n-        } );\n+            propertyStore.encodeValue(block, keyId, value, cursorTracer, memoryTracker);\n+            blocks.add(block);\n+        });\n \n         assert !blocks.isEmpty() : \"Property blocks should have been produced for schema rule: \" + rule;\n \n         long nextPropId = Record.NO_NEXT_PROPERTY.longValue();\n-        PropertyRecord currRecord = newInitialisedPropertyRecord( propertyStore, rule, cursorTracer );\n+        PropertyRecord currRecord = newInitialisedPropertyRecord(propertyStore, rule, cursorTracer);\n \n-        for ( PropertyBlock block : blocks )\n+        for (PropertyBlock block : blocks)\n         {\n-            if ( !currRecord.hasSpaceFor( block ) )\n+            if (!currRecord.hasSpaceFor(block))\n             {\n-                PropertyRecord nextRecord = newInitialisedPropertyRecord( propertyStore, rule, cursorTracer );\n-                linkAndWritePropertyRecord( propertyStore, currRecord, nextRecord.getId(), nextPropId, cursorTracer );\n+                PropertyRecord nextRecord = newInitialisedPropertyRecord(propertyStore, rule, cursorTracer);\n+                linkAndWritePropertyRecord(propertyStore, currRecord, nextRecord.getId(), nextPropId, cursorTracer);\n                 nextPropId = currRecord.getId();\n                 currRecord = nextRecord;\n             }\n-            currRecord.addPropertyBlock( block );\n+            currRecord.addPropertyBlock(block);\n         }\n \n-        linkAndWritePropertyRecord( propertyStore, currRecord, Record.NO_PREVIOUS_PROPERTY.longValue(), nextPropId, cursorTracer );\n+        linkAndWritePropertyRecord(propertyStore, currRecord, Record.NO_PREVIOUS_PROPERTY.longValue(), nextPropId, cursorTracer);\n         nextPropId = currRecord.getId();\n \n         SchemaRecord schemaRecord = schemaStore.newRecord();\n-        schemaRecord.initialize( true, nextPropId );\n-        schemaRecord.setId( rule.getId() );\n+        schemaRecord.initialize(true, nextPropId);\n+        schemaRecord.setId(rule.getId());\n         schemaRecord.setCreated();\n-        schemaStore.updateRecord( schemaRecord, cursorTracer );\n-        schemaStore.setHighestPossibleIdInUse( rule.getId() );\n+        schemaStore.updateRecord(schemaRecord, cursorTracer);\n+        schemaStore.setHighestPossibleIdInUse(rule.getId());\n     }\n \n-    private PropertyRecord newInitialisedPropertyRecord( PropertyStore propertyStore, SchemaRule rule, PageCursorTracer cursorTracer )\n+    private PropertyRecord newInitialisedPropertyRecord(PropertyStore propertyStore, SchemaRule rule, PageCursorTracer cursorTracer)\n     {\n         PropertyRecord record = propertyStore.newRecord();\n-        record.setId( propertyStore.nextId( cursorTracer ) );\n-        record.setSchemaRuleId( rule.getId() );\n+        record.setId(propertyStore.nextId(cursorTracer));\n+        record.setSchemaRuleId(rule.getId());\n         record.setCreated();\n         return record;\n     }\n \n-    private void linkAndWritePropertyRecord( PropertyStore propertyStore, PropertyRecord record, long prevPropId, long nextProp, PageCursorTracer cursorTracer )\n+    private void linkAndWritePropertyRecord(PropertyStore propertyStore, PropertyRecord record, long prevPropId, long nextProp, PageCursorTracer cursorTracer)\n     {\n-        record.setInUse( true );\n-        record.setPrevProp( prevPropId );\n-        record.setNextProp( nextProp );\n-        propertyStore.updateRecord( record, cursorTracer );\n-        propertyStore.setHighestPossibleIdInUse( record.getId() );\n+        record.setInUse(true);\n+        record.setPrevProp(prevPropId);\n+        record.setNextProp(nextProp);\n+        propertyStore.updateRecord(record, cursorTracer);\n+        propertyStore.setHighestPossibleIdInUse(record.getId());\n     }\n \n     @Override\n-    public void deleteSchemaRule( SchemaRule rule, PageCursorTracer cursorTracer )\n+    public void deleteSchemaRule(SchemaRule rule, PageCursorTracer cursorTracer)\n     {\n         SchemaRecord record = schemaStore.newRecord();\n-        schemaStore.getRecord( rule.getId(), record, RecordLoad.CHECK, cursorTracer );\n-        if ( record.inUse() )\n+        schemaStore.getRecord(rule.getId(), record, RecordLoad.CHECK, cursorTracer);\n+        if (record.inUse())\n         {\n             long nextProp = record.getNextProp();\n-            record.setInUse( false );\n-            schemaStore.updateRecord( record, cursorTracer );\n+            record.setInUse(false);\n+            schemaStore.updateRecord(record, cursorTracer);\n             PropertyStore propertyStore = schemaStore.propertyStore();\n             PropertyRecord props = propertyStore.newRecord();\n-            while ( nextProp != Record.NO_NEXT_PROPERTY.longValue() && propertyStore.getRecord( nextProp, props, RecordLoad.NORMAL, cursorTracer ).inUse() )\n+            while (nextProp != Record.NO_NEXT_PROPERTY.longValue() && propertyStore.getRecord(nextProp, props, RecordLoad.NORMAL, cursorTracer).inUse())\n             {\n                 nextProp = props.getNextProp();\n-                props.setInUse( false );\n-                propertyStore.updateRecord( props, cursorTracer );\n+                props.setInUse(false);\n+                propertyStore.updateRecord(props, cursorTracer);\n             }\n         }\n     }\n \n     @VisibleForTesting\n-    Stream<SchemaRule> streamAllSchemaRules( boolean ignoreMalformed, PageCursorTracer cursorTracer )\n+    Stream<SchemaRule> streamAllSchemaRules(boolean ignoreMalformed, PageCursorTracer cursorTracer)\n     {\n         long startId = schemaStore.getNumberOfReservedLowIds();\n         long endId = schemaStore.getHighId();\n-        return LongStream.range( startId, endId )\n-                .mapToObj( id -> schemaStore.getRecord( id, schemaStore.newRecord(), RecordLoad.LENIENT_ALWAYS, cursorTracer ) )\n-                .filter( AbstractBaseRecord::inUse )\n-                .flatMap( record -> readSchemaRuleThrowingRuntimeException( record, ignoreMalformed, cursorTracer ) );\n+        return LongStream.range(startId, endId)\n+          .mapToObj(id -> schemaStore.getRecord(id, schemaStore.newRecord(), RecordLoad.LENIENT_ALWAYS, cursorTracer))\n+          .filter(AbstractBaseRecord::inUse)\n+          .flatMap(record -> readSchemaRuleThrowingRuntimeException(record, ignoreMalformed, cursorTracer));\n     }\n \n-    private Stream<IndexDescriptor> indexRules( Stream<SchemaRule> stream )\n+    private Stream<IndexDescriptor> indexRules(Stream<SchemaRule> stream)\n     {\n         return stream\n-                .filter( rule -> rule instanceof IndexDescriptor )\n-                .map( rule -> (IndexDescriptor) rule );\n+          .filter(rule -> rule instanceof IndexDescriptor)\n+          .map(rule -> (IndexDescriptor) rule);\n     }\n \n-    private Stream<ConstraintDescriptor> constraintRules( Stream<SchemaRule> stream )\n+    private Stream<ConstraintDescriptor> constraintRules(Stream<SchemaRule> stream)\n     {\n         return stream\n-                .filter( rule -> rule instanceof ConstraintDescriptor )\n-                .map( rule -> (ConstraintDescriptor) rule );\n+          .filter(rule -> rule instanceof ConstraintDescriptor)\n+          .map(rule -> (ConstraintDescriptor) rule);\n     }\n \n-    private Stream<SchemaRule> readSchemaRuleThrowingRuntimeException( SchemaRecord record, boolean ignoreMalformed, PageCursorTracer cursorTracer )\n+    private Stream<SchemaRule> readSchemaRuleThrowingRuntimeException(SchemaRecord record, boolean ignoreMalformed, PageCursorTracer cursorTracer)\n     {\n         try\n         {\n-            return Stream.of( readSchemaRule( record, cursorTracer ) );\n-        }\n-        catch ( MalformedSchemaRuleException e )\n+            return Stream.of(readSchemaRule(record, cursorTracer));\n+        } catch (MalformedSchemaRuleException e)\n         {\n             // In case we've raced with a record deletion, ignore malformed records that no longer appear to be in use.\n-            if ( !ignoreMalformed && schemaStore.isInUse( record.getId(), cursorTracer ) )\n+            if (!ignoreMalformed && schemaStore.isInUse(record.getId(), cursorTracer))\n             {\n-                throw new RuntimeException( e );\n+                throw new RuntimeException(e);\n             }\n         }\n         return Stream.empty();\n     }\n \n-    private SchemaRule readSchemaRule( SchemaRecord record, PageCursorTracer cursorTracer ) throws MalformedSchemaRuleException\n+    private SchemaRule readSchemaRule(SchemaRecord record, PageCursorTracer cursorTracer) throws MalformedSchemaRuleException\n     {\n-        return SchemaStore.readSchemaRule( record, schemaStore.propertyStore(), tokenHolders, cursorTracer );\n+        return SchemaStore.readSchemaRule(record, schemaStore.propertyStore(), tokenHolders, cursorTracer);\n     }\n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1655",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "88",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "256",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "158",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "300",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "317",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "154",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "382",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "397",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "407",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "444",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "448",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1655/NodeChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1655/NodeChecker.java\nindex 4ea6a0c212f..f9f9a63b263 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1655/NodeChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1655/NodeChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -84,7 +85,7 @@ class NodeChecker implements Checker\n     private final NeoStores neoStores;\n     private final List<IndexDescriptor> smallIndexes;\n \n-    NodeChecker( CheckerContext context, MutableIntObjectMap<MutableIntSet> mandatoryProperties )\n+    NodeChecker(CheckerContext context, MutableIntObjectMap<MutableIntSet> mandatoryProperties)\n     {\n         this.context = context;\n         this.reporter = context.reporter;\n@@ -93,128 +94,128 @@ class NodeChecker implements Checker\n         this.tokenHolders = context.tokenHolders;\n         this.neoStores = context.neoStores;\n         this.mandatoryProperties = mandatoryProperties;\n-        this.nodeProgress = context.roundInsensitiveProgressReporter( this, \"Nodes\", neoStores.getNodeStore().getHighId() );\n-        this.smallIndexes = context.indexSizes.smallIndexes( NODE );\n+        this.nodeProgress = context.roundInsensitiveProgressReporter(this, \"Nodes\", neoStores.getNodeStore().getHighId());\n+        this.smallIndexes = context.indexSizes.smallIndexes(NODE);\n     }\n \n     @Override\n-    public void check( LongRange nodeIdRange, boolean firstRange, boolean lastRange ) throws Exception\n+    public void check(LongRange nodeIdRange, boolean firstRange, boolean lastRange) throws Exception\n     {\n         ParallelExecution execution = context.execution;\n-        execution.run( getClass().getSimpleName() + \"-checkNodes\", execution.partition( nodeIdRange,\n-                ( from, to, last ) -> () -> check( from, to, lastRange && last ) ) );\n+        execution.run(getClass().getSimpleName() + \"-checkNodes\", execution.partition(nodeIdRange,\n+          (from, to, last) -> () -> check(from, to, lastRange && last)));\n \n-        if ( context.consistencyFlags.isCheckIndexes() )\n+        if (context.consistencyFlags.isCheckIndexes())\n         {\n-            execution.run( getClass().getSimpleName() + \"-checkIndexesVsNodes\", smallIndexes.stream()\n-                    .map( indexDescriptor -> (ParallelExecution.ThrowingRunnable) () -> checkIndexVsNodes( nodeIdRange, indexDescriptor, lastRange ) )\n-                    .toArray( ParallelExecution.ThrowingRunnable[]::new ) );\n+            execution.run(getClass().getSimpleName() + \"-checkIndexesVsNodes\", smallIndexes.stream()\n+              .map(indexDescriptor -> (ParallelExecution.ThrowingRunnable) () -> checkIndexVsNodes(nodeIdRange, indexDescriptor, lastRange))\n+              .toArray(ParallelExecution.ThrowingRunnable[]::new));\n         }\n     }\n \n     @Override\n-    public boolean shouldBeChecked( ConsistencyFlags flags )\n+    public boolean shouldBeChecked(ConsistencyFlags flags)\n     {\n         return flags.isCheckGraph() || flags.isCheckIndexes() && !smallIndexes.isEmpty();\n     }\n \n-    private void check( long fromNodeId, long toNodeId, boolean last ) throws Exception\n+    private void check(long fromNodeId, long toNodeId, boolean last) throws Exception\n     {\n         long usedNodes = 0;\n-        try ( RecordStorageReader reader = new RecordStorageReader( context.neoStores );\n-              var cursorTracer = context.pageCacheTracer.createPageCursorTracer( NODE_RANGE_CHECKER_TAG );\n-              RecordNodeCursor nodeCursor = reader.allocateNodeCursor( cursorTracer );\n-              RecordReader<DynamicRecord> labelReader = new RecordReader<>( context.neoStores.getNodeStore().getDynamicLabelStore(), cursorTracer );\n-              AllEntriesTokenScanReader labelIndexReader = context.labelScanStore.allEntityTokenRanges( fromNodeId, last ? Long.MAX_VALUE : toNodeId,\n-                      cursorTracer );\n-              SafePropertyChainReader property = new SafePropertyChainReader( context, cursorTracer );\n-              SchemaComplianceChecker schemaComplianceChecker = new SchemaComplianceChecker( context, mandatoryProperties, smallIndexes, cursorTracer,\n-                      context.memoryTracker ) )\n+        try (RecordStorageReader reader = new RecordStorageReader(context.neoStores);\n+             var cursorTracer = context.pageCacheTracer.createPageCursorTracer(NODE_RANGE_CHECKER_TAG);\n+             RecordNodeCursor nodeCursor = reader.allocateNodeCursor(cursorTracer);\n+             RecordReader<DynamicRecord> labelReader = new RecordReader<>(context.neoStores.getNodeStore().getDynamicLabelStore(), cursorTracer);\n+             AllEntriesTokenScanReader labelIndexReader = context.labelScanStore.allEntityTokenRanges(fromNodeId, last ? Long.MAX_VALUE : toNodeId,\n+               cursorTracer);\n+             SafePropertyChainReader property = new SafePropertyChainReader(context, cursorTracer);\n+             SchemaComplianceChecker schemaComplianceChecker = new SchemaComplianceChecker(context, mandatoryProperties, smallIndexes, cursorTracer,\n+               context.memoryTracker))\n         {\n             ProgressListener localProgress = nodeProgress.threadLocalReporter();\n             MutableIntObjectMap<Value> propertyValues = new IntObjectHashMap<>();\n             CacheAccess.Client client = context.cacheAccess.client();\n-            long[] nextRelCacheFields = new long[]{-1, -1, 1/*inUse*/, 0, 0, 1/*note that this needs to be checked*/, 0};\n+            long[] nextRelCacheFields = new long[] {-1, -1, 1/*inUse*/, 0, 0, 1/*note that this needs to be checked*/, 0};\n             Iterator<EntityTokenRange> nodeLabelRangeIterator = labelIndexReader.iterator();\n-            EntityTokenIndexCheckState labelIndexState = new EntityTokenIndexCheckState( null, fromNodeId - 1 );\n-            for ( long nodeId = fromNodeId; nodeId < toNodeId && !context.isCancelled(); nodeId++ )\n+            EntityTokenIndexCheckState labelIndexState = new EntityTokenIndexCheckState(null, fromNodeId - 1);\n+            for (long nodeId = fromNodeId; nodeId < toNodeId && !context.isCancelled(); nodeId++)\n             {\n-                localProgress.add( 1 );\n-                nodeCursor.single( nodeId );\n+                localProgress.add(1);\n+                nodeCursor.single(nodeId);\n                 nodeCursor.setForceLoad();\n-                if ( !nodeCursor.next() )\n+                if (!nodeCursor.next())\n                 {\n                     continue;\n                 }\n \n                 // Cache nextRel\n                 long nextRel = nodeCursor.getNextRel();\n-                if ( nextRel < NULL_REFERENCE.longValue() )\n+                if (nextRel < NULL_REFERENCE.longValue())\n                 {\n-                    reporter.forNode( nodeCursor ).relationshipNotInUse( new RelationshipRecord( nextRel ) );\n+                    reporter.forNode(nodeCursor).relationshipNotInUse(new RelationshipRecord(nextRel));\n                     nextRel = NULL_REFERENCE.longValue();\n                 }\n \n                 nextRelCacheFields[CacheSlots.NodeLink.SLOT_RELATIONSHIP_ID] = nextRel;\n-                nextRelCacheFields[CacheSlots.NodeLink.SLOT_IS_DENSE] = longOf( nodeCursor.isDense() );\n+                nextRelCacheFields[CacheSlots.NodeLink.SLOT_IS_DENSE] = longOf(nodeCursor.isDense());\n                 usedNodes++;\n \n                 // Labels\n-                long[] unverifiedLabels = RecordLoading.safeGetNodeLabels( context, nodeCursor.getId(), nodeCursor.getLabelField(), labelReader, cursorTracer );\n-                long[] labels = checkNodeLabels( nodeCursor, unverifiedLabels, cursorTracer );\n+                long[] unverifiedLabels = RecordLoading.safeGetNodeLabels(context, nodeCursor.getId(), nodeCursor.getLabelField(), labelReader, cursorTracer);\n+                long[] labels = checkNodeLabels(nodeCursor, unverifiedLabels, cursorTracer);\n                 // Cache the label field, so that if it contains inlined labels then it's free.\n                 // Otherwise cache the dynamic labels in another data structure and point into it.\n                 long labelField = nodeCursor.getLabelField();\n-                boolean hasInlinedLabels = !NodeLabelsField.fieldPointsToDynamicRecordOfLabels( nodeCursor.getLabelField() );\n-                if ( labels == null )\n+                boolean hasInlinedLabels = !NodeLabelsField.fieldPointsToDynamicRecordOfLabels(nodeCursor.getLabelField());\n+                if (labels == null)\n                 {\n                     // There was some inconsistency in the label field or dynamic label chain. Let's continue but w/o labels for this node\n                     hasInlinedLabels = true;\n                     labelField = NO_LABELS_FIELD.longValue();\n                 }\n                 boolean hasSingleLabel = labels != null && labels.length == 1;\n-                nextRelCacheFields[CacheSlots.NodeLink.SLOT_HAS_INLINED_LABELS] = longOf( hasInlinedLabels );\n+                nextRelCacheFields[CacheSlots.NodeLink.SLOT_HAS_INLINED_LABELS] = longOf(hasInlinedLabels);\n                 nextRelCacheFields[CacheSlots.NodeLink.SLOT_LABELS] = hasSingleLabel\n-                        // If this node has only a single label then put it straight in there w/o encoding, along w/ SLOT_HAS_SINGLE_LABEL=1\n-                        // this makes RelationshipChecker \"parse\" the cached node labels more efficiently for single-label nodes\n-                        ? labels[0]\n-                        // Otherwise put the encoded label field if inlined, otherwise a ref to the cached dynamic labels\n-                        : hasInlinedLabels ? labelField : observedCounts.cacheDynamicNodeLabels( labels );\n-                nextRelCacheFields[CacheSlots.NodeLink.SLOT_HAS_SINGLE_LABEL] = longOf( hasSingleLabel );\n+                  // If this node has only a single label then put it straight in there w/o encoding, along w/ SLOT_HAS_SINGLE_LABEL=1\n+                  // this makes RelationshipChecker \"parse\" the cached node labels more efficiently for single-label nodes\n+                  ? labels[0]\n+                  // Otherwise put the encoded label field if inlined, otherwise a ref to the cached dynamic labels\n+                  : hasInlinedLabels ? labelField : observedCounts.cacheDynamicNodeLabels(labels);\n+                nextRelCacheFields[CacheSlots.NodeLink.SLOT_HAS_SINGLE_LABEL] = longOf(hasSingleLabel);\n \n                 // Properties\n-                lightClear( propertyValues );\n-                boolean propertyChainIsOk = property.read( propertyValues, nodeCursor, reporter::forNode, cursorTracer );\n+                lightClear(propertyValues);\n+                boolean propertyChainIsOk = property.read(propertyValues, nodeCursor, reporter::forNode, cursorTracer);\n \n                 // Label index\n-                checkNodeVsLabelIndex( nodeCursor, nodeLabelRangeIterator, labelIndexState, nodeId, labels, fromNodeId, cursorTracer );\n-                client.putToCache( nodeId, nextRelCacheFields );\n+                checkNodeVsLabelIndex(nodeCursor, nodeLabelRangeIterator, labelIndexState, nodeId, labels, fromNodeId, cursorTracer);\n+                client.putToCache(nodeId, nextRelCacheFields);\n \n                 // Mandatory properties and (some) indexing\n-                if ( labels != null && propertyChainIsOk )\n+                if (labels != null && propertyChainIsOk)\n                 {\n-                    schemaComplianceChecker.checkContainsMandatoryProperties( nodeCursor, labels, propertyValues, reporter::forNode );\n+                    schemaComplianceChecker.checkContainsMandatoryProperties(nodeCursor, labels, propertyValues, reporter::forNode);\n                     // Here only the very small indexes (or indexes that we can't read the values from, like fulltext indexes)\n                     // gets checked this way, larger indexes will be checked in IndexChecker\n-                    if ( context.consistencyFlags.isCheckIndexes() )\n+                    if (context.consistencyFlags.isCheckIndexes())\n                     {\n-                        schemaComplianceChecker.checkCorrectlyIndexed( nodeCursor, labels, propertyValues, reporter::forNode );\n+                        schemaComplianceChecker.checkCorrectlyIndexed(nodeCursor, labels, propertyValues, reporter::forNode);\n                     }\n                 }\n                 // Large indexes are checked elsewhere, more efficiently than per-entity\n             }\n-            if ( !context.isCancelled() )\n+            if (!context.isCancelled())\n             {\n-                reportRemainingLabelIndexEntries( nodeLabelRangeIterator, labelIndexState, last ? Long.MAX_VALUE : toNodeId, cursorTracer );\n+                reportRemainingLabelIndexEntries(nodeLabelRangeIterator, labelIndexState, last ? Long.MAX_VALUE : toNodeId, cursorTracer);\n             }\n             localProgress.done();\n         }\n-        observedCounts.incrementNodeLabel( ANY_LABEL, usedNodes );\n+        observedCounts.incrementNodeLabel(ANY_LABEL, usedNodes);\n     }\n \n-    private long[] checkNodeLabels( RecordNodeCursor nodeCursor, long[] labels, PageCursorTracer cursorTracer )\n+    private long[] checkNodeLabels(RecordNodeCursor nodeCursor, long[] labels, PageCursorTracer cursorTracer)\n     {\n-        if ( labels == null )\n+        if (labels == null)\n         {\n             // Because there was something wrong with loading them\n             return null;\n@@ -223,129 +224,125 @@ class NodeChecker implements Checker\n         boolean allGood = true;\n         boolean valid = true;\n         int prevLabel = -1;\n-        for ( int i = 0; i < labels.length; i++ )\n+        for (int i = 0; i < labels.length; i++)\n         {\n             long longLabel = labels[i];\n-            if ( longLabel > Integer.MAX_VALUE )\n+            if (longLabel > Integer.MAX_VALUE)\n             {\n-                reporter.forNode( recordLoader.node( nodeCursor.getId(), cursorTracer ) ).illegalLabel();\n+                reporter.forNode(recordLoader.node(nodeCursor.getId(), cursorTracer)).illegalLabel();\n                 allGood = false;\n                 valid = false;\n                 break;\n-            }\n-            else\n+            } else\n             {\n-                int label = toIntExact( longLabel );\n-                checkValidToken( nodeCursor, label, tokenHolders.labelTokens(), neoStores.getLabelTokenStore(),\n-                        ( node, token ) -> reporter.forNode( recordLoader.node( node.getId(), cursorTracer ) ).illegalLabel(),\n-                        ( node, token ) -> reporter.forNode( recordLoader.node( node.getId(), cursorTracer ) ).labelNotInUse( token ), cursorTracer );\n-                if ( prevLabel != label )\n+                int label = toIntExact(longLabel);\n+                checkValidToken(nodeCursor, label, tokenHolders.labelTokens(), neoStores.getLabelTokenStore(),\n+                  (node, token) -> reporter.forNode(recordLoader.node(node.getId(), cursorTracer)).illegalLabel(),\n+                  (node, token) -> reporter.forNode(recordLoader.node(node.getId(), cursorTracer)).labelNotInUse(token), cursorTracer);\n+                if (prevLabel != label)\n                 {\n-                    observedCounts.incrementNodeLabel( label, 1 );\n+                    observedCounts.incrementNodeLabel(label, 1);\n                     prevLabel = label;\n                 }\n             }\n \n-            if ( i > 0 )\n+            if (i > 0)\n             {\n-                if ( labels[i] == labels[i - 1] )\n+                if (labels[i] == labels[i - 1])\n                 {\n-                    reporter.forNode( nodeCursor ).labelDuplicate( labels[i] );\n+                    reporter.forNode(nodeCursor).labelDuplicate(labels[i]);\n                     allGood = false;\n                     break;\n-                }\n-                else if ( labels[i] < labels[i - 1] )\n+                } else if (labels[i] < labels[i - 1])\n                 {\n-                    reporter.forNode( nodeCursor ).labelsOutOfOrder( max( labels ), min( labels ) );\n+                    reporter.forNode(nodeCursor).labelsOutOfOrder(max(labels), min(labels));\n                     allGood = false;\n                     break;\n                 }\n             }\n         }\n \n-        if ( !valid )\n+        if (!valid)\n         {\n             return null;\n         }\n-        return allGood ? labels : sortAndDeduplicate( labels );\n+        return allGood ? labels : sortAndDeduplicate(labels);\n     }\n \n-    private void checkNodeVsLabelIndex( RecordNodeCursor nodeCursor, Iterator<EntityTokenRange> nodeLabelRangeIterator,\n-            EntityTokenIndexCheckState labelIndexState, long nodeId, long[] labels, long fromNodeId, PageCursorTracer cursorTracer )\n+    private void checkNodeVsLabelIndex(RecordNodeCursor nodeCursor, Iterator<EntityTokenRange> nodeLabelRangeIterator,\n+                                       EntityTokenIndexCheckState labelIndexState, long nodeId, long[] labels, long fromNodeId, PageCursorTracer cursorTracer)\n     {\n         // Detect node-label combinations that exist in the label index, but not in the store\n-        while ( labelIndexState.needToMoveRangeForwardToReachEntity( nodeId ) && !context.isCancelled() )\n+        while (labelIndexState.needToMoveRangeForwardToReachEntity(nodeId) && !context.isCancelled())\n         {\n-            if ( nodeLabelRangeIterator.hasNext() )\n+            if (nodeLabelRangeIterator.hasNext())\n             {\n-                if ( labelIndexState.currentRange != null )\n+                if (labelIndexState.currentRange != null)\n                 {\n-                    for ( long nodeIdMissingFromStore = labelIndexState.lastCheckedEntityId + 1;\n-                          nodeIdMissingFromStore < nodeId & labelIndexState.currentRange.covers( nodeIdMissingFromStore ); nodeIdMissingFromStore++ )\n+                    for (long nodeIdMissingFromStore = labelIndexState.lastCheckedEntityId + 1;\n+                         nodeIdMissingFromStore < nodeId & labelIndexState.currentRange.covers(nodeIdMissingFromStore); nodeIdMissingFromStore++)\n                     {\n-                        if ( labelIndexState.currentRange.tokens( nodeIdMissingFromStore ).length > 0 )\n+                        if (labelIndexState.currentRange.tokens(nodeIdMissingFromStore).length > 0)\n                         {\n-                            reporter.forNodeLabelScan( new TokenScanDocument( labelIndexState.currentRange ) ).nodeNotInUse(\n-                                    recordLoader.node( nodeIdMissingFromStore, cursorTracer ) );\n+                            reporter.forNodeLabelScan(new TokenScanDocument(labelIndexState.currentRange)).nodeNotInUse(\n+                              recordLoader.node(nodeIdMissingFromStore, cursorTracer));\n                         }\n                     }\n                 }\n                 labelIndexState.currentRange = nodeLabelRangeIterator.next();\n-                labelIndexState.lastCheckedEntityId = max( fromNodeId, labelIndexState.currentRange.entities()[0] ) - 1;\n-            }\n-            else\n+                labelIndexState.lastCheckedEntityId = max(fromNodeId, labelIndexState.currentRange.entities()[0]) - 1;\n+            } else\n             {\n                 break;\n             }\n         }\n \n-        if ( labelIndexState.currentRange != null && labelIndexState.currentRange.covers( nodeId ) )\n+        if (labelIndexState.currentRange != null && labelIndexState.currentRange.covers(nodeId))\n         {\n-            for ( long nodeIdMissingFromStore = labelIndexState.lastCheckedEntityId + 1; nodeIdMissingFromStore < nodeId; nodeIdMissingFromStore++ )\n+            for (long nodeIdMissingFromStore = labelIndexState.lastCheckedEntityId + 1; nodeIdMissingFromStore < nodeId; nodeIdMissingFromStore++)\n             {\n-                if ( labelIndexState.currentRange.tokens( nodeIdMissingFromStore ).length > 0 )\n+                if (labelIndexState.currentRange.tokens(nodeIdMissingFromStore).length > 0)\n                 {\n-                    reporter.forNodeLabelScan( new TokenScanDocument( labelIndexState.currentRange ) )\n-                            .nodeNotInUse( recordLoader.node( nodeIdMissingFromStore, cursorTracer ) );\n+                    reporter.forNodeLabelScan(new TokenScanDocument(labelIndexState.currentRange))\n+                      .nodeNotInUse(recordLoader.node(nodeIdMissingFromStore, cursorTracer));\n                 }\n             }\n-            long[] labelsInLabelIndex = labelIndexState.currentRange.tokens( nodeId );\n-            if ( labels != null )\n+            long[] labelsInLabelIndex = labelIndexState.currentRange.tokens(nodeId);\n+            if (labels != null)\n             {\n-                validateLabelIds( nodeCursor, labels, sortAndDeduplicate( labelsInLabelIndex ) /* TODO remove when fixed */, labelIndexState.currentRange,\n-                        cursorTracer );\n+                validateLabelIds(nodeCursor, labels, sortAndDeduplicate(labelsInLabelIndex) /* TODO remove when fixed */, labelIndexState.currentRange,\n+                  cursorTracer);\n             }\n             labelIndexState.lastCheckedEntityId = nodeId;\n-        }\n-        else if ( labels != null )\n+        } else if (labels != null)\n         {\n-            for ( long label : labels )\n+            for (long label : labels)\n             {\n-                reporter.forNodeLabelScan( new TokenScanDocument( new EntityTokenRange( nodeId / Long.SIZE, EntityTokenRange.NO_TOKENS, NODE ) ) )\n-                        .nodeLabelNotInIndex( recordLoader.node( nodeId, cursorTracer ), label );\n+                reporter.forNodeLabelScan(new TokenScanDocument(new EntityTokenRange(nodeId / Long.SIZE, EntityTokenRange.NO_TOKENS, NODE)))\n+                  .nodeLabelNotInIndex(recordLoader.node(nodeId, cursorTracer), label);\n             }\n         }\n     }\n \n-    private void reportRemainingLabelIndexEntries( Iterator<EntityTokenRange> nodeLabelRangeIterator, EntityTokenIndexCheckState labelIndexState, long toNodeId,\n-            PageCursorTracer cursorTracer )\n+    private void reportRemainingLabelIndexEntries(Iterator<EntityTokenRange> nodeLabelRangeIterator, EntityTokenIndexCheckState labelIndexState, long toNodeId,\n+                                                  PageCursorTracer cursorTracer)\n     {\n-        if ( labelIndexState.currentRange == null && nodeLabelRangeIterator.hasNext() )\n+        if (labelIndexState.currentRange == null && nodeLabelRangeIterator.hasNext())\n         {\n             // Seems that nobody touched this iterator before, i.e. no nodes in this whole range\n             labelIndexState.currentRange = nodeLabelRangeIterator.next();\n         }\n \n-        while ( labelIndexState.currentRange != null && !context.isCancelled() )\n+        while (labelIndexState.currentRange != null && !context.isCancelled())\n         {\n-            for ( long nodeIdMissingFromStore = labelIndexState.lastCheckedEntityId + 1;\n-                  nodeIdMissingFromStore < toNodeId && !labelIndexState.needToMoveRangeForwardToReachEntity( nodeIdMissingFromStore );\n-                  nodeIdMissingFromStore++ )\n+            for (long nodeIdMissingFromStore = labelIndexState.lastCheckedEntityId + 1;\n+                 nodeIdMissingFromStore < toNodeId && !labelIndexState.needToMoveRangeForwardToReachEntity(nodeIdMissingFromStore);\n+                 nodeIdMissingFromStore++)\n             {\n-                if ( labelIndexState.currentRange.covers( nodeIdMissingFromStore ) && labelIndexState.currentRange.tokens( nodeIdMissingFromStore ).length > 0 )\n+                if (labelIndexState.currentRange.covers(nodeIdMissingFromStore) && labelIndexState.currentRange.tokens(nodeIdMissingFromStore).length > 0)\n                 {\n-                    reporter.forNodeLabelScan( new TokenScanDocument( labelIndexState.currentRange ) )\n-                            .nodeNotInUse( recordLoader.node( nodeIdMissingFromStore, cursorTracer ) );\n+                    reporter.forNodeLabelScan(new TokenScanDocument(labelIndexState.currentRange))\n+                      .nodeNotInUse(recordLoader.node(nodeIdMissingFromStore, cursorTracer));\n                 }\n                 labelIndexState.lastCheckedEntityId = nodeIdMissingFromStore;\n             }\n@@ -353,45 +350,43 @@ class NodeChecker implements Checker\n         }\n     }\n \n-    private void validateLabelIds( NodeRecord node, long[] labelsInStore, long[] labelsInIndex, EntityTokenRange entityTokenRange,\n-            PageCursorTracer cursorTracer )\n+    private void validateLabelIds(NodeRecord node, long[] labelsInStore, long[] labelsInIndex, EntityTokenRange entityTokenRange,\n+                                  PageCursorTracer cursorTracer)\n     {\n-        compareTwoSortedLongArrays( PropertySchemaType.COMPLETE_ALL_TOKENS, labelsInStore, labelsInIndex,\n-                indexLabel -> reporter.forNodeLabelScan( new TokenScanDocument( entityTokenRange ) )\n-                        .nodeDoesNotHaveExpectedLabel( recordLoader.node( node.getId(), cursorTracer ), indexLabel ),\n-                storeLabel -> reporter.forNodeLabelScan( new TokenScanDocument( entityTokenRange ) )\n-                        .nodeLabelNotInIndex( recordLoader.node( node.getId(), cursorTracer ), storeLabel ) );\n+        compareTwoSortedLongArrays(PropertySchemaType.COMPLETE_ALL_TOKENS, labelsInStore, labelsInIndex,\n+          indexLabel -> reporter.forNodeLabelScan(new TokenScanDocument(entityTokenRange))\n+            .nodeDoesNotHaveExpectedLabel(recordLoader.node(node.getId(), cursorTracer), indexLabel),\n+          storeLabel -> reporter.forNodeLabelScan(new TokenScanDocument(entityTokenRange))\n+            .nodeLabelNotInIndex(recordLoader.node(node.getId(), cursorTracer), storeLabel));\n     }\n \n-    static void compareTwoSortedLongArrays( PropertySchemaType propertySchemaType, long[] a, long[] b,\n-            LongConsumer bHasSomethingThatAIsMissingReport, LongConsumer aHasSomethingThatBIsMissingReport )\n+    static void compareTwoSortedLongArrays(PropertySchemaType propertySchemaType, long[] a, long[] b,\n+                                           LongConsumer bHasSomethingThatAIsMissingReport, LongConsumer aHasSomethingThatBIsMissingReport)\n     {\n         // The node must have all of the labels specified by the index.\n         int bCursor = 0;\n         int aCursor = 0;\n         boolean anyFound = false;\n-        while ( aCursor < a.length && bCursor < b.length && a[aCursor] != -1 && b[bCursor] != -1 )\n+        while (aCursor < a.length && bCursor < b.length && a[aCursor] != -1 && b[bCursor] != -1)\n         {\n             long bValue = b[bCursor];\n             long aValue = a[aCursor];\n \n-            if ( bValue < aValue )\n+            if (bValue < aValue)\n             {   // node store has a label which isn't in label scan store\n-                if ( propertySchemaType == PropertySchemaType.COMPLETE_ALL_TOKENS )\n+                if (propertySchemaType == PropertySchemaType.COMPLETE_ALL_TOKENS)\n                 {\n-                    bHasSomethingThatAIsMissingReport.accept( bValue );\n+                    bHasSomethingThatAIsMissingReport.accept(bValue);\n                 }\n                 bCursor++;\n-            }\n-            else if ( bValue > aValue )\n+            } else if (bValue > aValue)\n             {   // label scan store has a label which isn't in node store\n-                if ( propertySchemaType == PropertySchemaType.COMPLETE_ALL_TOKENS )\n+                if (propertySchemaType == PropertySchemaType.COMPLETE_ALL_TOKENS)\n                 {\n-                    aHasSomethingThatBIsMissingReport.accept( aValue );\n+                    aHasSomethingThatBIsMissingReport.accept(aValue);\n                 }\n                 aCursor++;\n-            }\n-            else\n+            } else\n             {   // both match\n                 bCursor++;\n                 aCursor++;\n@@ -399,74 +394,71 @@ class NodeChecker implements Checker\n             }\n         }\n \n-        if ( propertySchemaType == PropertySchemaType.COMPLETE_ALL_TOKENS )\n+        if (propertySchemaType == PropertySchemaType.COMPLETE_ALL_TOKENS)\n         {\n-            while ( bCursor < b.length && b[bCursor] != -1 )\n+            while (bCursor < b.length && b[bCursor] != -1)\n             {\n-                bHasSomethingThatAIsMissingReport.accept( b[bCursor++] );\n+                bHasSomethingThatAIsMissingReport.accept(b[bCursor++]);\n             }\n-            while ( aCursor < a.length && a[aCursor] != -1 )\n+            while (aCursor < a.length && a[aCursor] != -1)\n             {\n-                aHasSomethingThatBIsMissingReport.accept( a[aCursor++] );\n+                aHasSomethingThatBIsMissingReport.accept(a[aCursor++]);\n             }\n-        }\n-        else if ( propertySchemaType == PropertySchemaType.PARTIAL_ANY_TOKEN )\n+        } else if (propertySchemaType == PropertySchemaType.PARTIAL_ANY_TOKEN)\n         {\n-            if ( !anyFound )\n+            if (!anyFound)\n             {\n-                while ( bCursor < b.length )\n+                while (bCursor < b.length)\n                 {\n-                    bHasSomethingThatAIsMissingReport.accept( b[bCursor++] );\n+                    bHasSomethingThatAIsMissingReport.accept(b[bCursor++]);\n                 }\n             }\n         }\n     }\n \n-    private void checkIndexVsNodes( LongRange range, IndexDescriptor descriptor, boolean lastRange ) throws Exception\n+    private void checkIndexVsNodes(LongRange range, IndexDescriptor descriptor, boolean lastRange) throws Exception\n     {\n         CacheAccess.Client client = context.cacheAccess.client();\n-        IndexAccessor accessor = context.indexAccessors.accessorFor( descriptor );\n+        IndexAccessor accessor = context.indexAccessors.accessorFor(descriptor);\n         RelationshipCounter.NodeLabelsLookup nodeLabelsLookup = observedCounts.nodeLabelsLookup();\n         SchemaDescriptor schema = descriptor.schema();\n         PropertySchemaType propertySchemaType = schema.propertySchemaType();\n-        long[] indexEntityTokenIds = toLongArray( schema.getEntityTokenIds() );\n-        indexEntityTokenIds = sortAndDeduplicate( indexEntityTokenIds );\n-        try ( var cursorTracer = context.pageCacheTracer.createPageCursorTracer( NODE_INDEXES_CHECKER_TAG );\n-              var allEntriesReader = accessor.newAllEntriesReader( range.from(), lastRange ? Long.MAX_VALUE : range.to(), cursorTracer ) )\n+        long[] indexEntityTokenIds = toLongArray(schema.getEntityTokenIds());\n+        indexEntityTokenIds = sortAndDeduplicate(indexEntityTokenIds);\n+        try (var cursorTracer = context.pageCacheTracer.createPageCursorTracer(NODE_INDEXES_CHECKER_TAG);\n+             var allEntriesReader = accessor.newAllEntriesReader(range.from(), lastRange ? Long.MAX_VALUE : range.to(), cursorTracer))\n         {\n-            for ( long entityId : allEntriesReader )\n+            for (long entityId : allEntriesReader)\n             {\n                 try\n                 {\n-                    boolean entityExists = client.getBooleanFromCache( entityId, CacheSlots.NodeLink.SLOT_IN_USE );\n-                    if ( !entityExists )\n+                    boolean entityExists = client.getBooleanFromCache(entityId, CacheSlots.NodeLink.SLOT_IN_USE);\n+                    if (!entityExists)\n                     {\n-                        reporter.forIndexEntry( new IndexEntry( descriptor, context.tokenNameLookup, entityId ) )\n-                                .nodeNotInUse( recordLoader.node( entityId, cursorTracer ) );\n-                    }\n-                    else\n+                        reporter.forIndexEntry(new IndexEntry(descriptor, context.tokenNameLookup, entityId))\n+                          .nodeNotInUse(recordLoader.node(entityId, cursorTracer));\n+                    } else\n                     {\n-                        long[] entityTokenIds = nodeLabelsLookup.nodeLabels( entityId );\n-                        compareTwoSortedLongArrays( propertySchemaType, entityTokenIds, indexEntityTokenIds,\n-                                indexLabel -> reporter.forIndexEntry( new IndexEntry( descriptor, context.tokenNameLookup, entityId ) )\n-                                        .nodeDoesNotHaveExpectedLabel( recordLoader.node( entityId, cursorTracer ), indexLabel ),\n-                                storeLabel -> {/*here we're only interested in what the the index has that the store doesn't have*/} );\n+                        long[] entityTokenIds = nodeLabelsLookup.nodeLabels(entityId);\n+                        compareTwoSortedLongArrays(propertySchemaType, entityTokenIds, indexEntityTokenIds,\n+                          indexLabel -> reporter.forIndexEntry(new IndexEntry(descriptor, context.tokenNameLookup, entityId))\n+                            .nodeDoesNotHaveExpectedLabel(recordLoader.node(entityId, cursorTracer), indexLabel),\n+                          storeLabel -> {/*here we're only interested in what the the index has that the store doesn't have*/});\n                     }\n-                }\n-                catch ( ArrayIndexOutOfBoundsException e )\n+                } catch (ArrayIndexOutOfBoundsException e)\n                 {\n                     // OK so apparently the index has a node way outside node highId\n-                    reporter.forIndexEntry( new IndexEntry( descriptor, context.tokenNameLookup, entityId ) )\n-                            .nodeNotInUse( recordLoader.node( entityId, cursorTracer ) );\n+                    reporter.forIndexEntry(new IndexEntry(descriptor, context.tokenNameLookup, entityId))\n+                      .nodeNotInUse(recordLoader.node(entityId, cursorTracer));\n                 }\n             }\n         }\n     }\n \n-    private static long[] toLongArray( int[] intArray )\n+    private static long[] toLongArray(int[] intArray)\n     {\n         long[] result = new long[intArray.length];\n-        for ( int i = 0; i < intArray.length; i++ )\n+        for (int i = 0; i < intArray.length; i++)\n         {\n             result[i] = intArray[i];\n         }\n@@ -476,15 +468,15 @@ class NodeChecker implements Checker\n     @Override\n     public String toString()\n     {\n-        return String.format( \"%s[highId:%d,indexesToCheck:%d]\", getClass().getSimpleName(), neoStores.getNodeStore().getHighId(), smallIndexes.size() );\n+        return String.format(\"%s[highId:%d,indexesToCheck:%d]\", getClass().getSimpleName(), neoStores.getNodeStore().getHighId(), smallIndexes.size());\n     }\n \n-    public static long[] sortAndDeduplicate( long[] labels )\n+    public static long[] sortAndDeduplicate(long[] labels)\n     {\n-        if ( ArrayUtils.isNotEmpty( labels ) )\n+        if (ArrayUtils.isNotEmpty(labels))\n         {\n-            sort( labels );\n-            return PrimitiveLongCollections.deduplicate( labels );\n+            sort(labels);\n+            return PrimitiveLongCollections.deduplicate(labels);\n         }\n         return labels;\n     }\n",
            "diff_size": 169
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
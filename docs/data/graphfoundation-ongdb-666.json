{
    "project_name": "graphfoundation-ongdb",
    "error_id": "666",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/666/DynamicRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/666/DynamicRecordFormat.java\nindex e8705b12409..c59d7d0ee26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/666/DynamicRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/666/DynamicRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -31,138 +32,136 @@ import static org.neo4j.kernel.impl.store.record.DynamicRecord.NO_DATA;\n \n public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRecord>\n {\n-    // (in_use+next high)(1 byte)+nr_of_bytes(3 bytes)+next_block(int)\n-    public static final int RECORD_HEADER_SIZE = 1 + 3 + 4; // = 8\n-\n-    public DynamicRecordFormat()\n+  // (in_use+next high)(1 byte)+nr_of_bytes(3 bytes)+next_block(int)\n+  public static final int RECORD_HEADER_SIZE = 1 + 3 + 4; // = 8\n+\n+  public DynamicRecordFormat()\n+  {\n+    super(INT_STORE_HEADER_READER, RECORD_HEADER_SIZE, 0x10/*the inUse bit is the lsb in the second nibble*/,\n+        StandardFormatSettings.DYNAMIC_MAXIMUM_ID_BITS);\n+  }\n+\n+  @Override\n+  public DynamicRecord newRecord()\n+  {\n+    return new DynamicRecord(-1);\n+  }\n+\n+  @Override\n+  public void read(DynamicRecord record, PageCursor cursor, RecordLoad mode, int recordSize)\n+  {\n+    /*\n+     * First 4b\n+     * [x   ,    ][    ,    ][    ,    ][    ,    ] 0: start record, 1: linked record\n+     * [   x,    ][    ,    ][    ,    ][    ,    ] inUse\n+     * [    ,xxxx][    ,    ][    ,    ][    ,    ] high next block bits\n+     * [    ,    ][xxxx,xxxx][xxxx,xxxx][xxxx,xxxx] nr of bytes in the data field in this record\n+     *\n+     */\n+    long firstInteger = cursor.getInt() & 0xFFFFFFFFL;\n+    boolean isStartRecord = (firstInteger & 0x80000000) == 0;\n+    boolean inUse = (firstInteger & 0x10000000) != 0;\n+    if (mode.shouldLoad(inUse))\n     {\n-        super( INT_STORE_HEADER_READER, RECORD_HEADER_SIZE, 0x10/*the inUse bit is the lsb in the second nibble*/,\n-                StandardFormatSettings.DYNAMIC_MAXIMUM_ID_BITS );\n-    }\n-\n-    @Override\n-    public DynamicRecord newRecord()\n+      int dataSize = recordSize - getRecordHeaderSize();\n+      int nrOfBytes = (int) (firstInteger & 0xFFFFFF);\n+      if (nrOfBytes > recordSize)\n+      {\n+        // We must have performed an inconsistent read,\n+        // because this many bytes cannot possibly fit in a record!\n+        cursor.setCursorException(payloadTooBigErrorMessage(record, recordSize, nrOfBytes));\n+        return;\n+      }\n+\n+      /*\n+       * Pointer to next block 4b (low bits of the pointer)\n+       */\n+      long nextBlock = cursor.getInt() & 0xFFFFFFFFL;\n+      long nextModifier = (firstInteger & 0xF000000L) << 8;\n+\n+      long longNextBlock = BaseRecordFormat.longFromIntAndMod(nextBlock, nextModifier);\n+      record.initialize(inUse, isStartRecord, longNextBlock, -1, nrOfBytes);\n+      if (longNextBlock != Record.NO_NEXT_BLOCK.intValue()\n+          && nrOfBytes < dataSize || nrOfBytes > dataSize)\n+      {\n+        cursor.setCursorException(illegalBlockSizeMessage(record, dataSize));\n+        return;\n+      }\n+\n+      readData(record, cursor);\n+    } else\n     {\n-        return new DynamicRecord( -1 );\n+      record.setInUse(inUse);\n     }\n-\n-    @Override\n-    public void read( DynamicRecord record, PageCursor cursor, RecordLoad mode, int recordSize )\n+  }\n+\n+  public static String payloadTooBigErrorMessage(DynamicRecord record, int recordSize, int nrOfBytes)\n+  {\n+    return format(\"DynamicRecord[%s] claims to have a payload of %s bytes, \" +\n+            \"which is larger than the record size of %s bytes.\",\n+        record.getId(), nrOfBytes, recordSize);\n+  }\n+\n+  private String illegalBlockSizeMessage(DynamicRecord record, int dataSize)\n+  {\n+    return format(\"Next block set[%d] current block illegal size[%d/%d]\",\n+        record.getNextBlock(), record.getLength(), dataSize);\n+  }\n+\n+  public static void readData(DynamicRecord record, PageCursor cursor)\n+  {\n+    int len = record.getLength();\n+    if (len == 0) // don't go though the trouble of acquiring the window if we would read nothing\n     {\n-        /*\n-         * First 4b\n-         * [x   ,    ][    ,    ][    ,    ][    ,    ] 0: start record, 1: linked record\n-         * [   x,    ][    ,    ][    ,    ][    ,    ] inUse\n-         * [    ,xxxx][    ,    ][    ,    ][    ,    ] high next block bits\n-         * [    ,    ][xxxx,xxxx][xxxx,xxxx][xxxx,xxxx] nr of bytes in the data field in this record\n-         *\n-         */\n-        long firstInteger = cursor.getInt() & 0xFFFFFFFFL;\n-        boolean isStartRecord = (firstInteger & 0x80000000) == 0;\n-        boolean inUse = (firstInteger & 0x10000000) != 0;\n-        if ( mode.shouldLoad( inUse ) )\n-        {\n-            int dataSize = recordSize - getRecordHeaderSize();\n-            int nrOfBytes = (int) (firstInteger & 0xFFFFFF);\n-            if ( nrOfBytes > recordSize )\n-            {\n-                // We must have performed an inconsistent read,\n-                // because this many bytes cannot possibly fit in a record!\n-                cursor.setCursorException( payloadTooBigErrorMessage( record, recordSize, nrOfBytes ) );\n-                return;\n-            }\n-\n-            /*\n-             * Pointer to next block 4b (low bits of the pointer)\n-             */\n-            long nextBlock = cursor.getInt() & 0xFFFFFFFFL;\n-            long nextModifier = (firstInteger & 0xF000000L) << 8;\n-\n-            long longNextBlock = BaseRecordFormat.longFromIntAndMod( nextBlock, nextModifier );\n-            record.initialize( inUse, isStartRecord, longNextBlock, -1, nrOfBytes );\n-            if ( longNextBlock != Record.NO_NEXT_BLOCK.intValue()\n-                    && nrOfBytes < dataSize || nrOfBytes > dataSize )\n-            {\n-                cursor.setCursorException( illegalBlockSizeMessage( record, dataSize ) );\n-                return;\n-            }\n-\n-            readData( record, cursor );\n-        }\n-        else\n-        {\n-            record.setInUse( inUse );\n-        }\n+      record.setData(NO_DATA);\n+      return;\n     }\n \n-    public static String payloadTooBigErrorMessage( DynamicRecord record, int recordSize, int nrOfBytes )\n+    byte[] data = record.getData();\n+    if (data == null || data.length != len)\n     {\n-        return format( \"DynamicRecord[%s] claims to have a payload of %s bytes, \" +\n-                       \"which is larger than the record size of %s bytes.\",\n-                record.getId(), nrOfBytes, recordSize );\n+      data = new byte[len];\n     }\n-\n-    private String illegalBlockSizeMessage( DynamicRecord record, int dataSize )\n+    cursor.getBytes(data);\n+    record.setData(data);\n+  }\n+\n+  @Override\n+  public void write(DynamicRecord record, PageCursor cursor, int recordSize)\n+  {\n+    if (record.inUse())\n     {\n-        return format( \"Next block set[%d] current block illegal size[%d/%d]\",\n-                record.getNextBlock(), record.getLength(), dataSize );\n-    }\n-\n-    public static void readData( DynamicRecord record, PageCursor cursor )\n-    {\n-        int len = record.getLength();\n-        if ( len == 0 ) // don't go though the trouble of acquiring the window if we would read nothing\n-        {\n-            record.setData( NO_DATA );\n-            return;\n-        }\n-\n-        byte[] data = record.getData();\n-        if ( data == null || data.length != len )\n-        {\n-            data = new byte[len];\n-        }\n-        cursor.getBytes( data );\n-        record.setData( data );\n-    }\n-\n-    @Override\n-    public void write( DynamicRecord record, PageCursor cursor, int recordSize )\n+      long nextBlock = record.getNextBlock();\n+      int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0\n+          : (int) ((nextBlock & 0xF00000000L) >> 8);\n+      highByteInFirstInteger |= Record.IN_USE.byteValue() << 28;\n+      highByteInFirstInteger |= (record.isStartRecord() ? 0 : 1) << 31;\n+\n+      /*\n+       * First 4b\n+       * [x   ,    ][    ,    ][    ,    ][    ,    ] 0: start record, 1: linked record\n+       * [   x,    ][    ,    ][    ,    ][    ,    ] inUse\n+       * [    ,xxxx][    ,    ][    ,    ][    ,    ] high next block bits\n+       * [    ,    ][xxxx,xxxx][xxxx,xxxx][xxxx,xxxx] nr of bytes in the data field in this record\n+       *\n+       */\n+      int firstInteger = record.getLength();\n+      assert firstInteger < (1 << 24) - 1;\n+\n+      firstInteger |= highByteInFirstInteger;\n+\n+      cursor.putInt(firstInteger);\n+      cursor.putInt((int) nextBlock);\n+      cursor.putBytes(record.getData());\n+    } else\n     {\n-        if ( record.inUse() )\n-        {\n-            long nextBlock = record.getNextBlock();\n-            int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0\n-                    : (int) ((nextBlock & 0xF00000000L) >> 8);\n-            highByteInFirstInteger |= Record.IN_USE.byteValue() << 28;\n-            highByteInFirstInteger |= (record.isStartRecord() ? 0 : 1) << 31;\n-\n-            /*\n-             * First 4b\n-             * [x   ,    ][    ,    ][    ,    ][    ,    ] 0: start record, 1: linked record\n-             * [   x,    ][    ,    ][    ,    ][    ,    ] inUse\n-             * [    ,xxxx][    ,    ][    ,    ][    ,    ] high next block bits\n-             * [    ,    ][xxxx,xxxx][xxxx,xxxx][xxxx,xxxx] nr of bytes in the data field in this record\n-             *\n-             */\n-            int firstInteger = record.getLength();\n-            assert firstInteger < (1 << 24) - 1;\n-\n-            firstInteger |= highByteInFirstInteger;\n-\n-            cursor.putInt( firstInteger );\n-            cursor.putInt( (int) nextBlock );\n-            cursor.putBytes( record.getData() );\n-        }\n-        else\n-        {\n-            cursor.putByte( Record.NOT_IN_USE.byteValue() );\n-        }\n+      cursor.putByte(Record.NOT_IN_USE.byteValue());\n     }\n+  }\n \n-    @Override\n-    public long getNextRecordReference( DynamicRecord record )\n-    {\n-        return record.getNextBlock();\n-    }\n+  @Override\n+  public long getNextRecordReference(DynamicRecord record)\n+  {\n+    return record.getNextBlock();\n+  }\n }\n",
            "diff_size": 194
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "66",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "102",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/666/DynamicRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/666/DynamicRecordFormat.java\nindex e8705b12409..024b1e8f693 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/666/DynamicRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/666/DynamicRecordFormat.java\n@@ -63,8 +63,8 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n         if ( mode.shouldLoad( inUse ) )\n         {\n             int dataSize = recordSize - getRecordHeaderSize();\n-            int nrOfBytes = (int) (firstInteger & 0xFFFFFF);\n-            if ( nrOfBytes > recordSize )\n+            int nrOfBytes = ( int) ( firstInteger & 0xFFFFFF );\n+            if ( nrOfBytes> recordSize )\n             {\n                 // We must have performed an inconsistent read,\n                 // because this many bytes cannot possibly fit in a record!\n@@ -80,8 +80,7 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n \n             long longNextBlock = BaseRecordFormat.longFromIntAndMod( nextBlock, nextModifier );\n             record.initialize( inUse, isStartRecord, longNextBlock, -1, nrOfBytes );\n-            if ( longNextBlock != Record.NO_NEXT_BLOCK.intValue()\n-                    && nrOfBytes < dataSize || nrOfBytes > dataSize )\n+            if ( longNextBlock != Record.NO_NEXT_BLOCK.intValue()&& nrOfBytes < dataSize || nrOfBytes> dataSize )\n             {\n                 cursor.setCursorException( illegalBlockSizeMessage( record, dataSize ) );\n                 return;\n@@ -97,9 +96,7 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n \n     public static String payloadTooBigErrorMessage( DynamicRecord record, int recordSize, int nrOfBytes )\n     {\n-        return format( \"DynamicRecord[%s] claims to have a payload of %s bytes, \" +\n-                       \"which is larger than the record size of %s bytes.\",\n-                record.getId(), nrOfBytes, recordSize );\n+        return format( \"DynamicRecord[%s] claims to have a payload of %s bytes, \" + \"which is larger than the record size of %s bytes.\", record.getId(), nrOfBytes, recordSize );\n     }\n \n     private String illegalBlockSizeMessage( DynamicRecord record, int dataSize )\n@@ -132,9 +129,8 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n         if ( record.inUse() )\n         {\n             long nextBlock = record.getNextBlock();\n-            int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0\n-                    : (int) ((nextBlock & 0xF00000000L) >> 8);\n-            highByteInFirstInteger |= Record.IN_USE.byteValue() << 28;\n+            int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0 : ( int) ((nextBlock & 0xF00000000L) >> 8 );\n+highByteInFirstInteger |= Record.IN_USE.byteValue() << 28;\n             highByteInFirstInteger |= (record.isStartRecord() ? 0 : 1) << 31;\n \n             /*\n@@ -146,12 +142,12 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n              *\n              */\n             int firstInteger = record.getLength();\n-            assert firstInteger < (1 << 24) - 1;\n+            assert firstInteger < ( 1 << 24) - 1;\n \n             firstInteger |= highByteInFirstInteger;\n \n             cursor.putInt( firstInteger );\n-            cursor.putInt( (int) nextBlock );\n+            cursor.putInt( ( int) nextBlock );\n             cursor.putBytes( record.getData() );\n         }\n         else\n@@ -165,4 +161,4 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n     {\n         return record.getNextBlock();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "51",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "column": "54",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "column": "44",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "49",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "45",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "60",
                    "severity": "error",
                    "message": "'<<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "60",
                    "severity": "error",
                    "message": "'<<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "82",
                    "column": "66",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "82",
                    "column": "89",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "111",
                    "severity": "error",
                    "message": "'&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "126",
                    "severity": "error",
                    "message": "'>>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "64",
                    "severity": "error",
                    "message": "'<<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "64",
                    "severity": "error",
                    "message": "'<<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "72",
                    "severity": "error",
                    "message": "'<<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "72",
                    "severity": "error",
                    "message": "'<<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "144",
                    "column": "38",
                    "severity": "error",
                    "message": "'<<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "144",
                    "column": "38",
                    "severity": "error",
                    "message": "'<<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/666/DynamicRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/666/DynamicRecordFormat.java\nindex e8705b12409..f33b0600c2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/666/DynamicRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/666/DynamicRecordFormat.java\n@@ -25,25 +25,24 @@ import org.neo4j.kernel.impl.store.format.BaseRecordFormat;\n import org.neo4j.kernel.impl.store.record.DynamicRecord;\n import org.neo4j.kernel.impl.store.record.Record;\n import org.neo4j.kernel.impl.store.record.RecordLoad;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.kernel.impl.store.record.DynamicRecord.NO_DATA;\n \n public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRecord>\n {\n     // (in_use+next high)(1 byte)+nr_of_bytes(3 bytes)+next_block(int)\n-    public static final int RECORD_HEADER_SIZE = 1 + 3 + 4; // = 8\n+    public static final int RECORD_HEADER_SIZE = 1+ 3+ 4; // = 8\n \n     public DynamicRecordFormat()\n     {\n-        super( INT_STORE_HEADER_READER, RECORD_HEADER_SIZE, 0x10/*the inUse bit is the lsb in the second nibble*/,\n-                StandardFormatSettings.DYNAMIC_MAXIMUM_ID_BITS );\n+        super( INT_STORE_HEADER_READER, RECORD_HEADER_SIZE, 0x10/*the inUse bit is the lsb in the second nibble*/, StandardFormatSettings.DYNAMIC_MAXIMUM_ID_BITS );\n     }\n \n     @Override\n     public DynamicRecord newRecord()\n     {\n-        return new DynamicRecord( -1 );\n+        return new DynamicRecord( - 1 );\n     }\n \n     @Override\n@@ -57,13 +56,13 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n          * [    ,    ][xxxx,xxxx][xxxx,xxxx][xxxx,xxxx] nr of bytes in the data field in this record\n          *\n          */\n-        long firstInteger = cursor.getInt() & 0xFFFFFFFFL;\n-        boolean isStartRecord = (firstInteger & 0x80000000) == 0;\n-        boolean inUse = (firstInteger & 0x10000000) != 0;\n+        long firstInteger = cursor.getInt()& 0xFFFFFFFFL;\n+        boolean isStartRecord = ( firstInteger& 0x80000000) == 0;\n+        boolean inUse = ( firstInteger& 0x10000000) != 0;\n         if ( mode.shouldLoad( inUse ) )\n         {\n             int dataSize = recordSize - getRecordHeaderSize();\n-            int nrOfBytes = (int) (firstInteger & 0xFFFFFF);\n+            int nrOfBytes = (int) ( firstInteger& 0xFFFFFF);\n             if ( nrOfBytes > recordSize )\n             {\n                 // We must have performed an inconsistent read,\n@@ -75,13 +74,12 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n             /*\n              * Pointer to next block 4b (low bits of the pointer)\n              */\n-            long nextBlock = cursor.getInt() & 0xFFFFFFFFL;\n-            long nextModifier = (firstInteger & 0xF000000L) << 8;\n \n+            long nextBlock = cursor.getInt()& 0xFFFFFFFFL;\n+            long nextModifier = ( firstInteger& 0xF000000L)<<8;\n             long longNextBlock = BaseRecordFormat.longFromIntAndMod( nextBlock, nextModifier );\n-            record.initialize( inUse, isStartRecord, longNextBlock, -1, nrOfBytes );\n-            if ( longNextBlock != Record.NO_NEXT_BLOCK.intValue()\n-                    && nrOfBytes < dataSize || nrOfBytes > dataSize )\n+            record.initialize( inUse, isStartRecord, longNextBlock, - 1, nrOfBytes );\n+            if ( longNextBlock != Record.NO_NEXT_BLOCK.intValue()&& nrOfBytes < dataSize|| nrOfBytes > dataSize )\n             {\n                 cursor.setCursorException( illegalBlockSizeMessage( record, dataSize ) );\n                 return;\n@@ -97,15 +95,12 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n \n     public static String payloadTooBigErrorMessage( DynamicRecord record, int recordSize, int nrOfBytes )\n     {\n-        return format( \"DynamicRecord[%s] claims to have a payload of %s bytes, \" +\n-                       \"which is larger than the record size of %s bytes.\",\n-                record.getId(), nrOfBytes, recordSize );\n+        return format( \"DynamicRecord[%s] claims to have a payload of %s bytes, \" + \"which is larger than the record size of %s bytes.\", record.getId(), nrOfBytes, recordSize );\n     }\n \n     private String illegalBlockSizeMessage( DynamicRecord record, int dataSize )\n     {\n-        return format( \"Next block set[%d] current block illegal size[%d/%d]\",\n-                record.getNextBlock(), record.getLength(), dataSize );\n+        return format( \"Next block set[%d] current block illegal size[%d/%d]\", record.getNextBlock(), record.getLength(), dataSize );\n     }\n \n     public static void readData( DynamicRecord record, PageCursor cursor )\n@@ -118,10 +113,11 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n         }\n \n         byte[] data = record.getData();\n-        if ( data == null || data.length != len )\n+        if ( data == null|| data.length != len )\n         {\n             data = new byte[len];\n         }\n+\n         cursor.getBytes( data );\n         record.setData( data );\n     }\n@@ -132,10 +128,9 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n         if ( record.inUse() )\n         {\n             long nextBlock = record.getNextBlock();\n-            int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0\n-                    : (int) ((nextBlock & 0xF00000000L) >> 8);\n-            highByteInFirstInteger |= Record.IN_USE.byteValue() << 28;\n-            highByteInFirstInteger |= (record.isStartRecord() ? 0 : 1) << 31;\n+            int highByteInFirstInteger = nextBlock == Record.NO_NEXT_BLOCK.intValue() ? 0 : (int) (( nextBlock& 0xF00000000L)>> 8);\n+            highByteInFirstInteger |= Record.IN_USE.byteValue()<<28;\n+            highByteInFirstInteger |= ( record.isStartRecord() ? 0 : 1)<<31;\n \n             /*\n              * First 4b\n@@ -146,10 +141,8 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n              *\n              */\n             int firstInteger = record.getLength();\n-            assert firstInteger < (1 << 24) - 1;\n-\n+            assert firstInteger < ( 1<<24) - 1;\n             firstInteger |= highByteInFirstInteger;\n-\n             cursor.putInt( firstInteger );\n             cursor.putInt( (int) nextBlock );\n             cursor.putBytes( record.getData() );\n@@ -165,4 +158,4 @@ public class DynamicRecordFormat extends BaseOneByteHeaderRecordFormat<DynamicRe\n     {\n         return record.getNextBlock();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
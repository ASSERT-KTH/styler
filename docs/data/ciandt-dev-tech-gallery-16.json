{
    "project_name": "ciandt-dev-tech-gallery",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "111",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 156).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public void deleteUserSkill(String techId, User user) throws InternalServerErrorException, BadRequestException, NotFoundException, OAuthRequestException {\n\n    Skill skillEntity = getUserSkill(techId, user);\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/16/SkillServiceImpl.java\nindex dd869c6c627..73af8c10698 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/16/SkillServiceImpl.java\n@@ -32,13 +32,12 @@ import java.util.logging.Logger;\n  * Services for Skill Endpoint requests.\n  *\n  * @author Felipe Goncalves de Castro\n- *\n  */\n public class SkillServiceImpl implements SkillService {\n \n   /*\n-     * Constants --------------------------------------------\n-     */\n+   * Constants --------------------------------------------\n+   */\n   private static final Logger log = Logger.getLogger(SkillServiceImpl.class.getName());\n   private static final I18n i18n = I18n.getInstance();\n \n@@ -48,23 +47,27 @@ public class SkillServiceImpl implements SkillService {\n   private static SkillServiceImpl instance;\n   SkillDAO skillDao = SkillDAOImpl.getInstance();\n \n-  /** Technology service. */\n+  /**\n+   * Technology service.\n+   */\n   TechnologyService techService = TechnologyServiceImpl.getInstance();\n-  /** tech gallery user service. */\n+  /**\n+   * tech gallery user service.\n+   */\n   UserServiceTG userService = UserServiceTGImpl.getInstance();\n \n   /*\n    * Constructors --------------------------------------------\n    */\n-  private SkillServiceImpl() {}\n+  private SkillServiceImpl() {\n+  }\n \n   /**\n    * Singleton method for the service.\n    *\n+   * @return SkillServiceImpl instance.\n    * @author <a href=\"mailto:joaom@ciandt.com\"> Jo\u00e3o Felipe de Medeiros Moreira </a>\n    * @since 07/10/2015\n-   *\n-   * @return SkillServiceImpl instance.\n    */\n   public static SkillServiceImpl getInstance() {\n     if (instance == null) {\n@@ -108,7 +111,9 @@ public class SkillServiceImpl implements SkillService {\n   }\n \n   @Override\n-  public void deleteUserSkill(String techId, User user) throws InternalServerErrorException, BadRequestException, NotFoundException, OAuthRequestException {\n+  public void deleteUserSkill(String techId, User user)\n+      throws InternalServerErrorException, BadRequestException, NotFoundException,\n+      OAuthRequestException {\n \n     Skill skillEntity = getUserSkill(techId, user);\n \n@@ -122,11 +127,10 @@ public class SkillServiceImpl implements SkillService {\n    * Validate inputs of SkillResponse.\n    *\n    * @param skill inputs to be validate\n-   * @param user info about user from google\n-   *\n-   * @throws BadRequestException for the validations.\n+   * @param user  info about user from google\n+   * @throws BadRequestException          for the validations.\n    * @throws InternalServerErrorException in case something goes wrong\n-   * @throws NotFoundException in case the information are not founded\n+   * @throws NotFoundException            in case the information are not founded\n    */\n   private void validateInputs(Skill skill, User user)\n       throws BadRequestException, NotFoundException, InternalServerErrorException {\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/16/SkillServiceImpl.java\nindex dd869c6c627..c24bfd3ed0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/16/SkillServiceImpl.java\n@@ -265,8 +265,7 @@ public class SkillServiceImpl implements SkillService {\n         }\n       }\n     } catch (NotFoundException e) {\n-      log.log(Level.INFO,\n-          \"User \" + userSkills.getEmail() + \" not found during import. Row ignored.\", e);\n+      log.log(Level.INFO, \"User \" + userSkills.getEmail() + \" not found during import. Row ignored.\", e);\n     }\n     return null;\n   }\n@@ -285,4 +284,4 @@ public class SkillServiceImpl implements SkillService {\n     }\n     return technology;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "'\"User \"' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/16/SkillServiceImpl.java\nindex dd869c6c627..918e21badc7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/16/SkillServiceImpl.java\n@@ -5,10 +5,8 @@ import com.google.api.server.spi.response.InternalServerErrorException;\n import com.google.api.server.spi.response.NotFoundException;\n import com.google.appengine.api.oauth.OAuthRequestException;\n import com.google.appengine.api.users.User;\n-\n import com.googlecode.objectify.Key;\n import com.googlecode.objectify.Ref;\n-\n import com.ciandt.techgallery.persistence.dao.SkillDAO;\n import com.ciandt.techgallery.persistence.dao.impl.SkillDAOImpl;\n import com.ciandt.techgallery.persistence.model.Skill;\n@@ -22,7 +20,6 @@ import com.ciandt.techgallery.service.impl.profile.UserProfileServiceImpl;\n import com.ciandt.techgallery.service.model.UserSkillTO;\n import com.ciandt.techgallery.utils.TechGalleryUtil;\n import com.ciandt.techgallery.utils.i18n.I18n;\n-\n import java.util.Date;\n import java.util.List;\n import java.util.logging.Level;\n@@ -34,28 +31,37 @@ import java.util.logging.Logger;\n  * @author Felipe Goncalves de Castro\n  *\n  */\n+\n+\n public class SkillServiceImpl implements SkillService {\n \n   /*\n      * Constants --------------------------------------------\n      */\n+\n   private static final Logger log = Logger.getLogger(SkillServiceImpl.class.getName());\n+\n   private static final I18n i18n = I18n.getInstance();\n \n   /*\n    * Attributes --------------------------------------------\n    */\n+\n   private static SkillServiceImpl instance;\n+\n   SkillDAO skillDao = SkillDAOImpl.getInstance();\n \n   /** Technology service. */\n+\n   TechnologyService techService = TechnologyServiceImpl.getInstance();\n   /** tech gallery user service. */\n+\n   UserServiceTG userService = UserServiceTGImpl.getInstance();\n \n   /*\n    * Constructors --------------------------------------------\n    */\n+\n   private SkillServiceImpl() {}\n \n   /**\n@@ -66,6 +72,7 @@ public class SkillServiceImpl implements SkillService {\n    *\n    * @return SkillServiceImpl instance.\n    */\n+\n   public static SkillServiceImpl getInstance() {\n     if (instance == null) {\n       instance = new SkillServiceImpl();\n@@ -76,14 +83,12 @@ public class SkillServiceImpl implements SkillService {\n   /*\n    * Methods --------------------------------------------\n    */\n+\n   @Override\n   public Skill addOrUpdateSkill(Skill skill, User user)\n-      throws InternalServerErrorException, BadRequestException, NotFoundException {\n-\n+    throws InternalServerErrorException, BadRequestException, NotFoundException {\n     log.info(\"Starting creating or updating skill\");\n-\n     validateInputs(skill, user);\n-\n     Technology technology = skill.getTechnology().get();\n     TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n     Skill skillEntity = skillDao.findByUserAndTechnology(techUser, technology);\n@@ -91,13 +96,12 @@ public class SkillServiceImpl implements SkillService {\n     // if there is a skillEntity, it is needed to inactivate it and create a new\n     // one\n     inactivateSkill(skillEntity);\n-\n     final Skill newSkill = addNewSkill(skill, techUser, technology);\n-\n     UserProfileServiceImpl.getInstance().handleSkillChanges(newSkill);\n     return newSkill;\n   }\n \n+\n   private void inactivateSkill(Skill skillEntity) {\n     if (skillEntity != null) {\n       log.info(\"Inactivating skill: \" + skillEntity.getId());\n@@ -108,14 +112,11 @@ public class SkillServiceImpl implements SkillService {\n   }\n \n   @Override\n-  public void deleteUserSkill(String techId, User user) throws InternalServerErrorException, BadRequestException, NotFoundException, OAuthRequestException {\n-\n+  public void deleteUserSkill(String techId, User user)\n+    throws InternalServerErrorException, BadRequestException, NotFoundException, OAuthRequestException {\n     Skill skillEntity = getUserSkill(techId, user);\n-\n     inactivateSkill(skillEntity);\n-\n     UserProfileServiceImpl.getInstance().handleSkillChanges(skillEntity);\n-\n   }\n \n   /**\n@@ -128,15 +129,14 @@ public class SkillServiceImpl implements SkillService {\n    * @throws InternalServerErrorException in case something goes wrong\n    * @throws NotFoundException in case the information are not founded\n    */\n-  private void validateInputs(Skill skill, User user)\n-      throws BadRequestException, NotFoundException, InternalServerErrorException {\n \n-    log.info(\"Validating inputs of skill\");\n \n+  private void validateInputs(Skill skill, User user)\n+    throws BadRequestException, NotFoundException, InternalServerErrorException {\n+    log.info(\"Validating inputs of skill\");\n     if (user == null || user.getUserId() == null || user.getUserId().isEmpty()) {\n       throw new BadRequestException(ValidationMessageEnums.USER_GOOGLE_ENDPOINT_NULL.message());\n     }\n-\n     final TechGalleryUser techUser = userService.getUserByGoogleId(user.getUserId());\n     if (techUser == null) {\n       throw new BadRequestException(ValidationMessageEnums.USER_NOT_EXIST.message());\n@@ -153,12 +153,11 @@ public class SkillServiceImpl implements SkillService {\n     if (skill.getTechnology() == null) {\n       throw new BadRequestException(ValidationMessageEnums.TECHNOLOGY_ID_CANNOT_BLANK.message());\n     }\n-\n   }\n \n+\n   private Skill addNewSkill(Skill skill, TechGalleryUser techUser, Technology technology) {\n     log.info(\"Adding new skill...\");\n-\n     final Skill newSkill = new Skill();\n     newSkill.setTechGalleryUser(Ref.create(techUser));\n     newSkill.setTechnology(Ref.create(technology));\n@@ -167,15 +166,13 @@ public class SkillServiceImpl implements SkillService {\n     newSkill.setCreationDate(new Date());\n     final Key<Skill> newSkillKey = skillDao.add(newSkill);\n     newSkill.setId(newSkillKey.getId());\n-\n     log.info(\"New skill added: \" + newSkill.getId());\n-\n     return newSkill;\n   }\n \n   @Override\n-  public Skill getUserSkill(String techId, User user) throws BadRequestException,\n-      OAuthRequestException, NotFoundException, InternalServerErrorException {\n+  public Skill getUserSkill(String techId, User user)\n+    throws BadRequestException, OAuthRequestException, NotFoundException, InternalServerErrorException {\n     // user google id\n     String googleId;\n     // user from techgallery datastore\n@@ -188,6 +185,7 @@ public class SkillServiceImpl implements SkillService {\n     }\n \n     // TechGalleryUser can't be null and must exists on datastore\n+\n     if (googleId == null || googleId.equals(\"\")) {\n       throw new BadRequestException(i18n.t(\"Current user was not found!\"));\n     } else {\n@@ -212,8 +210,8 @@ public class SkillServiceImpl implements SkillService {\n   }\n \n   @Override\n-  public Skill getUserSkill(String techId, TechGalleryUser user) throws BadRequestException,\n-      OAuthRequestException, NotFoundException, InternalServerErrorException {\n+  public Skill getUserSkill(String techId, TechGalleryUser user)\n+    throws BadRequestException, OAuthRequestException, NotFoundException, InternalServerErrorException {\n     // User can't be null\n     if (user == null) {\n       throw new OAuthRequestException(i18n.t(\"Null user reference!\"));\n@@ -233,7 +231,8 @@ public class SkillServiceImpl implements SkillService {\n   }\n \n   @Override\n-  public List<Skill> getSkillsByTech(Technology technology) throws BadRequestException {\n+  public List<Skill> getSkillsByTech(Technology technology)\n+    throws BadRequestException {\n     if (technology == null) {\n       throw new BadRequestException(ValidationMessageEnums.TECHNOLOGY_NOT_EXIST.message());\n     }\n@@ -242,7 +241,7 @@ public class SkillServiceImpl implements SkillService {\n \n   @Override\n   public String importUserSkill(UserSkillTO userSkills, User user)\n-      throws InternalServerErrorException, BadRequestException {\n+    throws InternalServerErrorException, BadRequestException {\n     String email = userSkills.getEmail();\n     TechGalleryUser techGalleryUser;\n     try {\n@@ -266,23 +265,28 @@ public class SkillServiceImpl implements SkillService {\n       }\n     } catch (NotFoundException e) {\n       log.log(Level.INFO,\n-          \"User \" + userSkills.getEmail() + \" not found during import. Row ignored.\", e);\n+        \"User \" + userSkills.getEmail() + \" not found during import. Row ignored.\",\n+          e);\n+\n     }\n     return null;\n   }\n \n+\n   private Technology recoverTechnologyById(String techCompleteName) {\n     Technology technology = null;\n     try {\n-      String techName = techCompleteName.substring(techCompleteName.indexOf('[') + 1,\n-          techCompleteName.indexOf(']'));\n+      String techName = techCompleteName.substring(techCompleteName.indexOf('[') + 1, techCompleteName.indexOf(']'));\n       techName = TechGalleryUtil.slugify(techName);\n       technology = techService.getTechnologyById(techName, null);\n     } catch (Exception e) {\n       log.info(\"Technology \" + techCompleteName + \" does not exist!\");\n+\n     } catch (Throwable e) {\n       log.info(\"Technology \" + techCompleteName + \" does not exist!\");\n+\n     }\n     return technology;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "',' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler_random/16/SkillServiceImpl.java\nindex dd869c6c627..aadf541f3c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/16/SkillServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler_random/16/SkillServiceImpl.java\n@@ -108,7 +108,9 @@ public class SkillServiceImpl implements SkillService {\n   }\n \n   @Override\n-  public void deleteUserSkill(String techId, User user) throws InternalServerErrorException, BadRequestException, NotFoundException, OAuthRequestException {\n+  public void deleteUserSkill(String techId, User user) throws InternalServerErrorException, BadRequestException, NotFoundException\n+\n+    , OAuthRequestException {\n \n     Skill skillEntity = getUserSkill(techId, user);\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "111",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
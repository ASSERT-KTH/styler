{
    "project_name": "eclipse-milo",
    "error_id": "196",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "33",
                "severity": "error",
                "message": "'}' at column 33 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class Int16Conversions {\n\n    private Int16Conversions() {}\n\n    @Nonnull\n    static Boolean int16ToBoolean(@Nonnull Short s) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/196/Int16Conversions.java\nindex d265a17d03e..b4137623a47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/196/Int16Conversions.java\n@@ -26,7 +26,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int16Conversions {\n \n-    private Int16Conversions() {}\n+    private Int16Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean int16ToBoolean(@Nonnull Short s) {\n@@ -120,12 +121,18 @@ final class Int16Conversions {\n     static Object explicitConversion(@Nonnull Short s, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return int16ToBoolean(s);\n-            case Byte:      return int16ToByte(s);\n-            case SByte:     return int16ToSByte(s);\n-            case String:    return int16ToString(s);\n-            case UInt16:    return int16ToUInt16(s);\n-            default:        return implicitConversion(s, targetType);\n+            case Boolean:\n+                return int16ToBoolean(s);\n+            case Byte:\n+                return int16ToByte(s);\n+            case SByte:\n+                return int16ToSByte(s);\n+            case String:\n+                return int16ToString(s);\n+            case UInt16:\n+                return int16ToUInt16(s);\n+            default:\n+                return implicitConversion(s, targetType);\n         }\n         //@formatter:on\n     }\n@@ -134,13 +141,20 @@ final class Int16Conversions {\n     static Object implicitConversion(@Nonnull Short s, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return int16ToDouble(s);\n-            case Float:     return int16ToFloat(s);\n-            case Int32:     return int16ToInt32(s);\n-            case Int64:     return int16ToInt64(s);\n-            case UInt32:    return int16ToUInt32(s);\n-            case UInt64:    return int16ToUInt64(s);\n-            default:        return null;\n+            case Double:\n+                return int16ToDouble(s);\n+            case Float:\n+                return int16ToFloat(s);\n+            case Int32:\n+                return int16ToInt32(s);\n+            case Int64:\n+                return int16ToInt64(s);\n+            case UInt32:\n+                return int16ToUInt32(s);\n+            case UInt64:\n+                return int16ToUInt64(s);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/196/Int16Conversions.java\nindex d265a17d03e..e0586e2494a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/196/Int16Conversions.java\n@@ -120,12 +120,14 @@ final class Int16Conversions {\n     static Object explicitConversion(@Nonnull Short s, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return int16ToBoolean(s);\n+            case Boolean:\n+    return int16ToBoolean(s);\n             case Byte:      return int16ToByte(s);\n             case SByte:     return int16ToSByte(s);\n             case String:    return int16ToString(s);\n             case UInt16:    return int16ToUInt16(s);\n-            default:        return implicitConversion(s, targetType);\n+            default:\n+    return implicitConversion(s, targetType);\n         }\n         //@formatter:on\n     }\n@@ -140,9 +142,10 @@ final class Int16Conversions {\n             case Int64:     return int16ToInt64(s);\n             case UInt32:    return int16ToUInt32(s);\n             case UInt64:    return int16ToUInt64(s);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/196/Int16Conversions.java\nindex d265a17d03e..203697f0326 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/196/Int16Conversions.java\n@@ -12,7 +12,6 @@ package org.eclipse.milo.opcua.sdk.server.events.conversions;\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.stack.core.BuiltinDataType;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n@@ -26,7 +25,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int16Conversions {\n \n-    private Int16Conversions() {}\n+    private Int16Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean int16ToBoolean(@Nonnull Short s) {\n@@ -107,10 +107,7 @@ final class Int16Conversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Short) {\n             Short s = (Short) o;\n-\n-            return implicit ?\n-                implicitConversion(s, targetType) :\n-                explicitConversion(s, targetType);\n+            return implicit ? implicitConversion(s, targetType) : explicitConversion(s, targetType);\n         } else {\n             return null;\n         }\n@@ -120,12 +117,22 @@ final class Int16Conversions {\n     static Object explicitConversion(@Nonnull Short s, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:   return int16ToBoolean(s);\n-            case Byte:      return int16ToByte(s);\n-            case SByte:     return int16ToSByte(s);\n-            case String:    return int16ToString(s);\n-            case UInt16:    return int16ToUInt16(s);\n-            default:        return implicitConversion(s, targetType);\n+            case Boolean:\n+                return int16ToBoolean(s);\n+\n+            case Byte:\n+                return int16ToByte(s);\n+\n+            case SByte:\n+                return int16ToSByte(s);\n+\n+            case String:\n+                return int16ToString(s);\n+\n+            case UInt16:\n+                return int16ToUInt16(s);\n+            default:\n+                return implicitConversion(s, targetType);\n         }\n         //@formatter:on\n     }\n@@ -134,15 +141,27 @@ final class Int16Conversions {\n     static Object implicitConversion(@Nonnull Short s, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return int16ToDouble(s);\n-            case Float:     return int16ToFloat(s);\n-            case Int32:     return int16ToInt32(s);\n-            case Int64:     return int16ToInt64(s);\n-            case UInt32:    return int16ToUInt32(s);\n-            case UInt64:    return int16ToUInt64(s);\n-            default:        return null;\n+            case Double:\n+                return int16ToDouble(s);\n+\n+            case Float:\n+                return int16ToFloat(s);\n+\n+            case Int32:\n+                return int16ToInt32(s);\n+\n+            case Int64:\n+                return int16ToInt64(s);\n+\n+            case UInt32:\n+                return int16ToUInt32(s);\n+\n+            case UInt64:\n+                return int16ToUInt64(s);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/196/Int16Conversions.java\nindex d265a17d03e..b79160ba788 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/196/Int16Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/196/Int16Conversions.java\n@@ -26,9 +26,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int16Conversions {\n \n-    private Int16Conversions() {}\n+    private Int16Conversions() {\n \n-    @Nonnull\n+    } @Nonnull\n     static Boolean int16ToBoolean(@Nonnull Short s) {\n         return s != 0;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
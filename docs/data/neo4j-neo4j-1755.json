{
    "project_name": "neo4j-neo4j",
    "error_id": "1755",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1755/AbstractVersionComponent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1755/AbstractVersionComponent.java\nindex c2ca013faf4..dcefecdf244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1755/AbstractVersionComponent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1755/AbstractVersionComponent.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.database;\n \n import java.util.function.Function;\n@@ -37,12 +38,12 @@ public abstract class AbstractVersionComponent<T extends ComponentVersion> exten\n {\n     private final String componentName;\n     private final T latestVersion;\n-    protected final Function<Integer,T> convertToVersion;\n+    protected final Function<Integer, T> convertToVersion;\n     protected volatile T currentVersion;\n \n-    public AbstractVersionComponent( String componentName, T latestVersion, Config config, Function<Integer, T> convertFunction )\n+    public AbstractVersionComponent(String componentName, T latestVersion, Config config, Function<Integer, T> convertFunction)\n     {\n-        super( config );\n+        super(config);\n         this.componentName = componentName;\n         this.latestVersion = latestVersion;\n         this.convertToVersion = convertFunction;\n@@ -57,110 +58,106 @@ public abstract class AbstractVersionComponent<T extends ComponentVersion> exten\n     }\n \n     @Override\n-    public Status detect( Transaction tx )\n+    public Status detect(Transaction tx)\n     {\n         try\n         {\n-            Integer versionNumber = getVersionNumber( tx, componentName );\n-            if ( versionNumber == null )\n+            Integer versionNumber = getVersionNumber(tx, componentName);\n+            if (versionNumber == null)\n             {\n                 return Status.UNINITIALIZED;\n-            }\n-            else\n+            } else\n             {\n-                T version = convertToVersion.apply( getVersionNumber( tx, componentName ) );\n-                if ( latestVersion.isGreaterThan( version ) )\n+                T version = convertToVersion.apply(getVersionNumber(tx, componentName));\n+                if (latestVersion.isGreaterThan(version))\n                 {\n                     return Status.REQUIRES_UPGRADE;\n-                }\n-                else if ( latestVersion.equals( version ) )\n+                } else if (latestVersion.equals(version))\n                 {\n                     return Status.CURRENT;\n-                }\n-                else\n+                } else\n                 {\n                     return Status.UNSUPPORTED_FUTURE;\n                 }\n             }\n-        }\n-        catch ( IllegalArgumentException e )\n+        } catch (IllegalArgumentException e)\n         {\n             return Status.UNSUPPORTED_FUTURE;\n         }\n     }\n \n     @Override\n-    public void initializeSystemGraph( GraphDatabaseService system, boolean firstInitialization ) throws Exception\n+    public void initializeSystemGraph(GraphDatabaseService system, boolean firstInitialization) throws Exception\n     {\n-        boolean mayUpgrade = config.get( GraphDatabaseSettings.allow_single_automatic_upgrade );\n+        boolean mayUpgrade = config.get(GraphDatabaseSettings.allow_single_automatic_upgrade);\n \n-        Preconditions.checkState( system.databaseName().equals( SYSTEM_DATABASE_NAME ),\n-                \"Cannot initialize system graph on database '\" + system.databaseName() + \"'\" );\n+        Preconditions.checkState(system.databaseName().equals(SYSTEM_DATABASE_NAME),\n+          \"Cannot initialize system graph on database '\" + system.databaseName() + \"'\");\n \n         Status status;\n-        try ( Transaction tx = system.beginTx() )\n+        try (Transaction tx = system.beginTx())\n         {\n-            status = detect( tx );\n+            status = detect(tx);\n             tx.commit();\n         }\n \n-        switch ( status )\n+        switch (status)\n         {\n-        case CURRENT:\n-            break;\n-        case UNINITIALIZED:\n-            if ( mayUpgrade || firstInitialization )\n-            {\n-                initializeSystemGraphModel( system );\n-            }\n-            break;\n-        case REQUIRES_UPGRADE:\n-            if ( mayUpgrade )\n-            {\n-                upgradeToCurrent( system );\n-            }\n-            break;\n-        default:\n-            throw new IllegalStateException( String.format( \"Unsupported component state for '%s': %s\", componentName(), status.description() ) );\n+            case CURRENT:\n+                break;\n+            case UNINITIALIZED:\n+                if (mayUpgrade || firstInitialization)\n+                {\n+                    initializeSystemGraphModel(system);\n+                }\n+                break;\n+            case REQUIRES_UPGRADE:\n+                if (mayUpgrade)\n+                {\n+                    upgradeToCurrent(system);\n+                }\n+                break;\n+            default:\n+                throw new IllegalStateException(String.format(\"Unsupported component state for '%s': %s\", componentName(), status.description()));\n         }\n     }\n \n     @Override\n-    protected void initializeSystemGraphModel( GraphDatabaseService system ) throws Exception\n+    protected void initializeSystemGraphModel(GraphDatabaseService system) throws Exception\n     {\n-        SystemGraphComponent.executeWithFullAccess( system, this::setToLatestVersion );\n+        SystemGraphComponent.executeWithFullAccess(system, this::setToLatestVersion);\n     }\n \n-    void setToLatestVersion( Transaction tx )\n+    void setToLatestVersion(Transaction tx)\n     {\n-        var node = tx.findNodes( VERSION_LABEL )\n-                     .stream()\n-                     .findFirst()\n-                     .orElseGet( () -> tx.createNode( VERSION_LABEL ) );\n+        var node = tx.findNodes(VERSION_LABEL)\n+          .stream()\n+          .findFirst()\n+          .orElseGet(() -> tx.createNode(VERSION_LABEL));\n \n-        node.setProperty( componentName, latestVersion.getVersion() );\n+        node.setProperty(componentName, latestVersion.getVersion());\n     }\n \n     @Override\n-    public void upgradeToCurrent( GraphDatabaseService system ) throws Exception\n+    public void upgradeToCurrent(GraphDatabaseService system) throws Exception\n     {\n-        initializeSystemGraphModel( system );\n+        initializeSystemGraphModel(system);\n     }\n \n-    T fetchStateFromSystemDatabase( GraphDatabaseService system )\n+    T fetchStateFromSystemDatabase(GraphDatabaseService system)\n     {\n         T result = getFallbackVersion();\n-        try ( var tx = system.beginTx();\n-              var nodes = tx.findNodes( VERSION_LABEL ) )\n+        try (var tx = system.beginTx();\n+             var nodes = tx.findNodes(VERSION_LABEL))\n         {\n-            if ( nodes.hasNext() )\n+            if (nodes.hasNext())\n             {\n                 Node versionNode = nodes.next();\n-                if ( versionNode.hasProperty( componentName ) )\n+                if (versionNode.hasProperty(componentName))\n                 {\n-                    result = convertToVersion.apply( (int) versionNode.getProperty( componentName ) );\n+                    result = convertToVersion.apply((int) versionNode.getProperty(componentName));\n                 }\n-                Preconditions.checkState( !nodes.hasNext(), \"More than one version node in system database\" );\n+                Preconditions.checkState(!nodes.hasNext(), \"More than one version node in system database\");\n             }\n         }\n         return result;\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
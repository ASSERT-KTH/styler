{
    "project_name": "graphfoundation-ongdb",
    "error_id": "451",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "185",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "257",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "273",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "404",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "410",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "413",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "459",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "462",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "480",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "483",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "487",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "508",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "513",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "516",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "519",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "540",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "545",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "548",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "551",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "572",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "577",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "580",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "583",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "604",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "609",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "612",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "632",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "636",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "656",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "660",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "671",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "671",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "680",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "684",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "705",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "708",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "709",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "733",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/451/SchemaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/451/SchemaImpl.java\nindex 63a40f2ce72..9abe718e8bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/451/SchemaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/451/SchemaImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import java.util.ArrayList;\n@@ -91,683 +92,646 @@ import static org.neo4j.kernel.impl.coreapi.schema.PropertyNameUtils.getOrCreate\n \n public class SchemaImpl implements Schema\n {\n-    private final Supplier<KernelTransaction> transactionSupplier;\n-    private final InternalSchemaActions actions;\n+  private final Supplier<KernelTransaction> transactionSupplier;\n+  private final InternalSchemaActions actions;\n+\n+  public SchemaImpl(Supplier<KernelTransaction> transactionSupplier)\n+  {\n+    this.transactionSupplier = transactionSupplier;\n+    this.actions = new GDBSchemaActions(transactionSupplier);\n+  }\n+\n+  @Override\n+  public IndexCreator indexFor(Label label)\n+  {\n+    return new IndexCreatorImpl(actions, label);\n+  }\n+\n+  @Override\n+  public Iterable<IndexDefinition> getIndexes(final Label label)\n+  {\n+    KernelTransaction transaction = transactionSupplier.get();\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      TokenRead tokenRead = transaction.tokenRead();\n+      SchemaRead schemaRead = transaction.schemaRead();\n+      List<IndexDefinition> definitions = new ArrayList<>();\n+      int labelId = tokenRead.nodeLabel(label.name());\n+      if (labelId == TokenRead.NO_TOKEN)\n+      {\n+        return emptyList();\n+      }\n+      Iterator<IndexReference> indexes = schemaRead.indexesGetForLabel(labelId);\n+      addDefinitions(definitions, tokenRead, IndexReference.sortByType(indexes));\n+      return definitions;\n+    }\n+  }\n+\n+  @Override\n+  public Iterable<IndexDefinition> getIndexes()\n+  {\n+    KernelTransaction transaction = transactionSupplier.get();\n+    SchemaRead schemaRead = transaction.schemaRead();\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      List<IndexDefinition> definitions = new ArrayList<>();\n \n-    public SchemaImpl( Supplier<KernelTransaction> transactionSupplier )\n+      Iterator<IndexReference> indexes = schemaRead.indexesGetAll();\n+      addDefinitions(definitions, transaction.tokenRead(), IndexReference.sortByType(indexes));\n+      return definitions;\n+    }\n+  }\n+\n+  private IndexDefinition descriptorToDefinition(final TokenRead tokenRead, IndexReference index)\n+  {\n+    try\n+    {\n+      Label label = label(tokenRead.nodeLabelName(index.label()));\n+      boolean constraintIndex = index.isUnique();\n+      String[] propertyNames = PropertyNameUtils.getPropertyKeys(tokenRead, index.properties());\n+      return new IndexDefinitionImpl(actions, label, propertyNames, constraintIndex);\n+    } catch (LabelNotFoundKernelException | PropertyKeyIdNotFoundKernelException e)\n+    {\n+      throw new RuntimeException(e);\n+    }\n+  }\n+\n+  private void addDefinitions(List<IndexDefinition> definitions, final TokenRead tokenRead,\n+                              Iterator<IndexReference> indexes)\n+  {\n+    addToCollection(\n+        map(index -> descriptorToDefinition(tokenRead, index), indexes),\n+        definitions);\n+  }\n+\n+  @Override\n+  public void awaitIndexOnline(IndexDefinition index, long duration, TimeUnit unit)\n+  {\n+    actions.assertInOpenTransaction();\n+    long timeout = System.currentTimeMillis() + unit.toMillis(duration);\n+    do\n+    {\n+      IndexState state = getIndexState(index);\n+      switch (state)\n+      {\n+        case ONLINE:\n+          return;\n+        case FAILED:\n+          throw new IllegalStateException(\"Index entered a FAILED state. Please see database logs.\");\n+        default:\n+          try\n+          {\n+            Thread.sleep(100);\n+          } catch (InterruptedException e)\n+          {   // What to do?\n+          }\n+          break;\n+      }\n+    } while (System.currentTimeMillis() < timeout);\n+    throw new IllegalStateException(\"Expected index to come online within a reasonable time.\");\n+  }\n+\n+  @Override\n+  public void awaitIndexesOnline(long duration, TimeUnit unit)\n+  {\n+    actions.assertInOpenTransaction();\n+    long millisLeft = TimeUnit.MILLISECONDS.convert(duration, unit);\n+    Collection<IndexDefinition> onlineIndexes = new ArrayList<>();\n+\n+    for (Iterator<IndexDefinition> iter = getIndexes().iterator(); iter.hasNext(); )\n     {\n-        this.transactionSupplier = transactionSupplier;\n-        this.actions = new GDBSchemaActions( transactionSupplier );\n+      if (millisLeft < 0)\n+      {\n+        throw new IllegalStateException(\"Expected all indexes to come online within a reasonable time.\"\n+            + \"Indexes brought online: \" + onlineIndexes\n+            + \". Indexes not guaranteed to be online: \" + asCollection(iter));\n+      }\n+\n+      IndexDefinition index = iter.next();\n+      long millisBefore = System.currentTimeMillis();\n+      awaitIndexOnline(index, millisLeft, TimeUnit.MILLISECONDS);\n+      millisLeft -= System.currentTimeMillis() - millisBefore;\n+\n+      onlineIndexes.add(index);\n     }\n+  }\n \n-    @Override\n-    public IndexCreator indexFor( Label label )\n+  @Override\n+  public IndexState getIndexState(final IndexDefinition index)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+\n+      SchemaRead schemaRead = transaction.schemaRead();\n+      CapableIndexReference reference = getIndexReference(schemaRead, transaction.tokenRead(), index);\n+      InternalIndexState indexState = schemaRead.indexGetState(reference);\n+      switch (indexState)\n+      {\n+        case POPULATING:\n+          return POPULATING;\n+        case ONLINE:\n+          return ONLINE;\n+        case FAILED:\n+          return FAILED;\n+        default:\n+          throw new IllegalArgumentException(String.format(\"Illegal index state %s\", indexState));\n+      }\n+    } catch (SchemaRuleNotFoundException | IndexNotFoundKernelException e)\n     {\n-        return new IndexCreatorImpl( actions, label );\n+      throw new NotFoundException(format(\"No index for label %s on property %s\",\n+          index.getLabel().name(), index.getPropertyKeys()));\n     }\n+  }\n \n-    @Override\n-    public Iterable<IndexDefinition> getIndexes( final Label label )\n-    {\n-        KernelTransaction transaction = transactionSupplier.get();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            TokenRead tokenRead = transaction.tokenRead();\n-            SchemaRead schemaRead = transaction.schemaRead();\n-            List<IndexDefinition> definitions = new ArrayList<>();\n-            int labelId = tokenRead.nodeLabel( label.name() );\n-            if ( labelId == TokenRead.NO_TOKEN )\n-            {\n-                return emptyList();\n-            }\n-            Iterator<IndexReference> indexes = schemaRead.indexesGetForLabel( labelId );\n-            addDefinitions( definitions, tokenRead, IndexReference.sortByType( indexes ) );\n-            return definitions;\n-        }\n+  @Override\n+  public IndexPopulationProgress getIndexPopulationProgress(IndexDefinition index)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      SchemaRead schemaRead = transaction.schemaRead();\n+      CapableIndexReference descriptor = getIndexReference(schemaRead, transaction.tokenRead(), index);\n+      PopulationProgress progress = schemaRead.indexGetPopulationProgress(descriptor);\n+      return new IndexPopulationProgress(progress.getCompleted(), progress.getTotal());\n+    } catch (SchemaRuleNotFoundException | IndexNotFoundKernelException e)\n+    {\n+      throw new NotFoundException(format(\"No index for label %s on property %s\", index.getLabel().name(),\n+          index.getPropertyKeys()));\n     }\n+  }\n \n-    @Override\n-    public Iterable<IndexDefinition> getIndexes()\n+  @Override\n+  public String getIndexFailure(IndexDefinition index)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = transactionSupplier.get();\n-        SchemaRead schemaRead = transaction.schemaRead();\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            List<IndexDefinition> definitions = new ArrayList<>();\n+      SchemaRead schemaRead = transaction.schemaRead();\n+      CapableIndexReference descriptor = getIndexReference(schemaRead, transaction.tokenRead(), index);\n+      return schemaRead.indexGetFailure(descriptor);\n+    } catch (SchemaRuleNotFoundException | IndexNotFoundKernelException e)\n+    {\n+      throw new NotFoundException(format(\"No index for label %s on property %s\",\n+          index.getLabel().name(), index.getPropertyKeys()));\n+    }\n+  }\n+\n+  @Override\n+  public ConstraintCreator constraintFor(Label label)\n+  {\n+    actions.assertInOpenTransaction();\n+    return new BaseNodeConstraintCreator(actions, label);\n+  }\n+\n+  @Override\n+  public Iterable<ConstraintDefinition> getConstraints()\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      return asConstraintDefinitions(transaction.schemaRead().constraintsGetAll(), transaction.tokenRead());\n+    }\n+  }\n \n-            Iterator<IndexReference> indexes = schemaRead.indexesGetAll();\n-            addDefinitions( definitions, transaction.tokenRead(), IndexReference.sortByType( indexes ) );\n-            return definitions;\n-        }\n+  @Override\n+  public Iterable<ConstraintDefinition> getConstraints(final Label label)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+    try (Statement ignore = transaction.acquireStatement())\n+    {\n+      TokenRead tokenRead = transaction.tokenRead();\n+      SchemaRead schemaRead = transaction.schemaRead();\n+      int labelId = tokenRead.nodeLabel(label.name());\n+      if (labelId == TokenRead.NO_TOKEN)\n+      {\n+        return emptyList();\n+      }\n+      return asConstraintDefinitions(schemaRead.constraintsGetForLabel(labelId), tokenRead);\n     }\n+  }\n \n-    private IndexDefinition descriptorToDefinition( final TokenRead tokenRead, IndexReference index )\n+  @Override\n+  public Iterable<ConstraintDefinition> getConstraints(RelationshipType type)\n+  {\n+    KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        try\n-        {\n-            Label label = label( tokenRead.nodeLabelName( index.label() ) );\n-            boolean constraintIndex = index.isUnique();\n-            String[] propertyNames = PropertyNameUtils.getPropertyKeys( tokenRead, index.properties() );\n-            return new IndexDefinitionImpl( actions, label, propertyNames, constraintIndex );\n-        }\n-        catch ( LabelNotFoundKernelException | PropertyKeyIdNotFoundKernelException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      TokenRead tokenRead = transaction.tokenRead();\n+      SchemaRead schemaRead = transaction.schemaRead();\n+      int typeId = tokenRead.relationshipType(type.name());\n+      if (typeId == TokenRead.NO_TOKEN)\n+      {\n+        return emptyList();\n+      }\n+      return asConstraintDefinitions(schemaRead.constraintsGetForRelationshipType(typeId), tokenRead);\n+    }\n+  }\n+\n+  private static CapableIndexReference getIndexReference(SchemaRead schemaRead, TokenRead tokenRead,\n+                                                         IndexDefinition index)\n+      throws SchemaRuleNotFoundException\n+  {\n+    int labelId = tokenRead.nodeLabel(index.getLabel().name());\n+    int[] propertyKeyIds = PropertyNameUtils.getPropertyIds(tokenRead, index.getPropertyKeys());\n+    assertValidLabel(index.getLabel(), labelId);\n+    assertValidProperties(index.getPropertyKeys(), propertyKeyIds);\n+    CapableIndexReference reference = schemaRead.index(labelId, propertyKeyIds);\n+    if (reference == CapableIndexReference.NO_INDEX)\n+    {\n+      throw new SchemaRuleNotFoundException(SchemaRule.Kind.INDEX_RULE, forLabel(labelId, propertyKeyIds));\n     }\n \n-    private void addDefinitions( List<IndexDefinition> definitions, final TokenRead tokenRead,\n-            Iterator<IndexReference> indexes )\n+    return reference;\n+  }\n+\n+  private static void assertValidLabel(Label label, int labelId)\n+  {\n+    if (labelId == TokenRead.NO_TOKEN)\n     {\n-        addToCollection(\n-                map( index -> descriptorToDefinition( tokenRead, index ), indexes ),\n-                definitions );\n+      throw new NotFoundException(format(\"Label %s not found\", label.name()));\n     }\n+  }\n \n-    @Override\n-    public void awaitIndexOnline( IndexDefinition index, long duration, TimeUnit unit )\n-    {\n-        actions.assertInOpenTransaction();\n-        long timeout = System.currentTimeMillis() + unit.toMillis( duration );\n-        do\n-        {\n-            IndexState state = getIndexState( index );\n-            switch ( state )\n-            {\n-            case ONLINE:\n-                return;\n-            case FAILED:\n-                throw new IllegalStateException( \"Index entered a FAILED state. Please see database logs.\" );\n-            default:\n-                try\n-                {\n-                    Thread.sleep( 100 );\n-                }\n-                catch ( InterruptedException e )\n-                {   // What to do?\n-                }\n-                break;\n-            }\n-        } while ( System.currentTimeMillis() < timeout );\n-        throw new IllegalStateException( \"Expected index to come online within a reasonable time.\" );\n+  private static void assertValidProperties(Iterable<String> properties, int[] propertyIds)\n+  {\n+    for (int i = 0; i < propertyIds.length; i++)\n+    {\n+      if (propertyIds[i] == TokenRead.NO_TOKEN)\n+      {\n+        throw new NotFoundException(\n+            format(\"Property key %s not found\", Iterables.asArray(String.class, properties)[i]));\n+      }\n     }\n+  }\n \n-    @Override\n-    public void awaitIndexesOnline( long duration, TimeUnit unit )\n+  private Iterable<ConstraintDefinition> asConstraintDefinitions(\n+      Iterator<? extends ConstraintDescriptor> constraints,\n+      TokenRead tokenRead)\n+  {\n+    // Intentionally create an eager list so that used statement can be closed\n+    List<ConstraintDefinition> definitions = new ArrayList<>();\n+\n+    while (constraints.hasNext())\n     {\n-        actions.assertInOpenTransaction();\n-        long millisLeft = TimeUnit.MILLISECONDS.convert( duration, unit );\n-        Collection<IndexDefinition> onlineIndexes = new ArrayList<>();\n+      ConstraintDescriptor constraint = constraints.next();\n+      definitions.add(asConstraintDefinition(constraint, tokenRead));\n+    }\n \n-        for ( Iterator<IndexDefinition> iter = getIndexes().iterator(); iter.hasNext(); )\n-        {\n-            if ( millisLeft < 0 )\n-            {\n-                throw new IllegalStateException( \"Expected all indexes to come online within a reasonable time.\"\n-                                                 + \"Indexes brought online: \" + onlineIndexes\n-                                                 + \". Indexes not guaranteed to be online: \" + asCollection( iter ) );\n-            }\n+    return definitions;\n+  }\n+\n+  private ConstraintDefinition asConstraintDefinition(ConstraintDescriptor constraint,\n+                                                      TokenRead tokenRead)\n+  {\n+    // This was turned inside out. Previously a low-level constraint object would reference a public enum type\n+    // which made it impossible to break out the low-level component from kernel. There could be a lower level\n+    // constraint type introduced to mimic the public ConstraintType, but that would be a duplicate of it\n+    // essentially. Checking instanceof here is OKish since the objects it checks here are part of the\n+    // internal storage engine API.\n+    SilentTokenNameLookup lookup = new SilentTokenNameLookup(tokenRead);\n+    if (constraint instanceof NodeExistenceConstraintDescriptor ||\n+        constraint instanceof NodeKeyConstraintDescriptor ||\n+        constraint instanceof UniquenessConstraintDescriptor)\n+    {\n+      SchemaDescriptor schemaDescriptor = constraint.schema();\n+      Label label = Label.label(lookup.labelGetName(schemaDescriptor.keyId()));\n+      String[] propertyKeys = Arrays.stream(schemaDescriptor.getPropertyIds())\n+          .mapToObj(lookup::propertyKeyGetName).toArray(String[]::new);\n+      if (constraint instanceof NodeExistenceConstraintDescriptor)\n+      {\n+        return new NodePropertyExistenceConstraintDefinition(actions, label, propertyKeys);\n+      } else if (constraint instanceof UniquenessConstraintDescriptor)\n+      {\n+        return new UniquenessConstraintDefinition(actions, new IndexDefinitionImpl(actions, label,\n+            propertyKeys, true));\n+      } else\n+      {\n+        return new NodeKeyConstraintDefinition(actions, new IndexDefinitionImpl(actions, label,\n+            propertyKeys, true));\n+      }\n+    } else if (constraint instanceof RelExistenceConstraintDescriptor)\n+    {\n+      RelationTypeSchemaDescriptor descriptor = (RelationTypeSchemaDescriptor) constraint.schema();\n+      return new RelationshipPropertyExistenceConstraintDefinition(actions,\n+          RelationshipType.withName(lookup.relationshipTypeGetName(descriptor.getRelTypeId())),\n+          lookup.propertyKeyGetName(descriptor.getPropertyId()));\n+    }\n+    throw new IllegalArgumentException(\"Unknown constraint \" + constraint);\n+  }\n \n-            IndexDefinition index = iter.next();\n-            long millisBefore = System.currentTimeMillis();\n-            awaitIndexOnline( index, millisLeft, TimeUnit.MILLISECONDS );\n-            millisLeft -= System.currentTimeMillis() - millisBefore;\n+  private static KernelTransaction safeAcquireTransaction(Supplier<KernelTransaction> transactionSupplier)\n+  {\n+    KernelTransaction transaction = transactionSupplier.get();\n+    if (transaction.isTerminated())\n+    {\n+      Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+      throw new TransactionTerminatedException(terminationReason);\n+    }\n+    return transaction;\n+  }\n \n-            onlineIndexes.add( index );\n-        }\n+  private static class GDBSchemaActions implements InternalSchemaActions\n+  {\n+    private final Supplier<KernelTransaction> transactionSupplier;\n+\n+    GDBSchemaActions(Supplier<KernelTransaction> transactionSupplier)\n+    {\n+      this.transactionSupplier = transactionSupplier;\n     }\n \n     @Override\n-    public IndexState getIndexState( final IndexDefinition index )\n-    {\n-        KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-\n-            SchemaRead schemaRead = transaction.schemaRead();\n-            CapableIndexReference reference = getIndexReference( schemaRead, transaction.tokenRead(), index );\n-            InternalIndexState indexState = schemaRead.indexGetState( reference );\n-            switch ( indexState )\n-            {\n-            case POPULATING:\n-                return POPULATING;\n-            case ONLINE:\n-                return ONLINE;\n-            case FAILED:\n-                return FAILED;\n-            default:\n-                throw new IllegalArgumentException( String.format( \"Illegal index state %s\", indexState ) );\n-            }\n-        }\n-        catch ( SchemaRuleNotFoundException | IndexNotFoundKernelException e )\n+    public IndexDefinition createIndexDefinition(Label label, String... propertyKeys)\n+    {\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          IndexDefinition indexDefinition = new IndexDefinitionImpl(this, label, propertyKeys, false);\n+          TokenWrite tokenWrite = transaction.tokenWrite();\n+          int labelId = tokenWrite.labelGetOrCreateForName(indexDefinition.getLabel().name());\n+          int[] propertyKeyIds = getOrCreatePropertyKeyIds(tokenWrite, indexDefinition);\n+          LabelSchemaDescriptor descriptor = forLabel(labelId, propertyKeyIds);\n+          transaction.schemaWrite().indexCreate(descriptor);\n+          return indexDefinition;\n+        } catch (IllegalTokenNameException e)\n+        {\n+          throw new IllegalArgumentException(e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n         {\n-            throw new NotFoundException( format( \"No index for label %s on property %s\",\n-                    index.getLabel().name(), index.getPropertyKeys() ) );\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n         }\n+      }\n     }\n \n     @Override\n-    public IndexPopulationProgress getIndexPopulationProgress( IndexDefinition index )\n+    public void dropIndexDefinitions(IndexDefinition indexDefinition)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-        try ( Statement ignore = transaction.acquireStatement() )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n         {\n-            SchemaRead schemaRead = transaction.schemaRead();\n-            CapableIndexReference descriptor = getIndexReference( schemaRead, transaction.tokenRead(), index );\n-            PopulationProgress progress = schemaRead.indexGetPopulationProgress( descriptor );\n-            return new IndexPopulationProgress( progress.getCompleted(), progress.getTotal() );\n-        }\n-        catch ( SchemaRuleNotFoundException | IndexNotFoundKernelException e )\n+          transaction.schemaWrite().indexDrop(getIndexReference(\n+              transaction.schemaRead(), transaction.tokenRead(), indexDefinition));\n+        } catch (NotFoundException e)\n         {\n-            throw new NotFoundException( format( \"No index for label %s on property %s\", index.getLabel().name(),\n-                    index.getPropertyKeys() ) );\n+          // Silently ignore invalid label and property names\n+        } catch (SchemaRuleNotFoundException | DropIndexFailureException e)\n+        {\n+          throw new ConstraintViolationException(e.getUserMessage(\n+              new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n+      }\n     }\n \n     @Override\n-    public String getIndexFailure( IndexDefinition index )\n+    public ConstraintDefinition createPropertyUniquenessConstraint(IndexDefinition indexDefinition)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-        try ( Statement ignore = transaction.acquireStatement() )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n         {\n-            SchemaRead schemaRead = transaction.schemaRead();\n-            CapableIndexReference descriptor = getIndexReference( schemaRead, transaction.tokenRead(), index );\n-            return schemaRead.indexGetFailure( descriptor );\n-        }\n-        catch ( SchemaRuleNotFoundException | IndexNotFoundKernelException e )\n+          TokenWrite tokenWrite = transaction.tokenWrite();\n+          int labelId = tokenWrite.labelGetOrCreateForName(indexDefinition.getLabel().name());\n+          int[] propertyKeyIds = getOrCreatePropertyKeyIds(tokenWrite, indexDefinition);\n+          transaction.schemaWrite().uniquePropertyConstraintCreate(\n+              forLabel(labelId, propertyKeyIds));\n+          return new UniquenessConstraintDefinition(this, indexDefinition);\n+        } catch (AlreadyConstrainedException | CreateConstraintFailureException | AlreadyIndexedException |\n+            RepeatedPropertyInCompositeSchemaException e)\n         {\n-            throw new NotFoundException( format( \"No index for label %s on property %s\",\n-                    index.getLabel().name(), index.getPropertyKeys() ) );\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (IllegalTokenNameException e)\n+        {\n+          throw new IllegalArgumentException(e);\n+        } catch (TooManyLabelsException e)\n+        {\n+          throw new IllegalStateException(e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n+      }\n     }\n \n     @Override\n-    public ConstraintCreator constraintFor( Label label )\n+    public ConstraintDefinition createNodeKeyConstraint(IndexDefinition indexDefinition)\n     {\n-        actions.assertInOpenTransaction();\n-        return new BaseNodeConstraintCreator( actions, label );\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          TokenWrite tokenWrite = transaction.tokenWrite();\n+          int labelId = tokenWrite.labelGetOrCreateForName(indexDefinition.getLabel().name());\n+          int[] propertyKeyIds = getOrCreatePropertyKeyIds(tokenWrite, indexDefinition);\n+          transaction.schemaWrite().nodeKeyConstraintCreate(\n+              forLabel(labelId, propertyKeyIds));\n+          return new NodeKeyConstraintDefinition(this, indexDefinition);\n+        } catch (AlreadyConstrainedException | CreateConstraintFailureException | AlreadyIndexedException |\n+            RepeatedPropertyInCompositeSchemaException e)\n+        {\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (IllegalTokenNameException e)\n+        {\n+          throw new IllegalArgumentException(e);\n+        } catch (TooManyLabelsException e)\n+        {\n+          throw new IllegalStateException(e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n+        }\n+      }\n     }\n \n     @Override\n-    public Iterable<ConstraintDefinition> getConstraints()\n+    public ConstraintDefinition createPropertyExistenceConstraint(Label label, String... propertyKeys)\n     {\n-        KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-        try ( Statement ignore = transaction.acquireStatement() )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          TokenWrite tokenWrite = transaction.tokenWrite();\n+          int labelId = tokenWrite.labelGetOrCreateForName(label.name());\n+          int[] propertyKeyIds = getOrCreatePropertyKeyIds(tokenWrite, propertyKeys);\n+          transaction.schemaWrite().nodePropertyExistenceConstraintCreate(\n+              forLabel(labelId, propertyKeyIds));\n+          return new NodePropertyExistenceConstraintDefinition(this, label, propertyKeys);\n+        } catch (AlreadyConstrainedException | CreateConstraintFailureException |\n+            RepeatedPropertyInCompositeSchemaException e)\n+        {\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (IllegalTokenNameException e)\n         {\n-            return asConstraintDefinitions( transaction.schemaRead().constraintsGetAll(), transaction.tokenRead() );\n+          throw new IllegalArgumentException(e);\n+        } catch (TooManyLabelsException e)\n+        {\n+          throw new IllegalStateException(e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n+      }\n     }\n \n     @Override\n-    public Iterable<ConstraintDefinition> getConstraints( final Label label )\n-    {\n-        KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            TokenRead tokenRead = transaction.tokenRead();\n-            SchemaRead schemaRead = transaction.schemaRead();\n-            int labelId = tokenRead.nodeLabel( label.name() );\n-            if ( labelId == TokenRead.NO_TOKEN )\n-            {\n-                return emptyList();\n-            }\n-            return asConstraintDefinitions( schemaRead.constraintsGetForLabel( labelId ), tokenRead );\n+    public ConstraintDefinition createPropertyExistenceConstraint(RelationshipType type, String propertyKey)\n+    {\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          TokenWrite tokenWrite = transaction.tokenWrite();\n+          int typeId = tokenWrite.relationshipTypeGetOrCreateForName(type.name());\n+          int[] propertyKeyId = getOrCreatePropertyKeyIds(tokenWrite, propertyKey);\n+          transaction.schemaWrite().relationshipPropertyExistenceConstraintCreate(\n+              SchemaDescriptorFactory.forRelType(typeId, propertyKeyId));\n+          return new RelationshipPropertyExistenceConstraintDefinition(this, type, propertyKey);\n+        } catch (AlreadyConstrainedException | CreateConstraintFailureException |\n+            RepeatedPropertyInCompositeSchemaException e)\n+        {\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (IllegalTokenNameException e)\n+        {\n+          throw new IllegalArgumentException(e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n+      }\n     }\n \n     @Override\n-    public Iterable<ConstraintDefinition> getConstraints( RelationshipType type )\n-    {\n-        KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            TokenRead tokenRead = transaction.tokenRead();\n-            SchemaRead schemaRead = transaction.schemaRead();\n-            int typeId = tokenRead.relationshipType( type.name() );\n-            if ( typeId == TokenRead.NO_TOKEN )\n-            {\n-                return emptyList();\n-            }\n-            return asConstraintDefinitions( schemaRead.constraintsGetForRelationshipType( typeId ), tokenRead );\n-        }\n-    }\n-\n-    private static CapableIndexReference getIndexReference( SchemaRead schemaRead, TokenRead tokenRead,\n-            IndexDefinition index )\n-            throws SchemaRuleNotFoundException\n+    public void dropPropertyUniquenessConstraint(Label label, String[] properties)\n     {\n-        int labelId = tokenRead.nodeLabel( index.getLabel().name() );\n-        int[] propertyKeyIds = PropertyNameUtils.getPropertyIds( tokenRead, index.getPropertyKeys() );\n-        assertValidLabel( index.getLabel(), labelId );\n-        assertValidProperties( index.getPropertyKeys(), propertyKeyIds );\n-        CapableIndexReference reference = schemaRead.index( labelId, propertyKeyIds );\n-        if ( reference == CapableIndexReference.NO_INDEX )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          TokenRead tokenRead = transaction.tokenRead();\n+          int labelId = tokenRead.nodeLabel(label.name());\n+          int[] propertyKeyIds = PropertyNameUtils.getPropertyIds(tokenRead, properties);\n+          transaction.schemaWrite().constraintDrop(\n+              ConstraintDescriptorFactory.uniqueForLabel(labelId, propertyKeyIds));\n+        } catch (DropConstraintFailureException e)\n         {\n-            throw new SchemaRuleNotFoundException( SchemaRule.Kind.INDEX_RULE, forLabel( labelId, propertyKeyIds ) );\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n-\n-        return reference;\n+      }\n     }\n \n-    private static void assertValidLabel( Label label, int labelId )\n+    @Override\n+    public void dropNodeKeyConstraint(Label label, String[] properties)\n     {\n-        if ( labelId == TokenRead.NO_TOKEN )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          TokenRead tokenRead = transaction.tokenRead();\n+          int labelId = tokenRead.nodeLabel(label.name());\n+          int[] propertyKeyIds = PropertyNameUtils.getPropertyIds(tokenRead, properties);\n+          transaction.schemaWrite().constraintDrop(\n+              ConstraintDescriptorFactory.nodeKeyForLabel(labelId, propertyKeyIds));\n+        } catch (DropConstraintFailureException e)\n         {\n-            throw new NotFoundException( format( \"Label %s not found\", label.name() ) );\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n+      }\n     }\n \n-    private static void assertValidProperties( Iterable<String> properties, int[] propertyIds )\n+    @Override\n+    public void dropNodePropertyExistenceConstraint(Label label, String[] properties)\n     {\n-        for ( int i = 0; i < propertyIds.length; i++ )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n+        {\n+          TokenRead tokenRead = transaction.tokenRead();\n+          int labelId = tokenRead.nodeLabel(label.name());\n+          int[] propertyKeyIds = PropertyNameUtils.getPropertyIds(tokenRead, properties);\n+          transaction.schemaWrite().constraintDrop(\n+              ConstraintDescriptorFactory.existsForLabel(labelId, propertyKeyIds));\n+        } catch (DropConstraintFailureException e)\n         {\n-            if ( propertyIds[i] == TokenRead.NO_TOKEN )\n-            {\n-                throw new NotFoundException(\n-                        format( \"Property key %s not found\", Iterables.asArray( String.class, properties )[i] ) );\n-            }\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n+      }\n     }\n \n-    private Iterable<ConstraintDefinition> asConstraintDefinitions(\n-            Iterator<? extends ConstraintDescriptor> constraints,\n-            TokenRead tokenRead )\n+    @Override\n+    public void dropRelationshipPropertyExistenceConstraint(RelationshipType type, String propertyKey)\n     {\n-        // Intentionally create an eager list so that used statement can be closed\n-        List<ConstraintDefinition> definitions = new ArrayList<>();\n-\n-        while ( constraints.hasNext() )\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        try\n         {\n-            ConstraintDescriptor constraint = constraints.next();\n-            definitions.add( asConstraintDefinition( constraint, tokenRead ) );\n-        }\n-\n-        return definitions;\n-    }\n+          TokenRead tokenRead = transaction.tokenRead();\n \n-    private ConstraintDefinition asConstraintDefinition( ConstraintDescriptor constraint,\n-            TokenRead tokenRead )\n-    {\n-        // This was turned inside out. Previously a low-level constraint object would reference a public enum type\n-        // which made it impossible to break out the low-level component from kernel. There could be a lower level\n-        // constraint type introduced to mimic the public ConstraintType, but that would be a duplicate of it\n-        // essentially. Checking instanceof here is OKish since the objects it checks here are part of the\n-        // internal storage engine API.\n-        SilentTokenNameLookup lookup = new SilentTokenNameLookup( tokenRead );\n-        if ( constraint instanceof NodeExistenceConstraintDescriptor ||\n-             constraint instanceof NodeKeyConstraintDescriptor ||\n-             constraint instanceof UniquenessConstraintDescriptor )\n-        {\n-            SchemaDescriptor schemaDescriptor = constraint.schema();\n-            Label label = Label.label( lookup.labelGetName( schemaDescriptor.keyId() ) );\n-            String[] propertyKeys = Arrays.stream( schemaDescriptor.getPropertyIds() )\n-                    .mapToObj( lookup::propertyKeyGetName ).toArray( String[]::new );\n-            if ( constraint instanceof NodeExistenceConstraintDescriptor )\n-            {\n-                return new NodePropertyExistenceConstraintDefinition( actions, label, propertyKeys );\n-            }\n-            else if ( constraint instanceof UniquenessConstraintDescriptor )\n-            {\n-                return new UniquenessConstraintDefinition( actions, new IndexDefinitionImpl( actions, label,\n-                        propertyKeys, true ) );\n-            }\n-            else\n-            {\n-                return new NodeKeyConstraintDefinition( actions, new IndexDefinitionImpl( actions, label,\n-                        propertyKeys, true ) );\n-            }\n-        }\n-        else if ( constraint instanceof RelExistenceConstraintDescriptor )\n+          int typeId = tokenRead.relationshipType(type.name());\n+          int propertyKeyId = tokenRead.propertyKey(propertyKey);\n+          transaction.schemaWrite().constraintDrop(\n+              ConstraintDescriptorFactory.existsForRelType(typeId, propertyKeyId));\n+        } catch (DropConstraintFailureException e)\n         {\n-            RelationTypeSchemaDescriptor descriptor = (RelationTypeSchemaDescriptor) constraint.schema();\n-            return new RelationshipPropertyExistenceConstraintDefinition( actions,\n-                    RelationshipType.withName( lookup.relationshipTypeGetName( descriptor.getRelTypeId() ) ),\n-                    lookup.propertyKeyGetName( descriptor.getPropertyId() ) );\n+          throw new ConstraintViolationException(\n+              e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead())), e);\n+        } catch (InvalidTransactionTypeKernelException | SchemaKernelException e)\n+        {\n+          throw new ConstraintViolationException(e.getMessage(), e);\n         }\n-        throw new IllegalArgumentException( \"Unknown constraint \" + constraint );\n+      }\n     }\n \n-    private static KernelTransaction safeAcquireTransaction( Supplier<KernelTransaction> transactionSupplier )\n+    @Override\n+    public String getUserMessage(KernelException e)\n     {\n-        KernelTransaction transaction = transactionSupplier.get();\n-        if ( transaction.isTerminated() )\n-        {\n-            Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-            throw new TransactionTerminatedException( terminationReason );\n-        }\n-        return transaction;\n+      KernelTransaction transaction = safeAcquireTransaction(transactionSupplier);\n+      try (Statement ignore = transaction.acquireStatement())\n+      {\n+        return e.getUserMessage(new SilentTokenNameLookup(transaction.tokenRead()));\n+      }\n     }\n \n-    private static class GDBSchemaActions implements InternalSchemaActions\n+    @Override\n+    public void assertInOpenTransaction()\n     {\n-        private final Supplier<KernelTransaction> transactionSupplier;\n-\n-        GDBSchemaActions( Supplier<KernelTransaction> transactionSupplier )\n-        {\n-            this.transactionSupplier = transactionSupplier;\n-        }\n-\n-        @Override\n-        public IndexDefinition createIndexDefinition( Label label, String... propertyKeys )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    IndexDefinition indexDefinition = new IndexDefinitionImpl( this, label, propertyKeys, false );\n-                    TokenWrite tokenWrite = transaction.tokenWrite();\n-                    int labelId = tokenWrite.labelGetOrCreateForName( indexDefinition.getLabel().name() );\n-                    int[] propertyKeyIds = getOrCreatePropertyKeyIds( tokenWrite, indexDefinition );\n-                    LabelSchemaDescriptor descriptor = forLabel( labelId, propertyKeyIds );\n-                    transaction.schemaWrite().indexCreate( descriptor );\n-                    return indexDefinition;\n-                }\n-\n-                catch ( IllegalTokenNameException e )\n-                {\n-                    throw new IllegalArgumentException( e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public void dropIndexDefinitions( IndexDefinition indexDefinition )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    transaction.schemaWrite().indexDrop( getIndexReference(\n-                            transaction.schemaRead(), transaction.tokenRead(), indexDefinition ) );\n-                }\n-                catch ( NotFoundException e )\n-                {\n-                    // Silently ignore invalid label and property names\n-                }\n-                catch ( SchemaRuleNotFoundException | DropIndexFailureException e )\n-                {\n-                    throw new ConstraintViolationException( e.getUserMessage(\n-                            new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public ConstraintDefinition createPropertyUniquenessConstraint( IndexDefinition indexDefinition )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenWrite tokenWrite = transaction.tokenWrite();\n-                    int labelId = tokenWrite.labelGetOrCreateForName( indexDefinition.getLabel().name() );\n-                    int[] propertyKeyIds = getOrCreatePropertyKeyIds( tokenWrite, indexDefinition );\n-                    transaction.schemaWrite().uniquePropertyConstraintCreate(\n-                            forLabel( labelId, propertyKeyIds ) );\n-                    return new UniquenessConstraintDefinition( this, indexDefinition );\n-                }\n-                catch ( AlreadyConstrainedException | CreateConstraintFailureException | AlreadyIndexedException |\n-                        RepeatedPropertyInCompositeSchemaException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( IllegalTokenNameException e )\n-                {\n-                    throw new IllegalArgumentException( e );\n-                }\n-                catch ( TooManyLabelsException e )\n-                {\n-                    throw new IllegalStateException( e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public ConstraintDefinition createNodeKeyConstraint( IndexDefinition indexDefinition )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenWrite tokenWrite = transaction.tokenWrite();\n-                    int labelId = tokenWrite.labelGetOrCreateForName( indexDefinition.getLabel().name() );\n-                    int[] propertyKeyIds = getOrCreatePropertyKeyIds( tokenWrite, indexDefinition );\n-                    transaction.schemaWrite().nodeKeyConstraintCreate(\n-                            forLabel( labelId, propertyKeyIds ) );\n-                    return new NodeKeyConstraintDefinition( this, indexDefinition );\n-                }\n-                catch ( AlreadyConstrainedException | CreateConstraintFailureException | AlreadyIndexedException |\n-                        RepeatedPropertyInCompositeSchemaException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( IllegalTokenNameException e )\n-                {\n-                    throw new IllegalArgumentException( e );\n-                }\n-                catch ( TooManyLabelsException e )\n-                {\n-                    throw new IllegalStateException( e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public ConstraintDefinition createPropertyExistenceConstraint( Label label, String... propertyKeys )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenWrite tokenWrite = transaction.tokenWrite();\n-                    int labelId = tokenWrite.labelGetOrCreateForName( label.name() );\n-                    int[] propertyKeyIds = getOrCreatePropertyKeyIds( tokenWrite, propertyKeys );\n-                    transaction.schemaWrite().nodePropertyExistenceConstraintCreate(\n-                            forLabel( labelId, propertyKeyIds ) );\n-                    return new NodePropertyExistenceConstraintDefinition( this, label, propertyKeys );\n-                }\n-                catch ( AlreadyConstrainedException | CreateConstraintFailureException |\n-                        RepeatedPropertyInCompositeSchemaException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( IllegalTokenNameException e )\n-                {\n-                    throw new IllegalArgumentException( e );\n-                }\n-                catch ( TooManyLabelsException e )\n-                {\n-                    throw new IllegalStateException( e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public ConstraintDefinition createPropertyExistenceConstraint( RelationshipType type, String propertyKey )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenWrite tokenWrite = transaction.tokenWrite();\n-                    int typeId = tokenWrite.relationshipTypeGetOrCreateForName( type.name() );\n-                    int[] propertyKeyId = getOrCreatePropertyKeyIds( tokenWrite, propertyKey );\n-                    transaction.schemaWrite().relationshipPropertyExistenceConstraintCreate(\n-                            SchemaDescriptorFactory.forRelType( typeId, propertyKeyId ) );\n-                    return new RelationshipPropertyExistenceConstraintDefinition( this, type, propertyKey );\n-                }\n-                catch ( AlreadyConstrainedException | CreateConstraintFailureException |\n-                        RepeatedPropertyInCompositeSchemaException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( IllegalTokenNameException e )\n-                {\n-                    throw new IllegalArgumentException( e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public void dropPropertyUniquenessConstraint( Label label, String[] properties )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenRead tokenRead = transaction.tokenRead();\n-                    int labelId = tokenRead.nodeLabel( label.name() );\n-                    int[] propertyKeyIds = PropertyNameUtils.getPropertyIds( tokenRead, properties );\n-                    transaction.schemaWrite().constraintDrop(\n-                            ConstraintDescriptorFactory.uniqueForLabel( labelId, propertyKeyIds ) );\n-                }\n-                catch ( DropConstraintFailureException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public void dropNodeKeyConstraint( Label label, String[] properties )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenRead tokenRead = transaction.tokenRead();\n-                    int labelId = tokenRead.nodeLabel( label.name() );\n-                    int[] propertyKeyIds = PropertyNameUtils.getPropertyIds( tokenRead, properties );\n-                    transaction.schemaWrite().constraintDrop(\n-                            ConstraintDescriptorFactory.nodeKeyForLabel( labelId, propertyKeyIds ) );\n-                }\n-                catch ( DropConstraintFailureException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public void dropNodePropertyExistenceConstraint( Label label, String[] properties )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenRead tokenRead = transaction.tokenRead();\n-                    int labelId = tokenRead.nodeLabel( label.name() );\n-                    int[] propertyKeyIds = PropertyNameUtils.getPropertyIds( tokenRead, properties );\n-                    transaction.schemaWrite().constraintDrop(\n-                            ConstraintDescriptorFactory.existsForLabel( labelId, propertyKeyIds ) );\n-                }\n-                catch ( DropConstraintFailureException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public void dropRelationshipPropertyExistenceConstraint( RelationshipType type, String propertyKey )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                try\n-                {\n-                    TokenRead tokenRead = transaction.tokenRead();\n-\n-                    int typeId = tokenRead.relationshipType( type.name() );\n-                    int propertyKeyId = tokenRead.propertyKey( propertyKey );\n-                    transaction.schemaWrite().constraintDrop(\n-                            ConstraintDescriptorFactory.existsForRelType( typeId, propertyKeyId ) );\n-                }\n-                catch ( DropConstraintFailureException e )\n-                {\n-                    throw new ConstraintViolationException(\n-                            e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) ), e );\n-                }\n-                catch ( InvalidTransactionTypeKernelException | SchemaKernelException e )\n-                {\n-                    throw new ConstraintViolationException( e.getMessage(), e );\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public String getUserMessage( KernelException e )\n-        {\n-            KernelTransaction transaction = safeAcquireTransaction( transactionSupplier );\n-            try ( Statement ignore = transaction.acquireStatement() )\n-            {\n-                return e.getUserMessage( new SilentTokenNameLookup( transaction.tokenRead() ) );\n-            }\n-        }\n-\n-        @Override\n-        public void assertInOpenTransaction()\n-        {\n-            KernelTransaction transaction = transactionSupplier.get();\n-            if ( transaction.isTerminated() )\n-            {\n-                Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-                throw new TransactionTerminatedException( terminationReason );\n-            }\n-        }\n+      KernelTransaction transaction = transactionSupplier.get();\n+      if (transaction.isTerminated())\n+      {\n+        Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+        throw new TransactionTerminatedException(terminationReason);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 962
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
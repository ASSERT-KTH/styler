{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3502",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3502/IndexSample.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3502/IndexSample.java\nindex c2cff7556f2..6b7885d55c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3502/IndexSample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3502/IndexSample.java\n@@ -17,72 +17,73 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.schema;\n \n public final class IndexSample\n {\n-    private final long indexSize;\n-    private final long uniqueValues;\n-    private final long sampleSize;\n+  private final long indexSize;\n+  private final long uniqueValues;\n+  private final long sampleSize;\n \n-    public IndexSample()\n-    {\n-        this( 0, 0, 0 );\n-    }\n+  public IndexSample()\n+  {\n+    this(0, 0, 0);\n+  }\n \n-    public IndexSample( long indexSize, long uniqueValues, long sampleSize )\n-    {\n-        this.indexSize = indexSize;\n-        this.uniqueValues = uniqueValues;\n-        this.sampleSize = sampleSize;\n-    }\n+  public IndexSample(long indexSize, long uniqueValues, long sampleSize)\n+  {\n+    this.indexSize = indexSize;\n+    this.uniqueValues = uniqueValues;\n+    this.sampleSize = sampleSize;\n+  }\n \n-    public long indexSize()\n-    {\n-        return indexSize;\n-    }\n+  public long indexSize()\n+  {\n+    return indexSize;\n+  }\n \n-    public long uniqueValues()\n-    {\n-        return uniqueValues;\n-    }\n+  public long uniqueValues()\n+  {\n+    return uniqueValues;\n+  }\n \n-    public long sampleSize()\n-    {\n-        return sampleSize;\n-    }\n+  public long sampleSize()\n+  {\n+    return sampleSize;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        IndexSample that = (IndexSample) o;\n-        return indexSize == that.indexSize && uniqueValues == that.uniqueValues && sampleSize == that.sampleSize;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = (int) (indexSize ^ (indexSize >>> 32));\n-        result = 31 * result + (int) (uniqueValues ^ (uniqueValues >>> 32));\n-        result = 31 * result + (int) (sampleSize ^ (sampleSize >>> 32));\n-        return result;\n+      return false;\n     }\n+    IndexSample that = (IndexSample) o;\n+    return indexSize == that.indexSize && uniqueValues == that.uniqueValues && sampleSize == that.sampleSize;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"IndexSample{\" +\n-               \"indexSize=\" + indexSize +\n-               \", uniqueValues=\" + uniqueValues +\n-               \", sampleSize=\" + sampleSize +\n-               '}';\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) (indexSize ^ (indexSize >>> 32));\n+    result = 31 * result + (int) (uniqueValues ^ (uniqueValues >>> 32));\n+    result = 31 * result + (int) (sampleSize ^ (sampleSize >>> 32));\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"IndexSample{\" +\n+        \"indexSize=\" + indexSize +\n+        \", uniqueValues=\" + uniqueValues +\n+        \", sampleSize=\" + sampleSize +\n+        '}';\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3502/IndexSample.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3502/IndexSample.java\nindex c2cff7556f2..8ca11cb6bc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3502/IndexSample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3502/IndexSample.java\n@@ -59,30 +59,28 @@ public final class IndexSample\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        IndexSample that = (IndexSample) o;\n+\n+IndexSample that = (IndexSample) o;\n         return indexSize == that.indexSize && uniqueValues == that.uniqueValues && sampleSize == that.sampleSize;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        int result = (int) (indexSize ^ (indexSize >>> 32));\n-        result = 31 * result + (int) (uniqueValues ^ (uniqueValues >>> 32));\n-        result = 31 * result + (int) (sampleSize ^ (sampleSize >>> 32));\n+        int result = ( int) ( indexSize ^ ( indexSize >>> 32 ));\n+        result = 31 * result + ( int) ( uniqueValues ^ ( uniqueValues >>> 32 ));\n+        result = 31 * result + ( int) ( sampleSize ^ ( sampleSize >>> 32 ));\n         return result;\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"IndexSample{\" +\n-               \"indexSize=\" + indexSize +\n-               \", uniqueValues=\" + uniqueValues +\n-               \", sampleSize=\" + sampleSize +\n-               '}';\n+        return \"IndexSample{\" + \"indexSize=\" + indexSize + \", uniqueValues=\" + uniqueValues + \", sampleSize=\" + sampleSize + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3805",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "118",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3805/MembershipWaiter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3805/MembershipWaiter.java\nindex ccecb60a66c..cd07867cc24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3805/MembershipWaiter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3805/MembershipWaiter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.util.Set;\n@@ -51,106 +52,103 @@ import static java.util.concurrent.TimeUnit.SECONDS;\n  */\n public class MembershipWaiter\n {\n-    private final MemberId myself;\n-    private final JobScheduler jobScheduler;\n+  private final MemberId myself;\n+  private final JobScheduler jobScheduler;\n+  private final Supplier<DatabaseHealth> dbHealthSupplier;\n+  private final long maxCatchupLag;\n+  private long currentCatchupDelayInMs;\n+  private final Log log;\n+\n+  public MembershipWaiter(MemberId myself, JobScheduler jobScheduler, Supplier<DatabaseHealth> dbHealthSupplier,\n+                          long maxCatchupLag, LogProvider logProvider)\n+  {\n+    this.myself = myself;\n+    this.jobScheduler = jobScheduler;\n+    this.dbHealthSupplier = dbHealthSupplier;\n+    this.maxCatchupLag = maxCatchupLag;\n+    this.currentCatchupDelayInMs = maxCatchupLag;\n+    this.log = logProvider.getLog(getClass());\n+  }\n+\n+  CompletableFuture<Boolean> waitUntilCaughtUpMember(RaftMachine raft)\n+  {\n+    CompletableFuture<Boolean> catchUpFuture = new CompletableFuture<>();\n+\n+    Evaluator evaluator = new Evaluator(raft, catchUpFuture, dbHealthSupplier);\n+\n+    JobScheduler.JobHandle jobHandle = jobScheduler.schedule(\n+        new JobScheduler.Group(getClass().toString()),\n+        evaluator, currentCatchupDelayInMs, MILLISECONDS);\n+\n+    catchUpFuture.whenComplete((result, e) -> jobHandle.cancel(true));\n+\n+    return catchUpFuture;\n+  }\n+\n+  private class Evaluator implements Runnable\n+  {\n+    private final RaftMachine raft;\n+    private final CompletableFuture<Boolean> catchUpFuture;\n+\n+    private long lastLeaderCommit;\n     private final Supplier<DatabaseHealth> dbHealthSupplier;\n-    private final long maxCatchupLag;\n-    private long currentCatchupDelayInMs;\n-    private final Log log;\n \n-    public MembershipWaiter( MemberId myself, JobScheduler jobScheduler, Supplier<DatabaseHealth> dbHealthSupplier,\n-            long maxCatchupLag, LogProvider logProvider )\n+    private Evaluator(RaftMachine raft, CompletableFuture<Boolean> catchUpFuture,\n+                      Supplier<DatabaseHealth> dbHealthSupplier)\n     {\n-        this.myself = myself;\n-        this.jobScheduler = jobScheduler;\n-        this.dbHealthSupplier = dbHealthSupplier;\n-        this.maxCatchupLag = maxCatchupLag;\n-        this.currentCatchupDelayInMs = maxCatchupLag;\n-        this.log = logProvider.getLog( getClass() );\n+      this.raft = raft;\n+      this.catchUpFuture = catchUpFuture;\n+      this.lastLeaderCommit = raft.state().leaderCommit();\n+      this.dbHealthSupplier = dbHealthSupplier;\n     }\n \n-    CompletableFuture<Boolean> waitUntilCaughtUpMember( RaftMachine raft )\n+    @Override\n+    public void run()\n     {\n-        CompletableFuture<Boolean> catchUpFuture = new CompletableFuture<>();\n-\n-        Evaluator evaluator = new Evaluator( raft, catchUpFuture, dbHealthSupplier );\n-\n-        JobScheduler.JobHandle jobHandle = jobScheduler.schedule(\n-                new JobScheduler.Group( getClass().toString() ),\n-                evaluator, currentCatchupDelayInMs, MILLISECONDS );\n-\n-        catchUpFuture.whenComplete( ( result, e ) -> jobHandle.cancel( true ) );\n+      if (!dbHealthSupplier.get().isHealthy())\n+      {\n+        catchUpFuture.completeExceptionally(dbHealthSupplier.get().cause());\n+      } else if (iAmAVotingMember() && caughtUpWithLeader())\n+      {\n+        catchUpFuture.complete(Boolean.TRUE);\n+      } else\n+      {\n+        currentCatchupDelayInMs += SECONDS.toMillis(1);\n+        long longerDelay = currentCatchupDelayInMs < maxCatchupLag ? currentCatchupDelayInMs : maxCatchupLag;\n+        jobScheduler.schedule(new JobScheduler.Group(MembershipWaiter.class.toString()), this,\n+            longerDelay, MILLISECONDS);\n+      }\n+    }\n \n-        return catchUpFuture;\n+    private boolean iAmAVotingMember()\n+    {\n+      Set votingMembers = raft.state().votingMembers();\n+      boolean votingMember = votingMembers.contains(myself);\n+      if (!votingMember)\n+      {\n+        log.debug(\"I (%s) am not a voting member: [%s]\", myself, votingMembers);\n+      }\n+      return votingMember;\n     }\n \n-    private class Evaluator implements Runnable\n+    private boolean caughtUpWithLeader()\n     {\n-        private final RaftMachine raft;\n-        private final CompletableFuture<Boolean> catchUpFuture;\n-\n-        private long lastLeaderCommit;\n-        private final Supplier<DatabaseHealth> dbHealthSupplier;\n-\n-        private Evaluator( RaftMachine raft, CompletableFuture<Boolean> catchUpFuture,\n-                Supplier<DatabaseHealth> dbHealthSupplier )\n-        {\n-            this.raft = raft;\n-            this.catchUpFuture = catchUpFuture;\n-            this.lastLeaderCommit = raft.state().leaderCommit();\n-            this.dbHealthSupplier = dbHealthSupplier;\n-        }\n-\n-        @Override\n-        public void run()\n-        {\n-            if ( !dbHealthSupplier.get().isHealthy() )\n-            {\n-                catchUpFuture.completeExceptionally( dbHealthSupplier.get().cause() );\n-            }\n-            else if ( iAmAVotingMember() && caughtUpWithLeader() )\n-            {\n-                catchUpFuture.complete( Boolean.TRUE );\n-            }\n-            else\n-            {\n-                currentCatchupDelayInMs += SECONDS.toMillis( 1 );\n-                long longerDelay = currentCatchupDelayInMs < maxCatchupLag ? currentCatchupDelayInMs : maxCatchupLag;\n-                jobScheduler.schedule( new JobScheduler.Group( MembershipWaiter.class.toString() ), this,\n-                        longerDelay, MILLISECONDS );\n-            }\n-        }\n-\n-        private boolean iAmAVotingMember()\n-        {\n-            Set votingMembers = raft.state().votingMembers();\n-            boolean votingMember = votingMembers.contains( myself );\n-            if ( !votingMember )\n-            {\n-                log.debug( \"I (%s) am not a voting member: [%s]\", myself, votingMembers );\n-            }\n-            return votingMember;\n-        }\n-\n-        private boolean caughtUpWithLeader()\n-        {\n-            boolean caughtUpWithLeader = false;\n-\n-            ExposedRaftState state = raft.state();\n-            long localCommit = state.commitIndex();\n-            lastLeaderCommit = state.leaderCommit();\n-            if ( lastLeaderCommit != -1 )\n-            {\n-                caughtUpWithLeader = localCommit == lastLeaderCommit;\n-                long gap = lastLeaderCommit - localCommit;\n-                log.info( \"%s Catchup: %d => %d (%d behind)\", myself, localCommit, lastLeaderCommit, gap );\n-            }\n-            else\n-            {\n-                log.info( \"Leader commit unknown\" );\n-            }\n-            return caughtUpWithLeader;\n-        }\n+      boolean caughtUpWithLeader = false;\n+\n+      ExposedRaftState state = raft.state();\n+      long localCommit = state.commitIndex();\n+      lastLeaderCommit = state.leaderCommit();\n+      if (lastLeaderCommit != -1)\n+      {\n+        caughtUpWithLeader = localCommit == lastLeaderCommit;\n+        long gap = lastLeaderCommit - localCommit;\n+        log.info(\"%s Catchup: %d => %d (%d behind)\", myself, localCommit, lastLeaderCommit, gap);\n+      } else\n+      {\n+        log.info(\"Leader commit unknown\");\n+      }\n+      return caughtUpWithLeader;\n     }\n+  }\n \n }\n",
            "diff_size": 143
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3805/MembershipWaiter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3805/MembershipWaiter.java\nindex ccecb60a66c..b203962b72c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3805/MembershipWaiter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3805/MembershipWaiter.java\n@@ -72,16 +72,10 @@ public class MembershipWaiter\n     CompletableFuture<Boolean> waitUntilCaughtUpMember( RaftMachine raft )\n     {\n         CompletableFuture<Boolean> catchUpFuture = new CompletableFuture<>();\n-\n-        Evaluator evaluator = new Evaluator( raft, catchUpFuture, dbHealthSupplier );\n-\n-        JobScheduler.JobHandle jobHandle = jobScheduler.schedule(\n-                new JobScheduler.Group( getClass().toString() ),\n-                evaluator, currentCatchupDelayInMs, MILLISECONDS );\n-\n-        catchUpFuture.whenComplete( ( result, e ) -> jobHandle.cancel( true ) );\n-\n-        return catchUpFuture;\n+Evaluator evaluator = new Evaluator( raft, catchUpFuture, dbHealthSupplier );\n+JobScheduler.JobHandle jobHandle = jobScheduler.schedule( new JobScheduler.Group( getClass().toString() ), evaluator, currentCatchupDelayInMs, MILLISECONDS );\n+catchUpFuture.whenComplete( ( result, e ) -> jobHandle.cancel( true ) );\n+return catchUpFuture;\n     }\n \n     private class Evaluator implements Runnable\n@@ -92,8 +86,7 @@ public class MembershipWaiter\n         private long lastLeaderCommit;\n         private final Supplier<DatabaseHealth> dbHealthSupplier;\n \n-        private Evaluator( RaftMachine raft, CompletableFuture<Boolean> catchUpFuture,\n-                Supplier<DatabaseHealth> dbHealthSupplier )\n+        private Evaluator( RaftMachine raft, CompletableFuture<Boolean> catchUpFuture, Supplier<DatabaseHealth> dbHealthSupplier )\n         {\n             this.raft = raft;\n             this.catchUpFuture = catchUpFuture;\n@@ -118,7 +111,7 @@ public class MembershipWaiter\n                 long longerDelay = currentCatchupDelayInMs < maxCatchupLag ? currentCatchupDelayInMs : maxCatchupLag;\n                 jobScheduler.schedule( new JobScheduler.Group( MembershipWaiter.class.toString() ), this,\n                         longerDelay, MILLISECONDS );\n-            }\n+    }\n         }\n \n         private boolean iAmAVotingMember()\n@@ -129,7 +122,8 @@ public class MembershipWaiter\n             {\n                 log.debug( \"I (%s) am not a voting member: [%s]\", myself, votingMembers );\n             }\n-            return votingMember;\n+\n+return votingMember;\n         }\n \n         private boolean caughtUpWithLeader()\n@@ -149,8 +143,8 @@ public class MembershipWaiter\n             {\n                 log.info( \"Leader commit unknown\" );\n             }\n-            return caughtUpWithLeader;\n+\n+return caughtUpWithLeader;\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
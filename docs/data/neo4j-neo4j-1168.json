{
    "project_name": "neo4j-neo4j",
    "error_id": "1168",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1168/EntityImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1168/EntityImporter.java\nindex 073f106e6da..5ae991dd42c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1168/EntityImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1168/EntityImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import java.util.Arrays;\n@@ -69,44 +70,44 @@ abstract class EntityImporter extends InputEntityVisitor.Adapter\n     private final DynamicRecordAllocator dynamicArrayRecordAllocator;\n     protected final PageCursorTracer cursorTracer;\n \n-    EntityImporter( BatchingNeoStores stores, Monitor monitor, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    EntityImporter(BatchingNeoStores stores, Monitor monitor, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n-        this.cursorTracer = pageCacheTracer.createPageCursorTracer( ENTITY_IMPORTER_TAG );\n+        this.cursorTracer = pageCacheTracer.createPageCursorTracer(ENTITY_IMPORTER_TAG);\n         this.propertyStore = stores.getPropertyStore();\n         this.propertyKeyTokenRepository = stores.getPropertyKeyRepository();\n         this.monitor = monitor;\n         this.memoryTracker = memoryTracker;\n-        for ( int i = 0; i < propertyBlocks.length; i++ )\n+        for (int i = 0; i < propertyBlocks.length; i++)\n         {\n             propertyBlocks[i] = new PropertyBlock();\n         }\n         this.propertyRecord = propertyStore.newRecord();\n-        this.propertyIds = new BatchingIdGetter( propertyStore );\n-        this.stringPropertyIds = new BatchingIdGetter( propertyStore.getStringStore(), propertyStore.getStringStore().getRecordsPerPage() );\n-        this.dynamicStringRecordAllocator = new StandardDynamicRecordAllocator( stringPropertyIds, propertyStore.getStringStore().getRecordDataSize() );\n-        this.arrayPropertyIds = new BatchingIdGetter( propertyStore.getArrayStore(), propertyStore.getArrayStore().getRecordsPerPage() );\n-        this.dynamicArrayRecordAllocator = new StandardDynamicRecordAllocator( arrayPropertyIds, propertyStore.getStringStore().getRecordDataSize() );\n-        this.propertyUpdateCursor = propertyStore.openPageCursorForWriting( 0, cursorTracer );\n+        this.propertyIds = new BatchingIdGetter(propertyStore);\n+        this.stringPropertyIds = new BatchingIdGetter(propertyStore.getStringStore(), propertyStore.getStringStore().getRecordsPerPage());\n+        this.dynamicStringRecordAllocator = new StandardDynamicRecordAllocator(stringPropertyIds, propertyStore.getStringStore().getRecordDataSize());\n+        this.arrayPropertyIds = new BatchingIdGetter(propertyStore.getArrayStore(), propertyStore.getArrayStore().getRecordsPerPage());\n+        this.dynamicArrayRecordAllocator = new StandardDynamicRecordAllocator(arrayPropertyIds, propertyStore.getStringStore().getRecordDataSize());\n+        this.propertyUpdateCursor = propertyStore.openPageCursorForWriting(0, cursorTracer);\n     }\n \n     @Override\n-    public boolean property( String key, Object value )\n+    public boolean property(String key, Object value)\n     {\n         assert !hasPropertyId;\n-        return property( propertyKeyTokenRepository.getOrCreateId( key ), value );\n+        return property(propertyKeyTokenRepository.getOrCreateId(key), value);\n     }\n \n     @Override\n-    public boolean property( int propertyKeyId, Object value )\n+    public boolean property(int propertyKeyId, Object value)\n     {\n         assert !hasPropertyId;\n-        encodeProperty( nextPropertyBlock(), propertyKeyId, value );\n+        encodeProperty(nextPropertyBlock(), propertyKeyId, value);\n         entityPropertyCount++;\n         return true;\n     }\n \n     @Override\n-    public boolean propertyId( long nextProp )\n+    public boolean propertyId(long nextProp)\n     {\n         assert !hasPropertyId;\n         hasPropertyId = true;\n@@ -125,10 +126,10 @@ abstract class EntityImporter extends InputEntityVisitor.Adapter\n \n     private PropertyBlock nextPropertyBlock()\n     {\n-        if ( propertyBlocksCursor == propertyBlocks.length )\n+        if (propertyBlocksCursor == propertyBlocks.length)\n         {\n-            propertyBlocks = Arrays.copyOf( propertyBlocks, propertyBlocksCursor * 2 );\n-            for ( int i = propertyBlocksCursor; i < propertyBlocks.length; i++ )\n+            propertyBlocks = Arrays.copyOf(propertyBlocks, propertyBlocksCursor * 2);\n+            for (int i = propertyBlocksCursor; i < propertyBlocks.length; i++)\n             {\n                 propertyBlocks[i] = new PropertyBlock();\n             }\n@@ -136,48 +137,48 @@ abstract class EntityImporter extends InputEntityVisitor.Adapter\n         return propertyBlocks[propertyBlocksCursor++];\n     }\n \n-    private void encodeProperty( PropertyBlock block, int key, Object property )\n+    private void encodeProperty(PropertyBlock block, int key, Object property)\n     {\n-        Value value = property instanceof Value ? (Value) property : Values.of( property );\n-        PropertyStore.encodeValue( block, key, value, dynamicStringRecordAllocator, dynamicArrayRecordAllocator, propertyStore.allowStorePointsAndTemporal(),\n-                cursorTracer, memoryTracker );\n+        Value value = property instanceof Value ? (Value) property : Values.of(property);\n+        PropertyStore.encodeValue(block, key, value, dynamicStringRecordAllocator, dynamicArrayRecordAllocator, propertyStore.allowStorePointsAndTemporal(),\n+          cursorTracer, memoryTracker);\n     }\n \n-    long createAndWritePropertyChain( PageCursorTracer cursorTracer )\n+    long createAndWritePropertyChain(PageCursorTracer cursorTracer)\n     {\n-        if ( hasPropertyId )\n+        if (hasPropertyId)\n         {\n             return propertyId;\n         }\n \n-        if ( propertyBlocksCursor == 0 )\n+        if (propertyBlocksCursor == 0)\n         {\n             return Record.NO_NEXT_PROPERTY.longValue();\n         }\n \n-        PropertyRecord currentRecord = propertyRecord( propertyIds.nextId( cursorTracer ) );\n+        PropertyRecord currentRecord = propertyRecord(propertyIds.nextId(cursorTracer));\n         long firstRecordId = currentRecord.getId();\n-        for ( int i = 0; i < propertyBlocksCursor; i++ )\n+        for (int i = 0; i < propertyBlocksCursor; i++)\n         {\n             PropertyBlock block = propertyBlocks[i];\n-            if ( currentRecord.size() + block.getSize() > PropertyType.getPayloadSize() )\n+            if (currentRecord.size() + block.getSize() > PropertyType.getPayloadSize())\n             {\n                 // This record is full or couldn't fit this block, write it to property store\n-                long nextPropertyId = propertyIds.nextId( cursorTracer );\n+                long nextPropertyId = propertyIds.nextId(cursorTracer);\n                 long prevId = currentRecord.getId();\n-                currentRecord.setNextProp( nextPropertyId );\n-                propertyStore.updateRecord( currentRecord, IGNORE, propertyUpdateCursor, cursorTracer );\n-                currentRecord = propertyRecord( nextPropertyId );\n-                currentRecord.setPrevProp( prevId );\n+                currentRecord.setNextProp(nextPropertyId);\n+                propertyStore.updateRecord(currentRecord, IGNORE, propertyUpdateCursor, cursorTracer);\n+                currentRecord = propertyRecord(nextPropertyId);\n+                currentRecord.setPrevProp(prevId);\n             }\n \n             // Add this block, there's room for it\n-            currentRecord.addPropertyBlock( block );\n+            currentRecord.addPropertyBlock(block);\n         }\n \n-        if ( currentRecord.size() > 0 )\n+        if (currentRecord.size() > 0)\n         {\n-            propertyStore.updateRecord( currentRecord, IGNORE, propertyUpdateCursor, cursorTracer );\n+            propertyStore.updateRecord(currentRecord, IGNORE, propertyUpdateCursor, cursorTracer);\n         }\n \n         return firstRecordId;\n@@ -185,12 +186,12 @@ abstract class EntityImporter extends InputEntityVisitor.Adapter\n \n     protected abstract PrimitiveRecord primitiveRecord();\n \n-    private PropertyRecord propertyRecord( long nextPropertyId )\n+    private PropertyRecord propertyRecord(long nextPropertyId)\n     {\n         propertyRecord.clear();\n-        propertyRecord.setInUse( true );\n-        propertyRecord.setId( nextPropertyId );\n-        primitiveRecord().setIdTo( propertyRecord );\n+        propertyRecord.setInUse(true);\n+        propertyRecord.setId(nextPropertyId);\n+        primitiveRecord().setIdTo(propertyRecord);\n         propertyRecord.setCreated();\n         return propertyRecord;\n     }\n@@ -198,23 +199,23 @@ abstract class EntityImporter extends InputEntityVisitor.Adapter\n     @Override\n     public void close()\n     {\n-        monitor.propertiesImported( propertyCount );\n+        monitor.propertiesImported(propertyCount);\n         propertyUpdateCursor.close();\n     }\n \n     void freeUnusedIds()\n     {\n-        freeUnusedIds( propertyStore, propertyIds, cursorTracer );\n-        freeUnusedIds( propertyStore.getStringStore(), stringPropertyIds, cursorTracer );\n-        freeUnusedIds( propertyStore.getArrayStore(), arrayPropertyIds, cursorTracer );\n+        freeUnusedIds(propertyStore, propertyIds, cursorTracer);\n+        freeUnusedIds(propertyStore.getStringStore(), stringPropertyIds, cursorTracer);\n+        freeUnusedIds(propertyStore.getArrayStore(), arrayPropertyIds, cursorTracer);\n     }\n \n-    static void freeUnusedIds( CommonAbstractStore<?,?> store, BatchingIdGetter idBatch, PageCursorTracer cursorTracer )\n+    static void freeUnusedIds(CommonAbstractStore<?, ?> store, BatchingIdGetter idBatch, PageCursorTracer cursorTracer)\n     {\n         // Free unused property ids still in the last pre-allocated batch\n-        try ( Marker marker = store.getIdGenerator().marker( cursorTracer ) )\n+        try (Marker marker = store.getIdGenerator().marker(cursorTracer))\n         {\n-            idBatch.visitUnused( marker::markDeleted, cursorTracer );\n+            idBatch.visitUnused(marker::markDeleted, cursorTracer);\n         }\n     }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
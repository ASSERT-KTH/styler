{
    "project_name": "neo4j-neo4j",
    "error_id": "859",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "209",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "236",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "247",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "277",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "283",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "287",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/859/Exceptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/859/Exceptions.java\nindex 917d39ea95c..613bbe01801 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/859/Exceptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/859/Exceptions.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.helpers;\n \n import java.io.PrintWriter;\n@@ -32,13 +33,13 @@ import static org.neo4j.function.Predicates.instanceOfAny;\n \n public final class Exceptions\n {\n-    public static final UncaughtExceptionHandler SILENT_UNCAUGHT_EXCEPTION_HANDLER = ( t, e ) ->\n+    public static final UncaughtExceptionHandler SILENT_UNCAUGHT_EXCEPTION_HANDLER = (t, e) ->\n     {   // Don't print about it\n     };\n \n     private Exceptions()\n     {\n-        throw new AssertionError( \"No instances\" );\n+        throw new AssertionError(\"No instances\");\n     }\n \n     /**\n@@ -51,7 +52,7 @@ public final class Exceptions\n      *   throw new RuntimeException(e);\n      * }\n      * </pre>\n-     *\n+     * <p>\n      * This will only wrap checked exception in a {@code RuntimeException}. Do note that if the segment {@code common code}\n      * is missing, it's preferable to use this instead:\n      *\n@@ -66,14 +67,14 @@ public final class Exceptions\n      *\n      * @param exception to rethrow.\n      */\n-    public static void throwIfUnchecked( Throwable exception )\n+    public static void throwIfUnchecked(Throwable exception)\n     {\n-        Objects.requireNonNull( exception );\n-        if ( exception instanceof RuntimeException )\n+        Objects.requireNonNull(exception);\n+        if (exception instanceof RuntimeException)\n         {\n             throw (RuntimeException) exception;\n         }\n-        if ( exception instanceof Error )\n+        if (exception instanceof Error)\n         {\n             throw (Error) exception;\n         }\n@@ -89,7 +90,7 @@ public final class Exceptions\n      *   throw new RuntimeException(e);\n      * }\n      * </pre>\n-     *\n+     * <p>\n      * This will filter out all {@code BarExceptions} and wrap the rest in {@code RuntimeException}. Do note that if the\n      * segment {@code common code} is missing, it's preferable to use this instead:\n      *\n@@ -102,16 +103,16 @@ public final class Exceptions\n      * </pre>\n      *\n      * @param exception to rethrow.\n-     * @param clazz a {@link Class} instance to check against.\n-     * @param <T> type thrown, if thrown at all.\n+     * @param clazz     a {@link Class} instance to check against.\n+     * @param <T>       type thrown, if thrown at all.\n      * @throws T if {@code exception} is an instance of {@code clazz}.\n      */\n-    public static <T extends Throwable> void throwIfInstanceOf( Throwable exception, Class<T> clazz ) throws T\n+    public static <T extends Throwable> void throwIfInstanceOf(Throwable exception, Class<T> clazz) throws T\n     {\n-        Objects.requireNonNull( exception );\n-        if ( clazz.isInstance( exception ) )\n+        Objects.requireNonNull(exception);\n+        if (clazz.isInstance(exception))\n         {\n-            throw clazz.cast( exception );\n+            throw clazz.cast(exception);\n         }\n     }\n \n@@ -121,34 +122,34 @@ public final class Exceptions\n      * @param e exception to start searching from.\n      * @return the first exception found matching the predicate.\n      */\n-    public static Optional<Throwable> findCauseOrSuppressed( Throwable e, Predicate<Throwable> predicate )\n+    public static Optional<Throwable> findCauseOrSuppressed(Throwable e, Predicate<Throwable> predicate)\n     {\n-        if ( e == null )\n+        if (e == null)\n         {\n             return Optional.empty();\n         }\n-        if ( predicate.test( e ) )\n+        if (predicate.test(e))\n         {\n-            return Optional.of( e );\n+            return Optional.of(e);\n         }\n-        if ( e.getCause() != null && e.getCause() != e )\n+        if (e.getCause() != null && e.getCause() != e)\n         {\n-            Optional<Throwable> cause = findCauseOrSuppressed( e.getCause(), predicate );\n-            if ( cause.isPresent() )\n+            Optional<Throwable> cause = findCauseOrSuppressed(e.getCause(), predicate);\n+            if (cause.isPresent())\n             {\n                 return cause;\n             }\n         }\n-        if ( e.getSuppressed() != null )\n+        if (e.getSuppressed() != null)\n         {\n-            for ( Throwable suppressed : e.getSuppressed() )\n+            for (Throwable suppressed : e.getSuppressed())\n             {\n-                if ( suppressed == e )\n+                if (suppressed == e)\n                 {\n                     continue;\n                 }\n-                Optional<Throwable> cause = findCauseOrSuppressed( suppressed, predicate );\n-                if ( cause.isPresent() )\n+                Optional<Throwable> cause = findCauseOrSuppressed(suppressed, predicate);\n+                if (cause.isPresent())\n                 {\n                     return cause;\n                 }\n@@ -157,67 +158,65 @@ public final class Exceptions\n         return Optional.empty();\n     }\n \n-    public static StackTraceElement[] getPartialStackTrace( int from, int to )\n+    public static StackTraceElement[] getPartialStackTrace(int from, int to)\n     {\n         return StackWalker.getInstance().walk(\n-                s -> s.skip( from ).limit( to - from ).map( StackWalker.StackFrame::toStackTraceElement )\n-                        .toArray( StackTraceElement[]::new ) );\n+          s -> s.skip(from).limit(to - from).map(StackWalker.StackFrame::toStackTraceElement)\n+            .toArray(StackTraceElement[]::new));\n     }\n \n-    public static String stringify( Throwable throwable )\n+    public static String stringify(Throwable throwable)\n     {\n-        if ( throwable == null )\n+        if (throwable == null)\n         {\n             return null;\n         }\n \n         StringWriter stringWriter = new StringWriter();\n-        throwable.printStackTrace( new PrintWriter( stringWriter ) );\n+        throwable.printStackTrace(new PrintWriter(stringWriter));\n         return stringWriter.toString();\n     }\n \n-    public static String stringify( Thread thread, StackTraceElement[] elements )\n+    public static String stringify(Thread thread, StackTraceElement[] elements)\n     {\n         StringBuilder builder = new StringBuilder()\n-                .append( '\"' ).append( thread.getName() ).append( '\"' ).append( thread.isDaemon() ? \" daemon\" : \"\" )\n-                .append( \" prio=\" ).append( thread.getPriority() )\n-                .append( \" tid=\" ).append( thread.getId() )\n-                .append( ' ' ).append( thread.getState().name().toLowerCase() ).append( '\\n' );\n-        builder.append( \"   \" ).append( State.class.getName() ).append( \": \" )\n-                .append( thread.getState().name().toUpperCase() ).append( '\\n' );\n-        for ( StackTraceElement element : elements )\n+          .append('\"').append(thread.getName()).append('\"').append(thread.isDaemon() ? \" daemon\" : \"\")\n+          .append(\" prio=\").append(thread.getPriority())\n+          .append(\" tid=\").append(thread.getId())\n+          .append(' ').append(thread.getState().name().toLowerCase()).append('\\n');\n+        builder.append(\"   \").append(State.class.getName()).append(\": \")\n+          .append(thread.getState().name().toUpperCase()).append('\\n');\n+        for (StackTraceElement element : elements)\n         {\n-            builder.append( \"      at \" ).append( element.getClassName() ).append( '.' )\n-                    .append( element.getMethodName() );\n-            if ( element.isNativeMethod() )\n+            builder.append(\"      at \").append(element.getClassName()).append('.')\n+              .append(element.getMethodName());\n+            if (element.isNativeMethod())\n             {\n-                builder.append( \"(Native method)\" );\n-            }\n-            else if ( element.getFileName() == null )\n+                builder.append(\"(Native method)\");\n+            } else if (element.getFileName() == null)\n             {\n-                builder.append( \"(Unknown source)\" );\n-            }\n-            else\n+                builder.append(\"(Unknown source)\");\n+            } else\n             {\n-                builder.append( '(' ).append( element.getFileName() ).append( ':' ).append( element.getLineNumber() )\n-                        .append( ')' );\n+                builder.append('(').append(element.getFileName()).append(':').append(element.getLineNumber())\n+                  .append(')');\n             }\n-            builder.append( \"\\n\" );\n+            builder.append(\"\\n\");\n         }\n         return builder.toString();\n     }\n \n-    public static boolean contains( final Throwable cause, final String containsMessage, final Class<?>... anyOfTheseClasses )\n+    public static boolean contains(final Throwable cause, final String containsMessage, final Class<?>... anyOfTheseClasses)\n     {\n-        final Predicate<Throwable> anyOfClasses = instanceOfAny( anyOfTheseClasses );\n-        return contains( cause, item -> item.getMessage() != null && item.getMessage().contains( containsMessage ) && anyOfClasses.test( item ) );\n+        final Predicate<Throwable> anyOfClasses = instanceOfAny(anyOfTheseClasses);\n+        return contains(cause, item -> item.getMessage() != null && item.getMessage().contains(containsMessage) && anyOfClasses.test(item));\n     }\n \n-    public static boolean contains( Throwable cause, Predicate<Throwable> toLookFor )\n+    public static boolean contains(Throwable cause, Predicate<Throwable> toLookFor)\n     {\n-        while ( cause != null )\n+        while (cause != null)\n         {\n-            if ( toLookFor.test( cause ) )\n+            if (toLookFor.test(cause))\n             {\n                 return true;\n             }\n@@ -227,72 +226,68 @@ public final class Exceptions\n     }\n \n     private static final Field THROWABLE_MESSAGE_FIELD;\n+\n     static\n     {\n         try\n         {\n-            THROWABLE_MESSAGE_FIELD = Throwable.class.getDeclaredField( \"detailMessage\" );\n-            THROWABLE_MESSAGE_FIELD.setAccessible( true );\n-        }\n-        catch ( Exception e )\n+            THROWABLE_MESSAGE_FIELD = Throwable.class.getDeclaredField(\"detailMessage\");\n+            THROWABLE_MESSAGE_FIELD.setAccessible(true);\n+        } catch (Exception e)\n         {\n-            throw new LinkageError( \"Could not get Throwable message field\", e );\n+            throw new LinkageError(\"Could not get Throwable message field\", e);\n         }\n     }\n \n-    public static <T extends Throwable> T withMessage( T cause, String message )\n+    public static <T extends Throwable> T withMessage(T cause, String message)\n     {\n         try\n         {\n-            THROWABLE_MESSAGE_FIELD.set( cause, message );\n-        }\n-        catch ( IllegalArgumentException | IllegalAccessException e )\n+            THROWABLE_MESSAGE_FIELD.set(cause, message);\n+        } catch (IllegalArgumentException | IllegalAccessException e)\n         {\n-            throw new RuntimeException( e );\n+            throw new RuntimeException(e);\n         }\n         return cause;\n     }\n \n-    public static <T extends Throwable> T chain( T initial, T current )\n+    public static <T extends Throwable> T chain(T initial, T current)\n     {\n-        if ( initial == null )\n+        if (initial == null)\n         {\n             return current;\n         }\n \n-        if ( current != null && initial != current )\n+        if (current != null && initial != current)\n         {\n-            initial.addSuppressed( current );\n+            initial.addSuppressed(current);\n         }\n         return initial;\n     }\n \n-    public static <EXCEPTION extends Throwable> EXCEPTION disguiseException( Class<EXCEPTION> disguise, String message, Throwable disguised )\n+    public static <EXCEPTION extends Throwable> EXCEPTION disguiseException(Class<EXCEPTION> disguise, String message, Throwable disguised)\n     {\n         EXCEPTION exception;\n         try\n         {\n             try\n             {\n-                exception = disguise.getConstructor( String.class, Throwable.class )\n-                        .newInstance( message, disguised );\n-            }\n-            catch ( NoSuchMethodException e )\n+                exception = disguise.getConstructor(String.class, Throwable.class)\n+                  .newInstance(message, disguised);\n+            } catch (NoSuchMethodException e)\n             {\n-                exception = disguise.getConstructor( String.class ).newInstance( message );\n+                exception = disguise.getConstructor(String.class).newInstance(message);\n                 try\n                 {\n-                    exception.initCause( disguised );\n-                }\n-                catch ( IllegalStateException ignored )\n+                    exception.initCause(disguised);\n+                } catch (IllegalStateException ignored)\n                 {\n                 }\n             }\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new Error( message + \". An exception of type \" + disguise.getName() +\n-                    \" was requested to be thrown but that proved impossible\", e );\n+            throw new Error(message + \". An exception of type \" + disguise.getName() +\n+              \" was requested to be thrown but that proved impossible\", e);\n         }\n         return exception;\n     }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
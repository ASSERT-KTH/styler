{
    "project_name": "OpenEMS-openems",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "152",
                "column": "44",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "\t@Override\n\tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n\t\treturn new ModbusSlaveTable( //\n\t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n\t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n\t\t);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/26/MeterWeidmueller525.java\nindex 369a57319bd..6c379d50079 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/26/MeterWeidmueller525.java\n@@ -149,7 +149,7 @@ public class MeterWeidmueller525 extends AbstractOpenemsModbusComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "152",
                    "column": "32",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/26/MeterWeidmueller525.java\nindex 369a57319bd..31e5d40df2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/26/MeterWeidmueller525.java\n@@ -31,128 +31,128 @@ import io.openems.edge.meter.api.SymmetricMeter;\n @Designate(ocd = Config.class, factory = true)\n @Component(name = \"Meter.Weidmueller.525\", immediate = true, configurationPolicy = ConfigurationPolicy.REQUIRE)\n public class MeterWeidmueller525 extends AbstractOpenemsModbusComponent\n-\t\timplements AsymmetricMeter, SymmetricMeter, OpenemsComponent, ModbusSlave {\n+    implements AsymmetricMeter, SymmetricMeter, OpenemsComponent, ModbusSlave {\n \n-\tprivate MeterType meterType = MeterType.PRODUCTION;\n+  private MeterType meterType = MeterType.PRODUCTION;\n \n-\t@Reference\n-\tprotected ConfigurationAdmin cm;\n+  @Reference\n+  protected ConfigurationAdmin cm;\n \n-\tpublic MeterWeidmueller525() {\n-\t\tsuper(//\n-\t\t\t\tOpenemsComponent.ChannelId.values(), //\n-\t\t\t\tSymmetricMeter.ChannelId.values(), //\n-\t\t\t\tAsymmetricMeter.ChannelId.values(), //\n-\t\t\t\tWeidmuellerChannelId.values() //\n-\t\t);\n-\t}\n+  public MeterWeidmueller525() {\n+    super(//\n+        OpenemsComponent.ChannelId.values(), //\n+        SymmetricMeter.ChannelId.values(), //\n+        AsymmetricMeter.ChannelId.values(), //\n+        WeidmuellerChannelId.values() //\n+    );\n+  }\n \n-\t@Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MANDATORY)\n-\tprotected void setModbus(BridgeModbus modbus) {\n-\t\tsuper.setModbus(modbus);\n-\t}\n+  @Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MANDATORY)\n+  protected void setModbus(BridgeModbus modbus) {\n+    super.setModbus(modbus);\n+  }\n \n-\t@Activate\n-\tvoid activate(ComponentContext context, Config config) throws OpenemsException {\n-\t\tthis.meterType = config.type();\n+  @Activate\n+  void activate(ComponentContext context, Config config) throws OpenemsException {\n+    this.meterType = config.type();\n \n-\t\tif (super.activate(context, config.id(), config.alias(), config.enabled(), config.modbusUnitId(), this.cm,\n-\t\t\t\t\"Modbus\", config.modbus_id())) {\n-\t\t\treturn;\n-\t\t}\n-\t}\n+    if (super.activate(context, config.id(), config.alias(), config.enabled(), config.modbusUnitId(), this.cm,\n+        \"Modbus\", config.modbus_id())) {\n+      return;\n+    }\n+  }\n \n-\t@Deactivate\n-\tprotected void deactivate() {\n-\t\tsuper.deactivate();\n-\t}\n+  @Deactivate\n+  protected void deactivate() {\n+    super.deactivate();\n+  }\n \n-\t@Override\n-\tpublic MeterType getMeterType() {\n-\t\treturn this.meterType;\n-\t}\n+  @Override\n+  public MeterType getMeterType() {\n+    return this.meterType;\n+  }\n \n-\t@Override\n-\tprotected ModbusProtocol defineModbusProtocol() throws OpenemsException {\n-\t\treturn new ModbusProtocol(this, //\n-\t\t\t\tnew FC3ReadRegistersTask(19000, Priority.HIGH, //\n-\t\t\t\t\t\tm(new FloatDoublewordElement(19000)) //\n-\t\t\t\t\t\t\t\t.m(AsymmetricMeter.ChannelId.VOLTAGE_L1, ElementToChannelConverter.DIRECT_1_TO_1) //\n-\t\t\t\t\t\t\t\t.m(SymmetricMeter.ChannelId.VOLTAGE, ElementToChannelConverter.DIRECT_1_TO_1) //\n-\t\t\t\t\t\t\t\t.build(), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.VOLTAGE_L2, new FloatDoublewordElement(19002)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.VOLTAGE_L3, new FloatDoublewordElement(19004)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.VOLTAGE_L1_L2, new FloatDoublewordElement(19006)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.VOLTAGE_L2_L3, new FloatDoublewordElement(19008)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.VOLTAGE_L1_L3, new FloatDoublewordElement(19010)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.CURRENT_L1, new FloatDoublewordElement(19012)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.CURRENT_L2, new FloatDoublewordElement(19014)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.CURRENT_L3, new FloatDoublewordElement(19016)), //\n-\t\t\t\t\t\tm(SymmetricMeter.ChannelId.CURRENT, new FloatDoublewordElement(19018)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.ACTIVE_POWER_L1, new FloatDoublewordElement(19020)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.ACTIVE_POWER_L2, new FloatDoublewordElement(19022)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.ACTIVE_POWER_L3, new FloatDoublewordElement(19024)), //\n-\t\t\t\t\t\tm(SymmetricMeter.ChannelId.ACTIVE_POWER, new FloatDoublewordElement(19026)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_POWER_S1_L1N, new FloatDoublewordElement(19028)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_POWER_S2_L2N, new FloatDoublewordElement(19030)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_POWER_S3_L3N, new FloatDoublewordElement(19032)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_POWER_SUM, new FloatDoublewordElement(19034)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.REACTIVE_POWER_L1, new FloatDoublewordElement(19036)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.REACTIVE_POWER_L2, new FloatDoublewordElement(19038)), //\n-\t\t\t\t\t\tm(AsymmetricMeter.ChannelId.REACTIVE_POWER_L3, new FloatDoublewordElement(19040)), //\n-\t\t\t\t\t\tm(SymmetricMeter.ChannelId.REACTIVE_POWER, new FloatDoublewordElement(19042)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.COSPHI_L1, new FloatDoublewordElement(19044)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.COSPHI_L2, new FloatDoublewordElement(19046)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.COSPHI_L3, new FloatDoublewordElement(19048)), //\n-\t\t\t\t\t\tm(SymmetricMeter.ChannelId.FREQUENCY, new FloatDoublewordElement(19050)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.ROTATION_FIELD, new FloatDoublewordElement(19052)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L1, new FloatDoublewordElement(19054)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L2, new FloatDoublewordElement(19056)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L3, new FloatDoublewordElement(19058)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L1_L3, new FloatDoublewordElement(19060)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L1_CONSUMED, new FloatDoublewordElement(19062)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L2_CONSUMED, new FloatDoublewordElement(19064)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L3_CONSUMED, new FloatDoublewordElement(19066)), //\n-\t\t\t\t\t\tm(SymmetricMeter.ChannelId.ACTIVE_CONSUMPTION_ENERGY, new FloatDoublewordElement(19068)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L1_DELIVERED, new FloatDoublewordElement(19070)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L2_DELIVERED, new FloatDoublewordElement(19072)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REAL_ENERGY_L3_DELIVERED, new FloatDoublewordElement(19074)), //\n-\t\t\t\t\t\tm(SymmetricMeter.ChannelId.ACTIVE_PRODUCTION_ENERGY, new FloatDoublewordElement(19076)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_ENERGY_L1, new FloatDoublewordElement(19078)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_ENERGY_L2, new FloatDoublewordElement(19080)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_ENERGY_L3, new FloatDoublewordElement(19082)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.APPARENT_ENERGY_L1_L3, new FloatDoublewordElement(19084)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_L1, new FloatDoublewordElement(19086)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_L2, new FloatDoublewordElement(19088)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_L3, new FloatDoublewordElement(19090)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_L1_L3, new FloatDoublewordElement(19092)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L1, new FloatDoublewordElement(19094)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L2, new FloatDoublewordElement(19096)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L3, new FloatDoublewordElement(19098)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L1_L3, new FloatDoublewordElement(19100)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L1, new FloatDoublewordElement(19102)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L2, new FloatDoublewordElement(19104)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L3, new FloatDoublewordElement(19106)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L1_L3, new FloatDoublewordElement(19108)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.HARMONIC_THD_VOLT_L1N, new FloatDoublewordElement(19110)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.HARMONIC_THD_VOLT_L2N, new FloatDoublewordElement(19112)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.HARMONIC_THD_VOLT_L3N, new FloatDoublewordElement(19114)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.HARMONIC_THD_CURRENT_L1N, new FloatDoublewordElement(19116)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.HARMONIC_THD_VOLT_L2N, new FloatDoublewordElement(19118)), //\n-\t\t\t\t\t\tm(WeidmuellerChannelId.HARMONIC_THD_CURRENT_L3N, new FloatDoublewordElement(19120))));\n-\t}\n+  @Override\n+  protected ModbusProtocol defineModbusProtocol() throws OpenemsException {\n+    return new ModbusProtocol(this, //\n+        new FC3ReadRegistersTask(19000, Priority.HIGH, //\n+            m(new FloatDoublewordElement(19000)) //\n+                .m(AsymmetricMeter.ChannelId.VOLTAGE_L1, ElementToChannelConverter.DIRECT_1_TO_1) //\n+                .m(SymmetricMeter.ChannelId.VOLTAGE, ElementToChannelConverter.DIRECT_1_TO_1) //\n+                .build(), //\n+            m(AsymmetricMeter.ChannelId.VOLTAGE_L2, new FloatDoublewordElement(19002)), //\n+            m(AsymmetricMeter.ChannelId.VOLTAGE_L3, new FloatDoublewordElement(19004)), //\n+            m(WeidmuellerChannelId.VOLTAGE_L1_L2, new FloatDoublewordElement(19006)), //\n+            m(WeidmuellerChannelId.VOLTAGE_L2_L3, new FloatDoublewordElement(19008)), //\n+            m(WeidmuellerChannelId.VOLTAGE_L1_L3, new FloatDoublewordElement(19010)), //\n+            m(AsymmetricMeter.ChannelId.CURRENT_L1, new FloatDoublewordElement(19012)), //\n+            m(AsymmetricMeter.ChannelId.CURRENT_L2, new FloatDoublewordElement(19014)), //\n+            m(AsymmetricMeter.ChannelId.CURRENT_L3, new FloatDoublewordElement(19016)), //\n+            m(SymmetricMeter.ChannelId.CURRENT, new FloatDoublewordElement(19018)), //\n+            m(AsymmetricMeter.ChannelId.ACTIVE_POWER_L1, new FloatDoublewordElement(19020)), //\n+            m(AsymmetricMeter.ChannelId.ACTIVE_POWER_L2, new FloatDoublewordElement(19022)), //\n+            m(AsymmetricMeter.ChannelId.ACTIVE_POWER_L3, new FloatDoublewordElement(19024)), //\n+            m(SymmetricMeter.ChannelId.ACTIVE_POWER, new FloatDoublewordElement(19026)), //\n+            m(WeidmuellerChannelId.APPARENT_POWER_S1_L1N, new FloatDoublewordElement(19028)), //\n+            m(WeidmuellerChannelId.APPARENT_POWER_S2_L2N, new FloatDoublewordElement(19030)), //\n+            m(WeidmuellerChannelId.APPARENT_POWER_S3_L3N, new FloatDoublewordElement(19032)), //\n+            m(WeidmuellerChannelId.APPARENT_POWER_SUM, new FloatDoublewordElement(19034)), //\n+            m(AsymmetricMeter.ChannelId.REACTIVE_POWER_L1, new FloatDoublewordElement(19036)), //\n+            m(AsymmetricMeter.ChannelId.REACTIVE_POWER_L2, new FloatDoublewordElement(19038)), //\n+            m(AsymmetricMeter.ChannelId.REACTIVE_POWER_L3, new FloatDoublewordElement(19040)), //\n+            m(SymmetricMeter.ChannelId.REACTIVE_POWER, new FloatDoublewordElement(19042)), //\n+            m(WeidmuellerChannelId.COSPHI_L1, new FloatDoublewordElement(19044)), //\n+            m(WeidmuellerChannelId.COSPHI_L2, new FloatDoublewordElement(19046)), //\n+            m(WeidmuellerChannelId.COSPHI_L3, new FloatDoublewordElement(19048)), //\n+            m(SymmetricMeter.ChannelId.FREQUENCY, new FloatDoublewordElement(19050)), //\n+            m(WeidmuellerChannelId.ROTATION_FIELD, new FloatDoublewordElement(19052)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L1, new FloatDoublewordElement(19054)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L2, new FloatDoublewordElement(19056)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L3, new FloatDoublewordElement(19058)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L1_L3, new FloatDoublewordElement(19060)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L1_CONSUMED, new FloatDoublewordElement(19062)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L2_CONSUMED, new FloatDoublewordElement(19064)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L3_CONSUMED, new FloatDoublewordElement(19066)), //\n+            m(SymmetricMeter.ChannelId.ACTIVE_CONSUMPTION_ENERGY, new FloatDoublewordElement(19068)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L1_DELIVERED, new FloatDoublewordElement(19070)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L2_DELIVERED, new FloatDoublewordElement(19072)), //\n+            m(WeidmuellerChannelId.REAL_ENERGY_L3_DELIVERED, new FloatDoublewordElement(19074)), //\n+            m(SymmetricMeter.ChannelId.ACTIVE_PRODUCTION_ENERGY, new FloatDoublewordElement(19076)), //\n+            m(WeidmuellerChannelId.APPARENT_ENERGY_L1, new FloatDoublewordElement(19078)), //\n+            m(WeidmuellerChannelId.APPARENT_ENERGY_L2, new FloatDoublewordElement(19080)), //\n+            m(WeidmuellerChannelId.APPARENT_ENERGY_L3, new FloatDoublewordElement(19082)), //\n+            m(WeidmuellerChannelId.APPARENT_ENERGY_L1_L3, new FloatDoublewordElement(19084)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_L1, new FloatDoublewordElement(19086)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_L2, new FloatDoublewordElement(19088)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_L3, new FloatDoublewordElement(19090)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_L1_L3, new FloatDoublewordElement(19092)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L1, new FloatDoublewordElement(19094)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L2, new FloatDoublewordElement(19096)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L3, new FloatDoublewordElement(19098)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_INDUCTIVE_L1_L3, new FloatDoublewordElement(19100)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L1, new FloatDoublewordElement(19102)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L2, new FloatDoublewordElement(19104)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L3, new FloatDoublewordElement(19106)), //\n+            m(WeidmuellerChannelId.REACTIVE_ENERGY_CAPACITIVE_L1_L3, new FloatDoublewordElement(19108)), //\n+            m(WeidmuellerChannelId.HARMONIC_THD_VOLT_L1N, new FloatDoublewordElement(19110)), //\n+            m(WeidmuellerChannelId.HARMONIC_THD_VOLT_L2N, new FloatDoublewordElement(19112)), //\n+            m(WeidmuellerChannelId.HARMONIC_THD_VOLT_L3N, new FloatDoublewordElement(19114)), //\n+            m(WeidmuellerChannelId.HARMONIC_THD_CURRENT_L1N, new FloatDoublewordElement(19116)), //\n+            m(WeidmuellerChannelId.HARMONIC_THD_VOLT_L2N, new FloatDoublewordElement(19118)), //\n+            m(WeidmuellerChannelId.HARMONIC_THD_CURRENT_L3N, new FloatDoublewordElement(19120))));\n+  }\n \n-\t@Override\n-\tpublic String debugLog() {\n-\t\treturn \"L:\" + this.getActivePower().asString();\n-\t}\n+  @Override\n+  public String debugLog() {\n+    return \"L:\" + this.getActivePower().asString();\n+  }\n \n-\t@Override\n-\tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n-\t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n-\t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n-\t\t);\n-\t}\n+  @Override\n+  public ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n+    return new ModbusSlaveTable( //\n+        OpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n+        SymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n+    );\n+  }\n \n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/naturalize/26/MeterWeidmueller525.java\nindex 369a57319bd..1ef6529d4e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/naturalize/26/MeterWeidmueller525.java\n@@ -149,10 +149,10 @@ public class MeterWeidmueller525 extends AbstractOpenemsModbusComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/26/MeterWeidmueller525.java\nindex 369a57319bd..6c379d50079 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/26/MeterWeidmueller525.java\n@@ -149,7 +149,7 @@ public class MeterWeidmueller525 extends AbstractOpenemsModbusComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/26/MeterWeidmueller525.java\nindex 369a57319bd..6c379d50079 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/26/MeterWeidmueller525.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/26/MeterWeidmueller525.java\n@@ -149,7 +149,7 @@ public class MeterWeidmueller525 extends AbstractOpenemsModbusComponent\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tSymmetricMeter.getModbusSlaveNatureTable(accessMode) //\n \t\t);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
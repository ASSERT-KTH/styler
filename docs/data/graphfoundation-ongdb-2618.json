{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2618",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2618/TimeBasedTaskScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2618/TimeBasedTaskScheduler.java\nindex 46203182db9..b32d0ff61e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2618/TimeBasedTaskScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2618/TimeBasedTaskScheduler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.util.Comparator;\n@@ -30,79 +31,79 @@ import org.neo4j.time.SystemNanoClock;\n \n final class TimeBasedTaskScheduler implements Runnable\n {\n-    private static final long NO_TASKS_PARK = TimeUnit.MINUTES.toNanos( 10 );\n-    private static final Comparator<ScheduledJobHandle> DEADLINE_COMPARATOR =\n-            Comparator.comparingLong( handle -> handle.nextDeadlineNanos );\n+  private static final long NO_TASKS_PARK = TimeUnit.MINUTES.toNanos(10);\n+  private static final Comparator<ScheduledJobHandle> DEADLINE_COMPARATOR =\n+      Comparator.comparingLong(handle -> handle.nextDeadlineNanos);\n \n-    private final SystemNanoClock clock;\n-    private final ThreadPoolManager pools;\n-    private final PriorityBlockingQueue<ScheduledJobHandle> delayedTasks;\n-    private volatile Thread timeKeeper;\n-    private volatile boolean stopped;\n+  private final SystemNanoClock clock;\n+  private final ThreadPoolManager pools;\n+  private final PriorityBlockingQueue<ScheduledJobHandle> delayedTasks;\n+  private volatile Thread timeKeeper;\n+  private volatile boolean stopped;\n \n-    TimeBasedTaskScheduler( SystemNanoClock clock, ThreadPoolManager pools )\n-    {\n-        this.clock = clock;\n-        this.pools = pools;\n-        delayedTasks = new PriorityBlockingQueue<>( 42, DEADLINE_COMPARATOR );\n-    }\n+  TimeBasedTaskScheduler(SystemNanoClock clock, ThreadPoolManager pools)\n+  {\n+    this.clock = clock;\n+    this.pools = pools;\n+    delayedTasks = new PriorityBlockingQueue<>(42, DEADLINE_COMPARATOR);\n+  }\n \n-    public JobHandle submit( Group group, Runnable job, long initialDelayNanos, long reschedulingDelayNanos )\n-    {\n-        long now = clock.nanos();\n-        long nextDeadlineNanos = now + initialDelayNanos;\n-        ScheduledJobHandle task = new ScheduledJobHandle( this, group, job, nextDeadlineNanos, reschedulingDelayNanos );\n-        enqueueTask( task );\n-        return task;\n-    }\n+  public JobHandle submit(Group group, Runnable job, long initialDelayNanos, long reschedulingDelayNanos)\n+  {\n+    long now = clock.nanos();\n+    long nextDeadlineNanos = now + initialDelayNanos;\n+    ScheduledJobHandle task = new ScheduledJobHandle(this, group, job, nextDeadlineNanos, reschedulingDelayNanos);\n+    enqueueTask(task);\n+    return task;\n+  }\n \n-    void enqueueTask( ScheduledJobHandle newTasks )\n-    {\n-        delayedTasks.offer( newTasks );\n-        LockSupport.unpark( timeKeeper );\n-    }\n+  void enqueueTask(ScheduledJobHandle newTasks)\n+  {\n+    delayedTasks.offer(newTasks);\n+    LockSupport.unpark(timeKeeper);\n+  }\n \n-    @Override\n-    public void run()\n+  @Override\n+  public void run()\n+  {\n+    timeKeeper = Thread.currentThread();\n+    while (!stopped)\n     {\n-        timeKeeper = Thread.currentThread();\n-        while ( !stopped )\n-        {\n-            long timeToNextTickNanos = tick();\n-            if ( stopped )\n-            {\n-                return;\n-            }\n-            LockSupport.parkNanos( this, timeToNextTickNanos );\n-        }\n+      long timeToNextTickNanos = tick();\n+      if (stopped)\n+      {\n+        return;\n+      }\n+      LockSupport.parkNanos(this, timeToNextTickNanos);\n     }\n+  }\n \n-    public long tick()\n-    {\n-        long now = clock.nanos();\n-        long timeToNextDeadlineSinceStart = scheduleDueTasks( now );\n-        long processingTime = clock.nanos() - now;\n-        return timeToNextDeadlineSinceStart - processingTime;\n-    }\n+  public long tick()\n+  {\n+    long now = clock.nanos();\n+    long timeToNextDeadlineSinceStart = scheduleDueTasks(now);\n+    long processingTime = clock.nanos() - now;\n+    return timeToNextDeadlineSinceStart - processingTime;\n+  }\n \n-    private long scheduleDueTasks( long now )\n+  private long scheduleDueTasks(long now)\n+  {\n+    if (delayedTasks.isEmpty())\n     {\n-        if ( delayedTasks.isEmpty() )\n-        {\n-            // We have no tasks to run. Park until we're woken up by an enqueueTask() call.\n-            return NO_TASKS_PARK;\n-        }\n-        while ( !stopped && !delayedTasks.isEmpty() && delayedTasks.peek().nextDeadlineNanos <= now )\n-        {\n-            ScheduledJobHandle task = delayedTasks.poll();\n-            task.submitIfRunnable( pools );\n-        }\n-        return delayedTasks.isEmpty() ? NO_TASKS_PARK : delayedTasks.peek().nextDeadlineNanos - now;\n+      // We have no tasks to run. Park until we're woken up by an enqueueTask() call.\n+      return NO_TASKS_PARK;\n     }\n-\n-    public void stop()\n+    while (!stopped && !delayedTasks.isEmpty() && delayedTasks.peek().nextDeadlineNanos <= now)\n     {\n-        stopped = true;\n-        LockSupport.unpark( timeKeeper );\n+      ScheduledJobHandle task = delayedTasks.poll();\n+      task.submitIfRunnable(pools);\n     }\n+    return delayedTasks.isEmpty() ? NO_TASKS_PARK : delayedTasks.peek().nextDeadlineNanos - now;\n+  }\n+\n+  public void stop()\n+  {\n+    stopped = true;\n+    LockSupport.unpark(timeKeeper);\n+  }\n }\n",
            "diff_size": 77
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2618/TimeBasedTaskScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2618/TimeBasedTaskScheduler.java\nindex 46203182db9..e2c6349599a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2618/TimeBasedTaskScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2618/TimeBasedTaskScheduler.java\n@@ -31,10 +31,8 @@ import org.neo4j.time.SystemNanoClock;\n final class TimeBasedTaskScheduler implements Runnable\n {\n     private static final long NO_TASKS_PARK = TimeUnit.MINUTES.toNanos( 10 );\n-    private static final Comparator<ScheduledJobHandle> DEADLINE_COMPARATOR =\n-            Comparator.comparingLong( handle -> handle.nextDeadlineNanos );\n-\n-    private final SystemNanoClock clock;\n+    private static final Comparator<ScheduledJobHandle> DEADLINE_COMPARATOR = Comparator.comparingLong( handle -> handle.nextDeadlineNanos );\n+private final SystemNanoClock clock;\n     private final ThreadPoolManager pools;\n     private final PriorityBlockingQueue<ScheduledJobHandle> delayedTasks;\n     private volatile Thread timeKeeper;\n@@ -97,7 +95,8 @@ final class TimeBasedTaskScheduler implements Runnable\n             ScheduledJobHandle task = delayedTasks.poll();\n             task.submitIfRunnable( pools );\n         }\n-        return delayedTasks.isEmpty() ? NO_TASKS_PARK : delayedTasks.peek().nextDeadlineNanos - now;\n+\n+return delayedTasks.isEmpty() ? NO_TASKS_PARK : delayedTasks.peek().nextDeadlineNanos - now;\n     }\n \n     public void stop()\n@@ -105,4 +104,4 @@ final class TimeBasedTaskScheduler implements Runnable\n         stopped = true;\n         LockSupport.unpark( timeKeeper );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
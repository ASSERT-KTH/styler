{
    "project_name": "neo4j-neo4j",
    "error_id": "2241",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "186",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "221",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "275",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "302",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "309",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "328",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "339",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "404",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2241/AbstractLuceneIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2241/AbstractLuceneIndex.java\nindex 0e6f72ad1f9..39bc9cad4b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2241/AbstractLuceneIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2241/AbstractLuceneIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -56,6 +57,7 @@ import static java.util.stream.Collectors.toList;\n  * {@link AbstractIndexPartition partitions}.\n  * Class and it's subclasses should not be directly used, instead please use corresponding writable or read only\n  * wrapper.\n+ *\n  * @see WritableAbstractDatabaseIndex\n  * @see ReadOnlyAbstractDatabaseIndex\n  */\n@@ -63,7 +65,7 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n {\n     private static final String KEY_STATUS = \"status\";\n     private static final String ONLINE = \"online\";\n-    private static final Set<Map.Entry<String,String>> ONLINE_COMMIT_USER_DATA = Set.of( Map.entry( KEY_STATUS, ONLINE ) );\n+    private static final Set<Map.Entry<String, String>> ONLINE_COMMIT_USER_DATA = Set.of(Map.entry(KEY_STATUS, ONLINE));\n     protected final PartitionedIndexStorage indexStorage;\n     protected final IndexDescriptor descriptor;\n     private final IndexPartitionFactory partitionFactory;\n@@ -74,7 +76,7 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n \n     private volatile boolean open;\n \n-    public AbstractLuceneIndex( PartitionedIndexStorage indexStorage, IndexPartitionFactory partitionFactory, IndexDescriptor descriptor )\n+    public AbstractLuceneIndex(PartitionedIndexStorage indexStorage, IndexPartitionFactory partitionFactory, IndexDescriptor descriptor)\n     {\n         this.indexStorage = indexStorage;\n         this.partitionFactory = partitionFactory;\n@@ -93,7 +95,7 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     public void create() throws IOException\n     {\n         ensureNotOpen();\n-        indexStorage.prepareFolder( indexStorage.getIndexFolder() );\n+        indexStorage.prepareFolder(indexStorage.getIndexFolder());\n         indexStorage.reserveIndexFailureStorage();\n         createNewPartitionFolder();\n     }\n@@ -105,13 +107,13 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n      */\n     public void open() throws IOException\n     {\n-        Set<Map.Entry<Path,Directory>> indexDirectories = indexStorage.openIndexDirectories().entrySet();\n-        List<AbstractIndexPartition> list = new ArrayList<>( indexDirectories.size() );\n-        for ( Map.Entry<Path,Directory> entry : indexDirectories )\n+        Set<Map.Entry<Path, Directory>> indexDirectories = indexStorage.openIndexDirectories().entrySet();\n+        List<AbstractIndexPartition> list = new ArrayList<>(indexDirectories.size());\n+        for (Map.Entry<Path, Directory> entry : indexDirectories)\n         {\n-            list.add( partitionFactory.createPartition( entry.getKey(), entry.getValue() ) );\n+            list.add(partitionFactory.createPartition(entry.getKey(), entry.getValue()));\n         }\n-        partitions.addAll( list );\n+        partitions.addAll(list);\n         open = true;\n     }\n \n@@ -129,13 +131,13 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     public boolean exists() throws IOException\n     {\n         List<Path> folders = indexStorage.listFolders();\n-        if ( folders.isEmpty() )\n+        if (folders.isEmpty())\n         {\n             return false;\n         }\n-        for ( Path folder : folders )\n+        for (Path folder : folders)\n         {\n-            if ( !luceneDirectoryExists( folder ) )\n+            if (!luceneDirectoryExists(folder))\n             {\n                 return false;\n             }\n@@ -152,7 +154,7 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n      */\n     public boolean isValid()\n     {\n-        if ( open )\n+        if (open)\n         {\n             return true;\n         }\n@@ -160,48 +162,46 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n         try\n         {\n             directories = indexStorage.openIndexDirectories().values();\n-            for ( Directory directory : directories )\n+            for (Directory directory : directories)\n             {\n                 // it is ok for index directory to be empty\n                 // this can happen if it is opened and closed without any writes in between\n-                if ( ArrayUtils.isNotEmpty( directory.listAll() ) )\n+                if (ArrayUtils.isNotEmpty(directory.listAll()))\n                 {\n-                    try ( CheckIndex checker = new CheckIndex( directory ) )\n+                    try (CheckIndex checker = new CheckIndex(directory))\n                     {\n                         CheckIndex.Status status = checker.checkIndex();\n-                        if ( !status.clean )\n+                        if (!status.clean)\n                         {\n                             return false;\n                         }\n                     }\n                 }\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n             return false;\n-        }\n-        finally\n+        } finally\n         {\n-            if ( directories != null )\n+            if (directories != null)\n             {\n-                IOUtils.closeAllSilently( directories );\n+                IOUtils.closeAllSilently(directories);\n             }\n         }\n         return true;\n     }\n \n-    public LuceneIndexWriter getIndexWriter( WritableAbstractDatabaseIndex writableAbstractDatabaseIndex )\n+    public LuceneIndexWriter getIndexWriter(WritableAbstractDatabaseIndex writableAbstractDatabaseIndex)\n     {\n         ensureOpen();\n-        return new PartitionedIndexWriter( writableAbstractDatabaseIndex );\n+        return new PartitionedIndexWriter(writableAbstractDatabaseIndex);\n     }\n \n     public READER getIndexReader() throws IOException\n     {\n         ensureOpen();\n         List<AbstractIndexPartition> partitions = getPartitions();\n-        return hasSinglePartition( partitions ) ? createSimpleReader( partitions ) : createPartitionedReader( partitions );\n+        return hasSinglePartition(partitions) ? createSimpleReader(partitions) : createPartitionedReader(partitions);\n     }\n \n     public IndexDescriptor getDescriptor()\n@@ -217,11 +217,10 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n         try\n         {\n             close();\n-            indexStorage.cleanupFolder( indexStorage.getIndexFolder() );\n-        }\n-        catch ( IOException e )\n+            indexStorage.cleanupFolder(indexStorage.getIndexFolder());\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -231,16 +230,16 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n      * @param merge also merge all segments together. This should be done before reading term frequencies.\n      * @throws IOException on Lucene I/O error.\n      */\n-    public void flush( boolean merge ) throws IOException\n+    public void flush(boolean merge) throws IOException\n     {\n         List<AbstractIndexPartition> partitions = getPartitions();\n-        for ( AbstractIndexPartition partition : partitions )\n+        for (AbstractIndexPartition partition : partitions)\n         {\n             IndexWriter writer = partition.getIndexWriter();\n             writer.commit();\n-            if ( merge )\n+            if (merge)\n             {\n-                writer.forceMerge( 1 );\n+                writer.forceMerge(1);\n             }\n         }\n     }\n@@ -248,7 +247,7 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     public void close() throws IOException\n     {\n         open = false;\n-        IOUtils.closeAll( partitions );\n+        IOUtils.closeAll(partitions);\n         partitions.clear();\n     }\n \n@@ -260,24 +259,23 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     public LuceneAllDocumentsReader allDocumentsReader()\n     {\n         ensureOpen();\n-        List<SearcherReference> searchers = new ArrayList<>( partitions.size() );\n+        List<SearcherReference> searchers = new ArrayList<>(partitions.size());\n         try\n         {\n-            for ( AbstractIndexPartition partition : partitions )\n+            for (AbstractIndexPartition partition : partitions)\n             {\n-                searchers.add( partition.acquireSearcher() );\n+                searchers.add(partition.acquireSearcher());\n             }\n \n             List<LucenePartitionAllDocumentsReader> partitionReaders = searchers.stream()\n-                    .map( LucenePartitionAllDocumentsReader::new )\n-                    .collect( toList() );\n+              .map(LucenePartitionAllDocumentsReader::new)\n+              .collect(toList());\n \n-            return new LuceneAllDocumentsReader( partitionReaders );\n-        }\n-        catch ( IOException e )\n+            return new LuceneAllDocumentsReader(partitionReaders);\n+        } catch (IOException e)\n         {\n-            IOUtils.closeAllSilently( searchers );\n-            throw new UncheckedIOException( e );\n+            IOUtils.closeAllSilently(searchers);\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -295,24 +293,22 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n         try\n         {\n             List<AbstractIndexPartition> partitions = getPartitions();\n-            snapshotIterators = new ArrayList<>( partitions.size() );\n-            for ( AbstractIndexPartition partition : partitions )\n+            snapshotIterators = new ArrayList<>(partitions.size());\n+            for (AbstractIndexPartition partition : partitions)\n             {\n-                snapshotIterators.add( partition.snapshot() );\n+                snapshotIterators.add(partition.snapshot());\n             }\n-            return Iterators.concatResourceIterators( snapshotIterators.iterator() );\n-        }\n-        catch ( Exception e )\n+            return Iterators.concatResourceIterators(snapshotIterators.iterator());\n+        } catch (Exception e)\n         {\n-            if ( snapshotIterators != null )\n+            if (snapshotIterators != null)\n             {\n                 try\n                 {\n-                    IOUtils.closeAll( snapshotIterators );\n-                }\n-                catch ( IOException ex )\n+                    IOUtils.closeAll(snapshotIterators);\n+                } catch (IOException ex)\n                 {\n-                    e.addSuppressed( ex );\n+                    e.addSuppressed(ex);\n                 }\n             }\n             throw e;\n@@ -328,23 +324,21 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     {\n         try\n         {\n-            getPartitions().parallelStream().forEach( this::maybeRefreshPartition );\n-        }\n-        catch ( UncheckedIOException e )\n+            getPartitions().parallelStream().forEach(this::maybeRefreshPartition);\n+        } catch (UncheckedIOException e)\n         {\n             throw e.getCause();\n         }\n     }\n \n-    private void maybeRefreshPartition( AbstractIndexPartition partition )\n+    private void maybeRefreshPartition(AbstractIndexPartition partition)\n     {\n         try\n         {\n             partition.maybeRefreshBlocking();\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -354,14 +348,14 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n         return partitions;\n     }\n \n-    public boolean hasSinglePartition( List<AbstractIndexPartition> partitions )\n+    public boolean hasSinglePartition(List<AbstractIndexPartition> partitions)\n     {\n         return partitions.size() == 1;\n     }\n \n-    public AbstractIndexPartition getFirstPartition( List<AbstractIndexPartition> partitions )\n+    public AbstractIndexPartition getFirstPartition(List<AbstractIndexPartition> partitions)\n     {\n-        return partitions.get( 0 );\n+        return partitions.get(0);\n     }\n \n     /**\n@@ -374,59 +368,58 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     {\n         ensureOpen();\n         Path partitionFolder = createNewPartitionFolder();\n-        Directory directory = indexStorage.openDirectory( partitionFolder );\n-        AbstractIndexPartition indexPartition = partitionFactory.createPartition( partitionFolder, directory );\n-        partitions.add( indexPartition );\n+        Directory directory = indexStorage.openDirectory(partitionFolder);\n+        AbstractIndexPartition indexPartition = partitionFactory.createPartition(partitionFolder, directory);\n+        partitions.add(indexPartition);\n         return indexPartition;\n     }\n \n     protected void ensureOpen()\n     {\n-        if ( !open )\n+        if (!open)\n         {\n-            throw new IllegalStateException( \"Please open lucene index before working with it.\" );\n+            throw new IllegalStateException(\"Please open lucene index before working with it.\");\n         }\n     }\n \n     protected void ensureNotOpen()\n     {\n-        if ( open )\n+        if (open)\n         {\n-            throw new IllegalStateException( \"Lucene index should not be open to be able to perform required \" +\n-                                             \"operation.\" );\n+            throw new IllegalStateException(\"Lucene index should not be open to be able to perform required \" +\n+              \"operation.\");\n         }\n     }\n \n-    protected static List<SearcherReference> acquireSearchers( List<AbstractIndexPartition> partitions ) throws IOException\n+    protected static List<SearcherReference> acquireSearchers(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        List<SearcherReference> searchers = new ArrayList<>( partitions.size() );\n+        List<SearcherReference> searchers = new ArrayList<>(partitions.size());\n         try\n         {\n-            for ( AbstractIndexPartition partition : partitions )\n+            for (AbstractIndexPartition partition : partitions)\n             {\n-                searchers.add( partition.acquireSearcher() );\n+                searchers.add(partition.acquireSearcher());\n             }\n             return searchers;\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            IOUtils.closeAllSilently( searchers );\n+            IOUtils.closeAllSilently(searchers);\n             throw e;\n         }\n     }\n \n-    private boolean luceneDirectoryExists( Path folder ) throws IOException\n+    private boolean luceneDirectoryExists(Path folder) throws IOException\n     {\n-        try ( Directory directory = indexStorage.openDirectory( folder ) )\n+        try (Directory directory = indexStorage.openDirectory(folder))\n         {\n-            return DirectoryReader.indexExists( directory );\n+            return DirectoryReader.indexExists(directory);\n         }\n     }\n \n     private Path createNewPartitionFolder() throws IOException\n     {\n-        Path partitionFolder = indexStorage.getPartitionFolder( partitions.size() + 1 );\n-        indexStorage.prepareFolder( partitionFolder );\n+        Path partitionFolder = indexStorage.getPartitionFolder(partitions.size() + 1);\n+        indexStorage.prepareFolder(partitionFolder);\n         return partitionFolder;\n     }\n \n@@ -439,12 +432,12 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     public boolean isOnline() throws IOException\n     {\n         ensureOpen();\n-        AbstractIndexPartition partition = getFirstPartition( getPartitions() );\n+        AbstractIndexPartition partition = getFirstPartition(getPartitions());\n         Directory directory = partition.getDirectory();\n-        try ( DirectoryReader reader = DirectoryReader.open( directory ) )\n+        try (DirectoryReader reader = DirectoryReader.open(directory))\n         {\n-            Map<String,String> userData = reader.getIndexCommit().getUserData();\n-            return ONLINE.equals( userData.get( KEY_STATUS ) );\n+            Map<String, String> userData = reader.getIndexCommit().getUserData();\n+            return ONLINE.equals(userData.get(KEY_STATUS));\n         }\n     }\n \n@@ -456,10 +449,10 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n     public void markAsOnline() throws IOException\n     {\n         ensureOpen();\n-        AbstractIndexPartition partition = getFirstPartition( getPartitions() );\n+        AbstractIndexPartition partition = getFirstPartition(getPartitions());\n         IndexWriter indexWriter = partition.getIndexWriter();\n-        indexWriter.setLiveCommitData( ONLINE_COMMIT_USER_DATA );\n-        flush( false );\n+        indexWriter.setLiveCommitData(ONLINE_COMMIT_USER_DATA);\n+        flush(false);\n     }\n \n     /**\n@@ -468,12 +461,12 @@ public abstract class AbstractLuceneIndex<READER extends IndexReader>\n      * @param failure the failure message.\n      * @throws IOException\n      */\n-    public void markAsFailed( String failure ) throws IOException\n+    public void markAsFailed(String failure) throws IOException\n     {\n-        indexStorage.storeIndexFailure( failure );\n+        indexStorage.storeIndexFailure(failure);\n     }\n \n-    protected abstract READER createSimpleReader( List<AbstractIndexPartition> partitions ) throws IOException;\n+    protected abstract READER createSimpleReader(List<AbstractIndexPartition> partitions) throws IOException;\n \n-    protected abstract READER createPartitionedReader( List<AbstractIndexPartition> partitions ) throws IOException;\n+    protected abstract READER createPartitionedReader(List<AbstractIndexPartition> partitions) throws IOException;\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
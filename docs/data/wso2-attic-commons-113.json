{
    "project_name": "wso2-attic-commons",
    "error_id": "113",
    "information": {
        "errors": [
            {
                "line": "26",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 174).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Persistent representation of a fault.\n * @hibernate.class table=\"BPEL_FAULT\"\n * @hibernate.query name=\"SELECT_FAULT_IDS_BY_INSTANCES\" query=\"select id from HFaultData as f where f in (select i.fault from HProcessInstance as i where i in (:instances))\"\n */\npublic class HFaultData extends HObject {\n    public final static String SELECT_FAULT_IDS_BY_INSTANCES = \"SELECT_FAULT_IDS_BY_INSTANCES\";",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/113/HFaultData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/113/HFaultData.java\nindex 985c69dfe39..d4dca28b58d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/113/HFaultData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/113/HFaultData.java\n@@ -22,75 +22,76 @@ package org.apache.ode.daohib.bpel.hobj;\n \n /**\n  * Persistent representation of a fault.\n+ *\n  * @hibernate.class table=\"BPEL_FAULT\"\n  * @hibernate.query name=\"SELECT_FAULT_IDS_BY_INSTANCES\" query=\"select id from HFaultData as f where f in (select i.fault from HProcessInstance as i where i in (:instances))\"\n  */\n public class HFaultData extends HObject {\n-    public final static String SELECT_FAULT_IDS_BY_INSTANCES = \"SELECT_FAULT_IDS_BY_INSTANCES\";\n+  public final static String SELECT_FAULT_IDS_BY_INSTANCES = \"SELECT_FAULT_IDS_BY_INSTANCES\";\n \n-    private String _name;\n-    private String _explanation;\n-    private byte[] _data;\n-    private int _lineNo;\n-    private int _activityId;\n+  private String _name;\n+  private String _explanation;\n+  private byte[] _data;\n+  private int _lineNo;\n+  private int _activityId;\n \n-    /**\n-     * @hibernate.property column=\"FAULTNAME\"\n-     */\n-    public String getName() {\n-        return _name;\n-    }\n+  /**\n+   * @hibernate.property column=\"FAULTNAME\"\n+   */\n+  public String getName() {\n+    return _name;\n+  }\n \n-    public void setName(String name) {\n-        _name = name;\n-    }\n+  public void setName(String name) {\n+    _name = name;\n+  }\n \n-    /**\n-     * @hibernate.property type=\"org.apache.ode.daohib.bpel.hobj.GZipDataType\"\n-     *\n-     * @hibernate.column name=\"DATA\" sql-type=\"blob(2G)\"\n-     */\n-    public byte[] getData() {\n-        return _data;\n-    }\n+  /**\n+   * @hibernate.property type=\"org.apache.ode.daohib.bpel.hobj.GZipDataType\"\n+   * @hibernate.column name=\"DATA\" sql-type=\"blob(2G)\"\n+   */\n+  public byte[] getData() {\n+    return _data;\n+  }\n \n-    public void setData(byte[] data) {\n-        _data = data;\n-    }\n+  public void setData(byte[] data) {\n+    _data = data;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"EXPLANATION\" length=\"4000\"\n-     */\n-    public String getExplanation() {\n-        return _explanation;\n-    }\n+  /**\n+   * @hibernate.property column=\"EXPLANATION\" length=\"4000\"\n+   */\n+  public String getExplanation() {\n+    return _explanation;\n+  }\n \n-    public void setExplanation(String explanation) {\n-        // Don't want to make this a blob, truncating to avoid errors\n-        if (explanation != null && explanation.length() > 4000)\n-            explanation = explanation.substring(0, 3999);\n-        _explanation = explanation;\n+  public void setExplanation(String explanation) {\n+    // Don't want to make this a blob, truncating to avoid errors\n+    if (explanation != null && explanation.length() > 4000) {\n+      explanation = explanation.substring(0, 3999);\n     }\n+    _explanation = explanation;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"LINE_NUM\"\n-     */\n-    public int getLineNo() {\n-        return _lineNo;\n-    }\n+  /**\n+   * @hibernate.property column=\"LINE_NUM\"\n+   */\n+  public int getLineNo() {\n+    return _lineNo;\n+  }\n \n-    public void setLineNo(int lineNo) {\n-        _lineNo = lineNo;\n-    }\n+  public void setLineNo(int lineNo) {\n+    _lineNo = lineNo;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"AID\"\n-     */\n-    public int getActivityId() {\n-        return _activityId;\n-    }\n+  /**\n+   * @hibernate.property column=\"AID\"\n+   */\n+  public int getActivityId() {\n+    return _activityId;\n+  }\n \n-    public void setActivityId(int activityId) {\n-        _activityId = activityId;\n-    }\n+  public void setActivityId(int activityId) {\n+    _activityId = activityId;\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/113/HFaultData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/113/HFaultData.java\nindex 985c69dfe39..ca118a36f3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/113/HFaultData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/113/HFaultData.java\n@@ -93,4 +93,4 @@ public class HFaultData extends HObject {\n     public void setActivityId(int activityId) {\n         _activityId = activityId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4535",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4535/ExpressionToString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4535/ExpressionToString.java\nindex 7664c688e5c..26d874991f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4535/ExpressionToString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4535/ExpressionToString.java\n@@ -17,313 +17,313 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n class ExpressionToString implements ExpressionVisitor\n {\n-    private final StringBuilder result;\n-\n-    ExpressionToString( StringBuilder result )\n-    {\n-        this.result = result;\n-    }\n-\n-    @Override\n-    public void invoke( Expression target, MethodReference method, Expression[] arguments )\n-    {\n-        result.append( \"invoke{target=\" );\n-        target.accept( this );\n-        result.append( \", method=\" );\n-        method.writeTo( result );\n-        result.append( \"}(\" );\n-        String sep = \"\";\n-        for ( Expression argument : arguments )\n-        {\n-            result.append( sep );\n-            argument.accept( this );\n-            sep = \", \";\n-        }\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void invoke( MethodReference method, Expression[] arguments )\n-    {\n-        result.append( \"invoke{method=\" );\n-        method.writeTo( result );\n-        result.append( \"}(\" );\n-        String sep = \"\";\n-        for ( Expression argument : arguments )\n-        {\n-            result.append( sep );\n-            argument.accept( this );\n-            sep = \", \";\n-        }\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void load( LocalVariable variable )\n-    {\n-        result.append( \"load{type=\" );\n-        if ( variable.type() == null )\n-        {\n-            result.append( \"null\" );\n-        }\n-        else\n-        {\n-            variable.type().writeTo( result );\n-        }\n-        result.append( \", name=\" ).append( variable.name() ).append( \"}\" );\n-    }\n-\n-    @Override\n-    public void getField( Expression target, FieldReference field )\n-    {\n-        result.append( \"get{target=\" );\n-        target.accept( this );\n-        result.append( \", field=\" ).append( field.name() ).append( \"}\" );\n-    }\n-\n-    @Override\n-    public void constant( Object value )\n-    {\n-        result.append( \"constant(\" ).append( value ).append( \")\" );\n-    }\n-\n-    @Override\n-    public void getStatic( FieldReference field )\n-    {\n-        result.append( \"get{class=\" ).append( field.owner() );\n-        result.append( \", field=\" ).append( field.name() ).append( \"}\" );\n-    }\n-\n-    @Override\n-    public void loadThis( String sourceName )\n-    {\n-        result.append( \"load{\" ).append( sourceName ).append( \"}\" );\n-    }\n-\n-    @Override\n-    public void newInstance( TypeReference type )\n-    {\n-        result.append( \"new{type=\" );\n-        type.writeTo( result );\n-        result.append( \"}\" );\n-    }\n-\n-    @Override\n-    public void not( Expression expression )\n-    {\n-        result.append( \"not(\" );\n-        expression.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void ternary( Expression test, Expression onTrue, Expression onFalse )\n-    {\n-        result.append( \"ternary{test=\" );\n-        test.accept( this );\n-        result.append( \", onTrue=\" );\n-        onTrue.accept( this );\n-        result.append( \", onFalse=\" );\n-        onFalse.accept( this );\n-        result.append( \"}\" );\n-    }\n-\n-    @Override\n-    public void equal( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"equal(\" );\n-        lhs.accept( this );\n-        result.append( \", \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void notEqual( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"notEqual(\" );\n-        lhs.accept( this );\n-        result.append( \", \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void isNull( Expression expression )\n-    {\n-        result.append( \"isNull(\" );\n-        expression.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void notNull( Expression expression )\n-    {\n-        result.append( \"notNull(\" );\n-        expression.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void or( Expression... expressions )\n-    {\n-        boolOp( \"or(\", expressions );\n-    }\n-\n-    @Override\n-    public void and( Expression... expressions )\n-    {\n-        boolOp( \"and(\", expressions );\n-    }\n-\n-    private void boolOp( String sep, Expression[] expressions )\n-    {\n-        for ( Expression expression : expressions )\n-        {\n-            result.append( sep );\n-            expression.accept( this );\n-            sep = \", \";\n-        }\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void add( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"add(\" );\n-        lhs.accept( this );\n-        result.append( \" + \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void gt( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"gt(\" );\n-        lhs.accept( this );\n-        result.append( \" > \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void gte( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"gt(\" );\n-        lhs.accept( this );\n-        result.append( \" >= \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void lt( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"lt(\" );\n-        lhs.accept( this );\n-        result.append( \" < \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void lte( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"gt(\" );\n-        lhs.accept( this );\n-        result.append( \" <= \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void subtract( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"sub(\" );\n-        lhs.accept( this );\n-        result.append( \" - \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void multiply( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"mul(\" );\n-        lhs.accept( this );\n-        result.append( \" * \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    private void div( Expression lhs, Expression rhs )\n-    {\n-        result.append( \"div(\" );\n-        lhs.accept( this );\n-        result.append( \" / \" );\n-        rhs.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void cast( TypeReference type, Expression expression )\n-    {\n-        result.append( \"cast{type=\" );\n-        type.writeTo( result );\n-        result.append( \", expression=\" );\n-        expression.accept( this );\n-        result.append( \"}\" );\n-    }\n-\n-    @Override\n-    public void newArray( TypeReference type, Expression... constants )\n-    {\n-        result.append( \"newArray{type=\" );\n-        type.writeTo( result );\n-        result.append( \", constants=\" );\n-        String sep = \"\";\n-        for ( Expression constant : constants )\n-        {\n-            result.append( sep );\n-            constant.accept( this );\n-            sep = \", \";\n-        }\n-        result.append( \"}\" );\n-    }\n-\n-    @Override\n-    public void longToDouble( Expression expression )\n-    {\n-        result.append( \"(double)\" );\n-        expression.accept( this );\n-    }\n-\n-    @Override\n-    public void pop( Expression expression )\n-    {\n-        result.append( \"pop(\" );\n-        expression.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void box( Expression expression )\n-    {\n-        result.append( \"box(\" );\n-        expression.accept( this );\n-        result.append( \")\" );\n-    }\n-\n-    @Override\n-    public void unbox( Expression expression )\n-    {\n-        result.append( \"unbox(\" );\n-        expression.accept( this );\n-        result.append( \")\" );\n-    }\n+  private final StringBuilder result;\n+\n+  ExpressionToString(StringBuilder result)\n+  {\n+    this.result = result;\n+  }\n+\n+  @Override\n+  public void invoke(Expression target, MethodReference method, Expression[] arguments)\n+  {\n+    result.append(\"invoke{target=\");\n+    target.accept(this);\n+    result.append(\", method=\");\n+    method.writeTo(result);\n+    result.append(\"}(\");\n+    String sep = \"\";\n+    for (Expression argument : arguments)\n+    {\n+      result.append(sep);\n+      argument.accept(this);\n+      sep = \", \";\n+    }\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void invoke(MethodReference method, Expression[] arguments)\n+  {\n+    result.append(\"invoke{method=\");\n+    method.writeTo(result);\n+    result.append(\"}(\");\n+    String sep = \"\";\n+    for (Expression argument : arguments)\n+    {\n+      result.append(sep);\n+      argument.accept(this);\n+      sep = \", \";\n+    }\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void load(LocalVariable variable)\n+  {\n+    result.append(\"load{type=\");\n+    if (variable.type() == null)\n+    {\n+      result.append(\"null\");\n+    } else\n+    {\n+      variable.type().writeTo(result);\n+    }\n+    result.append(\", name=\").append(variable.name()).append(\"}\");\n+  }\n+\n+  @Override\n+  public void getField(Expression target, FieldReference field)\n+  {\n+    result.append(\"get{target=\");\n+    target.accept(this);\n+    result.append(\", field=\").append(field.name()).append(\"}\");\n+  }\n+\n+  @Override\n+  public void constant(Object value)\n+  {\n+    result.append(\"constant(\").append(value).append(\")\");\n+  }\n+\n+  @Override\n+  public void getStatic(FieldReference field)\n+  {\n+    result.append(\"get{class=\").append(field.owner());\n+    result.append(\", field=\").append(field.name()).append(\"}\");\n+  }\n+\n+  @Override\n+  public void loadThis(String sourceName)\n+  {\n+    result.append(\"load{\").append(sourceName).append(\"}\");\n+  }\n+\n+  @Override\n+  public void newInstance(TypeReference type)\n+  {\n+    result.append(\"new{type=\");\n+    type.writeTo(result);\n+    result.append(\"}\");\n+  }\n+\n+  @Override\n+  public void not(Expression expression)\n+  {\n+    result.append(\"not(\");\n+    expression.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void ternary(Expression test, Expression onTrue, Expression onFalse)\n+  {\n+    result.append(\"ternary{test=\");\n+    test.accept(this);\n+    result.append(\", onTrue=\");\n+    onTrue.accept(this);\n+    result.append(\", onFalse=\");\n+    onFalse.accept(this);\n+    result.append(\"}\");\n+  }\n+\n+  @Override\n+  public void equal(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"equal(\");\n+    lhs.accept(this);\n+    result.append(\", \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void notEqual(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"notEqual(\");\n+    lhs.accept(this);\n+    result.append(\", \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void isNull(Expression expression)\n+  {\n+    result.append(\"isNull(\");\n+    expression.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void notNull(Expression expression)\n+  {\n+    result.append(\"notNull(\");\n+    expression.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void or(Expression... expressions)\n+  {\n+    boolOp(\"or(\", expressions);\n+  }\n+\n+  @Override\n+  public void and(Expression... expressions)\n+  {\n+    boolOp(\"and(\", expressions);\n+  }\n+\n+  private void boolOp(String sep, Expression[] expressions)\n+  {\n+    for (Expression expression : expressions)\n+    {\n+      result.append(sep);\n+      expression.accept(this);\n+      sep = \", \";\n+    }\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void add(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"add(\");\n+    lhs.accept(this);\n+    result.append(\" + \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void gt(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"gt(\");\n+    lhs.accept(this);\n+    result.append(\" > \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void gte(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"gt(\");\n+    lhs.accept(this);\n+    result.append(\" >= \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void lt(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"lt(\");\n+    lhs.accept(this);\n+    result.append(\" < \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void lte(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"gt(\");\n+    lhs.accept(this);\n+    result.append(\" <= \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void subtract(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"sub(\");\n+    lhs.accept(this);\n+    result.append(\" - \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void multiply(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"mul(\");\n+    lhs.accept(this);\n+    result.append(\" * \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  private void div(Expression lhs, Expression rhs)\n+  {\n+    result.append(\"div(\");\n+    lhs.accept(this);\n+    result.append(\" / \");\n+    rhs.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void cast(TypeReference type, Expression expression)\n+  {\n+    result.append(\"cast{type=\");\n+    type.writeTo(result);\n+    result.append(\", expression=\");\n+    expression.accept(this);\n+    result.append(\"}\");\n+  }\n+\n+  @Override\n+  public void newArray(TypeReference type, Expression... constants)\n+  {\n+    result.append(\"newArray{type=\");\n+    type.writeTo(result);\n+    result.append(\", constants=\");\n+    String sep = \"\";\n+    for (Expression constant : constants)\n+    {\n+      result.append(sep);\n+      constant.accept(this);\n+      sep = \", \";\n+    }\n+    result.append(\"}\");\n+  }\n+\n+  @Override\n+  public void longToDouble(Expression expression)\n+  {\n+    result.append(\"(double)\");\n+    expression.accept(this);\n+  }\n+\n+  @Override\n+  public void pop(Expression expression)\n+  {\n+    result.append(\"pop(\");\n+    expression.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void box(Expression expression)\n+  {\n+    result.append(\"box(\");\n+    expression.accept(this);\n+    result.append(\")\");\n+  }\n+\n+  @Override\n+  public void unbox(Expression expression)\n+  {\n+    result.append(\"unbox(\");\n+    expression.accept(this);\n+    result.append(\")\");\n+  }\n }\n",
            "diff_size": 306
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4535/ExpressionToString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4535/ExpressionToString.java\nindex 7664c688e5c..dce5572490a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4535/ExpressionToString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4535/ExpressionToString.java\n@@ -326,4 +326,4 @@ class ExpressionToString implements ExpressionVisitor\n         expression.accept( this );\n         result.append( \")\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "java110-MicroCommunity",
    "error_id": "453",
    "information": {
        "errors": [
            {
                "line": "77",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n\n        return transactionLogs;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 204).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/453/TransactionLogInnerServiceSMOImpl.java\nindex 9860fbab384..2c4e6f8f07d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/453/TransactionLogInnerServiceSMOImpl.java\n@@ -73,8 +73,7 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n         if (page != PageDto.DEFAULT_PAGE) {\n             transactionLogDto.setPage((page - 1) * transactionLogDto.getRow());\n         }\n-\n-        List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n+    List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n \n         return transactionLogs;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/453/TransactionLogInnerServiceSMOImpl.java\nindex 9860fbab384..a6556239461 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/453/TransactionLogInnerServiceSMOImpl.java\n@@ -74,7 +74,9 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n             transactionLogDto.setPage((page - 1) * transactionLogDto.getRow());\n         }\n \n-        List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n+        List<TransactionLogDto> transactionLogs = BeanConvertUtil\n+            .covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)),\n+                TransactionLogDto.class);\n \n         return transactionLogs;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/453/TransactionLogInnerServiceSMOImpl.java\nindex 9860fbab384..11045d00d53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/453/TransactionLogInnerServiceSMOImpl.java\n@@ -92,4 +92,4 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n     public void setTransactionLogServiceDaoImpl(ITransactionLogServiceDao transactionLogServiceDaoImpl) {\n         this.transactionLogServiceDaoImpl = transactionLogServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/453/TransactionLogInnerServiceSMOImpl.java\nindex 9860fbab384..f56e4f1ab24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/453/TransactionLogInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.common.smo.impl;\n \n-\n import com.java110.common.dao.ITransactionLogServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.core.factory.GenerateCodeFactory;\n@@ -15,7 +14,6 @@ import com.java110.utils.util.StringUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -26,6 +24,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements ITransactionLogInnerServiceSMO {\n \n@@ -35,14 +35,16 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n     @Autowired\n     private ITransactionLogMessageInnerServiceSMO transactionLogMessageInnerServiceSMOImpl;\n \n-\n     @Override\n     public int saveTransactionLog(@RequestBody TransactionLogPo transactionLogPo) {\n-        int saveFlag = 1;\n \n+\n+\n+        int saveFlag = 1;\n         if (StringUtil.isEmpty(transactionLogPo.getLogId()) || transactionLogPo.getLogId().startsWith(\"-\")) {\n             transactionLogPo.setLogId(GenerateCodeFactory.getGeneratorId(GenerateCodeFactory.CODE_PREFIX_logId));\n         }\n+\n         transactionLogServiceDaoImpl.saveTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogPo));\n         TransactionLogMessagePo transactionLogMessagePo = BeanConvertUtil.covertBean(transactionLogPo, TransactionLogMessagePo.class);\n         transactionLogMessageInnerServiceSMOImpl.saveTransactionLogMessage(transactionLogMessagePo);\n@@ -51,6 +53,9 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n \n     @Override\n     public int updateTransactionLog(@RequestBody TransactionLogPo transactionLogPo) {\n+\n+\n+\n         int saveFlag = 1;\n         transactionLogServiceDaoImpl.updateTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogPo));\n         return saveFlag;\n@@ -58,6 +63,9 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n \n     @Override\n     public int deleteTransactionLog(@RequestBody TransactionLogPo transactionLogPo) {\n+\n+\n+\n         int saveFlag = 1;\n         transactionLogServiceDaoImpl.updateTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogPo));\n         return saveFlag;\n@@ -68,18 +76,17 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = transactionLogDto.getPage();\n \n+\n+        int page = transactionLogDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             transactionLogDto.setPage((page - 1) * transactionLogDto.getRow());\n         }\n \n         List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n-\n         return transactionLogs;\n     }\n \n-\n     @Override\n     public int queryTransactionLogsCount(@RequestBody TransactionLogDto transactionLogDto) {\n         return transactionLogServiceDaoImpl.queryTransactionLogsCount(BeanConvertUtil.beanCovertMap(transactionLogDto));\n@@ -92,4 +99,4 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n     public void setTransactionLogServiceDaoImpl(ITransactionLogServiceDao transactionLogServiceDaoImpl) {\n         this.transactionLogServiceDaoImpl = transactionLogServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/453/TransactionLogInnerServiceSMOImpl.java\nindex 9860fbab384..4f6a3cf7e80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/453/TransactionLogInnerServiceSMOImpl.java\n@@ -72,9 +72,7 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             transactionLogDto.setPage((page - 1) * transactionLogDto.getRow());\n-        }\n-\n-        List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n+        }List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n \n         return transactionLogs;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 204).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/453/TransactionLogInnerServiceSMOImpl.java\nindex 9860fbab384..2c4e6f8f07d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/453/TransactionLogInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/453/TransactionLogInnerServiceSMOImpl.java\n@@ -73,8 +73,7 @@ public class TransactionLogInnerServiceSMOImpl extends BaseServiceSMO implements\n         if (page != PageDto.DEFAULT_PAGE) {\n             transactionLogDto.setPage((page - 1) * transactionLogDto.getRow());\n         }\n-\n-        List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n+    List<TransactionLogDto> transactionLogs = BeanConvertUtil.covertBeanList(transactionLogServiceDaoImpl.getTransactionLogInfo(BeanConvertUtil.beanCovertMap(transactionLogDto)), TransactionLogDto.class);\n \n         return transactionLogs;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
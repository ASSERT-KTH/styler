{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2898",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2898/PropertiesRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2898/PropertiesRepresentation.java\nindex 60752a8e2f6..724adb11d8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2898/PropertiesRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2898/PropertiesRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.time.temporal.Temporal;\n@@ -29,309 +30,309 @@ import org.neo4j.server.helpers.PropertyTypeDispatcher;\n \n public final class PropertiesRepresentation extends MappingRepresentation\n {\n-    private final PropertyContainer entity;\n+  private final PropertyContainer entity;\n+\n+  public PropertiesRepresentation(PropertyContainer entity)\n+  {\n+    super(RepresentationType.PROPERTIES);\n+    this.entity = entity;\n+  }\n+\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return !entity.getPropertyKeys()\n+        .iterator()\n+        .hasNext();\n+  }\n+\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    serialize(serializer.writer);\n+  }\n+\n+  void serialize(MappingWriter writer)\n+  {\n+    PropertyTypeDispatcher.consumeProperties(new Consumer(writer), entity);\n+  }\n+\n+  private static class Consumer extends PropertyTypeDispatcher<String, Void>\n+  {\n+    private final MappingWriter writer;\n+\n+    Consumer(MappingWriter serializer)\n+    {\n+      this.writer = serializer;\n+    }\n+\n+    @Override\n+    protected Void dispatchBooleanProperty(boolean property, String param)\n+    {\n+      writer.writeBoolean(param, property);\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchPointProperty(Point property, String param)\n+    {\n+      MappingWriter pointWriter = writer.newMapping(RepresentationType.POINT, param);\n+      writePoint(pointWriter, property);\n+      pointWriter.done();\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchTemporalProperty(Temporal property, String param)\n+    {\n+      writer.writeString(param, property.toString());\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchTemporalAmountProperty(TemporalAmount property, String param)\n+    {\n+      writer.writeString(param, property.toString());\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchByteProperty(byte property, String param)\n+    {\n+      writer.writeInteger(RepresentationType.BYTE, param, property);\n+      return null;\n+    }\n \n-    public PropertiesRepresentation( PropertyContainer entity )\n+    @Override\n+    protected Void dispatchCharacterProperty(char property, String param)\n     {\n-        super( RepresentationType.PROPERTIES );\n-        this.entity = entity;\n+      writer.writeInteger(RepresentationType.CHAR, param, property);\n+      return null;\n     }\n \n     @Override\n-    public boolean isEmpty()\n+    protected Void dispatchDoubleProperty(double property, String param)\n     {\n-        return !entity.getPropertyKeys()\n-                .iterator()\n-                .hasNext();\n+      writer.writeFloatingPointNumber(RepresentationType.DOUBLE, param, property);\n+      return null;\n     }\n \n     @Override\n-    protected void serialize( MappingSerializer serializer )\n+    protected Void dispatchFloatProperty(float property, String param)\n     {\n-        serialize( serializer.writer );\n+      writer.writeFloatingPointNumber(RepresentationType.FLOAT, param, property);\n+      return null;\n     }\n \n-    void serialize( MappingWriter writer )\n+    @Override\n+    protected Void dispatchIntegerProperty(int property, String param)\n     {\n-        PropertyTypeDispatcher.consumeProperties( new Consumer( writer ), entity );\n+      writer.writeInteger(RepresentationType.INTEGER, param, property);\n+      return null;\n     }\n \n-    private static class Consumer extends PropertyTypeDispatcher<String, Void>\n+    @Override\n+    protected Void dispatchLongProperty(long property, String param)\n     {\n-        private final MappingWriter writer;\n-\n-        Consumer( MappingWriter serializer )\n-        {\n-            this.writer = serializer;\n-        }\n-\n-        @Override\n-        protected Void dispatchBooleanProperty( boolean property, String param )\n-        {\n-            writer.writeBoolean( param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchPointProperty( Point property, String param )\n-        {\n-            MappingWriter pointWriter = writer.newMapping( RepresentationType.POINT, param );\n-            writePoint( pointWriter, property );\n-            pointWriter.done();\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchTemporalProperty( Temporal property, String param )\n-        {\n-            writer.writeString( param, property.toString() );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchTemporalAmountProperty( TemporalAmount property, String param )\n-        {\n-            writer.writeString( param, property.toString() );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchByteProperty( byte property, String param )\n-        {\n-            writer.writeInteger( RepresentationType.BYTE, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchCharacterProperty( char property, String param )\n-        {\n-            writer.writeInteger( RepresentationType.CHAR, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchDoubleProperty( double property, String param )\n-        {\n-            writer.writeFloatingPointNumber( RepresentationType.DOUBLE, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchFloatProperty( float property, String param )\n-        {\n-            writer.writeFloatingPointNumber( RepresentationType.FLOAT, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchIntegerProperty( int property, String param )\n-        {\n-            writer.writeInteger( RepresentationType.INTEGER, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchLongProperty( long property, String param )\n-        {\n-            writer.writeInteger( RepresentationType.LONG, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchShortProperty( short property, String param )\n-        {\n-            writer.writeInteger( RepresentationType.SHORT, param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchStringProperty( String property, String param )\n-        {\n-            writer.writeString( param, property );\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchStringArrayProperty( String[] property, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.STRING, param );\n-            for ( String s : property )\n-            {\n-                list.writeString( s );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchPointArrayProperty( Point[] property, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.POINT, param );\n-            for ( Point p : property )\n-            {\n-                MappingWriter pointWriter = list.newMapping( RepresentationType.POINT );\n-                writePoint( pointWriter, p);\n-                pointWriter.done();\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchTemporalArrayProperty( Temporal[] property, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.TEMPORAL, param );\n-            for ( Temporal p : property )\n-            {\n-                list.writeString( p.toString() );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        protected Void dispatchTemporalAmountArrayProperty( TemporalAmount[] property, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.TEMPORAL_AMOUNT, param );\n-            for ( TemporalAmount p : property )\n-            {\n-                list.writeString( p.toString() );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchByteArrayProperty( PropertyArray<byte[], Byte> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.BYTE, param );\n-            for ( Byte b : array )\n-            {\n-                list.writeInteger( RepresentationType.BYTE, b );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchShortArrayProperty( PropertyArray<short[], Short> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.SHORT, param );\n-            for ( Short s : array )\n-            {\n-                list.writeInteger( RepresentationType.SHORT, s );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchCharacterArrayProperty( PropertyArray<char[], Character> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.CHAR, param );\n-            for ( Character c : array )\n-            {\n-                list.writeInteger( RepresentationType.CHAR, c );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchIntegerArrayProperty( PropertyArray<int[], Integer> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.INTEGER, param );\n-            for ( Integer i : array )\n-            {\n-                list.writeInteger( RepresentationType.INTEGER, i );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchLongArrayProperty( PropertyArray<long[], Long> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.LONG, param );\n-            for ( Long j : array )\n-            {\n-                list.writeInteger( RepresentationType.LONG, j );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchFloatArrayProperty( PropertyArray<float[], Float> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.FLOAT, param );\n-            for ( Float f : array )\n-            {\n-                list.writeFloatingPointNumber( RepresentationType.FLOAT, f );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchDoubleArrayProperty( PropertyArray<double[], Double> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.DOUBLE, param );\n-            for ( Double d : array )\n-            {\n-                list.writeFloatingPointNumber( RepresentationType.DOUBLE, d );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        @Override\n-        @SuppressWarnings( \"boxing\" )\n-        protected Void dispatchBooleanArrayProperty( PropertyArray<boolean[], Boolean> array, String param )\n-        {\n-            ListWriter list = writer.newList( RepresentationType.BOOLEAN, param );\n-            for ( Boolean z : array )\n-            {\n-                list.writeBoolean( z );\n-            }\n-            list.done();\n-            return null;\n-        }\n-\n-        private void writePoint( MappingWriter pointWriter, Point property )\n-        {\n-            pointWriter.writeString( \"type\", property.getGeometryType() );\n-            //write coordinates\n-            ListWriter coordinatesWriter = pointWriter.newList( RepresentationType.DOUBLE, \"coordinates\" );\n-            for ( Double coordinate : property.getCoordinate().getCoordinate() )\n-            {\n-                coordinatesWriter.writeFloatingPointNumber( RepresentationType.DOUBLE, coordinate );\n-            }\n-            coordinatesWriter.done();\n-\n-            //Write coordinate reference system\n-            CRS crs = property.getCRS();\n-            MappingWriter crsWriter = pointWriter.newMapping( RepresentationType.MAP, \"crs\" );\n-            crsWriter.writeInteger( RepresentationType.INTEGER, \"srid\", crs.getCode() );\n-            crsWriter.writeString( \"name\", crs.getType() );\n-            crsWriter.writeString( \"type\", \"link\" );\n-            MappingWriter propertiesWriter = crsWriter.newMapping( Representation.MAP, \"properties\" );\n-            propertiesWriter.writeString( \"href\", crs.getHref() + \"ogcwkt/\" );\n-            propertiesWriter.writeString( \"type\",\"ogcwkt\" );\n-            propertiesWriter.done();\n-            crsWriter.done();\n-        }\n+      writer.writeInteger(RepresentationType.LONG, param, property);\n+      return null;\n     }\n \n-    public static Representation value( Object property )\n+    @Override\n+    protected Void dispatchShortProperty(short property, String param)\n     {\n-        return ValueRepresentation.property( property );\n+      writer.writeInteger(RepresentationType.SHORT, param, property);\n+      return null;\n     }\n+\n+    @Override\n+    protected Void dispatchStringProperty(String property, String param)\n+    {\n+      writer.writeString(param, property);\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchStringArrayProperty(String[] property, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.STRING, param);\n+      for (String s : property)\n+      {\n+        list.writeString(s);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchPointArrayProperty(Point[] property, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.POINT, param);\n+      for (Point p : property)\n+      {\n+        MappingWriter pointWriter = list.newMapping(RepresentationType.POINT);\n+        writePoint(pointWriter, p);\n+        pointWriter.done();\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchTemporalArrayProperty(Temporal[] property, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.TEMPORAL, param);\n+      for (Temporal p : property)\n+      {\n+        list.writeString(p.toString());\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    protected Void dispatchTemporalAmountArrayProperty(TemporalAmount[] property, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.TEMPORAL_AMOUNT, param);\n+      for (TemporalAmount p : property)\n+      {\n+        list.writeString(p.toString());\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchByteArrayProperty(PropertyArray<byte[], Byte> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.BYTE, param);\n+      for (Byte b : array)\n+      {\n+        list.writeInteger(RepresentationType.BYTE, b);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchShortArrayProperty(PropertyArray<short[], Short> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.SHORT, param);\n+      for (Short s : array)\n+      {\n+        list.writeInteger(RepresentationType.SHORT, s);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchCharacterArrayProperty(PropertyArray<char[], Character> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.CHAR, param);\n+      for (Character c : array)\n+      {\n+        list.writeInteger(RepresentationType.CHAR, c);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchIntegerArrayProperty(PropertyArray<int[], Integer> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.INTEGER, param);\n+      for (Integer i : array)\n+      {\n+        list.writeInteger(RepresentationType.INTEGER, i);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchLongArrayProperty(PropertyArray<long[], Long> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.LONG, param);\n+      for (Long j : array)\n+      {\n+        list.writeInteger(RepresentationType.LONG, j);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchFloatArrayProperty(PropertyArray<float[], Float> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.FLOAT, param);\n+      for (Float f : array)\n+      {\n+        list.writeFloatingPointNumber(RepresentationType.FLOAT, f);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchDoubleArrayProperty(PropertyArray<double[], Double> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.DOUBLE, param);\n+      for (Double d : array)\n+      {\n+        list.writeFloatingPointNumber(RepresentationType.DOUBLE, d);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"boxing\")\n+    protected Void dispatchBooleanArrayProperty(PropertyArray<boolean[], Boolean> array, String param)\n+    {\n+      ListWriter list = writer.newList(RepresentationType.BOOLEAN, param);\n+      for (Boolean z : array)\n+      {\n+        list.writeBoolean(z);\n+      }\n+      list.done();\n+      return null;\n+    }\n+\n+    private void writePoint(MappingWriter pointWriter, Point property)\n+    {\n+      pointWriter.writeString(\"type\", property.getGeometryType());\n+      //write coordinates\n+      ListWriter coordinatesWriter = pointWriter.newList(RepresentationType.DOUBLE, \"coordinates\");\n+      for (Double coordinate : property.getCoordinate().getCoordinate())\n+      {\n+        coordinatesWriter.writeFloatingPointNumber(RepresentationType.DOUBLE, coordinate);\n+      }\n+      coordinatesWriter.done();\n+\n+      //Write coordinate reference system\n+      CRS crs = property.getCRS();\n+      MappingWriter crsWriter = pointWriter.newMapping(RepresentationType.MAP, \"crs\");\n+      crsWriter.writeInteger(RepresentationType.INTEGER, \"srid\", crs.getCode());\n+      crsWriter.writeString(\"name\", crs.getType());\n+      crsWriter.writeString(\"type\", \"link\");\n+      MappingWriter propertiesWriter = crsWriter.newMapping(Representation.MAP, \"properties\");\n+      propertiesWriter.writeString(\"href\", crs.getHref() + \"ogcwkt/\");\n+      propertiesWriter.writeString(\"type\", \"ogcwkt\");\n+      propertiesWriter.done();\n+      crsWriter.done();\n+    }\n+  }\n+\n+  public static Representation value(Object property)\n+  {\n+    return ValueRepresentation.property(property);\n+  }\n }\n",
            "diff_size": 555
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2898/PropertiesRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2898/PropertiesRepresentation.java\nindex 60752a8e2f6..68829ba9e58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2898/PropertiesRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2898/PropertiesRepresentation.java\n@@ -40,9 +40,7 @@ public final class PropertiesRepresentation extends MappingRepresentation\n     @Override\n     public boolean isEmpty()\n     {\n-        return !entity.getPropertyKeys()\n-                .iterator()\n-                .hasNext();\n+        return !entity.getPropertyKeys().iterator().hasNext();\n     }\n \n     @Override\n@@ -170,7 +168,7 @@ public final class PropertiesRepresentation extends MappingRepresentation\n             for ( Point p : property )\n             {\n                 MappingWriter pointWriter = list.newMapping( RepresentationType.POINT );\n-                writePoint( pointWriter, p);\n+                writePoint( pointWriter, p );\n                 pointWriter.done();\n             }\n             list.done();\n@@ -324,7 +322,7 @@ public final class PropertiesRepresentation extends MappingRepresentation\n             crsWriter.writeString( \"type\", \"link\" );\n             MappingWriter propertiesWriter = crsWriter.newMapping( Representation.MAP, \"properties\" );\n             propertiesWriter.writeString( \"href\", crs.getHref() + \"ogcwkt/\" );\n-            propertiesWriter.writeString( \"type\",\"ogcwkt\" );\n+            propertiesWriter.writeString( \"type\", \"ogcwkt\" );\n             propertiesWriter.done();\n             crsWriter.done();\n         }\n@@ -334,4 +332,4 @@ public final class PropertiesRepresentation extends MappingRepresentation\n     {\n         return ValueRepresentation.property( property );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
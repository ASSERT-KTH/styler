{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2520",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2520/TemporalIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2520/TemporalIndexAccessor.java\nindex 878a351d2b6..c1f36287995 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2520/TemporalIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2520/TemporalIndexAccessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.File;\n@@ -49,236 +50,236 @@ import static org.neo4j.kernel.impl.index.schema.fusion.FusionIndexBase.forAll;\n \n class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.PartAccessor<?>> implements IndexAccessor\n {\n-    private final SchemaIndexDescriptor descriptor;\n-\n-    TemporalIndexAccessor( long indexId,\n-                           SchemaIndexDescriptor descriptor,\n-                           IndexSamplingConfig samplingConfig,\n-                           PageCache pageCache,\n-                           FileSystemAbstraction fs,\n-                           RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-                           IndexProvider.Monitor monitor,\n-                           TemporalIndexFiles temporalIndexFiles ) throws IOException\n-    {\n-        super( new PartFactory( pageCache, fs, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig, temporalIndexFiles ) );\n-        this.descriptor = descriptor;\n-\n-        temporalIndexFiles.loadExistingIndexes( this );\n-    }\n-\n-    @Override\n-    public void drop() throws IOException\n+  private final SchemaIndexDescriptor descriptor;\n+\n+  TemporalIndexAccessor(long indexId,\n+                        SchemaIndexDescriptor descriptor,\n+                        IndexSamplingConfig samplingConfig,\n+                        PageCache pageCache,\n+                        FileSystemAbstraction fs,\n+                        RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+                        IndexProvider.Monitor monitor,\n+                        TemporalIndexFiles temporalIndexFiles) throws IOException\n+  {\n+    super(new PartFactory(pageCache, fs, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig, temporalIndexFiles));\n+    this.descriptor = descriptor;\n+\n+    temporalIndexFiles.loadExistingIndexes(this);\n+  }\n+\n+  @Override\n+  public void drop() throws IOException\n+  {\n+    forAll(NativeSchemaIndexAccessor::drop, this);\n+  }\n+\n+  @Override\n+  public IndexUpdater newUpdater(IndexUpdateMode mode)\n+  {\n+    return new TemporalIndexUpdater(this, mode);\n+  }\n+\n+  @Override\n+  public void force(IOLimiter ioLimiter) throws IOException\n+  {\n+    for (NativeSchemaIndexAccessor part : this)\n     {\n-        forAll( NativeSchemaIndexAccessor::drop, this );\n+      part.force(ioLimiter);\n     }\n-\n-    @Override\n-    public IndexUpdater newUpdater( IndexUpdateMode mode )\n+  }\n+\n+  @Override\n+  public void refresh()\n+  {\n+    // not required in this implementation\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    closeInstantiateCloseLock();\n+    forAll(NativeSchemaIndexAccessor::close, this);\n+  }\n+\n+  @Override\n+  public IndexReader newReader()\n+  {\n+    return new TemporalIndexReader(descriptor, this);\n+  }\n+\n+  @Override\n+  public BoundedIterable<Long> newAllEntriesReader()\n+  {\n+    ArrayList<BoundedIterable<Long>> allEntriesReader = new ArrayList<>();\n+    for (NativeSchemaIndexAccessor<?, ?> part : this)\n     {\n-        return new TemporalIndexUpdater( this, mode );\n+      allEntriesReader.add(part.newAllEntriesReader());\n     }\n \n-    @Override\n-    public void force( IOLimiter ioLimiter ) throws IOException\n+    return new BoundedIterable<Long>()\n     {\n-        for ( NativeSchemaIndexAccessor part : this )\n+      @Override\n+      public long maxCount()\n+      {\n+        long sum = 0L;\n+        for (BoundedIterable<Long> part : allEntriesReader)\n         {\n-            part.force( ioLimiter );\n+          long partMaxCount = part.maxCount();\n+          if (partMaxCount == UNKNOWN_MAX_COUNT)\n+          {\n+            return UNKNOWN_MAX_COUNT;\n+          }\n+          sum += partMaxCount;\n         }\n+        return sum;\n+      }\n+\n+      @Override\n+      public void close() throws Exception\n+      {\n+        forAll(BoundedIterable::close, allEntriesReader);\n+      }\n+\n+      @Override\n+      public Iterator<Long> iterator()\n+      {\n+        return new CombiningIterable<>(allEntriesReader).iterator();\n+      }\n+    };\n+  }\n+\n+  @Override\n+  public ResourceIterator<File> snapshotFiles()\n+  {\n+    List<ResourceIterator<File>> snapshotFiles = new ArrayList<>();\n+    for (NativeSchemaIndexAccessor<?, ?> part : this)\n+    {\n+      snapshotFiles.add(part.snapshotFiles());\n+    }\n+    return concatResourceIterators(snapshotFiles.iterator());\n+  }\n+\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor propertyAccessor)\n+  {\n+    // Not needed since uniqueness is verified automatically w/o cost for every update.\n+  }\n+\n+  @Override\n+  public boolean isDirty()\n+  {\n+    return Iterators.stream(iterator()).anyMatch(NativeSchemaIndexAccessor::isDirty);\n+  }\n+\n+  static class PartAccessor<KEY extends NativeSchemaKey<KEY>> extends NativeSchemaIndexAccessor<KEY, NativeSchemaValue>\n+  {\n+    private final Layout<KEY, NativeSchemaValue> layout;\n+    private final SchemaIndexDescriptor descriptor;\n+    private final IndexSamplingConfig samplingConfig;\n+\n+    PartAccessor(PageCache pageCache,\n+                 FileSystemAbstraction fs,\n+                 TemporalIndexFiles.FileLayout<KEY> fileLayout,\n+                 RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+                 IndexProvider.Monitor monitor,\n+                 SchemaIndexDescriptor descriptor,\n+                 long indexId,\n+                 IndexSamplingConfig samplingConfig) throws IOException\n+    {\n+      super(pageCache, fs, fileLayout.indexFile, fileLayout.layout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig);\n+      this.layout = fileLayout.layout;\n+      this.descriptor = descriptor;\n+      this.samplingConfig = samplingConfig;\n     }\n \n     @Override\n-    public void refresh()\n+    public TemporalIndexPartReader<KEY> newReader()\n+    {\n+      assertOpen();\n+      return new TemporalIndexPartReader<>(tree, layout, samplingConfig, descriptor);\n+    }\n+  }\n+\n+  static class PartFactory implements TemporalIndexCache.Factory<PartAccessor<?>>\n+  {\n+    private final PageCache pageCache;\n+    private final FileSystemAbstraction fs;\n+    private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n+    private final IndexProvider.Monitor monitor;\n+    private final SchemaIndexDescriptor descriptor;\n+    private final long indexId;\n+    private final IndexSamplingConfig samplingConfig;\n+    private final TemporalIndexFiles temporalIndexFiles;\n+\n+    PartFactory(PageCache pageCache,\n+                FileSystemAbstraction fs,\n+                RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+                IndexProvider.Monitor monitor,\n+                SchemaIndexDescriptor descriptor,\n+                long indexId,\n+                IndexSamplingConfig samplingConfig,\n+                TemporalIndexFiles temporalIndexFiles)\n     {\n-        // not required in this implementation\n+      this.pageCache = pageCache;\n+      this.fs = fs;\n+      this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n+      this.monitor = monitor;\n+      this.descriptor = descriptor;\n+      this.indexId = indexId;\n+      this.samplingConfig = samplingConfig;\n+      this.temporalIndexFiles = temporalIndexFiles;\n     }\n \n     @Override\n-    public void close() throws IOException\n+    public PartAccessor<?> newDate() throws IOException\n     {\n-        closeInstantiateCloseLock();\n-        forAll( NativeSchemaIndexAccessor::close, this );\n+      return createPartAccessor(temporalIndexFiles.date());\n     }\n \n     @Override\n-    public IndexReader newReader()\n+    public PartAccessor<?> newLocalDateTime() throws IOException\n     {\n-        return new TemporalIndexReader( descriptor, this );\n+      return createPartAccessor(temporalIndexFiles.localDateTime());\n     }\n \n     @Override\n-    public BoundedIterable<Long> newAllEntriesReader()\n+    public PartAccessor<?> newZonedDateTime() throws IOException\n     {\n-        ArrayList<BoundedIterable<Long>> allEntriesReader = new ArrayList<>();\n-        for ( NativeSchemaIndexAccessor<?,?> part : this )\n-        {\n-            allEntriesReader.add( part.newAllEntriesReader() );\n-        }\n-\n-        return new BoundedIterable<Long>()\n-        {\n-            @Override\n-            public long maxCount()\n-            {\n-                long sum = 0L;\n-                for ( BoundedIterable<Long> part : allEntriesReader )\n-                {\n-                    long partMaxCount = part.maxCount();\n-                    if ( partMaxCount == UNKNOWN_MAX_COUNT )\n-                    {\n-                        return UNKNOWN_MAX_COUNT;\n-                    }\n-                    sum += partMaxCount;\n-                }\n-                return sum;\n-            }\n-\n-            @Override\n-            public void close() throws Exception\n-            {\n-                forAll( BoundedIterable::close, allEntriesReader );\n-            }\n-\n-            @Override\n-            public Iterator<Long> iterator()\n-            {\n-                return new CombiningIterable<>( allEntriesReader ).iterator();\n-            }\n-        };\n+      return createPartAccessor(temporalIndexFiles.zonedDateTime());\n     }\n \n     @Override\n-    public ResourceIterator<File> snapshotFiles()\n+    public PartAccessor<?> newLocalTime() throws IOException\n     {\n-        List<ResourceIterator<File>> snapshotFiles = new ArrayList<>();\n-        for ( NativeSchemaIndexAccessor<?,?> part : this )\n-        {\n-            snapshotFiles.add( part.snapshotFiles() );\n-        }\n-        return concatResourceIterators( snapshotFiles.iterator() );\n+      return createPartAccessor(temporalIndexFiles.localTime());\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor )\n+    public PartAccessor<?> newZonedTime() throws IOException\n     {\n-        // Not needed since uniqueness is verified automatically w/o cost for every update.\n+      return createPartAccessor(temporalIndexFiles.zonedTime());\n     }\n \n     @Override\n-    public boolean isDirty()\n+    public PartAccessor<?> newDuration() throws IOException\n     {\n-        return Iterators.stream( iterator() ).anyMatch( NativeSchemaIndexAccessor::isDirty );\n+      return createPartAccessor(temporalIndexFiles.duration());\n     }\n \n-    static class PartAccessor<KEY extends NativeSchemaKey<KEY>> extends NativeSchemaIndexAccessor<KEY, NativeSchemaValue>\n+    private <KEY extends NativeSchemaKey<KEY>> PartAccessor<KEY> createPartAccessor(TemporalIndexFiles.FileLayout<KEY> fileLayout) throws IOException\n     {\n-        private final Layout<KEY,NativeSchemaValue> layout;\n-        private final SchemaIndexDescriptor descriptor;\n-        private final IndexSamplingConfig samplingConfig;\n-\n-        PartAccessor( PageCache pageCache,\n-                      FileSystemAbstraction fs,\n-                      TemporalIndexFiles.FileLayout<KEY> fileLayout,\n-                      RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-                      IndexProvider.Monitor monitor,\n-                      SchemaIndexDescriptor descriptor,\n-                      long indexId,\n-                      IndexSamplingConfig samplingConfig ) throws IOException\n-        {\n-            super( pageCache, fs, fileLayout.indexFile, fileLayout.layout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig );\n-            this.layout = fileLayout.layout;\n-            this.descriptor = descriptor;\n-            this.samplingConfig = samplingConfig;\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<KEY> newReader()\n-        {\n-            assertOpen();\n-            return new TemporalIndexPartReader<>( tree, layout, samplingConfig, descriptor );\n-        }\n+      if (!fs.fileExists(fileLayout.indexFile))\n+      {\n+        createEmptyIndex(fileLayout);\n+      }\n+      return new PartAccessor<>(pageCache, fs, fileLayout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig);\n     }\n \n-    static class PartFactory implements TemporalIndexCache.Factory<PartAccessor<?>>\n+    private <KEY extends NativeSchemaKey<KEY>> void createEmptyIndex(TemporalIndexFiles.FileLayout<KEY> fileLayout) throws IOException\n     {\n-        private final PageCache pageCache;\n-        private final FileSystemAbstraction fs;\n-        private final RecoveryCleanupWorkCollector recoveryCleanupWorkCollector;\n-        private final IndexProvider.Monitor monitor;\n-        private final SchemaIndexDescriptor descriptor;\n-        private final long indexId;\n-        private final IndexSamplingConfig samplingConfig;\n-        private final TemporalIndexFiles temporalIndexFiles;\n-\n-        PartFactory( PageCache pageCache,\n-                     FileSystemAbstraction fs,\n-                     RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-                     IndexProvider.Monitor monitor,\n-                     SchemaIndexDescriptor descriptor,\n-                     long indexId,\n-                     IndexSamplingConfig samplingConfig,\n-                     TemporalIndexFiles temporalIndexFiles )\n-        {\n-            this.pageCache = pageCache;\n-            this.fs = fs;\n-            this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n-            this.monitor = monitor;\n-            this.descriptor = descriptor;\n-            this.indexId = indexId;\n-            this.samplingConfig = samplingConfig;\n-            this.temporalIndexFiles = temporalIndexFiles;\n-        }\n-\n-        @Override\n-        public PartAccessor<?> newDate() throws IOException\n-        {\n-            return createPartAccessor( temporalIndexFiles.date() );\n-        }\n-\n-        @Override\n-        public PartAccessor<?> newLocalDateTime() throws IOException\n-        {\n-            return createPartAccessor( temporalIndexFiles.localDateTime() );\n-        }\n-\n-        @Override\n-        public PartAccessor<?> newZonedDateTime() throws IOException\n-        {\n-            return createPartAccessor( temporalIndexFiles.zonedDateTime() );\n-        }\n-\n-        @Override\n-        public PartAccessor<?> newLocalTime() throws IOException\n-        {\n-            return createPartAccessor( temporalIndexFiles.localTime() );\n-        }\n-\n-        @Override\n-        public PartAccessor<?> newZonedTime() throws IOException\n-        {\n-            return createPartAccessor( temporalIndexFiles.zonedTime() );\n-        }\n-\n-        @Override\n-        public PartAccessor<?> newDuration() throws IOException\n-        {\n-            return createPartAccessor( temporalIndexFiles.duration() );\n-        }\n-\n-        private <KEY extends NativeSchemaKey<KEY>> PartAccessor<KEY> createPartAccessor( TemporalIndexFiles.FileLayout<KEY> fileLayout ) throws IOException\n-        {\n-            if ( !fs.fileExists( fileLayout.indexFile ) )\n-            {\n-                createEmptyIndex( fileLayout );\n-            }\n-            return new PartAccessor<>( pageCache, fs, fileLayout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig );\n-        }\n-\n-        private <KEY extends NativeSchemaKey<KEY>> void createEmptyIndex( TemporalIndexFiles.FileLayout<KEY> fileLayout ) throws IOException\n-        {\n-            IndexPopulator populator = new TemporalIndexPopulator.PartPopulator<>( pageCache, fs, fileLayout, monitor, descriptor, indexId, samplingConfig );\n-            populator.create();\n-            populator.close( true );\n-        }\n+      IndexPopulator populator = new TemporalIndexPopulator.PartPopulator<>(pageCache, fs, fileLayout, monitor, descriptor, indexId, samplingConfig);\n+      populator.create();\n+      populator.close(true);\n     }\n+  }\n }\n",
            "diff_size": 328
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2520/TemporalIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2520/TemporalIndexAccessor.java\nindex 878a351d2b6..41191a9a49e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2520/TemporalIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2520/TemporalIndexAccessor.java\n@@ -51,15 +51,14 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n {\n     private final SchemaIndexDescriptor descriptor;\n \n-    TemporalIndexAccessor( long indexId,\n-                           SchemaIndexDescriptor descriptor,\n+    TemporalIndexAccessor( long indexId, SchemaIndexDescriptor descriptor,\n                            IndexSamplingConfig samplingConfig,\n                            PageCache pageCache,\n                            FileSystemAbstraction fs,\n                            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n                            IndexProvider.Monitor monitor,\n                            TemporalIndexFiles temporalIndexFiles ) throws IOException\n-    {\n+{\n         super( new PartFactory( pageCache, fs, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig, temporalIndexFiles ) );\n         this.descriptor = descriptor;\n \n@@ -110,7 +109,7 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n     public BoundedIterable<Long> newAllEntriesReader()\n     {\n         ArrayList<BoundedIterable<Long>> allEntriesReader = new ArrayList<>();\n-        for ( NativeSchemaIndexAccessor<?,?> part : this )\n+        for ( NativeSchemaIndexAccessor<?, ?> part : this )\n         {\n             allEntriesReader.add( part.newAllEntriesReader() );\n         }\n@@ -128,9 +127,11 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n                     {\n                         return UNKNOWN_MAX_COUNT;\n                     }\n-                    sum += partMaxCount;\n+\n+sum += partMaxCount;\n                 }\n-                return sum;\n+\n+return sum;\n             }\n \n             @Override\n@@ -151,11 +152,12 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n     public ResourceIterator<File> snapshotFiles()\n     {\n         List<ResourceIterator<File>> snapshotFiles = new ArrayList<>();\n-        for ( NativeSchemaIndexAccessor<?,?> part : this )\n+        for ( NativeSchemaIndexAccessor<?, ?> part : this )\n         {\n             snapshotFiles.add( part.snapshotFiles() );\n         }\n-        return concatResourceIterators( snapshotFiles.iterator() );\n+\n+return concatResourceIterators( snapshotFiles.iterator() );\n     }\n \n     @Override\n@@ -176,15 +178,14 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n         private final SchemaIndexDescriptor descriptor;\n         private final IndexSamplingConfig samplingConfig;\n \n-        PartAccessor( PageCache pageCache,\n-                      FileSystemAbstraction fs,\n+        PartAccessor( PageCache pageCache, FileSystemAbstraction fs,\n                       TemporalIndexFiles.FileLayout<KEY> fileLayout,\n                       RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n                       IndexProvider.Monitor monitor,\n                       SchemaIndexDescriptor descriptor,\n                       long indexId,\n                       IndexSamplingConfig samplingConfig ) throws IOException\n-        {\n+{\n             super( pageCache, fs, fileLayout.indexFile, fileLayout.layout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig );\n             this.layout = fileLayout.layout;\n             this.descriptor = descriptor;\n@@ -210,15 +211,14 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n         private final IndexSamplingConfig samplingConfig;\n         private final TemporalIndexFiles temporalIndexFiles;\n \n-        PartFactory( PageCache pageCache,\n-                     FileSystemAbstraction fs,\n+        PartFactory( PageCache pageCache, FileSystemAbstraction fs,\n                      RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n                      IndexProvider.Monitor monitor,\n                      SchemaIndexDescriptor descriptor,\n                      long indexId,\n                      IndexSamplingConfig samplingConfig,\n                      TemporalIndexFiles temporalIndexFiles )\n-        {\n+{\n             this.pageCache = pageCache;\n             this.fs = fs;\n             this.recoveryCleanupWorkCollector = recoveryCleanupWorkCollector;\n@@ -281,4 +281,4 @@ class TemporalIndexAccessor extends TemporalIndexCache<TemporalIndexAccessor.Par\n             populator.close( true );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
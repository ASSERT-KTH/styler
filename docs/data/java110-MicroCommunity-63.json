{
    "project_name": "java110-MicroCommunity",
    "error_id": "63",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 178).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<StoreAttrDto> storeAttrs = BeanConvertUtil.covertBeanList(storeAttrServiceDaoImpl.getStoreAttrInfo(BeanConvertUtil.beanCovertMap(storeAttrDto)), StoreAttrDto.class);\n\n        if (storeAttrs == null || storeAttrs.size() == 0) {\n            return storeAttrs;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/63/StoreAttrInnerServiceSMOImpl.java\nindex 6099d6b5f32..537f0b7bebc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/63/StoreAttrInnerServiceSMOImpl.java\n@@ -32,7 +32,7 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<StoreAttrDto> queryStoreAttrs(@RequestBody  StoreAttrDto storeAttrDto) {\n+    public List<StoreAttrDto> queryStoreAttrs(@RequestBody StoreAttrDto storeAttrDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n@@ -42,7 +42,8 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n             storeAttrDto.setPage((page - 1) * storeAttrDto.getRow());\n         }\n \n-        List<StoreAttrDto> storeAttrs = BeanConvertUtil.covertBeanList(storeAttrServiceDaoImpl.getStoreAttrInfo(BeanConvertUtil.beanCovertMap(storeAttrDto)), StoreAttrDto.class);\n+        List<StoreAttrDto> storeAttrs =\n+            BeanConvertUtil.covertBeanList(storeAttrServiceDaoImpl.getStoreAttrInfo(BeanConvertUtil.beanCovertMap(storeAttrDto)), StoreAttrDto.class);\n \n         if (storeAttrs == null || storeAttrs.size() == 0) {\n             return storeAttrs;\n@@ -54,7 +55,8 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n \n     @Override\n     public int queryStoreAttrsCount(@RequestBody StoreAttrDto storeAttrDto) {\n-        return storeAttrServiceDaoImpl.queryStoreAttrsCount(BeanConvertUtil.beanCovertMap(storeAttrDto));    }\n+        return storeAttrServiceDaoImpl.queryStoreAttrsCount(BeanConvertUtil.beanCovertMap(storeAttrDto));\n+    }\n \n     public IStoreAttrServiceDao getStoreAttrServiceDaoImpl() {\n         return storeAttrServiceDaoImpl;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/63/StoreAttrInnerServiceSMOImpl.java\nindex 6099d6b5f32..5392d4175e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/63/StoreAttrInnerServiceSMOImpl.java\n@@ -71,4 +71,4 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/63/StoreAttrInnerServiceSMOImpl.java\nindex 6099d6b5f32..0e5b845bffd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/63/StoreAttrInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.store.smo.impl;\n \n-\n import com.java110.dto.store.StoreAttrDto;\n import com.java110.store.dao.IStoreAttrServiceDao;\n import com.java110.utils.util.BeanConvertUtil;\n@@ -11,7 +10,6 @@ import com.java110.dto.PageDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements IStoreAttrInnerServiceSMO {\n \n@@ -32,29 +32,28 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<StoreAttrDto> queryStoreAttrs(@RequestBody  StoreAttrDto storeAttrDto) {\n+    public List<StoreAttrDto> queryStoreAttrs(@RequestBody StoreAttrDto storeAttrDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = storeAttrDto.getPage();\n \n+\n+        int page = storeAttrDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             storeAttrDto.setPage((page - 1) * storeAttrDto.getRow());\n         }\n \n         List<StoreAttrDto> storeAttrs = BeanConvertUtil.covertBeanList(storeAttrServiceDaoImpl.getStoreAttrInfo(BeanConvertUtil.beanCovertMap(storeAttrDto)), StoreAttrDto.class);\n-\n         if (storeAttrs == null || storeAttrs.size() == 0) {\n             return storeAttrs;\n         }\n-\n         return storeAttrs;\n     }\n \n-\n     @Override\n     public int queryStoreAttrsCount(@RequestBody StoreAttrDto storeAttrDto) {\n-        return storeAttrServiceDaoImpl.queryStoreAttrsCount(BeanConvertUtil.beanCovertMap(storeAttrDto));    }\n+        return storeAttrServiceDaoImpl.queryStoreAttrsCount(BeanConvertUtil.beanCovertMap(storeAttrDto));\n+    }\n \n     public IStoreAttrServiceDao getStoreAttrServiceDaoImpl() {\n         return storeAttrServiceDaoImpl;\n@@ -71,4 +70,4 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/63/StoreAttrInnerServiceSMOImpl.java\nindex 6099d6b5f32..1097d52e997 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/63/StoreAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/63/StoreAttrInnerServiceSMOImpl.java\n@@ -42,7 +42,7 @@ public class StoreAttrInnerServiceSMOImpl extends BaseServiceSMO implements ISto\n             storeAttrDto.setPage((page - 1) * storeAttrDto.getRow());\n         }\n \n-        List<StoreAttrDto> storeAttrs = BeanConvertUtil.covertBeanList(storeAttrServiceDaoImpl.getStoreAttrInfo(BeanConvertUtil.beanCovertMap(storeAttrDto)), StoreAttrDto.class);\n+    List<StoreAttrDto> storeAttrs = BeanConvertUtil.covertBeanList(storeAttrServiceDaoImpl.getStoreAttrInfo(BeanConvertUtil.beanCovertMap(storeAttrDto)), StoreAttrDto.class);\n \n         if (storeAttrs == null || storeAttrs.size() == 0) {\n             return storeAttrs;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
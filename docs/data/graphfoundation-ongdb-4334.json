{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4334",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4334/LuceneIndexSnapshots.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4334/LuceneIndexSnapshots.java\nindex cf48a012f25..0d62eb32a81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4334/LuceneIndexSnapshots.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4334/LuceneIndexSnapshots.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.backup;\n \n import org.apache.lucene.index.DirectoryReader;\n@@ -42,62 +43,63 @@ import static org.neo4j.helpers.collection.Iterators.emptyResourceIterator;\n  */\n public class LuceneIndexSnapshots\n {\n-    private LuceneIndexSnapshots()\n-    {\n-    }\n+  private LuceneIndexSnapshots()\n+  {\n+  }\n \n-    /**\n-     * Create index snapshot iterator for a writable index.\n-     * @param indexFolder index location folder\n-     * @param indexWriter index writer\n-     * @return index file name iterator\n-     * @throws IOException\n-     */\n-    public static ResourceIterator<File> forIndex( File indexFolder, IndexWriter indexWriter ) throws IOException\n+  /**\n+   * Create index snapshot iterator for a writable index.\n+   *\n+   * @param indexFolder index location folder\n+   * @param indexWriter index writer\n+   * @return index file name iterator\n+   * @throws IOException\n+   */\n+  public static ResourceIterator<File> forIndex(File indexFolder, IndexWriter indexWriter) throws IOException\n+  {\n+    IndexDeletionPolicy deletionPolicy = indexWriter.getConfig().getIndexDeletionPolicy();\n+    if (deletionPolicy instanceof SnapshotDeletionPolicy)\n     {\n-        IndexDeletionPolicy deletionPolicy = indexWriter.getConfig().getIndexDeletionPolicy();\n-        if ( deletionPolicy instanceof SnapshotDeletionPolicy )\n-        {\n-            SnapshotDeletionPolicy policy = (SnapshotDeletionPolicy) deletionPolicy;\n-            return hasCommits( indexWriter )\n-                   ? new WritableIndexSnapshotFileIterator( indexFolder, policy )\n-                   : emptyResourceIterator();\n-        }\n-        else\n-        {\n-            throw new UnsupportedIndexDeletionPolicy( \"Can't perform index snapshot with specified index deletion \" +\n-                                                      \"policy: \" + deletionPolicy.getClass().getName() + \". \" +\n-                                                      \"Only \" + SnapshotDeletionPolicy.class.getName() + \" is \" +\n-                                                      \"supported\" );\n-        }\n-    }\n-\n-    /**\n-     * Create index snapshot iterator for a read only index.\n-     * @param indexFolder index location folder\n-     * @param directory index directory\n-     * @return index file name resource iterator\n-     * @throws IOException\n-     */\n-    public static ResourceIterator<File> forIndex( File indexFolder, Directory directory ) throws IOException\n+      SnapshotDeletionPolicy policy = (SnapshotDeletionPolicy) deletionPolicy;\n+      return hasCommits(indexWriter)\n+          ? new WritableIndexSnapshotFileIterator(indexFolder, policy)\n+          : emptyResourceIterator();\n+    } else\n     {\n-        if ( !hasCommits( directory ) )\n-        {\n-            return emptyResourceIterator();\n-        }\n-        Collection<IndexCommit> indexCommits = DirectoryReader.listCommits( directory );\n-        IndexCommit indexCommit = Iterables.last( indexCommits );\n-        return new ReadOnlyIndexSnapshotFileIterator( indexFolder, indexCommit );\n+      throw new UnsupportedIndexDeletionPolicy(\"Can't perform index snapshot with specified index deletion \" +\n+          \"policy: \" + deletionPolicy.getClass().getName() + \". \" +\n+          \"Only \" + SnapshotDeletionPolicy.class.getName() + \" is \" +\n+          \"supported\");\n     }\n+  }\n \n-    private static boolean hasCommits( IndexWriter indexWriter ) throws IOException\n+  /**\n+   * Create index snapshot iterator for a read only index.\n+   *\n+   * @param indexFolder index location folder\n+   * @param directory   index directory\n+   * @return index file name resource iterator\n+   * @throws IOException\n+   */\n+  public static ResourceIterator<File> forIndex(File indexFolder, Directory directory) throws IOException\n+  {\n+    if (!hasCommits(directory))\n     {\n-        Directory directory = indexWriter.getDirectory();\n-        return hasCommits( directory );\n+      return emptyResourceIterator();\n     }\n+    Collection<IndexCommit> indexCommits = DirectoryReader.listCommits(directory);\n+    IndexCommit indexCommit = Iterables.last(indexCommits);\n+    return new ReadOnlyIndexSnapshotFileIterator(indexFolder, indexCommit);\n+  }\n \n-    private static boolean hasCommits( Directory directory ) throws IOException\n-    {\n-        return DirectoryReader.indexExists( directory ) && SegmentInfos.readLatestCommit( directory ) != null;\n-    }\n+  private static boolean hasCommits(IndexWriter indexWriter) throws IOException\n+  {\n+    Directory directory = indexWriter.getDirectory();\n+    return hasCommits(directory);\n+  }\n+\n+  private static boolean hasCommits(Directory directory) throws IOException\n+  {\n+    return DirectoryReader.indexExists(directory) && SegmentInfos.readLatestCommit(directory) != null;\n+  }\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4334/LuceneIndexSnapshots.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4334/LuceneIndexSnapshots.java\nindex cf48a012f25..3b6f57f6529 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4334/LuceneIndexSnapshots.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4334/LuceneIndexSnapshots.java\n@@ -59,17 +59,12 @@ public class LuceneIndexSnapshots\n         if ( deletionPolicy instanceof SnapshotDeletionPolicy )\n         {\n             SnapshotDeletionPolicy policy = (SnapshotDeletionPolicy) deletionPolicy;\n-            return hasCommits( indexWriter )\n-                   ? new WritableIndexSnapshotFileIterator( indexFolder, policy )\n-                   : emptyResourceIterator();\n-        }\n+            return hasCommits( indexWriter ) ? new WritableIndexSnapshotFileIterator( indexFolder, policy ) : emptyResourceIterator();\n+    }\n         else\n         {\n-            throw new UnsupportedIndexDeletionPolicy( \"Can't perform index snapshot with specified index deletion \" +\n-                                                      \"policy: \" + deletionPolicy.getClass().getName() + \". \" +\n-                                                      \"Only \" + SnapshotDeletionPolicy.class.getName() + \" is \" +\n-                                                      \"supported\" );\n-        }\n+            throw new UnsupportedIndexDeletionPolicy( \"Can't perform index snapshot with specified index deletion \" + \"policy: \" + deletionPolicy.getClass().getName() + \". \" + \"Only \" + SnapshotDeletionPolicy.class.getName() + \" is \" + \"supported\" );\n+    }\n     }\n \n     /**\n@@ -100,4 +95,4 @@ public class LuceneIndexSnapshots\n     {\n         return DirectoryReader.indexExists( directory ) && SegmentInfos.readLatestCommit( directory ) != null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
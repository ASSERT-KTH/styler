{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4414",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4414/TripCountingRootCatchup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4414/TripCountingRootCatchup.java\nindex 27dcfa4e9cb..edd39e5f673 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4414/TripCountingRootCatchup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4414/TripCountingRootCatchup.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.function.Supplier;\n@@ -45,46 +46,45 @@ import org.neo4j.util.FeatureToggles;\n  */\n public class TripCountingRootCatchup implements RootCatchup\n {\n-    private static final String MAX_TRIP_COUNT_NAME = \"max_trip_count\";\n-    private static final int MAX_TRIP_COUNT_DEFAULT = 10;\n-    static final int MAX_TRIP_COUNT = FeatureToggles.getInteger( TripCountingRootCatchup.class, MAX_TRIP_COUNT_NAME, MAX_TRIP_COUNT_DEFAULT );\n-    private final Supplier<Root> rootSupplier;\n-    private long lastFromId = TreeNode.NO_NODE_FLAG;\n-    private int tripCount;\n+  private static final String MAX_TRIP_COUNT_NAME = \"max_trip_count\";\n+  private static final int MAX_TRIP_COUNT_DEFAULT = 10;\n+  static final int MAX_TRIP_COUNT = FeatureToggles.getInteger(TripCountingRootCatchup.class, MAX_TRIP_COUNT_NAME, MAX_TRIP_COUNT_DEFAULT);\n+  private final Supplier<Root> rootSupplier;\n+  private long lastFromId = TreeNode.NO_NODE_FLAG;\n+  private int tripCount;\n \n-    TripCountingRootCatchup( Supplier<Root> rootSupplier )\n-    {\n-        this.rootSupplier = rootSupplier;\n-    }\n+  TripCountingRootCatchup(Supplier<Root> rootSupplier)\n+  {\n+    this.rootSupplier = rootSupplier;\n+  }\n \n-    @Override\n-    public Root catchupFrom( long fromId )\n-    {\n-        updateTripCount( fromId );\n-        assertTripCount();\n-        return rootSupplier.get();\n-    }\n+  @Override\n+  public Root catchupFrom(long fromId)\n+  {\n+    updateTripCount(fromId);\n+    assertTripCount();\n+    return rootSupplier.get();\n+  }\n \n-    private void updateTripCount( long fromId )\n+  private void updateTripCount(long fromId)\n+  {\n+    if (fromId == lastFromId)\n+    {\n+      tripCount++;\n+    } else\n     {\n-        if ( fromId == lastFromId )\n-        {\n-            tripCount++;\n-        }\n-        else\n-        {\n-            lastFromId = fromId;\n-            tripCount = 1;\n-        }\n+      lastFromId = fromId;\n+      tripCount = 1;\n     }\n+  }\n \n-    private void assertTripCount()\n+  private void assertTripCount()\n+  {\n+    if (tripCount >= MAX_TRIP_COUNT)\n     {\n-        if ( tripCount >= MAX_TRIP_COUNT )\n-        {\n-            throw new TreeInconsistencyException(\n-                    \"Index traversal aborted due to being stuck in infinite loop. This is most likely caused by an inconsistency in the index. \" +\n-                            \"Loop occurred when restarting search from root from page %d.\", lastFromId );\n-        }\n+      throw new TreeInconsistencyException(\n+          \"Index traversal aborted due to being stuck in infinite loop. This is most likely caused by an inconsistency in the index. \" +\n+              \"Loop occurred when restarting search from root from page %d.\", lastFromId);\n     }\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4414/TripCountingRootCatchup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4414/TripCountingRootCatchup.java\nindex 27dcfa4e9cb..7f390ced363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4414/TripCountingRootCatchup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4414/TripCountingRootCatchup.java\n@@ -82,9 +82,7 @@ public class TripCountingRootCatchup implements RootCatchup\n     {\n         if ( tripCount >= MAX_TRIP_COUNT )\n         {\n-            throw new TreeInconsistencyException(\n-                    \"Index traversal aborted due to being stuck in infinite loop. This is most likely caused by an inconsistency in the index. \" +\n-                            \"Loop occurred when restarting search from root from page %d.\", lastFromId );\n-        }\n+            throw new TreeInconsistencyException( \"Index traversal aborted due to being stuck in infinite loop. This is most likely caused by an inconsistency in the index. \" + \"Loop occurred when restarting search from root from page %d.\", lastFromId );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1280",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1280/HashFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1280/HashFunction.java\nindex 99d81f1a20f..cff521b4aa2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1280/HashFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1280/HashFunction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.hashing;\n \n import java.util.function.ToLongFunction;\n@@ -44,17 +45,17 @@ public interface HashFunction\n      * @param seed The initialisation seed for the hash function.\n      * @return An initialised intermediate hash state.\n      */\n-    long initialise( long seed );\n+    long initialise(long seed);\n \n     /**\n      * Update the hash state by mixing the given value into the given intermediate hash state.\n      *\n      * @param intermediateHash The intermediate hash state given either by {@link #initialise(long)}, or by a previous\n-     * call to this function.\n-     * @param value The value to add to the hash state.\n+     *                         call to this function.\n+     * @param value            The value to add to the hash state.\n      * @return a new intermediate hash state with the value mixed in.\n      */\n-    long update( long intermediateHash, long value );\n+    long update(long intermediateHash, long value);\n \n     /**\n      * Produce a final hash value from the given intermediate hash state.\n@@ -62,7 +63,7 @@ public interface HashFunction\n      * @param intermediateHash the intermediate hash state from which to produce a final hash value.\n      * @return the final hash value.\n      */\n-    long finalise( long intermediateHash );\n+    long finalise(long intermediateHash);\n \n     /**\n      * Reduce the given 64-bit hash value to a 32-bit value.\n@@ -70,7 +71,7 @@ public interface HashFunction\n      * @param hash The hash value to reduce.\n      * @return The 32-bit representation of the given hash value.\n      */\n-    default int toInt( long hash )\n+    default int toInt(long hash)\n     {\n         return (int) ((hash >> 32) ^ hash);\n     }\n@@ -81,9 +82,9 @@ public interface HashFunction\n      * @param value The single value to hash.\n      * @return The hash of the given value.\n      */\n-    default long hashSingleValue( long value )\n+    default long hashSingleValue(long value)\n     {\n-        return finalise( update( initialise( 0 ), value ) );\n+        return finalise(update(initialise(0), value));\n     }\n \n     /**\n@@ -92,9 +93,9 @@ public interface HashFunction\n      * @param value The single value to hash.\n      * @return The hash of the given value.\n      */\n-    default int hashSingleValueToInt( long value )\n+    default int hashSingleValueToInt(long value)\n     {\n-        return toInt( hashSingleValue( value ) );\n+        return toInt(hashSingleValue(value));\n     }\n \n     /**\n@@ -102,24 +103,24 @@ public interface HashFunction\n      * will be mixed in. Each element must be projected to a {@code long} value, which is why a projection function is required.\n      *\n      * @param intermediateHash The intermediate hash state given either by {@link #initialise(long)}, or by a previous call to this or the\n-     * {@link #update(long, long)} method.\n-     * @param array The array whose length and elements should be added to the hash state.\n+     *                         {@link #update(long, long)} method.\n+     * @param array            The array whose length and elements should be added to the hash state.\n      * @param projectionToLong The mechanism by which each element is transformed into a {@code long} value, prior to being mixed into the hash state.\n-     * @param <T> The type of array elements.\n+     * @param <T>              The type of array elements.\n      * @return the new intermediate hash state with the array mixed in.\n      */\n-    default <T> long updateWithArray( long intermediateHash, T[] array, ToLongFunction<T> projectionToLong )\n+    default <T> long updateWithArray(long intermediateHash, T[] array, ToLongFunction<T> projectionToLong)\n     {\n-        if ( array == null )\n+        if (array == null)\n         {\n             // Even if the array is null, we still need to permute the hash, so we leave a trace of this step in the hashing.\n-            return update( intermediateHash, -1 );\n+            return update(intermediateHash, -1);\n         }\n \n-        long hash = update( intermediateHash, array.length );\n-        for ( T obj : array )\n+        long hash = update(intermediateHash, array.length);\n+        for (T obj : array)\n         {\n-            hash = update( hash, projectionToLong.applyAsLong( obj ) );\n+            hash = update(hash, projectionToLong.applyAsLong(obj));\n         }\n         return hash;\n     }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
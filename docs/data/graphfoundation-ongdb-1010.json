{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1010",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1010/ExternalSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1010/ExternalSettings.java\nindex a898e53b173..6bda8f32999 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1010/ExternalSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1010/ExternalSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import java.util.Collections;\n@@ -32,97 +33,97 @@ import org.neo4j.graphdb.config.Setting;\n  * This class holds settings which are used external to the java code. This includes things present in the\n  * configuration which are only read and used by the wrapper scripts. By including them here, we suppress warning\n  * messages about Unknown configuration options, and make it possible to document these options via the normal methods.\n- *\n+ * <p>\n  * Be aware that values are still validated.\n  */\n-@SuppressWarnings( \"unused\" )\n+@SuppressWarnings(\"unused\")\n public class ExternalSettings implements LoadableConfig\n {\n-    @Description( \"Name of the Windows Service.\" )\n-    public static final Setting<String> windowsServiceName = dummySetting( \"dbms.windows_service_name\",\n-            \"neo4j\" );\n-    @Description( \"Additional JVM arguments. Argument order can be significant. To use a Java commercial feature, the argument to unlock \" +\n-            \"commercial features must precede the argument to enable the specific feature in the config value string. For example, \" +\n-            \"to use Flight Recorder, `-XX:+UnlockCommercialFeatures` must come before `-XX:+FlightRecorder`.\" )\n-    public static final Setting<String> additionalJvm = dummySetting( \"dbms.jvm.additional\" );\n-\n-    @Description( \"Initial heap size. By default it is calculated based on available system resources.\" )\n-    public static final Setting<String> initialHeapSize = dummySetting( \"dbms.memory.heap.initial_size\",\n-            \"\", \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\" );\n-\n-    @Description( \"Maximum heap size. By default it is calculated based on available system resources.\" )\n-    public static final Setting<String> maxHeapSize = dummySetting( \"dbms.memory.heap.max_size\", \"\",\n-            \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\" );\n-\n-    private static DummySetting dummySetting( String name )\n+  @Description(\"Name of the Windows Service.\")\n+  public static final Setting<String> windowsServiceName = dummySetting(\"dbms.windows_service_name\",\n+      \"neo4j\");\n+  @Description(\"Additional JVM arguments. Argument order can be significant. To use a Java commercial feature, the argument to unlock \" +\n+      \"commercial features must precede the argument to enable the specific feature in the config value string. For example, \" +\n+      \"to use Flight Recorder, `-XX:+UnlockCommercialFeatures` must come before `-XX:+FlightRecorder`.\")\n+  public static final Setting<String> additionalJvm = dummySetting(\"dbms.jvm.additional\");\n+\n+  @Description(\"Initial heap size. By default it is calculated based on available system resources.\")\n+  public static final Setting<String> initialHeapSize = dummySetting(\"dbms.memory.heap.initial_size\",\n+      \"\", \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\");\n+\n+  @Description(\"Maximum heap size. By default it is calculated based on available system resources.\")\n+  public static final Setting<String> maxHeapSize = dummySetting(\"dbms.memory.heap.max_size\", \"\",\n+      \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\");\n+\n+  private static DummySetting dummySetting(String name)\n+  {\n+    return new DummySetting(name, \"\", \"a string\");\n+  }\n+\n+  private static DummySetting dummySetting(String name, String defVal)\n+  {\n+    return new DummySetting(name, defVal, \"a string\");\n+  }\n+\n+  private static DummySetting dummySetting(String name, String defVal, String valDesc)\n+  {\n+    return new DummySetting(name, defVal, valDesc);\n+  }\n+\n+  static class DummySetting extends BaseSetting<String>\n+  {\n+\n+    private final String name;\n+    private final String defaultValue;\n+    private final String valueDescription;\n+\n+    DummySetting(String name, String defVal, String valueDescription)\n+    {\n+      this.name = name;\n+      this.defaultValue = defVal;\n+      this.valueDescription = valueDescription;\n+    }\n+\n+    @Override\n+    public String name()\n+    {\n+      return name;\n+    }\n+\n+    @Override\n+    public void withScope(Function<String, String> scopingRule)\n     {\n-        return new DummySetting( name, \"\", \"a string\" );\n+\n     }\n \n-    private static DummySetting dummySetting( String name, String defVal )\n+    @Override\n+    public String getDefaultValue()\n     {\n-        return new DummySetting( name, defVal, \"a string\" );\n+      return defaultValue;\n     }\n \n-    private static DummySetting dummySetting( String name, String defVal, String valDesc )\n+    @Override\n+    public String from(Configuration config)\n     {\n-        return new DummySetting( name, defVal, valDesc );\n+      return config.get(this);\n     }\n \n-    static class DummySetting extends BaseSetting<String>\n+    @Override\n+    public String apply(Function<String, String> provider)\n     {\n+      return provider.apply(name);\n+    }\n \n-        private final String name;\n-        private final String defaultValue;\n-        private final String valueDescription;\n-\n-        DummySetting( String name, String defVal, String valueDescription )\n-        {\n-            this.name = name;\n-            this.defaultValue = defVal;\n-            this.valueDescription = valueDescription;\n-        }\n-\n-        @Override\n-        public String name()\n-        {\n-            return name;\n-        }\n-\n-        @Override\n-        public void withScope( Function<String,String> scopingRule )\n-        {\n-\n-        }\n-\n-        @Override\n-        public String getDefaultValue()\n-        {\n-            return defaultValue;\n-        }\n-\n-        @Override\n-        public String from( Configuration config )\n-        {\n-            return config.get( this );\n-        }\n-\n-        @Override\n-        public String apply( Function<String,String> provider )\n-        {\n-            return provider.apply( name );\n-        }\n-\n-        @Override\n-        public List<Setting<String>> settings( Map<String,String> params )\n-        {\n-            return Collections.singletonList( this );\n-        }\n-\n-        @Override\n-        public String valueDescription()\n-        {\n-            return valueDescription;\n-        }\n+    @Override\n+    public List<Setting<String>> settings(Map<String, String> params)\n+    {\n+      return Collections.singletonList(this);\n+    }\n+\n+    @Override\n+    public String valueDescription()\n+    {\n+      return valueDescription;\n     }\n+  }\n }\n",
            "diff_size": 120
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 359).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1010/ExternalSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1010/ExternalSettings.java\nindex a898e53b173..ade3cdfe06b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1010/ExternalSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1010/ExternalSettings.java\n@@ -39,22 +39,18 @@ import org.neo4j.graphdb.config.Setting;\n public class ExternalSettings implements LoadableConfig\n {\n     @Description( \"Name of the Windows Service.\" )\n-    public static final Setting<String> windowsServiceName = dummySetting( \"dbms.windows_service_name\",\n-            \"neo4j\" );\n-    @Description( \"Additional JVM arguments. Argument order can be significant. To use a Java commercial feature, the argument to unlock \" +\n-            \"commercial features must precede the argument to enable the specific feature in the config value string. For example, \" +\n-            \"to use Flight Recorder, `-XX:+UnlockCommercialFeatures` must come before `-XX:+FlightRecorder`.\" )\n+    public static final Setting<String> windowsServiceName = dummySetting( \"dbms.windows_service_name\", \"neo4j\" );\n+\n+@Description( \"Additional JVM arguments. Argument order can be significant. To use a Java commercial feature, the argument to unlock \" + \"commercial features must precede the argument to enable the specific feature in the config value string. For example, \" + \"to use Flight Recorder, `-XX:+UnlockCommercialFeatures` must come before `-XX:+FlightRecorder`.\" )\n     public static final Setting<String> additionalJvm = dummySetting( \"dbms.jvm.additional\" );\n \n     @Description( \"Initial heap size. By default it is calculated based on available system resources.\" )\n-    public static final Setting<String> initialHeapSize = dummySetting( \"dbms.memory.heap.initial_size\",\n-            \"\", \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\" );\n+    public static final Setting<String> initialHeapSize = dummySetting( \"dbms.memory.heap.initial_size\", \"\", \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\" );\n \n-    @Description( \"Maximum heap size. By default it is calculated based on available system resources.\" )\n-    public static final Setting<String> maxHeapSize = dummySetting( \"dbms.memory.heap.max_size\", \"\",\n-            \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\" );\n+@Description( \"Maximum heap size. By default it is calculated based on available system resources.\" )\n+    public static final Setting<String> maxHeapSize = dummySetting( \"dbms.memory.heap.max_size\", \"\", \"a byte size (valid units are `k`, `K`, `m`, `M`, `g`, `G`)\" );\n \n-    private static DummySetting dummySetting( String name )\n+private static DummySetting dummySetting( String name )\n     {\n         return new DummySetting( name, \"\", \"a string\" );\n     }\n@@ -71,8 +67,7 @@ public class ExternalSettings implements LoadableConfig\n \n     static class DummySetting extends BaseSetting<String>\n     {\n-\n-        private final String name;\n+    private final String name;\n         private final String defaultValue;\n         private final String valueDescription;\n \n@@ -92,8 +87,7 @@ public class ExternalSettings implements LoadableConfig\n         @Override\n         public void withScope( Function<String,String> scopingRule )\n         {\n-\n-        }\n+}\n \n         @Override\n         public String getDefaultValue()\n@@ -125,4 +119,4 @@ public class ExternalSettings implements LoadableConfig\n             return valueDescription;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
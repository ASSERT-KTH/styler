{
    "project_name": "graphfoundation-ongdb",
    "error_id": "788",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/788/WritableIndexReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/788/WritableIndexReference.java\nindex f3d6740e7a0..4356201f7d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/788/WritableIndexReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/788/WritableIndexReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.index.IndexWriter;\n@@ -27,52 +28,52 @@ import java.util.concurrent.atomic.AtomicBoolean;\n \n class WritableIndexReference extends IndexReference\n {\n-    private final IndexWriter writer;\n-    private boolean writerIsClosed;\n-    private final AtomicBoolean stale = new AtomicBoolean();\n+  private final IndexWriter writer;\n+  private boolean writerIsClosed;\n+  private final AtomicBoolean stale = new AtomicBoolean();\n \n-    WritableIndexReference( IndexIdentifier identifier, IndexSearcher searcher, IndexWriter writer )\n-    {\n-        super( identifier, searcher );\n-        this.writer = writer;\n-    }\n+  WritableIndexReference(IndexIdentifier identifier, IndexSearcher searcher, IndexWriter writer)\n+  {\n+    super(identifier, searcher);\n+    this.writer = writer;\n+  }\n \n-    @Override\n-    public IndexWriter getWriter()\n-    {\n-        return writer;\n-    }\n+  @Override\n+  public IndexWriter getWriter()\n+  {\n+    return writer;\n+  }\n \n-    @Override\n-    public synchronized void dispose() throws IOException\n-    {\n-        disposeSearcher();\n-        disposeWriter();\n-    }\n+  @Override\n+  public synchronized void dispose() throws IOException\n+  {\n+    disposeSearcher();\n+    disposeWriter();\n+  }\n \n-    @Override\n-    public boolean checkAndClearStale()\n-    {\n-        return stale.compareAndSet( true, false );\n-    }\n+  @Override\n+  public boolean checkAndClearStale()\n+  {\n+    return stale.compareAndSet(true, false);\n+  }\n \n-    @Override\n-    public void setStale()\n-    {\n-        stale.set( true );\n-    }\n+  @Override\n+  public void setStale()\n+  {\n+    stale.set(true);\n+  }\n \n-    private void disposeWriter() throws IOException\n+  private void disposeWriter() throws IOException\n+  {\n+    if (!writerIsClosed)\n     {\n-        if ( !writerIsClosed )\n-        {\n-            writer.close();\n-            writerIsClosed = true;\n-        }\n+      writer.close();\n+      writerIsClosed = true;\n     }\n+  }\n \n-    boolean isWriterClosed()\n-    {\n-        return writerIsClosed;\n-    }\n+  boolean isWriterClosed()\n+  {\n+    return writerIsClosed;\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/788/WritableIndexReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/788/WritableIndexReference.java\nindex f3d6740e7a0..fdf6e97a7ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/788/WritableIndexReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/788/WritableIndexReference.java\n@@ -75,4 +75,4 @@ class WritableIndexReference extends IndexReference\n     {\n         return writerIsClosed;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
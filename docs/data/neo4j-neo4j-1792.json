{
    "project_name": "neo4j-neo4j",
    "error_id": "1792",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1792/KernelReadTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1792/KernelReadTracer.java\nindex 4f22fb987ff..74825318fec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1792/KernelReadTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1792/KernelReadTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import org.neo4j.internal.schema.IndexOrder;\n@@ -25,12 +26,12 @@ import org.neo4j.storageengine.api.ReadTracer;\n /**\n  * Tracer of kernel API reads. The Kernel will callback the tracer methods on various key events\n  * of kernel reads, allowing a tracer to analyze the read patterns.\n- *\n+ * <p>\n  * Note: In the initial version of this tracer we only added the callbacks that were\n- *       necessary to support cypher PROFILE dbHits, and some extra which makes testing\n- *       easier. If we adopt this mechanism for other uses, it might be a good idea to\n- *       add additional callback, extend some callbacks with more details, or\n- *       differentiate callbacks (e.g. onNode) depending on the underlying read.\n+ * necessary to support cypher PROFILE dbHits, and some extra which makes testing\n+ * easier. If we adopt this mechanism for other uses, it might be a good idea to\n+ * add additional callback, extend some callbacks with more details, or\n+ * differentiate callbacks (e.g. onNode) depending on the underlying read.\n  */\n public interface KernelReadTracer extends ReadTracer\n {\n@@ -40,7 +41,7 @@ public interface KernelReadTracer extends ReadTracer\n      * @param nodeReference the node reference that will be available.\n      */\n     @Override\n-    void onNode( long nodeReference );\n+    void onNode(long nodeReference);\n \n     /**\n      * Called on {@link Read#allNodesScan(NodeCursor)}.\n@@ -51,12 +52,12 @@ public interface KernelReadTracer extends ReadTracer\n     /**\n      * Called on {@link Read#nodeLabelScan(int, NodeLabelIndexCursor, IndexOrder)}.\n      */\n-    void onLabelScan( int label );\n+    void onLabelScan(int label);\n \n     /**\n      * Called on {@link Read#relationshipTypeScan(int, RelationshipScanCursor)}\n      */\n-    void onRelationshipTypeScan( int type );\n+    void onRelationshipTypeScan(int type);\n \n     /**\n      * Called on {@link Read#nodeIndexSeek(IndexReadSession, NodeValueIndexCursor, IndexQueryConstraints, IndexQuery...)}.\n@@ -69,7 +70,7 @@ public interface KernelReadTracer extends ReadTracer\n      * @param relationshipReference the relationship reference that will be available.\n      */\n     @Override\n-    void onRelationship( long relationshipReference );\n+    void onRelationship(long relationshipReference);\n \n     /**\n      * Called just before {@link PropertyCursor#next()} returns true.\n@@ -77,5 +78,5 @@ public interface KernelReadTracer extends ReadTracer\n      * @param propertyKey the property key of the next property.\n      */\n     @Override\n-    void onProperty( int propertyKey );\n+    void onProperty(int propertyKey);\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
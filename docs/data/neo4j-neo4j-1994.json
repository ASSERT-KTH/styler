{
    "project_name": "neo4j-neo4j",
    "error_id": "1994",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1994/DefaultRecoveryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1994/DefaultRecoveryService.java\nindex f2080249bba..8a91f896b5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1994/DefaultRecoveryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1994/DefaultRecoveryService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.recovery;\n \n import java.io.IOException;\n@@ -48,16 +49,16 @@ public class DefaultRecoveryService implements RecoveryService\n     private final LogVersionRepository logVersionRepository;\n     private final Log log;\n \n-    DefaultRecoveryService( StorageEngine storageEngine, TransactionIdStore transactionIdStore,\n-            LogicalTransactionStore logicalTransactionStore, LogVersionRepository logVersionRepository, LogFiles logFiles,\n-            RecoveryStartInformationProvider.Monitor monitor, Log log )\n+    DefaultRecoveryService(StorageEngine storageEngine, TransactionIdStore transactionIdStore,\n+                           LogicalTransactionStore logicalTransactionStore, LogVersionRepository logVersionRepository, LogFiles logFiles,\n+                           RecoveryStartInformationProvider.Monitor monitor, Log log)\n     {\n         this.storageEngine = storageEngine;\n         this.transactionIdStore = transactionIdStore;\n         this.logicalTransactionStore = logicalTransactionStore;\n         this.logVersionRepository = logVersionRepository;\n         this.log = log;\n-        this.recoveryStartInformationProvider = new RecoveryStartInformationProvider( logFiles, monitor );\n+        this.recoveryStartInformationProvider = new RecoveryStartInformationProvider(logFiles, monitor);\n     }\n \n     @Override\n@@ -67,28 +68,28 @@ public class DefaultRecoveryService implements RecoveryService\n     }\n \n     @Override\n-    public RecoveryApplier getRecoveryApplier( TransactionApplicationMode mode, PageCursorTracer cursorTracer )\n+    public RecoveryApplier getRecoveryApplier(TransactionApplicationMode mode, PageCursorTracer cursorTracer)\n     {\n-        return new RecoveryVisitor( storageEngine, mode, cursorTracer );\n+        return new RecoveryVisitor(storageEngine, mode, cursorTracer);\n     }\n \n     @Override\n-    public TransactionCursor getTransactions( LogPosition position ) throws IOException\n+    public TransactionCursor getTransactions(LogPosition position) throws IOException\n     {\n-        return logicalTransactionStore.getTransactions( position );\n+        return logicalTransactionStore.getTransactions(position);\n     }\n \n     @Override\n-    public TransactionCursor getTransactionsInReverseOrder( LogPosition position ) throws IOException\n+    public TransactionCursor getTransactionsInReverseOrder(LogPosition position) throws IOException\n     {\n-        return logicalTransactionStore.getTransactionsInReverseOrder( position );\n+        return logicalTransactionStore.getTransactionsInReverseOrder(position);\n     }\n \n     @Override\n-    public void transactionsRecovered( CommittedTransactionRepresentation lastRecoveredTransaction, LogPosition lastRecoveredTransactionPosition,\n-            LogPosition positionAfterLastRecoveredTransaction, boolean missingLogs, PageCursorTracer cursorTracer )\n+    public void transactionsRecovered(CommittedTransactionRepresentation lastRecoveredTransaction, LogPosition lastRecoveredTransactionPosition,\n+                                      LogPosition positionAfterLastRecoveredTransaction, boolean missingLogs, PageCursorTracer cursorTracer)\n     {\n-        if ( missingLogs )\n+        if (missingLogs)\n         {\n             // in case if logs are missing we need to reset position of last committed transaction since\n             // this information influencing checkpoint that will be created and if we will not gonna do that\n@@ -96,32 +97,31 @@ public class DefaultRecoveryService implements RecoveryService\n             // and that can cause partial next recovery.\n             long[] lastClosedTransaction = transactionIdStore.getLastClosedTransaction();\n             long logVersion = lastClosedTransaction[1];\n-            log.warn( \"Recovery detected that transaction logs were missing. \" +\n-                    \"Resetting offset of last closed transaction to point to the head of %d transaction log file.\", logVersion );\n-            transactionIdStore.resetLastClosedTransaction( lastClosedTransaction[0], logVersion, CURRENT_FORMAT_LOG_HEADER_SIZE, true, cursorTracer );\n-            logVersionRepository.setCurrentLogVersion( logVersion, cursorTracer );\n+            log.warn(\"Recovery detected that transaction logs were missing. \" +\n+              \"Resetting offset of last closed transaction to point to the head of %d transaction log file.\", logVersion);\n+            transactionIdStore.resetLastClosedTransaction(lastClosedTransaction[0], logVersion, CURRENT_FORMAT_LOG_HEADER_SIZE, true, cursorTracer);\n+            logVersionRepository.setCurrentLogVersion(logVersion, cursorTracer);\n             return;\n         }\n-        if ( lastRecoveredTransaction != null )\n+        if (lastRecoveredTransaction != null)\n         {\n             LogEntryCommit commitEntry = lastRecoveredTransaction.getCommitEntry();\n             transactionIdStore\n-                    .setLastCommittedAndClosedTransactionId( commitEntry.getTxId(), lastRecoveredTransaction.getChecksum(), commitEntry.getTimeWritten(),\n-                            lastRecoveredTransactionPosition.getByteOffset(), lastRecoveredTransactionPosition.getLogVersion(), cursorTracer );\n-        }\n-        else\n+              .setLastCommittedAndClosedTransactionId(commitEntry.getTxId(), lastRecoveredTransaction.getChecksum(), commitEntry.getTimeWritten(),\n+                lastRecoveredTransactionPosition.getByteOffset(), lastRecoveredTransactionPosition.getLogVersion(), cursorTracer);\n+        } else\n         {\n             // we do not have last recovered transaction but recovery was still triggered\n             // this happens when we read past end of the log file or can't read it at all but recovery was enforced\n             // which means that log files after last recovered position can't be trusted and we need to reset last closed tx log info\n             long lastClosedTransactionId = transactionIdStore.getLastClosedTransactionId();\n-            log.warn( \"Recovery detected that transaction logs tail can't be trusted. \" +\n-                    \"Resetting offset of last closed transaction to point to the last recoverable log position: \" + positionAfterLastRecoveredTransaction );\n-            transactionIdStore.resetLastClosedTransaction( lastClosedTransactionId, positionAfterLastRecoveredTransaction.getLogVersion(),\n-                    positionAfterLastRecoveredTransaction.getByteOffset(), false, cursorTracer );\n+            log.warn(\"Recovery detected that transaction logs tail can't be trusted. \" +\n+              \"Resetting offset of last closed transaction to point to the last recoverable log position: \" + positionAfterLastRecoveredTransaction);\n+            transactionIdStore.resetLastClosedTransaction(lastClosedTransactionId, positionAfterLastRecoveredTransaction.getLogVersion(),\n+              positionAfterLastRecoveredTransaction.getByteOffset(), false, cursorTracer);\n         }\n \n-        logVersionRepository.setCurrentLogVersion( positionAfterLastRecoveredTransaction.getLogVersion(), cursorTracer );\n+        logVersionRepository.setCurrentLogVersion(positionAfterLastRecoveredTransaction.getLogVersion(), cursorTracer);\n     }\n \n     static class RecoveryVisitor implements RecoveryApplier\n@@ -130,7 +130,7 @@ public class DefaultRecoveryService implements RecoveryService\n         private final TransactionApplicationMode mode;\n         private final PageCursorTracer cursorTracer;\n \n-        RecoveryVisitor( StorageEngine storageEngine, TransactionApplicationMode mode, PageCursorTracer cursorTracer )\n+        RecoveryVisitor(StorageEngine storageEngine, TransactionApplicationMode mode, PageCursorTracer cursorTracer)\n         {\n             this.storageEngine = storageEngine;\n             this.mode = mode;\n@@ -138,14 +138,14 @@ public class DefaultRecoveryService implements RecoveryService\n         }\n \n         @Override\n-        public boolean visit( CommittedTransactionRepresentation transaction ) throws Exception\n+        public boolean visit(CommittedTransactionRepresentation transaction) throws Exception\n         {\n             TransactionRepresentation txRepresentation = transaction.getTransactionRepresentation();\n             long txId = transaction.getCommitEntry().getTxId();\n-            TransactionToApply tx = new TransactionToApply( txRepresentation, txId, cursorTracer );\n-            tx.commitment( NO_COMMITMENT, txId );\n-            tx.logPosition( transaction.getStartEntry().getStartPosition() );\n-            storageEngine.apply( tx, mode );\n+            TransactionToApply tx = new TransactionToApply(txRepresentation, txId, cursorTracer);\n+            tx.commitment(NO_COMMITMENT, txId);\n+            tx.logPosition(transaction.getStartEntry().getStartPosition());\n+            storageEngine.apply(tx, mode);\n             return false;\n         }\n \n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1994/DefaultRecoveryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1994/DefaultRecoveryService.java\nindex f2080249bba..2efbbd3e7fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1994/DefaultRecoveryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1994/DefaultRecoveryService.java\n@@ -105,8 +105,7 @@ public class DefaultRecoveryService implements RecoveryService\n         if ( lastRecoveredTransaction != null )\n         {\n             LogEntryCommit commitEntry = lastRecoveredTransaction.getCommitEntry();\n-            transactionIdStore\n-                    .setLastCommittedAndClosedTransactionId( commitEntry.getTxId(), lastRecoveredTransaction.getChecksum(), commitEntry.getTimeWritten(),\n+            transactionIdStore.setLastCommittedAndClosedTransactionId( commitEntry.getTxId(), lastRecoveredTransaction.getChecksum(), commitEntry.getTimeWritten(),\n                             lastRecoveredTransactionPosition.getByteOffset(), lastRecoveredTransactionPosition.getLogVersion(), cursorTracer );\n         }\n         else\n@@ -154,4 +153,4 @@ public class DefaultRecoveryService implements RecoveryService\n         {   // nothing to close\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
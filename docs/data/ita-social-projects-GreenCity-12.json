{
    "project_name": "ita-social-projects-GreenCity",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "error",
                "message": "Blank line at start of block should be removed",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
            }
        ]
    },
    "source_code": "@Component\npublic class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n\n    /**\n     * Method convert {@link PlaceAddDto} to {@link Place}.\n     *",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler/12/ProposePlaceMapper.java\nindex 5e863917f56..f0547db03d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler/12/ProposePlaceMapper.java\n@@ -16,7 +16,6 @@ import java.util.stream.Collectors;\n  */\n @Component\n public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n-\n     /**\n      * Method convert {@link PlaceAddDto} to {@link Place}.\n      *\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Blank line at start of block should be removed",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/12/ProposePlaceMapper.java\nindex 5e863917f56..efb0aefa522 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/12/ProposePlaceMapper.java\n@@ -28,40 +28,40 @@ public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n         Place place = new Place();\n         place.setName(placeAddDto.getName());\n         place.setLocation(Location.builder()\n-                .address(placeAddDto.getLocation().getAddress())\n-                .lat(placeAddDto.getLocation().getLat())\n-                .lng(placeAddDto.getLocation().getLng())\n-                .build());\n+            .address(placeAddDto.getLocation().getAddress())\n+            .lat(placeAddDto.getLocation().getLat())\n+            .lng(placeAddDto.getLocation().getLng())\n+            .build());\n         place.setCategory(Category.builder()\n-                .name(placeAddDto.getCategory().getName())\n-                .build());\n+            .name(placeAddDto.getCategory().getName())\n+            .build());\n         place.setOpeningHoursList(placeAddDto.getOpeningHoursList().stream()\n-                .map(openingHoursDto -> {\n-                    OpeningHours openingHours = new OpeningHours();\n-                    openingHours.setOpenTime(openingHoursDto.getOpenTime());\n-                    openingHours.setCloseTime(openingHoursDto.getCloseTime());\n-                    openingHours.setBreakTime(BreakTime.builder()\n-                            .startTime(openingHoursDto.getBreakTime().getStartTime())\n-                            .endTime(openingHoursDto.getBreakTime().getEndTime())\n-                            .build());\n-                    openingHours.setWeekDay(openingHoursDto.getWeekDay());\n-                    return openingHours;\n-                }).collect(Collectors.toSet()));\n+            .map(openingHoursDto -> {\n+                OpeningHours openingHours = new OpeningHours();\n+                openingHours.setOpenTime(openingHoursDto.getOpenTime());\n+                openingHours.setCloseTime(openingHoursDto.getCloseTime());\n+                openingHours.setBreakTime(BreakTime.builder()\n+                    .startTime(openingHoursDto.getBreakTime().getStartTime())\n+                    .endTime(openingHoursDto.getBreakTime().getEndTime())\n+                    .build());\n+                openingHours.setWeekDay(openingHoursDto.getWeekDay());\n+                return openingHours;\n+            }).collect(Collectors.toSet()));\n         place.setDiscountValues(placeAddDto.getDiscountValues().stream()\n-                .map(discountValueDto -> {\n-                    DiscountValue discountValue = new DiscountValue();\n-                    discountValue.setValue(discountValueDto.getValue());\n-                    discountValue.setSpecification(Specification.builder()\n-                            .name(discountValueDto.getSpecification().getName())\n-                            .build());\n-                    return discountValue;\n-                }).collect(Collectors.toSet()));\n+            .map(discountValueDto -> {\n+                DiscountValue discountValue = new DiscountValue();\n+                discountValue.setValue(discountValueDto.getValue());\n+                discountValue.setSpecification(Specification.builder()\n+                    .name(discountValueDto.getSpecification().getName())\n+                    .build());\n+                return discountValue;\n+            }).collect(Collectors.toSet()));\n         place.setPhotos(placeAddDto.getPhotos().stream()\n-                .map(photoAddDto -> {\n-                    Photo photo = new Photo();\n-                    photo.setName(photoAddDto.getName());\n-                    return photo;\n-                }).collect(Collectors.toList()));\n+            .map(photoAddDto -> {\n+                Photo photo = new Photo();\n+                photo.setName(photoAddDto.getName());\n+                return photo;\n+            }).collect(Collectors.toList()));\n         place.getOpeningHoursList().forEach(h -> h.setPlace(place));\n         place.getPhotos().forEach(photo -> photo.setUser(place.getAuthor()));\n \n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/naturalize/12/ProposePlaceMapper.java\nindex 5e863917f56..7252212218e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/naturalize/12/ProposePlaceMapper.java\n@@ -16,7 +16,6 @@ import java.util.stream.Collectors;\n  */\n @Component\n public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n-\n     /**\n      * Method convert {@link PlaceAddDto} to {@link Place}.\n      *\n@@ -67,4 +66,4 @@ public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n \n         return place;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Blank line at start of block should be removed",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/12/ProposePlaceMapper.java\nindex 5e863917f56..68fc1164c74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/12/ProposePlaceMapper.java\n@@ -5,7 +5,6 @@ import greencity.entity.*;\n import org.modelmapper.AbstractConverter;\n import org.modelmapper.ModelMapper;\n import org.springframework.stereotype.Component;\n-\n import java.util.stream.Collectors;\n \n /**\n@@ -14,6 +13,7 @@ import java.util.stream.Collectors;\n  *\n  * @author Marian Datsko\n  */\n+\n @Component\n public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n \n@@ -22,49 +22,46 @@ public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n      *\n      * @return {@link Place}\n      */\n-\n     @Override\n     protected Place convert(PlaceAddDto placeAddDto) {\n         Place place = new Place();\n         place.setName(placeAddDto.getName());\n-        place.setLocation(Location.builder()\n-                .address(placeAddDto.getLocation().getAddress())\n-                .lat(placeAddDto.getLocation().getLat())\n-                .lng(placeAddDto.getLocation().getLng())\n-                .build());\n-        place.setCategory(Category.builder()\n-                .name(placeAddDto.getCategory().getName())\n-                .build());\n+        place.setLocation(Location.builder().address(placeAddDto.getLocation().getAddress())\n+                                            .lat(placeAddDto.getLocation().getLat())\n+                                            .lng(placeAddDto.getLocation().getLng())\n+                                            .build());\n+        place.setCategory(Category.builder().name(placeAddDto.getCategory().getName())\n+                                            .build());\n         place.setOpeningHoursList(placeAddDto.getOpeningHoursList().stream()\n-                .map(openingHoursDto -> {\n-                    OpeningHours openingHours = new OpeningHours();\n-                    openingHours.setOpenTime(openingHoursDto.getOpenTime());\n-                    openingHours.setCloseTime(openingHoursDto.getCloseTime());\n-                    openingHours.setBreakTime(BreakTime.builder()\n-                            .startTime(openingHoursDto.getBreakTime().getStartTime())\n-                            .endTime(openingHoursDto.getBreakTime().getEndTime())\n-                            .build());\n-                    openingHours.setWeekDay(openingHoursDto.getWeekDay());\n-                    return openingHours;\n-                }).collect(Collectors.toSet()));\n+                                                                   .map(openingHoursDto -> {\n+                                                                       OpeningHours openingHours = new OpeningHours();\n+                                                                       openingHours.setOpenTime(openingHoursDto.getOpenTime());\n+                                                                       openingHours.setCloseTime(openingHoursDto.getCloseTime());\n+                                                                       openingHours.setBreakTime(BreakTime.builder().startTime(openingHoursDto.getBreakTime().getStartTime())\n+                                                                                                                    .endTime(openingHoursDto.getBreakTime().getEndTime())\n+                                                                                                                    .build());\n+                                                                       openingHours.setWeekDay(openingHoursDto.getWeekDay());\n+                                                                       return openingHours;\n+                                                                   })\n+                                                                   .collect(Collectors.toSet()));\n         place.setDiscountValues(placeAddDto.getDiscountValues().stream()\n-                .map(discountValueDto -> {\n-                    DiscountValue discountValue = new DiscountValue();\n-                    discountValue.setValue(discountValueDto.getValue());\n-                    discountValue.setSpecification(Specification.builder()\n-                            .name(discountValueDto.getSpecification().getName())\n-                            .build());\n-                    return discountValue;\n-                }).collect(Collectors.toSet()));\n+                                                               .map(discountValueDto -> {\n+                                                                   DiscountValue discountValue = new DiscountValue();\n+                                                                   discountValue.setValue(discountValueDto.getValue());\n+                                                                   discountValue.setSpecification(Specification.builder().name(discountValueDto.getSpecification().getName())\n+                                                                                                                         .build());\n+                                                                   return discountValue;\n+                                                               })\n+                                                               .collect(Collectors.toSet()));\n         place.setPhotos(placeAddDto.getPhotos().stream()\n-                .map(photoAddDto -> {\n-                    Photo photo = new Photo();\n-                    photo.setName(photoAddDto.getName());\n-                    return photo;\n-                }).collect(Collectors.toList()));\n+                                               .map(photoAddDto -> {\n+                                                   Photo photo = new Photo();\n+                                                   photo.setName(photoAddDto.getName());\n+                                                   return photo;\n+                                               })\n+                                               .collect(Collectors.toList()));\n         place.getOpeningHoursList().forEach(h -> h.setPlace(place));\n         place.getPhotos().forEach(photo -> photo.setUser(place.getAuthor()));\n-\n         return place;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_random/12/ProposePlaceMapper.java\nindex 5e863917f56..f0547db03d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_random/12/ProposePlaceMapper.java\n@@ -16,7 +16,6 @@ import java.util.stream.Collectors;\n  */\n @Component\n public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n-\n     /**\n      * Method convert {@link PlaceAddDto} to {@link Place}.\n      *\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/12/ProposePlaceMapper.java\nindex 5e863917f56..f0547db03d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/12/ProposePlaceMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/12/ProposePlaceMapper.java\n@@ -16,7 +16,6 @@ import java.util.stream.Collectors;\n  */\n @Component\n public class ProposePlaceMapper extends AbstractConverter<PlaceAddDto, Place> {\n-\n     /**\n      * Method convert {@link PlaceAddDto} to {@link Place}.\n      *\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "13",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "{\n\n\t@Override\n\tpublic boolean isCompatible()\n\t{\n\t\treturn true;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/30/FindBugsExtension.java\nindex 2effc920955..cbc8a92619f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/30/FindBugsExtension.java\n@@ -10,7 +10,7 @@ import bluej.extensions.Extension;\n public class FindBugsExtension extends Extension\n {\n \n-\t@Override\n+@Override\n \tpublic boolean isCompatible()\n \t{\n \t\treturn true;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/30/FindBugsExtension.java\nindex 2effc920955..47576ca378d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/30/FindBugsExtension.java\n@@ -7,49 +7,42 @@ import java.net.URL;\n import bluej.extensions.BlueJ;\n import bluej.extensions.Extension;\n \n-public class FindBugsExtension extends Extension\n-{\n-\n-\t@Override\n-\tpublic boolean isCompatible()\n-\t{\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic void startup(BlueJ bluej)\n-\t{\n-\t\tLog.setPath(new File(bluej.getSystemLibDir(), \"findbugs.errlog\")); \n-\t\tbluej.setMenuGenerator(new RegularMenuBuilder(bluej));\n-\t\tbluej.setPreferenceGenerator(new FindBugsPreferences(bluej));\n-\t\tbluej.addPackageListener(new PackageClosingListener());\n-\t}\n-\n-\t@Override\n-\tpublic String getName()\n-\t{\n-\t\treturn \"FindBugs\";\n-\t}\n-\n-\t@Override\n-\tpublic String getVersion()\n-\t{\n-\t\treturn \"1.3.5-dev\";\n-\t}\n-\n-\t@Override\n-\tpublic String getDescription()\n-\t{\n-\t\treturn \"Extension for FindBugs, a static analysis tool that looks for coding errors.\";\n-\t}\n-\t\n-\t@Override\n-\tpublic URL getURL()\n-\t{\n-\t\ttry\n-\t\t{\n-\t\t\treturn new URL(\"http://findbugs.sourceforge.net\");\n-\t\t}\n-\t\tcatch (MalformedURLException e) {return null;}\n-\t}\n+public class FindBugsExtension extends Extension {\n+\n+    @Override\n+    public boolean isCompatible() {\n+        return true;\n+    }\n+\n+    @Override\n+    public void startup(BlueJ bluej) {\n+        Log.setPath(new File(bluej.getSystemLibDir(), \"findbugs.errlog\"));\n+        bluej.setMenuGenerator(new RegularMenuBuilder(bluej));\n+        bluej.setPreferenceGenerator(new FindBugsPreferences(bluej));\n+        bluej.addPackageListener(new PackageClosingListener());\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"FindBugs\";\n+    }\n+\n+    @Override\n+    public String getVersion() {\n+        return \"1.3.5-dev\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Extension for FindBugs, a static analysis tool that looks for coding errors.\";\n+    }\n+\n+    @Override\n+    public URL getURL() {\n+        try {\n+            return new URL(\"http://findbugs.sourceforge.net\");\n+        } catch (MalformedURLException e) {\n+            return null;\n+        }\n+    }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/30/FindBugsExtension.java\nindex 2effc920955..074cc324b6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/30/FindBugsExtension.java\n@@ -7,49 +7,42 @@ import java.net.URL;\n import bluej.extensions.BlueJ;\n import bluej.extensions.Extension;\n \n-public class FindBugsExtension extends Extension\n-{\n+public class FindBugsExtension extends Extension {\n+    @Override\n+\tpublic boolean isCompatible() {\n+   return true;\n+    }\n \n \t@Override\n-\tpublic boolean isCompatible()\n-\t{\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic void startup(BlueJ bluej)\n-\t{\n-\t\tLog.setPath(new File(bluej.getSystemLibDir(), \"findbugs.errlog\")); \n-\t\tbluej.setMenuGenerator(new RegularMenuBuilder(bluej));\n-\t\tbluej.setPreferenceGenerator(new FindBugsPreferences(bluej));\n+\tpublic void startup(BlueJ bluej) {\n+   Log.setPath(new File(bluej.getSystemLibDir(), \"findbugs.errlog\"));\n+bluej.setMenuGenerator(new RegularMenuBuilder(bluej));\n+bluej.setPreferenceGenerator(new FindBugsPreferences(bluej));\n \t\tbluej.addPackageListener(new PackageClosingListener());\n-\t}\n+    }\n \n \t@Override\n-\tpublic String getName()\n-\t{\n-\t\treturn \"FindBugs\";\n-\t}\n+\tpublic String getName() {\n+    return \"FindBugs\";\n+    }\n \n \t@Override\n-\tpublic String getVersion()\n-\t{\n-\t\treturn \"1.3.5-dev\";\n-\t}\n+\tpublic String getVersion() {\n+    return \"1.3.5-dev\";\n+    }\n \n \t@Override\n-\tpublic String getDescription()\n-\t{\n-\t\treturn \"Extension for FindBugs, a static analysis tool that looks for coding errors.\";\n-\t}\n-\t\n-\t@Override\n-\tpublic URL getURL()\n-\t{\n-\t\ttry\n-\t\t{\n-\t\t\treturn new URL(\"http://findbugs.sourceforge.net\");\n-\t\t}\n-\t\tcatch (MalformedURLException e) {return null;}\n-\t}\n-}\n+\tpublic String getDescription() {\n+    return \"Extension for FindBugs, a static analysis tool that looks for coding errors.\";\n+    }\n+\n+@Override\n+public URL getURL() {\n+    try {\n+    return new URL(\"http://findbugs.sourceforge.net\");\n+    }\n+\t\tcatch (MalformedURLException e) {\n+    return null;\n+    }\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/30/FindBugsExtension.java\nindex 2effc920955..06454862513 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/30/FindBugsExtension.java\n@@ -3,53 +3,44 @@ package edu.umd.cs.findbugs.bluej;\n import java.io.File;\n import java.net.MalformedURLException;\n import java.net.URL;\n-\n import bluej.extensions.BlueJ;\n import bluej.extensions.Extension;\n \n-public class FindBugsExtension extends Extension\n-{\n-\n-\t@Override\n-\tpublic boolean isCompatible()\n-\t{\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic void startup(BlueJ bluej)\n-\t{\n-\t\tLog.setPath(new File(bluej.getSystemLibDir(), \"findbugs.errlog\")); \n-\t\tbluej.setMenuGenerator(new RegularMenuBuilder(bluej));\n-\t\tbluej.setPreferenceGenerator(new FindBugsPreferences(bluej));\n-\t\tbluej.addPackageListener(new PackageClosingListener());\n-\t}\n-\n-\t@Override\n-\tpublic String getName()\n-\t{\n-\t\treturn \"FindBugs\";\n-\t}\n-\n-\t@Override\n-\tpublic String getVersion()\n-\t{\n-\t\treturn \"1.3.5-dev\";\n-\t}\n-\n-\t@Override\n-\tpublic String getDescription()\n-\t{\n-\t\treturn \"Extension for FindBugs, a static analysis tool that looks for coding errors.\";\n-\t}\n-\t\n-\t@Override\n-\tpublic URL getURL()\n-\t{\n-\t\ttry\n-\t\t{\n-\t\t\treturn new URL(\"http://findbugs.sourceforge.net\");\n-\t\t}\n-\t\tcatch (MalformedURLException e) {return null;}\n-\t}\n-}\n+public class FindBugsExtension extends Extension {\n+    @Override\n+    public boolean isCompatible() {\n+        return true;\n+    }\n+\n+    @Override\n+    public void startup(BlueJ bluej) {\n+        Log.setPath(new File(bluej.getSystemLibDir(), \"findbugs.errlog\"));\n+        bluej.setMenuGenerator(new RegularMenuBuilder(bluej));\n+        bluej.setPreferenceGenerator(new FindBugsPreferences(bluej));\n+        bluej.addPackageListener(new PackageClosingListener());\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"FindBugs\";\n+    }\n+\n+    @Override\n+    public String getVersion() {\n+        return \"1.3.5-dev\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Extension for FindBugs, a static analysis tool that looks for coding errors.\";\n+    }\n+\n+    @Override\n+    public URL getURL() {\n+        try {\n+            return new URL(\"http://findbugs.sourceforge.net\");\n+        } catch (MalformedURLException e) {\n+            return null;\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/30/FindBugsExtension.java\nindex 2effc920955..cbc8a92619f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/30/FindBugsExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/30/FindBugsExtension.java\n@@ -10,7 +10,7 @@ import bluej.extensions.Extension;\n public class FindBugsExtension extends Extension\n {\n \n-\t@Override\n+@Override\n \tpublic boolean isCompatible()\n \t{\n \t\treturn true;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
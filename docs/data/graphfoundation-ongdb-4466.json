{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4466",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "109",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "98",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "103",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4466/CatchupProtocolServerInstaller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4466/CatchupProtocolServerInstaller.java\nindex c8302bffe3e..bf0f879394f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4466/CatchupProtocolServerInstaller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4466/CatchupProtocolServerInstaller.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup;\n \n import io.netty.channel.Channel;\n@@ -55,92 +56,92 @@ import static java.util.Collections.emptyList;\n \n public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orientation.Server>\n {\n-    private static final Protocol.ApplicationProtocols APPLICATION_PROTOCOL = Protocol.ApplicationProtocols.CATCHUP_1;\n+  private static final Protocol.ApplicationProtocols APPLICATION_PROTOCOL = Protocol.ApplicationProtocols.CATCHUP_1;\n \n-    public static class Factory extends ProtocolInstaller.Factory<Orientation.Server,CatchupProtocolServerInstaller>\n+  public static class Factory extends ProtocolInstaller.Factory<Orientation.Server, CatchupProtocolServerInstaller>\n+  {\n+    public Factory(NettyPipelineBuilderFactory pipelineBuilderFactory, LogProvider logProvider, CatchupServerHandler catchupServerHandler)\n     {\n-        public Factory( NettyPipelineBuilderFactory pipelineBuilderFactory, LogProvider logProvider, CatchupServerHandler catchupServerHandler )\n-        {\n-            super( APPLICATION_PROTOCOL,\n-                    modifiers -> new CatchupProtocolServerInstaller( pipelineBuilderFactory, modifiers, logProvider, catchupServerHandler ) );\n-        }\n+      super(APPLICATION_PROTOCOL,\n+          modifiers -> new CatchupProtocolServerInstaller(pipelineBuilderFactory, modifiers, logProvider, catchupServerHandler));\n     }\n+  }\n \n-    private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n-    private final List<ModifierProtocolInstaller<Orientation.Server>> modifiers;\n-    private final Log log;\n+  private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n+  private final List<ModifierProtocolInstaller<Orientation.Server>> modifiers;\n+  private final Log log;\n \n-    private final LogProvider logProvider;\n-    private final CatchupServerHandler catchupServerHandler;\n+  private final LogProvider logProvider;\n+  private final CatchupServerHandler catchupServerHandler;\n \n-    private CatchupProtocolServerInstaller( NettyPipelineBuilderFactory pipelineBuilderFactory, List<ModifierProtocolInstaller<Orientation.Server>> modifiers,\n-            LogProvider logProvider, CatchupServerHandler catchupServerHandler )\n-    {\n-        this.pipelineBuilderFactory = pipelineBuilderFactory;\n-        this.modifiers = modifiers;\n-        this.log = logProvider.getLog( getClass() );\n-        this.logProvider = logProvider;\n-        this.catchupServerHandler = catchupServerHandler;\n-    }\n+  private CatchupProtocolServerInstaller(NettyPipelineBuilderFactory pipelineBuilderFactory, List<ModifierProtocolInstaller<Orientation.Server>> modifiers,\n+                                         LogProvider logProvider, CatchupServerHandler catchupServerHandler)\n+  {\n+    this.pipelineBuilderFactory = pipelineBuilderFactory;\n+    this.modifiers = modifiers;\n+    this.log = logProvider.getLog(getClass());\n+    this.logProvider = logProvider;\n+    this.catchupServerHandler = catchupServerHandler;\n+  }\n \n-    @Override\n-    public void install( Channel channel ) throws Exception\n-    {\n-        CatchupServerProtocol state = new CatchupServerProtocol();\n-\n-        pipelineBuilderFactory.server( channel, log )\n-                .modify( modifiers )\n-                .addFraming()\n-                .add( \"enc_req_type\", new RequestMessageTypeEncoder() )\n-                .add( \"enc_res_type\", new ResponseMessageTypeEncoder() )\n-                .add( \"enc_res_tx_pull\", new TxPullResponseEncoder() )\n-                .add( \"enc_res_store_id\", new GetStoreIdResponseEncoder() )\n-                .add( \"enc_res_copy_fin\", new StoreCopyFinishedResponseEncoder() )\n-                .add( \"enc_res_tx_fin\", new TxStreamFinishedResponseEncoder() )\n-                .add( \"enc_res_pre_copy\", new PrepareStoreCopyResponse.Encoder() )\n-                .add( \"enc_snapshot\", new CoreSnapshotEncoder() )\n-                .add( \"enc_file_chunk\", new FileChunkEncoder() )\n-                .add( \"enc_file_header\", new FileHeaderEncoder() )\n-                .add( \"in_req_type\", serverMessageHandler( state ) )\n-                .add( \"dec_req_dispatch\", requestDecoders( state ) )\n-                .add( \"out_chunked_write\", new ChunkedWriteHandler() )\n-                .add( \"hnd_req_tx\", catchupServerHandler.txPullRequestHandler( state ) )\n-                .add( \"hnd_req_store_id\", catchupServerHandler.getStoreIdRequestHandler( state ) )\n-                .add( \"hnd_req_store_listing\", catchupServerHandler.storeListingRequestHandler( state ) )\n-                .add( \"hnd_req_store_file\", catchupServerHandler.getStoreFileRequestHandler( state ) )\n-                .add( \"hnd_req_index_snapshot\", catchupServerHandler.getIndexSnapshotRequestHandler( state ) )\n-                .add( \"hnd_req_snapshot\", catchupServerHandler.snapshotHandler( state ).map( Collections::singletonList ).orElse( emptyList() ) )\n-                .install();\n-    }\n+  @Override\n+  public void install(Channel channel) throws Exception\n+  {\n+    CatchupServerProtocol state = new CatchupServerProtocol();\n \n-    private ChannelHandler serverMessageHandler( CatchupServerProtocol state )\n-    {\n-        return new ServerMessageTypeHandler( state, logProvider );\n-    }\n+    pipelineBuilderFactory.server(channel, log)\n+        .modify(modifiers)\n+        .addFraming()\n+        .add(\"enc_req_type\", new RequestMessageTypeEncoder())\n+        .add(\"enc_res_type\", new ResponseMessageTypeEncoder())\n+        .add(\"enc_res_tx_pull\", new TxPullResponseEncoder())\n+        .add(\"enc_res_store_id\", new GetStoreIdResponseEncoder())\n+        .add(\"enc_res_copy_fin\", new StoreCopyFinishedResponseEncoder())\n+        .add(\"enc_res_tx_fin\", new TxStreamFinishedResponseEncoder())\n+        .add(\"enc_res_pre_copy\", new PrepareStoreCopyResponse.Encoder())\n+        .add(\"enc_snapshot\", new CoreSnapshotEncoder())\n+        .add(\"enc_file_chunk\", new FileChunkEncoder())\n+        .add(\"enc_file_header\", new FileHeaderEncoder())\n+        .add(\"in_req_type\", serverMessageHandler(state))\n+        .add(\"dec_req_dispatch\", requestDecoders(state))\n+        .add(\"out_chunked_write\", new ChunkedWriteHandler())\n+        .add(\"hnd_req_tx\", catchupServerHandler.txPullRequestHandler(state))\n+        .add(\"hnd_req_store_id\", catchupServerHandler.getStoreIdRequestHandler(state))\n+        .add(\"hnd_req_store_listing\", catchupServerHandler.storeListingRequestHandler(state))\n+        .add(\"hnd_req_store_file\", catchupServerHandler.getStoreFileRequestHandler(state))\n+        .add(\"hnd_req_index_snapshot\", catchupServerHandler.getIndexSnapshotRequestHandler(state))\n+        .add(\"hnd_req_snapshot\", catchupServerHandler.snapshotHandler(state).map(Collections::singletonList).orElse(emptyList()))\n+        .install();\n+  }\n \n-    private ChannelInboundHandler requestDecoders( CatchupServerProtocol protocol )\n-    {\n-        RequestDecoderDispatcher<CatchupServerProtocol.State> decoderDispatcher = new RequestDecoderDispatcher<>( protocol, logProvider );\n-        decoderDispatcher.register( CatchupServerProtocol.State.TX_PULL, new TxPullRequestDecoder() );\n-        decoderDispatcher.register( CatchupServerProtocol.State.GET_STORE_ID, new SimpleRequestDecoder( GetStoreIdRequest::new ) );\n-        decoderDispatcher.register( CatchupServerProtocol.State.GET_CORE_SNAPSHOT, new SimpleRequestDecoder( CoreSnapshotRequest::new ) );\n-        decoderDispatcher.register( CatchupServerProtocol.State.PREPARE_STORE_COPY, new PrepareStoreCopyRequestDecoder() );\n-        decoderDispatcher.register( CatchupServerProtocol.State.GET_STORE_FILE, new GetStoreFileRequest.Decoder() );\n-        decoderDispatcher.register( CatchupServerProtocol.State.GET_INDEX_SNAPSHOT, new GetIndexFilesRequest.Decoder() );\n-        return decoderDispatcher;\n-    }\n+  private ChannelHandler serverMessageHandler(CatchupServerProtocol state)\n+  {\n+    return new ServerMessageTypeHandler(state, logProvider);\n+  }\n \n-    @Override\n-    public Protocol.ApplicationProtocol applicationProtocol()\n-    {\n-        return APPLICATION_PROTOCOL;\n-    }\n+  private ChannelInboundHandler requestDecoders(CatchupServerProtocol protocol)\n+  {\n+    RequestDecoderDispatcher<CatchupServerProtocol.State> decoderDispatcher = new RequestDecoderDispatcher<>(protocol, logProvider);\n+    decoderDispatcher.register(CatchupServerProtocol.State.TX_PULL, new TxPullRequestDecoder());\n+    decoderDispatcher.register(CatchupServerProtocol.State.GET_STORE_ID, new SimpleRequestDecoder(GetStoreIdRequest::new));\n+    decoderDispatcher.register(CatchupServerProtocol.State.GET_CORE_SNAPSHOT, new SimpleRequestDecoder(CoreSnapshotRequest::new));\n+    decoderDispatcher.register(CatchupServerProtocol.State.PREPARE_STORE_COPY, new PrepareStoreCopyRequestDecoder());\n+    decoderDispatcher.register(CatchupServerProtocol.State.GET_STORE_FILE, new GetStoreFileRequest.Decoder());\n+    decoderDispatcher.register(CatchupServerProtocol.State.GET_INDEX_SNAPSHOT, new GetIndexFilesRequest.Decoder());\n+    return decoderDispatcher;\n+  }\n \n-    @Override\n-    public Collection<Collection<Protocol.ModifierProtocol>> modifiers()\n-    {\n-        return modifiers.stream()\n-                .map( ModifierProtocolInstaller::protocols )\n-                .collect( Collectors.toList() );\n-    }\n+  @Override\n+  public Protocol.ApplicationProtocol applicationProtocol()\n+  {\n+    return APPLICATION_PROTOCOL;\n+  }\n+\n+  @Override\n+  public Collection<Collection<Protocol.ModifierProtocol>> modifiers()\n+  {\n+    return modifiers.stream()\n+        .map(ModifierProtocolInstaller::protocols)\n+        .collect(Collectors.toList());\n+  }\n }\n",
            "diff_size": 113
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,316).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4466/CatchupProtocolServerInstaller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4466/CatchupProtocolServerInstaller.java\nindex c8302bffe3e..a76afa3bd0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4466/CatchupProtocolServerInstaller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4466/CatchupProtocolServerInstaller.java\n@@ -63,7 +63,7 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n         {\n             super( APPLICATION_PROTOCOL,\n                     modifiers -> new CatchupProtocolServerInstaller( pipelineBuilderFactory, modifiers, logProvider, catchupServerHandler ) );\n-        }\n+    }\n     }\n \n     private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n@@ -87,30 +87,8 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n     public void install( Channel channel ) throws Exception\n     {\n         CatchupServerProtocol state = new CatchupServerProtocol();\n-\n-        pipelineBuilderFactory.server( channel, log )\n-                .modify( modifiers )\n-                .addFraming()\n-                .add( \"enc_req_type\", new RequestMessageTypeEncoder() )\n-                .add( \"enc_res_type\", new ResponseMessageTypeEncoder() )\n-                .add( \"enc_res_tx_pull\", new TxPullResponseEncoder() )\n-                .add( \"enc_res_store_id\", new GetStoreIdResponseEncoder() )\n-                .add( \"enc_res_copy_fin\", new StoreCopyFinishedResponseEncoder() )\n-                .add( \"enc_res_tx_fin\", new TxStreamFinishedResponseEncoder() )\n-                .add( \"enc_res_pre_copy\", new PrepareStoreCopyResponse.Encoder() )\n-                .add( \"enc_snapshot\", new CoreSnapshotEncoder() )\n-                .add( \"enc_file_chunk\", new FileChunkEncoder() )\n-                .add( \"enc_file_header\", new FileHeaderEncoder() )\n-                .add( \"in_req_type\", serverMessageHandler( state ) )\n-                .add( \"dec_req_dispatch\", requestDecoders( state ) )\n-                .add( \"out_chunked_write\", new ChunkedWriteHandler() )\n-                .add( \"hnd_req_tx\", catchupServerHandler.txPullRequestHandler( state ) )\n-                .add( \"hnd_req_store_id\", catchupServerHandler.getStoreIdRequestHandler( state ) )\n-                .add( \"hnd_req_store_listing\", catchupServerHandler.storeListingRequestHandler( state ) )\n-                .add( \"hnd_req_store_file\", catchupServerHandler.getStoreFileRequestHandler( state ) )\n-                .add( \"hnd_req_index_snapshot\", catchupServerHandler.getIndexSnapshotRequestHandler( state ) )\n-                .add( \"hnd_req_snapshot\", catchupServerHandler.snapshotHandler( state ).map( Collections::singletonList ).orElse( emptyList() ) )\n-                .install();\n+pipelineBuilderFactory.server( channel, log ).modify( modifiers )\n+                .addFraming().add( \"enc_req_type\", new RequestMessageTypeEncoder() ).add( \"enc_res_type\", new ResponseMessageTypeEncoder() ).add( \"enc_res_tx_pull\", new TxPullResponseEncoder() ).add( \"enc_res_store_id\", new GetStoreIdResponseEncoder() ).add( \"enc_res_copy_fin\", new StoreCopyFinishedResponseEncoder() ).add( \"enc_res_tx_fin\", new TxStreamFinishedResponseEncoder() ).add( \"enc_res_pre_copy\", new PrepareStoreCopyResponse.Encoder() ).add( \"enc_snapshot\", new CoreSnapshotEncoder() ).add( \"enc_file_chunk\", new FileChunkEncoder() ).add( \"enc_file_header\", new FileHeaderEncoder() ).add( \"in_req_type\", serverMessageHandler( state ) ).add( \"dec_req_dispatch\", requestDecoders( state ) ).add( \"out_chunked_write\", new ChunkedWriteHandler() ).add( \"hnd_req_tx\", catchupServerHandler.txPullRequestHandler( state ) ).add( \"hnd_req_store_id\", catchupServerHandler.getStoreIdRequestHandler( state ) ).add( \"hnd_req_store_listing\", catchupServerHandler.storeListingRequestHandler( state ) ).add( \"hnd_req_store_file\", catchupServerHandler.getStoreFileRequestHandler( state ) ).add( \"hnd_req_index_snapshot\", catchupServerHandler.getIndexSnapshotRequestHandler( state ) ).add( \"hnd_req_snapshot\", catchupServerHandler.snapshotHandler( state ).map( Collections::singletonList ).orElse( emptyList() ) ).install();\n     }\n \n     private ChannelHandler serverMessageHandler( CatchupServerProtocol state )\n@@ -139,8 +117,6 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n     @Override\n     public Collection<Collection<Protocol.ModifierProtocol>> modifiers()\n     {\n-        return modifiers.stream()\n-                .map( ModifierProtocolInstaller::protocols )\n-                .collect( Collectors.toList() );\n+        return modifiers.stream().map( ModifierProtocolInstaller::protocols ).collect( Collectors.toList() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 227).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,374).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4466/CatchupProtocolServerInstaller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4466/CatchupProtocolServerInstaller.java\nindex c8302bffe3e..6968a4aa73f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4466/CatchupProtocolServerInstaller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4466/CatchupProtocolServerInstaller.java\n@@ -23,12 +23,10 @@ import io.netty.channel.Channel;\n import io.netty.channel.ChannelHandler;\n import io.netty.channel.ChannelInboundHandler;\n import io.netty.handler.stream.ChunkedWriteHandler;\n-\n import java.util.Collection;\n import java.util.Collections;\n import java.util.List;\n import java.util.stream.Collectors;\n-\n import org.neo4j.causalclustering.catchup.storecopy.FileChunkEncoder;\n import org.neo4j.causalclustering.catchup.storecopy.FileHeaderEncoder;\n import org.neo4j.causalclustering.catchup.storecopy.GetIndexFilesRequest;\n@@ -50,7 +48,6 @@ import org.neo4j.causalclustering.protocol.ProtocolInstaller;\n import org.neo4j.causalclustering.protocol.ProtocolInstaller.Orientation;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n-\n import static java.util.Collections.emptyList;\n \n public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orientation.Server>\n@@ -61,20 +58,17 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n     {\n         public Factory( NettyPipelineBuilderFactory pipelineBuilderFactory, LogProvider logProvider, CatchupServerHandler catchupServerHandler )\n         {\n-            super( APPLICATION_PROTOCOL,\n-                    modifiers -> new CatchupProtocolServerInstaller( pipelineBuilderFactory, modifiers, logProvider, catchupServerHandler ) );\n+            super( APPLICATION_PROTOCOL, modifiers -> new CatchupProtocolServerInstaller( pipelineBuilderFactory, modifiers, logProvider, catchupServerHandler ) );\n         }\n     }\n \n     private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n     private final List<ModifierProtocolInstaller<Orientation.Server>> modifiers;\n     private final Log log;\n-\n     private final LogProvider logProvider;\n     private final CatchupServerHandler catchupServerHandler;\n \n-    private CatchupProtocolServerInstaller( NettyPipelineBuilderFactory pipelineBuilderFactory, List<ModifierProtocolInstaller<Orientation.Server>> modifiers,\n-            LogProvider logProvider, CatchupServerHandler catchupServerHandler )\n+    private CatchupProtocolServerInstaller( NettyPipelineBuilderFactory pipelineBuilderFactory, List<ModifierProtocolInstaller<Orientation.Server>> modifiers, LogProvider logProvider, CatchupServerHandler catchupServerHandler )\n     {\n         this.pipelineBuilderFactory = pipelineBuilderFactory;\n         this.modifiers = modifiers;\n@@ -87,30 +81,7 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n     public void install( Channel channel ) throws Exception\n     {\n         CatchupServerProtocol state = new CatchupServerProtocol();\n-\n-        pipelineBuilderFactory.server( channel, log )\n-                .modify( modifiers )\n-                .addFraming()\n-                .add( \"enc_req_type\", new RequestMessageTypeEncoder() )\n-                .add( \"enc_res_type\", new ResponseMessageTypeEncoder() )\n-                .add( \"enc_res_tx_pull\", new TxPullResponseEncoder() )\n-                .add( \"enc_res_store_id\", new GetStoreIdResponseEncoder() )\n-                .add( \"enc_res_copy_fin\", new StoreCopyFinishedResponseEncoder() )\n-                .add( \"enc_res_tx_fin\", new TxStreamFinishedResponseEncoder() )\n-                .add( \"enc_res_pre_copy\", new PrepareStoreCopyResponse.Encoder() )\n-                .add( \"enc_snapshot\", new CoreSnapshotEncoder() )\n-                .add( \"enc_file_chunk\", new FileChunkEncoder() )\n-                .add( \"enc_file_header\", new FileHeaderEncoder() )\n-                .add( \"in_req_type\", serverMessageHandler( state ) )\n-                .add( \"dec_req_dispatch\", requestDecoders( state ) )\n-                .add( \"out_chunked_write\", new ChunkedWriteHandler() )\n-                .add( \"hnd_req_tx\", catchupServerHandler.txPullRequestHandler( state ) )\n-                .add( \"hnd_req_store_id\", catchupServerHandler.getStoreIdRequestHandler( state ) )\n-                .add( \"hnd_req_store_listing\", catchupServerHandler.storeListingRequestHandler( state ) )\n-                .add( \"hnd_req_store_file\", catchupServerHandler.getStoreFileRequestHandler( state ) )\n-                .add( \"hnd_req_index_snapshot\", catchupServerHandler.getIndexSnapshotRequestHandler( state ) )\n-                .add( \"hnd_req_snapshot\", catchupServerHandler.snapshotHandler( state ).map( Collections::singletonList ).orElse( emptyList() ) )\n-                .install();\n+        pipelineBuilderFactory.server( channel, log ).modify( modifiers ).addFraming().add( \"enc_req_type\", new RequestMessageTypeEncoder() ).add( \"enc_res_type\", new ResponseMessageTypeEncoder() ).add( \"enc_res_tx_pull\", new TxPullResponseEncoder() ).add( \"enc_res_store_id\", new GetStoreIdResponseEncoder() ).add( \"enc_res_copy_fin\", new StoreCopyFinishedResponseEncoder() ).add( \"enc_res_tx_fin\", new TxStreamFinishedResponseEncoder() ).add( \"enc_res_pre_copy\", new PrepareStoreCopyResponse. Encoder() ).add( \"enc_snapshot\", new CoreSnapshotEncoder() ).add( \"enc_file_chunk\", new FileChunkEncoder() ).add( \"enc_file_header\", new FileHeaderEncoder() ).add( \"in_req_type\", serverMessageHandler( state ) ).add( \"dec_req_dispatch\", requestDecoders( state ) ).add( \"out_chunked_write\", new ChunkedWriteHandler() ).add( \"hnd_req_tx\", catchupServerHandler.txPullRequestHandler( state ) ).add( \"hnd_req_store_id\", catchupServerHandler.getStoreIdRequestHandler( state ) ).add( \"hnd_req_store_listing\", catchupServerHandler.storeListingRequestHandler( state ) ).add( \"hnd_req_store_file\", catchupServerHandler.getStoreFileRequestHandler( state ) ).add( \"hnd_req_index_snapshot\", catchupServerHandler.getIndexSnapshotRequestHandler( state ) ).add( \"hnd_req_snapshot\", catchupServerHandler.snapshotHandler( state ).map( Collections::singletonList ).orElse( emptyList() ) ).install();\n     }\n \n     private ChannelHandler serverMessageHandler( CatchupServerProtocol state )\n@@ -125,8 +96,8 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n         decoderDispatcher.register( CatchupServerProtocol.State.GET_STORE_ID, new SimpleRequestDecoder( GetStoreIdRequest::new ) );\n         decoderDispatcher.register( CatchupServerProtocol.State.GET_CORE_SNAPSHOT, new SimpleRequestDecoder( CoreSnapshotRequest::new ) );\n         decoderDispatcher.register( CatchupServerProtocol.State.PREPARE_STORE_COPY, new PrepareStoreCopyRequestDecoder() );\n-        decoderDispatcher.register( CatchupServerProtocol.State.GET_STORE_FILE, new GetStoreFileRequest.Decoder() );\n-        decoderDispatcher.register( CatchupServerProtocol.State.GET_INDEX_SNAPSHOT, new GetIndexFilesRequest.Decoder() );\n+        decoderDispatcher.register( CatchupServerProtocol.State.GET_STORE_FILE, new GetStoreFileRequest. Decoder() );\n+        decoderDispatcher.register( CatchupServerProtocol.State.GET_INDEX_SNAPSHOT, new GetIndexFilesRequest. Decoder() );\n         return decoderDispatcher;\n     }\n \n@@ -139,8 +110,6 @@ public class CatchupProtocolServerInstaller implements ProtocolInstaller<Orienta\n     @Override\n     public Collection<Collection<Protocol.ModifierProtocol>> modifiers()\n     {\n-        return modifiers.stream()\n-                .map( ModifierProtocolInstaller::protocols )\n-                .collect( Collectors.toList() );\n+        return modifiers.stream().map( ModifierProtocolInstaller::protocols ).collect( Collectors.toList() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
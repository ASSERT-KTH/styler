{
    "project_name": "neo4j-neo4j",
    "error_id": "896",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/896/NotificationDetail.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/896/NotificationDetail.java\nindex 657c975c455..7395aefc0e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/896/NotificationDetail.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/896/NotificationDetail.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl.notification;\n \n import java.util.List;\n@@ -34,88 +35,87 @@ public interface NotificationDetail\n         {\n         }\n \n-        public static NotificationDetail deprecatedName( final String oldName, final String newName )\n+        public static NotificationDetail deprecatedName(final String oldName, final String newName)\n         {\n-            return createDeprecationNotificationDetail( oldName, newName );\n+            return createDeprecationNotificationDetail(oldName, newName);\n         }\n \n-        public static NotificationDetail index( final String labelName, final String... propertyKeyNames )\n+        public static NotificationDetail index(final String labelName, final String... propertyKeyNames)\n         {\n-            return createNotificationDetail( \"hinted index\",\n-                    String.format( \"index on :%s(%s)\", labelName, String.join( \",\", propertyKeyNames ) ), true );\n+            return createNotificationDetail(\"hinted index\",\n+              String.format(\"index on :%s(%s)\", labelName, String.join(\",\", propertyKeyNames)), true);\n         }\n \n-        public static NotificationDetail suboptimalIndex( final String labelName, final String... propertyKeyNames )\n+        public static NotificationDetail suboptimalIndex(final String labelName, final String... propertyKeyNames)\n         {\n-            return createNotificationDetail( \"index\",\n-                    String.format( \"index on :%s(%s)\", labelName, String.join( \",\", propertyKeyNames ) ), true );\n+            return createNotificationDetail(\"index\",\n+              String.format(\"index on :%s(%s)\", labelName, String.join(\",\", propertyKeyNames)), true);\n         }\n \n-        public static NotificationDetail label( final String labelName )\n+        public static NotificationDetail label(final String labelName)\n         {\n-            return createNotificationDetail( \"the missing label name\", labelName, true );\n+            return createNotificationDetail(\"the missing label name\", labelName, true);\n         }\n \n-        public static NotificationDetail relationshipType( final String relType )\n+        public static NotificationDetail relationshipType(final String relType)\n         {\n-            return createNotificationDetail( \"the missing relationship type\", relType, true );\n+            return createNotificationDetail(\"the missing relationship type\", relType, true);\n         }\n \n-        public static NotificationDetail procedureWarning( final String procedure, final String warning )\n+        public static NotificationDetail procedureWarning(final String procedure, final String warning)\n         {\n-            return createProcedureWarningNotificationDetail( procedure, warning );\n+            return createProcedureWarningNotificationDetail(procedure, warning);\n         }\n \n-        public static NotificationDetail propertyName( final String name )\n+        public static NotificationDetail propertyName(final String name)\n         {\n-            return createNotificationDetail( \"the missing property name\", name, true );\n+            return createNotificationDetail(\"the missing property name\", name, true);\n         }\n \n-        public static NotificationDetail repeatedRel( final String name )\n+        public static NotificationDetail repeatedRel(final String name)\n         {\n-            return createNotificationDetail( \"the repeated relationship\", name, true );\n+            return createNotificationDetail(\"the repeated relationship\", name, true);\n         }\n \n-        public static NotificationDetail shadowingVariable( final String name )\n+        public static NotificationDetail shadowingVariable(final String name)\n         {\n-            return createNotificationDetail( \"the shadowing variable\", name, true );\n+            return createNotificationDetail(\"the shadowing variable\", name, true);\n         }\n \n-        public static NotificationDetail joinKey( List<String> identifiers )\n+        public static NotificationDetail joinKey(List<String> identifiers)\n         {\n             boolean singular = identifiers.size() == 1;\n             StringBuilder builder = new StringBuilder();\n             boolean first = true;\n-            for ( String identifier : identifiers )\n+            for (String identifier : identifiers)\n             {\n-                if ( first )\n+                if (first)\n                 {\n                     first = false;\n-                }\n-                else\n+                } else\n                 {\n-                    builder.append( \", \" );\n+                    builder.append(\", \");\n                 }\n-                builder.append( identifier );\n+                builder.append(identifier);\n             }\n             return createNotificationDetail(\n-                singular ? \"hinted join key identifier\" : \"hinted join key identifiers\",\n-                builder.toString(),\n-                singular\n+              singular ? \"hinted join key identifier\" : \"hinted join key identifiers\",\n+              builder.toString(),\n+              singular\n             );\n         }\n \n-        public static NotificationDetail cartesianProduct( Set<String> identifiers )\n+        public static NotificationDetail cartesianProduct(Set<String> identifiers)\n         {\n-            return createNotificationDetail( identifiers, \"identifier\", \"identifiers\" );\n+            return createNotificationDetail(identifiers, \"identifier\", \"identifiers\");\n         }\n \n-        public static NotificationDetail indexSeekOrScan( Set<String> labels )\n+        public static NotificationDetail indexSeekOrScan(Set<String> labels)\n         {\n-            return createNotificationDetail( labels, \"indexed label\", \"indexed labels\" );\n+            return createNotificationDetail(labels, \"indexed label\", \"indexed labels\");\n         }\n \n-        public static NotificationDetail message( String name, String message )\n+        public static NotificationDetail message(String name, String message)\n         {\n             return new NotificationDetail()\n             {\n@@ -139,7 +139,7 @@ public interface NotificationDetail\n             };\n         }\n \n-        public static NotificationDetail deprecatedField( final String procedure, final String field )\n+        public static NotificationDetail deprecatedField(final String procedure, final String field)\n         {\n             return new NotificationDetail()\n             {\n@@ -158,12 +158,12 @@ public interface NotificationDetail\n                 @Override\n                 public String toString()\n                 {\n-                    return String.format( \"'%s' returned by '%s' is no longer supported.\", field, procedure );\n+                    return String.format(\"'%s' returned by '%s' is no longer supported.\", field, procedure);\n                 }\n             };\n         }\n \n-        public static NotificationDetail bindingVarLengthRelationship( final String element )\n+        public static NotificationDetail bindingVarLengthRelationship(final String element)\n         {\n             return new NotificationDetail()\n             {\n@@ -177,12 +177,12 @@ public interface NotificationDetail\n                 public String value()\n                 {\n                     return String.format(\n-                            \"Binding a variable length relationship pattern to a variable ('%s') is deprecated and \"\n-                                    + \"will be unsupported in a future version. The recommended way is to bind the \"\n-                                    + \"whole path to a variable, then extract the relationships:%n\"\n-                                    + \"\\tMATCH p = (...)-[...]-(...)%n\"\n-                                    + \"\\tWITH *, relationships(p) AS %s\",\n-                            element, element );\n+                      \"Binding a variable length relationship pattern to a variable ('%s') is deprecated and \"\n+                        + \"will be unsupported in a future version. The recommended way is to bind the \"\n+                        + \"whole path to a variable, then extract the relationships:%n\"\n+                        + \"\\tMATCH p = (...)-[...]-(...)%n\"\n+                        + \"\\tWITH *, relationships(p) AS %s\",\n+                      element, element);\n                 }\n \n                 @Override\n@@ -193,25 +193,25 @@ public interface NotificationDetail\n             };\n         }\n \n-        private static NotificationDetail createNotificationDetail( Set<String> elements, String singularTerm,\n-                String pluralTerm )\n+        private static NotificationDetail createNotificationDetail(Set<String> elements, String singularTerm,\n+                                                                   String pluralTerm)\n         {\n             StringBuilder builder = new StringBuilder();\n-            builder.append( '(' );\n+            builder.append('(');\n             String separator = \"\";\n-            for ( String element : elements )\n+            for (String element : elements)\n             {\n-                builder.append( separator );\n-                builder.append( element );\n+                builder.append(separator);\n+                builder.append(element);\n                 separator = \", \";\n             }\n-            builder.append( ')' );\n+            builder.append(')');\n             boolean singular = elements.size() == 1;\n-            return createNotificationDetail( singular ? singularTerm : pluralTerm, builder.toString(), singular );\n+            return createNotificationDetail(singular ? singularTerm : pluralTerm, builder.toString(), singular);\n         }\n \n-        private static NotificationDetail createNotificationDetail( final String name, final String value,\n-                final boolean singular )\n+        private static NotificationDetail createNotificationDetail(final String name, final String value,\n+                                                                   final boolean singular)\n         {\n             return new NotificationDetail()\n             {\n@@ -230,12 +230,12 @@ public interface NotificationDetail\n                 @Override\n                 public String toString()\n                 {\n-                    return String.format( \"%s %s %s\", name, singular ? \"is:\" : \"are:\", value );\n+                    return String.format(\"%s %s %s\", name, singular ? \"is:\" : \"are:\", value);\n                 }\n             };\n         }\n \n-        private static NotificationDetail createDeprecationNotificationDetail( final String oldName, final String newName )\n+        private static NotificationDetail createDeprecationNotificationDetail(final String oldName, final String newName)\n         {\n             return new NotificationDetail()\n             {\n@@ -254,19 +254,18 @@ public interface NotificationDetail\n                 @Override\n                 public String toString()\n                 {\n-                    if ( newName == null || newName.trim().isEmpty() )\n+                    if (newName == null || newName.trim().isEmpty())\n                     {\n-                        return String.format( \"'%s' is no longer supported\", oldName );\n-                    }\n-                    else\n+                        return String.format(\"'%s' is no longer supported\", oldName);\n+                    } else\n                     {\n-                        return String.format( \"'%s' has been replaced by '%s'\", oldName, newName );\n+                        return String.format(\"'%s' has been replaced by '%s'\", oldName, newName);\n                     }\n                 }\n             };\n         }\n \n-        private static NotificationDetail createProcedureWarningNotificationDetail( String procedure, String warning )\n+        private static NotificationDetail createProcedureWarningNotificationDetail(String procedure, String warning)\n         {\n             return new NotificationDetail()\n             {\n@@ -285,7 +284,7 @@ public interface NotificationDetail\n                 @Override\n                 public String toString()\n                 {\n-                    return String.format( warning, procedure );\n+                    return String.format(warning, procedure);\n                 }\n             };\n         }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
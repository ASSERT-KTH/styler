{
    "project_name": "wayshall-onetwo",
    "error_id": "89",
    "information": {
        "errors": [
            {
                "line": "108",
                "column": "57",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t}\n\t\n\tprotected Object defaultValueIfOhter(Object obj){\n\t\treturn obj;\n\t}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/styler/89/TypeJudgeAdapter.java\nindex 34b29aec9b5..6ed2b2a9215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/styler/89/TypeJudgeAdapter.java\n@@ -105,7 +105,7 @@ public class TypeJudgeAdapter implements TypeJudge {\n \t\treturn defaultValueIfOhter(obj);\r\n \t}\r\n \t\r\n-\tprotected Object defaultValueIfOhter(Object obj){\r\n+\tprotected Object defaultValueIfOhter(Object obj) {\r\n \t\treturn obj;\r\n \t}\r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/89/TypeJudgeAdapter.java\nindex 34b29aec9b5..ddba68e3b69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/89/TypeJudgeAdapter.java\n@@ -7,105 +7,105 @@ import java.util.Map;\n \r\n public class TypeJudgeAdapter implements TypeJudge {\r\n \r\n-\t@Override\r\n-\tpublic Object ifIterable(Iterable<?> obj) {\r\n-\t\treturn obj;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic Object ifList(List<?> obj) {\r\n-\t\treturn obj;\r\n-\t}\r\n-\t\r\n-\tpublic Object ifCollection(Collection<?> obj) {\r\n-\t\treturn obj;\r\n-\t}\r\n-\r\n-\tpublic Object ifMap(Map<?, ?> obj) {\r\n-\t\treturn obj;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic Object ifArray(Object[] array) {\r\n-\t\treturn array;\r\n-\t}\r\n+  @Override\r\n+  public Object ifIterable(Iterable<?> obj) {\r\n+    return obj;\r\n+  }\r\n+\r\n+  @Override\r\n+  public Object ifList(List<?> obj) {\r\n+    return obj;\r\n+  }\r\n+\r\n+  public Object ifCollection(Collection<?> obj) {\r\n+    return obj;\r\n+  }\r\n+\r\n+  public Object ifMap(Map<?, ?> obj) {\r\n+    return obj;\r\n+  }\r\n+\r\n+  @Override\r\n+  public Object ifArray(Object[] array) {\r\n+    return array;\r\n+  }\r\n \t\r\n \t/*@Override\r\n \tpublic Object ifPrimitiveArray(Object array, Class<?> primitiveType) {\r\n \t\treturn array;\r\n \t}*/\r\n \r\n-\tpublic Object other(Object obj, Class<?> toType) {\r\n-\t\tObject result;\r\n-\t\tif (toType == Long.class || toType == long.class) {\r\n-\t\t\tresult = ifLong(obj);\r\n-\t\t} else if (toType == Character.class || toType == char.class) {\r\n-\t\t\tresult = ifCharacter(obj);\r\n-\t\t} else if (toType == Byte.class || toType == byte.class) {\r\n-\t\t\tresult = ifByte(obj);\r\n-\t\t} else if (toType == Short.class || toType == short.class) {\r\n-\t\t\tresult = ifInteger(obj);\r\n-\t\t} else if (toType == Integer.class || toType == int.class) {\r\n-\t\t\tresult = ifInteger(obj);\r\n-\t\t} else if (toType == Double.class || toType == double.class) {\r\n-\t\t\tresult = ifDouble(obj);\r\n-\t\t} else if (toType == Float.class || toType == float.class) {\r\n-\t\t\tresult = ifFloat(obj);\r\n-\t\t} else if (toType == Boolean.class || toType == boolean.class) {\r\n-\t\t\tresult = ifBoolean(obj);\r\n-\t\t} else if (toType == String.class) {\r\n-\t\t\tresult = ifString(obj);\r\n-\t\t} else {\r\n-\t\t\tresult = ifNotBaseType(obj);\r\n-\t\t}\r\n-\t\treturn result;\r\n-\t}\r\n-\t\r\n-\tpublic Object all(Object obj) {\r\n-\t\treturn obj;\r\n-\t}\r\n-\r\n-\tpublic Object ifBoolean(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifByte(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifCharacter(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifDouble(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifFloat(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifInteger(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifShort(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifLong(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifString(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\r\n-\tpublic Object ifNotBaseType(Object obj) {\r\n-\t\treturn defaultValueIfOhter(obj);\r\n-\t}\r\n-\t\r\n-\tprotected Object defaultValueIfOhter(Object obj){\r\n-\t\treturn obj;\r\n-\t}\r\n+  public Object other(Object obj, Class<?> toType) {\r\n+    Object result;\r\n+    if (toType == Long.class || toType == long.class) {\r\n+      result = ifLong(obj);\r\n+    } else if (toType == Character.class || toType == char.class) {\r\n+      result = ifCharacter(obj);\r\n+    } else if (toType == Byte.class || toType == byte.class) {\r\n+      result = ifByte(obj);\r\n+    } else if (toType == Short.class || toType == short.class) {\r\n+      result = ifInteger(obj);\r\n+    } else if (toType == Integer.class || toType == int.class) {\r\n+      result = ifInteger(obj);\r\n+    } else if (toType == Double.class || toType == double.class) {\r\n+      result = ifDouble(obj);\r\n+    } else if (toType == Float.class || toType == float.class) {\r\n+      result = ifFloat(obj);\r\n+    } else if (toType == Boolean.class || toType == boolean.class) {\r\n+      result = ifBoolean(obj);\r\n+    } else if (toType == String.class) {\r\n+      result = ifString(obj);\r\n+    } else {\r\n+      result = ifNotBaseType(obj);\r\n+    }\r\n+    return result;\r\n+  }\r\n+\r\n+  public Object all(Object obj) {\r\n+    return obj;\r\n+  }\r\n+\r\n+  public Object ifBoolean(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifByte(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifCharacter(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifDouble(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifFloat(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifInteger(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifShort(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifLong(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifString(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  public Object ifNotBaseType(Object obj) {\r\n+    return defaultValueIfOhter(obj);\r\n+  }\r\n+\r\n+  protected Object defaultValueIfOhter(Object obj) {\r\n+    return obj;\r\n+  }\r\n }\r\n",
            "diff_size": 95
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/styler_random/89/TypeJudgeAdapter.java\nindex 34b29aec9b5..6ed2b2a9215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/styler_random/89/TypeJudgeAdapter.java\n@@ -105,7 +105,7 @@ public class TypeJudgeAdapter implements TypeJudge {\n \t\treturn defaultValueIfOhter(obj);\r\n \t}\r\n \t\r\n-\tprotected Object defaultValueIfOhter(Object obj){\r\n+\tprotected Object defaultValueIfOhter(Object obj) {\r\n \t\treturn obj;\r\n \t}\r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/styler_three_grams/89/TypeJudgeAdapter.java\nindex 34b29aec9b5..6ed2b2a9215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/89/TypeJudgeAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/styler_three_grams/89/TypeJudgeAdapter.java\n@@ -105,7 +105,7 @@ public class TypeJudgeAdapter implements TypeJudge {\n \t\treturn defaultValueIfOhter(obj);\r\n \t}\r\n \t\r\n-\tprotected Object defaultValueIfOhter(Object obj){\r\n+\tprotected Object defaultValueIfOhter(Object obj) {\r\n \t\treturn obj;\r\n \t}\r\n }\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
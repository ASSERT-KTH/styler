{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "63",
    "information": {
        "errors": [
            {
                "line": "252",
                "column": "33",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "     */\n    public StatDataResponse deserializeResponse(ApiClient apiClient, Response response) throws ApiException, MessagingException, IOException {\n        return (StatDataResponse)apiClient.deserialize(response, StatDataResponse.class);\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/63/GetDocumentStatisticsOnlineRequest.java\nindex 2b6b44f51ab..70364d78182 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/63/GetDocumentStatisticsOnlineRequest.java\n@@ -249,6 +249,6 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @param response Response instance\n      */\n     public StatDataResponse deserializeResponse(ApiClient apiClient, Response response) throws ApiException, MessagingException, IOException {\n-        return (StatDataResponse)apiClient.deserialize(response, StatDataResponse.class);\n+        return (StatDataResponse) apiClient.deserialize(response, StatDataResponse.class);\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/63/GetDocumentStatisticsOnlineRequest.java\nindex 2b6b44f51ab..7e607b9c3e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/63/GetDocumentStatisticsOnlineRequest.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -31,8 +31,10 @@ import com.aspose.words.cloud.*;\n import com.aspose.words.cloud.model.*;\n import com.aspose.words.cloud.model.responses.*;\n import com.squareup.okhttp.*;\n+\n import javax.mail.MessagingException;\n import javax.mail.internet.MimeMultipart;\n+\n import java.io.*;\n import java.lang.reflect.Type;\n import java.util.*;\n@@ -205,8 +207,9 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n         Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n \n         Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n-        if (getDocument() != null)\n+        if (getDocument() != null) {\n             localVarFormParams.put(\"Document\", getDocument());\n+        }\n \n         final String[] localVarAccepts = {\n             \"application/xml\", \"application/json\"\n@@ -226,8 +229,8 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n                 public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n                     com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n                     return originalResponse.newBuilder()\n-                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n-                    .build();\n+                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n+                        .build();\n                 }\n             });\n         }\n@@ -249,6 +252,6 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @param response Response instance\n      */\n     public StatDataResponse deserializeResponse(ApiClient apiClient, Response response) throws ApiException, MessagingException, IOException {\n-        return (StatDataResponse)apiClient.deserialize(response, StatDataResponse.class);\n+        return (StatDataResponse) apiClient.deserialize(response, StatDataResponse.class);\n     }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/63/GetDocumentStatisticsOnlineRequest.java\nindex 2b6b44f51ab..539c8767838 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/63/GetDocumentStatisticsOnlineRequest.java\n@@ -26,7 +26,6 @@\n  */\n \n package com.aspose.words.cloud.model.requests;\n-\n import com.aspose.words.cloud.*;\n import com.aspose.words.cloud.model.*;\n import com.aspose.words.cloud.model.responses.*;\n@@ -40,36 +39,49 @@ import java.util.*;\n /*\n  * Request model for getDocumentStatisticsOnline operation.\n  */\n+\n+\n public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n     /*\n      * The document.\n      */\n-    private byte[] document;\n+\n+  private byte[] document;\n \n     /*\n      * Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML.\n      */\n-    private String loadEncoding;\n+\n+\n+  private String loadEncoding;\n \n     /*\n      * Password for opening an encrypted document.\n      */\n-    private String password;\n+\n+\n+  private String password;\n \n     /*\n      * The flag indicating whether to include comments from the WordCount. The default value is \"false\".\n      */\n-    private Boolean includeComments;\n+\n+\n+  private Boolean includeComments;\n \n     /*\n      * The flag indicating whether to include footnotes from the WordCount. The default value is \"false\".\n      */\n-    private Boolean includeFootnotes;\n+\n+\n+  private Boolean includeFootnotes;\n \n     /*\n      * The flag indicating whether to include shape's text from the WordCount. The default value is \"false\".\n      */\n-    private Boolean includeTextInShapes;\n+\n+\n+  private Boolean includeTextInShapes;\n \n     /*\n      * Initializes a new instance of the GetDocumentStatisticsOnlineRequest class.\n@@ -81,98 +93,113 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @param Boolean includeFootnotes The flag indicating whether to include footnotes from the WordCount. The default value is \"false\".\n      * @param Boolean includeTextInShapes The flag indicating whether to include shape's text from the WordCount. The default value is \"false\".\n      */\n-    public GetDocumentStatisticsOnlineRequest(byte[] document, String loadEncoding, String password, Boolean includeComments, Boolean includeFootnotes, Boolean includeTextInShapes) {\n-        this.document = document;\n-        this.loadEncoding = loadEncoding;\n-        this.password = password;\n-        this.includeComments = includeComments;\n-        this.includeFootnotes = includeFootnotes;\n-        this.includeTextInShapes = includeTextInShapes;\n-    }\n+\n+\n+  public GetDocumentStatisticsOnlineRequest(byte[] document,  String loadEncoding,  String password,  Boolean includeComments,  Boolean includeFootnotes,  Boolean includeTextInShapes) {\n+    this.document = document;\n+    this.loadEncoding = loadEncoding;\n+    this.password = password;\n+    this.includeComments = includeComments;\n+    this.includeFootnotes = includeFootnotes;\n+    this.includeTextInShapes = includeTextInShapes;\n+  }\n \n     /*\n      * Gets The document.\n      */\n-    public byte[] getDocument() {\n-        return this.document;\n-    }\n+\n+\n+  public byte[] getDocument() {\n+    return this.document;\n+  }\n \n     /*\n      * Sets The document.\n      */\n-    public void setDocument(byte[] value) {\n-        this.document = value;\n-    }\n+\n+  public void setDocument(byte[] value) {\n+    this.document = value;\n+  }\n \n     /*\n      * Gets Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML.\n      */\n-    public String getLoadEncoding() {\n-        return this.loadEncoding;\n-    }\n+\n+  public String getLoadEncoding() {\n+    return this.loadEncoding;\n+  }\n \n     /*\n      * Sets Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML.\n      */\n-    public void setLoadEncoding(String value) {\n-        this.loadEncoding = value;\n-    }\n+\n+  public void setLoadEncoding(String value) {\n+    this.loadEncoding = value;\n+  }\n \n     /*\n      * Gets Password for opening an encrypted document.\n      */\n-    public String getPassword() {\n-        return this.password;\n-    }\n+\n+  public String getPassword() {\n+    return this.password;\n+  }\n \n     /*\n      * Sets Password for opening an encrypted document.\n      */\n-    public void setPassword(String value) {\n-        this.password = value;\n-    }\n+\n+  public void setPassword(String value) {\n+    this.password = value;\n+  }\n \n     /*\n      * Gets The flag indicating whether to include comments from the WordCount. The default value is \"false\".\n      */\n-    public Boolean getIncludeComments() {\n-        return this.includeComments;\n-    }\n+\n+  public Boolean getIncludeComments() {\n+    return this.includeComments;\n+  }\n \n     /*\n      * Sets The flag indicating whether to include comments from the WordCount. The default value is \"false\".\n      */\n-    public void setIncludeComments(Boolean value) {\n-        this.includeComments = value;\n-    }\n+\n+  public void setIncludeComments(Boolean value) {\n+    this.includeComments = value;\n+  }\n \n     /*\n      * Gets The flag indicating whether to include footnotes from the WordCount. The default value is \"false\".\n      */\n-    public Boolean getIncludeFootnotes() {\n-        return this.includeFootnotes;\n-    }\n+\n+  public Boolean getIncludeFootnotes() {\n+    return this.includeFootnotes;\n+  }\n \n     /*\n      * Sets The flag indicating whether to include footnotes from the WordCount. The default value is \"false\".\n      */\n-    public void setIncludeFootnotes(Boolean value) {\n-        this.includeFootnotes = value;\n-    }\n+\n+  public void setIncludeFootnotes(Boolean value) {\n+    this.includeFootnotes = value;\n+  }\n \n     /*\n      * Gets The flag indicating whether to include shape's text from the WordCount. The default value is \"false\".\n      */\n-    public Boolean getIncludeTextInShapes() {\n-        return this.includeTextInShapes;\n-    }\n+\n+  public Boolean getIncludeTextInShapes() {\n+    return this.includeTextInShapes;\n+  }\n \n     /*\n      * Sets The flag indicating whether to include shape's text from the WordCount. The default value is \"false\".\n      */\n-    public void setIncludeTextInShapes(Boolean value) {\n-        this.includeTextInShapes = value;\n-    }\n+\n+  public void setIncludeTextInShapes(Boolean value) {\n+    this.includeTextInShapes = value;\n+  }\n \n \n     /*\n@@ -182,65 +209,63 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n+\n+  public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener,  Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'Document' is set\n-        if (getDocument() == null) {\n-            throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Document' when calling getDocumentStatisticsOnline\");\n-        }\n+    if (getDocument() == null) {\n+      throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Document' when calling getDocumentStatisticsOnline\");\n+    }\n \n-        Object localVarPostBody = null;\n+    Object localVarPostBody = null;\n \n         // create path and map variables\n-        String localVarPath = \"/words/online/get/statistics\";\n-        localVarPath = localVarPath.replaceAll(\"//\", \"/\");\n-\n-        List<Pair> localVarQueryParams = new ArrayList<Pair>();\n-        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();\n-        apiClient.addParameterToQuery(localVarQueryParams, \"loadEncoding\", getLoadEncoding());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"password\", getPassword());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"includeComments\", getIncludeComments());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"includeFootnotes\", getIncludeFootnotes());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"includeTextInShapes\", getIncludeTextInShapes());\n-\n-        Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n-\n-        Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n-        if (getDocument() != null)\n-            localVarFormParams.put(\"Document\", getDocument());\n-\n-        final String[] localVarAccepts = {\n-            \"application/xml\", \"application/json\"\n-        };\n-        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);\n-        if (localVarAccept != null) localVarHeaderParams.put(\"Accept\", localVarAccept);\n-\n-        final String[] localVarContentTypes = {\n-            \"multipart/form-data\"\n-        };\n-        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);\n-        localVarHeaderParams.put(\"Content-Type\", localVarContentType);\n-\n-        if (progressListener != null) {\n-            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {\n-                @Override\n-                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n-                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n-                    return originalResponse.newBuilder()\n-                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n-                    .build();\n-                }\n-            });\n-        }\n-\n-        return apiClient.buildRequest(localVarPath, \"PUT\", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, addAuthHeaders, progressRequestListener);\n+    String localVarPath = \"/words/online/get/statistics\";\n+    localVarPath = localVarPath.replaceAll(\"//\", \"/\");\n+\n+    List<Pair> localVarQueryParams = new ArrayList<Pair>();\n+    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();\n+    apiClient.addParameterToQuery(localVarQueryParams, \"loadEncoding\", getLoadEncoding());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"password\", getPassword());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"includeComments\", getIncludeComments());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"includeFootnotes\", getIncludeFootnotes());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"includeTextInShapes\", getIncludeTextInShapes());\n+\n+    Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n+    Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n+    if (getDocument() != null) localVarFormParams.put(\"Document\", getDocument());\n+\n+    final String[] localVarAccepts = {\n+         \"application/xml\", \"application/json\"\n+    };\n+    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);\n+    if (localVarAccept != null) localVarHeaderParams.put(\"Accept\", localVarAccept);\n+\n+    final String[] localVarContentTypes = {\n+         \"multipart/form-data\"\n+    };\n+    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);\n+    localVarHeaderParams.put(\"Content-Type\", localVarContentType);\n+\n+    if (progressListener != null) {\n+        apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {\n+          @Override\n+          public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n+            com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n+            return originalResponse.newBuilder().body(new ProgressResponseBody(originalResponse.body(), progressListener))\n+                                                .build();\n+          }\n+        });\n     }\n+    return apiClient.buildRequest(localVarPath, \"PUT\", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, addAuthHeaders, progressRequestListener);\n+  }\n \n     /*\n      * Gets response type for this request.\n      */\n-    public Type getResponseType() {\n-        return StatDataResponse.class;\n-    }\n+\n+  public Type getResponseType() {\n+    return StatDataResponse.class;\n+  }\n \n     /*\n      * Deserialize response message.\n@@ -248,7 +273,8 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @param apiClient ApiClient instance\n      * @param response Response instance\n      */\n-    public StatDataResponse deserializeResponse(ApiClient apiClient, Response response) throws ApiException, MessagingException, IOException {\n-        return (StatDataResponse)apiClient.deserialize(response, StatDataResponse.class);\n-    }\n-}\n+\n+  public StatDataResponse deserializeResponse(ApiClient apiClient,  Response response) throws ApiException, MessagingException, IOException {\n+    return (StatDataResponse) apiClient.deserialize(response, StatDataResponse.class);\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 138
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/63/GetDocumentStatisticsOnlineRequest.java\nindex 2b6b44f51ab..70364d78182 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/63/GetDocumentStatisticsOnlineRequest.java\n@@ -249,6 +249,6 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @param response Response instance\n      */\n     public StatDataResponse deserializeResponse(ApiClient apiClient, Response response) throws ApiException, MessagingException, IOException {\n-        return (StatDataResponse)apiClient.deserialize(response, StatDataResponse.class);\n+        return (StatDataResponse) apiClient.deserialize(response, StatDataResponse.class);\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/63/GetDocumentStatisticsOnlineRequest.java\nindex 2b6b44f51ab..96b73730889 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/63/GetDocumentStatisticsOnlineRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/63/GetDocumentStatisticsOnlineRequest.java\n@@ -249,6 +249,6 @@ public class GetDocumentStatisticsOnlineRequest implements RequestIfc {\n      * @param response Response instance\n      */\n     public StatDataResponse deserializeResponse(ApiClient apiClient, Response response) throws ApiException, MessagingException, IOException {\n-        return (StatDataResponse)apiClient.deserialize(response, StatDataResponse.class);\n+        return (StatDataResponse)  apiClient.deserialize(response, StatDataResponse.class);\n     }\n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
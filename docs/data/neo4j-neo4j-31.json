{
    "project_name": "neo4j-neo4j",
    "error_id": "31",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/31/LockVerificationMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/31/LockVerificationMonitor.java\nindex 42ae368cfb4..11410c19b24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/31/LockVerificationMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/31/LockVerificationMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.internal.recordstorage.RecordAccess.LoadMonitor;\n@@ -48,7 +49,7 @@ public class LockVerificationMonitor implements LoadMonitor\n     private final ReadableTransactionState txState;\n     private final NeoStores neoStores;\n \n-    LockVerificationMonitor( ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores )\n+    LockVerificationMonitor(ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores)\n     {\n         this.locks = locks;\n         this.txState = txState;\n@@ -56,124 +57,124 @@ public class LockVerificationMonitor implements LoadMonitor\n     }\n \n     @Override\n-    public void markedAsChanged( Object before )\n+    public void markedAsChanged(Object before)\n     {\n         // This is assuming that all before records coming here are inUse, they should really always be when getting a call to this method\n         assert ((AbstractBaseRecord) before).inUse();\n \n-        if ( before instanceof NodeRecord )\n+        if (before instanceof NodeRecord)\n         {\n-            verifyNodeSufficientlyLocked( (NodeRecord) before );\n-        }\n-        else if ( before instanceof RelationshipRecord )\n+            verifyNodeSufficientlyLocked((NodeRecord) before);\n+        } else if (before instanceof RelationshipRecord)\n         {\n-            verifyRelationshipSufficientlyLocked( (RelationshipRecord) before );\n-        }\n-        else if ( before instanceof RelationshipGroupRecord )\n+            verifyRelationshipSufficientlyLocked((RelationshipRecord) before);\n+        } else if (before instanceof RelationshipGroupRecord)\n         {\n-            verifyRelationshipGroupSufficientlyLocked( (RelationshipGroupRecord) before );\n+            verifyRelationshipGroupSufficientlyLocked((RelationshipGroupRecord) before);\n         }\n     }\n \n-    private void verifyNodeSufficientlyLocked( NodeRecord before )\n+    private void verifyNodeSufficientlyLocked(NodeRecord before)\n     {\n-        assertRecordsEquals( before, neoStores.getNodeStore() );\n+        assertRecordsEquals(before, neoStores.getNodeStore());\n         long id = before.getId();\n-        if ( !txState.nodeIsAddedInThisTx( id ) )\n+        if (!txState.nodeIsAddedInThisTx(id))\n         {\n-            assertLocked( id, NODE, EXCLUSIVE );\n+            assertLocked(id, NODE, EXCLUSIVE);\n         }\n-        if ( txState.nodeIsDeletedInThisTx( id ) )\n+        if (txState.nodeIsDeletedInThisTx(id))\n         {\n-            assertLocked( id, NODE_DELETE, EXCLUSIVE );\n+            assertLocked(id, NODE_DELETE, EXCLUSIVE);\n         }\n     }\n \n-    private void verifyRelationshipSufficientlyLocked( RelationshipRecord before )\n+    private void verifyRelationshipSufficientlyLocked(RelationshipRecord before)\n     {\n-        assertRecordsEquals( before, neoStores.getRelationshipStore() );\n+        assertRecordsEquals(before, neoStores.getRelationshipStore());\n         long id = before.getId();\n-        boolean addedInThisTx = txState.relationshipIsAddedInThisTx( id );\n-        checkState( before.inUse() == !addedInThisTx, \"Relationship[%d] inUse:%b, but txState.relationshipIsAddedInThisTx:%b\", id, before.inUse(),\n-                addedInThisTx );\n-        if ( !addedInThisTx )\n+        boolean addedInThisTx = txState.relationshipIsAddedInThisTx(id);\n+        checkState(before.inUse() == !addedInThisTx, \"Relationship[%d] inUse:%b, but txState.relationshipIsAddedInThisTx:%b\", id, before.inUse(),\n+          addedInThisTx);\n+        if (!addedInThisTx)\n         {\n-            assertLocked( id, RELATIONSHIP, EXCLUSIVE );\n+            assertLocked(id, RELATIONSHIP, EXCLUSIVE);\n         }\n \n         long firstNode = before.getFirstNode();\n         long secondNode = before.getSecondNode();\n         int type = before.getType();\n-        if ( !txState.nodeIsAddedInThisTx( firstNode ) )\n+        if (!txState.nodeIsAddedInThisTx(firstNode))\n         {\n-            NodeRecord first = readRecord( firstNode, neoStores.getNodeStore() );\n-            if ( first.inUse() && first.isDense() )\n+            NodeRecord first = readRecord(firstNode, neoStores.getNodeStore());\n+            if (first.inUse() && first.isDense())\n             {\n-                assertLocked( buildLogicalRelationshipGroupResourceId( firstNode, type ), RELATIONSHIP_GROUP_DELETE, SHARED );\n-                assertLocked( firstNode, NODE_DELETE, SHARED );\n+                assertLocked(buildLogicalRelationshipGroupResourceId(firstNode, type), RELATIONSHIP_GROUP_DELETE, SHARED);\n+                assertLocked(firstNode, NODE_DELETE, SHARED);\n             }\n         }\n \n-        if ( !txState.nodeIsAddedInThisTx( secondNode ) )\n+        if (!txState.nodeIsAddedInThisTx(secondNode))\n         {\n-            NodeRecord second = readRecord( secondNode, neoStores.getNodeStore() );\n-            if ( second.inUse() && second.isDense() )\n+            NodeRecord second = readRecord(secondNode, neoStores.getNodeStore());\n+            if (second.inUse() && second.isDense())\n             {\n-                assertLocked( buildLogicalRelationshipGroupResourceId( secondNode, type ), RELATIONSHIP_GROUP_DELETE, SHARED );\n-                assertLocked( secondNode, NODE_DELETE, SHARED );\n+                assertLocked(buildLogicalRelationshipGroupResourceId(secondNode, type), RELATIONSHIP_GROUP_DELETE, SHARED);\n+                assertLocked(secondNode, NODE_DELETE, SHARED);\n             }\n         }\n     }\n \n-    private void verifyRelationshipGroupSufficientlyLocked( RelationshipGroupRecord before )\n+    private void verifyRelationshipGroupSufficientlyLocked(RelationshipGroupRecord before)\n     {\n-        assertRecordsEquals( before, neoStores.getRelationshipGroupStore() );\n+        assertRecordsEquals(before, neoStores.getRelationshipGroupStore());\n \n         long node = before.getOwningNode();\n-        if ( !txState.nodeIsAddedInThisTx( node ) )\n+        if (!txState.nodeIsAddedInThisTx(node))\n         {\n-            assertLocked( node, NODE, EXCLUSIVE );\n+            assertLocked(node, NODE, EXCLUSIVE);\n         }\n     }\n \n-    private void assertLocked( long id, ResourceType resource, LockType type )\n+    private void assertLocked(long id, ResourceType resource, LockType type)\n     {\n-        assertLocked( locks, id, resource, type );\n+        assertLocked(locks, id, resource, type);\n     }\n \n-    static void assertLocked( ResourceLocker locks, long id, ResourceType resource, LockType type )\n+    static void assertLocked(ResourceLocker locks, long id, ResourceType resource, LockType type)\n     {\n-        if ( locks.activeLocks().noneMatch(\n-                lock -> lock.resourceId() == id && lock.resourceType() == resource && lock.lockType() == type ) )\n+        if (locks.activeLocks().noneMatch(\n+          lock -> lock.resourceId() == id && lock.resourceType() == resource && lock.lockType() == type))\n         {\n-            throw new IllegalStateException( String.format( \"[%s,%s] modified without %s lock.\", resource, id, type ) );\n+            throw new IllegalStateException(String.format(\"[%s,%s] modified without %s lock.\", resource, id, type));\n         }\n     }\n \n-    static <RECORD extends AbstractBaseRecord> void assertRecordsEquals( RECORD before, RecordStore<RECORD> store )\n+    static <RECORD extends AbstractBaseRecord> void assertRecordsEquals(RECORD before, RecordStore<RECORD> store)\n     {\n-        RECORD readRecord = readRecord( before.getId(), store );\n-        checkState( readRecord.equals( before ),\n-                \"Record which got marked as changed is not what the store has, i.e. it was read before lock was acquired%before:  %s%nstore: %s\", before,\n-                readRecord );\n+        RECORD readRecord = readRecord(before.getId(), store);\n+        checkState(readRecord.equals(before),\n+          \"Record which got marked as changed is not what the store has, i.e. it was read before lock was acquired%before:  %s%nstore: %s\", before,\n+          readRecord);\n     }\n \n-    static <RECORD extends AbstractBaseRecord> RECORD readRecord( long id, RecordStore<RECORD> store )\n+    static <RECORD extends AbstractBaseRecord> RECORD readRecord(long id, RecordStore<RECORD> store)\n     {\n-        return store.getRecord( id, store.newRecord(), RecordLoad.ALWAYS, PageCursorTracer.NULL );\n+        return store.getRecord(id, store.newRecord(), RecordLoad.ALWAYS, PageCursorTracer.NULL);\n     }\n \n     public interface Factory\n     {\n-        RecordAccess.LoadMonitor create( ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores );\n+        RecordAccess.LoadMonitor create(ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores);\n \n         static Factory defaultFactory()\n         {\n             boolean test = false;\n             assert test = true;\n-            return test ? ( locks, txState, neoStores ) -> new LockVerificationMonitor( locks, txState, neoStores ) : IGNORE;\n-        };\n+            return test ? (locks, txState, neoStores) -> new LockVerificationMonitor(locks, txState, neoStores) : IGNORE;\n+        }\n+\n+        ;\n \n-        Factory IGNORE = ( locks, txState, neoStores ) -> LoadMonitor.NULL_MONITOR;\n+        Factory IGNORE = (locks, txState, neoStores) -> LoadMonitor.NULL_MONITOR;\n     }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/31/LockVerificationMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/31/LockVerificationMonitor.java\nindex 42ae368cfb4..0ac6f673431 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/31/LockVerificationMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/31/LockVerificationMonitor.java\n@@ -176,4 +176,4 @@ public class LockVerificationMonitor implements LoadMonitor\n \n         Factory IGNORE = ( locks, txState, neoStores ) -> LoadMonitor.NULL_MONITOR;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
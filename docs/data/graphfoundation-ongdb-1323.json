{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1323",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1323/KernelTransactionMonitorScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1323/KernelTransactionMonitorScheduler.java\nindex b0026393d99..4ecb5297521 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1323/KernelTransactionMonitorScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1323/KernelTransactionMonitorScheduler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.concurrent.TimeUnit;\n@@ -28,35 +29,35 @@ import static org.neo4j.scheduler.JobScheduler.Groups.transactionTimeoutMonitor;\n \n public class KernelTransactionMonitorScheduler extends LifecycleAdapter\n {\n-    private final KernelTransactionTimeoutMonitor kernelTransactionTimeoutMonitor;\n-    private final JobScheduler scheduler;\n-    private final long checkIntervalMillis;\n-    private JobScheduler.JobHandle monitorJobHandle;\n+  private final KernelTransactionTimeoutMonitor kernelTransactionTimeoutMonitor;\n+  private final JobScheduler scheduler;\n+  private final long checkIntervalMillis;\n+  private JobScheduler.JobHandle monitorJobHandle;\n \n-    public KernelTransactionMonitorScheduler( KernelTransactionTimeoutMonitor kernelTransactionTimeoutMonitor,\n-            JobScheduler scheduler, long checkIntervalMillis )\n-    {\n-        this.kernelTransactionTimeoutMonitor = kernelTransactionTimeoutMonitor;\n-        this.scheduler = scheduler;\n-        this.checkIntervalMillis = checkIntervalMillis;\n-    }\n+  public KernelTransactionMonitorScheduler(KernelTransactionTimeoutMonitor kernelTransactionTimeoutMonitor,\n+                                           JobScheduler scheduler, long checkIntervalMillis)\n+  {\n+    this.kernelTransactionTimeoutMonitor = kernelTransactionTimeoutMonitor;\n+    this.scheduler = scheduler;\n+    this.checkIntervalMillis = checkIntervalMillis;\n+  }\n \n-    @Override\n-    public void start()\n+  @Override\n+  public void start()\n+  {\n+    if (checkIntervalMillis > 0)\n     {\n-        if ( checkIntervalMillis > 0 )\n-        {\n-            monitorJobHandle = scheduler.scheduleRecurring( transactionTimeoutMonitor, kernelTransactionTimeoutMonitor,\n-                    checkIntervalMillis, TimeUnit.MILLISECONDS );\n-        }\n+      monitorJobHandle = scheduler.scheduleRecurring(transactionTimeoutMonitor, kernelTransactionTimeoutMonitor,\n+          checkIntervalMillis, TimeUnit.MILLISECONDS);\n     }\n+  }\n \n-    @Override\n-    public void stop()\n+  @Override\n+  public void stop()\n+  {\n+    if (monitorJobHandle != null)\n     {\n-        if ( monitorJobHandle != null )\n-        {\n-            monitorJobHandle.cancel( true );\n-        }\n+      monitorJobHandle.cancel(true);\n     }\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1323/KernelTransactionMonitorScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1323/KernelTransactionMonitorScheduler.java\nindex b0026393d99..87006e56f1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1323/KernelTransactionMonitorScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1323/KernelTransactionMonitorScheduler.java\n@@ -48,7 +48,7 @@ public class KernelTransactionMonitorScheduler extends LifecycleAdapter\n         {\n             monitorJobHandle = scheduler.scheduleRecurring( transactionTimeoutMonitor, kernelTransactionTimeoutMonitor,\n                     checkIntervalMillis, TimeUnit.MILLISECONDS );\n-        }\n+    }\n     }\n \n     @Override\n@@ -59,4 +59,4 @@ public class KernelTransactionMonitorScheduler extends LifecycleAdapter\n             monitorJobHandle.cancel( true );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
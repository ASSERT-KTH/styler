{
    "project_name": "neo4j-neo4j",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/24/CommandLockVerification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/24/CommandLockVerification.java\nindex 88d613419a7..83611995730 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/24/CommandLockVerification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/24/CommandLockVerification.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.Collection;\n@@ -45,9 +46,10 @@ import static org.neo4j.lock.ResourceTypes.RELATIONSHIP_GROUP;\n  */\n public interface CommandLockVerification\n {\n-    CommandLockVerification IGNORE = commands -> {};\n+    CommandLockVerification IGNORE = commands -> {\n+    };\n \n-    void verifySufficientlyLocked( Collection<StorageCommand> commands );\n+    void verifySufficientlyLocked(Collection<StorageCommand> commands);\n \n     class RealChecker implements CommandLockVerification\n     {\n@@ -55,104 +57,102 @@ public interface CommandLockVerification\n         private final ReadableTransactionState txState;\n         private final StoreLoader loader;\n \n-        RealChecker( ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores )\n+        RealChecker(ResourceLocker locks, ReadableTransactionState txState, NeoStores neoStores)\n         {\n             this.locks = locks;\n             this.txState = txState;\n-            this.loader = new NeoStoresLoader( neoStores );\n+            this.loader = new NeoStoresLoader(neoStores);\n         }\n \n         @Override\n-        public void verifySufficientlyLocked( Collection<StorageCommand> commands )\n+        public void verifySufficientlyLocked(Collection<StorageCommand> commands)\n         {\n-            commands.forEach( this::verifySufficientlyLocked );\n+            commands.forEach(this::verifySufficientlyLocked);\n         }\n \n-        private void verifySufficientlyLocked( StorageCommand command )\n+        private void verifySufficientlyLocked(StorageCommand command)\n         {\n-            if ( command instanceof Command.NodeCommand )\n+            if (command instanceof Command.NodeCommand)\n             {\n-                verifyNodeSufficientlyLocked( (Command.NodeCommand) command );\n-            }\n-            else if ( command instanceof Command.RelationshipCommand )\n+                verifyNodeSufficientlyLocked((Command.NodeCommand) command);\n+            } else if (command instanceof Command.RelationshipCommand)\n             {\n-                verifyRelationshipSufficientlyLocked( (Command.RelationshipCommand) command );\n-            }\n-            else if ( command instanceof Command.RelationshipGroupCommand )\n+                verifyRelationshipSufficientlyLocked((Command.RelationshipCommand) command);\n+            } else if (command instanceof Command.RelationshipGroupCommand)\n             {\n-                verifyRelationshipGroupSufficientlyLocked( (Command.RelationshipGroupCommand) command );\n+                verifyRelationshipGroupSufficientlyLocked((Command.RelationshipGroupCommand) command);\n             }\n         }\n \n-        private void verifyNodeSufficientlyLocked( Command.NodeCommand command )\n+        private void verifyNodeSufficientlyLocked(Command.NodeCommand command)\n         {\n             long id = command.getKey();\n-            if ( !txState.nodeIsAddedInThisTx( id ) )\n+            if (!txState.nodeIsAddedInThisTx(id))\n             {\n-                assertLocked( id, NODE, EXCLUSIVE, command.after );\n+                assertLocked(id, NODE, EXCLUSIVE, command.after);\n             }\n-            if ( txState.nodeIsDeletedInThisTx( id ) )\n+            if (txState.nodeIsDeletedInThisTx(id))\n             {\n-                assertLocked( id, NODE_RELATIONSHIP_GROUP_DELETE, EXCLUSIVE, command.after );\n+                assertLocked(id, NODE_RELATIONSHIP_GROUP_DELETE, EXCLUSIVE, command.after);\n             }\n         }\n \n-        private void verifyRelationshipSufficientlyLocked( Command.RelationshipCommand command )\n+        private void verifyRelationshipSufficientlyLocked(Command.RelationshipCommand command)\n         {\n-            LockVerificationMonitor.checkRelationship( txState, locks, loader, command.after );\n+            LockVerificationMonitor.checkRelationship(txState, locks, loader, command.after);\n \n-            if ( command.before.inUse() )\n+            if (command.before.inUse())\n             {\n-                assertRecordsEquals( command.before, loader::loadRelationship );\n+                assertRecordsEquals(command.before, loader::loadRelationship);\n             }\n         }\n \n-        private void verifyRelationshipGroupSufficientlyLocked( Command.RelationshipGroupCommand command )\n+        private void verifyRelationshipGroupSufficientlyLocked(Command.RelationshipGroupCommand command)\n         {\n             long node = command.after.getOwningNode();\n-            if ( !txState.nodeIsAddedInThisTx( node ) )\n+            if (!txState.nodeIsAddedInThisTx(node))\n             {\n-                assertLocked( node, RELATIONSHIP_GROUP, EXCLUSIVE, command.after );\n+                assertLocked(node, RELATIONSHIP_GROUP, EXCLUSIVE, command.after);\n             }\n \n             boolean deleted = !command.after.inUse();\n-            if ( deleted )\n+            if (deleted)\n             {\n-                assertLocked( node, NODE_RELATIONSHIP_GROUP_DELETE, EXCLUSIVE, command.after );\n+                assertLocked(node, NODE_RELATIONSHIP_GROUP_DELETE, EXCLUSIVE, command.after);\n             }\n \n-            if ( command.before.inUse() )\n+            if (command.before.inUse())\n             {\n-                assertRecordsEquals( command.before, loader::loadRelationshipGroup );\n+                assertRecordsEquals(command.before, loader::loadRelationshipGroup);\n             }\n         }\n \n-        private void assertLocked( long id, ResourceType resource, LockType type, AbstractBaseRecord record )\n+        private void assertLocked(long id, ResourceType resource, LockType type, AbstractBaseRecord record)\n         {\n-            LockVerificationMonitor.assertLocked( locks, id, resource, type, record );\n+            LockVerificationMonitor.assertLocked(locks, id, resource, type, record);\n         }\n     }\n \n     interface Factory\n     {\n-        Factory IGNORE = ( locker, txState, storageReader ) -> CommandLockVerification.IGNORE;\n+        Factory IGNORE = (locker, txState, storageReader) -> CommandLockVerification.IGNORE;\n \n-        CommandLockVerification create( ResourceLocker locker, ReadableTransactionState txState, NeoStores neoStores );\n+        CommandLockVerification create(ResourceLocker locker, ReadableTransactionState txState, NeoStores neoStores);\n \n         class RealFactory implements Factory\n         {\n             private final Config config;\n \n-            RealFactory( Config config )\n+            RealFactory(Config config)\n             {\n                 this.config = config;\n             }\n \n             @Override\n-            public CommandLockVerification create( ResourceLocker locker, ReadableTransactionState txState, NeoStores neoStores )\n+            public CommandLockVerification create(ResourceLocker locker, ReadableTransactionState txState, NeoStores neoStores)\n             {\n-                boolean enabled = config.get( GraphDatabaseInternalSettings.additional_lock_verification );\n-                return enabled ? new RealChecker( locker, txState, neoStores ) : CommandLockVerification.IGNORE;\n+                boolean enabled = config.get(GraphDatabaseInternalSettings.additional_lock_verification);\n+                return enabled ? new RealChecker(locker, txState, neoStores) : CommandLockVerification.IGNORE;\n             }\n         }\n     }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4049",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4049/LocalSessionPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4049/LocalSessionPool.java\nindex fccf324fc2a..168fcec2c7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4049/LocalSessionPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4049/LocalSessionPool.java\n@@ -17,65 +17,69 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.replication.session;\n \n import java.util.ArrayDeque;\n import java.util.Deque;\n \n-/** Keeps a pool of local sub-sessions, to be used under a single global session. */\n+/**\n+ * Keeps a pool of local sub-sessions, to be used under a single global session.\n+ */\n public class LocalSessionPool\n {\n-    private final Deque<LocalSession> sessionStack = new ArrayDeque<>();\n+  private final Deque<LocalSession> sessionStack = new ArrayDeque<>();\n \n-    private final GlobalSession globalSession;\n-    private long nextLocalSessionId;\n+  private final GlobalSession globalSession;\n+  private long nextLocalSessionId;\n \n-    public LocalSessionPool( GlobalSession globalSession )\n-    {\n-        this.globalSession = globalSession;\n-    }\n+  public LocalSessionPool(GlobalSession globalSession)\n+  {\n+    this.globalSession = globalSession;\n+  }\n \n-    private LocalSession createSession()\n-    {\n-        return new LocalSession( nextLocalSessionId++ );\n-    }\n+  private LocalSession createSession()\n+  {\n+    return new LocalSession(nextLocalSessionId++);\n+  }\n \n-    public GlobalSession getGlobalSession()\n-    {\n-        return globalSession;\n-    }\n+  public GlobalSession getGlobalSession()\n+  {\n+    return globalSession;\n+  }\n \n-    /**\n-     * Acquires a session and returns the next unique operation context\n-     * within that session. The session must be released when the operation\n-     * has been successfully finished. */\n-    public synchronized OperationContext acquireSession()\n-    {\n-        final LocalSession localSession = sessionStack.isEmpty() ? createSession() : sessionStack.pop();\n-        return new OperationContext( globalSession, localSession.nextOperationId(), localSession );\n-    }\n+  /**\n+   * Acquires a session and returns the next unique operation context\n+   * within that session. The session must be released when the operation\n+   * has been successfully finished.\n+   */\n+  public synchronized OperationContext acquireSession()\n+  {\n+    final LocalSession localSession = sessionStack.isEmpty() ? createSession() : sessionStack.pop();\n+    return new OperationContext(globalSession, localSession.nextOperationId(), localSession);\n+  }\n \n-    /**\n-     * Releases a previously acquired session using the operation context\n-     * as a key. An unsuccessful operation should not be released, but it\n-     * will leak a local session.\n-     *\n-     * The reason for not releasing an unsuccessful session is that operation\n-     * handlers might restrict sequence numbers to occur in strict order, and\n-     * thus an operation that it hasn't handled will block any future\n-     * operations under that session.\n-     *\n-     * In general all operations should be retried until they do succeed, or\n-     * the entire session manager should eventually be restarted, thus\n-     * allocating a new global session to operate under.\n-     */\n-    public synchronized void releaseSession( OperationContext operationContext )\n-    {\n-        sessionStack.push( operationContext.localSession() );\n-    }\n+  /**\n+   * Releases a previously acquired session using the operation context\n+   * as a key. An unsuccessful operation should not be released, but it\n+   * will leak a local session.\n+   * <p>\n+   * The reason for not releasing an unsuccessful session is that operation\n+   * handlers might restrict sequence numbers to occur in strict order, and\n+   * thus an operation that it hasn't handled will block any future\n+   * operations under that session.\n+   * <p>\n+   * In general all operations should be retried until they do succeed, or\n+   * the entire session manager should eventually be restarted, thus\n+   * allocating a new global session to operate under.\n+   */\n+  public synchronized void releaseSession(OperationContext operationContext)\n+  {\n+    sessionStack.push(operationContext.localSession());\n+  }\n \n-    public synchronized long openSessionCount()\n-    {\n-        return nextLocalSessionId - sessionStack.size();\n-    }\n+  public synchronized long openSessionCount()\n+  {\n+    return nextLocalSessionId - sessionStack.size();\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4049/LocalSessionPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4049/LocalSessionPool.java\nindex fccf324fc2a..137973a391c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4049/LocalSessionPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4049/LocalSessionPool.java\n@@ -78,4 +78,4 @@ public class LocalSessionPool\n     {\n         return nextLocalSessionId - sessionStack.size();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
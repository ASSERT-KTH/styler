{
    "project_name": "neo4j-neo4j",
    "error_id": "1191",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1191/FreelistNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1191/FreelistNode.java\nindex 8bfd8ec9bb8..97cbf151ddc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1191/FreelistNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1191/FreelistNode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -33,7 +34,7 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.put6BLong;\n  * [HEADER         ][RELEASED PAGE IDS...                         ]\n  * [NODE TYPE][NEXT][GENERATION,ID][GENERATION,ID][...............]\n  * </pre>\n- *\n+ * <p>\n  * A free-list node is a page in the same {@link org.neo4j.io.pagecache.PagedFile mapped page cache file}\n  * as a {@link TreeNode}. They distinguish themselves from one another by a \"node type\" one-byte header.\n  */\n@@ -47,56 +48,56 @@ class FreelistNode\n \n     private final int maxEntries;\n \n-    FreelistNode( int pageSize )\n+    FreelistNode(int pageSize)\n     {\n         this.maxEntries = (pageSize - HEADER_LENGTH) / ENTRY_SIZE;\n     }\n \n-    static void initialize( PageCursor cursor )\n+    static void initialize(PageCursor cursor)\n     {\n-        cursor.putByte( TreeNode.BYTE_POS_NODE_TYPE, TreeNode.NODE_TYPE_FREE_LIST_NODE );\n+        cursor.putByte(TreeNode.BYTE_POS_NODE_TYPE, TreeNode.NODE_TYPE_FREE_LIST_NODE);\n     }\n \n-    void write( PageCursor cursor, long unstableGeneration, long pageId, int pos )\n+    void write(PageCursor cursor, long unstableGeneration, long pageId, int pos)\n     {\n-        if ( pageId == NO_PAGE_ID )\n+        if (pageId == NO_PAGE_ID)\n         {\n-            throw new IllegalArgumentException( \"Tried to write pageId \" + pageId + \" which means null\" );\n+            throw new IllegalArgumentException(\"Tried to write pageId \" + pageId + \" which means null\");\n         }\n-        assertPos( pos );\n-        GenerationSafePointer.assertGenerationOnWrite( unstableGeneration );\n-        cursor.setOffset( entryOffset( pos ) );\n-        cursor.putInt( (int) unstableGeneration );\n-        put6BLong( cursor, pageId );\n+        assertPos(pos);\n+        GenerationSafePointer.assertGenerationOnWrite(unstableGeneration);\n+        cursor.setOffset(entryOffset(pos));\n+        cursor.putInt((int) unstableGeneration);\n+        put6BLong(cursor, pageId);\n     }\n \n-    private void assertPos( int pos )\n+    private void assertPos(int pos)\n     {\n-        if ( pos >= maxEntries )\n+        if (pos >= maxEntries)\n         {\n-            throw new IllegalArgumentException( \"Pos \" + pos + \" too big, max entries \" + maxEntries );\n+            throw new IllegalArgumentException(\"Pos \" + pos + \" too big, max entries \" + maxEntries);\n         }\n-        if ( pos < 0 )\n+        if (pos < 0)\n         {\n-            throw new IllegalArgumentException( \"Negative pos \" + pos );\n+            throw new IllegalArgumentException(\"Negative pos \" + pos);\n         }\n     }\n \n-    long read( PageCursor cursor, long stableGeneration, int pos )\n+    long read(PageCursor cursor, long stableGeneration, int pos)\n     {\n-        return read( cursor, stableGeneration, pos, GBPTreeGenerationTarget.NO_GENERATION_TARGET );\n+        return read(cursor, stableGeneration, pos, GBPTreeGenerationTarget.NO_GENERATION_TARGET);\n     }\n \n-    long read( PageCursor cursor, long stableGeneration, int pos, GBPTreeGenerationTarget target )\n+    long read(PageCursor cursor, long stableGeneration, int pos, GBPTreeGenerationTarget target)\n     {\n-        assertPos( pos );\n-        cursor.setOffset( entryOffset( pos ) );\n-        long generation = getUnsignedInt( cursor );\n-        target.accept( generation );\n-        return generation <= stableGeneration ? get6BLong( cursor ) : NO_PAGE_ID;\n+        assertPos(pos);\n+        cursor.setOffset(entryOffset(pos));\n+        long generation = getUnsignedInt(cursor);\n+        target.accept(generation);\n+        return generation <= stableGeneration ? get6BLong(cursor) : NO_PAGE_ID;\n     }\n \n-    private static int entryOffset( int pos )\n+    private static int entryOffset(int pos)\n     {\n         return HEADER_LENGTH + pos * ENTRY_SIZE;\n     }\n@@ -106,15 +107,15 @@ class FreelistNode\n         return maxEntries;\n     }\n \n-    static void setNext( PageCursor cursor, long nextFreelistPage )\n+    static void setNext(PageCursor cursor, long nextFreelistPage)\n     {\n-        cursor.setOffset( BYTE_POS_NEXT );\n-        put6BLong( cursor, nextFreelistPage );\n+        cursor.setOffset(BYTE_POS_NEXT);\n+        put6BLong(cursor, nextFreelistPage);\n     }\n \n-    static long next( PageCursor cursor )\n+    static long next(PageCursor cursor)\n     {\n-        cursor.setOffset( BYTE_POS_NEXT );\n-        return get6BLong( cursor );\n+        cursor.setOffset(BYTE_POS_NEXT);\n+        return get6BLong(cursor);\n     }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1191/FreelistNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1191/FreelistNode.java\nindex 8bfd8ec9bb8..2af4a67c5e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1191/FreelistNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1191/FreelistNode.java\n@@ -117,4 +117,4 @@ class FreelistNode\n         cursor.setOffset( BYTE_POS_NEXT );\n         return get6BLong( cursor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
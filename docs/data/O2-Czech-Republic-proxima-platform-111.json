{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "111",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class GCloudBlobPathTest implements Serializable {\n\n  Repository repo = Repository.ofTest(ConfigFactory.load(\"test-reference.conf\").resolve());\n  EntityDescriptor entity = repo.getEntity(\"gateway\");\n\n  @Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/111/GCloudBlobPathTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/111/GCloudBlobPathTest.java\nindex 6a665d32c0d..d838bd06df3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/111/GCloudBlobPathTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/111/GCloudBlobPathTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.gcloud.storage;\n \n import com.typesafe.config.ConfigFactory;\n@@ -26,7 +27,8 @@ import org.junit.Test;\n \n public class GCloudBlobPathTest implements Serializable {\n \n-  Repository repo = Repository.ofTest(ConfigFactory.load(\"test-reference.conf\").resolve());\n+  Repository repo =\n+      Repository.ofTest(ConfigFactory.load(\"test-reference.conf\").resolve());\n   EntityDescriptor entity = repo.getEntity(\"gateway\");\n \n   @Test\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/111/GCloudBlobPathTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/111/GCloudBlobPathTest.java\nindex 6a665d32c0d..f87c0226b43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/111/GCloudBlobPathTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/111/GCloudBlobPathTest.java\n@@ -37,12 +37,14 @@ public class GCloudBlobPathTest implements Serializable {\n                 TestUtils.createTestFamily(entity, URI.create(\"gs://bucket\"))));\n     GCloudBlobPath path =\n         new GCloudBlobPath(fs, null) {\n-          @Override\n+\n+  @Override\n           public String getBlobName() {\n             return \"name\";\n           }\n         };\n-    GCloudBlobPath path2 = TestUtils.assertSerializable(path);\n+\n+GCloudBlobPath path2 = TestUtils.assertSerializable(path);\n     TestUtils.assertHashCodeAndEquals(path, path2);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 28, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 30, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 28, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 26, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/111/GCloudBlobPathTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/111/GCloudBlobPathTest.java\nindex 6a665d32c0d..0ac92f466da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/111/GCloudBlobPathTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/111/GCloudBlobPathTest.java\n@@ -24,6 +24,7 @@ import java.io.Serializable;\n import java.net.URI;\n import org.junit.Test;\n \n+\n public class GCloudBlobPathTest implements Serializable {\n \n   Repository repo = Repository.ofTest(ConfigFactory.load(\"test-reference.conf\").resolve());\n@@ -31,18 +32,15 @@ public class GCloudBlobPathTest implements Serializable {\n \n   @Test\n   public void testSerializable() throws IOException, ClassNotFoundException {\n-    GCloudFileSystem fs =\n-        new GCloudFileSystem(\n-            new GCloudStorageAccessor(\n-                TestUtils.createTestFamily(entity, URI.create(\"gs://bucket\"))));\n-    GCloudBlobPath path =\n-        new GCloudBlobPath(fs, null) {\n-          @Override\n-          public String getBlobName() {\n-            return \"name\";\n-          }\n-        };\n+    GCloudFileSystem fs = new GCloudFileSystem(new GCloudStorageAccessor(TestUtils.createTestFamily(entity, URI.create(\"gs://bucket\"))));\n+    GCloudBlobPath path = new GCloudBlobPath(fs, null) {\n+\n+                            @Override\n+                            public String getBlobName() {\n+                              return \"name\";\n+                            }\n+                          };\n     GCloudBlobPath path2 = TestUtils.assertSerializable(path);\n     TestUtils.assertHashCodeAndEquals(path, path2);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
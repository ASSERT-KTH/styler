{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2210",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "132",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "488",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "491",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "496",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "516",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "583",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "593",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "704",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "774",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "801",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "801",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "801",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "812",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "818",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "833",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "833",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "845",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "845",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "854",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "854",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "864",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "870",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "870",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "880",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "880",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "892",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "892",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "917",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "917",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "930",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "930",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1024",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1038",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1038",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2210/ImportTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2210/ImportTool.java\nindex 4525663f6ae..846b2c8d5f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2210/ImportTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2210/ImportTool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling;\n \n import java.io.BufferedOutputStream;\n@@ -113,941 +114,935 @@ import static org.neo4j.unsafe.impl.batchimport.input.csv.DataFactories.defaultF\n  */\n public class ImportTool\n {\n-    private static final String INPUT_FILES_DESCRIPTION =\n-            \"Multiple files will be logically seen as one big file \" +\n-            \"from the perspective of the importer. \" +\n-            \"The first line must contain the header. \" +\n-            \"Multiple data sources like these can be specified in one import, \" +\n-            \"where each data source has its own header. \" +\n-            \"Note that file groups must be enclosed in quotation marks. \" +\n-            \"Each file can be a regular expression and will then include all matching files. \" +\n-            \"The file matching is done with number awareness such that e.g. files:\" +\n-            \"'File1Part_001.csv', 'File12Part_003' will be ordered in that order for a pattern like: 'File.*'\";\n-\n-    private static final String UNLIMITED = \"true\";\n-\n-    enum Options\n+  private static final String INPUT_FILES_DESCRIPTION =\n+      \"Multiple files will be logically seen as one big file \" +\n+          \"from the perspective of the importer. \" +\n+          \"The first line must contain the header. \" +\n+          \"Multiple data sources like these can be specified in one import, \" +\n+          \"where each data source has its own header. \" +\n+          \"Note that file groups must be enclosed in quotation marks. \" +\n+          \"Each file can be a regular expression and will then include all matching files. \" +\n+          \"The file matching is done with number awareness such that e.g. files:\" +\n+          \"'File1Part_001.csv', 'File12Part_003' will be ordered in that order for a pattern like: 'File.*'\";\n+\n+  private static final String UNLIMITED = \"true\";\n+\n+  enum Options\n+  {\n+    FILE(\"f\", null,\n+        \"<file name>\",\n+        \"File containing all arguments, used as an alternative to supplying all arguments on the command line directly.\"\n+            + \"Each argument can be on a separate line or multiple arguments per line separated by space.\"\n+            + \"Arguments containing spaces needs to be quoted.\"\n+            + \"Supplying other arguments in addition to this file argument is not supported.\"),\n+    STORE_DIR(\"into\", null,\n+        \"<store-dir>\",\n+        \"Database directory to import into. \" + \"Must not contain existing database.\"),\n+    DB_NAME(\"database\", null,\n+        \"<database-name>\",\n+        \"Database name to import into. \" + \"Must not contain existing database.\", true),\n+    NODE_DATA(\"nodes\", null,\n+        \"[:Label1:Label2] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" + MULTI_FILE_DELIMITER + \"...\\\"\",\n+        \"Node CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n+        true, true),\n+    RELATIONSHIP_DATA(\"relationships\", null,\n+        \"[:RELATIONSHIP_TYPE] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" +\n+            MULTI_FILE_DELIMITER + \"...\\\"\",\n+        \"Relationship CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n+        true, true),\n+    DELIMITER(\"delimiter\", null,\n+        \"<delimiter-character>\",\n+        \"Delimiter character, or 'TAB', between values in CSV data. The default option is `\" + COMMAS.delimiter() + \"`.\"),\n+    ARRAY_DELIMITER(\"array-delimiter\", null,\n+        \"<array-delimiter-character>\",\n+        \"Delimiter character, or 'TAB', between array elements within a value in CSV data. \" +\n+            \"The default option is `\" + COMMAS.arrayDelimiter() + \"`.\"),\n+    QUOTE(\"quote\", null,\n+        \"<quotation-character>\",\n+        \"Character to treat as quotation character for values in CSV data. \"\n+            + \"The default option is `\" + COMMAS.quotationCharacter() + \"`. \"\n+            + \"Quotes inside quotes escaped like `\\\"\\\"\\\"Go away\\\"\\\", he said.\\\"` and \"\n+            + \"`\\\"\\\\\\\"Go away\\\\\\\", he said.\\\"` are supported. \"\n+            + \"If you have set \\\"`'`\\\" to be used as the quotation character, \"\n+            + \"you could write the previous example like this instead: \" + \"`'\\\"Go away\\\", he said.'`\"),\n+    MULTILINE_FIELDS(\"multiline-fields\", org.neo4j.csv.reader.Configuration.DEFAULT.multilineFields(),\n+        \"<true/false>\",\n+        \"Whether or not fields from input source can span multiple lines, i.e. contain newline characters.\"),\n+\n+    TRIM_STRINGS(\"trim-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.trimStrings(),\n+        \"<true/false>\",\n+        \"Whether or not strings should be trimmed for whitespaces.\"),\n+\n+    INPUT_ENCODING(\"input-encoding\", null,\n+        \"<character set>\",\n+        \"Character set that input data is encoded in. Provided value must be one out of the available \"\n+            + \"character sets in the JVM, as provided by Charset#availableCharsets(). \"\n+            + \"If no input encoding is provided, the default character set of the JVM will be used.\",\n+        true),\n+    IGNORE_EMPTY_STRINGS(\"ignore-empty-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.emptyQuotedStringsAsNull(),\n+        \"<true/false>\",\n+        \"Whether or not empty string fields, i.e. \\\"\\\" from input source are ignored, i.e. treated as null.\"),\n+    ID_TYPE(\"id-type\", IdType.STRING,\n+        \"<id-type>\",\n+        \"One out of \" + Arrays.toString(IdType.values())\n+            + \" and specifies how ids in node/relationship \"\n+            + \"input files are treated.\\n\"\n+            + IdType.STRING + \": arbitrary strings for identifying nodes.\\n\"\n+            + IdType.INTEGER + \": arbitrary integer values for identifying nodes.\\n\"\n+            + IdType.ACTUAL + \": (advanced) actual node ids. The default option is `\" + IdType.STRING +\n+            \"`.\", true),\n+    PROCESSORS(\"processors\", null,\n+        \"<max processor count>\",\n+        \"(advanced) Max number of processors used by the importer. Defaults to the number of \"\n+            + \"available processors reported by the JVM\"\n+            + availableProcessorsHint()\n+            + \". There is a certain amount of minimum threads needed so for that reason there \"\n+            + \"is no lower bound for this value. For optimal performance this value shouldn't be \"\n+            + \"greater than the number of available processors.\"),\n+    STACKTRACE(\"stacktrace\", false,\n+        \"<true/false>\",\n+        \"Enable printing of error stack traces.\"),\n+    BAD_TOLERANCE(\"bad-tolerance\", 1000,\n+        \"<max number of bad entries, or \" + UNLIMITED + \" for unlimited>\",\n+        \"Number of bad entries before the import is considered failed. This tolerance threshold is \"\n+            + \"about relationships refering to missing nodes. Format errors in input data are \"\n+            + \"still treated as errors\"),\n+    SKIP_BAD_ENTRIES_LOGGING(\"skip-bad-entries-logging\", Boolean.FALSE, \"<true/false>\",\n+        \"Whether or not to skip logging bad entries detected during import.\"),\n+    SKIP_BAD_RELATIONSHIPS(\"skip-bad-relationships\", Boolean.TRUE,\n+        \"<true/false>\",\n+        \"Whether or not to skip importing relationships that refers to missing node ids, i.e. either \"\n+            + \"start or end node id/group referring to node that wasn't specified by the \"\n+            + \"node input data. \"\n+            + \"Skipped nodes will be logged\"\n+            + \", containing at most number of entites specified by \" + BAD_TOLERANCE.key() + \", unless \"\n+            + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \" option.\"),\n+    SKIP_DUPLICATE_NODES(\"skip-duplicate-nodes\", Boolean.FALSE,\n+        \"<true/false>\",\n+        \"Whether or not to skip importing nodes that have the same id/group. In the event of multiple \"\n+            + \"nodes within the same group having the same id, the first encountered will be imported \"\n+            + \"whereas consecutive such nodes will be skipped. \"\n+            + \"Skipped nodes will be logged\"\n+            + \", containing at most number of entities specified by \" + BAD_TOLERANCE.key() + \", unless \"\n+            + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\"),\n+    IGNORE_EXTRA_COLUMNS(\"ignore-extra-columns\", Boolean.FALSE,\n+        \"<true/false>\",\n+        \"Whether or not to ignore extra columns in the data not specified by the header. \"\n+            + \"Skipped columns will be logged, containing at most number of entities specified by \"\n+            + BAD_TOLERANCE.key() + \", unless \"\n+            + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\"),\n+    DATABASE_CONFIG(\"db-config\", null, \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\",\n+        \"(advanced) Option is deprecated and replaced by 'additional-config'. \"),\n+    ADDITIONAL_CONFIG(\"additional-config\", null,\n+        \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\",\n+        \"(advanced) File specifying database-specific configuration. For more information consult \"\n+            + \"manual about available configuration options for a neo4j configuration file. \"\n+            + \"Only configuration affecting store at time of creation will be read. \"\n+            + \"Examples of supported config are:\\n\"\n+            + GraphDatabaseSettings.dense_node_threshold.name() + \"\\n\"\n+            + GraphDatabaseSettings.string_block_size.name() + \"\\n\"\n+            + GraphDatabaseSettings.array_block_size.name(), true),\n+    LEGACY_STYLE_QUOTING(\"legacy-style-quoting\", Configuration.DEFAULT_LEGACY_STYLE_QUOTING,\n+        \"<true/false>\",\n+        \"Whether or not backslash-escaped quote e.g. \\\\\\\" is interpreted as inner quote.\"),\n+    READ_BUFFER_SIZE(\"read-buffer-size\", org.neo4j.csv.reader.Configuration.DEFAULT.bufferSize(),\n+        \"<bytes, e.g. 10k, 4M>\",\n+        \"Size of each buffer for reading input data. It has to at least be large enough to hold the \" +\n+            \"biggest single value in the input data.\"),\n+    MAX_MEMORY(\"max-memory\", null,\n+        \"<max memory that importer can use>\",\n+        \"(advanced) Maximum memory that importer can use for various data structures and caching \" +\n+            \"to improve performance. If left as unspecified (null) it is set to \" + DEFAULT_MAX_MEMORY_PERCENT +\n+            \"% of (free memory on machine - max JVM memory). \" +\n+            \"Values can be plain numbers, like 10000000 or e.g. 20G for 20 gigabyte, or even e.g. 70%.\"),\n+    CACHE_ON_HEAP(\"cache-on-heap\",\n+        DEFAULT.allowCacheAllocationOnHeap(),\n+        \"Whether or not to allow allocating memory for the cache on heap\",\n+        \"(advanced) Whether or not to allow allocating memory for the cache on heap. \" +\n+            \"If 'false' then caches will still be allocated off-heap, but the additional free memory \" +\n+            \"inside the JVM will not be allocated for the caches. This to be able to have better control \" +\n+            \"over the heap memory\"),\n+    HIGH_IO(\"high-io\", null, \"Assume a high-throughput storage subsystem\",\n+        \"(advanced) Ignore environment-based heuristics, and assume that the target storage subsystem can \" +\n+            \"support parallel IO with high throughput.\"),\n+    DETAILED_PROGRESS(\"detailed-progress\", false, \"true/false\", \"Use the old detailed 'spectrum' progress printing\");\n+\n+    private final String key;\n+    private final Object defaultValue;\n+    private final String usage;\n+    private final String description;\n+    private final boolean keyAndUsageGoTogether;\n+    private final boolean supported;\n+\n+    Options(String key, Object defaultValue, String usage, String description)\n     {\n-        FILE( \"f\", null,\n-                \"<file name>\",\n-                \"File containing all arguments, used as an alternative to supplying all arguments on the command line directly.\"\n-                        + \"Each argument can be on a separate line or multiple arguments per line separated by space.\"\n-                        + \"Arguments containing spaces needs to be quoted.\"\n-                        + \"Supplying other arguments in addition to this file argument is not supported.\" ),\n-        STORE_DIR( \"into\", null,\n-                \"<store-dir>\",\n-                \"Database directory to import into. \" + \"Must not contain existing database.\" ),\n-        DB_NAME( \"database\", null,\n-                \"<database-name>\",\n-                \"Database name to import into. \" + \"Must not contain existing database.\", true ),\n-        NODE_DATA( \"nodes\", null,\n-                \"[:Label1:Label2] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" + MULTI_FILE_DELIMITER + \"...\\\"\",\n-                \"Node CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n-                        true, true ),\n-        RELATIONSHIP_DATA( \"relationships\", null,\n-                \"[:RELATIONSHIP_TYPE] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" +\n-                MULTI_FILE_DELIMITER + \"...\\\"\",\n-                \"Relationship CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n-                        true, true ),\n-        DELIMITER( \"delimiter\", null,\n-                \"<delimiter-character>\",\n-                \"Delimiter character, or 'TAB', between values in CSV data. The default option is `\" + COMMAS.delimiter() + \"`.\" ),\n-        ARRAY_DELIMITER( \"array-delimiter\", null,\n-                \"<array-delimiter-character>\",\n-                \"Delimiter character, or 'TAB', between array elements within a value in CSV data. \" +\n-                        \"The default option is `\" + COMMAS.arrayDelimiter() + \"`.\" ),\n-        QUOTE( \"quote\", null,\n-                \"<quotation-character>\",\n-                \"Character to treat as quotation character for values in CSV data. \"\n-                        + \"The default option is `\" + COMMAS.quotationCharacter() + \"`. \"\n-                        + \"Quotes inside quotes escaped like `\\\"\\\"\\\"Go away\\\"\\\", he said.\\\"` and \"\n-                        + \"`\\\"\\\\\\\"Go away\\\\\\\", he said.\\\"` are supported. \"\n-                        + \"If you have set \\\"`'`\\\" to be used as the quotation character, \"\n-                        + \"you could write the previous example like this instead: \" + \"`'\\\"Go away\\\", he said.'`\" ),\n-        MULTILINE_FIELDS( \"multiline-fields\", org.neo4j.csv.reader.Configuration.DEFAULT.multilineFields(),\n-                \"<true/false>\",\n-                \"Whether or not fields from input source can span multiple lines, i.e. contain newline characters.\" ),\n-\n-        TRIM_STRINGS( \"trim-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.trimStrings(),\n-                \"<true/false>\",\n-                \"Whether or not strings should be trimmed for whitespaces.\" ),\n-\n-        INPUT_ENCODING( \"input-encoding\", null,\n-                \"<character set>\",\n-                \"Character set that input data is encoded in. Provided value must be one out of the available \"\n-                        + \"character sets in the JVM, as provided by Charset#availableCharsets(). \"\n-                        + \"If no input encoding is provided, the default character set of the JVM will be used.\",\n-                true ),\n-        IGNORE_EMPTY_STRINGS( \"ignore-empty-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.emptyQuotedStringsAsNull(),\n-                \"<true/false>\",\n-                \"Whether or not empty string fields, i.e. \\\"\\\" from input source are ignored, i.e. treated as null.\" ),\n-        ID_TYPE( \"id-type\", IdType.STRING,\n-                \"<id-type>\",\n-                \"One out of \" + Arrays.toString( IdType.values() )\n-                        + \" and specifies how ids in node/relationship \"\n-                        + \"input files are treated.\\n\"\n-                        + IdType.STRING + \": arbitrary strings for identifying nodes.\\n\"\n-                        + IdType.INTEGER + \": arbitrary integer values for identifying nodes.\\n\"\n-                        + IdType.ACTUAL + \": (advanced) actual node ids. The default option is `\" + IdType.STRING  +\n-                        \"`.\", true ),\n-        PROCESSORS( \"processors\", null,\n-                \"<max processor count>\",\n-                \"(advanced) Max number of processors used by the importer. Defaults to the number of \"\n-                        + \"available processors reported by the JVM\"\n-                        + availableProcessorsHint()\n-                        + \". There is a certain amount of minimum threads needed so for that reason there \"\n-                        + \"is no lower bound for this value. For optimal performance this value shouldn't be \"\n-                        + \"greater than the number of available processors.\" ),\n-        STACKTRACE( \"stacktrace\", false,\n-                \"<true/false>\",\n-                \"Enable printing of error stack traces.\" ),\n-        BAD_TOLERANCE( \"bad-tolerance\", 1000,\n-                \"<max number of bad entries, or \" + UNLIMITED + \" for unlimited>\",\n-                \"Number of bad entries before the import is considered failed. This tolerance threshold is \"\n-                        + \"about relationships refering to missing nodes. Format errors in input data are \"\n-                        + \"still treated as errors\" ),\n-        SKIP_BAD_ENTRIES_LOGGING( \"skip-bad-entries-logging\", Boolean.FALSE, \"<true/false>\",\n-                \"Whether or not to skip logging bad entries detected during import.\" ),\n-        SKIP_BAD_RELATIONSHIPS( \"skip-bad-relationships\", Boolean.TRUE,\n-                \"<true/false>\",\n-                \"Whether or not to skip importing relationships that refers to missing node ids, i.e. either \"\n-                        + \"start or end node id/group referring to node that wasn't specified by the \"\n-                        + \"node input data. \"\n-                        + \"Skipped nodes will be logged\"\n-                        + \", containing at most number of entites specified by \" + BAD_TOLERANCE.key() + \", unless \"\n-                        + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \" option.\" ),\n-        SKIP_DUPLICATE_NODES( \"skip-duplicate-nodes\", Boolean.FALSE,\n-                \"<true/false>\",\n-                \"Whether or not to skip importing nodes that have the same id/group. In the event of multiple \"\n-                        + \"nodes within the same group having the same id, the first encountered will be imported \"\n-                        + \"whereas consecutive such nodes will be skipped. \"\n-                        + \"Skipped nodes will be logged\"\n-                        + \", containing at most number of entities specified by \" + BAD_TOLERANCE.key() + \", unless \"\n-                        + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\" ),\n-        IGNORE_EXTRA_COLUMNS( \"ignore-extra-columns\", Boolean.FALSE,\n-                \"<true/false>\",\n-                \"Whether or not to ignore extra columns in the data not specified by the header. \"\n-                        + \"Skipped columns will be logged, containing at most number of entities specified by \"\n-                        + BAD_TOLERANCE.key() + \", unless \"\n-                        + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\" ),\n-        DATABASE_CONFIG( \"db-config\", null, \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\",\n-                \"(advanced) Option is deprecated and replaced by 'additional-config'. \" ),\n-        ADDITIONAL_CONFIG( \"additional-config\", null,\n-                \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\",\n-                \"(advanced) File specifying database-specific configuration. For more information consult \"\n-                        + \"manual about available configuration options for a neo4j configuration file. \"\n-                        + \"Only configuration affecting store at time of creation will be read. \"\n-                        + \"Examples of supported config are:\\n\"\n-                        + GraphDatabaseSettings.dense_node_threshold.name() + \"\\n\"\n-                        + GraphDatabaseSettings.string_block_size.name() + \"\\n\"\n-                        + GraphDatabaseSettings.array_block_size.name(), true ),\n-        LEGACY_STYLE_QUOTING( \"legacy-style-quoting\", Configuration.DEFAULT_LEGACY_STYLE_QUOTING,\n-                \"<true/false>\",\n-                \"Whether or not backslash-escaped quote e.g. \\\\\\\" is interpreted as inner quote.\" ),\n-        READ_BUFFER_SIZE( \"read-buffer-size\", org.neo4j.csv.reader.Configuration.DEFAULT.bufferSize(),\n-                \"<bytes, e.g. 10k, 4M>\",\n-                \"Size of each buffer for reading input data. It has to at least be large enough to hold the \" +\n-                \"biggest single value in the input data.\" ),\n-        MAX_MEMORY( \"max-memory\", null,\n-                \"<max memory that importer can use>\",\n-                \"(advanced) Maximum memory that importer can use for various data structures and caching \" +\n-                \"to improve performance. If left as unspecified (null) it is set to \" + DEFAULT_MAX_MEMORY_PERCENT +\n-                \"% of (free memory on machine - max JVM memory). \" +\n-                \"Values can be plain numbers, like 10000000 or e.g. 20G for 20 gigabyte, or even e.g. 70%.\" ),\n-        CACHE_ON_HEAP( \"cache-on-heap\",\n-                DEFAULT.allowCacheAllocationOnHeap(),\n-                \"Whether or not to allow allocating memory for the cache on heap\",\n-                \"(advanced) Whether or not to allow allocating memory for the cache on heap. \" +\n-                \"If 'false' then caches will still be allocated off-heap, but the additional free memory \" +\n-                \"inside the JVM will not be allocated for the caches. This to be able to have better control \" +\n-                \"over the heap memory\" ),\n-        HIGH_IO( \"high-io\", null, \"Assume a high-throughput storage subsystem\",\n-                \"(advanced) Ignore environment-based heuristics, and assume that the target storage subsystem can \" +\n-                \"support parallel IO with high throughput.\" ),\n-        DETAILED_PROGRESS( \"detailed-progress\", false, \"true/false\", \"Use the old detailed 'spectrum' progress printing\" );\n-\n-        private final String key;\n-        private final Object defaultValue;\n-        private final String usage;\n-        private final String description;\n-        private final boolean keyAndUsageGoTogether;\n-        private final boolean supported;\n-\n-        Options( String key, Object defaultValue, String usage, String description )\n-        {\n-            this( key, defaultValue, usage, description, false, false );\n-        }\n-\n-        Options( String key, Object defaultValue, String usage, String description, boolean supported )\n-        {\n-            this( key, defaultValue, usage, description, supported, false );\n-        }\n-\n-        Options( String key, Object defaultValue, String usage, String description, boolean supported, boolean keyAndUsageGoTogether )\n-        {\n-            this.key = key;\n-            this.defaultValue = defaultValue;\n-            this.usage = usage;\n-            this.description = description;\n-            this.supported = supported;\n-            this.keyAndUsageGoTogether = keyAndUsageGoTogether;\n-        }\n-\n-        String key()\n-        {\n-            return key;\n-        }\n-\n-        String argument()\n-        {\n-            return \"--\" + key();\n-        }\n-\n-        void printUsage( PrintStream out )\n-        {\n-            out.println( argument() + spaceInBetweenArgumentAndUsage() + usage );\n-            for ( String line : Args.splitLongLine( descriptionWithDefaultValue().replace( \"`\", \"\" ), 80 ) )\n-            {\n-                out.println( \"\\t\" + line );\n-            }\n-        }\n-\n-        private String spaceInBetweenArgumentAndUsage()\n-        {\n-            return keyAndUsageGoTogether ? \"\" : \" \";\n-        }\n-\n-        String descriptionWithDefaultValue()\n-        {\n-            String result = description;\n-            if ( defaultValue != null )\n-            {\n-                if ( !result.endsWith( \".\" ) )\n-                {\n-                    result += \".\";\n-                }\n-                result += \" Default value: \" + defaultValue;\n-            }\n-            return result;\n-        }\n-\n-        String manPageEntry()\n-        {\n-            String filteredDescription = descriptionWithDefaultValue().replace( availableProcessorsHint(), \"\" );\n-            String usageString = (usage.length() > 0) ? spaceInBetweenArgumentAndUsage() + usage : \"\";\n-            return \"*\" + argument() + usageString + \"*::\\n\" + filteredDescription + \"\\n\\n\";\n-        }\n-\n-        String manualEntry()\n-        {\n-            return \"[[import-tool-option-\" + key() + \"]]\\n\" + manPageEntry() + \"//^\\n\\n\";\n-        }\n-\n-        Object defaultValue()\n-        {\n-            return defaultValue;\n-        }\n-\n-        private static String availableProcessorsHint()\n-        {\n-            return \" (in your case \" + Runtime.getRuntime().availableProcessors() + \")\";\n-        }\n-\n-        public boolean isSupportedOption()\n-        {\n-            return this.supported;\n-        }\n+      this(key, defaultValue, usage, description, false, false);\n     }\n \n-    /**\n-     * Delimiter used between files in an input group.\n-     */\n-    static final String MULTI_FILE_DELIMITER = \",\";\n-\n-    private ImportTool()\n+    Options(String key, Object defaultValue, String usage, String description, boolean supported)\n     {\n+      this(key, defaultValue, usage, description, supported, false);\n     }\n \n-    /**\n-     * Runs the import tool given the supplied arguments.\n-     *\n-     * @param incomingArguments arguments for specifying input and configuration for the import.\n-     */\n-    public static void main( String[] incomingArguments ) throws IOException\n+    Options(String key, Object defaultValue, String usage, String description, boolean supported, boolean keyAndUsageGoTogether)\n     {\n-        main( incomingArguments, false );\n+      this.key = key;\n+      this.defaultValue = defaultValue;\n+      this.usage = usage;\n+      this.description = description;\n+      this.supported = supported;\n+      this.keyAndUsageGoTogether = keyAndUsageGoTogether;\n     }\n \n-    /**\n-     * Runs the import tool given the supplied arguments.\n-     *\n-     * @param incomingArguments arguments for specifying input and configuration for the import.\n-     * @param defaultSettingsSuitableForTests default configuration geared towards unit/integration\n-     * test environments, for example lower default buffer sizes.\n-     */\n-    public static void main( String[] incomingArguments, boolean defaultSettingsSuitableForTests ) throws IOException\n+    String key()\n     {\n-        System.err.println( format( \"WARNING: neo4j-import is deprecated and support for it will be removed in a future%n\" +\n-                \"version of Neo4j; please use neo4j-admin import instead.\" ) );\n-\n-        PrintStream out = System.out;\n-        PrintStream err = System.err;\n-        Args args = Args.parse( incomingArguments );\n-\n-        if ( ArrayUtil.isEmpty( incomingArguments ) || asksForUsage( args ) )\n-        {\n-            printUsage( out );\n-            return;\n-        }\n-\n-        File storeDir;\n-        Collection<Option<File[]>> nodesFiles;\n-        Collection<Option<File[]>> relationshipsFiles;\n-        boolean enableStacktrace;\n-        Number processors;\n-        Input input;\n-        long badTolerance;\n-        Charset inputEncoding;\n-        boolean skipBadRelationships;\n-        boolean skipDuplicateNodes;\n-        boolean ignoreExtraColumns;\n-        boolean skipBadEntriesLogging;\n-        Config dbConfig;\n-        OutputStream badOutput = null;\n-        IdType idType;\n-        org.neo4j.unsafe.impl.batchimport.Configuration configuration;\n-        File logsDir;\n-        File badFile = null;\n-        Long maxMemory;\n-        Boolean defaultHighIO;\n-        InputStream in;\n-\n-        boolean success = false;\n-        try ( FileSystemAbstraction fs = new DefaultFileSystemAbstraction() )\n-        {\n-            args = useArgumentsFromFileArgumentIfPresent( args );\n-\n-            storeDir = args.interpretOption( Options.STORE_DIR.key(), Converters.mandatory(),\n-                    Converters.toFile(), Validators.DIRECTORY_IS_WRITABLE );\n-            Config config = Config.defaults( GraphDatabaseSettings.neo4j_home, storeDir.getAbsolutePath() );\n-            logsDir = config.get( GraphDatabaseSettings.logs_directory );\n-            fs.mkdirs( logsDir );\n-\n-            skipBadEntriesLogging = args.getBoolean( Options.SKIP_BAD_ENTRIES_LOGGING.key(),\n-                    (Boolean) Options.SKIP_BAD_ENTRIES_LOGGING.defaultValue(), false);\n-            if ( !skipBadEntriesLogging )\n-            {\n-                badFile = new File( storeDir, BAD_FILE_NAME );\n-                badOutput = new BufferedOutputStream( fs.openAsOutputStream( badFile, false ) );\n-            }\n-            nodesFiles = extractInputFiles( args, Options.NODE_DATA.key(), err );\n-            relationshipsFiles = extractInputFiles( args, Options.RELATIONSHIP_DATA.key(), err );\n-            String maxMemoryString = args.get( Options.MAX_MEMORY.key(), null );\n-            maxMemory = parseMaxMemory( maxMemoryString );\n-\n-            validateInputFiles( nodesFiles, relationshipsFiles );\n-            enableStacktrace = args.getBoolean( Options.STACKTRACE.key(), Boolean.FALSE, Boolean.TRUE );\n-            processors = args.getNumber( Options.PROCESSORS.key(), null );\n-            idType = args.interpretOption( Options.ID_TYPE.key(),\n-                    withDefault( (IdType)Options.ID_TYPE.defaultValue() ), TO_ID_TYPE );\n-            badTolerance = parseNumberOrUnlimited( args, Options.BAD_TOLERANCE );\n-            inputEncoding = Charset.forName( args.get( Options.INPUT_ENCODING.key(), defaultCharset().name() ) );\n-\n-            skipBadRelationships = args.getBoolean( Options.SKIP_BAD_RELATIONSHIPS.key(),\n-                    (Boolean)Options.SKIP_BAD_RELATIONSHIPS.defaultValue(), true );\n-            skipDuplicateNodes = args.getBoolean( Options.SKIP_DUPLICATE_NODES.key(),\n-                    (Boolean)Options.SKIP_DUPLICATE_NODES.defaultValue(), true );\n-            ignoreExtraColumns = args.getBoolean( Options.IGNORE_EXTRA_COLUMNS.key(),\n-                    (Boolean)Options.IGNORE_EXTRA_COLUMNS.defaultValue(), true );\n-            defaultHighIO = args.getBoolean( Options.HIGH_IO.key(),\n-                    (Boolean)Options.HIGH_IO.defaultValue(), true );\n-\n-            Collector badCollector = getBadCollector( badTolerance, skipBadRelationships, skipDuplicateNodes, ignoreExtraColumns,\n-                    skipBadEntriesLogging, badOutput );\n-\n-            dbConfig = loadDbConfig( args.interpretOption( Options.DATABASE_CONFIG.key(), Converters.optional(),\n-                    Converters.toFile(), Validators.REGEX_FILE_EXISTS ) );\n-            dbConfig.augment( loadDbConfig( args.interpretOption( Options.ADDITIONAL_CONFIG.key(), Converters.optional(),\n-                    Converters.toFile(), Validators.REGEX_FILE_EXISTS ) ) );\n-            boolean allowCacheOnHeap = args.getBoolean( Options.CACHE_ON_HEAP.key(),\n-                    (Boolean) Options.CACHE_ON_HEAP.defaultValue() );\n-            configuration = importConfiguration(\n-                    processors, defaultSettingsSuitableForTests, dbConfig, maxMemory, storeDir,\n-                    allowCacheOnHeap, defaultHighIO );\n-            input = new CsvInput( nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader(),\n-                    relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader(),\n-                    idType, csvConfiguration( args, defaultSettingsSuitableForTests ), badCollector );\n-            in = defaultSettingsSuitableForTests ? new ByteArrayInputStream( EMPTY_BYTE_ARRAY ) : System.in;\n-            boolean detailedPrinting = args.getBoolean( Options.DETAILED_PROGRESS.key(), (Boolean) Options.DETAILED_PROGRESS.defaultValue() );\n-\n-            doImport( out, err, in, storeDir, logsDir, badFile, fs, nodesFiles, relationshipsFiles,\n-                    enableStacktrace, input, dbConfig, badOutput, configuration, detailedPrinting );\n-\n-            success = true;\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            throw andPrintError( \"Input error\", e, false, err );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw andPrintError( \"File error\", e, false, err );\n-        }\n-        finally\n-        {\n-            if ( !success && badOutput != null )\n-            {\n-                badOutput.close();\n-            }\n-        }\n+      return key;\n     }\n \n-    public static Args useArgumentsFromFileArgumentIfPresent( Args args ) throws IOException\n+    String argument()\n     {\n-        String fileArgument = args.get( Options.FILE.key(), null );\n-        if ( fileArgument != null )\n-        {\n-            // Are there any other arguments supplied, in addition to this -f argument?\n-            if ( args.asMap().size() > 1 )\n-            {\n-                throw new IllegalArgumentException(\n-                        \"Supplying arguments in addition to \" + Options.FILE.argument() + \" isn't supported.\" );\n-            }\n-\n-            // Read the arguments from the -f file and use those instead\n-            args = Args.parse( parseFileArgumentList( new File( fileArgument ) ) );\n-        }\n-        return args;\n+      return \"--\" + key();\n     }\n \n-    public static String[] parseFileArgumentList( File file ) throws IOException\n+    void printUsage(PrintStream out)\n     {\n-        List<String> arguments = new ArrayList<>();\n-        readTextFile( file, line -> arguments.addAll( asList( tokenizeStringWithQuotes( line, true, true ) ) ) );\n-        return arguments.toArray( new String[arguments.size()] );\n+      out.println(argument() + spaceInBetweenArgumentAndUsage() + usage);\n+      for (String line : Args.splitLongLine(descriptionWithDefaultValue().replace(\"`\", \"\"), 80))\n+      {\n+        out.println(\"\\t\" + line);\n+      }\n     }\n \n-    static Long parseMaxMemory( String maxMemoryString )\n+    private String spaceInBetweenArgumentAndUsage()\n     {\n-        if ( maxMemoryString != null )\n-        {\n-            maxMemoryString = maxMemoryString.trim();\n-            if ( maxMemoryString.endsWith( \"%\" ) )\n-            {\n-                int percent = Integer.parseInt( maxMemoryString.substring( 0, maxMemoryString.length() - 1 ) );\n-                long result = calculateMaxMemoryFromPercent( percent );\n-                if ( !canDetectFreeMemory() )\n-                {\n-                    System.err.println( \"WARNING: amount of free memory couldn't be detected so defaults to \" +\n-                            bytes( result ) + \". For optimal performance instead explicitly specify amount of \" +\n-                            \"memory that importer is allowed to use using \" + Options.MAX_MEMORY.argument() );\n-                }\n-                return result;\n-            }\n-            return Settings.parseLongWithUnit( maxMemoryString );\n-        }\n-        return null;\n+      return keyAndUsageGoTogether ? \"\" : \" \";\n     }\n \n-    public static void doImport( PrintStream out, PrintStream err, InputStream in, File storeDir, File logsDir, File badFile,\n-                                 FileSystemAbstraction fs, Collection<Option<File[]>> nodesFiles,\n-                                 Collection<Option<File[]>> relationshipsFiles, boolean enableStacktrace, Input input,\n-                                 Config dbConfig, OutputStream badOutput,\n-                                 org.neo4j.unsafe.impl.batchimport.Configuration configuration, boolean detailedProgress ) throws IOException\n+    String descriptionWithDefaultValue()\n     {\n-        boolean success;\n-        LifeSupport life = new LifeSupport();\n-\n-        dbConfig.augment( logs_directory, logsDir.getCanonicalPath() );\n-        File internalLogFile = dbConfig.get( store_internal_log_path );\n-        LogService logService = life.add( StoreLogService.withInternalLog( internalLogFile ).build( fs ) );\n-        final CentralJobScheduler jobScheduler = life.add( new CentralJobScheduler() );\n-\n-        life.start();\n-        ExecutionMonitor executionMonitor = detailedProgress\n-                        ? new SpectrumExecutionMonitor( 2, TimeUnit.SECONDS, out, SpectrumExecutionMonitor.DEFAULT_WIDTH )\n-                        : ExecutionMonitors.defaultVisible( in, jobScheduler );\n-        BatchImporter importer = BatchImporterFactory.withHighestPriority().instantiate( storeDir,\n-                fs,\n-                null, // no external page cache\n-                configuration,\n-                logService, executionMonitor,\n-                EMPTY,\n-                dbConfig,\n-                RecordFormatSelector.selectForConfig( dbConfig, logService.getInternalLogProvider() ),\n-                new PrintingImportLogicMonitor( out, err ) );\n-        printOverview( storeDir, nodesFiles, relationshipsFiles, configuration, out );\n-        success = false;\n-        try\n-        {\n-            importer.doImport( input );\n-            success = true;\n-        }\n-        catch ( Exception e )\n-        {\n-            throw andPrintError( \"Import error\", e, enableStacktrace, err );\n-        }\n-        finally\n+      String result = description;\n+      if (defaultValue != null)\n+      {\n+        if (!result.endsWith(\".\"))\n         {\n-            Collector collector = input.badCollector();\n-            long numberOfBadEntries = collector.badEntries();\n-            collector.close();\n-            IOUtils.closeAll( badOutput );\n-\n-            if ( badFile != null )\n-            {\n-                if ( numberOfBadEntries > 0 )\n-                {\n-                    System.out.println( \"There were bad entries which were skipped and logged into \" +\n-                            badFile.getAbsolutePath() );\n-                }\n-            }\n-\n-            life.shutdown();\n-\n-            if ( !success )\n-            {\n-                err.println( \"WARNING Import failed. The store files in \" + storeDir.getAbsolutePath() +\n-                        \" are left as they are, although they are likely in an unusable state. \" +\n-                        \"Starting a database on these store files will likely fail or observe inconsistent records so \" +\n-                        \"start at your own risk or delete the store manually\" );\n-            }\n+          result += \".\";\n         }\n+        result += \" Default value: \" + defaultValue;\n+      }\n+      return result;\n     }\n \n-    public static Collection<Option<File[]>> extractInputFiles( Args args, String key, PrintStream err )\n+    String manPageEntry()\n     {\n-        return args\n-                .interpretOptionsWithMetadata( key, Converters.optional(),\n-                        Converters.toFiles( MULTI_FILE_DELIMITER, Converters.regexFiles( true ) ), filesExist(\n-                                err ),\n-                        Validators.atLeast( \"--\" + key, 1 ) );\n+      String filteredDescription = descriptionWithDefaultValue().replace(availableProcessorsHint(), \"\");\n+      String usageString = (usage.length() > 0) ? spaceInBetweenArgumentAndUsage() + usage : \"\";\n+      return \"*\" + argument() + usageString + \"*::\\n\" + filteredDescription + \"\\n\\n\";\n     }\n \n-    private static Validator<File[]> filesExist( PrintStream err )\n+    String manualEntry()\n     {\n-        return files ->\n-        {\n-            for ( File file : files )\n-            {\n-                if ( file.getName().startsWith( \":\" ) )\n-                {\n-                    err.println( \"It looks like you're trying to specify default label or relationship type (\" +\n-                                      file.getName() + \"). Please put such directly on the key, f.ex. \" +\n-                                      Options.NODE_DATA.argument() + \":MyLabel\" );\n-                }\n-                Validators.REGEX_FILE_EXISTS.validate( file );\n-            }\n-        };\n+      return \"[[import-tool-option-\" + key() + \"]]\\n\" + manPageEntry() + \"//^\\n\\n\";\n     }\n \n-    private static Collector getBadCollector( long badTolerance, boolean skipBadRelationships,\n-            boolean skipDuplicateNodes, boolean ignoreExtraColumns, boolean skipBadEntriesLogging,\n-            OutputStream badOutput )\n+    Object defaultValue()\n     {\n-        int collect = collect( skipBadRelationships, skipDuplicateNodes, ignoreExtraColumns );\n-        return skipBadEntriesLogging ? silentBadCollector( badTolerance, collect ) : badCollector( badOutput, badTolerance, collect );\n+      return defaultValue;\n     }\n \n-    private static long parseNumberOrUnlimited( Args args, Options option )\n+    private static String availableProcessorsHint()\n     {\n-        String value = args.get( option.key(), option.defaultValue().toString() );\n-        return UNLIMITED.equals( value ) ? BadCollector.UNLIMITED_TOLERANCE : Long.parseLong( value );\n+      return \" (in your case \" + Runtime.getRuntime().availableProcessors() + \")\";\n     }\n \n-    private static Config loadDbConfig( File file ) throws IOException\n+    public boolean isSupportedOption()\n+    {\n+      return this.supported;\n+    }\n+  }\n+\n+  /**\n+   * Delimiter used between files in an input group.\n+   */\n+  static final String MULTI_FILE_DELIMITER = \",\";\n+\n+  private ImportTool()\n+  {\n+  }\n+\n+  /**\n+   * Runs the import tool given the supplied arguments.\n+   *\n+   * @param incomingArguments arguments for specifying input and configuration for the import.\n+   */\n+  public static void main(String[] incomingArguments) throws IOException\n+  {\n+    main(incomingArguments, false);\n+  }\n+\n+  /**\n+   * Runs the import tool given the supplied arguments.\n+   *\n+   * @param incomingArguments               arguments for specifying input and configuration for the import.\n+   * @param defaultSettingsSuitableForTests default configuration geared towards unit/integration\n+   *                                        test environments, for example lower default buffer sizes.\n+   */\n+  public static void main(String[] incomingArguments, boolean defaultSettingsSuitableForTests) throws IOException\n+  {\n+    System.err.println(format(\"WARNING: neo4j-import is deprecated and support for it will be removed in a future%n\" +\n+        \"version of Neo4j; please use neo4j-admin import instead.\"));\n+\n+    PrintStream out = System.out;\n+    PrintStream err = System.err;\n+    Args args = Args.parse(incomingArguments);\n+\n+    if (ArrayUtil.isEmpty(incomingArguments) || asksForUsage(args))\n     {\n-        return file != null && file.exists() ? Config.defaults( MapUtil.load( file ) ) : Config.defaults();\n+      printUsage(out);\n+      return;\n     }\n \n-    static void printOverview( File storeDir, Collection<Option<File[]>> nodesFiles,\n-            Collection<Option<File[]>> relationshipsFiles,\n-            org.neo4j.unsafe.impl.batchimport.Configuration configuration, PrintStream out )\n+    File storeDir;\n+    Collection<Option<File[]>> nodesFiles;\n+    Collection<Option<File[]>> relationshipsFiles;\n+    boolean enableStacktrace;\n+    Number processors;\n+    Input input;\n+    long badTolerance;\n+    Charset inputEncoding;\n+    boolean skipBadRelationships;\n+    boolean skipDuplicateNodes;\n+    boolean ignoreExtraColumns;\n+    boolean skipBadEntriesLogging;\n+    Config dbConfig;\n+    OutputStream badOutput = null;\n+    IdType idType;\n+    org.neo4j.unsafe.impl.batchimport.Configuration configuration;\n+    File logsDir;\n+    File badFile = null;\n+    Long maxMemory;\n+    Boolean defaultHighIO;\n+    InputStream in;\n+\n+    boolean success = false;\n+    try (FileSystemAbstraction fs = new DefaultFileSystemAbstraction())\n     {\n-        out.println( \"Neo4j version: \" + Version.getNeo4jVersion() );\n-        out.println( \"Importing the contents of these files into \" + storeDir + \":\" );\n-        printInputFiles( \"Nodes\", nodesFiles, out );\n-        printInputFiles( \"Relationships\", relationshipsFiles, out );\n-        out.println();\n-        out.println( \"Available resources:\" );\n-        printIndented( \"Total machine memory: \" + bytes( OsBeanUtil.getTotalPhysicalMemory() ), out );\n-        printIndented( \"Free machine memory: \" + bytes( OsBeanUtil.getFreePhysicalMemory() ), out );\n-        printIndented( \"Max heap memory : \" + bytes( Runtime.getRuntime().maxMemory() ), out );\n-        printIndented( \"Processors: \" + configuration.maxNumberOfProcessors(), out );\n-        printIndented( \"Configured max memory: \" + bytes( configuration.maxMemoryUsage() ), out );\n-        printIndented( \"High-IO: \" + configuration.highIO(), out );\n-        out.println();\n+      args = useArgumentsFromFileArgumentIfPresent(args);\n+\n+      storeDir = args.interpretOption(Options.STORE_DIR.key(), Converters.mandatory(),\n+          Converters.toFile(), Validators.DIRECTORY_IS_WRITABLE);\n+      Config config = Config.defaults(GraphDatabaseSettings.neo4j_home, storeDir.getAbsolutePath());\n+      logsDir = config.get(GraphDatabaseSettings.logs_directory);\n+      fs.mkdirs(logsDir);\n+\n+      skipBadEntriesLogging = args.getBoolean(Options.SKIP_BAD_ENTRIES_LOGGING.key(),\n+          (Boolean) Options.SKIP_BAD_ENTRIES_LOGGING.defaultValue(), false);\n+      if (!skipBadEntriesLogging)\n+      {\n+        badFile = new File(storeDir, BAD_FILE_NAME);\n+        badOutput = new BufferedOutputStream(fs.openAsOutputStream(badFile, false));\n+      }\n+      nodesFiles = extractInputFiles(args, Options.NODE_DATA.key(), err);\n+      relationshipsFiles = extractInputFiles(args, Options.RELATIONSHIP_DATA.key(), err);\n+      String maxMemoryString = args.get(Options.MAX_MEMORY.key(), null);\n+      maxMemory = parseMaxMemory(maxMemoryString);\n+\n+      validateInputFiles(nodesFiles, relationshipsFiles);\n+      enableStacktrace = args.getBoolean(Options.STACKTRACE.key(), Boolean.FALSE, Boolean.TRUE);\n+      processors = args.getNumber(Options.PROCESSORS.key(), null);\n+      idType = args.interpretOption(Options.ID_TYPE.key(),\n+          withDefault((IdType) Options.ID_TYPE.defaultValue()), TO_ID_TYPE);\n+      badTolerance = parseNumberOrUnlimited(args, Options.BAD_TOLERANCE);\n+      inputEncoding = Charset.forName(args.get(Options.INPUT_ENCODING.key(), defaultCharset().name()));\n+\n+      skipBadRelationships = args.getBoolean(Options.SKIP_BAD_RELATIONSHIPS.key(),\n+          (Boolean) Options.SKIP_BAD_RELATIONSHIPS.defaultValue(), true);\n+      skipDuplicateNodes = args.getBoolean(Options.SKIP_DUPLICATE_NODES.key(),\n+          (Boolean) Options.SKIP_DUPLICATE_NODES.defaultValue(), true);\n+      ignoreExtraColumns = args.getBoolean(Options.IGNORE_EXTRA_COLUMNS.key(),\n+          (Boolean) Options.IGNORE_EXTRA_COLUMNS.defaultValue(), true);\n+      defaultHighIO = args.getBoolean(Options.HIGH_IO.key(),\n+          (Boolean) Options.HIGH_IO.defaultValue(), true);\n+\n+      Collector badCollector = getBadCollector(badTolerance, skipBadRelationships, skipDuplicateNodes, ignoreExtraColumns,\n+          skipBadEntriesLogging, badOutput);\n+\n+      dbConfig = loadDbConfig(args.interpretOption(Options.DATABASE_CONFIG.key(), Converters.optional(),\n+          Converters.toFile(), Validators.REGEX_FILE_EXISTS));\n+      dbConfig.augment(loadDbConfig(args.interpretOption(Options.ADDITIONAL_CONFIG.key(), Converters.optional(),\n+          Converters.toFile(), Validators.REGEX_FILE_EXISTS)));\n+      boolean allowCacheOnHeap = args.getBoolean(Options.CACHE_ON_HEAP.key(),\n+          (Boolean) Options.CACHE_ON_HEAP.defaultValue());\n+      configuration = importConfiguration(\n+          processors, defaultSettingsSuitableForTests, dbConfig, maxMemory, storeDir,\n+          allowCacheOnHeap, defaultHighIO);\n+      input = new CsvInput(nodeData(inputEncoding, nodesFiles), defaultFormatNodeFileHeader(),\n+          relationshipData(inputEncoding, relationshipsFiles), defaultFormatRelationshipFileHeader(),\n+          idType, csvConfiguration(args, defaultSettingsSuitableForTests), badCollector);\n+      in = defaultSettingsSuitableForTests ? new ByteArrayInputStream(EMPTY_BYTE_ARRAY) : System.in;\n+      boolean detailedPrinting = args.getBoolean(Options.DETAILED_PROGRESS.key(), (Boolean) Options.DETAILED_PROGRESS.defaultValue());\n+\n+      doImport(out, err, in, storeDir, logsDir, badFile, fs, nodesFiles, relationshipsFiles,\n+          enableStacktrace, input, dbConfig, badOutput, configuration, detailedPrinting);\n+\n+      success = true;\n+    } catch (IllegalArgumentException e)\n+    {\n+      throw andPrintError(\"Input error\", e, false, err);\n+    } catch (IOException e)\n+    {\n+      throw andPrintError(\"File error\", e, false, err);\n+    } finally\n+    {\n+      if (!success && badOutput != null)\n+      {\n+        badOutput.close();\n+      }\n     }\n+  }\n \n-    private static void printInputFiles( String name, Collection<Option<File[]>> files, PrintStream out )\n+  public static Args useArgumentsFromFileArgumentIfPresent(Args args) throws IOException\n+  {\n+    String fileArgument = args.get(Options.FILE.key(), null);\n+    if (fileArgument != null)\n     {\n-        if ( files.isEmpty() )\n+      // Are there any other arguments supplied, in addition to this -f argument?\n+      if (args.asMap().size() > 1)\n+      {\n+        throw new IllegalArgumentException(\n+            \"Supplying arguments in addition to \" + Options.FILE.argument() + \" isn't supported.\");\n+      }\n+\n+      // Read the arguments from the -f file and use those instead\n+      args = Args.parse(parseFileArgumentList(new File(fileArgument)));\n+    }\n+    return args;\n+  }\n+\n+  public static String[] parseFileArgumentList(File file) throws IOException\n+  {\n+    List<String> arguments = new ArrayList<>();\n+    readTextFile(file, line -> arguments.addAll(asList(tokenizeStringWithQuotes(line, true, true))));\n+    return arguments.toArray(new String[arguments.size()]);\n+  }\n+\n+  static Long parseMaxMemory(String maxMemoryString)\n+  {\n+    if (maxMemoryString != null)\n+    {\n+      maxMemoryString = maxMemoryString.trim();\n+      if (maxMemoryString.endsWith(\"%\"))\n+      {\n+        int percent = Integer.parseInt(maxMemoryString.substring(0, maxMemoryString.length() - 1));\n+        long result = calculateMaxMemoryFromPercent(percent);\n+        if (!canDetectFreeMemory())\n         {\n-            return;\n+          System.err.println(\"WARNING: amount of free memory couldn't be detected so defaults to \" +\n+              bytes(result) + \". For optimal performance instead explicitly specify amount of \" +\n+              \"memory that importer is allowed to use using \" + Options.MAX_MEMORY.argument());\n         }\n-\n-        out.println( name + \":\" );\n-        int i = 0;\n-        for ( Option<File[]> group : files )\n+        return result;\n+      }\n+      return Settings.parseLongWithUnit(maxMemoryString);\n+    }\n+    return null;\n+  }\n+\n+  public static void doImport(PrintStream out, PrintStream err, InputStream in, File storeDir, File logsDir, File badFile,\n+                              FileSystemAbstraction fs, Collection<Option<File[]>> nodesFiles,\n+                              Collection<Option<File[]>> relationshipsFiles, boolean enableStacktrace, Input input,\n+                              Config dbConfig, OutputStream badOutput,\n+                              org.neo4j.unsafe.impl.batchimport.Configuration configuration, boolean detailedProgress) throws IOException\n+  {\n+    boolean success;\n+    LifeSupport life = new LifeSupport();\n+\n+    dbConfig.augment(logs_directory, logsDir.getCanonicalPath());\n+    File internalLogFile = dbConfig.get(store_internal_log_path);\n+    LogService logService = life.add(StoreLogService.withInternalLog(internalLogFile).build(fs));\n+    final CentralJobScheduler jobScheduler = life.add(new CentralJobScheduler());\n+\n+    life.start();\n+    ExecutionMonitor executionMonitor = detailedProgress\n+        ? new SpectrumExecutionMonitor(2, TimeUnit.SECONDS, out, SpectrumExecutionMonitor.DEFAULT_WIDTH)\n+        : ExecutionMonitors.defaultVisible(in, jobScheduler);\n+    BatchImporter importer = BatchImporterFactory.withHighestPriority().instantiate(storeDir,\n+        fs,\n+        null, // no external page cache\n+        configuration,\n+        logService, executionMonitor,\n+        EMPTY,\n+        dbConfig,\n+        RecordFormatSelector.selectForConfig(dbConfig, logService.getInternalLogProvider()),\n+        new PrintingImportLogicMonitor(out, err));\n+    printOverview(storeDir, nodesFiles, relationshipsFiles, configuration, out);\n+    success = false;\n+    try\n+    {\n+      importer.doImport(input);\n+      success = true;\n+    } catch (Exception e)\n+    {\n+      throw andPrintError(\"Import error\", e, enableStacktrace, err);\n+    } finally\n+    {\n+      Collector collector = input.badCollector();\n+      long numberOfBadEntries = collector.badEntries();\n+      collector.close();\n+      IOUtils.closeAll(badOutput);\n+\n+      if (badFile != null)\n+      {\n+        if (numberOfBadEntries > 0)\n         {\n-            if ( i++ > 0 )\n-            {\n-                out.println();\n-            }\n-            if ( group.metadata() != null )\n-            {\n-                printIndented( \":\" + group.metadata(), out );\n-            }\n-            for ( File file : group.value() )\n-            {\n-                printIndented( file, out );\n-            }\n+          System.out.println(\"There were bad entries which were skipped and logged into \" +\n+              badFile.getAbsolutePath());\n         }\n-    }\n+      }\n \n-    private static void printIndented( Object value, PrintStream out )\n-    {\n-        out.println( \"  \" + value );\n-    }\n+      life.shutdown();\n \n-    public static void validateInputFiles( Collection<Option<File[]>> nodesFiles,\n-            Collection<Option<File[]>> relationshipsFiles )\n+      if (!success)\n+      {\n+        err.println(\"WARNING Import failed. The store files in \" + storeDir.getAbsolutePath() +\n+            \" are left as they are, although they are likely in an unusable state. \" +\n+            \"Starting a database on these store files will likely fail or observe inconsistent records so \" +\n+            \"start at your own risk or delete the store manually\");\n+      }\n+    }\n+  }\n+\n+  public static Collection<Option<File[]>> extractInputFiles(Args args, String key, PrintStream err)\n+  {\n+    return args\n+        .interpretOptionsWithMetadata(key, Converters.optional(),\n+            Converters.toFiles(MULTI_FILE_DELIMITER, Converters.regexFiles(true)), filesExist(\n+                err),\n+            Validators.atLeast(\"--\" + key, 1));\n+  }\n+\n+  private static Validator<File[]> filesExist(PrintStream err)\n+  {\n+    return files ->\n     {\n-        if ( nodesFiles.isEmpty() )\n+      for (File file : files)\n+      {\n+        if (file.getName().startsWith(\":\"))\n         {\n-            if ( relationshipsFiles.isEmpty() )\n-            {\n-                throw new IllegalArgumentException( \"No input specified, nothing to import\" );\n-            }\n-            throw new IllegalArgumentException( \"No node input specified, cannot import relationships without nodes\" );\n+          err.println(\"It looks like you're trying to specify default label or relationship type (\" +\n+              file.getName() + \"). Please put such directly on the key, f.ex. \" +\n+              Options.NODE_DATA.argument() + \":MyLabel\");\n         }\n+        Validators.REGEX_FILE_EXISTS.validate(file);\n+      }\n+    };\n+  }\n+\n+  private static Collector getBadCollector(long badTolerance, boolean skipBadRelationships,\n+                                           boolean skipDuplicateNodes, boolean ignoreExtraColumns, boolean skipBadEntriesLogging,\n+                                           OutputStream badOutput)\n+  {\n+    int collect = collect(skipBadRelationships, skipDuplicateNodes, ignoreExtraColumns);\n+    return skipBadEntriesLogging ? silentBadCollector(badTolerance, collect) : badCollector(badOutput, badTolerance, collect);\n+  }\n+\n+  private static long parseNumberOrUnlimited(Args args, Options option)\n+  {\n+    String value = args.get(option.key(), option.defaultValue().toString());\n+    return UNLIMITED.equals(value) ? BadCollector.UNLIMITED_TOLERANCE : Long.parseLong(value);\n+  }\n+\n+  private static Config loadDbConfig(File file) throws IOException\n+  {\n+    return file != null && file.exists() ? Config.defaults(MapUtil.load(file)) : Config.defaults();\n+  }\n+\n+  static void printOverview(File storeDir, Collection<Option<File[]>> nodesFiles,\n+                            Collection<Option<File[]>> relationshipsFiles,\n+                            org.neo4j.unsafe.impl.batchimport.Configuration configuration, PrintStream out)\n+  {\n+    out.println(\"Neo4j version: \" + Version.getNeo4jVersion());\n+    out.println(\"Importing the contents of these files into \" + storeDir + \":\");\n+    printInputFiles(\"Nodes\", nodesFiles, out);\n+    printInputFiles(\"Relationships\", relationshipsFiles, out);\n+    out.println();\n+    out.println(\"Available resources:\");\n+    printIndented(\"Total machine memory: \" + bytes(OsBeanUtil.getTotalPhysicalMemory()), out);\n+    printIndented(\"Free machine memory: \" + bytes(OsBeanUtil.getFreePhysicalMemory()), out);\n+    printIndented(\"Max heap memory : \" + bytes(Runtime.getRuntime().maxMemory()), out);\n+    printIndented(\"Processors: \" + configuration.maxNumberOfProcessors(), out);\n+    printIndented(\"Configured max memory: \" + bytes(configuration.maxMemoryUsage()), out);\n+    printIndented(\"High-IO: \" + configuration.highIO(), out);\n+    out.println();\n+  }\n+\n+  private static void printInputFiles(String name, Collection<Option<File[]>> files, PrintStream out)\n+  {\n+    if (files.isEmpty())\n+    {\n+      return;\n     }\n \n-    public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration(\n-            Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, File storeDir, Boolean defaultHighIO )\n+    out.println(name + \":\");\n+    int i = 0;\n+    for (Option<File[]> group : files)\n     {\n-        return importConfiguration(\n-                processors, defaultSettingsSuitableForTests, dbConfig, null, storeDir,\n-                DEFAULT.allowCacheAllocationOnHeap(), defaultHighIO );\n+      if (i++ > 0)\n+      {\n+        out.println();\n+      }\n+      if (group.metadata() != null)\n+      {\n+        printIndented(\":\" + group.metadata(), out);\n+      }\n+      for (File file : group.value())\n+      {\n+        printIndented(file, out);\n+      }\n     }\n+  }\n \n-    public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration(\n-            Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, Long maxMemory, File storeDir,\n-            boolean allowCacheOnHeap, Boolean defaultHighIO )\n+  private static void printIndented(Object value, PrintStream out)\n+  {\n+    out.println(\"  \" + value);\n+  }\n+\n+  public static void validateInputFiles(Collection<Option<File[]>> nodesFiles,\n+                                        Collection<Option<File[]>> relationshipsFiles)\n+  {\n+    if (nodesFiles.isEmpty())\n     {\n-        return new org.neo4j.unsafe.impl.batchimport.Configuration()\n-        {\n-            @Override\n-            public long pageCacheMemory()\n-            {\n-                return defaultSettingsSuitableForTests ? mebiBytes( 8 ) : DEFAULT.pageCacheMemory();\n-            }\n-\n-            @Override\n-            public int maxNumberOfProcessors()\n-            {\n-                return processors != null ? processors.intValue() : DEFAULT.maxNumberOfProcessors();\n-            }\n-\n-            @Override\n-            public int denseNodeThreshold()\n-            {\n-                return dbConfig.get( GraphDatabaseSettings.dense_node_threshold );\n-            }\n-\n-            @Override\n-            public long maxMemoryUsage()\n-            {\n-                return maxMemory != null ? maxMemory : DEFAULT.maxMemoryUsage();\n-            }\n-\n-            @Override\n-            public boolean highIO()\n-            {\n-                return defaultHighIO != null ? defaultHighIO : FileUtils.highIODevice( storeDir.toPath(), false );\n-            }\n-\n-            @Override\n-            public boolean allowCacheAllocationOnHeap()\n-            {\n-                return allowCacheOnHeap;\n-            }\n-        };\n+      if (relationshipsFiles.isEmpty())\n+      {\n+        throw new IllegalArgumentException(\"No input specified, nothing to import\");\n+      }\n+      throw new IllegalArgumentException(\"No node input specified, cannot import relationships without nodes\");\n     }\n-\n-    private static String manualReference( ManualPage page, Anchor anchor )\n+  }\n+\n+  public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration(\n+      Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, File storeDir, Boolean defaultHighIO)\n+  {\n+    return importConfiguration(\n+        processors, defaultSettingsSuitableForTests, dbConfig, null, storeDir,\n+        DEFAULT.allowCacheAllocationOnHeap(), defaultHighIO);\n+  }\n+\n+  public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration(\n+      Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, Long maxMemory, File storeDir,\n+      boolean allowCacheOnHeap, Boolean defaultHighIO)\n+  {\n+    return new org.neo4j.unsafe.impl.batchimport.Configuration()\n     {\n-        // Docs are versioned major.minor-suffix, so drop the patch version.\n-        String[] versionParts = Version.getNeo4jVersion().split(\"-\");\n-        versionParts[0] = versionParts[0].substring(0, 3);\n-        String docsVersion = String.join(\"-\", versionParts);\n-\n-        return \" https://neo4j.com/docs/operations-manual/\" + docsVersion + \"/\" +\n-               page.getReference( anchor );\n+      @Override\n+      public long pageCacheMemory()\n+      {\n+        return defaultSettingsSuitableForTests ? mebiBytes(8) : DEFAULT.pageCacheMemory();\n+      }\n+\n+      @Override\n+      public int maxNumberOfProcessors()\n+      {\n+        return processors != null ? processors.intValue() : DEFAULT.maxNumberOfProcessors();\n+      }\n+\n+      @Override\n+      public int denseNodeThreshold()\n+      {\n+        return dbConfig.get(GraphDatabaseSettings.dense_node_threshold);\n+      }\n+\n+      @Override\n+      public long maxMemoryUsage()\n+      {\n+        return maxMemory != null ? maxMemory : DEFAULT.maxMemoryUsage();\n+      }\n+\n+      @Override\n+      public boolean highIO()\n+      {\n+        return defaultHighIO != null ? defaultHighIO : FileUtils.highIODevice(storeDir.toPath(), false);\n+      }\n+\n+      @Override\n+      public boolean allowCacheAllocationOnHeap()\n+      {\n+        return allowCacheOnHeap;\n+      }\n+    };\n+  }\n+\n+  private static String manualReference(ManualPage page, Anchor anchor)\n+  {\n+    // Docs are versioned major.minor-suffix, so drop the patch version.\n+    String[] versionParts = Version.getNeo4jVersion().split(\"-\");\n+    versionParts[0] = versionParts[0].substring(0, 3);\n+    String docsVersion = String.join(\"-\", versionParts);\n+\n+    return \" https://neo4j.com/docs/operations-manual/\" + docsVersion + \"/\" +\n+        page.getReference(anchor);\n+  }\n+\n+  /**\n+   * Method name looks strange, but look at how it's used and you'll see why it's named like that.\n+   *\n+   * @param stackTrace whether or not to also print the stack trace of the error.\n+   * @param err\n+   */\n+  private static RuntimeException andPrintError(String typeOfError, Exception e, boolean stackTrace,\n+                                                PrintStream err)\n+  {\n+    // List of common errors that can be explained to the user\n+    if (DuplicateInputIdException.class.equals(e.getClass()))\n+    {\n+      printErrorMessage(\"Duplicate input ids that would otherwise clash can be put into separate id space, \" +\n+              \"read more about how to use id spaces in the manual:\" +\n+              manualReference(ManualPage.IMPORT_TOOL_FORMAT, Anchor.ID_SPACES), e, stackTrace,\n+          err);\n+    } else if (MissingRelationshipDataException.class.equals(e.getClass()))\n+    {\n+      printErrorMessage(\"Relationship missing mandatory field '\" +\n+              ((MissingRelationshipDataException) e).getFieldType() + \"', read more about \" +\n+              \"relationship format in the manual: \" +\n+              manualReference(ManualPage.IMPORT_TOOL_FORMAT, Anchor.RELATIONSHIP), e, stackTrace,\n+          err);\n     }\n-\n-    /**\n-     * Method name looks strange, but look at how it's used and you'll see why it's named like that.\n-     * @param stackTrace whether or not to also print the stack trace of the error.\n-     * @param err\n-     */\n-    private static RuntimeException andPrintError( String typeOfError, Exception e, boolean stackTrace,\n-            PrintStream err )\n+    // This type of exception is wrapped since our input code throws InputException consistently,\n+    // and so IllegalMultilineFieldException comes from the csv component, which has no access to InputException\n+    // therefore it's wrapped.\n+    else if (Exceptions.contains(e, IllegalMultilineFieldException.class))\n     {\n-        // List of common errors that can be explained to the user\n-        if ( DuplicateInputIdException.class.equals( e.getClass() ) )\n-        {\n-            printErrorMessage( \"Duplicate input ids that would otherwise clash can be put into separate id space, \" +\n-                               \"read more about how to use id spaces in the manual:\" +\n-                               manualReference( ManualPage.IMPORT_TOOL_FORMAT, Anchor.ID_SPACES ), e, stackTrace,\n-                    err );\n-        }\n-        else if ( MissingRelationshipDataException.class.equals( e.getClass() ) )\n-        {\n-            printErrorMessage( \"Relationship missing mandatory field '\" +\n-                               ((MissingRelationshipDataException) e).getFieldType() + \"', read more about \" +\n-                               \"relationship format in the manual: \" +\n-                               manualReference( ManualPage.IMPORT_TOOL_FORMAT, Anchor.RELATIONSHIP ), e, stackTrace,\n-                    err );\n-        }\n-        // This type of exception is wrapped since our input code throws InputException consistently,\n-        // and so IllegalMultilineFieldException comes from the csv component, which has no access to InputException\n-        // therefore it's wrapped.\n-        else if ( Exceptions.contains( e, IllegalMultilineFieldException.class ) )\n-        {\n-            printErrorMessage( \"Detected field which spanned multiple lines for an import where \" +\n-                               Options.MULTILINE_FIELDS.argument() + \"=false. If you know that your input data \" +\n-                               \"include fields containing new-line characters then import with this option set to \" +\n-                               \"true.\", e, stackTrace, err );\n-        }\n-        else if ( Exceptions.contains( e, InputException.class ) )\n-        {\n-            printErrorMessage( \"Error in input data\", e, stackTrace, err );\n-        }\n-        // Fallback to printing generic error and stack trace\n-        else\n-        {\n-            printErrorMessage( typeOfError + \": \" + e.getMessage(), e, true, err );\n-        }\n-        err.println();\n-\n-        // Mute the stack trace that the default exception handler would have liked to print.\n-        // Calling System.exit( 1 ) or similar would be convenient on one hand since we can set\n-        // a specific exit code. On the other hand It's very inconvenient to have any System.exit\n-        // call in code that is tested.\n-        Thread.currentThread().setUncaughtExceptionHandler( ( t, e1 ) ->\n-        {\n-            /* Shhhh */\n-        } );\n-        throwIfUnchecked( e );\n-        return new RuntimeException( e ); // throw in order to have process exit with !0\n+      printErrorMessage(\"Detected field which spanned multiple lines for an import where \" +\n+          Options.MULTILINE_FIELDS.argument() + \"=false. If you know that your input data \" +\n+          \"include fields containing new-line characters then import with this option set to \" +\n+          \"true.\", e, stackTrace, err);\n+    } else if (Exceptions.contains(e, InputException.class))\n+    {\n+      printErrorMessage(\"Error in input data\", e, stackTrace, err);\n     }\n-\n-    private static void printErrorMessage( String string, Exception e, boolean stackTrace, PrintStream err )\n+    // Fallback to printing generic error and stack trace\n+    else\n     {\n-        err.println( string );\n-        err.println( \"Caused by:\" + e.getMessage() );\n-        if ( stackTrace )\n-        {\n-            e.printStackTrace( err );\n-        }\n+      printErrorMessage(typeOfError + \": \" + e.getMessage(), e, true, err);\n     }\n+    err.println();\n \n-    public static Iterable<DataFactory>\n-            relationshipData( final Charset encoding, Collection<Option<File[]>> relationshipsFiles )\n+    // Mute the stack trace that the default exception handler would have liked to print.\n+    // Calling System.exit( 1 ) or similar would be convenient on one hand since we can set\n+    // a specific exit code. On the other hand It's very inconvenient to have any System.exit\n+    // call in code that is tested.\n+    Thread.currentThread().setUncaughtExceptionHandler((t, e1) ->\n     {\n-        return new IterableWrapper<DataFactory,Option<File[]>>( relationshipsFiles )\n-        {\n-            @Override\n-            protected DataFactory underlyingObjectToObject( Option<File[]> group )\n-            {\n-                return data( defaultRelationshipType( group.metadata() ), encoding, group.value() );\n-            }\n-        };\n+      /* Shhhh */\n+    });\n+    throwIfUnchecked(e);\n+    return new RuntimeException(e); // throw in order to have process exit with !0\n+  }\n+\n+  private static void printErrorMessage(String string, Exception e, boolean stackTrace, PrintStream err)\n+  {\n+    err.println(string);\n+    err.println(\"Caused by:\" + e.getMessage());\n+    if (stackTrace)\n+    {\n+      e.printStackTrace(err);\n     }\n+  }\n \n-    public static Iterable<DataFactory> nodeData( final Charset encoding,\n-            Collection<Option<File[]>> nodesFiles )\n+  public static Iterable<DataFactory>\n+  relationshipData(final Charset encoding, Collection<Option<File[]>> relationshipsFiles)\n+  {\n+    return new IterableWrapper<DataFactory, Option<File[]>>(relationshipsFiles)\n     {\n-        return new IterableWrapper<DataFactory,Option<File[]>>( nodesFiles )\n-        {\n-            @Override\n-            protected DataFactory underlyingObjectToObject( Option<File[]> input )\n-            {\n-                Decorator decorator = input.metadata() != null\n-                        ? additiveLabels( input.metadata().split( \":\" ) )\n-                        : NO_DECORATOR;\n-                return data( decorator, encoding, input.value() );\n-            }\n-        };\n+      @Override\n+      protected DataFactory underlyingObjectToObject(Option<File[]> group)\n+      {\n+        return data(defaultRelationshipType(group.metadata()), encoding, group.value());\n+      }\n+    };\n+  }\n+\n+  public static Iterable<DataFactory> nodeData(final Charset encoding,\n+                                               Collection<Option<File[]>> nodesFiles)\n+  {\n+    return new IterableWrapper<DataFactory, Option<File[]>>(nodesFiles)\n+    {\n+      @Override\n+      protected DataFactory underlyingObjectToObject(Option<File[]> input)\n+      {\n+        Decorator decorator = input.metadata() != null\n+            ? additiveLabels(input.metadata().split(\":\"))\n+            : NO_DECORATOR;\n+        return data(decorator, encoding, input.value());\n+      }\n+    };\n+  }\n+\n+  private static void printUsage(PrintStream out)\n+  {\n+    out.println(\"Neo4j Import Tool\");\n+    for (String line : Args.splitLongLine(\"neo4j-import is used to create a new Neo4j database \"\n+        + \"from data in CSV files. \"\n+        +\n+        \"See the chapter \\\"Import Tool\\\" in the Neo4j Manual for details on the CSV file format \"\n+        + \"- a special kind of header is required.\", 80))\n+    {\n+      out.println(\"\\t\" + line);\n     }\n-\n-    private static void printUsage( PrintStream out )\n+    out.println(\"Usage:\");\n+    for (Options option : Options.values())\n     {\n-        out.println( \"Neo4j Import Tool\" );\n-        for ( String line : Args.splitLongLine( \"neo4j-import is used to create a new Neo4j database \"\n-                                                + \"from data in CSV files. \"\n-                                                +\n-                                                \"See the chapter \\\"Import Tool\\\" in the Neo4j Manual for details on the CSV file format \"\n-                                                + \"- a special kind of header is required.\", 80 ) )\n-        {\n-            out.println( \"\\t\" + line );\n-        }\n-        out.println( \"Usage:\" );\n-        for ( Options option : Options.values() )\n-        {\n-            option.printUsage( out );\n-        }\n-\n-        out.println( \"Example:\");\n-        out.print( Strings.joinAsLines(\n-                TAB + \"bin/neo4j-import --into retail.db --id-type string --nodes:Customer customers.csv \",\n-                TAB + \"--nodes products.csv --nodes orders_header.csv,orders1.csv,orders2.csv \",\n-                TAB + \"--relationships:CONTAINS order_details.csv \",\n-                TAB + \"--relationships:ORDERED customer_orders_header.csv,orders1.csv,orders2.csv\" ) );\n+      option.printUsage(out);\n     }\n \n-    private static boolean asksForUsage( Args args )\n+    out.println(\"Example:\");\n+    out.print(Strings.joinAsLines(\n+        TAB + \"bin/neo4j-import --into retail.db --id-type string --nodes:Customer customers.csv \",\n+        TAB + \"--nodes products.csv --nodes orders_header.csv,orders1.csv,orders2.csv \",\n+        TAB + \"--relationships:CONTAINS order_details.csv \",\n+        TAB + \"--relationships:ORDERED customer_orders_header.csv,orders1.csv,orders2.csv\"));\n+  }\n+\n+  private static boolean asksForUsage(Args args)\n+  {\n+    for (String orphan : args.orphans())\n     {\n-        for ( String orphan : args.orphans() )\n-        {\n-            if ( isHelpKey( orphan ) )\n-            {\n-                return true;\n-            }\n-        }\n-\n-        for ( Entry<String,String> option : args.asMap().entrySet() )\n-        {\n-            if ( isHelpKey( option.getKey() ) )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      if (isHelpKey(orphan))\n+      {\n+        return true;\n+      }\n     }\n \n-    private static boolean isHelpKey( String key )\n+    for (Entry<String, String> option : args.asMap().entrySet())\n     {\n-        return key.equals( \"?\" ) || key.equals( \"help\" );\n+      if (isHelpKey(option.getKey()))\n+      {\n+        return true;\n+      }\n     }\n-\n-    public static Configuration csvConfiguration( Args args, final boolean defaultSettingsSuitableForTests )\n+    return false;\n+  }\n+\n+  private static boolean isHelpKey(String key)\n+  {\n+    return key.equals(\"?\") || key.equals(\"help\");\n+  }\n+\n+  public static Configuration csvConfiguration(Args args, final boolean defaultSettingsSuitableForTests)\n+  {\n+    final Configuration defaultConfiguration = COMMAS;\n+    final Character specificDelimiter = args.interpretOption(Options.DELIMITER.key(),\n+        Converters.optional(), CHARACTER_CONVERTER);\n+    final Character specificArrayDelimiter = args.interpretOption(Options.ARRAY_DELIMITER.key(),\n+        Converters.optional(), CHARACTER_CONVERTER);\n+    final Character specificQuote = args.interpretOption(Options.QUOTE.key(), Converters.optional(),\n+        CHARACTER_CONVERTER);\n+    final Boolean multiLineFields = args.getBoolean(Options.MULTILINE_FIELDS.key(), null);\n+    final Boolean emptyStringsAsNull = args.getBoolean(Options.IGNORE_EMPTY_STRINGS.key(), null);\n+    final Boolean trimStrings = args.getBoolean(Options.TRIM_STRINGS.key(), null);\n+    final Boolean legacyStyleQuoting = args.getBoolean(Options.LEGACY_STYLE_QUOTING.key(), null);\n+    final Number bufferSize = args.has(Options.READ_BUFFER_SIZE.key())\n+        ? parseLongWithUnit(args.get(Options.READ_BUFFER_SIZE.key(), null))\n+        : null;\n+    return new Configuration.Default()\n     {\n-        final Configuration defaultConfiguration = COMMAS;\n-        final Character specificDelimiter = args.interpretOption( Options.DELIMITER.key(),\n-                Converters.optional(), CHARACTER_CONVERTER );\n-        final Character specificArrayDelimiter = args.interpretOption( Options.ARRAY_DELIMITER.key(),\n-                Converters.optional(), CHARACTER_CONVERTER );\n-        final Character specificQuote = args.interpretOption( Options.QUOTE.key(), Converters.optional(),\n-                CHARACTER_CONVERTER );\n-        final Boolean multiLineFields = args.getBoolean( Options.MULTILINE_FIELDS.key(), null );\n-        final Boolean emptyStringsAsNull = args.getBoolean( Options.IGNORE_EMPTY_STRINGS.key(), null );\n-        final Boolean trimStrings = args.getBoolean( Options.TRIM_STRINGS.key(), null);\n-        final Boolean legacyStyleQuoting = args.getBoolean( Options.LEGACY_STYLE_QUOTING.key(), null );\n-        final Number bufferSize = args.has( Options.READ_BUFFER_SIZE.key() )\n-                ? parseLongWithUnit( args.get( Options.READ_BUFFER_SIZE.key(), null ) )\n-                : null;\n-        return new Configuration.Default()\n-        {\n-            @Override\n-            public char delimiter()\n-            {\n-                return specificDelimiter != null\n-                        ? specificDelimiter\n-                        : defaultConfiguration.delimiter();\n-            }\n-\n-            @Override\n-            public char arrayDelimiter()\n-            {\n-                return specificArrayDelimiter != null\n-                        ? specificArrayDelimiter\n-                        : defaultConfiguration.arrayDelimiter();\n-            }\n-\n-            @Override\n-            public char quotationCharacter()\n-            {\n-                return specificQuote != null\n-                        ? specificQuote\n-                        : defaultConfiguration.quotationCharacter();\n-            }\n-\n-            @Override\n-            public boolean multilineFields()\n-            {\n-                return multiLineFields != null\n-                        ? multiLineFields\n-                        : defaultConfiguration.multilineFields();\n-            }\n-\n-            @Override\n-            public boolean emptyQuotedStringsAsNull()\n-            {\n-                return emptyStringsAsNull != null\n-                        ? emptyStringsAsNull\n-                        : defaultConfiguration.emptyQuotedStringsAsNull();\n-            }\n-\n-            @Override\n-            public int bufferSize()\n-            {\n-                return bufferSize != null\n-                        ? bufferSize.intValue()\n-                        : defaultSettingsSuitableForTests ? 10_000 : super.bufferSize();\n-            }\n-\n-            @Override\n-            public boolean trimStrings()\n-            {\n-                return trimStrings != null\n-                       ? trimStrings\n-                       : defaultConfiguration.trimStrings();\n-            }\n-\n-            @Override\n-            public boolean legacyStyleQuoting()\n-            {\n-                return legacyStyleQuoting != null\n-                        ? legacyStyleQuoting\n-                        : defaultConfiguration.legacyStyleQuoting();\n-            }\n-        };\n+      @Override\n+      public char delimiter()\n+      {\n+        return specificDelimiter != null\n+            ? specificDelimiter\n+            : defaultConfiguration.delimiter();\n+      }\n+\n+      @Override\n+      public char arrayDelimiter()\n+      {\n+        return specificArrayDelimiter != null\n+            ? specificArrayDelimiter\n+            : defaultConfiguration.arrayDelimiter();\n+      }\n+\n+      @Override\n+      public char quotationCharacter()\n+      {\n+        return specificQuote != null\n+            ? specificQuote\n+            : defaultConfiguration.quotationCharacter();\n+      }\n+\n+      @Override\n+      public boolean multilineFields()\n+      {\n+        return multiLineFields != null\n+            ? multiLineFields\n+            : defaultConfiguration.multilineFields();\n+      }\n+\n+      @Override\n+      public boolean emptyQuotedStringsAsNull()\n+      {\n+        return emptyStringsAsNull != null\n+            ? emptyStringsAsNull\n+            : defaultConfiguration.emptyQuotedStringsAsNull();\n+      }\n+\n+      @Override\n+      public int bufferSize()\n+      {\n+        return bufferSize != null\n+            ? bufferSize.intValue()\n+            : defaultSettingsSuitableForTests ? 10_000 : super.bufferSize();\n+      }\n+\n+      @Override\n+      public boolean trimStrings()\n+      {\n+        return trimStrings != null\n+            ? trimStrings\n+            : defaultConfiguration.trimStrings();\n+      }\n+\n+      @Override\n+      public boolean legacyStyleQuoting()\n+      {\n+        return legacyStyleQuoting != null\n+            ? legacyStyleQuoting\n+            : defaultConfiguration.legacyStyleQuoting();\n+      }\n+    };\n+  }\n+\n+  private static final Function<String, IdType> TO_ID_TYPE = from -> IdType.valueOf(from.toUpperCase());\n+\n+  private static final Function<String, Character> CHARACTER_CONVERTER = new CharacterConverter();\n+\n+  private enum ManualPage\n+  {\n+    IMPORT_TOOL_FORMAT(\"tools/import/file-header-format/\");\n+\n+    private final String page;\n+\n+    ManualPage(String page)\n+    {\n+      this.page = page;\n     }\n \n-    private static final Function<String,IdType> TO_ID_TYPE = from -> IdType.valueOf( from.toUpperCase() );\n-\n-    private static final Function<String,Character> CHARACTER_CONVERTER = new CharacterConverter();\n-\n-    private enum ManualPage\n+    public String getReference(Anchor anchor)\n     {\n-        IMPORT_TOOL_FORMAT( \"tools/import/file-header-format/\" );\n-\n-        private final String page;\n-\n-        ManualPage( String page )\n-        {\n-            this.page = page;\n-        }\n-\n-        public String getReference( Anchor anchor )\n-        {\n-            // As long as the the operations manual is single-page we only use the anchor.\n-            return page + \"#\" + anchor.anchor;\n-        }\n+      // As long as the the operations manual is single-page we only use the anchor.\n+      return page + \"#\" + anchor.anchor;\n     }\n+  }\n \n-    private enum Anchor\n-    {\n-        ID_SPACES( \"import-tool-id-spaces\" ),\n-        RELATIONSHIP( \"import-tool-header-format-rels\" );\n+  private enum Anchor\n+  {\n+    ID_SPACES(\"import-tool-id-spaces\"),\n+    RELATIONSHIP(\"import-tool-header-format-rels\");\n \n-        private final String anchor;\n+    private final String anchor;\n \n-        Anchor( String anchor )\n-        {\n-            this.anchor = anchor;\n-        }\n+    Anchor(String anchor)\n+    {\n+      this.anchor = anchor;\n     }\n+  }\n }\n",
            "diff_size": 1449
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 645).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 813).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 6,262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 754).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "315",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "319",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "380",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 280).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "391",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 276).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "402",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "435",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "442",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "453",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "541",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "547",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "610",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 263).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "614",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 286).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "621",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 301).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "684",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 275).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "729",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 374).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "729",
                    "column": "276",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "730",
                    "column": "38",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "730",
                    "column": "127",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "740",
                    "column": "69",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "746",
                    "column": "79",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "752",
                    "column": "61",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "758",
                    "column": "65",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "764",
                    "column": "71",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "776",
                    "column": "57",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "782",
                    "column": "71",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2210/ImportTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2210/ImportTool.java\nindex 4525663f6ae..d4ede3bd8ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2210/ImportTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2210/ImportTool.java\n@@ -113,158 +113,15 @@ import static org.neo4j.unsafe.impl.batchimport.input.csv.DataFactories.defaultF\n  */\n public class ImportTool\n {\n-    private static final String INPUT_FILES_DESCRIPTION =\n-            \"Multiple files will be logically seen as one big file \" +\n-            \"from the perspective of the importer. \" +\n-            \"The first line must contain the header. \" +\n-            \"Multiple data sources like these can be specified in one import, \" +\n-            \"where each data source has its own header. \" +\n-            \"Note that file groups must be enclosed in quotation marks. \" +\n-            \"Each file can be a regular expression and will then include all matching files. \" +\n-            \"The file matching is done with number awareness such that e.g. files:\" +\n-            \"'File1Part_001.csv', 'File12Part_003' will be ordered in that order for a pattern like: 'File.*'\";\n-\n-    private static final String UNLIMITED = \"true\";\n+    private static final String INPUT_FILES_DESCRIPTION = \"Multiple files will be logically seen as one big file \" + \"from the perspective of the importer. \" + \"The first line must contain the header. \" + \"Multiple data sources like these can be specified in one import, \" + \"where each data source has its own header. \" + \"Note that file groups must be enclosed in quotation marks. \" + \"Each file can be a regular expression and will then include all matching files. \" + \"The file matching is done with number awareness such that e.g. files:\" + \"'File1Part_001.csv', 'File12Part_003' will be ordered in that order for a pattern like: 'File.*'\";\n+private static final String UNLIMITED = \"true\";\n \n     enum Options\n     {\n-        FILE( \"f\", null,\n-                \"<file name>\",\n-                \"File containing all arguments, used as an alternative to supplying all arguments on the command line directly.\"\n-                        + \"Each argument can be on a separate line or multiple arguments per line separated by space.\"\n-                        + \"Arguments containing spaces needs to be quoted.\"\n-                        + \"Supplying other arguments in addition to this file argument is not supported.\" ),\n-        STORE_DIR( \"into\", null,\n-                \"<store-dir>\",\n-                \"Database directory to import into. \" + \"Must not contain existing database.\" ),\n-        DB_NAME( \"database\", null,\n-                \"<database-name>\",\n-                \"Database name to import into. \" + \"Must not contain existing database.\", true ),\n-        NODE_DATA( \"nodes\", null,\n-                \"[:Label1:Label2] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" + MULTI_FILE_DELIMITER + \"...\\\"\",\n-                \"Node CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n-                        true, true ),\n-        RELATIONSHIP_DATA( \"relationships\", null,\n-                \"[:RELATIONSHIP_TYPE] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" +\n-                MULTI_FILE_DELIMITER + \"...\\\"\",\n-                \"Relationship CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n-                        true, true ),\n-        DELIMITER( \"delimiter\", null,\n-                \"<delimiter-character>\",\n-                \"Delimiter character, or 'TAB', between values in CSV data. The default option is `\" + COMMAS.delimiter() + \"`.\" ),\n-        ARRAY_DELIMITER( \"array-delimiter\", null,\n-                \"<array-delimiter-character>\",\n-                \"Delimiter character, or 'TAB', between array elements within a value in CSV data. \" +\n-                        \"The default option is `\" + COMMAS.arrayDelimiter() + \"`.\" ),\n-        QUOTE( \"quote\", null,\n-                \"<quotation-character>\",\n-                \"Character to treat as quotation character for values in CSV data. \"\n-                        + \"The default option is `\" + COMMAS.quotationCharacter() + \"`. \"\n-                        + \"Quotes inside quotes escaped like `\\\"\\\"\\\"Go away\\\"\\\", he said.\\\"` and \"\n-                        + \"`\\\"\\\\\\\"Go away\\\\\\\", he said.\\\"` are supported. \"\n-                        + \"If you have set \\\"`'`\\\" to be used as the quotation character, \"\n-                        + \"you could write the previous example like this instead: \" + \"`'\\\"Go away\\\", he said.'`\" ),\n-        MULTILINE_FIELDS( \"multiline-fields\", org.neo4j.csv.reader.Configuration.DEFAULT.multilineFields(),\n-                \"<true/false>\",\n-                \"Whether or not fields from input source can span multiple lines, i.e. contain newline characters.\" ),\n-\n-        TRIM_STRINGS( \"trim-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.trimStrings(),\n-                \"<true/false>\",\n-                \"Whether or not strings should be trimmed for whitespaces.\" ),\n-\n-        INPUT_ENCODING( \"input-encoding\", null,\n-                \"<character set>\",\n-                \"Character set that input data is encoded in. Provided value must be one out of the available \"\n-                        + \"character sets in the JVM, as provided by Charset#availableCharsets(). \"\n-                        + \"If no input encoding is provided, the default character set of the JVM will be used.\",\n-                true ),\n-        IGNORE_EMPTY_STRINGS( \"ignore-empty-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.emptyQuotedStringsAsNull(),\n-                \"<true/false>\",\n-                \"Whether or not empty string fields, i.e. \\\"\\\" from input source are ignored, i.e. treated as null.\" ),\n-        ID_TYPE( \"id-type\", IdType.STRING,\n-                \"<id-type>\",\n-                \"One out of \" + Arrays.toString( IdType.values() )\n-                        + \" and specifies how ids in node/relationship \"\n-                        + \"input files are treated.\\n\"\n-                        + IdType.STRING + \": arbitrary strings for identifying nodes.\\n\"\n-                        + IdType.INTEGER + \": arbitrary integer values for identifying nodes.\\n\"\n-                        + IdType.ACTUAL + \": (advanced) actual node ids. The default option is `\" + IdType.STRING  +\n-                        \"`.\", true ),\n-        PROCESSORS( \"processors\", null,\n-                \"<max processor count>\",\n-                \"(advanced) Max number of processors used by the importer. Defaults to the number of \"\n-                        + \"available processors reported by the JVM\"\n-                        + availableProcessorsHint()\n-                        + \". There is a certain amount of minimum threads needed so for that reason there \"\n-                        + \"is no lower bound for this value. For optimal performance this value shouldn't be \"\n-                        + \"greater than the number of available processors.\" ),\n-        STACKTRACE( \"stacktrace\", false,\n-                \"<true/false>\",\n-                \"Enable printing of error stack traces.\" ),\n-        BAD_TOLERANCE( \"bad-tolerance\", 1000,\n-                \"<max number of bad entries, or \" + UNLIMITED + \" for unlimited>\",\n-                \"Number of bad entries before the import is considered failed. This tolerance threshold is \"\n-                        + \"about relationships refering to missing nodes. Format errors in input data are \"\n-                        + \"still treated as errors\" ),\n-        SKIP_BAD_ENTRIES_LOGGING( \"skip-bad-entries-logging\", Boolean.FALSE, \"<true/false>\",\n-                \"Whether or not to skip logging bad entries detected during import.\" ),\n-        SKIP_BAD_RELATIONSHIPS( \"skip-bad-relationships\", Boolean.TRUE,\n-                \"<true/false>\",\n-                \"Whether or not to skip importing relationships that refers to missing node ids, i.e. either \"\n-                        + \"start or end node id/group referring to node that wasn't specified by the \"\n-                        + \"node input data. \"\n-                        + \"Skipped nodes will be logged\"\n-                        + \", containing at most number of entites specified by \" + BAD_TOLERANCE.key() + \", unless \"\n-                        + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \" option.\" ),\n-        SKIP_DUPLICATE_NODES( \"skip-duplicate-nodes\", Boolean.FALSE,\n-                \"<true/false>\",\n-                \"Whether or not to skip importing nodes that have the same id/group. In the event of multiple \"\n-                        + \"nodes within the same group having the same id, the first encountered will be imported \"\n-                        + \"whereas consecutive such nodes will be skipped. \"\n-                        + \"Skipped nodes will be logged\"\n-                        + \", containing at most number of entities specified by \" + BAD_TOLERANCE.key() + \", unless \"\n-                        + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\" ),\n-        IGNORE_EXTRA_COLUMNS( \"ignore-extra-columns\", Boolean.FALSE,\n-                \"<true/false>\",\n-                \"Whether or not to ignore extra columns in the data not specified by the header. \"\n-                        + \"Skipped columns will be logged, containing at most number of entities specified by \"\n-                        + BAD_TOLERANCE.key() + \", unless \"\n-                        + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\" ),\n-        DATABASE_CONFIG( \"db-config\", null, \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\",\n-                \"(advanced) Option is deprecated and replaced by 'additional-config'. \" ),\n-        ADDITIONAL_CONFIG( \"additional-config\", null,\n-                \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\",\n-                \"(advanced) File specifying database-specific configuration. For more information consult \"\n-                        + \"manual about available configuration options for a neo4j configuration file. \"\n-                        + \"Only configuration affecting store at time of creation will be read. \"\n-                        + \"Examples of supported config are:\\n\"\n-                        + GraphDatabaseSettings.dense_node_threshold.name() + \"\\n\"\n-                        + GraphDatabaseSettings.string_block_size.name() + \"\\n\"\n-                        + GraphDatabaseSettings.array_block_size.name(), true ),\n-        LEGACY_STYLE_QUOTING( \"legacy-style-quoting\", Configuration.DEFAULT_LEGACY_STYLE_QUOTING,\n-                \"<true/false>\",\n-                \"Whether or not backslash-escaped quote e.g. \\\\\\\" is interpreted as inner quote.\" ),\n-        READ_BUFFER_SIZE( \"read-buffer-size\", org.neo4j.csv.reader.Configuration.DEFAULT.bufferSize(),\n-                \"<bytes, e.g. 10k, 4M>\",\n-                \"Size of each buffer for reading input data. It has to at least be large enough to hold the \" +\n-                \"biggest single value in the input data.\" ),\n-        MAX_MEMORY( \"max-memory\", null,\n-                \"<max memory that importer can use>\",\n-                \"(advanced) Maximum memory that importer can use for various data structures and caching \" +\n-                \"to improve performance. If left as unspecified (null) it is set to \" + DEFAULT_MAX_MEMORY_PERCENT +\n-                \"% of (free memory on machine - max JVM memory). \" +\n-                \"Values can be plain numbers, like 10000000 or e.g. 20G for 20 gigabyte, or even e.g. 70%.\" ),\n-        CACHE_ON_HEAP( \"cache-on-heap\",\n-                DEFAULT.allowCacheAllocationOnHeap(),\n-                \"Whether or not to allow allocating memory for the cache on heap\",\n-                \"(advanced) Whether or not to allow allocating memory for the cache on heap. \" +\n-                \"If 'false' then caches will still be allocated off-heap, but the additional free memory \" +\n-                \"inside the JVM will not be allocated for the caches. This to be able to have better control \" +\n-                \"over the heap memory\" ),\n-        HIGH_IO( \"high-io\", null, \"Assume a high-throughput storage subsystem\",\n-                \"(advanced) Ignore environment-based heuristics, and assume that the target storage subsystem can \" +\n-                \"support parallel IO with high throughput.\" ),\n-        DETAILED_PROGRESS( \"detailed-progress\", false, \"true/false\", \"Use the old detailed 'spectrum' progress printing\" );\n+        FILE( \"f\", null, \"<file name>\", \"File containing all arguments, used as an alternative to supplying all arguments on the command line directly.\" + \"Each argument can be on a separate line or multiple arguments per line separated by space.\" + \"Arguments containing spaces needs to be quoted.\" + \"Supplying other arguments in addition to this file argument is not supported.\" ), STORE_DIR( \"into\", null, \"<store-dir>\", \"Database directory to import into. \" + \"Must not contain existing database.\" ), DB_NAME( \"database\", null, \"<database-name>\", \"Database name to import into. \" + \"Must not contain existing database.\", true ), NODE_DATA( \"nodes\", null, \"[:Label1:Label2] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" + MULTI_FILE_DELIMITER + \"...\\\"\", \"Node CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n+                        true, true ), RELATIONSHIP_DATA( \"relationships\", null, \"[:RELATIONSHIP_TYPE] \\\"<file1>\" + MULTI_FILE_DELIMITER + \"<file2>\" + MULTI_FILE_DELIMITER + \"...\\\"\", \"Relationship CSV header and data. \" + INPUT_FILES_DESCRIPTION,\n+                        true, true ), DELIMITER( \"delimiter\", null, \"<delimiter-character>\", \"Delimiter character, or 'TAB', between values in CSV data. The default option is `\" + COMMAS.delimiter() + \"`.\" ), ARRAY_DELIMITER( \"array-delimiter\", null, \"<array-delimiter-character>\", \"Delimiter character, or 'TAB', between array elements within a value in CSV data. \" + \"The default option is `\" + COMMAS.arrayDelimiter() + \"`.\" ), QUOTE( \"quote\", null, \"<quotation-character>\", \"Character to treat as quotation character for values in CSV data. \" + \"The default option is `\" + COMMAS.quotationCharacter() + \"`. \" + \"Quotes inside quotes escaped like `\\\"\\\"\\\"Go away\\\"\\\", he said.\\\"` and \" + \"`\\\"\\\\\\\"Go away\\\\\\\", he said.\\\"` are supported. \" + \"If you have set \\\"`'`\\\" to be used as the quotation character, \" + \"you could write the previous example like this instead: \" + \"`'\\\"Go away\\\", he said.'`\" ), MULTILINE_FIELDS( \"multiline-fields\", org.neo4j.csv.reader.Configuration.DEFAULT.multilineFields(), \"<true/false>\", \"Whether or not fields from input source can span multiple lines, i.e. contain newline characters.\" ), TRIM_STRINGS( \"trim-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.trimStrings(), \"<true/false>\", \"Whether or not strings should be trimmed for whitespaces.\" ), INPUT_ENCODING( \"input-encoding\", null, \"<character set>\", \"Character set that input data is encoded in. Provided value must be one out of the available \" + \"character sets in the JVM, as provided by Charset#availableCharsets(). \" + \"If no input encoding is provided, the default character set of the JVM will be used.\", true ), IGNORE_EMPTY_STRINGS( \"ignore-empty-strings\", org.neo4j.csv.reader.Configuration.DEFAULT.emptyQuotedStringsAsNull(), \"<true/false>\", \"Whether or not empty string fields, i.e. \\\"\\\" from input source are ignored, i.e. treated as null.\" ), ID_TYPE( \"id-type\", IdType.STRING, \"<id-type>\", \"One out of \" + Arrays.toString( IdType.values() ) + \" and specifies how ids in node/relationship \" + \"input files are treated.\\n\" + IdType.STRING + \": arbitrary strings for identifying nodes.\\n\" + IdType.INTEGER + \": arbitrary integer values for identifying nodes.\\n\" + IdType.ACTUAL + \": (advanced) actual node ids. The default option is `\" + IdType.STRING + \"`.\", true ), PROCESSORS( \"processors\", null, \"<max processor count>\", \"(advanced) Max number of processors used by the importer. Defaults to the number of \" + \"available processors reported by the JVM\" + availableProcessorsHint() + \". There is a certain amount of minimum threads needed so for that reason there \" + \"is no lower bound for this value. For optimal performance this value shouldn't be \" + \"greater than the number of available processors.\" ), STACKTRACE( \"stacktrace\", false, \"<true/false>\", \"Enable printing of error stack traces.\" ), BAD_TOLERANCE( \"bad-tolerance\", 1000, \"<max number of bad entries, or \" + UNLIMITED + \" for unlimited>\", \"Number of bad entries before the import is considered failed. This tolerance threshold is \" + \"about relationships refering to missing nodes. Format errors in input data are \" + \"still treated as errors\" ), SKIP_BAD_ENTRIES_LOGGING( \"skip-bad-entries-logging\", Boolean.FALSE, \"<true/false>\", \"Whether or not to skip logging bad entries detected during import.\" ), SKIP_BAD_RELATIONSHIPS( \"skip-bad-relationships\", Boolean.TRUE, \"<true/false>\", \"Whether or not to skip importing relationships that refers to missing node ids, i.e. either \" + \"start or end node id/group referring to node that wasn't specified by the \" + \"node input data. \" + \"Skipped nodes will be logged\" + \", containing at most number of entites specified by \" + BAD_TOLERANCE.key() + \", unless \" + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \" option.\" ), SKIP_DUPLICATE_NODES( \"skip-duplicate-nodes\", Boolean.FALSE, \"<true/false>\", \"Whether or not to skip importing nodes that have the same id/group. In the event of multiple \" + \"nodes within the same group having the same id, the first encountered will be imported \" + \"whereas consecutive such nodes will be skipped. \" + \"Skipped nodes will be logged\" + \", containing at most number of entities specified by \" + BAD_TOLERANCE.key() + \", unless \" + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\" ), IGNORE_EXTRA_COLUMNS( \"ignore-extra-columns\", Boolean.FALSE, \"<true/false>\", \"Whether or not to ignore extra columns in the data not specified by the header. \" + \"Skipped columns will be logged, containing at most number of entities specified by \" + BAD_TOLERANCE.key() + \", unless \" + \"otherwise specified by \" + SKIP_BAD_ENTRIES_LOGGING.key() + \"option.\" ), DATABASE_CONFIG( \"db-config\", null, \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\", \"(advanced) Option is deprecated and replaced by 'additional-config'. \" ), ADDITIONAL_CONFIG( \"additional-config\", null, \"<path/to/\" + Config.DEFAULT_CONFIG_FILE_NAME + \">\", \"(advanced) File specifying database-specific configuration. For more information consult \" + \"manual about available configuration options for a neo4j configuration file. \" + \"Only configuration affecting store at time of creation will be read. \" + \"Examples of supported config are:\\n\" + GraphDatabaseSettings.dense_node_threshold.name() + \"\\n\" + GraphDatabaseSettings.string_block_size.name() + \"\\n\" + GraphDatabaseSettings.array_block_size.name(), true ), LEGACY_STYLE_QUOTING( \"legacy-style-quoting\", Configuration.DEFAULT_LEGACY_STYLE_QUOTING, \"<true/false>\", \"Whether or not backslash-escaped quote e.g. \\\\\\\" is interpreted as inner quote.\" ), READ_BUFFER_SIZE( \"read-buffer-size\", org.neo4j.csv.reader.Configuration.DEFAULT.bufferSize(), \"<bytes, e.g. 10k, 4M>\", \"Size of each buffer for reading input data. It has to at least be large enough to hold the \" + \"biggest single value in the input data.\" ), MAX_MEMORY( \"max-memory\", null, \"<max memory that importer can use>\", \"(advanced) Maximum memory that importer can use for various data structures and caching \" + \"to improve performance. If left as unspecified (null) it is set to \" + DEFAULT_MAX_MEMORY_PERCENT + \"% of (free memory on machine - max JVM memory). \" + \"Values can be plain numbers, like 10000000 or e.g. 20G for 20 gigabyte, or even e.g. 70%.\" ), CACHE_ON_HEAP( \"cache-on-heap\",\n+                DEFAULT.allowCacheAllocationOnHeap(), \"Whether or not to allow allocating memory for the cache on heap\", \"(advanced) Whether or not to allow allocating memory for the cache on heap. \" + \"If 'false' then caches will still be allocated off-heap, but the additional free memory \" + \"inside the JVM will not be allocated for the caches. This to be able to have better control \" + \"over the heap memory\" ), HIGH_IO( \"high-io\", null, \"Assume a high-throughput storage subsystem\", \"(advanced) Ignore environment-based heuristics, and assume that the target storage subsystem can \" + \"support parallel IO with high throughput.\" ), DETAILED_PROGRESS( \"detailed-progress\", false, \"true/false\", \"Use the old detailed 'spectrum' progress printing\" );\n \n         private final String key;\n         private final Object defaultValue;\n@@ -326,9 +183,11 @@ public class ImportTool\n                 {\n                     result += \".\";\n                 }\n-                result += \" Default value: \" + defaultValue;\n+\n+result += \" Default value: \" + defaultValue;\n             }\n-            return result;\n+\n+return result;\n         }\n \n         String manPageEntry()\n@@ -387,14 +246,11 @@ public class ImportTool\n      */\n     public static void main( String[] incomingArguments, boolean defaultSettingsSuitableForTests ) throws IOException\n     {\n-        System.err.println( format( \"WARNING: neo4j-import is deprecated and support for it will be removed in a future%n\" +\n-                \"version of Neo4j; please use neo4j-admin import instead.\" ) );\n-\n-        PrintStream out = System.out;\n+        System.err.println( format( \"WARNING: neo4j-import is deprecated and support for it will be removed in a future%n\" + \"version of Neo4j; please use neo4j-admin import instead.\" ) );\n+PrintStream out = System.out;\n         PrintStream err = System.err;\n         Args args = Args.parse( incomingArguments );\n-\n-        if ( ArrayUtil.isEmpty( incomingArguments ) || asksForUsage( args ) )\n+if ( ArrayUtil.isEmpty( incomingArguments ) || asksForUsage( args ) )\n         {\n             printUsage( out );\n             return;\n@@ -426,21 +282,18 @@ public class ImportTool\n         try ( FileSystemAbstraction fs = new DefaultFileSystemAbstraction() )\n         {\n             args = useArgumentsFromFileArgumentIfPresent( args );\n-\n-            storeDir = args.interpretOption( Options.STORE_DIR.key(), Converters.mandatory(),\n-                    Converters.toFile(), Validators.DIRECTORY_IS_WRITABLE );\n-            Config config = Config.defaults( GraphDatabaseSettings.neo4j_home, storeDir.getAbsolutePath() );\n+storeDir = args.interpretOption( Options.STORE_DIR.key(), Converters.mandatory(), Converters.toFile(), Validators.DIRECTORY_IS_WRITABLE );\n+Config config = Config.defaults( GraphDatabaseSettings.neo4j_home, storeDir.getAbsolutePath() );\n             logsDir = config.get( GraphDatabaseSettings.logs_directory );\n             fs.mkdirs( logsDir );\n-\n-            skipBadEntriesLogging = args.getBoolean( Options.SKIP_BAD_ENTRIES_LOGGING.key(),\n-                    (Boolean) Options.SKIP_BAD_ENTRIES_LOGGING.defaultValue(), false);\n-            if ( !skipBadEntriesLogging )\n+skipBadEntriesLogging = args.getBoolean( Options.SKIP_BAD_ENTRIES_LOGGING.key(), (Boolean) Options.SKIP_BAD_ENTRIES_LOGGING.defaultValue(), false);\n+if ( !skipBadEntriesLogging )\n             {\n                 badFile = new File( storeDir, BAD_FILE_NAME );\n                 badOutput = new BufferedOutputStream( fs.openAsOutputStream( badFile, false ) );\n             }\n-            nodesFiles = extractInputFiles( args, Options.NODE_DATA.key(), err );\n+\n+nodesFiles = extractInputFiles( args, Options.NODE_DATA.key(), err );\n             relationshipsFiles = extractInputFiles( args, Options.RELATIONSHIP_DATA.key(), err );\n             String maxMemoryString = args.get( Options.MAX_MEMORY.key(), null );\n             maxMemory = parseMaxMemory( maxMemoryString );\n@@ -449,41 +302,27 @@ public class ImportTool\n             enableStacktrace = args.getBoolean( Options.STACKTRACE.key(), Boolean.FALSE, Boolean.TRUE );\n             processors = args.getNumber( Options.PROCESSORS.key(), null );\n             idType = args.interpretOption( Options.ID_TYPE.key(),\n-                    withDefault( (IdType)Options.ID_TYPE.defaultValue() ), TO_ID_TYPE );\n-            badTolerance = parseNumberOrUnlimited( args, Options.BAD_TOLERANCE );\n+                    withDefault( (IdType) Options.ID_TYPE.defaultValue() ), TO_ID_TYPE );\n+badTolerance = parseNumberOrUnlimited( args, Options.BAD_TOLERANCE );\n             inputEncoding = Charset.forName( args.get( Options.INPUT_ENCODING.key(), defaultCharset().name() ) );\n-\n-            skipBadRelationships = args.getBoolean( Options.SKIP_BAD_RELATIONSHIPS.key(),\n-                    (Boolean)Options.SKIP_BAD_RELATIONSHIPS.defaultValue(), true );\n-            skipDuplicateNodes = args.getBoolean( Options.SKIP_DUPLICATE_NODES.key(),\n-                    (Boolean)Options.SKIP_DUPLICATE_NODES.defaultValue(), true );\n-            ignoreExtraColumns = args.getBoolean( Options.IGNORE_EXTRA_COLUMNS.key(),\n-                    (Boolean)Options.IGNORE_EXTRA_COLUMNS.defaultValue(), true );\n-            defaultHighIO = args.getBoolean( Options.HIGH_IO.key(),\n-                    (Boolean)Options.HIGH_IO.defaultValue(), true );\n-\n-            Collector badCollector = getBadCollector( badTolerance, skipBadRelationships, skipDuplicateNodes, ignoreExtraColumns,\n+skipBadRelationships = args.getBoolean( Options.SKIP_BAD_RELATIONSHIPS.key(), (Boolean) Options.SKIP_BAD_RELATIONSHIPS.defaultValue(), true );\n+skipDuplicateNodes = args.getBoolean( Options.SKIP_DUPLICATE_NODES.key(), (Boolean) Options.SKIP_DUPLICATE_NODES.defaultValue(), true );\n+ignoreExtraColumns = args.getBoolean( Options.IGNORE_EXTRA_COLUMNS.key(), (Boolean) Options.IGNORE_EXTRA_COLUMNS.defaultValue(), true );\n+defaultHighIO = args.getBoolean( Options.HIGH_IO.key(), (Boolean) Options.HIGH_IO.defaultValue(), true );\n+Collector badCollector = getBadCollector( badTolerance, skipBadRelationships, skipDuplicateNodes, ignoreExtraColumns,\n                     skipBadEntriesLogging, badOutput );\n-\n-            dbConfig = loadDbConfig( args.interpretOption( Options.DATABASE_CONFIG.key(), Converters.optional(),\n-                    Converters.toFile(), Validators.REGEX_FILE_EXISTS ) );\n-            dbConfig.augment( loadDbConfig( args.interpretOption( Options.ADDITIONAL_CONFIG.key(), Converters.optional(),\n-                    Converters.toFile(), Validators.REGEX_FILE_EXISTS ) ) );\n-            boolean allowCacheOnHeap = args.getBoolean( Options.CACHE_ON_HEAP.key(),\n-                    (Boolean) Options.CACHE_ON_HEAP.defaultValue() );\n-            configuration = importConfiguration(\n-                    processors, defaultSettingsSuitableForTests, dbConfig, maxMemory, storeDir,\n-                    allowCacheOnHeap, defaultHighIO );\n-            input = new CsvInput( nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader(),\n-                    relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader(),\n-                    idType, csvConfiguration( args, defaultSettingsSuitableForTests ), badCollector );\n-            in = defaultSettingsSuitableForTests ? new ByteArrayInputStream( EMPTY_BYTE_ARRAY ) : System.in;\n+dbConfig = loadDbConfig( args.interpretOption( Options.DATABASE_CONFIG.key(), Converters.optional(), Converters.toFile(), Validators.REGEX_FILE_EXISTS ) );\n+dbConfig.augment( loadDbConfig( args.interpretOption( Options.ADDITIONAL_CONFIG.key(), Converters.optional(), Converters.toFile(), Validators.REGEX_FILE_EXISTS ) ) );\n+    boolean allowCacheOnHeap = args.getBoolean( Options.CACHE_ON_HEAP.key(), (Boolean) Options.CACHE_ON_HEAP.defaultValue() );\n+configuration = importConfiguration( processors, defaultSettingsSuitableForTests, dbConfig, maxMemory, storeDir, allowCacheOnHeap, defaultHighIO );\n+input = new CsvInput( nodeData( inputEncoding, nodesFiles ), defaultFormatNodeFileHeader(),\n+                    relationshipData( inputEncoding, relationshipsFiles ), defaultFormatRelationshipFileHeader(), idType, csvConfiguration( args, defaultSettingsSuitableForTests ), badCollector );\n+in = defaultSettingsSuitableForTests ? new ByteArrayInputStream( EMPTY_BYTE_ARRAY ) : System.in;\n             boolean detailedPrinting = args.getBoolean( Options.DETAILED_PROGRESS.key(), (Boolean) Options.DETAILED_PROGRESS.defaultValue() );\n \n             doImport( out, err, in, storeDir, logsDir, badFile, fs, nodesFiles, relationshipsFiles,\n                     enableStacktrace, input, dbConfig, badOutput, configuration, detailedPrinting );\n-\n-            success = true;\n+success = true;\n         }\n         catch ( IllegalArgumentException e )\n         {\n@@ -510,14 +349,14 @@ public class ImportTool\n             // Are there any other arguments supplied, in addition to this -f argument?\n             if ( args.asMap().size() > 1 )\n             {\n-                throw new IllegalArgumentException(\n-                        \"Supplying arguments in addition to \" + Options.FILE.argument() + \" isn't supported.\" );\n+                throw new IllegalArgumentException( \"Supplying arguments in addition to \" + Options.FILE.argument() + \" isn't supported.\" );\n             }\n \n             // Read the arguments from the -f file and use those instead\n             args = Args.parse( parseFileArgumentList( new File( fileArgument ) ) );\n         }\n-        return args;\n+\n+return args;\n     }\n \n     public static String[] parseFileArgumentList( File file ) throws IOException\n@@ -538,45 +377,34 @@ public class ImportTool\n                 long result = calculateMaxMemoryFromPercent( percent );\n                 if ( !canDetectFreeMemory() )\n                 {\n-                    System.err.println( \"WARNING: amount of free memory couldn't be detected so defaults to \" +\n-                            bytes( result ) + \". For optimal performance instead explicitly specify amount of \" +\n-                            \"memory that importer is allowed to use using \" + Options.MAX_MEMORY.argument() );\n+                    System.err.println( \"WARNING: amount of free memory couldn't be detected so defaults to \" + bytes( result ) + \". For optimal performance instead explicitly specify amount of \" + \"memory that importer is allowed to use using \" + Options.MAX_MEMORY.argument() );\n                 }\n-                return result;\n+\n+return result;\n             }\n-            return Settings.parseLongWithUnit( maxMemoryString );\n+\n+return Settings.parseLongWithUnit( maxMemoryString );\n         }\n         return null;\n     }\n \n-    public static void doImport( PrintStream out, PrintStream err, InputStream in, File storeDir, File logsDir, File badFile,\n-                                 FileSystemAbstraction fs, Collection<Option<File[]>> nodesFiles,\n-                                 Collection<Option<File[]>> relationshipsFiles, boolean enableStacktrace, Input input,\n+    public static void doImport( PrintStream out, PrintStream err, InputStream in, File storeDir, File logsDir, File badFile, FileSystemAbstraction fs, Collection<Option<File[]>> nodesFiles, Collection<Option<File[]>> relationshipsFiles, boolean enableStacktrace, Input input,\n                                  Config dbConfig, OutputStream badOutput,\n                                  org.neo4j.unsafe.impl.batchimport.Configuration configuration, boolean detailedProgress ) throws IOException\n-    {\n+{\n         boolean success;\n         LifeSupport life = new LifeSupport();\n-\n-        dbConfig.augment( logs_directory, logsDir.getCanonicalPath() );\n+dbConfig.augment( logs_directory, logsDir.getCanonicalPath() );\n         File internalLogFile = dbConfig.get( store_internal_log_path );\n         LogService logService = life.add( StoreLogService.withInternalLog( internalLogFile ).build( fs ) );\n         final CentralJobScheduler jobScheduler = life.add( new CentralJobScheduler() );\n-\n-        life.start();\n-        ExecutionMonitor executionMonitor = detailedProgress\n-                        ? new SpectrumExecutionMonitor( 2, TimeUnit.SECONDS, out, SpectrumExecutionMonitor.DEFAULT_WIDTH )\n-                        : ExecutionMonitors.defaultVisible( in, jobScheduler );\n-        BatchImporter importer = BatchImporterFactory.withHighestPriority().instantiate( storeDir,\n-                fs,\n-                null, // no external page cache\n-                configuration,\n-                logService, executionMonitor,\n-                EMPTY,\n-                dbConfig,\n-                RecordFormatSelector.selectForConfig( dbConfig, logService.getInternalLogProvider() ),\n-                new PrintingImportLogicMonitor( out, err ) );\n-        printOverview( storeDir, nodesFiles, relationshipsFiles, configuration, out );\n+life.start();\n+        ExecutionMonitor executionMonitor = detailedProgress ? new SpectrumExecutionMonitor( 2, TimeUnit.SECONDS, out, SpectrumExecutionMonitor.DEFAULT_WIDTH ) : ExecutionMonitors.defaultVisible( in, jobScheduler );\n+BatchImporter importer = BatchImporterFactory.withHighestPriority().instantiate( storeDir,\n+                fs, null, // no external page cache\n+                configuration, logService, executionMonitor, EMPTY, dbConfig,\n+                RecordFormatSelector.selectForConfig( dbConfig, logService.getInternalLogProvider() ), new PrintingImportLogicMonitor( out, err ) );\n+printOverview( storeDir, nodesFiles, relationshipsFiles, configuration, out );\n         success = false;\n         try\n         {\n@@ -593,35 +421,25 @@ public class ImportTool\n             long numberOfBadEntries = collector.badEntries();\n             collector.close();\n             IOUtils.closeAll( badOutput );\n-\n-            if ( badFile != null )\n+if ( badFile != null )\n             {\n                 if ( numberOfBadEntries > 0 )\n                 {\n-                    System.out.println( \"There were bad entries which were skipped and logged into \" +\n-                            badFile.getAbsolutePath() );\n-                }\n+                    System.out.println( \"There were bad entries which were skipped and logged into \" + badFile.getAbsolutePath() );\n+    }\n             }\n \n             life.shutdown();\n-\n-            if ( !success )\n+if ( !success )\n             {\n-                err.println( \"WARNING Import failed. The store files in \" + storeDir.getAbsolutePath() +\n-                        \" are left as they are, although they are likely in an unusable state. \" +\n-                        \"Starting a database on these store files will likely fail or observe inconsistent records so \" +\n-                        \"start at your own risk or delete the store manually\" );\n-            }\n+                err.println( \"WARNING Import failed. The store files in \" + storeDir.getAbsolutePath() + \" are left as they are, although they are likely in an unusable state. \" + \"Starting a database on these store files will likely fail or observe inconsistent records so \" + \"start at your own risk or delete the store manually\" );\n+    }\n         }\n     }\n \n     public static Collection<Option<File[]>> extractInputFiles( Args args, String key, PrintStream err )\n     {\n-        return args\n-                .interpretOptionsWithMetadata( key, Converters.optional(),\n-                        Converters.toFiles( MULTI_FILE_DELIMITER, Converters.regexFiles( true ) ), filesExist(\n-                                err ),\n-                        Validators.atLeast( \"--\" + key, 1 ) );\n+        return args.interpretOptionsWithMetadata( key, Converters.optional(), Converters.toFiles( MULTI_FILE_DELIMITER, Converters.regexFiles( true ) ), filesExist( err ), Validators.atLeast( \"--\" + key, 1 ) );\n     }\n \n     private static Validator<File[]> filesExist( PrintStream err )\n@@ -632,10 +450,8 @@ public class ImportTool\n             {\n                 if ( file.getName().startsWith( \":\" ) )\n                 {\n-                    err.println( \"It looks like you're trying to specify default label or relationship type (\" +\n-                                      file.getName() + \"). Please put such directly on the key, f.ex. \" +\n-                                      Options.NODE_DATA.argument() + \":MyLabel\" );\n-                }\n+                    err.println( \"It looks like you're trying to specify default label or relationship type (\" + file.getName() + \"). Please put such directly on the key, f.ex. \" + Options.NODE_DATA.argument() + \":MyLabel\" );\n+    }\n                 Validators.REGEX_FILE_EXISTS.validate( file );\n             }\n         };\n@@ -660,8 +476,7 @@ public class ImportTool\n         return file != null && file.exists() ? Config.defaults( MapUtil.load( file ) ) : Config.defaults();\n     }\n \n-    static void printOverview( File storeDir, Collection<Option<File[]>> nodesFiles,\n-            Collection<Option<File[]>> relationshipsFiles,\n+    static void printOverview( File storeDir, Collection<Option<File[]>> nodesFiles, Collection<Option<File[]>> relationshipsFiles,\n             org.neo4j.unsafe.impl.batchimport.Configuration configuration, PrintStream out )\n     {\n         out.println( \"Neo4j version: \" + Version.getNeo4jVersion() );\n@@ -694,7 +509,8 @@ public class ImportTool\n             {\n                 out.println();\n             }\n-            if ( group.metadata() != null )\n+\n+if ( group.metadata() != null )\n             {\n                 printIndented( \":\" + group.metadata(), out );\n             }\n@@ -710,8 +526,7 @@ public class ImportTool\n         out.println( \"  \" + value );\n     }\n \n-    public static void validateInputFiles( Collection<Option<File[]>> nodesFiles,\n-            Collection<Option<File[]>> relationshipsFiles )\n+    public static void validateInputFiles( Collection<Option<File[]>> nodesFiles, Collection<Option<File[]>> relationshipsFiles )\n     {\n         if ( nodesFiles.isEmpty() )\n         {\n@@ -723,16 +538,13 @@ public class ImportTool\n         }\n     }\n \n-    public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration(\n-            Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, File storeDir, Boolean defaultHighIO )\n+    public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration( Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, File storeDir, Boolean defaultHighIO )\n     {\n-        return importConfiguration(\n-                processors, defaultSettingsSuitableForTests, dbConfig, null, storeDir,\n+        return importConfiguration( processors, defaultSettingsSuitableForTests, dbConfig, null, storeDir,\n                 DEFAULT.allowCacheAllocationOnHeap(), defaultHighIO );\n     }\n \n-    public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration(\n-            Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, Long maxMemory, File storeDir,\n+    public static org.neo4j.unsafe.impl.batchimport.Configuration importConfiguration( Number processors, boolean defaultSettingsSuitableForTests, Config dbConfig, Long maxMemory, File storeDir,\n             boolean allowCacheOnHeap, Boolean defaultHighIO )\n     {\n         return new org.neo4j.unsafe.impl.batchimport.Configuration()\n@@ -778,13 +590,11 @@ public class ImportTool\n     private static String manualReference( ManualPage page, Anchor anchor )\n     {\n         // Docs are versioned major.minor-suffix, so drop the patch version.\n-        String[] versionParts = Version.getNeo4jVersion().split(\"-\");\n-        versionParts[0] = versionParts[0].substring(0, 3);\n-        String docsVersion = String.join(\"-\", versionParts);\n-\n-        return \" https://neo4j.com/docs/operations-manual/\" + docsVersion + \"/\" +\n-               page.getReference( anchor );\n-    }\n+        String[] versionParts = Version.getNeo4jVersion().split( \"-\");\n+        versionParts[0] = versionParts[0].substring( 0, 3 );\n+        String docsVersion = String.join( \"-\", versionParts);\n+return \" https://neo4j.com/docs/operations-manual/\" + docsVersion + \"/\" + page.getReference( anchor );\n+            }\n \n     /**\n      * Method name looks strange, but look at how it's used and you'll see why it's named like that.\n@@ -797,29 +607,19 @@ public class ImportTool\n         // List of common errors that can be explained to the user\n         if ( DuplicateInputIdException.class.equals( e.getClass() ) )\n         {\n-            printErrorMessage( \"Duplicate input ids that would otherwise clash can be put into separate id space, \" +\n-                               \"read more about how to use id spaces in the manual:\" +\n-                               manualReference( ManualPage.IMPORT_TOOL_FORMAT, Anchor.ID_SPACES ), e, stackTrace,\n-                    err );\n+            printErrorMessage( \"Duplicate input ids that would otherwise clash can be put into separate id space, \" + \"read more about how to use id spaces in the manual:\" + manualReference( ManualPage.IMPORT_TOOL_FORMAT, Anchor.ID_SPACES ), e, stackTrace, err );\n         }\n         else if ( MissingRelationshipDataException.class.equals( e.getClass() ) )\n         {\n-            printErrorMessage( \"Relationship missing mandatory field '\" +\n-                               ((MissingRelationshipDataException) e).getFieldType() + \"', read more about \" +\n-                               \"relationship format in the manual: \" +\n-                               manualReference( ManualPage.IMPORT_TOOL_FORMAT, Anchor.RELATIONSHIP ), e, stackTrace,\n-                    err );\n+            printErrorMessage( \"Relationship missing mandatory field '\" + ((MissingRelationshipDataException) e).getFieldType() + \"', read more about \" + \"relationship format in the manual: \" + manualReference( ManualPage.IMPORT_TOOL_FORMAT, Anchor.RELATIONSHIP ), e, stackTrace, err );\n         }\n         // This type of exception is wrapped since our input code throws InputException consistently,\n         // and so IllegalMultilineFieldException comes from the csv component, which has no access to InputException\n         // therefore it's wrapped.\n         else if ( Exceptions.contains( e, IllegalMultilineFieldException.class ) )\n         {\n-            printErrorMessage( \"Detected field which spanned multiple lines for an import where \" +\n-                               Options.MULTILINE_FIELDS.argument() + \"=false. If you know that your input data \" +\n-                               \"include fields containing new-line characters then import with this option set to \" +\n-                               \"true.\", e, stackTrace, err );\n-        }\n+            printErrorMessage( \"Detected field which spanned multiple lines for an import where \" + Options.MULTILINE_FIELDS.argument() + \"=false. If you know that your input data \" + \"include fields containing new-line characters then import with this option set to \" + \"true.\", e, stackTrace, err );\n+    }\n         else if ( Exceptions.contains( e, InputException.class ) )\n         {\n             printErrorMessage( \"Error in input data\", e, stackTrace, err );\n@@ -853,8 +653,7 @@ public class ImportTool\n         }\n     }\n \n-    public static Iterable<DataFactory>\n-            relationshipData( final Charset encoding, Collection<Option<File[]>> relationshipsFiles )\n+    public static Iterable<DataFactory> relationshipData( final Charset encoding, Collection<Option<File[]>> relationshipsFiles )\n     {\n         return new IterableWrapper<DataFactory,Option<File[]>>( relationshipsFiles )\n         {\n@@ -866,18 +665,15 @@ public class ImportTool\n         };\n     }\n \n-    public static Iterable<DataFactory> nodeData( final Charset encoding,\n-            Collection<Option<File[]>> nodesFiles )\n+    public static Iterable<DataFactory> nodeData( final Charset encoding, Collection<Option<File[]>> nodesFiles )\n     {\n         return new IterableWrapper<DataFactory,Option<File[]>>( nodesFiles )\n         {\n             @Override\n             protected DataFactory underlyingObjectToObject( Option<File[]> input )\n             {\n-                Decorator decorator = input.metadata() != null\n-                        ? additiveLabels( input.metadata().split( \":\" ) )\n-                        : NO_DECORATOR;\n-                return data( decorator, encoding, input.value() );\n+                Decorator decorator = input.metadata() != null ? additiveLabels( input.metadata().split( \":\" ) ) : NO_DECORATOR;\n+return data( decorator, encoding, input.value() );\n             }\n         };\n     }\n@@ -885,12 +681,8 @@ public class ImportTool\n     private static void printUsage( PrintStream out )\n     {\n         out.println( \"Neo4j Import Tool\" );\n-        for ( String line : Args.splitLongLine( \"neo4j-import is used to create a new Neo4j database \"\n-                                                + \"from data in CSV files. \"\n-                                                +\n-                                                \"See the chapter \\\"Import Tool\\\" in the Neo4j Manual for details on the CSV file format \"\n-                                                + \"- a special kind of header is required.\", 80 ) )\n-        {\n+        for ( String line : Args.splitLongLine( \"neo4j-import is used to create a new Neo4j database \" + \"from data in CSV files. \" + \"See the chapter \\\"Import Tool\\\" in the Neo4j Manual for details on the CSV file format \" + \"- a special kind of header is required.\", 80 ) )\n+{\n             out.println( \"\\t\" + line );\n         }\n         out.println( \"Usage:\" );\n@@ -899,9 +691,8 @@ public class ImportTool\n             option.printUsage( out );\n         }\n \n-        out.println( \"Example:\");\n-        out.print( Strings.joinAsLines(\n-                TAB + \"bin/neo4j-import --into retail.db --id-type string --nodes:Customer customers.csv \",\n+        out.println( \"Example:\" );\n+        out.print( Strings.joinAsLines( TAB + \"bin/neo4j-import --into retail.db --id-type string --nodes:Customer customers.csv \",\n                 TAB + \"--nodes products.csv --nodes orders_header.csv,orders1.csv,orders2.csv \",\n                 TAB + \"--relationships:CONTAINS order_details.csv \",\n                 TAB + \"--relationships:ORDERED customer_orders_header.csv,orders1.csv,orders2.csv\" ) );\n@@ -935,84 +726,61 @@ public class ImportTool\n     public static Configuration csvConfiguration( Args args, final boolean defaultSettingsSuitableForTests )\n     {\n         final Configuration defaultConfiguration = COMMAS;\n-        final Character specificDelimiter = args.interpretOption( Options.DELIMITER.key(),\n-                Converters.optional(), CHARACTER_CONVERTER );\n-        final Character specificArrayDelimiter = args.interpretOption( Options.ARRAY_DELIMITER.key(),\n-                Converters.optional(), CHARACTER_CONVERTER );\n-        final Character specificQuote = args.interpretOption( Options.QUOTE.key(), Converters.optional(),\n-                CHARACTER_CONVERTER );\n-        final Boolean multiLineFields = args.getBoolean( Options.MULTILINE_FIELDS.key(), null );\n+        final Character specificDelimiter = args.interpretOption( Options.DELIMITER.key(), Converters.optional(), CHARACTER_CONVERTER ); final Character specificArrayDelimiter = args.interpretOption( Options.ARRAY_DELIMITER.key(), Converters.optional(), CHARACTER_CONVERTER ); final Character specificQuote = args.interpretOption( Options.QUOTE.key(), Converters.optional(),\n+                CHARACTER_CONVERTER ); final Boolean multiLineFields = args.getBoolean( Options.MULTILINE_FIELDS.key(), null );\n         final Boolean emptyStringsAsNull = args.getBoolean( Options.IGNORE_EMPTY_STRINGS.key(), null );\n-        final Boolean trimStrings = args.getBoolean( Options.TRIM_STRINGS.key(), null);\n+        final Boolean trimStrings = args.getBoolean( Options.TRIM_STRINGS.key(), null );\n         final Boolean legacyStyleQuoting = args.getBoolean( Options.LEGACY_STYLE_QUOTING.key(), null );\n-        final Number bufferSize = args.has( Options.READ_BUFFER_SIZE.key() )\n-                ? parseLongWithUnit( args.get( Options.READ_BUFFER_SIZE.key(), null ) )\n-                : null;\n-        return new Configuration.Default()\n+        final Number bufferSize = args.has( Options.READ_BUFFER_SIZE.key() ) ? parseLongWithUnit( args.get( Options.READ_BUFFER_SIZE.key(), null ) ) : null;\n+return new Configuration.Default()\n         {\n             @Override\n             public char delimiter()\n             {\n-                return specificDelimiter != null\n-                        ? specificDelimiter\n-                        : defaultConfiguration.delimiter();\n+                return specificDelimiter != null ? specificDelimiter: defaultConfiguration.delimiter();\n             }\n \n             @Override\n             public char arrayDelimiter()\n             {\n-                return specificArrayDelimiter != null\n-                        ? specificArrayDelimiter\n-                        : defaultConfiguration.arrayDelimiter();\n+                return specificArrayDelimiter != null ? specificArrayDelimiter: defaultConfiguration.arrayDelimiter();\n             }\n \n             @Override\n             public char quotationCharacter()\n             {\n-                return specificQuote != null\n-                        ? specificQuote\n-                        : defaultConfiguration.quotationCharacter();\n+                return specificQuote != null ? specificQuote: defaultConfiguration.quotationCharacter();\n             }\n \n             @Override\n             public boolean multilineFields()\n             {\n-                return multiLineFields != null\n-                        ? multiLineFields\n-                        : defaultConfiguration.multilineFields();\n+                return multiLineFields != null ? multiLineFields: defaultConfiguration.multilineFields();\n             }\n \n             @Override\n             public boolean emptyQuotedStringsAsNull()\n             {\n-                return emptyStringsAsNull != null\n-                        ? emptyStringsAsNull\n-                        : defaultConfiguration.emptyQuotedStringsAsNull();\n+                return emptyStringsAsNull != null ? emptyStringsAsNull: defaultConfiguration.emptyQuotedStringsAsNull();\n             }\n \n             @Override\n             public int bufferSize()\n             {\n-                return bufferSize != null\n-                        ? bufferSize.intValue()\n-                        : defaultSettingsSuitableForTests ? 10_000 : super.bufferSize();\n+                return bufferSize != null ? bufferSize.intValue() : defaultSettingsSuitableForTests ? 10_000 : super.bufferSize();\n             }\n \n             @Override\n             public boolean trimStrings()\n             {\n-                return trimStrings != null\n-                       ? trimStrings\n-                       : defaultConfiguration.trimStrings();\n-            }\n+                return trimStrings != null ? trimStrings: defaultConfiguration.trimStrings();\n+    }\n \n             @Override\n             public boolean legacyStyleQuoting()\n             {\n-                return legacyStyleQuoting != null\n-                        ? legacyStyleQuoting\n-                        : defaultConfiguration.legacyStyleQuoting();\n-            }\n+                return legacyStyleQuoting != null ? legacyStyleQuoting: defaultConfiguration.legacyStyleQuoting();\n+    }\n         };\n     }\n \n@@ -1040,8 +808,7 @@ public class ImportTool\n \n     private enum Anchor\n     {\n-        ID_SPACES( \"import-tool-id-spaces\" ),\n-        RELATIONSHIP( \"import-tool-header-format-rels\" );\n+        ID_SPACES( \"import-tool-id-spaces\" ), RELATIONSHIP( \"import-tool-header-format-rels\" );\n \n         private final String anchor;\n \n@@ -1050,4 +817,4 @@ public class ImportTool\n             this.anchor = anchor;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 342
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
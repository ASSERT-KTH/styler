{
    "project_name": "apache-iotdb",
    "error_id": "250",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.read.query.executor;\n\nimport org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\nimport org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/250/ExecutorWithTimeGenerator.java\nindex 90e41d439ff..d6ff57fefae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/250/ExecutorWithTimeGenerator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.executor;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/250/ExecutorWithTimeGenerator.java\nindex 90e41d439ff..d6ff57fefae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/250/ExecutorWithTimeGenerator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.executor;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "'IExpression' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/250/ExecutorWithTimeGenerator.java\nindex 90e41d439ff..9c48e7f5085 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/250/ExecutorWithTimeGenerator.java\n@@ -31,7 +31,6 @@ import org.apache.iotdb.tsfile.read.query.dataset.DataSetWithTimeGenerator;\n import org.apache.iotdb.tsfile.read.query.timegenerator.TimeGenerator;\n import org.apache.iotdb.tsfile.read.query.timegenerator.TsFileTimeGenerator;\n import org.apache.iotdb.tsfile.read.reader.series.FileSeriesReaderByTimestamp;\n-\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.HashSet;\n@@ -54,9 +53,9 @@ public class ExecutorWithTimeGenerator implements QueryExecutor {\n    *\n    * @return DataSet with TimeGenerator\n    */\n+\n   @Override\n   public DataSetWithTimeGenerator execute(QueryExpression queryExpression) throws IOException {\n-\n     IExpression expression = queryExpression.getExpression();\n     List<Path> selectedPathList = queryExpression.getSelectedSeries();\n \n@@ -65,17 +64,14 @@ public class ExecutorWithTimeGenerator implements QueryExecutor {\n \n     // the size of hasFilter is equal to selectedPathList, if a series has a filter, it is true,\n     // otherwise false\n-    List<Boolean> cached =\n-        markFilterdPaths(expression, selectedPathList, timeGenerator.hasOrNode());\n+    List<Boolean> cached = markFilterdPaths(expression, selectedPathList, timeGenerator.hasOrNode());\n     List<FileSeriesReaderByTimestamp> readersOfSelectedSeries = new ArrayList<>();\n     List<TSDataType> dataTypes = new ArrayList<>();\n-\n     Iterator<Boolean> cachedIterator = cached.iterator();\n     Iterator<Path> selectedPathIterator = selectedPathList.iterator();\n     while (cachedIterator.hasNext()) {\n       boolean cachedValue = cachedIterator.next();\n       Path selectedPath = selectedPathIterator.next();\n-\n       List<ChunkMetadata> chunkMetadataList = metadataQuerier.getChunkMetaDataList(selectedPath);\n       if (chunkMetadataList.size() != 0) {\n         dataTypes.add(chunkMetadataList.get(0).getDataType());\n@@ -83,21 +79,18 @@ public class ExecutorWithTimeGenerator implements QueryExecutor {\n           readersOfSelectedSeries.add(null);\n           continue;\n         }\n-        FileSeriesReaderByTimestamp seriesReader =\n-            new FileSeriesReaderByTimestamp(chunkLoader, chunkMetadataList);\n+        FileSeriesReaderByTimestamp seriesReader = new FileSeriesReaderByTimestamp(chunkLoader, chunkMetadataList);\n         readersOfSelectedSeries.add(seriesReader);\n       } else {\n         selectedPathIterator.remove();\n         cachedIterator.remove();\n       }\n     }\n-\n-    return new DataSetWithTimeGenerator(\n-        selectedPathList, cached, dataTypes, timeGenerator, readersOfSelectedSeries);\n+    return new DataSetWithTimeGenerator(selectedPathList, cached, dataTypes, timeGenerator, readersOfSelectedSeries);\n   }\n \n   public static List<Boolean> markFilterdPaths(\n-      IExpression expression, List<Path> selectedPaths, boolean hasOrNode) {\n+    IExpression expression, List<Path> selectedPaths, boolean hasOrNode) {\n     List<Boolean> cached = new ArrayList<>();\n     if (hasOrNode) {\n       for (Path ignored : selectedPaths) {\n@@ -105,14 +98,11 @@ public class ExecutorWithTimeGenerator implements QueryExecutor {\n       }\n       return cached;\n     }\n-\n     HashSet<Path> filteredPaths = new HashSet<>();\n     getAllFilteredPaths(expression, filteredPaths);\n-\n     for (Path selectedPath : selectedPaths) {\n       cached.add(filteredPaths.contains(selectedPath));\n     }\n-\n     return cached;\n   }\n \n@@ -124,4 +114,4 @@ public class ExecutorWithTimeGenerator implements QueryExecutor {\n       paths.add(((SingleSeriesExpression) expression).getSeriesPath());\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/250/ExecutorWithTimeGenerator.java\nindex 90e41d439ff..d6ff57fefae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/250/ExecutorWithTimeGenerator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.executor;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/250/ExecutorWithTimeGenerator.java\nindex 90e41d439ff..d6ff57fefae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/250/ExecutorWithTimeGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/250/ExecutorWithTimeGenerator.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.query.executor;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
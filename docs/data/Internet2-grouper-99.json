{
    "project_name": "Internet2-grouper",
    "error_id": "99",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * style license a copy of which has been included with this distribution in\n * the LICENSE.txt file.\n * \n * Created on 06. April 2004 by Joe Walnes\n */\npackage edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.core.util;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/99/Fields.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/99/Fields.java\nindex e3de8133c40..d4ea3ad3df3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/99/Fields.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/99/Fields.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -21,9 +21,10 @@\n  * The software in this package is published under the terms of the BSD\r\n  * style license a copy of which has been included with this distribution in\r\n  * the LICENSE.txt file.\r\n- * \r\n+ *\r\n  * Created on 06. April 2004 by Joe Walnes\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.core.util;\r\n \r\n import java.lang.reflect.Field;\r\n@@ -35,29 +36,29 @@ import java.lang.reflect.Field;\n  * @author Joe Walnes\r\n  */\r\n public class Fields {\r\n-    public static Field find(Class type, String name) {\r\n-        try {\r\n-            Field result = type.getDeclaredField(name);\r\n-            result.setAccessible(true);\r\n-            return result;\r\n-        } catch (NoSuchFieldException e) {\r\n-            throw new RuntimeException(\"Could not access \" + type.getName() + \".\" + name + \" field\");\r\n-        }\r\n+  public static Field find(Class type, String name) {\r\n+    try {\r\n+      Field result = type.getDeclaredField(name);\r\n+      result.setAccessible(true);\r\n+      return result;\r\n+    } catch (NoSuchFieldException e) {\r\n+      throw new RuntimeException(\"Could not access \" + type.getName() + \".\" + name + \" field\");\r\n     }\r\n+  }\r\n \r\n-    public static void write(Field field, Object instance, Object value) {\r\n-        try {\r\n-            field.set(instance, value);\r\n-        } catch (IllegalAccessException e) {\r\n-            throw new RuntimeException(\"Could not write \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n-        }\r\n+  public static void write(Field field, Object instance, Object value) {\r\n+    try {\r\n+      field.set(instance, value);\r\n+    } catch (IllegalAccessException e) {\r\n+      throw new RuntimeException(\"Could not write \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n     }\r\n+  }\r\n \r\n-    public static Object read(Field field, Object instance) {\r\n-        try {\r\n-            return field.get(instance);\r\n-        } catch (IllegalAccessException e) {\r\n-            throw new RuntimeException(\"Could not read \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n-        }\r\n+  public static Object read(Field field, Object instance) {\r\n+    try {\r\n+      return field.get(instance);\r\n+    } catch (IllegalAccessException e) {\r\n+      throw new RuntimeException(\"Could not read \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n     }\r\n+  }\r\n }\r\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/99/Fields.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/99/Fields.java\nindex e3de8133c40..71e10805eb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/99/Fields.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/99/Fields.java\n@@ -60,4 +60,4 @@ public class Fields {\n             throw new RuntimeException(\"Could not read \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n         }\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/99/Fields.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/99/Fields.java\nindex e3de8133c40..e9c934f6fff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/99/Fields.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/99/Fields.java\n@@ -24,8 +24,8 @@\n  * \r\n  * Created on 06. April 2004 by Joe Walnes\r\n  */\r\n-package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.core.util;\r\n-\r\n+package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.core.util;\n+\n import java.lang.reflect.Field;\r\n \r\n /**\r\n@@ -33,31 +33,35 @@ import java.lang.reflect.Field;\n  * wraps exception in RuntimeExceptions.\r\n  *\r\n  * @author Joe Walnes\r\n- */\r\n-public class Fields {\r\n-    public static Field find(Class type, String name) {\r\n-        try {\r\n-            Field result = type.getDeclaredField(name);\r\n-            result.setAccessible(true);\r\n-            return result;\r\n-        } catch (NoSuchFieldException e) {\r\n-            throw new RuntimeException(\"Could not access \" + type.getName() + \".\" + name + \" field\");\r\n-        }\r\n-    }\r\n-\r\n-    public static void write(Field field, Object instance, Object value) {\r\n-        try {\r\n-            field.set(instance, value);\r\n-        } catch (IllegalAccessException e) {\r\n-            throw new RuntimeException(\"Could not write \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n-        }\r\n-    }\r\n-\r\n-    public static Object read(Field field, Object instance) {\r\n-        try {\r\n-            return field.get(instance);\r\n-        } catch (IllegalAccessException e) {\r\n-            throw new RuntimeException(\"Could not read \" + field.getType().getName() + \".\" + field.getName() + \" field\");\r\n-        }\r\n-    }\r\n-}\r\n+ */\n+\n+\n+public class Fields {\n+    public static Field find(Class type, String name) {\n+        try {\n+            Field result = type.getDeclaredField(name);\n+            result.setAccessible(true);\n+            return result;\n+        } catch (NoSuchFieldException e) {\n+            throw new RuntimeException(\"Could not access \" + type.getName() + \".\" + name + \" field\");\n+        }\n+    }\n+\n+\n+    public static void write(Field field, Object instance, Object value) {\n+        try {\n+            field.set(instance, value);\n+        } catch (IllegalAccessException e) {\n+            throw new RuntimeException(\"Could not write \" + field.getType().getName() + \".\" + field.getName() + \" field\");\n+        }\n+    }\n+\n+\n+    public static Object read(Field field, Object instance) {\n+        try {\n+            return field.get(instance);\n+        } catch (IllegalAccessException e) {\n+            throw new RuntimeException(\"Could not read \" + field.getType().getName() + \".\" + field.getName() + \" field\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
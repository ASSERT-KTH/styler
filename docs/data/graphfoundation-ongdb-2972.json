{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2972",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2972/ExplicitIndexTransactionState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2972/ExplicitIndexTransactionState.java\nindex b0f7a516102..ebf56824b0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2972/ExplicitIndexTransactionState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2972/ExplicitIndexTransactionState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.txstate;\n \n import java.util.Map;\n@@ -34,31 +35,31 @@ import org.neo4j.kernel.impl.transaction.state.RecordState;\n  */\n public interface ExplicitIndexTransactionState extends RecordState\n {\n-    ExplicitIndex nodeChanges( String indexName ) throws ExplicitIndexNotFoundKernelException;\n+  ExplicitIndex nodeChanges(String indexName) throws ExplicitIndexNotFoundKernelException;\n \n-    ExplicitIndex relationshipChanges( String indexName ) throws ExplicitIndexNotFoundKernelException;\n+  ExplicitIndex relationshipChanges(String indexName) throws ExplicitIndexNotFoundKernelException;\n \n-    void createIndex( IndexEntityType entityType, String indexName, Map<String, String> config );\n+  void createIndex(IndexEntityType entityType, String indexName, Map<String, String> config);\n \n-    void deleteIndex( IndexEntityType entityType, String indexName );\n+  void deleteIndex(IndexEntityType entityType, String indexName);\n \n-    /**\n-     * Checks whether or not index with specific {@code name} exists.\n-     * Optionally the specific {@code config} is verified to be matching.\n-     *\n-     * This method can either return {@code boolean} or {@code throw} exception on:\n-     * <ul>\n-     * <li>index exists, config is provided and matching => {@code true}</li>\n-     * <li>index exists, config is provided and NOT matching => {@code throw exception}</li>\n-     * <li>index exists, config is NOT provided => {@code true}</li>\n-     * <li>index does NOT exist => {@code false}</li>\n-     * </ul>\n-     *\n-     * @param entityType {@link IndexEntityType} for the index.\n-     * @param indexName name of the index.\n-     * @param config configuration which must match the existing index, if it exists. {@code null} means\n-     * that the configuration doesn't need to be checked.\n-     * @return {@code true} if the index with the specific {@code name} and {@code entityType} exists, otherwise {@code false}.\n-     */\n-    boolean checkIndexExistence( IndexEntityType entityType, String indexName, Map<String, String> config );\n+  /**\n+   * Checks whether or not index with specific {@code name} exists.\n+   * Optionally the specific {@code config} is verified to be matching.\n+   * <p>\n+   * This method can either return {@code boolean} or {@code throw} exception on:\n+   * <ul>\n+   * <li>index exists, config is provided and matching => {@code true}</li>\n+   * <li>index exists, config is provided and NOT matching => {@code throw exception}</li>\n+   * <li>index exists, config is NOT provided => {@code true}</li>\n+   * <li>index does NOT exist => {@code false}</li>\n+   * </ul>\n+   *\n+   * @param entityType {@link IndexEntityType} for the index.\n+   * @param indexName  name of the index.\n+   * @param config     configuration which must match the existing index, if it exists. {@code null} means\n+   *                   that the configuration doesn't need to be checked.\n+   * @return {@code true} if the index with the specific {@code name} and {@code entityType} exists, otherwise {@code false}.\n+   */\n+  boolean checkIndexExistence(IndexEntityType entityType, String indexName, Map<String, String> config);\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2972/ExplicitIndexTransactionState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2972/ExplicitIndexTransactionState.java\nindex b0f7a516102..73bce0c2252 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2972/ExplicitIndexTransactionState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2972/ExplicitIndexTransactionState.java\n@@ -38,7 +38,7 @@ public interface ExplicitIndexTransactionState extends RecordState\n \n     ExplicitIndex relationshipChanges( String indexName ) throws ExplicitIndexNotFoundKernelException;\n \n-    void createIndex( IndexEntityType entityType, String indexName, Map<String, String> config );\n+    void createIndex( IndexEntityType entityType, String indexName, Map<String,String> config );\n \n     void deleteIndex( IndexEntityType entityType, String indexName );\n \n@@ -60,5 +60,5 @@ public interface ExplicitIndexTransactionState extends RecordState\n      * that the configuration doesn't need to be checked.\n      * @return {@code true} if the index with the specific {@code name} and {@code entityType} exists, otherwise {@code false}.\n      */\n-    boolean checkIndexExistence( IndexEntityType entityType, String indexName, Map<String, String> config );\n-}\n+    boolean checkIndexExistence( IndexEntityType entityType, String indexName, Map<String,String> config );\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
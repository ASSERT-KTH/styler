{
    "project_name": "twilio-twilio-java",
    "error_id": "1079",
    "information": {
        "errors": [
            {
                "line": "141",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/1079/MessagingConfigurationReader.java\nindex 69c6b51f9bd..d1d946bfa45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/1079/MessagingConfigurationReader.java\n@@ -138,7 +138,7 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/1079/MessagingConfigurationReader.java\nindex 69c6b51f9bd..ea35b1519b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/1079/MessagingConfigurationReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.verify.v2.service;\n@@ -138,7 +138,7 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/1079/MessagingConfigurationReader.java\nindex 69c6b51f9bd..9dc3db9a376 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/1079/MessagingConfigurationReader.java\n@@ -28,6 +28,8 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param pathServiceSid The SID of the Service that the resource is associated\n      *                       with\n      */\n+\n+\n     public MessagingConfigurationReader(final String pathServiceSid) {\n         this.pathServiceSid = pathServiceSid;\n     }\n@@ -38,6 +40,8 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param client TwilioRestClient with which to make the request\n      * @return MessagingConfiguration ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<MessagingConfiguration> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -49,14 +53,15 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param client TwilioRestClient with which to make the request\n      * @return MessagingConfiguration ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<MessagingConfiguration> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.VERIFY.toString(),\n-            \"/v2/Services/\" + this.pathServiceSid + \"/MessagingConfigurations\",\n-            client.getRegion()\n+                              HttpMethod.GET,\n+                              Domains.VERIFY.toString(),\n+                              \"/v2/Services/\" + this.pathServiceSid + \"/MessagingConfigurations\",\n+                              client.getRegion()\n         );\n \n         addQueryParams(request);\n@@ -70,14 +75,12 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param client TwilioRestClient with which to make the request\n      * @return MessagingConfiguration ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<MessagingConfiguration> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<MessagingConfiguration> getPage(final String targetUrl,\n+                                                final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -88,15 +91,13 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<MessagingConfiguration> nextPage(final Page<MessagingConfiguration> page,\n                                                  final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.VERIFY.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getNextPageUrl(Domains.VERIFY.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -108,15 +109,13 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<MessagingConfiguration> previousPage(final Page<MessagingConfiguration> page,\n                                                      final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.VERIFY.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getPreviousPageUrl(Domains.VERIFY.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -128,9 +127,11 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<MessagingConfiguration> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<MessagingConfiguration> pageForRequest(final TwilioRestClient client,\n+                                                        final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"MessagingConfiguration read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -138,7 +139,8 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -146,7 +148,7 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n             response.getContent(),\n             MessagingConfiguration.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -154,6 +156,8 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/1079/MessagingConfigurationReader.java\nindex 69c6b51f9bd..d1d946bfa45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/1079/MessagingConfigurationReader.java\n@@ -138,7 +138,7 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/1079/MessagingConfigurationReader.java\nindex 69c6b51f9bd..d97d81fa670 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1079/MessagingConfigurationReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/1079/MessagingConfigurationReader.java\n@@ -138,7 +138,8 @@ public class MessagingConfigurationReader extends Reader<MessagingConfiguration>\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
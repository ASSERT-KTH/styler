{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4089",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4089/Neo4JTemporalField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4089/Neo4JTemporalField.java\nindex 8959b5ca400..b019ee874e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4089/Neo4JTemporalField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4089/Neo4JTemporalField.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.Year;\n@@ -37,94 +38,94 @@ import static java.time.temporal.ChronoUnit.YEARS;\n \n enum Neo4JTemporalField implements TemporalField\n {\n-    YEAR_OF_DECADE( \"Year of decade\", YEARS, DECADES, 10 ),\n-    YEAR_OF_CENTURY( \"Year of century\", YEARS, CENTURIES, 100 ),\n-    YEAR_OF_MILLENNIUM( \"Millennium\", YEARS, MILLENNIA, 1000 );\n-\n-    private final String name;\n-    private final TemporalUnit baseUnit;\n-    private final TemporalUnit rangeUnit;\n-    private final int years;\n-    private final ValueRange range;\n-\n-    Neo4JTemporalField( String name, TemporalUnit baseUnit, TemporalUnit rangeUnit, int years )\n-    {\n-        this.name = name;\n-        this.baseUnit = baseUnit;\n-        this.rangeUnit = rangeUnit;\n-        this.years = years;\n-        this.range = ValueRange.of( Year.MIN_VALUE / years, Year.MAX_VALUE / years );\n-    }\n-\n-    @Override\n-    public String getDisplayName( Locale locale )\n-    {\n-        return name;\n-    }\n-\n-    @Override\n-    public TemporalUnit getBaseUnit()\n-    {\n-        return baseUnit;\n-    }\n-\n-    @Override\n-    public TemporalUnit getRangeUnit()\n-    {\n-        return rangeUnit;\n-    }\n-\n-    @Override\n-    public ValueRange range()\n-    {\n-        return range;\n-    }\n-\n-    @Override\n-    public boolean isDateBased()\n-    {\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean isTimeBased()\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean isSupportedBy( TemporalAccessor temporal )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public ValueRange rangeRefinedBy( TemporalAccessor temporal )\n-    {\n-        // Always identical\n-        return range();\n-    }\n-\n-    @Override\n-    public long getFrom( TemporalAccessor temporal )\n-    {\n-        throw new UnsupportedOperationException( \"Getting a \" + this.name + \" from temporal values is not supported.\" );\n-    }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public <R extends Temporal> R adjustInto( R temporal, long newValue )\n-    {\n-        int newVal = range.checkValidIntValue( newValue, this );\n-        int oldYear = temporal.get( ChronoField.YEAR );\n-        return (R) temporal.with( ChronoField.YEAR, (oldYear / years) * years + newVal )\n-                           .with( TemporalAdjusters.firstDayOfYear() );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return name;\n-    }\n+  YEAR_OF_DECADE(\"Year of decade\", YEARS, DECADES, 10),\n+  YEAR_OF_CENTURY(\"Year of century\", YEARS, CENTURIES, 100),\n+  YEAR_OF_MILLENNIUM(\"Millennium\", YEARS, MILLENNIA, 1000);\n+\n+  private final String name;\n+  private final TemporalUnit baseUnit;\n+  private final TemporalUnit rangeUnit;\n+  private final int years;\n+  private final ValueRange range;\n+\n+  Neo4JTemporalField(String name, TemporalUnit baseUnit, TemporalUnit rangeUnit, int years)\n+  {\n+    this.name = name;\n+    this.baseUnit = baseUnit;\n+    this.rangeUnit = rangeUnit;\n+    this.years = years;\n+    this.range = ValueRange.of(Year.MIN_VALUE / years, Year.MAX_VALUE / years);\n+  }\n+\n+  @Override\n+  public String getDisplayName(Locale locale)\n+  {\n+    return name;\n+  }\n+\n+  @Override\n+  public TemporalUnit getBaseUnit()\n+  {\n+    return baseUnit;\n+  }\n+\n+  @Override\n+  public TemporalUnit getRangeUnit()\n+  {\n+    return rangeUnit;\n+  }\n+\n+  @Override\n+  public ValueRange range()\n+  {\n+    return range;\n+  }\n+\n+  @Override\n+  public boolean isDateBased()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n+  public boolean isTimeBased()\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean isSupportedBy(TemporalAccessor temporal)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public ValueRange rangeRefinedBy(TemporalAccessor temporal)\n+  {\n+    // Always identical\n+    return range();\n+  }\n+\n+  @Override\n+  public long getFrom(TemporalAccessor temporal)\n+  {\n+    throw new UnsupportedOperationException(\"Getting a \" + this.name + \" from temporal values is not supported.\");\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public <R extends Temporal> R adjustInto(R temporal, long newValue)\n+  {\n+    int newVal = range.checkValidIntValue(newValue, this);\n+    int oldYear = temporal.get(ChronoField.YEAR);\n+    return (R) temporal.with(ChronoField.YEAR, (oldYear / years) * years + newVal)\n+        .with(TemporalAdjusters.firstDayOfYear());\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return name;\n+  }\n \n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4089/Neo4JTemporalField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4089/Neo4JTemporalField.java\nindex 8959b5ca400..143e3669c35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4089/Neo4JTemporalField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4089/Neo4JTemporalField.java\n@@ -37,9 +37,7 @@ import static java.time.temporal.ChronoUnit.YEARS;\n \n enum Neo4JTemporalField implements TemporalField\n {\n-    YEAR_OF_DECADE( \"Year of decade\", YEARS, DECADES, 10 ),\n-    YEAR_OF_CENTURY( \"Year of century\", YEARS, CENTURIES, 100 ),\n-    YEAR_OF_MILLENNIUM( \"Millennium\", YEARS, MILLENNIA, 1000 );\n+    YEAR_OF_DECADE( \"Year of decade\", YEARS, DECADES, 10 ), YEAR_OF_CENTURY( \"Year of century\", YEARS, CENTURIES, 100 ), YEAR_OF_MILLENNIUM( \"Millennium\", YEARS, MILLENNIA, 1000 );\n \n     private final String name;\n     private final TemporalUnit baseUnit;\n@@ -117,8 +115,7 @@ enum Neo4JTemporalField implements TemporalField\n     {\n         int newVal = range.checkValidIntValue( newValue, this );\n         int oldYear = temporal.get( ChronoField.YEAR );\n-        return (R) temporal.with( ChronoField.YEAR, (oldYear / years) * years + newVal )\n-                           .with( TemporalAdjusters.firstDayOfYear() );\n+        return (R) temporal.with( ChronoField.YEAR, ( oldYear / years) * years + newVal ).with( TemporalAdjusters.firstDayOfYear() );\n     }\n \n     @Override\n@@ -126,5 +123,4 @@ enum Neo4JTemporalField implements TemporalField\n     {\n         return name;\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
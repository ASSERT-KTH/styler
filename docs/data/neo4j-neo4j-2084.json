{
    "project_name": "neo4j-neo4j",
    "error_id": "2084",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2084/TokenScanLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2084/TokenScanLayout.java\nindex 14320b8c88e..a1eb5e1ea9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2084/TokenScanLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2084/TokenScanLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -36,11 +37,11 @@ import org.neo4j.io.pagecache.PageCursor;\n  * </li>\n  * </ul>\n  */\n-public class TokenScanLayout extends Layout.Adapter<TokenScanKey,TokenScanValue>\n+public class TokenScanLayout extends Layout.Adapter<TokenScanKey, TokenScanValue>\n {\n     public TokenScanLayout()\n     {\n-        super( true, Layout.namedIdentifier( IDENTIFIER_NAME, TokenScanValue.RANGE_SIZE ), 0, 1 );\n+        super(true, Layout.namedIdentifier(IDENTIFIER_NAME, TokenScanValue.RANGE_SIZE), 0, 1);\n     }\n \n     /**\n@@ -57,10 +58,10 @@ public class TokenScanLayout extends Layout.Adapter<TokenScanKey,TokenScanValue>\n      * Compares {@link TokenScanKey}, giving ascending order of {@code tokenId} then {@code entityIdRange}.\n      */\n     @Override\n-    public int compare( TokenScanKey o1, TokenScanKey o2 )\n+    public int compare(TokenScanKey o1, TokenScanKey o2)\n     {\n-        int tokenComparison = Integer.compare( o1.tokenId, o2.tokenId );\n-        return tokenComparison != 0 ? tokenComparison : Long.compare( o1.idRange, o2.idRange );\n+        int tokenComparison = Integer.compare(o1.tokenId, o2.tokenId);\n+        return tokenComparison != 0 ? tokenComparison : Long.compare(o1.idRange, o2.idRange);\n     }\n \n     @Override\n@@ -70,7 +71,7 @@ public class TokenScanLayout extends Layout.Adapter<TokenScanKey,TokenScanValue>\n     }\n \n     @Override\n-    public TokenScanKey copyKey( TokenScanKey key, TokenScanKey into )\n+    public TokenScanKey copyKey(TokenScanKey key, TokenScanKey into)\n     {\n         into.tokenId = key.tokenId;\n         into.idRange = key.idRange;\n@@ -84,44 +85,44 @@ public class TokenScanLayout extends Layout.Adapter<TokenScanKey,TokenScanValue>\n     }\n \n     @Override\n-    public int keySize( TokenScanKey key )\n+    public int keySize(TokenScanKey key)\n     {\n         return KEY_SIZE;\n     }\n \n     @Override\n-    public int valueSize( TokenScanValue value )\n+    public int valueSize(TokenScanValue value)\n     {\n         return TokenScanValue.RANGE_SIZE_BYTES;\n     }\n \n     @Override\n-    public void writeKey( PageCursor cursor, TokenScanKey key )\n+    public void writeKey(PageCursor cursor, TokenScanKey key)\n     {\n-        cursor.putInt( key.tokenId );\n-        put6ByteLong( cursor, key.idRange );\n+        cursor.putInt(key.tokenId);\n+        put6ByteLong(cursor, key.idRange);\n     }\n \n-    private static void put6ByteLong( PageCursor cursor, long value )\n+    private static void put6ByteLong(PageCursor cursor, long value)\n     {\n-        cursor.putInt( (int) value );\n-        cursor.putShort( (short) (value >>> Integer.SIZE) );\n+        cursor.putInt((int) value);\n+        cursor.putShort((short) (value >>> Integer.SIZE));\n     }\n \n     @Override\n-    public void writeValue( PageCursor cursor, TokenScanValue value )\n+    public void writeValue(PageCursor cursor, TokenScanValue value)\n     {\n-        cursor.putLong( value.bits );\n+        cursor.putLong(value.bits);\n     }\n \n     @Override\n-    public void readKey( PageCursor cursor, TokenScanKey into, int keySize )\n+    public void readKey(PageCursor cursor, TokenScanKey into, int keySize)\n     {\n         into.tokenId = cursor.getInt();\n-        into.idRange = get6ByteLong( cursor );\n+        into.idRange = get6ByteLong(cursor);\n     }\n \n-    private static long get6ByteLong( PageCursor cursor )\n+    private static long get6ByteLong(PageCursor cursor)\n     {\n         long low4b = cursor.getInt() & 0xFFFFFFFFL;\n         long high2b = cursor.getShort();\n@@ -129,20 +130,20 @@ public class TokenScanLayout extends Layout.Adapter<TokenScanKey,TokenScanValue>\n     }\n \n     @Override\n-    public void readValue( PageCursor cursor, TokenScanValue into, int valueSize )\n+    public void readValue(PageCursor cursor, TokenScanValue into, int valueSize)\n     {\n         into.bits = cursor.getLong();\n     }\n \n     @Override\n-    public void initializeAsLowest( TokenScanKey key )\n+    public void initializeAsLowest(TokenScanKey key)\n     {\n-        key.set( Integer.MIN_VALUE, Long.MIN_VALUE );\n+        key.set(Integer.MIN_VALUE, Long.MIN_VALUE);\n     }\n \n     @Override\n-    public void initializeAsHighest( TokenScanKey key )\n+    public void initializeAsHighest(TokenScanKey key)\n     {\n-        key.set( Integer.MAX_VALUE, Long.MAX_VALUE );\n+        key.set(Integer.MAX_VALUE, Long.MAX_VALUE);\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2084/TokenScanLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2084/TokenScanLayout.java\nindex 14320b8c88e..ae83db39a23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2084/TokenScanLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2084/TokenScanLayout.java\n@@ -145,4 +145,4 @@ public class TokenScanLayout extends Layout.Adapter<TokenScanKey,TokenScanValue>\n     {\n         key.set( Integer.MAX_VALUE, Long.MAX_VALUE );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
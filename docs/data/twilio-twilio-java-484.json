{
    "project_name": "twilio-twilio-java",
    "error_id": "484",
    "information": {
        "errors": [
            {
                "line": "218",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/484/BindingReader.java\nindex 66612a8991d..4a42b0d4b7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/484/BindingReader.java\n@@ -215,7 +215,7 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/484/BindingReader.java\nindex 66612a8991d..5eb240de196 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/484/BindingReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.notify.v1.service;\n@@ -215,7 +215,7 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/484/BindingReader.java\nindex 66612a8991d..d9f21350cb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/484/BindingReader.java\n@@ -21,13 +21,13 @@ import com.twilio.http.Response;\n import com.twilio.http.TwilioRestClient;\n import com.twilio.rest.Domains;\n import org.joda.time.LocalDate;\n-\n import java.util.List;\n \n /**\n  * PLEASE NOTE that this class contains beta products that are subject to\n  * change. Use them with caution.\n  */\n+\n public class BindingReader extends Reader<Binding> {\n     private final String pathServiceSid;\n     private LocalDate startDate;\n@@ -40,6 +40,8 @@ public class BindingReader extends Reader<Binding> {\n      *\n      * @param pathServiceSid The SID of the Service to read the resource from\n      */\n+\n+\n     public BindingReader(final String pathServiceSid) {\n         this.pathServiceSid = pathServiceSid;\n     }\n@@ -51,6 +53,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param startDate Only include usage that has occurred on or after this date\n      * @return this\n      */\n+\n+\n     public BindingReader setStartDate(final LocalDate startDate) {\n         this.startDate = startDate;\n         return this;\n@@ -63,6 +67,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param endDate Only include usage that occurred on or before this date\n      * @return this\n      */\n+\n+\n     public BindingReader setEndDate(final LocalDate endDate) {\n         this.endDate = endDate;\n         return this;\n@@ -75,6 +81,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param identity The `identity` value of the resources to read\n      * @return this\n      */\n+\n+\n     public BindingReader setIdentity(final List<String> identity) {\n         this.identity = identity;\n         return this;\n@@ -87,6 +95,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param identity The `identity` value of the resources to read\n      * @return this\n      */\n+\n+\n     public BindingReader setIdentity(final String identity) {\n         return setIdentity(Promoter.listOfOne(identity));\n     }\n@@ -99,6 +109,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param tag Only list Bindings that have all of the specified Tags\n      * @return this\n      */\n+\n+\n     public BindingReader setTag(final List<String> tag) {\n         this.tag = tag;\n         return this;\n@@ -112,6 +124,8 @@ public class BindingReader extends Reader<Binding> {\n      * @param tag Only list Bindings that have all of the specified Tags\n      * @return this\n      */\n+\n+\n     public BindingReader setTag(final String tag) {\n         return setTag(Promoter.listOfOne(tag));\n     }\n@@ -122,6 +136,7 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Binding ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Binding> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -133,13 +148,14 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Binding ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Binding> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.NOTIFY.toString(),\n-            \"/v1/Services/\" + this.pathServiceSid + \"/Bindings\"\n+                              HttpMethod.GET,\n+                              Domains.NOTIFY.toString(),\n+                              \"/v1/Services/\" + this.pathServiceSid + \"/Bindings\"\n         );\n \n         addQueryParams(request);\n@@ -153,14 +169,12 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Binding ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Binding> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Binding> getPage(final String targetUrl,\n+                                 final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -171,13 +185,11 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Binding> nextPage(final Page<Binding> page,\n                                   final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.NOTIFY.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.NOTIFY.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -188,13 +200,11 @@ public class BindingReader extends Reader<Binding> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Binding> previousPage(final Page<Binding> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.NOTIFY.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.NOTIFY.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -205,9 +215,11 @@ public class BindingReader extends Reader<Binding> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Binding> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Binding> pageForRequest(final TwilioRestClient client,\n+                                         final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Binding read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -215,15 +227,11 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"bindings\",\n-            response.getContent(),\n-            Binding.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"bindings\", response.getContent(), Binding.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -231,6 +239,8 @@ public class BindingReader extends Reader<Binding> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (startDate != null) {\n             request.addQueryParam(\"StartDate\", DateConverter.dateStringFromLocalDate(startDate));\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/484/BindingReader.java\nindex 66612a8991d..4a42b0d4b7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/484/BindingReader.java\n@@ -215,7 +215,7 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/484/BindingReader.java\nindex 66612a8991d..01c7a9cc0cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/484/BindingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/484/BindingReader.java\n@@ -215,7 +215,8 @@ public class BindingReader extends Reader<Binding> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
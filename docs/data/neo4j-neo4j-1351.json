{
    "project_name": "neo4j-neo4j",
    "error_id": "1351",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "72",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1351/DeferredConflictCheckingIndexUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1351/DeferredConflictCheckingIndexUpdater.java\nindex 09270bffe42..f632afba843 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1351/DeferredConflictCheckingIndexUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1351/DeferredConflictCheckingIndexUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.util.HashSet;\n@@ -52,11 +53,11 @@ import static org.neo4j.storageengine.api.UpdateMode.REMOVED;\n  *    Sets A property value to Q\n  *    Deletes B\n  * </pre>\n- *\n+ * <p>\n  * Then an index that is conscious about conflicts when applying may see intermediary conflicts,\n  * depending on the order in which updates are applied. Remembering which value tuples have been altered and\n  * checking conflicts for those in {@link #close()} works around that problem.\n- *\n+ * <p>\n  * This updater wrapping should only be used in specific places to solve specific problems, not generally\n  * when applying updates to online indexes.\n  */\n@@ -68,8 +69,8 @@ public class DeferredConflictCheckingIndexUpdater implements IndexUpdater\n     private final PageCursorTracer cursorTracer;\n     private final Set<ValueTuple> touchedTuples = new HashSet<>();\n \n-    public DeferredConflictCheckingIndexUpdater( IndexUpdater actual, Supplier<IndexReader> readerSupplier, IndexDescriptor indexDescriptor,\n-            PageCursorTracer cursorTracer )\n+    public DeferredConflictCheckingIndexUpdater(IndexUpdater actual, Supplier<IndexReader> readerSupplier, IndexDescriptor indexDescriptor,\n+                                                PageCursorTracer cursorTracer)\n     {\n         this.actual = actual;\n         this.readerSupplier = readerSupplier;\n@@ -78,13 +79,13 @@ public class DeferredConflictCheckingIndexUpdater implements IndexUpdater\n     }\n \n     @Override\n-    public void process( IndexEntryUpdate<?> update ) throws IndexEntryConflictException\n+    public void process(IndexEntryUpdate<?> update) throws IndexEntryConflictException\n     {\n-        ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate( update );\n-        actual.process( valueUpdate );\n-        if ( valueUpdate.updateMode() != REMOVED )\n+        ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate(update);\n+        actual.process(valueUpdate);\n+        if (valueUpdate.updateMode() != REMOVED)\n         {\n-            touchedTuples.add( ValueTuple.of( valueUpdate.values() ) );\n+            touchedTuples.add(ValueTuple.of(valueUpdate.values()));\n         }\n     }\n \n@@ -92,38 +93,37 @@ public class DeferredConflictCheckingIndexUpdater implements IndexUpdater\n     public void close() throws IndexEntryConflictException\n     {\n         actual.close();\n-        try ( IndexReader reader = readerSupplier.get() )\n+        try (IndexReader reader = readerSupplier.get())\n         {\n-            for ( ValueTuple tuple : touchedTuples )\n+            for (ValueTuple tuple : touchedTuples)\n             {\n-                try ( NodeValueIterator client = new NodeValueIterator() )\n+                try (NodeValueIterator client = new NodeValueIterator())\n                 {\n-                    reader.query( NULL_CONTEXT, client, unconstrained(), queryOf( tuple ) );\n-                    if ( client.hasNext() )\n+                    reader.query(NULL_CONTEXT, client, unconstrained(), queryOf(tuple));\n+                    if (client.hasNext())\n                     {\n                         long firstEntityId = client.next();\n-                        if ( client.hasNext() )\n+                        if (client.hasNext())\n                         {\n                             long secondEntityId = client.next();\n-                            throw new IndexEntryConflictException( firstEntityId, secondEntityId, tuple );\n+                            throw new IndexEntryConflictException(firstEntityId, secondEntityId, tuple);\n                         }\n                     }\n                 }\n             }\n-        }\n-        catch ( IndexNotApplicableKernelException e )\n+        } catch (IndexNotApplicableKernelException e)\n         {\n-            throw new IllegalArgumentException( \"Unexpectedly the index reader couldn't handle this query\", e );\n+            throw new IllegalArgumentException(\"Unexpectedly the index reader couldn't handle this query\", e);\n         }\n     }\n \n-    private IndexQuery[] queryOf( ValueTuple tuple )\n+    private IndexQuery[] queryOf(ValueTuple tuple)\n     {\n         IndexQuery[] predicates = new IndexQuery[tuple.size()];\n         int[] propertyIds = indexDescriptor.schema().getPropertyIds();\n-        for ( int i = 0; i < predicates.length; i++ )\n+        for (int i = 0; i < predicates.length; i++)\n         {\n-            predicates[i] = exact( propertyIds[i], tuple.valueAt( i ) );\n+            predicates[i] = exact(propertyIds[i], tuple.valueAt(i));\n         }\n         return predicates;\n     }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
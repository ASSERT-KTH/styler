{
    "project_name": "Angel-ML-angel",
    "error_id": "536",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/536/PushNeighborParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/536/PushNeighborParam.java\nindex 1a00547bb5f..96885ff11a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/536/PushNeighborParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/536/PushNeighborParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.pushneighbor;\n \n import com.tencent.angel.PartitionKey;\n@@ -32,7 +33,7 @@ public class PushNeighborParam extends UpdateParam {\n   private Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices;\n \n   public PushNeighborParam(int matrixId, boolean updateClock,\n-      Long2ObjectOpenHashMap<long[]> adjTable) {\n+                           Long2ObjectOpenHashMap<long[]> adjTable) {\n     super(matrixId, updateClock);\n     this.nodeIdToNeighborIndices = adjTable;\n     this.keyIds = adjTable.keySet().toLongArray();\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 6, indentation should be the same level as line 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 6, indentation should be the same level as line 63.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/536/PushNeighborParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/536/PushNeighborParam.java\nindex 1a00547bb5f..ed98d2ba925 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/536/PushNeighborParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/536/PushNeighborParam.java\n@@ -43,8 +43,7 @@ public class PushNeighborParam extends UpdateParam {\n     this(matrixId, false, adjTable);\n   }\n \n-\n-  @Override\n+@Override\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n \n@@ -53,11 +52,14 @@ public class PushNeighborParam extends UpdateParam {\n     int count = 0;\n     int nodeIndex = 0;\n     for (PartitionKey part : parts) {\n-      int start = nodeIndex;  // include start\n+      int start = nodeIndex;\n+\n+// include start\n       while (nodeIndex < keyIds.length && keyIds[nodeIndex] < part.getEndCol()) {\n         nodeIndex++;\n       }\n-      int end = nodeIndex;  // exclude end\n+      int end = nodeIndex;\n+// exclude end\n       int sizePart = end - start;\n       count += sizePart;\n       if (sizePart > 0) {\n@@ -67,7 +69,7 @@ public class PushNeighborParam extends UpdateParam {\n       }\n     }\n \n-    assert (count == nodeIdToNeighborIndices.size());\n+    assert(count == nodeIdToNeighborIndices.size());\n     return partParams;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/536/PushNeighborParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/536/PushNeighborParam.java\nindex 1a00547bb5f..4d46aee0fed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/536/PushNeighborParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/536/PushNeighborParam.java\n@@ -25,14 +25,12 @@ import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n-\n public class PushNeighborParam extends UpdateParam {\n \n   private long[] keyIds;\n   private Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices;\n \n-  public PushNeighborParam(int matrixId, boolean updateClock,\n-      Long2ObjectOpenHashMap<long[]> adjTable) {\n+  public PushNeighborParam(int matrixId, boolean updateClock, Long2ObjectOpenHashMap<long[]> adjTable) {\n     super(matrixId, updateClock);\n     this.nodeIdToNeighborIndices = adjTable;\n     this.keyIds = adjTable.keySet().toLongArray();\n@@ -43,13 +41,10 @@ public class PushNeighborParam extends UpdateParam {\n     this(matrixId, false, adjTable);\n   }\n \n-\n   @Override\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n-\n     List<PartitionUpdateParam> partParams = new ArrayList<>(parts.size());\n-\n     int count = 0;\n     int nodeIndex = 0;\n     for (PartitionKey part : parts) {\n@@ -57,17 +52,16 @@ public class PushNeighborParam extends UpdateParam {\n       while (nodeIndex < keyIds.length && keyIds[nodeIndex] < part.getEndCol()) {\n         nodeIndex++;\n       }\n+\n       int end = nodeIndex;  // exclude end\n       int sizePart = end - start;\n       count += sizePart;\n       if (sizePart > 0) {\n-        partParams.add(\n-            new PushNeighborPartitionParam(matrixId, part, nodeIdToNeighborIndices, keyIds, start,\n-                end));\n+        partParams.add(new PushNeighborPartitionParam(matrixId, part, nodeIdToNeighborIndices, keyIds, start, end));\n       }\n     }\n-\n     assert (count == nodeIdToNeighborIndices.size());\n     return partParams;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
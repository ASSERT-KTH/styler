{
    "project_name": "graphfoundation-ongdb",
    "error_id": "384",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "237",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "266",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "279",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "282",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "295",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "300",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "305",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "309",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "313",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "317",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "328",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "334",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "347",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "384",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "387",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "400",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "403",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "415",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "418",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "421",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "424",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "427",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "430",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "439",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "442",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "445",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "448",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "451",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "454",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "458",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "462",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "465",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "478",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "481",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "484",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "487",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "491",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "504",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "507",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "510",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "513",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "547",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "550",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "553",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "559",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "575",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "575",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/384/CompiledConversionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/384/CompiledConversionUtils.java\nindex 037546be3ca..e13e93fb48a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/384/CompiledConversionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/384/CompiledConversionUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.codegen;\n \n import java.lang.reflect.Array;\n@@ -66,644 +67,591 @@ import static org.neo4j.values.SequenceValue.IterationPreference.RANDOM_ACCESS;\n import static org.neo4j.values.storable.Values.NO_VALUE;\n \n // Class with static methods used by compiled execution plans\n-@SuppressWarnings( \"unused\" )\n+@SuppressWarnings(\"unused\")\n public abstract class CompiledConversionUtils\n {\n-    public static boolean coerceToPredicate( Object value )\n+  public static boolean coerceToPredicate(Object value)\n+  {\n+    if (value == null || value == Values.NO_VALUE)\n     {\n-        if ( value == null || value == Values.NO_VALUE )\n-        {\n-            return false;\n-        }\n-        if ( value instanceof BooleanValue )\n-        {\n-            return ((BooleanValue) value).booleanValue();\n-        }\n-        if ( value instanceof Boolean )\n-        {\n-            return (boolean) value;\n-        }\n-        if ( value instanceof ArrayValue )\n-        {\n-            return ((ArrayValue) value).length() > 0;\n-        }\n-        if ( value.getClass().isArray() )\n-        {\n-            return Array.getLength( value ) > 0;\n-        }\n-        throw new CypherTypeException( \"Don't know how to treat that as a predicate: \" + value.toString(), null );\n+      return false;\n     }\n-\n-    public static Set<?> toSet( Object value )\n+    if (value instanceof BooleanValue)\n     {\n-        if ( value == null || value == NO_VALUE )\n-        {\n-            return Collections.emptySet();\n-        }\n-        else if ( value instanceof SequenceValue )\n-        {\n-            SequenceValue sequenceValue = (SequenceValue) value;\n-            Iterator<AnyValue> iterator = sequenceValue.iterator();\n-            Set<AnyValue> set;\n-            if ( sequenceValue.iterationPreference() == RANDOM_ACCESS )\n-            {\n-                // If we have a random access sequence value length() should be cheap and we can optimize the initial capacity\n-                int length = sequenceValue.length();\n-                set = new HashSet<>( length );\n-                for ( int i = 0; i < length; i++ )\n-                {\n-                    set.add( sequenceValue.value( i ) );\n-                }\n-            }\n-            else\n-            {\n-                set = new HashSet<>();\n-                while ( iterator.hasNext() )\n-                {\n-                    AnyValue element = iterator.next();\n-                    set.add( element );\n-                }\n-            }\n-            return set;\n-        }\n-        else if ( value instanceof Collection<?> )\n-        {\n-            return new HashSet<>( (Collection<?>) value );\n-        }\n-        else if ( value instanceof LongStream )\n-        {\n-            LongStream stream = (LongStream) value;\n-            return stream.boxed().collect( Collectors.toSet() );\n-        }\n-        else if ( value instanceof IntStream )\n-        {\n-            IntStream stream = (IntStream) value;\n-            return stream.boxed().collect( Collectors.toSet() );\n-        }\n-        else if ( value instanceof DoubleStream )\n-        {\n-            DoubleStream stream = (DoubleStream) value;\n-            return stream.boxed().collect( Collectors.toSet() );\n-        }\n-        else if ( value.getClass().isArray() )\n-        {\n-            int len = Array.getLength( value );\n-            HashSet<Object> collection = new HashSet<>( len );\n-            for ( int i = 0; i < len; i++ )\n-            {\n-                collection.add( Array.get( value, i ) );\n-            }\n-            return collection;\n-        }\n-\n-        throw new CypherTypeException(\n-                \"Don't know how to create a set out of \" + value.getClass().getSimpleName(), null );\n+      return ((BooleanValue) value).booleanValue();\n     }\n-\n-    public static CompositeKey compositeKey( long... keys )\n+    if (value instanceof Boolean)\n     {\n-        return new CompositeKey( keys );\n+      return (boolean) value;\n     }\n-\n-    public static class CompositeKey\n+    if (value instanceof ArrayValue)\n     {\n-        private final long[] key;\n-\n-        private CompositeKey( long[] key )\n-        {\n-            this.key = key;\n-        }\n+      return ((ArrayValue) value).length() > 0;\n+    }\n+    if (value.getClass().isArray())\n+    {\n+      return Array.getLength(value) > 0;\n+    }\n+    throw new CypherTypeException(\"Don't know how to treat that as a predicate: \" + value.toString(), null);\n+  }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n+  public static Set<?> toSet(Object value)\n+  {\n+    if (value == null || value == NO_VALUE)\n+    {\n+      return Collections.emptySet();\n+    } else if (value instanceof SequenceValue)\n+    {\n+      SequenceValue sequenceValue = (SequenceValue) value;\n+      Iterator<AnyValue> iterator = sequenceValue.iterator();\n+      Set<AnyValue> set;\n+      if (sequenceValue.iterationPreference() == RANDOM_ACCESS)\n+      {\n+        // If we have a random access sequence value length() should be cheap and we can optimize the initial capacity\n+        int length = sequenceValue.length();\n+        set = new HashSet<>(length);\n+        for (int i = 0; i < length; i++)\n+        {\n+          set.add(sequenceValue.value(i));\n+        }\n+      } else\n+      {\n+        set = new HashSet<>();\n+        while (iterator.hasNext())\n+        {\n+          AnyValue element = iterator.next();\n+          set.add(element);\n+        }\n+      }\n+      return set;\n+    } else if (value instanceof Collection<?>)\n+    {\n+      return new HashSet<>((Collection<?>) value);\n+    } else if (value instanceof LongStream)\n+    {\n+      LongStream stream = (LongStream) value;\n+      return stream.boxed().collect(Collectors.toSet());\n+    } else if (value instanceof IntStream)\n+    {\n+      IntStream stream = (IntStream) value;\n+      return stream.boxed().collect(Collectors.toSet());\n+    } else if (value instanceof DoubleStream)\n+    {\n+      DoubleStream stream = (DoubleStream) value;\n+      return stream.boxed().collect(Collectors.toSet());\n+    } else if (value.getClass().isArray())\n+    {\n+      int len = Array.getLength(value);\n+      HashSet<Object> collection = new HashSet<>(len);\n+      for (int i = 0; i < len; i++)\n+      {\n+        collection.add(Array.get(value, i));\n+      }\n+      return collection;\n+    }\n \n-            CompositeKey that = (CompositeKey) o;\n+    throw new CypherTypeException(\n+        \"Don't know how to create a set out of \" + value.getClass().getSimpleName(), null);\n+  }\n \n-            return Arrays.equals( key, that.key );\n+  public static CompositeKey compositeKey(long... keys)\n+  {\n+    return new CompositeKey(keys);\n+  }\n \n-        }\n+  public static class CompositeKey\n+  {\n+    private final long[] key;\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Arrays.hashCode( key );\n-        }\n+    private CompositeKey(long[] key)\n+    {\n+      this.key = key;\n     }\n \n-    /**\n-     * Checks equality according to OpenCypher\n-     * @return true if equal, false if not equal and null if incomparable\n-     */\n-    public static Boolean equals( Object lhs, Object rhs )\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        if ( lhs == null || rhs == null || lhs == NO_VALUE || rhs == NO_VALUE )\n-        {\n-            return null;\n-        }\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n \n-        boolean lhsVirtualNodeValue = lhs instanceof VirtualNodeValue;\n-        if ( lhsVirtualNodeValue || rhs instanceof VirtualNodeValue || lhs instanceof VirtualRelationshipValue ||\n-             rhs instanceof VirtualRelationshipValue )\n-        {\n-            if ( (lhsVirtualNodeValue && !(rhs instanceof VirtualNodeValue)) ||\n-                 (rhs instanceof VirtualNodeValue && !lhsVirtualNodeValue) ||\n-                 (lhs instanceof VirtualRelationshipValue && !(rhs instanceof VirtualRelationshipValue)) ||\n-                 (rhs instanceof VirtualRelationshipValue && !(lhs instanceof VirtualRelationshipValue)) )\n-            {\n-                throw new IncomparableValuesException( lhs.getClass().getSimpleName(), rhs.getClass().getSimpleName() );\n-            }\n-            return lhs.equals( rhs );\n-        }\n+      CompositeKey that = (CompositeKey) o;\n \n-        AnyValue lhsValue = lhs instanceof AnyValue ? (AnyValue) lhs : ValueUtils.of( lhs );\n-        AnyValue rhsValue = rhs instanceof AnyValue ? (AnyValue) rhs : ValueUtils.of( rhs );\n+      return Arrays.equals(key, that.key);\n \n-        return lhsValue.ternaryEquals( rhsValue );\n     }\n \n-    // Ternary OR\n-    public static Boolean or( Object lhs, Object rhs )\n+    @Override\n+    public int hashCode()\n+    {\n+      return Arrays.hashCode(key);\n+    }\n+  }\n+\n+  /**\n+   * Checks equality according to OpenCypher\n+   *\n+   * @return true if equal, false if not equal and null if incomparable\n+   */\n+  public static Boolean equals(Object lhs, Object rhs)\n+  {\n+    if (lhs == null || rhs == null || lhs == NO_VALUE || rhs == NO_VALUE)\n     {\n-        Boolean l = toBooleanOrNull( lhs );\n-        Boolean r = toBooleanOrNull( rhs );\n+      return null;\n+    }\n \n-        if ( l == null && r == null )\n-        {\n-            return null;\n-        }\n-        else if ( l == null )\n-        {\n-            return r ? true : null;\n-        }\n-        else if ( r == null )\n-        {\n-            return l ? true : null;\n-        }\n-        return l || r;\n+    boolean lhsVirtualNodeValue = lhs instanceof VirtualNodeValue;\n+    if (lhsVirtualNodeValue || rhs instanceof VirtualNodeValue || lhs instanceof VirtualRelationshipValue ||\n+        rhs instanceof VirtualRelationshipValue)\n+    {\n+      if ((lhsVirtualNodeValue && !(rhs instanceof VirtualNodeValue)) ||\n+          (rhs instanceof VirtualNodeValue && !lhsVirtualNodeValue) ||\n+          (lhs instanceof VirtualRelationshipValue && !(rhs instanceof VirtualRelationshipValue)) ||\n+          (rhs instanceof VirtualRelationshipValue && !(lhs instanceof VirtualRelationshipValue)))\n+      {\n+        throw new IncomparableValuesException(lhs.getClass().getSimpleName(), rhs.getClass().getSimpleName());\n+      }\n+      return lhs.equals(rhs);\n     }\n \n-    // Ternary NOT\n-    public static Boolean not( Object predicate )\n+    AnyValue lhsValue = lhs instanceof AnyValue ? (AnyValue) lhs : ValueUtils.of(lhs);\n+    AnyValue rhsValue = rhs instanceof AnyValue ? (AnyValue) rhs : ValueUtils.of(rhs);\n+\n+    return lhsValue.ternaryEquals(rhsValue);\n+  }\n+\n+  // Ternary OR\n+  public static Boolean or(Object lhs, Object rhs)\n+  {\n+    Boolean l = toBooleanOrNull(lhs);\n+    Boolean r = toBooleanOrNull(rhs);\n+\n+    if (l == null && r == null)\n     {\n-        Boolean b = toBooleanOrNull( predicate );\n-        if ( b == null )\n-        {\n-            return null;\n-        }\n-        return !b;\n+      return null;\n+    } else if (l == null)\n+    {\n+      return r ? true : null;\n+    } else if (r == null)\n+    {\n+      return l ? true : null;\n     }\n+    return l || r;\n+  }\n+\n+  // Ternary NOT\n+  public static Boolean not(Object predicate)\n+  {\n+    Boolean b = toBooleanOrNull(predicate);\n+    if (b == null)\n+    {\n+      return null;\n+    }\n+    return !b;\n+  }\n \n-    private static Boolean toBooleanOrNull( Object o )\n+  private static Boolean toBooleanOrNull(Object o)\n+  {\n+    if (o == null || o == NO_VALUE)\n     {\n-        if ( o == null || o == NO_VALUE )\n-        {\n-            return null;\n-        }\n-        else if ( o instanceof Boolean )\n-        {\n-            return (Boolean) o;\n-        }\n-        else if ( o instanceof BooleanValue )\n-        {\n-            return ((BooleanValue) o).booleanValue();\n-        }\n-        throw new CypherTypeException( \"Don't know how to treat that as a boolean: \" + o.toString(), null );\n+      return null;\n+    } else if (o instanceof Boolean)\n+    {\n+      return (Boolean) o;\n+    } else if (o instanceof BooleanValue)\n+    {\n+      return ((BooleanValue) o).booleanValue();\n     }\n+    throw new CypherTypeException(\"Don't know how to treat that as a boolean: \" + o.toString(), null);\n+  }\n \n-    @SuppressWarnings( {\"unchecked\", \"WeakerAccess\"} )\n-    public static AnyValue materializeAnyResult( EmbeddedProxySPI proxySpi, Object anyValue )\n+  @SuppressWarnings({\"unchecked\", \"WeakerAccess\"})\n+  public static AnyValue materializeAnyResult(EmbeddedProxySPI proxySpi, Object anyValue)\n+  {\n+    if (anyValue == null || anyValue == NO_VALUE)\n     {\n-        if ( anyValue == null || anyValue == NO_VALUE )\n-        {\n-            return NO_VALUE;\n-        }\n-        else if ( anyValue instanceof AnyValue )\n-        {\n-            return materializeAnyValueResult( proxySpi, anyValue );\n-        }\n-        else if ( anyValue instanceof List )\n-        {\n-            return VirtualValues.fromList( (List<AnyValue>) (((List) anyValue).stream()\n-                    .map( v -> materializeAnyResult( proxySpi, v ) ).collect( Collectors.toList() ) ) );\n-        }\n-        else if ( anyValue instanceof Map )\n-        {\n-            Map<String,?> incoming = (Map<String,?>) anyValue;\n-            HashMap<String,AnyValue> outgoing = new HashMap<>( incoming.size() );\n-            for ( Map.Entry<String,?> entry : incoming.entrySet() )\n-            {\n-                outgoing.put( entry.getKey(), materializeAnyResult( proxySpi, entry.getValue() ) );\n-            }\n-            return VirtualValues.map( outgoing );\n-        }\n-        else if ( anyValue instanceof PrimitiveNodeStream )\n-        {\n-            return VirtualValues.fromList( ((PrimitiveNodeStream) anyValue).longStream()\n-                    .mapToObj( id -> (AnyValue) ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( id ) ) )\n-                    .collect( Collectors.toList() ) );\n-        }\n-        else if ( anyValue instanceof PrimitiveRelationshipStream )\n-        {\n-            return VirtualValues.fromList( ((PrimitiveRelationshipStream) anyValue).longStream()\n-                    .mapToObj( id -> (AnyValue) ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( id ) ) )\n-                    .collect( Collectors.toList() ) );\n-        }\n-        else if ( anyValue instanceof LongStream )\n-        {\n-            long[] array = ((LongStream) anyValue).toArray();\n-            return Values.longArray( array );\n-        }\n-        else if ( anyValue instanceof DoubleStream )\n-        {\n-            double[] array = ((DoubleStream) anyValue).toArray();\n-            return Values.doubleArray( array );\n-        }\n-        else if ( anyValue instanceof IntStream )\n-        {\n-            // IntStream is only used for list of primitive booleans\n-            return VirtualValues.fromList( ((IntStream) anyValue).mapToObj( i -> Values.booleanValue( i != 0 ) ).collect( Collectors.toList() ) );\n-        }\n-        else if ( anyValue.getClass().isArray() )\n-        {\n-            Class<?> componentType = anyValue.getClass().getComponentType();\n-            int length = Array.getLength( anyValue );\n-\n-            if ( componentType.isPrimitive() )\n-            {\n-                Object copy = Array.newInstance( componentType, length );\n-                //noinspection SuspiciousSystemArraycopy\n-                System.arraycopy( anyValue, 0, copy, 0, length );\n-                return ValueUtils.of( copy );\n-            }\n-            else if ( anyValue instanceof String[] )\n-            {\n-                return Values.stringArray( (String[]) anyValue );\n-            }\n-            else\n-            {\n-                AnyValue[] copy = new AnyValue[length];\n-                for ( int i = 0; i < length; i++ )\n-                {\n-                    copy[i] = materializeAnyResult( proxySpi, Array.get( anyValue, i ) );\n-                }\n-                return VirtualValues.list( copy );\n-            }\n-        }\n-        else\n-        {\n-            return ValueUtils.of( anyValue );\n-        }\n+      return NO_VALUE;\n+    } else if (anyValue instanceof AnyValue)\n+    {\n+      return materializeAnyValueResult(proxySpi, anyValue);\n+    } else if (anyValue instanceof List)\n+    {\n+      return VirtualValues.fromList((List<AnyValue>) (((List) anyValue).stream()\n+          .map(v -> materializeAnyResult(proxySpi, v)).collect(Collectors.toList())));\n+    } else if (anyValue instanceof Map)\n+    {\n+      Map<String, ?> incoming = (Map<String, ?>) anyValue;\n+      HashMap<String, AnyValue> outgoing = new HashMap<>(incoming.size());\n+      for (Map.Entry<String, ?> entry : incoming.entrySet())\n+      {\n+        outgoing.put(entry.getKey(), materializeAnyResult(proxySpi, entry.getValue()));\n+      }\n+      return VirtualValues.map(outgoing);\n+    } else if (anyValue instanceof PrimitiveNodeStream)\n+    {\n+      return VirtualValues.fromList(((PrimitiveNodeStream) anyValue).longStream()\n+          .mapToObj(id -> (AnyValue) ValueUtils.fromNodeProxy(proxySpi.newNodeProxy(id)))\n+          .collect(Collectors.toList()));\n+    } else if (anyValue instanceof PrimitiveRelationshipStream)\n+    {\n+      return VirtualValues.fromList(((PrimitiveRelationshipStream) anyValue).longStream()\n+          .mapToObj(id -> (AnyValue) ValueUtils.fromRelationshipProxy(proxySpi.newRelationshipProxy(id)))\n+          .collect(Collectors.toList()));\n+    } else if (anyValue instanceof LongStream)\n+    {\n+      long[] array = ((LongStream) anyValue).toArray();\n+      return Values.longArray(array);\n+    } else if (anyValue instanceof DoubleStream)\n+    {\n+      double[] array = ((DoubleStream) anyValue).toArray();\n+      return Values.doubleArray(array);\n+    } else if (anyValue instanceof IntStream)\n+    {\n+      // IntStream is only used for list of primitive booleans\n+      return VirtualValues.fromList(((IntStream) anyValue).mapToObj(i -> Values.booleanValue(i != 0)).collect(Collectors.toList()));\n+    } else if (anyValue.getClass().isArray())\n+    {\n+      Class<?> componentType = anyValue.getClass().getComponentType();\n+      int length = Array.getLength(anyValue);\n+\n+      if (componentType.isPrimitive())\n+      {\n+        Object copy = Array.newInstance(componentType, length);\n+        //noinspection SuspiciousSystemArraycopy\n+        System.arraycopy(anyValue, 0, copy, 0, length);\n+        return ValueUtils.of(copy);\n+      } else if (anyValue instanceof String[])\n+      {\n+        return Values.stringArray((String[]) anyValue);\n+      } else\n+      {\n+        AnyValue[] copy = new AnyValue[length];\n+        for (int i = 0; i < length; i++)\n+        {\n+          copy[i] = materializeAnyResult(proxySpi, Array.get(anyValue, i));\n+        }\n+        return VirtualValues.list(copy);\n+      }\n+    } else\n+    {\n+      return ValueUtils.of(anyValue);\n     }\n+  }\n \n-    // NOTE: This assumes anyValue is an instance of AnyValue\n-    public static AnyValue materializeAnyValueResult( EmbeddedProxySPI proxySpi, Object anyValue )\n+  // NOTE: This assumes anyValue is an instance of AnyValue\n+  public static AnyValue materializeAnyValueResult(EmbeddedProxySPI proxySpi, Object anyValue)\n+  {\n+    if (anyValue instanceof VirtualNodeValue)\n     {\n-        if ( anyValue instanceof VirtualNodeValue )\n-        {\n-            if ( anyValue instanceof NodeValue )\n-            {\n-                return (AnyValue) anyValue;\n-            }\n-            return ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( ((VirtualNodeValue) anyValue).id() ) );\n-        }\n-        if ( anyValue instanceof VirtualRelationshipValue )\n-        {\n-            if ( anyValue instanceof RelationshipValue )\n-            {\n-                return (AnyValue) anyValue;\n-            }\n-            return ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( ((VirtualRelationshipValue) anyValue).id() ) );\n-        }\n-        // If it is a list or map, run it through a ValueMapper that will create proxy objects for entities if needed.\n-        // This will first do a dry run and return as it is if no conversion is needed.\n-        // If in the future we will always create proxy objects directly whenever we create values we can skip this\n-        // Doing this conversion lazily instead, by wrapping with TransformedListValue or TransformedMapValue is probably not a\n-        // good idea because of the complexities involved (see TOMBSTONE in VirtualValues about why TransformedListValue was killed).\n-        // NOTE: There is also a case where a ListValue can be storable (ArrayValueListValue) where no conversion is needed\n-        if ( (anyValue instanceof ListValue && !((ListValue) anyValue).storable()) || anyValue instanceof MapValue )\n-        {\n-            return CompiledMaterializeValueMapper.mapAnyValue( proxySpi, (AnyValue) anyValue );\n-        }\n+      if (anyValue instanceof NodeValue)\n+      {\n         return (AnyValue) anyValue;\n+      }\n+      return ValueUtils.fromNodeProxy(proxySpi.newNodeProxy(((VirtualNodeValue) anyValue).id()));\n     }\n-\n-    public static NodeValue materializeNodeValue( EmbeddedProxySPI proxySpi, Object anyValue )\n+    if (anyValue instanceof VirtualRelationshipValue)\n     {\n-        // Null check has to be done outside by the generated code\n-        if ( anyValue instanceof NodeValue )\n-        {\n-            return (NodeValue) anyValue;\n-        }\n-        else if ( anyValue instanceof VirtualNodeValue )\n-        {\n-            return ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( ((VirtualNodeValue) anyValue).id() ) );\n-        }\n-        else if ( anyValue instanceof Node )\n-        {\n-            return ValueUtils.fromNodeProxy( (Node) anyValue );\n-        }\n-        throw new IllegalArgumentException( \"Do not know how to materialize node value from type \" + anyValue.getClass().getName() );\n+      if (anyValue instanceof RelationshipValue)\n+      {\n+        return (AnyValue) anyValue;\n+      }\n+      return ValueUtils.fromRelationshipProxy(proxySpi.newRelationshipProxy(((VirtualRelationshipValue) anyValue).id()));\n     }\n-\n-    public static RelationshipValue materializeRelationshipValue( EmbeddedProxySPI proxySpi, Object anyValue )\n+    // If it is a list or map, run it through a ValueMapper that will create proxy objects for entities if needed.\n+    // This will first do a dry run and return as it is if no conversion is needed.\n+    // If in the future we will always create proxy objects directly whenever we create values we can skip this\n+    // Doing this conversion lazily instead, by wrapping with TransformedListValue or TransformedMapValue is probably not a\n+    // good idea because of the complexities involved (see TOMBSTONE in VirtualValues about why TransformedListValue was killed).\n+    // NOTE: There is also a case where a ListValue can be storable (ArrayValueListValue) where no conversion is needed\n+    if ((anyValue instanceof ListValue && !((ListValue) anyValue).storable()) || anyValue instanceof MapValue)\n     {\n-        // Null check has to be done outside by the generated code\n-        if ( anyValue instanceof RelationshipValue )\n-        {\n-            return (RelationshipValue) anyValue;\n-        }\n-        else if ( anyValue instanceof VirtualRelationshipValue )\n-        {\n-            return ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( ((VirtualRelationshipValue) anyValue).id() ) );\n-        }\n-        else if ( anyValue instanceof Relationship )\n-        {\n-            return ValueUtils.fromRelationshipProxy( (Relationship) anyValue );\n-        }\n-        throw new IllegalArgumentException( \"Do not know how to materialize relationship value from type \" + anyValue.getClass().getName() );\n+      return CompiledMaterializeValueMapper.mapAnyValue(proxySpi, (AnyValue) anyValue);\n     }\n+    return (AnyValue) anyValue;\n+  }\n \n-    public static Iterator iteratorFrom( Object iterable )\n+  public static NodeValue materializeNodeValue(EmbeddedProxySPI proxySpi, Object anyValue)\n+  {\n+    // Null check has to be done outside by the generated code\n+    if (anyValue instanceof NodeValue)\n     {\n-        if ( iterable instanceof Iterable )\n-        {\n-            return ((Iterable) iterable).iterator();\n-        }\n-        else if ( iterable instanceof PrimitiveEntityStream )\n-        {\n-            return ((PrimitiveEntityStream) iterable).iterator();\n-        }\n-        else if ( iterable instanceof LongStream )\n-        {\n-            return ((LongStream) iterable).iterator();\n-        }\n-        else if ( iterable instanceof DoubleStream )\n-        {\n-            return ((DoubleStream) iterable).iterator();\n-        }\n-        else if ( iterable instanceof IntStream )\n-        {\n-            return ((IntStream) iterable).iterator();\n-        }\n-        else if ( iterable == null || iterable == NO_VALUE )\n-        {\n-            return Collections.emptyIterator();\n-        }\n-        else if ( iterable.getClass().isArray() )\n-        {\n-            return new ArrayIterator( iterable );\n-        }\n-        else\n-        {\n-            return Stream.of(iterable).iterator();\n-        }\n+      return (NodeValue) anyValue;\n+    } else if (anyValue instanceof VirtualNodeValue)\n+    {\n+      return ValueUtils.fromNodeProxy(proxySpi.newNodeProxy(((VirtualNodeValue) anyValue).id()));\n+    } else if (anyValue instanceof Node)\n+    {\n+      return ValueUtils.fromNodeProxy((Node) anyValue);\n     }\n+    throw new IllegalArgumentException(\"Do not know how to materialize node value from type \" + anyValue.getClass().getName());\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static LongStream toLongStream( Object list )\n+  public static RelationshipValue materializeRelationshipValue(EmbeddedProxySPI proxySpi, Object anyValue)\n+  {\n+    // Null check has to be done outside by the generated code\n+    if (anyValue instanceof RelationshipValue)\n     {\n-        if ( list == null )\n-        {\n-            return LongStream.empty();\n-        }\n-        else if ( list instanceof SequenceValue )\n-        {\n-            throw new IllegalArgumentException( \"Need to implement support for SequenceValue in CompiledConversionUtils.toLongStream\" );\n-        }\n-        else if ( list instanceof List )\n-        {\n-            return ((List) list).stream().mapToLong( n -> ((Number) n).longValue() );\n-        }\n-        else if ( Object[].class.isAssignableFrom( list.getClass() ) )\n-        {\n-            return Arrays.stream( (Object[]) list ).mapToLong( n -> ((Number) n).longValue() );\n-        }\n-        else if ( list instanceof byte[] )\n-        {\n-            byte[] array = (byte[]) list;\n-            return IntStream.range( 0, array.length ).mapToLong( i -> array[i] );\n-        }\n-        else if ( list instanceof short[] )\n-        {\n-            short[] array = (short[]) list;\n-            return IntStream.range( 0, array.length ).mapToLong( i -> array[i] );\n-        }\n-        else if ( list instanceof int[] )\n-        {\n-            return IntStream.of( (int[]) list ).mapToLong( i -> i );\n-        }\n-        else if ( list instanceof long[] )\n-        {\n-            return LongStream.of( (long[]) list );\n-        }\n-        throw new IllegalArgumentException( format( \"Can not be converted to stream: %s\", list.getClass().getName() ) );\n+      return (RelationshipValue) anyValue;\n+    } else if (anyValue instanceof VirtualRelationshipValue)\n+    {\n+      return ValueUtils.fromRelationshipProxy(proxySpi.newRelationshipProxy(((VirtualRelationshipValue) anyValue).id()));\n+    } else if (anyValue instanceof Relationship)\n+    {\n+      return ValueUtils.fromRelationshipProxy((Relationship) anyValue);\n     }\n+    throw new IllegalArgumentException(\"Do not know how to materialize relationship value from type \" + anyValue.getClass().getName());\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static DoubleStream toDoubleStream( Object list )\n+  public static Iterator iteratorFrom(Object iterable)\n+  {\n+    if (iterable instanceof Iterable)\n     {\n-        if ( list == null )\n-        {\n-            return DoubleStream.empty();\n-        }\n-        else if ( list instanceof SequenceValue )\n-        {\n-            throw new IllegalArgumentException( \"Need to implement support for SequenceValue in CompiledConversionUtils.toDoubleStream\" );\n-        }\n-        else if ( list instanceof List )\n-        {\n-            return ((List) list).stream().mapToDouble( n -> ((Number) n).doubleValue() );\n-        }\n-        else if ( Object[].class.isAssignableFrom( list.getClass() ) )\n-        {\n-            return Arrays.stream( (Object[]) list ).mapToDouble( n -> ((Number) n).doubleValue() );\n-        }\n-        else if ( list instanceof float[] )\n-        {\n-            float[] array = (float[]) list;\n-            return IntStream.range( 0, array.length ).mapToDouble( i -> array[i] );\n-        }\n-        else if ( list instanceof double[] )\n-        {\n-            return DoubleStream.of( (double[]) list );\n-        }\n-        throw new IllegalArgumentException( format( \"Can not be converted to stream: %s\", list.getClass().getName() ) );\n+      return ((Iterable) iterable).iterator();\n+    } else if (iterable instanceof PrimitiveEntityStream)\n+    {\n+      return ((PrimitiveEntityStream) iterable).iterator();\n+    } else if (iterable instanceof LongStream)\n+    {\n+      return ((LongStream) iterable).iterator();\n+    } else if (iterable instanceof DoubleStream)\n+    {\n+      return ((DoubleStream) iterable).iterator();\n+    } else if (iterable instanceof IntStream)\n+    {\n+      return ((IntStream) iterable).iterator();\n+    } else if (iterable == null || iterable == NO_VALUE)\n+    {\n+      return Collections.emptyIterator();\n+    } else if (iterable.getClass().isArray())\n+    {\n+      return new ArrayIterator(iterable);\n+    } else\n+    {\n+      return Stream.of(iterable).iterator();\n     }\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static IntStream toBooleanStream( Object list )\n+  @SuppressWarnings(\"unchecked\")\n+  public static LongStream toLongStream(Object list)\n+  {\n+    if (list == null)\n     {\n-        if ( list == null )\n-        {\n-            return IntStream.empty();\n-        }\n-        else if ( list instanceof SequenceValue )\n-        {\n-            throw new IllegalArgumentException( \"Need to implement support for SequenceValue in CompiledConversionUtils.toBooleanStream\" );\n-        }\n-        else if ( list instanceof List )\n-        {\n-            return ((List) list).stream().mapToInt( n -> ((Number) n).intValue() );\n-        }\n-        else if ( Object[].class.isAssignableFrom( list.getClass() ) )\n-        {\n-            return Arrays.stream( (Object[]) list ).mapToInt( n -> ((Number) n).intValue() );\n-        }\n-        else if ( list instanceof boolean[] )\n-        {\n-            boolean[] array = (boolean[]) list;\n-            return IntStream.range( 0, array.length ).map( i -> (array[i]) ? 1 : 0 );\n-        }\n-        throw new IllegalArgumentException( format( \"Can not be converted to stream: %s\", list.getClass().getName() ) );\n+      return LongStream.empty();\n+    } else if (list instanceof SequenceValue)\n+    {\n+      throw new IllegalArgumentException(\"Need to implement support for SequenceValue in CompiledConversionUtils.toLongStream\");\n+    } else if (list instanceof List)\n+    {\n+      return ((List) list).stream().mapToLong(n -> ((Number) n).longValue());\n+    } else if (Object[].class.isAssignableFrom(list.getClass()))\n+    {\n+      return Arrays.stream((Object[]) list).mapToLong(n -> ((Number) n).longValue());\n+    } else if (list instanceof byte[])\n+    {\n+      byte[] array = (byte[]) list;\n+      return IntStream.range(0, array.length).mapToLong(i -> array[i]);\n+    } else if (list instanceof short[])\n+    {\n+      short[] array = (short[]) list;\n+      return IntStream.range(0, array.length).mapToLong(i -> array[i]);\n+    } else if (list instanceof int[])\n+    {\n+      return IntStream.of((int[]) list).mapToLong(i -> i);\n+    } else if (list instanceof long[])\n+    {\n+      return LongStream.of((long[]) list);\n     }\n+    throw new IllegalArgumentException(format(\"Can not be converted to stream: %s\", list.getClass().getName()));\n+  }\n \n-    @SuppressWarnings( \"unused\" ) // called from compiled code\n-    public static long unboxNodeOrNull( VirtualNodeValue value )\n+  @SuppressWarnings(\"unchecked\")\n+  public static DoubleStream toDoubleStream(Object list)\n+  {\n+    if (list == null)\n     {\n-        if ( value == null )\n-        {\n-            return -1L;\n-        }\n-        return value.id();\n+      return DoubleStream.empty();\n+    } else if (list instanceof SequenceValue)\n+    {\n+      throw new IllegalArgumentException(\"Need to implement support for SequenceValue in CompiledConversionUtils.toDoubleStream\");\n+    } else if (list instanceof List)\n+    {\n+      return ((List) list).stream().mapToDouble(n -> ((Number) n).doubleValue());\n+    } else if (Object[].class.isAssignableFrom(list.getClass()))\n+    {\n+      return Arrays.stream((Object[]) list).mapToDouble(n -> ((Number) n).doubleValue());\n+    } else if (list instanceof float[])\n+    {\n+      float[] array = (float[]) list;\n+      return IntStream.range(0, array.length).mapToDouble(i -> array[i]);\n+    } else if (list instanceof double[])\n+    {\n+      return DoubleStream.of((double[]) list);\n     }\n+    throw new IllegalArgumentException(format(\"Can not be converted to stream: %s\", list.getClass().getName()));\n+  }\n \n-    @SuppressWarnings( \"unused\" ) // called from compiled code\n-    public static long unboxRelationshipOrNull( VirtualRelationshipValue value )\n+  @SuppressWarnings(\"unchecked\")\n+  public static IntStream toBooleanStream(Object list)\n+  {\n+    if (list == null)\n     {\n-        if ( value == null )\n-        {\n-            return -1L;\n-        }\n-        return value.id();\n+      return IntStream.empty();\n+    } else if (list instanceof SequenceValue)\n+    {\n+      throw new IllegalArgumentException(\"Need to implement support for SequenceValue in CompiledConversionUtils.toBooleanStream\");\n+    } else if (list instanceof List)\n+    {\n+      return ((List) list).stream().mapToInt(n -> ((Number) n).intValue());\n+    } else if (Object[].class.isAssignableFrom(list.getClass()))\n+    {\n+      return Arrays.stream((Object[]) list).mapToInt(n -> ((Number) n).intValue());\n+    } else if (list instanceof boolean[])\n+    {\n+      boolean[] array = (boolean[]) list;\n+      return IntStream.range(0, array.length).map(i -> (array[i]) ? 1 : 0);\n     }\n+    throw new IllegalArgumentException(format(\"Can not be converted to stream: %s\", list.getClass().getName()));\n+  }\n \n-    @SuppressWarnings( \"unused\" ) // called from compiled code\n-    public static long extractLong( Object obj )\n+  @SuppressWarnings(\"unused\") // called from compiled code\n+  public static long unboxNodeOrNull(VirtualNodeValue value)\n+  {\n+    if (value == null)\n     {\n-        if ( obj == null || obj == NO_VALUE )\n-        {\n-            return -1L;\n-        }\n-        else if ( obj instanceof VirtualNodeValue )\n-        {\n-            return ((VirtualNodeValue) obj).id();\n-        }\n-        else if ( obj instanceof VirtualRelationshipValue )\n-        {\n-            return ((VirtualRelationshipValue) obj).id();\n-        }\n-        else if ( obj instanceof Long )\n-        {\n-            return (Long) obj;\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException(\n-                    format( \"Can not be converted to long: %s\", obj.getClass().getName() ) );\n-        }\n+      return -1L;\n     }\n+    return value.id();\n+  }\n \n-    //In the store we only support storable Value types and arrays thereof.\n-    //In cypher we must make an effort to transform Cypher lists to appropriate arrays whenever\n-    //we are using sending values down to the store or to an index.\n-    public static Object makeValueNeoSafe( Object object )\n+  @SuppressWarnings(\"unused\") // called from compiled code\n+  public static long unboxRelationshipOrNull(VirtualRelationshipValue value)\n+  {\n+    if (value == null)\n     {\n-        AnyValue value = object instanceof AnyValue ? ((AnyValue) object) : ValueUtils.of( object );\n-        return org.neo4j.cypher.internal.runtime.interpreted.makeValueNeoSafe.apply( value );\n+      return -1L;\n     }\n+    return value.id();\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static Object mapGetProperty( Object object, String key )\n+  @SuppressWarnings(\"unused\") // called from compiled code\n+  public static long extractLong(Object obj)\n+  {\n+    if (obj == null || obj == NO_VALUE)\n     {\n-        if ( object == NO_VALUE )\n-        {\n-            return NO_VALUE;\n-        }\n-        if ( object instanceof MapValue )\n-        {\n-            MapValue map = (MapValue) object;\n-            return map.get( key );\n-        }\n-        if ( object instanceof NodeProxyWrappingNodeValue )\n-        {\n-            return Values.of( ((NodeProxyWrappingNodeValue) object).nodeProxy().getProperty( key ) );\n-        }\n-        if ( object instanceof RelationshipProxyWrappingValue )\n-        {\n-            return Values.of( ((RelationshipProxyWrappingValue) object).relationshipProxy().getProperty( key ) );\n-        }\n-        if ( object instanceof PropertyContainer ) // Entity that is not wrapped by an AnyValue\n-        {\n-            return Values.of( ((PropertyContainer) object).getProperty( key ) );\n-        }\n-        if ( object instanceof NodeValue )\n-        {\n-            return ((NodeValue) object).properties().get( key );\n-        }\n-        if ( object instanceof RelationshipValue )\n-        {\n-            return ((RelationshipValue) object).properties().get( key );\n-        }\n-        if ( object instanceof Map<?,?> )\n-        {\n-            Map<String,Object> map = (Map<String,Object>) object;\n-            return map.get( key );\n-        }\n-        if ( object instanceof TemporalValue<?,?> )\n-        {\n-            return ((TemporalValue<?,?>) object).get( key );\n-        }\n-        if ( object instanceof DurationValue )\n-        {\n-            return ((DurationValue) object).get( key );\n-        }\n-        if ( object instanceof PointValue )\n-        {\n-            return ((PointValue) object).get( key );\n-        }\n-\n-        // NOTE: VirtualNodeValue and VirtualRelationshipValue will fall through to here\n-        // To handle these we would need specialized cursor code\n-        throw new CypherTypeException( String.format( \"Type mismatch: expected a map but was %s\", object ), null );\n+      return -1L;\n+    } else if (obj instanceof VirtualNodeValue)\n+    {\n+      return ((VirtualNodeValue) obj).id();\n+    } else if (obj instanceof VirtualRelationshipValue)\n+    {\n+      return ((VirtualRelationshipValue) obj).id();\n+    } else if (obj instanceof Long)\n+    {\n+      return (Long) obj;\n+    } else\n+    {\n+      throw new IllegalArgumentException(\n+          format(\"Can not be converted to long: %s\", obj.getClass().getName()));\n     }\n-\n-    static class ArrayIterator implements Iterator\n+  }\n+\n+  //In the store we only support storable Value types and arrays thereof.\n+  //In cypher we must make an effort to transform Cypher lists to appropriate arrays whenever\n+  //we are using sending values down to the store or to an index.\n+  public static Object makeValueNeoSafe(Object object)\n+  {\n+    AnyValue value = object instanceof AnyValue ? ((AnyValue) object) : ValueUtils.of(object);\n+    return org.neo4j.cypher.internal.runtime.interpreted.makeValueNeoSafe.apply(value);\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public static Object mapGetProperty(Object object, String key)\n+  {\n+    if (object == NO_VALUE)\n+    {\n+      return NO_VALUE;\n+    }\n+    if (object instanceof MapValue)\n+    {\n+      MapValue map = (MapValue) object;\n+      return map.get(key);\n+    }\n+    if (object instanceof NodeProxyWrappingNodeValue)\n+    {\n+      return Values.of(((NodeProxyWrappingNodeValue) object).nodeProxy().getProperty(key));\n+    }\n+    if (object instanceof RelationshipProxyWrappingValue)\n+    {\n+      return Values.of(((RelationshipProxyWrappingValue) object).relationshipProxy().getProperty(key));\n+    }\n+    if (object instanceof PropertyContainer) // Entity that is not wrapped by an AnyValue\n+    {\n+      return Values.of(((PropertyContainer) object).getProperty(key));\n+    }\n+    if (object instanceof NodeValue)\n+    {\n+      return ((NodeValue) object).properties().get(key);\n+    }\n+    if (object instanceof RelationshipValue)\n+    {\n+      return ((RelationshipValue) object).properties().get(key);\n+    }\n+    if (object instanceof Map<?, ?>)\n+    {\n+      Map<String, Object> map = (Map<String, Object>) object;\n+      return map.get(key);\n+    }\n+    if (object instanceof TemporalValue<?, ?>)\n     {\n-        private int position;\n-        private final int len;\n-        private final Object array;\n+      return ((TemporalValue<?, ?>) object).get(key);\n+    }\n+    if (object instanceof DurationValue)\n+    {\n+      return ((DurationValue) object).get(key);\n+    }\n+    if (object instanceof PointValue)\n+    {\n+      return ((PointValue) object).get(key);\n+    }\n \n-        private ArrayIterator( Object array )\n-        {\n-            this.position = 0;\n-            this.len = Array.getLength( array );\n-            this.array = array;\n-        }\n+    // NOTE: VirtualNodeValue and VirtualRelationshipValue will fall through to here\n+    // To handle these we would need specialized cursor code\n+    throw new CypherTypeException(String.format(\"Type mismatch: expected a map but was %s\", object), null);\n+  }\n \n-        @Override\n-        public boolean hasNext()\n-        {\n-            return position < len;\n-        }\n+  static class ArrayIterator implements Iterator\n+  {\n+    private int position;\n+    private final int len;\n+    private final Object array;\n \n-        @Override\n-        public Object next()\n-        {\n-            if ( position >= len )\n-            {\n-                throw new NoSuchElementException();\n-            }\n-            int offset = position++;\n-            return Array.get( array, offset );\n-        }\n+    private ArrayIterator(Object array)\n+    {\n+      this.position = 0;\n+      this.len = Array.getLength(array);\n+      this.array = array;\n+    }\n+\n+    @Override\n+    public boolean hasNext()\n+    {\n+      return position < len;\n+    }\n+\n+    @Override\n+    public Object next()\n+    {\n+      if (position >= len)\n+      {\n+        throw new NoSuchElementException();\n+      }\n+      int offset = position++;\n+      return Array.get(array, offset);\n     }\n+  }\n }\n",
            "diff_size": 802
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "17",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "27",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "221",
                    "column": "25",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "221",
                    "column": "39",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "221",
                    "column": "57",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "227",
                    "column": "33",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "227",
                    "column": "67",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "227",
                    "column": "109",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 325).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "229",
                    "column": "39",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "column": "79",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "column": "115",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "column": "140",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "column": "184",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "column": "232",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "229",
                    "column": "276",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "248",
                    "column": "23",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "263",
                    "column": "17",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "281",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "299",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "30",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "314",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "321",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "332",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "337",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "421",
                    "column": "45",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "421",
                    "column": "84",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "498",
                    "column": "30",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "513",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "623",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "655",
                    "column": "25",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "690",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/384/CompiledConversionUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/384/CompiledConversionUtils.java\nindex 037546be3ca..1148475f9c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/384/CompiledConversionUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/384/CompiledConversionUtils.java\n@@ -35,7 +35,6 @@ import java.util.stream.DoubleStream;\n import java.util.stream.IntStream;\n import java.util.stream.LongStream;\n import java.util.stream.Stream;\n-\n import org.neo4j.cypher.internal.util.v3_4.CypherTypeException;\n import org.neo4j.cypher.internal.util.v3_4.IncomparableValuesException;\n import org.neo4j.graphdb.Node;\n@@ -60,47 +59,55 @@ import org.neo4j.values.virtual.RelationshipValue;\n import org.neo4j.values.virtual.VirtualNodeValue;\n import org.neo4j.values.virtual.VirtualRelationshipValue;\n import org.neo4j.values.virtual.VirtualValues;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.values.SequenceValue.IterationPreference.RANDOM_ACCESS;\n+\n import static org.neo4j.values.storable.Values.NO_VALUE;\n \n // Class with static methods used by compiled execution plans\n-@SuppressWarnings( \"unused\" )\n+\n+@ SuppressWarnings( \"unused\")\n public abstract class CompiledConversionUtils\n {\n     public static boolean coerceToPredicate( Object value )\n     {\n-        if ( value == null || value == Values.NO_VALUE )\n+        if ( value == null|| value == Values.NO_VALUE )\n         {\n             return false;\n         }\n+\n         if ( value instanceof BooleanValue )\n         {\n             return ((BooleanValue) value).booleanValue();\n         }\n+\n         if ( value instanceof Boolean )\n         {\n-            return (boolean) value;\n+            return ( boolean) value;\n         }\n+\n         if ( value instanceof ArrayValue )\n         {\n             return ((ArrayValue) value).length() > 0;\n         }\n+\n         if ( value.getClass().isArray() )\n         {\n             return Array.getLength( value ) > 0;\n         }\n+\n         throw new CypherTypeException( \"Don't know how to treat that as a predicate: \" + value.toString(), null );\n     }\n \n     public static Set<?> toSet( Object value )\n     {\n-        if ( value == null || value == NO_VALUE )\n+        if ( value == null|| value == NO_VALUE )\n         {\n             return Collections.emptySet();\n         }\n-        else if ( value instanceof SequenceValue )\n+        else\n+        if ( value instanceof SequenceValue )\n         {\n             SequenceValue sequenceValue = (SequenceValue) value;\n             Iterator<AnyValue> iterator = sequenceValue.iterator();\n@@ -118,34 +125,40 @@ public abstract class CompiledConversionUtils\n             else\n             {\n                 set = new HashSet<>();\n-                while ( iterator.hasNext() )\n+                while( iterator.hasNext())\n                 {\n                     AnyValue element = iterator.next();\n                     set.add( element );\n                 }\n             }\n+\n             return set;\n         }\n-        else if ( value instanceof Collection<?> )\n+        else\n+        if ( value instanceof Collection<?> )\n         {\n             return new HashSet<>( (Collection<?>) value );\n         }\n-        else if ( value instanceof LongStream )\n+            else\n+        if ( value instanceof LongStream )\n         {\n             LongStream stream = (LongStream) value;\n             return stream.boxed().collect( Collectors.toSet() );\n         }\n-        else if ( value instanceof IntStream )\n+            else\n+        if ( value instanceof IntStream )\n         {\n             IntStream stream = (IntStream) value;\n             return stream.boxed().collect( Collectors.toSet() );\n         }\n-        else if ( value instanceof DoubleStream )\n+            else\n+        if ( value instanceof DoubleStream )\n         {\n             DoubleStream stream = (DoubleStream) value;\n             return stream.boxed().collect( Collectors.toSet() );\n         }\n-        else if ( value.getClass().isArray() )\n+            else\n+        if ( value.getClass().isArray() )\n         {\n             int len = Array.getLength( value );\n             HashSet<Object> collection = new HashSet<>( len );\n@@ -153,11 +166,11 @@ public abstract class CompiledConversionUtils\n             {\n                 collection.add( Array.get( value, i ) );\n             }\n+\n             return collection;\n         }\n \n-        throw new CypherTypeException(\n-                \"Don't know how to create a set out of \" + value.getClass().getSimpleName(), null );\n+        throw new CypherTypeException( \"Don't know how to create a set out of \" + value.getClass().getSimpleName(), null );\n     }\n \n     public static CompositeKey compositeKey( long... keys )\n@@ -181,15 +194,14 @@ public abstract class CompiledConversionUtils\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+            if ( o == null|| getClass() != o.getClass() )\n             {\n                 return false;\n             }\n \n             CompositeKey that = (CompositeKey) o;\n-\n             return Arrays.equals( key, that.key );\n-\n         }\n \n         @Override\n@@ -203,55 +215,56 @@ public abstract class CompiledConversionUtils\n      * Checks equality according to OpenCypher\n      * @return true if equal, false if not equal and null if incomparable\n      */\n+\n     public static Boolean equals( Object lhs, Object rhs )\n     {\n-        if ( lhs == null || rhs == null || lhs == NO_VALUE || rhs == NO_VALUE )\n+        if ( lhs == null|| rhs == null|| lhs == NO_VALUE|| rhs == NO_VALUE )\n         {\n             return null;\n         }\n \n         boolean lhsVirtualNodeValue = lhs instanceof VirtualNodeValue;\n-        if ( lhsVirtualNodeValue || rhs instanceof VirtualNodeValue || lhs instanceof VirtualRelationshipValue ||\n-             rhs instanceof VirtualRelationshipValue )\n+        if ( lhsVirtualNodeValue|| rhs instanceof VirtualNodeValue|| lhs instanceof VirtualRelationshipValue|| rhs instanceof VirtualRelationshipValue )\n         {\n-            if ( (lhsVirtualNodeValue && !(rhs instanceof VirtualNodeValue)) ||\n-                 (rhs instanceof VirtualNodeValue && !lhsVirtualNodeValue) ||\n-                 (lhs instanceof VirtualRelationshipValue && !(rhs instanceof VirtualRelationshipValue)) ||\n-                 (rhs instanceof VirtualRelationshipValue && !(lhs instanceof VirtualRelationshipValue)) )\n+            if ( ( lhsVirtualNodeValue&& ! ( rhs instanceof VirtualNodeValue))|| ( rhs instanceof VirtualNodeValue&& ! lhsVirtualNodeValue)|| ( lhs instanceof VirtualRelationshipValue&& ! ( rhs instanceof VirtualRelationshipValue))|| ( rhs instanceof VirtualRelationshipValue&& ! ( lhs instanceof VirtualRelationshipValue)) )\n             {\n                 throw new IncomparableValuesException( lhs.getClass().getSimpleName(), rhs.getClass().getSimpleName() );\n             }\n+\n             return lhs.equals( rhs );\n         }\n \n         AnyValue lhsValue = lhs instanceof AnyValue ? (AnyValue) lhs : ValueUtils.of( lhs );\n         AnyValue rhsValue = rhs instanceof AnyValue ? (AnyValue) rhs : ValueUtils.of( rhs );\n-\n         return lhsValue.ternaryEquals( rhsValue );\n     }\n \n     // Ternary OR\n+\n     public static Boolean or( Object lhs, Object rhs )\n     {\n         Boolean l = toBooleanOrNull( lhs );\n         Boolean r = toBooleanOrNull( rhs );\n-\n-        if ( l == null && r == null )\n+        if ( l == null&& r == null )\n         {\n             return null;\n         }\n-        else if ( l == null )\n+        else\n+        if ( l == null )\n         {\n             return r ? true : null;\n         }\n-        else if ( r == null )\n-        {\n-            return l ? true : null;\n-        }\n-        return l || r;\n+        else\n+            if ( r == null )\n+            {\n+                return l ? true : null;\n+            }\n+\n+        return l|| r;\n     }\n \n     // Ternary NOT\n+\n     public static Boolean not( Object predicate )\n     {\n         Boolean b = toBooleanOrNull( predicate );\n@@ -259,84 +272,93 @@ public abstract class CompiledConversionUtils\n         {\n             return null;\n         }\n-        return !b;\n+\n+        return ! b;\n     }\n \n     private static Boolean toBooleanOrNull( Object o )\n     {\n-        if ( o == null || o == NO_VALUE )\n+        if ( o == null|| o == NO_VALUE )\n         {\n             return null;\n         }\n-        else if ( o instanceof Boolean )\n+        else\n+        if ( o instanceof Boolean )\n         {\n             return (Boolean) o;\n         }\n-        else if ( o instanceof BooleanValue )\n+        else\n+        if ( o instanceof BooleanValue )\n         {\n             return ((BooleanValue) o).booleanValue();\n         }\n+\n         throw new CypherTypeException( \"Don't know how to treat that as a boolean: \" + o.toString(), null );\n     }\n \n-    @SuppressWarnings( {\"unchecked\", \"WeakerAccess\"} )\n+    @ SuppressWarnings( { \"unchecked\", \"WeakerAccess\"})\n     public static AnyValue materializeAnyResult( EmbeddedProxySPI proxySpi, Object anyValue )\n     {\n-        if ( anyValue == null || anyValue == NO_VALUE )\n+        if ( anyValue == null|| anyValue == NO_VALUE )\n         {\n             return NO_VALUE;\n         }\n-        else if ( anyValue instanceof AnyValue )\n+        else\n+        if ( anyValue instanceof AnyValue )\n         {\n             return materializeAnyValueResult( proxySpi, anyValue );\n         }\n-        else if ( anyValue instanceof List )\n+        else\n+        if ( anyValue instanceof List )\n         {\n-            return VirtualValues.fromList( (List<AnyValue>) (((List) anyValue).stream()\n-                    .map( v -> materializeAnyResult( proxySpi, v ) ).collect( Collectors.toList() ) ) );\n+            return VirtualValues.fromList( (List<AnyValue>) (((List) anyValue).stream().map( v -> materializeAnyResult( proxySpi, v ) ).collect( Collectors.toList() )) );\n         }\n-        else if ( anyValue instanceof Map )\n+            else\n+        if ( anyValue instanceof Map )\n         {\n-            Map<String,?> incoming = (Map<String,?>) anyValue;\n+            Map<String, ?> incoming = (Map<String, ?>) anyValue;\n             HashMap<String,AnyValue> outgoing = new HashMap<>( incoming.size() );\n-            for ( Map.Entry<String,?> entry : incoming.entrySet() )\n+            for( Map.Entry<String, ?> entry : incoming.entrySet()\n+            )\n             {\n                 outgoing.put( entry.getKey(), materializeAnyResult( proxySpi, entry.getValue() ) );\n             }\n+\n             return VirtualValues.map( outgoing );\n         }\n-        else if ( anyValue instanceof PrimitiveNodeStream )\n+            else\n+        if ( anyValue instanceof PrimitiveNodeStream )\n         {\n-            return VirtualValues.fromList( ((PrimitiveNodeStream) anyValue).longStream()\n-                    .mapToObj( id -> (AnyValue) ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( id ) ) )\n-                    .collect( Collectors.toList() ) );\n+            return VirtualValues.fromList( ((PrimitiveNodeStream) anyValue).longStream().mapToObj( id -> (AnyValue) ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( id ) ) ).collect( Collectors.toList() ) );\n         }\n-        else if ( anyValue instanceof PrimitiveRelationshipStream )\n+            else\n+        if ( anyValue instanceof PrimitiveRelationshipStream )\n         {\n-            return VirtualValues.fromList( ((PrimitiveRelationshipStream) anyValue).longStream()\n-                    .mapToObj( id -> (AnyValue) ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( id ) ) )\n-                    .collect( Collectors.toList() ) );\n+            return VirtualValues.fromList( ((PrimitiveRelationshipStream) anyValue).longStream().mapToObj( id -> (AnyValue) ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( id ) ) ).collect( Collectors.toList() ) );\n         }\n-        else if ( anyValue instanceof LongStream )\n+            else\n+        if ( anyValue instanceof LongStream )\n         {\n             long[] array = ((LongStream) anyValue).toArray();\n             return Values.longArray( array );\n         }\n-        else if ( anyValue instanceof DoubleStream )\n+            else\n+        if ( anyValue instanceof DoubleStream )\n         {\n             double[] array = ((DoubleStream) anyValue).toArray();\n             return Values.doubleArray( array );\n         }\n-        else if ( anyValue instanceof IntStream )\n+            else\n+        if ( anyValue instanceof IntStream )\n         {\n             // IntStream is only used for list of primitive booleans\n             return VirtualValues.fromList( ((IntStream) anyValue).mapToObj( i -> Values.booleanValue( i != 0 ) ).collect( Collectors.toList() ) );\n         }\n-        else if ( anyValue.getClass().isArray() )\n+            else\n+        if ( anyValue.getClass().isArray() )\n         {\n             Class<?> componentType = anyValue.getClass().getComponentType();\n             int length = Array.getLength( anyValue );\n-\n             if ( componentType.isPrimitive() )\n             {\n                 Object copy = Array.newInstance( componentType, length );\n@@ -344,27 +366,30 @@ public abstract class CompiledConversionUtils\n                 System.arraycopy( anyValue, 0, copy, 0, length );\n                 return ValueUtils.of( copy );\n             }\n-            else if ( anyValue instanceof String[] )\n+            else\n+            if ( anyValue instanceof String[] )\n             {\n                 return Values.stringArray( (String[]) anyValue );\n             }\n             else\n-            {\n-                AnyValue[] copy = new AnyValue[length];\n-                for ( int i = 0; i < length; i++ )\n                 {\n-                    copy[i] = materializeAnyResult( proxySpi, Array.get( anyValue, i ) );\n+                    AnyValue[] copy = new AnyValue[length];\n+                    for ( int i = 0; i < length; i++ )\n+                    {\n+                        copy[i] = materializeAnyResult( proxySpi, Array.get( anyValue, i ) );\n+                    }\n+\n+                    return VirtualValues.list( copy );\n                 }\n-                return VirtualValues.list( copy );\n-            }\n         }\n-        else\n+            else\n         {\n             return ValueUtils.of( anyValue );\n         }\n     }\n \n     // NOTE: This assumes anyValue is an instance of AnyValue\n+\n     public static AnyValue materializeAnyValueResult( EmbeddedProxySPI proxySpi, Object anyValue )\n     {\n         if ( anyValue instanceof VirtualNodeValue )\n@@ -373,14 +398,17 @@ public abstract class CompiledConversionUtils\n             {\n                 return (AnyValue) anyValue;\n             }\n+\n             return ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( ((VirtualNodeValue) anyValue).id() ) );\n         }\n+\n         if ( anyValue instanceof VirtualRelationshipValue )\n         {\n             if ( anyValue instanceof RelationshipValue )\n             {\n                 return (AnyValue) anyValue;\n             }\n+\n             return ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( ((VirtualRelationshipValue) anyValue).id() ) );\n         }\n         // If it is a list or map, run it through a ValueMapper that will create proxy objects for entities if needed.\n@@ -389,10 +417,12 @@ public abstract class CompiledConversionUtils\n         // Doing this conversion lazily instead, by wrapping with TransformedListValue or TransformedMapValue is probably not a\n         // good idea because of the complexities involved (see TOMBSTONE in VirtualValues about why TransformedListValue was killed).\n         // NOTE: There is also a case where a ListValue can be storable (ArrayValueListValue) where no conversion is needed\n-        if ( (anyValue instanceof ListValue && !((ListValue) anyValue).storable()) || anyValue instanceof MapValue )\n+\n+        if ( ( anyValue instanceof ListValue&& ! ((ListValue) anyValue).storable())|| anyValue instanceof MapValue )\n         {\n             return CompiledMaterializeValueMapper.mapAnyValue( proxySpi, (AnyValue) anyValue );\n         }\n+\n         return (AnyValue) anyValue;\n     }\n \n@@ -403,14 +433,17 @@ public abstract class CompiledConversionUtils\n         {\n             return (NodeValue) anyValue;\n         }\n-        else if ( anyValue instanceof VirtualNodeValue )\n+        else\n+        if ( anyValue instanceof VirtualNodeValue )\n         {\n             return ValueUtils.fromNodeProxy( proxySpi.newNodeProxy( ((VirtualNodeValue) anyValue).id() ) );\n         }\n-        else if ( anyValue instanceof Node )\n+        else\n+        if ( anyValue instanceof Node )\n         {\n             return ValueUtils.fromNodeProxy( (Node) anyValue );\n         }\n+\n         throw new IllegalArgumentException( \"Do not know how to materialize node value from type \" + anyValue.getClass().getName() );\n     }\n \n@@ -421,14 +454,17 @@ public abstract class CompiledConversionUtils\n         {\n             return (RelationshipValue) anyValue;\n         }\n-        else if ( anyValue instanceof VirtualRelationshipValue )\n+        else\n+        if ( anyValue instanceof VirtualRelationshipValue )\n         {\n             return ValueUtils.fromRelationshipProxy( proxySpi.newRelationshipProxy( ((VirtualRelationshipValue) anyValue).id() ) );\n         }\n-        else if ( anyValue instanceof Relationship )\n+        else\n+        if ( anyValue instanceof Relationship )\n         {\n             return ValueUtils.fromRelationshipProxy( (Relationship) anyValue );\n         }\n+\n         throw new IllegalArgumentException( \"Do not know how to materialize relationship value from type \" + anyValue.getClass().getName() );\n     }\n \n@@ -438,234 +474,274 @@ public abstract class CompiledConversionUtils\n         {\n             return ((Iterable) iterable).iterator();\n         }\n-        else if ( iterable instanceof PrimitiveEntityStream )\n+        else\n+        if ( iterable instanceof PrimitiveEntityStream )\n         {\n             return ((PrimitiveEntityStream) iterable).iterator();\n         }\n-        else if ( iterable instanceof LongStream )\n+        else\n+        if ( iterable instanceof LongStream )\n         {\n             return ((LongStream) iterable).iterator();\n         }\n-        else if ( iterable instanceof DoubleStream )\n+            else\n+        if ( iterable instanceof DoubleStream )\n         {\n             return ((DoubleStream) iterable).iterator();\n         }\n-        else if ( iterable instanceof IntStream )\n+            else\n+        if ( iterable instanceof IntStream )\n         {\n             return ((IntStream) iterable).iterator();\n         }\n-        else if ( iterable == null || iterable == NO_VALUE )\n+            else\n+        if ( iterable == null|| iterable == NO_VALUE )\n         {\n             return Collections.emptyIterator();\n         }\n-        else if ( iterable.getClass().isArray() )\n+            else\n+        if ( iterable.getClass().isArray() )\n         {\n             return new ArrayIterator( iterable );\n         }\n-        else\n+            else\n         {\n-            return Stream.of(iterable).iterator();\n+            return Stream.of( iterable ).iterator();\n         }\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     public static LongStream toLongStream( Object list )\n     {\n         if ( list == null )\n         {\n             return LongStream.empty();\n         }\n-        else if ( list instanceof SequenceValue )\n+        else\n+        if ( list instanceof SequenceValue )\n         {\n             throw new IllegalArgumentException( \"Need to implement support for SequenceValue in CompiledConversionUtils.toLongStream\" );\n         }\n-        else if ( list instanceof List )\n+        else\n+        if ( list instanceof List )\n         {\n             return ((List) list).stream().mapToLong( n -> ((Number) n).longValue() );\n         }\n-        else if ( Object[].class.isAssignableFrom( list.getClass() ) )\n+            else\n+        if ( Object[].class.isAssignableFrom( list.getClass() ) )\n         {\n             return Arrays.stream( (Object[]) list ).mapToLong( n -> ((Number) n).longValue() );\n         }\n-        else if ( list instanceof byte[] )\n+            else\n+        if ( list instanceof byte[] )\n         {\n-            byte[] array = (byte[]) list;\n-            return IntStream.range( 0, array.length ).mapToLong( i -> array[i] );\n+            byte[] array = ( byte[]) list;\n+            return IntStream.range( 0, array.length ).mapToLong( i -> array[ i] );\n         }\n-        else if ( list instanceof short[] )\n+            else\n+        if ( list instanceof short[] )\n         {\n-            short[] array = (short[]) list;\n-            return IntStream.range( 0, array.length ).mapToLong( i -> array[i] );\n+            short[] array = ( short[]) list;\n+            return IntStream.range( 0, array.length ).mapToLong( i -> array[ i] );\n         }\n-        else if ( list instanceof int[] )\n+            else\n+        if ( list instanceof int[] )\n         {\n-            return IntStream.of( (int[]) list ).mapToLong( i -> i );\n+            return IntStream.of( ( int[]) list ).mapToLong( i -> i );\n         }\n-        else if ( list instanceof long[] )\n+            else\n+        if ( list instanceof long[] )\n         {\n-            return LongStream.of( (long[]) list );\n+            return LongStream.of( ( long[]) list );\n         }\n+\n         throw new IllegalArgumentException( format( \"Can not be converted to stream: %s\", list.getClass().getName() ) );\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     public static DoubleStream toDoubleStream( Object list )\n     {\n         if ( list == null )\n         {\n             return DoubleStream.empty();\n         }\n-        else if ( list instanceof SequenceValue )\n+        else\n+        if ( list instanceof SequenceValue )\n         {\n             throw new IllegalArgumentException( \"Need to implement support for SequenceValue in CompiledConversionUtils.toDoubleStream\" );\n         }\n-        else if ( list instanceof List )\n+        else\n+        if ( list instanceof List )\n         {\n             return ((List) list).stream().mapToDouble( n -> ((Number) n).doubleValue() );\n         }\n-        else if ( Object[].class.isAssignableFrom( list.getClass() ) )\n+            else\n+        if ( Object[].class.isAssignableFrom( list.getClass() ) )\n         {\n             return Arrays.stream( (Object[]) list ).mapToDouble( n -> ((Number) n).doubleValue() );\n         }\n-        else if ( list instanceof float[] )\n+            else\n+        if ( list instanceof float[] )\n         {\n-            float[] array = (float[]) list;\n-            return IntStream.range( 0, array.length ).mapToDouble( i -> array[i] );\n+            float[] array = ( float[]) list;\n+            return IntStream.range( 0, array.length ).mapToDouble( i -> array[ i] );\n         }\n-        else if ( list instanceof double[] )\n+            else\n+        if ( list instanceof double[] )\n         {\n-            return DoubleStream.of( (double[]) list );\n+            return DoubleStream.of( ( double[]) list );\n         }\n+\n         throw new IllegalArgumentException( format( \"Can not be converted to stream: %s\", list.getClass().getName() ) );\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     public static IntStream toBooleanStream( Object list )\n     {\n         if ( list == null )\n         {\n             return IntStream.empty();\n         }\n-        else if ( list instanceof SequenceValue )\n+        else\n+        if ( list instanceof SequenceValue )\n         {\n             throw new IllegalArgumentException( \"Need to implement support for SequenceValue in CompiledConversionUtils.toBooleanStream\" );\n         }\n-        else if ( list instanceof List )\n+        else\n+        if ( list instanceof List )\n         {\n             return ((List) list).stream().mapToInt( n -> ((Number) n).intValue() );\n         }\n-        else if ( Object[].class.isAssignableFrom( list.getClass() ) )\n+            else\n+        if ( Object[].class.isAssignableFrom( list.getClass() ) )\n         {\n             return Arrays.stream( (Object[]) list ).mapToInt( n -> ((Number) n).intValue() );\n         }\n-        else if ( list instanceof boolean[] )\n+            else\n+        if ( list instanceof boolean[] )\n         {\n-            boolean[] array = (boolean[]) list;\n-            return IntStream.range( 0, array.length ).map( i -> (array[i]) ? 1 : 0 );\n+            boolean[] array = ( boolean[]) list;\n+            return IntStream.range( 0, array.length ).map( i -> ( array[ i]) ? 1 : 0 );\n         }\n+\n         throw new IllegalArgumentException( format( \"Can not be converted to stream: %s\", list.getClass().getName() ) );\n     }\n \n-    @SuppressWarnings( \"unused\" ) // called from compiled code\n+    @ SuppressWarnings( \"unused\") // called from compiled code\n     public static long unboxNodeOrNull( VirtualNodeValue value )\n     {\n         if ( value == null )\n         {\n-            return -1L;\n+            return - 1L;\n         }\n+\n         return value.id();\n     }\n \n-    @SuppressWarnings( \"unused\" ) // called from compiled code\n+    @ SuppressWarnings( \"unused\") // called from compiled code\n     public static long unboxRelationshipOrNull( VirtualRelationshipValue value )\n     {\n         if ( value == null )\n         {\n-            return -1L;\n+            return - 1L;\n         }\n+\n         return value.id();\n     }\n \n-    @SuppressWarnings( \"unused\" ) // called from compiled code\n+    @ SuppressWarnings( \"unused\") // called from compiled code\n     public static long extractLong( Object obj )\n     {\n-        if ( obj == null || obj == NO_VALUE )\n+        if ( obj == null|| obj == NO_VALUE )\n         {\n-            return -1L;\n+            return - 1L;\n         }\n-        else if ( obj instanceof VirtualNodeValue )\n+        else\n+        if ( obj instanceof VirtualNodeValue )\n         {\n             return ((VirtualNodeValue) obj).id();\n         }\n-        else if ( obj instanceof VirtualRelationshipValue )\n+        else\n+        if ( obj instanceof VirtualRelationshipValue )\n         {\n             return ((VirtualRelationshipValue) obj).id();\n         }\n-        else if ( obj instanceof Long )\n+            else\n+        if ( obj instanceof Long )\n         {\n             return (Long) obj;\n         }\n-        else\n+            else\n         {\n-            throw new IllegalArgumentException(\n-                    format( \"Can not be converted to long: %s\", obj.getClass().getName() ) );\n+            throw new IllegalArgumentException( format( \"Can not be converted to long: %s\", obj.getClass().getName() ) );\n         }\n     }\n \n     //In the store we only support storable Value types and arrays thereof.\n     //In cypher we must make an effort to transform Cypher lists to appropriate arrays whenever\n     //we are using sending values down to the store or to an index.\n+\n     public static Object makeValueNeoSafe( Object object )\n     {\n         AnyValue value = object instanceof AnyValue ? ((AnyValue) object) : ValueUtils.of( object );\n         return org.neo4j.cypher.internal.runtime.interpreted.makeValueNeoSafe.apply( value );\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     public static Object mapGetProperty( Object object, String key )\n     {\n         if ( object == NO_VALUE )\n         {\n             return NO_VALUE;\n         }\n+\n         if ( object instanceof MapValue )\n         {\n             MapValue map = (MapValue) object;\n             return map.get( key );\n         }\n+\n         if ( object instanceof NodeProxyWrappingNodeValue )\n         {\n             return Values.of( ((NodeProxyWrappingNodeValue) object).nodeProxy().getProperty( key ) );\n         }\n+\n         if ( object instanceof RelationshipProxyWrappingValue )\n         {\n             return Values.of( ((RelationshipProxyWrappingValue) object).relationshipProxy().getProperty( key ) );\n         }\n+\n         if ( object instanceof PropertyContainer ) // Entity that is not wrapped by an AnyValue\n         {\n             return Values.of( ((PropertyContainer) object).getProperty( key ) );\n         }\n+\n         if ( object instanceof NodeValue )\n         {\n             return ((NodeValue) object).properties().get( key );\n         }\n+\n         if ( object instanceof RelationshipValue )\n         {\n             return ((RelationshipValue) object).properties().get( key );\n         }\n-        if ( object instanceof Map<?,?> )\n+\n+        if ( object instanceof Map<?, ?> )\n         {\n             Map<String,Object> map = (Map<String,Object>) object;\n             return map.get( key );\n         }\n-        if ( object instanceof TemporalValue<?,?> )\n+\n+        if ( object instanceof TemporalValue<?, ?> )\n         {\n-            return ((TemporalValue<?,?>) object).get( key );\n+            return ((TemporalValue<?, ?>) object).get( key );\n         }\n+\n         if ( object instanceof DurationValue )\n         {\n             return ((DurationValue) object).get( key );\n         }\n+\n         if ( object instanceof PointValue )\n         {\n             return ((PointValue) object).get( key );\n@@ -673,6 +749,7 @@ public abstract class CompiledConversionUtils\n \n         // NOTE: VirtualNodeValue and VirtualRelationshipValue will fall through to here\n         // To handle these we would need specialized cursor code\n+\n         throw new CypherTypeException( String.format( \"Type mismatch: expected a map but was %s\", object ), null );\n     }\n \n@@ -702,8 +779,9 @@ public abstract class CompiledConversionUtils\n             {\n                 throw new NoSuchElementException();\n             }\n-            int offset = position++;\n+\n+            int offset = position ++;\n             return Array.get( array, offset );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 231
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
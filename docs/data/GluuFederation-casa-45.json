{
    "project_name": "GluuFederation-casa",
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "9",
                "severity": "error",
                "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n            json = Utils.jsonFromObject(map);\n        }\n        else {\n            httpStatus = BAD_REQUEST;\n            json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler/45/ComputeRequestCode.java\nindex 9d3cacf4f98..214b3d4a8e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler/45/ComputeRequestCode.java\n@@ -35,8 +35,7 @@ public enum ComputeRequestCode {\n             map.put(\"request\", request);\n \n             json = Utils.jsonFromObject(map);\n-        }\n-        else {\n+        } else {\n             httpStatus = BAD_REQUEST;\n             json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/intellij/45/ComputeRequestCode.java\nindex 9d3cacf4f98..50fed3bfceb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/intellij/45/ComputeRequestCode.java\n@@ -3,6 +3,7 @@\n  *\n  * Copyright (c) 2018, Gluu\n  */\n+\n package org.gluu.casa.plugins.authnmethod.rs.status.otp;\n \n import org.gluu.casa.misc.Utils;\n@@ -35,8 +36,7 @@ public enum ComputeRequestCode {\n             map.put(\"request\", request);\n \n             json = Utils.jsonFromObject(map);\n-        }\n-        else {\n+        } else {\n             httpStatus = BAD_REQUEST;\n             json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));\n         }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/naturalize/45/ComputeRequestCode.java\nindex 9d3cacf4f98..a02b0bac677 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/naturalize/45/ComputeRequestCode.java\n@@ -35,8 +35,7 @@ public enum ComputeRequestCode {\n             map.put(\"request\", request);\n \n             json = Utils.jsonFromObject(map);\n-        }\n-        else {\n+        } else {\n             httpStatus = BAD_REQUEST;\n             json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));\n         }\n@@ -49,4 +48,4 @@ public enum ComputeRequestCode {\n         return getResponse(null, null);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/codebuff/45/ComputeRequestCode.java\nindex 9d3cacf4f98..98de634879f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/codebuff/45/ComputeRequestCode.java\n@@ -6,7 +6,6 @@\n package org.gluu.casa.plugins.authnmethod.rs.status.otp;\n \n import org.gluu.casa.misc.Utils;\n-\n import javax.ws.rs.core.Response;\n import java.util.Collections;\n import java.util.LinkedHashMap;\n@@ -18,35 +17,31 @@ import static javax.ws.rs.core.Response.Status.OK;\n /**\n  * @author jgomer\n  */\n+\n+\n public enum ComputeRequestCode {\n     NO_DISPLAY_NAME,\n     INVALID_MODE,\n     SUCCESS;\n \n     public Response getResponse(String key, String request) {\n-\n         String json;\n         Response.Status httpStatus;\n-\n         if (equals(SUCCESS)) {\n             httpStatus = OK;\n             Map<String, Object> map = new LinkedHashMap<>();    //Ensure data can be received in the same order as here\n             map.put(\"key\", key);\n             map.put(\"request\", request);\n-\n             json = Utils.jsonFromObject(map);\n-        }\n-        else {\n+        } else {\n             httpStatus = BAD_REQUEST;\n             json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));\n         }\n-\n         return Response.status(httpStatus).entity(json).build();\n-\n     }\n \n     public Response getResponse() {\n         return getResponse(null, null);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_random/45/ComputeRequestCode.java\nindex 9d3cacf4f98..214b3d4a8e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_random/45/ComputeRequestCode.java\n@@ -35,8 +35,7 @@ public enum ComputeRequestCode {\n             map.put(\"request\", request);\n \n             json = Utils.jsonFromObject(map);\n-        }\n-        else {\n+        } else {\n             httpStatus = BAD_REQUEST;\n             json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_three_grams/45/ComputeRequestCode.java\nindex 9d3cacf4f98..56a061bba62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/45/ComputeRequestCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_three_grams/45/ComputeRequestCode.java\n@@ -35,8 +35,7 @@ public enum ComputeRequestCode {\n             map.put(\"request\", request);\n \n             json = Utils.jsonFromObject(map);\n-        }\n-        else {\n+                } else {\n             httpStatus = BAD_REQUEST;\n             json = Utils.jsonFromObject(Collections.singletonMap(\"code\", toString()));\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
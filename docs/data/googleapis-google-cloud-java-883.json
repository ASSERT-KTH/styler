{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "883",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.google.cloud.compute;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/883/Regions.java\nindex f50344c8001..4d0ddf2ff7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/883/Regions.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.compute;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/883/Regions.java\nindex f50344c8001..184a79b9a2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/883/Regions.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.compute;\n \n import java.util.HashMap;\n@@ -49,7 +50,7 @@ public enum Regions {\n   NORTHAMERICA_NORTHEAST1(\n       \"northamerica-northeast1\",\n       new String[] {\n-        \"northamerica-northeast1-a\", \"northamerica-northeast1-b\", \"northamerica-northeast1-c\"\n+          \"northamerica-northeast1-a\", \"northamerica-northeast1-b\", \"northamerica-northeast1-c\"\n       }),\n   SOUTHAMERICA_EAST1(\n       \"southamerica-east1\",\n@@ -78,12 +79,16 @@ public enum Regions {\n     this.zones = zones;\n   }\n \n-  /** The name of this region. */\n+  /**\n+   * The name of this region.\n+   */\n   public String getName() {\n     return name;\n   }\n \n-  /** The zones of this region. */\n+  /**\n+   * The zones of this region.\n+   */\n   public String[] getZones() {\n     return zones;\n   }\n@@ -93,7 +98,7 @@ public enum Regions {\n    *\n    * @param regionName The name of the region.\n    * @return Regions enum representing the given region name, or a null if there is no Regions enum\n-   *     that is representing the given region name.\n+   * that is representing the given region name.\n    */\n   public static Regions fromName(String regionName) {\n     return REGIONS.get(regionName);\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/883/Regions.java\nindex f50344c8001..8cdcf025d12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/883/Regions.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.compute;\n \n import java.util.HashMap;\n@@ -27,37 +28,28 @@ public enum Regions {\n   ASIA_EAST1(\"asia-east1\", new String[] {\"asia-east1-a\", \"asia-east1-b\", \"asia-east1-c\"}),\n   ASIA_EAST2(\"asia-east2\", new String[] {\"asia-east2-a\", \"asia-east2-b\", \"asia-east2-c\"}),\n   ASIA_NORTHEAST1(\n-      \"asia-northeast1\",\n-      new String[] {\"asia-northeast1-a\", \"asia-northeast1-b\", \"asia-northeast1-c\"}),\n-  ASIA_NORTHEAST2(\n-      \"asia-northeast2\",\n-      new String[] {\"asia-northeast2-a\", \"asia-northeast2-b\", \"asia-northeast2-c\"}),\n-  ASIA_SOUTH1(\"asia-south1\", new String[] {\"asia-south1-a\", \"asia-south1-b\", \"asia-south1-c\"}),\n+      \"asia-northeast1\", new String[] {\"asia-northeast1-a\", \"asia-northeast1-b\", \"asia-northeast1-c\"}),\n+ASIA_NORTHEAST2(\n+      \"asia-northeast2\", new String[] {\"asia-northeast2-a\", \"asia-northeast2-b\", \"asia-northeast2-c\"}),\n+ASIA_SOUTH1(\"asia-south1\", new String[] {\"asia-south1-a\", \"asia-south1-b\", \"asia-south1-c\"}),\n   ASIA_SOUTHEAST1(\n-      \"asia-southeast1\",\n-      new String[] {\"asia-southeast1-a\", \"asia-southeast1-b\", \"asia-southeast1-c\"}),\n-  AUSTRALIA_SOUTHEAST1(\n-      \"australia-southeast1\",\n-      new String[] {\"australia-southeast1-a\", \"australia-southeast1-b\", \"australia-southeast1-c\"}),\n-  EUROPE_NORTH1(\n+      \"asia-southeast1\", new String[] {\"asia-southeast1-a\", \"asia-southeast1-b\", \"asia-southeast1-c\"}),\n+AUSTRALIA_SOUTHEAST1(\n+      \"australia-southeast1\", new String[] {\"australia-southeast1-a\", \"australia-southeast1-b\", \"australia-southeast1-c\"}),\n+EUROPE_NORTH1(\n       \"europe-north1\", new String[] {\"europe-north1-a\", \"europe-north1-b\", \"europe-north1-c\"}),\n-  EUROPE_WEST1(\"europe-west1\", new String[] {\"europe-west1-b\", \"europe-west1-c\", \"europe-west1-d\"}),\n+EUROPE_WEST1(\"europe-west1\", new String[] {\"europe-west1-b\", \"europe-west1-c\", \"europe-west1-d\"}),\n   EUROPE_WEST2(\"europe-west2\", new String[] {\"europe-west2-a\", \"europe-west2-b\", \"europe-west2-c\"}),\n   EUROPE_WEST3(\"europe-west3\", new String[] {\"europe-west3-a\", \"europe-west3-b\", \"europe-west3-c\"}),\n   EUROPE_WEST4(\"europe-west4\", new String[] {\"europe-west4-a\", \"europe-west4-b\", \"europe-west4-c\"}),\n   EUROPE_WEST6(\"europe-west6\", new String[] {\"europe-west6-a\", \"europe-west6-b\", \"europe-west6-c\"}),\n   NORTHAMERICA_NORTHEAST1(\n-      \"northamerica-northeast1\",\n-      new String[] {\n-        \"northamerica-northeast1-a\", \"northamerica-northeast1-b\", \"northamerica-northeast1-c\"\n-      }),\n-  SOUTHAMERICA_EAST1(\n-      \"southamerica-east1\",\n-      new String[] {\"southamerica-east1-a\", \"southamerica-east1-b\", \"southamerica-east1-c\"}),\n-  US_CENTRAL1(\n-      \"us-central1\",\n-      new String[] {\"us-central1-a\", \"us-central1-b\", \"us-central1-c\", \"us-central1-f\"}),\n-  US_EAST1(\"us-east1\", new String[] {\"us-east1-b\", \"us-east1-c\", \"us-east1-d\"}),\n+      \"northamerica-northeast1\", new String[] {\"northamerica-northeast1-a\", \"northamerica-northeast1-b\", \"northamerica-northeast1-c\"}),\n+SOUTHAMERICA_EAST1(\n+      \"southamerica-east1\", new String[] {\"southamerica-east1-a\", \"southamerica-east1-b\", \"southamerica-east1-c\"}),\n+US_CENTRAL1(\n+      \"us-central1\", new String[] {\"us-central1-a\", \"us-central1-b\", \"us-central1-c\", \"us-central1-f\"}),\n+US_EAST1(\"us-east1\", new String[] {\"us-east1-b\", \"us-east1-c\", \"us-east1-d\"}),\n   US_EAST4(\"us-east4\", new String[] {\"us-east4-a\", \"us-east4-b\", \"us-east4-c\"}),\n   US_WEST1(\"us-west1\", new String[] {\"us-west1-a\", \"us-west1-b\", \"us-west1-c\"}),\n   US_WEST2(\"us-west2\", new String[] {\"us-west2-a\", \"us-west2-b\", \"us-west2-c\"});\n@@ -98,4 +90,4 @@ public enum Regions {\n   public static Regions fromName(String regionName) {\n     return REGIONS.get(regionName);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/883/Regions.java\nindex f50344c8001..816eddeedb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/883/Regions.java\n@@ -23,44 +23,33 @@ import java.util.Map;\n  *\n  * @see <a href=\"https://cloud.google.com/compute/docs/regions-zones/\">Regions and Zones</a>\n  */\n+\n+\n public enum Regions {\n-  ASIA_EAST1(\"asia-east1\", new String[] {\"asia-east1-a\", \"asia-east1-b\", \"asia-east1-c\"}),\n-  ASIA_EAST2(\"asia-east2\", new String[] {\"asia-east2-a\", \"asia-east2-b\", \"asia-east2-c\"}),\n-  ASIA_NORTHEAST1(\n-      \"asia-northeast1\",\n-      new String[] {\"asia-northeast1-a\", \"asia-northeast1-b\", \"asia-northeast1-c\"}),\n-  ASIA_NORTHEAST2(\n-      \"asia-northeast2\",\n-      new String[] {\"asia-northeast2-a\", \"asia-northeast2-b\", \"asia-northeast2-c\"}),\n-  ASIA_SOUTH1(\"asia-south1\", new String[] {\"asia-south1-a\", \"asia-south1-b\", \"asia-south1-c\"}),\n-  ASIA_SOUTHEAST1(\n-      \"asia-southeast1\",\n-      new String[] {\"asia-southeast1-a\", \"asia-southeast1-b\", \"asia-southeast1-c\"}),\n-  AUSTRALIA_SOUTHEAST1(\n-      \"australia-southeast1\",\n-      new String[] {\"australia-southeast1-a\", \"australia-southeast1-b\", \"australia-southeast1-c\"}),\n-  EUROPE_NORTH1(\n-      \"europe-north1\", new String[] {\"europe-north1-a\", \"europe-north1-b\", \"europe-north1-c\"}),\n-  EUROPE_WEST1(\"europe-west1\", new String[] {\"europe-west1-b\", \"europe-west1-c\", \"europe-west1-d\"}),\n-  EUROPE_WEST2(\"europe-west2\", new String[] {\"europe-west2-a\", \"europe-west2-b\", \"europe-west2-c\"}),\n-  EUROPE_WEST3(\"europe-west3\", new String[] {\"europe-west3-a\", \"europe-west3-b\", \"europe-west3-c\"}),\n-  EUROPE_WEST4(\"europe-west4\", new String[] {\"europe-west4-a\", \"europe-west4-b\", \"europe-west4-c\"}),\n-  EUROPE_WEST6(\"europe-west6\", new String[] {\"europe-west6-a\", \"europe-west6-b\", \"europe-west6-c\"}),\n-  NORTHAMERICA_NORTHEAST1(\n-      \"northamerica-northeast1\",\n-      new String[] {\n-        \"northamerica-northeast1-a\", \"northamerica-northeast1-b\", \"northamerica-northeast1-c\"\n-      }),\n-  SOUTHAMERICA_EAST1(\n-      \"southamerica-east1\",\n-      new String[] {\"southamerica-east1-a\", \"southamerica-east1-b\", \"southamerica-east1-c\"}),\n-  US_CENTRAL1(\n-      \"us-central1\",\n-      new String[] {\"us-central1-a\", \"us-central1-b\", \"us-central1-c\", \"us-central1-f\"}),\n-  US_EAST1(\"us-east1\", new String[] {\"us-east1-b\", \"us-east1-c\", \"us-east1-d\"}),\n-  US_EAST4(\"us-east4\", new String[] {\"us-east4-a\", \"us-east4-b\", \"us-east4-c\"}),\n-  US_WEST1(\"us-west1\", new String[] {\"us-west1-a\", \"us-west1-b\", \"us-west1-c\"}),\n-  US_WEST2(\"us-west2\", new String[] {\"us-west2-a\", \"us-west2-b\", \"us-west2-c\"});\n+\n+  ASIA_EAST1(\"asia-east1\", new String[]{\"asia-east1-a\", \"asia-east1-b\", \"asia-east1-c\"}),\n+  ASIA_EAST2(\"asia-east2\", new String[]{\"asia-east2-a\", \"asia-east2-b\", \"asia-east2-c\"}),\n+  ASIA_NORTHEAST1(\"asia-northeast1\", new String[]{\"asia-northeast1-a\", \"asia-northeast1-b\", \"asia-northeast1-c\"}),\n+  ASIA_NORTHEAST2(\"asia-northeast2\", new String[]{\"asia-northeast2-a\", \"asia-northeast2-b\", \"asia-northeast2-c\"}),\n+  ASIA_SOUTH1(\"asia-south1\", new String[]{\"asia-south1-a\", \"asia-south1-b\", \"asia-south1-c\"}),\n+  ASIA_SOUTHEAST1(\"asia-southeast1\", new String[]{\"asia-southeast1-a\", \"asia-southeast1-b\", \"asia-southeast1-c\"}),\n+  AUSTRALIA_SOUTHEAST1(\"australia-southeast1\",\n+new String[]{\"australia-southeast1-a\", \"australia-southeast1-b\", \"australia-southeast1-c\"}),\n+  EUROPE_NORTH1(\"europe-north1\", new String[]{\"europe-north1-a\", \"europe-north1-b\", \"europe-north1-c\"}),\n+  EUROPE_WEST1(\"europe-west1\", new String[]{\"europe-west1-b\", \"europe-west1-c\", \"europe-west1-d\"}),\n+  EUROPE_WEST2(\"europe-west2\", new String[]{\"europe-west2-a\", \"europe-west2-b\", \"europe-west2-c\"}),\n+  EUROPE_WEST3(\"europe-west3\", new String[]{\"europe-west3-a\", \"europe-west3-b\", \"europe-west3-c\"}),\n+  EUROPE_WEST4(\"europe-west4\", new String[]{\"europe-west4-a\", \"europe-west4-b\", \"europe-west4-c\"}),\n+  EUROPE_WEST6(\"europe-west6\", new String[]{\"europe-west6-a\", \"europe-west6-b\", \"europe-west6-c\"}),\n+  NORTHAMERICA_NORTHEAST1(\"northamerica-northeast1\",\n+new String[]{\"northamerica-northeast1-a\", \"northamerica-northeast1-b\", \"northamerica-northeast1-c\"}),\n+  SOUTHAMERICA_EAST1(\"southamerica-east1\",\n+new String[]{\"southamerica-east1-a\", \"southamerica-east1-b\", \"southamerica-east1-c\"}),\n+  US_CENTRAL1(\"us-central1\", new String[]{\"us-central1-a\", \"us-central1-b\", \"us-central1-c\", \"us-central1-f\"}),\n+  US_EAST1(\"us-east1\", new String[]{\"us-east1-b\", \"us-east1-c\", \"us-east1-d\"}),\n+  US_EAST4(\"us-east4\", new String[]{\"us-east4-a\", \"us-east4-b\", \"us-east4-c\"}),\n+  US_WEST1(\"us-west1\", new String[]{\"us-west1-a\", \"us-west1-b\", \"us-west1-c\"}),\n+  US_WEST2(\"us-west2\", new String[]{\"us-west2-a\", \"us-west2-b\", \"us-west2-c\"});\n \n   private static final Map<String, Regions> REGIONS = new HashMap<>();\n \n@@ -79,11 +68,13 @@ public enum Regions {\n   }\n \n   /** The name of this region. */\n+\n   public String getName() {\n     return name;\n   }\n \n   /** The zones of this region. */\n+\n   public String[] getZones() {\n     return zones;\n   }\n@@ -95,7 +86,8 @@ public enum Regions {\n    * @return Regions enum representing the given region name, or a null if there is no Regions enum\n    *     that is representing the given region name.\n    */\n+\n   public static Regions fromName(String regionName) {\n     return REGIONS.get(regionName);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/883/Regions.java\nindex f50344c8001..4d0ddf2ff7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/883/Regions.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.compute;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/883/Regions.java\nindex f50344c8001..4d0ddf2ff7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/883/Regions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/883/Regions.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.compute;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2560",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2560/CypherAdapterStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2560/CypherAdapterStream.java\nindex 42e6b0a9751..259217ea523 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2560/CypherAdapterStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2560/CypherAdapterStream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.runtime;\n \n import java.time.Clock;\n@@ -44,134 +45,134 @@ import static org.neo4j.values.storable.Values.stringValue;\n \n class CypherAdapterStream extends BoltResult\n {\n-    private final QueryResult delegate;\n-    private final String[] fieldNames;\n-    private final Clock clock;\n-\n-    CypherAdapterStream( QueryResult delegate, Clock clock )\n+  private final QueryResult delegate;\n+  private final String[] fieldNames;\n+  private final Clock clock;\n+\n+  CypherAdapterStream(QueryResult delegate, Clock clock)\n+  {\n+    this.delegate = delegate;\n+    this.fieldNames = delegate.fieldNames();\n+    this.clock = clock;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    delegate.close();\n+  }\n+\n+  @Override\n+  public String[] fieldNames()\n+  {\n+    return fieldNames;\n+  }\n+\n+  @Override\n+  public void accept(final Visitor visitor) throws Exception\n+  {\n+    long start = clock.millis();\n+    delegate.accept(row ->\n     {\n-        this.delegate = delegate;\n-        this.fieldNames = delegate.fieldNames();\n-        this.clock = clock;\n-    }\n-\n-    @Override\n-    public void close()\n+      visitor.visit(row);\n+      return true;\n+    });\n+    visitor.addMetadata(\"result_consumed_after\", longValue(clock.millis() - start));\n+    QueryExecutionType qt = delegate.executionType();\n+    visitor.addMetadata(\"type\", Values.stringValue(queryTypeCode(qt.queryType())));\n+\n+    if (delegate.queryStatistics().containsUpdates())\n     {\n-        delegate.close();\n+      MapValue stats = queryStats(delegate.queryStatistics());\n+      visitor.addMetadata(\"stats\", stats);\n     }\n-\n-    @Override\n-    public String[] fieldNames()\n+    if (qt.requestedExecutionPlanDescription())\n     {\n-        return fieldNames;\n-    }\n-\n-    @Override\n-    public void accept( final Visitor visitor ) throws Exception\n-    {\n-        long start = clock.millis();\n-        delegate.accept( row ->\n-        {\n-            visitor.visit( row );\n-            return true;\n-        } );\n-        visitor.addMetadata( \"result_consumed_after\", longValue( clock.millis() - start ) );\n-        QueryExecutionType qt = delegate.executionType();\n-        visitor.addMetadata( \"type\", Values.stringValue( queryTypeCode( qt.queryType() ) ) );\n-\n-        if ( delegate.queryStatistics().containsUpdates() )\n-        {\n-            MapValue stats = queryStats( delegate.queryStatistics() );\n-            visitor.addMetadata( \"stats\", stats );\n-        }\n-        if ( qt.requestedExecutionPlanDescription() )\n-        {\n-            ExecutionPlanDescription rootPlanTreeNode = delegate.executionPlanDescription();\n-            String metadataFieldName = rootPlanTreeNode.hasProfilerStatistics() ? \"profile\" : \"plan\";\n-            visitor.addMetadata( metadataFieldName, ExecutionPlanConverter.convert( rootPlanTreeNode ) );\n-        }\n-\n-        Iterable<Notification> notifications = delegate.getNotifications();\n-        if ( notifications.iterator().hasNext() )\n-        {\n-            visitor.addMetadata( \"notifications\", NotificationConverter.convert( notifications ) );\n-        }\n+      ExecutionPlanDescription rootPlanTreeNode = delegate.executionPlanDescription();\n+      String metadataFieldName = rootPlanTreeNode.hasProfilerStatistics() ? \"profile\" : \"plan\";\n+      visitor.addMetadata(metadataFieldName, ExecutionPlanConverter.convert(rootPlanTreeNode));\n     }\n \n-    private MapValue queryStats( QueryStatistics queryStatistics )\n+    Iterable<Notification> notifications = delegate.getNotifications();\n+    if (notifications.iterator().hasNext())\n     {\n-        Map<String,AnyValue> result = new HashMap<>();\n-        addIfNonZero( result, \"nodes-created\", queryStatistics.getNodesCreated() );\n-        addIfNonZero( result, \"nodes-deleted\", queryStatistics.getNodesDeleted() );\n-        addIfNonZero( result, \"relationships-created\", queryStatistics.getRelationshipsCreated() );\n-        addIfNonZero( result, \"relationships-deleted\", queryStatistics.getRelationshipsDeleted() );\n-        addIfNonZero( result, \"properties-set\", queryStatistics.getPropertiesSet() );\n-        addIfNonZero( result, \"labels-added\", queryStatistics.getLabelsAdded() );\n-        addIfNonZero( result, \"labels-removed\", queryStatistics.getLabelsRemoved() );\n-        addIfNonZero( result, \"indexes-added\", queryStatistics.getIndexesAdded() );\n-        addIfNonZero( result, \"indexes-removed\", queryStatistics.getIndexesRemoved() );\n-        addIfNonZero( result, \"constraints-added\", queryStatistics.getConstraintsAdded() );\n-        addIfNonZero( result, \"constraints-removed\", queryStatistics.getConstraintsRemoved() );\n-        return VirtualValues.map( result );\n+      visitor.addMetadata(\"notifications\", NotificationConverter.convert(notifications));\n     }\n-\n-    private void addIfNonZero( Map<String,AnyValue> map, String name, int count )\n+  }\n+\n+  private MapValue queryStats(QueryStatistics queryStatistics)\n+  {\n+    Map<String, AnyValue> result = new HashMap<>();\n+    addIfNonZero(result, \"nodes-created\", queryStatistics.getNodesCreated());\n+    addIfNonZero(result, \"nodes-deleted\", queryStatistics.getNodesDeleted());\n+    addIfNonZero(result, \"relationships-created\", queryStatistics.getRelationshipsCreated());\n+    addIfNonZero(result, \"relationships-deleted\", queryStatistics.getRelationshipsDeleted());\n+    addIfNonZero(result, \"properties-set\", queryStatistics.getPropertiesSet());\n+    addIfNonZero(result, \"labels-added\", queryStatistics.getLabelsAdded());\n+    addIfNonZero(result, \"labels-removed\", queryStatistics.getLabelsRemoved());\n+    addIfNonZero(result, \"indexes-added\", queryStatistics.getIndexesAdded());\n+    addIfNonZero(result, \"indexes-removed\", queryStatistics.getIndexesRemoved());\n+    addIfNonZero(result, \"constraints-added\", queryStatistics.getConstraintsAdded());\n+    addIfNonZero(result, \"constraints-removed\", queryStatistics.getConstraintsRemoved());\n+    return VirtualValues.map(result);\n+  }\n+\n+  private void addIfNonZero(Map<String, AnyValue> map, String name, int count)\n+  {\n+    if (count > 0)\n     {\n-        if ( count > 0 )\n-        {\n-            map.put( name, intValue( count ) );\n-        }\n+      map.put(name, intValue(count));\n     }\n+  }\n \n-    private String queryTypeCode( QueryExecutionType.QueryType queryType )\n+  private String queryTypeCode(QueryExecutionType.QueryType queryType)\n+  {\n+    switch (queryType)\n     {\n-        switch ( queryType )\n-        {\n-        case READ_ONLY:\n-            return \"r\";\n+      case READ_ONLY:\n+        return \"r\";\n \n-        case READ_WRITE:\n-            return \"rw\";\n+      case READ_WRITE:\n+        return \"rw\";\n \n-        case WRITE:\n-            return \"w\";\n+      case WRITE:\n+        return \"w\";\n \n-        case SCHEMA_WRITE:\n-            return \"s\";\n+      case SCHEMA_WRITE:\n+        return \"s\";\n \n-        default:\n-            return queryType.name();\n-        }\n+      default:\n+        return queryType.name();\n     }\n+  }\n \n-    private static class NotificationConverter\n+  private static class NotificationConverter\n+  {\n+    public static AnyValue convert(Iterable<Notification> notifications)\n     {\n-        public static AnyValue convert( Iterable<Notification> notifications )\n+      List<AnyValue> out = new ArrayList<>();\n+      for (Notification notification : notifications)\n+      {\n+        Map<String, AnyValue> notificationMap = new HashMap<>(4);\n+        notificationMap.put(\"code\", stringValue(notification.getCode()));\n+        notificationMap.put(\"title\", stringValue(notification.getTitle()));\n+        notificationMap.put(\"description\", stringValue(notification.getDescription()));\n+        notificationMap.put(\"severity\", stringValue(notification.getSeverity().toString()));\n+\n+        InputPosition pos = notification.getPosition(); // position is optional\n+        if (!pos.equals(InputPosition.empty))\n         {\n-            List<AnyValue> out = new ArrayList<>();\n-            for ( Notification notification : notifications )\n-            {\n-                Map<String,AnyValue> notificationMap = new HashMap<>( 4 );\n-                notificationMap.put( \"code\", stringValue( notification.getCode() ) );\n-                notificationMap.put( \"title\", stringValue( notification.getTitle() ) );\n-                notificationMap.put( \"description\", stringValue( notification.getDescription() ) );\n-                notificationMap.put( \"severity\", stringValue( notification.getSeverity().toString() ) );\n-\n-                InputPosition pos = notification.getPosition(); // position is optional\n-                if ( !pos.equals( InputPosition.empty ) )\n-                {\n-                    // only add the position if it is not empty\n-                    Map<String,AnyValue> posMap = new HashMap<>( 3 );\n-                    posMap.put( \"offset\", intValue( pos.getOffset() ) );\n-                    posMap.put( \"line\", intValue( pos.getLine() ) );\n-                    posMap.put( \"column\", intValue( pos.getColumn() ) );\n-                    notificationMap.put( \"position\", VirtualValues.map( posMap ) );\n-                }\n-\n-                out.add( VirtualValues.map( notificationMap ) );\n-            }\n-            return VirtualValues.fromList( out );\n+          // only add the position if it is not empty\n+          Map<String, AnyValue> posMap = new HashMap<>(3);\n+          posMap.put(\"offset\", intValue(pos.getOffset()));\n+          posMap.put(\"line\", intValue(pos.getLine()));\n+          posMap.put(\"column\", intValue(pos.getColumn()));\n+          notificationMap.put(\"position\", VirtualValues.map(posMap));\n         }\n+\n+        out.add(VirtualValues.map(notificationMap));\n+      }\n+      return VirtualValues.fromList(out);\n     }\n+  }\n }\n",
            "diff_size": 176
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2560/CypherAdapterStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2560/CypherAdapterStream.java\nindex 42e6b0a9751..c8cdceba90a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2560/CypherAdapterStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2560/CypherAdapterStream.java\n@@ -79,13 +79,13 @@ class CypherAdapterStream extends BoltResult\n         visitor.addMetadata( \"result_consumed_after\", longValue( clock.millis() - start ) );\n         QueryExecutionType qt = delegate.executionType();\n         visitor.addMetadata( \"type\", Values.stringValue( queryTypeCode( qt.queryType() ) ) );\n-\n-        if ( delegate.queryStatistics().containsUpdates() )\n+if ( delegate.queryStatistics().containsUpdates() )\n         {\n             MapValue stats = queryStats( delegate.queryStatistics() );\n             visitor.addMetadata( \"stats\", stats );\n         }\n-        if ( qt.requestedExecutionPlanDescription() )\n+\n+if ( qt.requestedExecutionPlanDescription() )\n         {\n             ExecutionPlanDescription rootPlanTreeNode = delegate.executionPlanDescription();\n             String metadataFieldName = rootPlanTreeNode.hasProfilerStatistics() ? \"profile\" : \"plan\";\n@@ -130,17 +130,13 @@ class CypherAdapterStream extends BoltResult\n         {\n         case READ_ONLY:\n             return \"r\";\n-\n-        case READ_WRITE:\n+    case READ_WRITE:\n             return \"rw\";\n-\n-        case WRITE:\n+    case WRITE:\n             return \"w\";\n-\n-        case SCHEMA_WRITE:\n+    case SCHEMA_WRITE:\n             return \"s\";\n-\n-        default:\n+    default:\n             return queryType.name();\n         }\n     }\n@@ -157,8 +153,7 @@ class CypherAdapterStream extends BoltResult\n                 notificationMap.put( \"title\", stringValue( notification.getTitle() ) );\n                 notificationMap.put( \"description\", stringValue( notification.getDescription() ) );\n                 notificationMap.put( \"severity\", stringValue( notification.getSeverity().toString() ) );\n-\n-                InputPosition pos = notification.getPosition(); // position is optional\n+InputPosition pos = notification.getPosition(); // position is optional\n                 if ( !pos.equals( InputPosition.empty ) )\n                 {\n                     // only add the position if it is not empty\n@@ -171,7 +166,8 @@ class CypherAdapterStream extends BoltResult\n \n                 out.add( VirtualValues.map( notificationMap ) );\n             }\n-            return VirtualValues.fromList( out );\n+\n+return VirtualValues.fromList( out );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
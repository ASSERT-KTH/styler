{
    "project_name": "cloudera-director-sdk",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/37/MigratingGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/37/MigratingGroup.java\nindex 1a9eca5a4fb..4368aac8e8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/37/MigratingGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/37/MigratingGroup.java\n@@ -25,7 +25,9 @@ public class MigratingGroup {\n   private String virtualInstanceGroupName;\n   /* Virtual instance ids in this group */\n   private Set<String> virtualInstanceIds;\n-  public MigratingGroup() { }\n+\n+  public MigratingGroup() {\n+  }\n \n   private MigratingGroup(String virtualInstanceGroupName, Set<String> virtualInstanceIds) {\n     this.virtualInstanceGroupName = virtualInstanceGroupName;\n@@ -62,13 +64,15 @@ public class MigratingGroup {\n \n   public MigratingGroupBuilder toBuilder() {\n     return builder()\n-      .virtualInstanceGroupName(virtualInstanceGroupName)\n-      .virtualInstanceIds(virtualInstanceIds)\n-      ;\n+        .virtualInstanceGroupName(virtualInstanceGroupName)\n+        .virtualInstanceIds(virtualInstanceIds)\n+        ;\n   }\n+\n   public String getVirtualInstanceGroupName() {\n     return virtualInstanceGroupName;\n   }\n+\n   public void setVirtualInstanceGroupName(String virtualInstanceGroupName) {\n     this.virtualInstanceGroupName = virtualInstanceGroupName;\n   }\n@@ -76,23 +80,32 @@ public class MigratingGroup {\n   public Set<String> getVirtualInstanceIds() {\n     return virtualInstanceIds;\n   }\n+\n   public void setVirtualInstanceIds(Set<String> virtualInstanceIds) {\n     this.virtualInstanceIds = virtualInstanceIds;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     MigratingGroup other = (MigratingGroup) o; // NOPMD\n \n     if (virtualInstanceGroupName != null ?\n         !virtualInstanceGroupName.equals(other.virtualInstanceGroupName) :\n-        other.virtualInstanceGroupName != null) return false;\n+        other.virtualInstanceGroupName != null) {\n+      return false;\n+    }\n     if (virtualInstanceIds != null ?\n         !virtualInstanceIds.equals(other.virtualInstanceIds) :\n-        other.virtualInstanceIds != null) return false;\n+        other.virtualInstanceIds != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -105,7 +118,7 @@ public class MigratingGroup {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class MigratingGroup {\" + newLine);\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "42",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "column": "32",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/37/MigratingGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/37/MigratingGroup.java\nindex 1a9eca5a4fb..1df7ff39959 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/37/MigratingGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/37/MigratingGroup.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v4.model;\n@@ -25,7 +10,8 @@ public class MigratingGroup {\n   private String virtualInstanceGroupName;\n   /* Virtual instance ids in this group */\n   private Set<String> virtualInstanceIds;\n-  public MigratingGroup() { }\n+\n+public MigratingGroup() { }\n \n   private MigratingGroup(String virtualInstanceGroupName, Set<String> virtualInstanceIds) {\n     this.virtualInstanceGroupName = virtualInstanceGroupName;\n@@ -42,7 +28,8 @@ public class MigratingGroup {\n   }\n \n   public static class MigratingGroupBuilder {\n-    private String virtualInstanceGroupName = null;\n+\n+  private String virtualInstanceGroupName = null;\n     private Set<String> virtualInstanceIds = null;\n \n     public MigratingGroupBuilder virtualInstanceGroupName(String virtualInstanceGroupName) {\n@@ -61,12 +48,11 @@ public class MigratingGroup {\n   }\n \n   public MigratingGroupBuilder toBuilder() {\n-    return builder()\n-      .virtualInstanceGroupName(virtualInstanceGroupName)\n-      .virtualInstanceIds(virtualInstanceIds)\n-      ;\n+    return builder().virtualInstanceGroupName(virtualInstanceGroupName)\n+      .virtualInstanceIds(virtualInstanceIds);\n   }\n-  public String getVirtualInstanceGroupName() {\n+\n+public String getVirtualInstanceGroupName() {\n     return virtualInstanceGroupName;\n   }\n   public void setVirtualInstanceGroupName(String virtualInstanceGroupName) {\n@@ -83,16 +69,16 @@ public class MigratingGroup {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n \n-    MigratingGroup other = (MigratingGroup) o; // NOPMD\n+    MigratingGroup other = (MigratingGroup) o;\n \n-    if (virtualInstanceGroupName != null ?\n-        !virtualInstanceGroupName.equals(other.virtualInstanceGroupName) :\n-        other.virtualInstanceGroupName != null) return false;\n-    if (virtualInstanceIds != null ?\n-        !virtualInstanceIds.equals(other.virtualInstanceIds) :\n-        other.virtualInstanceIds != null) return false;\n+// NOPMD\n+\n+    if (virtualInstanceGroupName != null ?!virtualInstanceGroupName.equals(other.virtualInstanceGroupName) : other.virtualInstanceGroupName != null) return false;\n+\n+if (virtualInstanceIds != null ?!virtualInstanceIds.equals(other.virtualInstanceIds) : other.virtualInstanceIds != null) return false;\n     return true;\n   }\n \n@@ -105,7 +91,7 @@ public class MigratingGroup {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class MigratingGroup {\" + newLine);\n@@ -114,5 +100,4 @@ public class MigratingGroup {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "33",
                    "column": "27",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "column": "106",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "88",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "59",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "96",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "111",
                    "column": "96",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "53",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "84",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "84",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/37/MigratingGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/37/MigratingGroup.java\nindex 1a9eca5a4fb..a9001baa85e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/37/MigratingGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/37/MigratingGroup.java\n@@ -20,29 +20,37 @@ package com.cloudera.director.client.v4.model;\n \n import java.util.Set;\n \n+\n public class MigratingGroup {\n   /* Name of virtual instance group to which these virtual instances belong */\n+\n   private String virtualInstanceGroupName;\n   /* Virtual instance ids in this group */\n+\n   private Set<String> virtualInstanceIds;\n-  public MigratingGroup() { }\n+\n+\n+  public MigratingGroup() {}\n+\n \n   private MigratingGroup(String virtualInstanceGroupName, Set<String> virtualInstanceIds) {\n-    this.virtualInstanceGroupName = virtualInstanceGroupName;\n-    this.virtualInstanceIds = virtualInstanceIds;\n-  }\n+                                                                                          this.virtualInstanceGroupName = virtualInstanceGroupName;\n+                                                                                          this.virtualInstanceIds = virtualInstanceIds;\n+                            }\n \n   private MigratingGroup(MigratingGroupBuilder builder) {\n-    this.virtualInstanceGroupName = builder.virtualInstanceGroupName;\n-    this.virtualInstanceIds = builder.virtualInstanceIds;\n-  }\n+                                                        this.virtualInstanceGroupName = builder.virtualInstanceGroupName;\n+                                                        this.virtualInstanceIds = builder.virtualInstanceIds;\n+                            }\n \n   public static MigratingGroupBuilder builder() {\n     return new MigratingGroupBuilder();\n   }\n \n   public static class MigratingGroupBuilder {\n+\n     private String virtualInstanceGroupName = null;\n+\n     private Set<String> virtualInstanceIds = null;\n \n     public MigratingGroupBuilder virtualInstanceGroupName(String virtualInstanceGroupName) {\n@@ -63,12 +71,13 @@ public class MigratingGroup {\n   public MigratingGroupBuilder toBuilder() {\n     return builder()\n       .virtualInstanceGroupName(virtualInstanceGroupName)\n-      .virtualInstanceIds(virtualInstanceIds)\n-      ;\n+      .virtualInstanceIds(virtualInstanceIds);\n   }\n+\n   public String getVirtualInstanceGroupName() {\n     return virtualInstanceGroupName;\n   }\n+\n   public void setVirtualInstanceGroupName(String virtualInstanceGroupName) {\n     this.virtualInstanceGroupName = virtualInstanceGroupName;\n   }\n@@ -76,43 +85,46 @@ public class MigratingGroup {\n   public Set<String> getVirtualInstanceIds() {\n     return virtualInstanceIds;\n   }\n+\n   public void setVirtualInstanceIds(Set<String> virtualInstanceIds) {\n     this.virtualInstanceIds = virtualInstanceIds;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n \n-    MigratingGroup other = (MigratingGroup) o; // NOPMD\n+    MigratingGroup other = (MigratingGroup)o; // NOPMD\n \n-    if (virtualInstanceGroupName != null ?\n-        !virtualInstanceGroupName.equals(other.virtualInstanceGroupName) :\n-        other.virtualInstanceGroupName != null) return false;\n-    if (virtualInstanceIds != null ?\n-        !virtualInstanceIds.equals(other.virtualInstanceIds) :\n-        other.virtualInstanceIds != null) return false;\n+    if (virtualInstanceGroupName != null?!virtualInstanceGroupName.equals(other.virtualInstanceGroupName): other.virtualInstanceGroupName != null) return false;\n+    if (virtualInstanceIds != null?!virtualInstanceIds.equals(other.virtualInstanceIds): other.virtualInstanceIds != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (virtualInstanceGroupName != null ? virtualInstanceGroupName.hashCode() : 0);\n-    result = 31 * result + (virtualInstanceIds != null ? virtualInstanceIds.hashCode() : 0);\n+    result = 31*result + (virtualInstanceGroupName != null? virtualInstanceGroupName.hashCode():0);\n+    result = 31*result + (virtualInstanceIds != null? virtualInstanceIds.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class MigratingGroup {\" + newLine);\n-    sb.append(\"  virtualInstanceGroupName: \").append(virtualInstanceGroupName).append(newLine);\n-    sb.append(\"  virtualInstanceIds: \").append(virtualInstanceIds).append(newLine);\n+    sb.append(\"  virtualInstanceGroupName: \")\n+      .append(virtualInstanceGroupName).append(newLine);\n+    sb.append(\"  virtualInstanceIds: \")\n+      .append(virtualInstanceIds).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "970",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery;\n\nimport gov.hhs.fha.nhinc.document.DocumentConstants;\nimport gov.hhs.fha.nhinc.nhinclib.NhincConstants;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/970/DQMessageGeneratorUtils.java\nindex 87d956b4f92..b867702a9a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/970/DQMessageGeneratorUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery;\n \n import gov.hhs.fha.nhinc.document.DocumentConstants;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/970/DQMessageGeneratorUtils.java\nindex 87d956b4f92..c7f025d7fc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/970/DQMessageGeneratorUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery;\n \n import gov.hhs.fha.nhinc.document.DocumentConstants;\n@@ -36,80 +37,79 @@ import oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryErrorList;\n \n /**\n  * @author akong\n- *\n  */\n public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n \n-    private static final DQMessageGeneratorUtils INSTANCE = new DQMessageGeneratorUtils();\n+  private static final DQMessageGeneratorUtils INSTANCE = new DQMessageGeneratorUtils();\n \n-    DQMessageGeneratorUtils() {\n-    }\n+  DQMessageGeneratorUtils() {\n+  }\n \n-    /**\n-     * Returns the singleton instance of this class.\n-     *\n-     * @return the singleton instance\n-     */\n-    public static DQMessageGeneratorUtils getInstance() {\n-        return INSTANCE;\n-    }\n+  /**\n+   * Returns the singleton instance of this class.\n+   *\n+   * @return the singleton instance\n+   */\n+  public static DQMessageGeneratorUtils getInstance() {\n+    return INSTANCE;\n+  }\n \n-    /**\n-     * Create a AdhocQueryResponse with severity set to error.\n-     *\n-     * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n-     * @param errorCode The ErrorCode that needs to be set to the AdhocQueryResponse (Errorcodes are defined in spec).\n-     * @param status - the status of the message\n-     * @return the generated AdhocQueryResponse message\n-     */\n-    public AdhocQueryResponse createAdhocQueryErrorResponse(String codeContext, String errorCode, String status) {\n-        RegistryErrorList regErrList = new RegistryErrorList();\n-        regErrList.setHighestSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);\n+  /**\n+   * Create a AdhocQueryResponse with severity set to error.\n+   *\n+   * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n+   * @param errorCode   The ErrorCode that needs to be set to the AdhocQueryResponse (Errorcodes are defined in spec).\n+   * @param status      - the status of the message\n+   * @return the generated AdhocQueryResponse message\n+   */\n+  public AdhocQueryResponse createAdhocQueryErrorResponse(String codeContext, String errorCode, String status) {\n+    RegistryErrorList regErrList = new RegistryErrorList();\n+    regErrList.setHighestSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);\n \n-        regErrList.getRegistryError().add(createRegistryError(codeContext, errorCode));\n+    regErrList.getRegistryError().add(createRegistryError(codeContext, errorCode));\n \n-        AdhocQueryResponse response = new AdhocQueryResponse();\n-        response.setRegistryErrorList(regErrList);\n-        response.setStatus(status);\n-        response.setRegistryObjectList(new RegistryObjectListType());\n+    AdhocQueryResponse response = new AdhocQueryResponse();\n+    response.setRegistryErrorList(regErrList);\n+    response.setStatus(status);\n+    response.setRegistryObjectList(new RegistryObjectListType());\n \n-        return response;\n-    }\n+    return response;\n+  }\n \n-    /**\n-     * Creates a registry error with the passed in codeContext and errorCode.\n-     *\n-     * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n-     * @param errorCode The ErrorCode that needs to be set to the AdhocQueryResponse (Errorcodes are defined in spec).\n-     * @return the generated RegistryError\n-     */\n-    public RegistryError createRegistryError(String codeContext, String errorCode) {\n-        RegistryError regErr = new RegistryError();\n-        regErr.setCodeContext(codeContext);\n-        regErr.setErrorCode(errorCode);\n-        regErr.setSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);\n-        return regErr;\n-    }\n+  /**\n+   * Creates a registry error with the passed in codeContext and errorCode.\n+   *\n+   * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n+   * @param errorCode   The ErrorCode that needs to be set to the AdhocQueryResponse (Errorcodes are defined in spec).\n+   * @return the generated RegistryError\n+   */\n+  public RegistryError createRegistryError(String codeContext, String errorCode) {\n+    RegistryError regErr = new RegistryError();\n+    regErr.setCodeContext(codeContext);\n+    regErr.setErrorCode(errorCode);\n+    regErr.setSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);\n+    return regErr;\n+  }\n \n-    /**\n-     * Creates a Policy failed error AdhocQueryResponse.\n-     *\n-     * @return the generated AdhocQueryResponse message\n-     */\n-    public AdhocQueryResponse createPolicyErrorResponse() {\n-        return createAdhocQueryErrorResponse(\"Policy check failed.\", DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR,\n-            DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n-    }\n+  /**\n+   * Creates a Policy failed error AdhocQueryResponse.\n+   *\n+   * @return the generated AdhocQueryResponse message\n+   */\n+  public AdhocQueryResponse createPolicyErrorResponse() {\n+    return createAdhocQueryErrorResponse(\"Policy check failed.\", DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR,\n+        DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n+  }\n \n-    /**\n-     * Create a AdhocQueryResponse failure with errorCode XDSRepositoryError.\n-     *\n-     * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n-     * @return the generated AdhocQueryResponse message\n-     */\n-    public AdhocQueryResponse createRepositoryErrorResponse(String codeContext) {\n-        return createAdhocQueryErrorResponse(codeContext, DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR,\n-            DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n-    }\n+  /**\n+   * Create a AdhocQueryResponse failure with errorCode XDSRepositoryError.\n+   *\n+   * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n+   * @return the generated AdhocQueryResponse message\n+   */\n+  public AdhocQueryResponse createRepositoryErrorResponse(String codeContext) {\n+    return createAdhocQueryErrorResponse(codeContext, DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR,\n+        DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n+  }\n \n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/970/DQMessageGeneratorUtils.java\nindex 87d956b4f92..bd4b5dccb23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/970/DQMessageGeneratorUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery;\n \n import gov.hhs.fha.nhinc.document.DocumentConstants;\n@@ -88,7 +89,8 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n         regErr.setCodeContext(codeContext);\n         regErr.setErrorCode(errorCode);\n         regErr.setSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);\n-        return regErr;\n+\n+return regErr;\n     }\n \n     /**\n@@ -112,4 +114,4 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n             DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/970/DQMessageGeneratorUtils.java\nindex 87d956b4f92..7ee404f163f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/970/DQMessageGeneratorUtils.java\n@@ -38,7 +38,10 @@ import oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryErrorList;\n  * @author akong\n  *\n  */\n-public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n+\n+\n+public class DQMessageGeneratorUtils extends\n+    MessageGeneratorUtils {\n \n     private static final DQMessageGeneratorUtils INSTANCE = new DQMessageGeneratorUtils();\n \n@@ -50,6 +53,8 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n      *\n      * @return the singleton instance\n      */\n+\n+\n     public static DQMessageGeneratorUtils getInstance() {\n         return INSTANCE;\n     }\n@@ -62,17 +67,17 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n      * @param status - the status of the message\n      * @return the generated AdhocQueryResponse message\n      */\n-    public AdhocQueryResponse createAdhocQueryErrorResponse(String codeContext, String errorCode, String status) {\n+\n+\n+    public AdhocQueryResponse createAdhocQueryErrorResponse(String codeContext,\n+        String errorCode, String status) {\n         RegistryErrorList regErrList = new RegistryErrorList();\n         regErrList.setHighestSeverity(NhincConstants.XDS_REGISTRY_ERROR_SEVERITY_ERROR);\n-\n         regErrList.getRegistryError().add(createRegistryError(codeContext, errorCode));\n-\n         AdhocQueryResponse response = new AdhocQueryResponse();\n         response.setRegistryErrorList(regErrList);\n         response.setStatus(status);\n         response.setRegistryObjectList(new RegistryObjectListType());\n-\n         return response;\n     }\n \n@@ -83,6 +88,8 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n      * @param errorCode The ErrorCode that needs to be set to the AdhocQueryResponse (Errorcodes are defined in spec).\n      * @return the generated RegistryError\n      */\n+\n+\n     public RegistryError createRegistryError(String codeContext, String errorCode) {\n         RegistryError regErr = new RegistryError();\n         regErr.setCodeContext(codeContext);\n@@ -96,9 +103,10 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n      *\n      * @return the generated AdhocQueryResponse message\n      */\n+\n+\n     public AdhocQueryResponse createPolicyErrorResponse() {\n-        return createAdhocQueryErrorResponse(\"Policy check failed.\", DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR,\n-            DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n+        return createAdhocQueryErrorResponse(\"Policy check failed.\", DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR, DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n     }\n \n     /**\n@@ -107,9 +115,10 @@ public class DQMessageGeneratorUtils extends MessageGeneratorUtils {\n      * @param codeContext The codecontext defines the reason of failure of AdhocQueryRequest.\n      * @return the generated AdhocQueryResponse message\n      */\n+\n+\n     public AdhocQueryResponse createRepositoryErrorResponse(String codeContext) {\n-        return createAdhocQueryErrorResponse(codeContext, DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR,\n-            DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n+        return createAdhocQueryErrorResponse(codeContext, DocumentConstants.XDS_ERRORCODE_REPOSITORY_ERROR, DocumentConstants.XDS_QUERY_RESPONSE_STATUS_FAILURE);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/970/DQMessageGeneratorUtils.java\nindex 87d956b4f92..b867702a9a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/970/DQMessageGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/970/DQMessageGeneratorUtils.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery;\n \n import gov.hhs.fha.nhinc.document.DocumentConstants;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "108",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 115).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @RestResource(exported = false)\n  Stream<IdAndVersionAndDataSetProjection> streamIdsByRelatedQuestionsQuestionIdIn(Collection<String> questionIds);\n\n  @RestResource(exported = false)\n  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsQuestionIdIn(",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'findAllIdsByPanelIdentifierAndIdNot' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/7/VariableRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/7/VariableRepository.java\nindex a0ad0951665..36b5e1057ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/7/VariableRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/7/VariableRepository.java\n@@ -24,9 +24,9 @@ public interface VariableRepository\n   Stream<Variable> streamByDataAcquisitionProjectId(String dataAcquisitionProjectId);\n \n   @RestResource(exported = false)\n-  List<IdAndVersionProjection> \n-      findAllIdsByPanelIdentifierAndIdNot(String panelIdentifier, String id);\n-  \n+  List<IdAndVersionProjection>\n+  findAllIdsByPanelIdentifierAndIdNot(String panelIdentifier, String id);\n+\n   @RestResource(exported = true)\n   List<Variable> findByDataAcquisitionProjectId(\n       @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n@@ -78,7 +78,7 @@ public interface VariableRepository\n   @RestResource(exported = false)\n   List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsInstrumentId(\n       String instrumentId);\n-  \n+\n   @RestResource(exported = false)\n   List<VariableSubDocumentProjection> findSubDocumentsByDataSetId(String dataSetId);\n \n@@ -99,13 +99,14 @@ public interface VariableRepository\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n       Collection<String> variableIds);\n-  \n+\n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n       Collection<String> variableIds);\n \n   @RestResource(exported = false)\n-  Stream<IdAndVersionAndDataSetProjection> streamIdsByRelatedQuestionsQuestionIdIn(Collection<String> questionIds);\n+  Stream<IdAndVersionAndDataSetProjection> streamIdsByRelatedQuestionsQuestionIdIn(\n+      Collection<String> questionIds);\n \n   @RestResource(exported = false)\n   List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsQuestionIdIn(\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'extends' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/7/VariableRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/7/VariableRepository.java\nindex a0ad0951665..092dd81c983 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/7/VariableRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/7/VariableRepository.java\n@@ -3,11 +3,9 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.repository;\n import java.util.Collection;\n import java.util.List;\n import java.util.stream.Stream;\n-\n import org.springframework.data.repository.query.Param;\n import org.springframework.data.rest.core.annotation.RepositoryRestResource;\n import org.springframework.data.rest.core.annotation.RestResource;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.common.repository.BaseRepository;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n@@ -17,19 +15,21 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.projections.Vari\n /**\n  * Spring Data MongoDB repository for the Variable entity.\n  */\n+\n+\n @RepositoryRestResource(path = \"/variables\")\n public interface VariableRepository\n-    extends BaseRepository<Variable, String> {\n+  extends BaseRepository<Variable, String> {\n+\n   @RestResource(exported = false)\n   Stream<Variable> streamByDataAcquisitionProjectId(String dataAcquisitionProjectId);\n \n   @RestResource(exported = false)\n-  List<IdAndVersionProjection> \n-      findAllIdsByPanelIdentifierAndIdNot(String panelIdentifier, String id);\n-  \n+  List<IdAndVersionProjection> findAllIdsByPanelIdentifierAndIdNot(String panelIdentifier,\n+    String id);\n+\n   @RestResource(exported = true)\n-  List<Variable> findByDataAcquisitionProjectId(\n-      @Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n+  List<Variable> findByDataAcquisitionProjectId(@Param(\"dataAcquisitionProjectId\") String dataAcquisitionProjectId);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsBySurveyIdsContaining(String surveyId);\n@@ -50,15 +50,15 @@ public interface VariableRepository\n   List<VariableSubDocumentProjection> findSubDocumentsByIdIn(Collection<String> variableIds);\n \n   @RestResource(exported = false)\n-  List<IdAndVersionProjection> findIdsByNameAndDataSetId(String name, String dataSetId);\n+  List<IdAndVersionProjection> findIdsByNameAndDataSetId(String name,\n+    String dataSetId);\n \n   @RestResource(exported = false)\n-  List<IdAndVersionProjection> findIdsByIndexInDataSetAndDataSetId(\n-      Integer indexInDataSet, String dataSetId);\n+  List<IdAndVersionProjection> findIdsByIndexInDataSetAndDataSetId(Integer indexInDataSet,\n+    String dataSetId);\n \n   @RestResource(exported = false)\n-  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsQuestionId(\n-      String questionId);\n+  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsQuestionId(String questionId);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionProjection> streamIdsByStudyId(String studyId);\n@@ -76,9 +76,8 @@ public interface VariableRepository\n   List<Variable> findByDataSetId(String dataSetId);\n \n   @RestResource(exported = false)\n-  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsInstrumentId(\n-      String instrumentId);\n-  \n+  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsInstrumentId(String instrumentId);\n+\n   @RestResource(exported = false)\n   List<VariableSubDocumentProjection> findSubDocumentsByDataSetId(String dataSetId);\n \n@@ -89,25 +88,20 @@ public interface VariableRepository\n   Long countByDataSetId(String dataSetId);\n \n   @RestResource(exported = false)\n-  Stream<Variable> streamByDataAcquisitionProjectIdAndShadowIsFalse(\n-      String dataAcquisitionProjectId);\n+  Stream<Variable> streamByDataAcquisitionProjectIdAndShadowIsFalse(String dataAcquisitionProjectId);\n \n   @RestResource(exported = false)\n-  Stream<Variable> findByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(\n-      String oldProjectId);\n+  Stream<Variable> findByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(String oldProjectId);\n \n   @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(\n-      Collection<String> variableIds);\n-  \n+  Stream<IdAndVersionProjection> streamIdsByMasterIdInAndShadowIsTrueAndSuccessorIdIsNull(Collection<String> variableIds);\n+\n   @RestResource(exported = false)\n-  Stream<IdAndVersionProjection> streamIdsByMasterIdIn(\n-      Collection<String> variableIds);\n+  Stream<IdAndVersionProjection> streamIdsByMasterIdIn(Collection<String> variableIds);\n \n   @RestResource(exported = false)\n   Stream<IdAndVersionAndDataSetProjection> streamIdsByRelatedQuestionsQuestionIdIn(Collection<String> questionIds);\n \n   @RestResource(exported = false)\n-  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsQuestionIdIn(\n-      Collection<String> questionIds);\n+  List<VariableSubDocumentProjection> findSubDocumentsByRelatedQuestionsQuestionIdIn(Collection<String> questionIds);\n }\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
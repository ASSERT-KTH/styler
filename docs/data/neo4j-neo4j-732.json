{
    "project_name": "neo4j-neo4j",
    "error_id": "732",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/732/Locker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/732/Locker.java\nindex d062ca516bc..b3c27604211 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/732/Locker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/732/Locker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.internal.locker;\n \n import java.io.Closeable;\n@@ -41,7 +42,7 @@ public class Locker implements Closeable\n     FileLock lockFileLock;\n     private StoreChannel lockFileChannel;\n \n-    public Locker( FileSystemAbstraction fileSystemAbstraction, Path lockFile )\n+    public Locker(FileSystemAbstraction fileSystemAbstraction, Path lockFile)\n     {\n         this.fileSystemAbstraction = fileSystemAbstraction;\n         this.lockFile = lockFile;\n@@ -64,86 +65,81 @@ public class Locker implements Closeable\n      */\n     public void checkLock()\n     {\n-        if ( haveLockAlready() )\n+        if (haveLockAlready())\n         {\n             return;\n         }\n \n         try\n         {\n-            if ( !fileSystemAbstraction.fileExists( lockFile ) )\n+            if (!fileSystemAbstraction.fileExists(lockFile))\n             {\n-                fileSystemAbstraction.mkdirs( lockFile.getParent() );\n+                fileSystemAbstraction.mkdirs(lockFile.getParent());\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n             String message = \"Unable to create path for dir: \" + lockFile.getParent();\n-            throw storeLockException( message, e );\n+            throw storeLockException(message, e);\n         }\n \n         try\n         {\n-            if ( lockFileChannel == null )\n+            if (lockFileChannel == null)\n             {\n-                lockFileChannel = fileSystemAbstraction.write( lockFile );\n+                lockFileChannel = fileSystemAbstraction.write(lockFile);\n             }\n             lockFileLock = lockFileChannel.tryLock();\n-            if ( lockFileLock == null )\n+            if (lockFileLock == null)\n             {\n                 String message = \"Lock file has been locked by another process: \" + lockFile;\n-                throw storeLockException( message, null );\n+                throw storeLockException(message, null);\n             }\n-        }\n-        catch ( OverlappingFileLockException e )\n+        } catch (OverlappingFileLockException e)\n         {\n             throw unableToObtainLockException();\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n             // This isn't your normal \"locked by another process\" error, it may be related to permissions or something else,\n             // so in this case try to figure out as much as possible about the state of the file and directory and include that\n             // in the error message given to the user.\n-            throw unableToObtainLockException( tryCollectPermissionInformation(), e );\n+            throw unableToObtainLockException(tryCollectPermissionInformation(), e);\n         }\n     }\n \n     private String tryCollectPermissionInformation()\n     {\n-        String processUserName = System.getProperty( \"user.name\" );\n+        String processUserName = System.getProperty(\"user.name\");\n         String additionalInformation = null;\n-        if ( processUserName != null )\n+        if (processUserName != null)\n         {\n             Path lockPath = lockFile;\n             try\n             {\n-                String lockFileOwner = Files.getOwner( lockPath ).getName();\n-                if ( !processUserName.equals( lockFileOwner ) )\n+                String lockFileOwner = Files.getOwner(lockPath).getName();\n+                if (!processUserName.equals(lockFileOwner))\n                 {\n                     additionalInformation = String.format(\n-                            \"Owner of the lock file '%s' and user running this process '%s' differs, which means this could be a file permission problem. \" +\n-                            \"Ensure that the lock file has the same owner, or at least has write access for the user running the Neo4j process \" +\n-                            \"trying to lock it\", lockFileOwner, processUserName );\n+                      \"Owner of the lock file '%s' and user running this process '%s' differs, which means this could be a file permission problem. \" +\n+                        \"Ensure that the lock file has the same owner, or at least has write access for the user running the Neo4j process \" +\n+                        \"trying to lock it\", lockFileOwner, processUserName);\n                 }\n                 // else no useful additional information can be provided\n-            }\n-            catch ( IOException fe )\n+            } catch (IOException fe)\n             {\n                 // We tried to get the owner of the lock file, but we couldn't. Perhaps we couldn't even create the lock file, let's check the folder\n                 try\n                 {\n-                    String lockDirectoryOwner = Files.getOwner( lockPath.getParent() ).getName();\n-                    if ( !processUserName.equals( lockDirectoryOwner ) )\n+                    String lockDirectoryOwner = Files.getOwner(lockPath.getParent()).getName();\n+                    if (!processUserName.equals(lockDirectoryOwner))\n                     {\n                         additionalInformation = String.format(\n-                                \"Owner of the directory of the lock file '%s' and user running this process '%s' differs, which means this could be a \" +\n-                                \"file permission problem. Ensure that the lock file directory (and lock file it it exists) has the same owner, \" +\n-                                \"or at least has write access for the user running the Neo4j process trying to lock it\",\n-                                lockDirectoryOwner, processUserName );\n+                          \"Owner of the directory of the lock file '%s' and user running this process '%s' differs, which means this could be a \" +\n+                            \"file permission problem. Ensure that the lock file directory (and lock file it it exists) has the same owner, \" +\n+                            \"or at least has write access for the user running the Neo4j process trying to lock it\",\n+                          lockDirectoryOwner, processUserName);\n                     }\n                     // else no useful additional information can be provided\n-                }\n-                catch ( IOException de )\n+                } catch (IOException de)\n                 {\n                     // We tried to get the owner of the lock directory, but couldn't. There's not much more we can do\n                 }\n@@ -159,30 +155,30 @@ public class Locker implements Closeable\n \n     FileLockException unableToObtainLockException()\n     {\n-        return unableToObtainLockException( null, null );\n+        return unableToObtainLockException(null, null);\n     }\n \n-    FileLockException unableToObtainLockException( String additionalInformation, Exception cause )\n+    FileLockException unableToObtainLockException(String additionalInformation, Exception cause)\n     {\n-        String message = String.format( \"Unable to obtain lock on file: %s%s\", lockFile, additionalInformation != null ? \": \" + additionalInformation : \"\" );\n-        return storeLockException( message, cause );\n+        String message = String.format(\"Unable to obtain lock on file: %s%s\", lockFile, additionalInformation != null ? \": \" + additionalInformation : \"\");\n+        return storeLockException(message, cause);\n     }\n \n-    private static FileLockException storeLockException( String message, Exception e )\n+    private static FileLockException storeLockException(String message, Exception e)\n     {\n         String help = \"Please ensure no other process is using this database, and that the directory is writable \" +\n-                \"(required even for read-only access)\";\n-        return new FileLockException( message + \". \" + help, e );\n+          \"(required even for read-only access)\";\n+        return new FileLockException(message + \". \" + help, e);\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        if ( lockFileLock != null )\n+        if (lockFileLock != null)\n         {\n             releaseLock();\n         }\n-        if ( lockFileChannel != null )\n+        if (lockFileChannel != null)\n         {\n             releaseChannel();\n         }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
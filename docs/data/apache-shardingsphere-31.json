{
    "project_name": "apache-shardingsphere",
    "error_id": "31",
    "information": {
        "errors": [
            {
                "line": "87",
                "column": "27",
                "severity": "warning",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n        return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n    }\n    ",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/31/ShardingReadwriteSplittingConfigurationPrecise.java\nindex 0cdbc2ca825..e1a9ba35445 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler/31/ShardingReadwriteSplittingConfigurationPrecise.java\n@@ -84,7 +84,7 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                 \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n+                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n         return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n     }\n     \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/intellij/31/ShardingReadwriteSplittingConfigurationPrecise.java\nindex 0cdbc2ca825..daa8a1cd81f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/intellij/31/ShardingReadwriteSplittingConfigurationPrecise.java\n@@ -37,12 +37,12 @@ import java.util.Map;\n import java.util.Properties;\n \n public final class ShardingReadwriteSplittingConfigurationPrecise implements ExampleConfiguration {\n-    \n+\n     @Override\n     public DataSource getDataSource() throws SQLException {\n         return ShardingSphereDataSourceFactory.createDataSource(createDataSourceMap(), Arrays.asList(createShardingRuleConfiguration(), createReadwriteSplittingConfiguration()), new Properties());\n     }\n-    \n+\n     private static Map<String, DataSource> createDataSourceMap() {\n         Map<String, DataSource> result = new HashMap<>(6, 1);\n         result.put(\"demo_write_ds_0\", DataSourceUtil.createDataSource(\"demo_write_ds_0\"));\n@@ -53,7 +53,7 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         result.put(\"demo_write_ds_1_read_1\", DataSourceUtil.createDataSource(\"demo_write_ds_1_read_1\"));\n         return result;\n     }\n-    \n+\n     private ShardingRuleConfiguration createShardingRuleConfiguration() {\n         ShardingRuleConfiguration result = new ShardingRuleConfiguration();\n         result.getTables().add(createOrderTableRuleConfiguration());\n@@ -62,32 +62,32 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         result.getBroadcastTables().add(\"t_address\");\n         result.setDefaultDatabaseShardingStrategy(new StandardShardingStrategyConfiguration(\"user_id\", \"standard_test_db\"));\n         result.setDefaultTableShardingStrategy(new StandardShardingStrategyConfiguration(\"order_id\", \"standard_test_tbl\"));\n-        result.getShardingAlgorithms() .put(\"standard_test_db\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_DB\", new Properties()));\n-        result.getShardingAlgorithms() .put(\"standard_test_tbl\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_TBL\", new Properties()));\n+        result.getShardingAlgorithms().put(\"standard_test_db\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_DB\", new Properties()));\n+        result.getShardingAlgorithms().put(\"standard_test_tbl\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_TBL\", new Properties()));\n         result.getKeyGenerators().put(\"snowflake\", new ShardingSphereAlgorithmConfiguration(\"SNOWFLAKE\", getProperties()));\n         return result;\n     }\n-    \n+\n     private static ShardingTableRuleConfiguration createOrderTableRuleConfiguration() {\n         ShardingTableRuleConfiguration result = new ShardingTableRuleConfiguration(\"t_order\", \"ds_${0..1}.t_order_${[0, 1]}\");\n         result.setKeyGenerateStrategy(new KeyGenerateStrategyConfiguration(\"order_id\", \"snowflake\"));\n         return result;\n     }\n-    \n+\n     private static ShardingTableRuleConfiguration createOrderItemTableRuleConfiguration() {\n         ShardingTableRuleConfiguration result = new ShardingTableRuleConfiguration(\"t_order_item\", \"ds_${0..1}.t_order_item_${[0, 1]}\");\n         result.setKeyGenerateStrategy(new KeyGenerateStrategyConfiguration(\"order_item_id\", \"snowflake\"));\n         return result;\n     }\n-    \n+\n     private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n+            \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n+            \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n         return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n     }\n-    \n+\n     private static Properties getProperties() {\n         Properties result = new Properties();\n         result.setProperty(\"worker-id\", \"123\");\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/31/ShardingReadwriteSplittingConfigurationPrecise.java\nindex 0cdbc2ca825..a2b513815f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/naturalize/31/ShardingReadwriteSplittingConfigurationPrecise.java\n@@ -62,8 +62,8 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         result.getBroadcastTables().add(\"t_address\");\n         result.setDefaultDatabaseShardingStrategy(new StandardShardingStrategyConfiguration(\"user_id\", \"standard_test_db\"));\n         result.setDefaultTableShardingStrategy(new StandardShardingStrategyConfiguration(\"order_id\", \"standard_test_tbl\"));\n-        result.getShardingAlgorithms() .put(\"standard_test_db\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_DB\", new Properties()));\n-        result.getShardingAlgorithms() .put(\"standard_test_tbl\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_TBL\", new Properties()));\n+        result.getShardingAlgorithms().put(\"standard_test_db\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_DB\", new Properties()));\n+        result.getShardingAlgorithms().put(\"standard_test_tbl\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_TBL\", new Properties()));\n         result.getKeyGenerators().put(\"snowflake\", new ShardingSphereAlgorithmConfiguration(\"SNOWFLAKE\", getProperties()));\n         return result;\n     }\n@@ -81,10 +81,8 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n     }\n     \n     private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n-        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n-        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n+        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n+        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n         return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n     }\n     \n@@ -93,4 +91,4 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         result.setProperty(\"worker-id\", \"123\");\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 200 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/31/ShardingReadwriteSplittingConfigurationPrecise.java\nindex 0cdbc2ca825..089590231c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/codebuff/31/ShardingReadwriteSplittingConfigurationPrecise.java\n@@ -27,7 +27,6 @@ import org.apache.shardingsphere.sharding.api.config.ShardingRuleConfiguration;\n import org.apache.shardingsphere.sharding.api.config.rule.ShardingTableRuleConfiguration;\n import org.apache.shardingsphere.sharding.api.config.strategy.keygen.KeyGenerateStrategyConfiguration;\n import org.apache.shardingsphere.sharding.api.config.strategy.sharding.StandardShardingStrategyConfiguration;\n-\n import javax.sql.DataSource;\n import java.sql.SQLException;\n import java.util.Arrays;\n@@ -36,13 +35,14 @@ import java.util.HashMap;\n import java.util.Map;\n import java.util.Properties;\n \n+\n public final class ShardingReadwriteSplittingConfigurationPrecise implements ExampleConfiguration {\n-    \n+\n     @Override\n     public DataSource getDataSource() throws SQLException {\n         return ShardingSphereDataSourceFactory.createDataSource(createDataSourceMap(), Arrays.asList(createShardingRuleConfiguration(), createReadwriteSplittingConfiguration()), new Properties());\n     }\n-    \n+\n     private static Map<String, DataSource> createDataSourceMap() {\n         Map<String, DataSource> result = new HashMap<>(6, 1);\n         result.put(\"demo_write_ds_0\", DataSourceUtil.createDataSource(\"demo_write_ds_0\"));\n@@ -53,7 +53,7 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         result.put(\"demo_write_ds_1_read_1\", DataSourceUtil.createDataSource(\"demo_write_ds_1_read_1\"));\n         return result;\n     }\n-    \n+\n     private ShardingRuleConfiguration createShardingRuleConfiguration() {\n         ShardingRuleConfiguration result = new ShardingRuleConfiguration();\n         result.getTables().add(createOrderTableRuleConfiguration());\n@@ -62,35 +62,33 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         result.getBroadcastTables().add(\"t_address\");\n         result.setDefaultDatabaseShardingStrategy(new StandardShardingStrategyConfiguration(\"user_id\", \"standard_test_db\"));\n         result.setDefaultTableShardingStrategy(new StandardShardingStrategyConfiguration(\"order_id\", \"standard_test_tbl\"));\n-        result.getShardingAlgorithms() .put(\"standard_test_db\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_DB\", new Properties()));\n-        result.getShardingAlgorithms() .put(\"standard_test_tbl\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_TBL\", new Properties()));\n+        result.getShardingAlgorithms().put(\"standard_test_db\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_DB\", new Properties()));\n+        result.getShardingAlgorithms().put(\"standard_test_tbl\", new ShardingSphereAlgorithmConfiguration(\"STANDARD_TEST_TBL\", new Properties()));\n         result.getKeyGenerators().put(\"snowflake\", new ShardingSphereAlgorithmConfiguration(\"SNOWFLAKE\", getProperties()));\n         return result;\n     }\n-    \n+\n     private static ShardingTableRuleConfiguration createOrderTableRuleConfiguration() {\n         ShardingTableRuleConfiguration result = new ShardingTableRuleConfiguration(\"t_order\", \"ds_${0..1}.t_order_${[0, 1]}\");\n         result.setKeyGenerateStrategy(new KeyGenerateStrategyConfiguration(\"order_id\", \"snowflake\"));\n         return result;\n     }\n-    \n+\n     private static ShardingTableRuleConfiguration createOrderItemTableRuleConfiguration() {\n         ShardingTableRuleConfiguration result = new ShardingTableRuleConfiguration(\"t_order_item\", \"ds_${0..1}.t_order_item_${[0, 1]}\");\n         result.setKeyGenerateStrategy(new KeyGenerateStrategyConfiguration(\"order_item_id\", \"snowflake\"));\n         return result;\n     }\n-    \n+\n     private static ReadwriteSplittingRuleConfiguration createReadwriteSplittingConfiguration() {\n-        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n-        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n+        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n+        ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n         return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n     }\n-    \n+\n     private static Properties getProperties() {\n         Properties result = new Properties();\n         result.setProperty(\"worker-id\", \"123\");\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/31/ShardingReadwriteSplittingConfigurationPrecise.java\nindex 0cdbc2ca825..e1a9ba35445 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_random/31/ShardingReadwriteSplittingConfigurationPrecise.java\n@@ -84,7 +84,7 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                 \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n+                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n         return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n     }\n     \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/31/ShardingReadwriteSplittingConfigurationPrecise.java\nindex 0cdbc2ca825..e1a9ba35445 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/errored/1/31/ShardingReadwriteSplittingConfigurationPrecise.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-shardingsphere/styler_three_grams/31/ShardingReadwriteSplittingConfigurationPrecise.java\n@@ -84,7 +84,7 @@ public final class ShardingReadwriteSplittingConfigurationPrecise implements Exa\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration1 = new ReadwriteSplittingDataSourceRuleConfiguration(\n                 \"ds_0\", \"\", \"demo_write_ds_0\", Arrays.asList(\"demo_write_ds_0_read_0\", \"demo_write_ds_0_read_1\"), null);\n         ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfiguration2 = new ReadwriteSplittingDataSourceRuleConfiguration(\n-                \"ds_1\", \"\",\"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n+                \"ds_1\", \"\", \"demo_write_ds_1\", Arrays.asList(\"demo_write_ds_1_read_0\", \"demo_write_ds_1_read_1\"), null);\n         return new ReadwriteSplittingRuleConfiguration(Arrays.asList(dataSourceConfiguration1, dataSourceConfiguration2), Collections.emptyMap());\n     }\n     \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
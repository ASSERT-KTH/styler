{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1785",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1785/LifecycleManagingDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1785/LifecycleManagingDatabase.java\nindex db820b56520..0e0b6189b70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1785/LifecycleManagingDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1785/LifecycleManagingDatabase.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.database;\n \n import java.io.File;\n@@ -34,115 +35,114 @@ import org.neo4j.logging.Log;\n  */\n public class LifecycleManagingDatabase implements Database\n {\n-    static final String CYPHER_WARMUP_QUERY =\n-            \"MATCH (a:` This query is just used to load the cypher compiler during warmup. Please ignore `) RETURN a LIMIT 0\";\n-\n-    public interface GraphFactory\n-    {\n-        GraphDatabaseFacade newGraphDatabase( Config config, GraphDatabaseFacadeFactory.Dependencies dependencies );\n-    }\n-\n-    public static Database.Factory lifecycleManagingDatabase( final GraphFactory graphDbFactory )\n-    {\n-        return ( config, dependencies ) -> new LifecycleManagingDatabase( config, graphDbFactory, dependencies );\n-    }\n-\n-    private final Config config;\n-    private final GraphFactory dbFactory;\n-    private final GraphDatabaseFacadeFactory.Dependencies dependencies;\n-    private final Log log;\n-\n-    private boolean isRunning;\n-    private GraphDatabaseFacade graph;\n-\n-    public LifecycleManagingDatabase( Config config, GraphFactory dbFactory,\n-            GraphDatabaseFacadeFactory.Dependencies dependencies )\n-    {\n-        this.config = config;\n-        this.dbFactory = dbFactory;\n-        this.dependencies = dependencies;\n-        this.log = dependencies.userLogProvider().getLog( getClass() );\n-    }\n-\n-    @Override\n-    public File getLocation()\n-    {\n-        return config.get( GraphDatabaseSettings.database_path );\n-    }\n-\n-    @Override\n-    public GraphDatabaseFacade getGraph()\n-    {\n-        return graph;\n-    }\n-\n-    @Override\n-    public void init()\n+  static final String CYPHER_WARMUP_QUERY =\n+      \"MATCH (a:` This query is just used to load the cypher compiler during warmup. Please ignore `) RETURN a LIMIT 0\";\n+\n+  public interface GraphFactory\n+  {\n+    GraphDatabaseFacade newGraphDatabase(Config config, GraphDatabaseFacadeFactory.Dependencies dependencies);\n+  }\n+\n+  public static Database.Factory lifecycleManagingDatabase(final GraphFactory graphDbFactory)\n+  {\n+    return (config, dependencies) -> new LifecycleManagingDatabase(config, graphDbFactory, dependencies);\n+  }\n+\n+  private final Config config;\n+  private final GraphFactory dbFactory;\n+  private final GraphDatabaseFacadeFactory.Dependencies dependencies;\n+  private final Log log;\n+\n+  private boolean isRunning;\n+  private GraphDatabaseFacade graph;\n+\n+  public LifecycleManagingDatabase(Config config, GraphFactory dbFactory,\n+                                   GraphDatabaseFacadeFactory.Dependencies dependencies)\n+  {\n+    this.config = config;\n+    this.dbFactory = dbFactory;\n+    this.dependencies = dependencies;\n+    this.log = dependencies.userLogProvider().getLog(getClass());\n+  }\n+\n+  @Override\n+  public File getLocation()\n+  {\n+    return config.get(GraphDatabaseSettings.database_path);\n+  }\n+\n+  @Override\n+  public GraphDatabaseFacade getGraph()\n+  {\n+    return graph;\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    log.info(\"Starting...\");\n+    this.graph = dbFactory.newGraphDatabase(config, dependencies);\n+    // in order to speed up testing, they should not run the preload, but in production it pays to do it.\n+    if (!isInTestMode())\n     {\n+      preLoadCypherCompiler();\n     }\n \n-    @Override\n-    public void start()\n-    {\n-        log.info( \"Starting...\" );\n-        this.graph = dbFactory.newGraphDatabase( config, dependencies );\n-        // in order to speed up testing, they should not run the preload, but in production it pays to do it.\n-        if ( !isInTestMode() )\n-        {\n-            preLoadCypherCompiler();\n-        }\n-\n-        isRunning = true;\n-        log.info( \"Started.\" );\n-    }\n+    isRunning = true;\n+    log.info(\"Started.\");\n+  }\n \n-    @Override\n-    public void stop()\n+  @Override\n+  public void stop()\n+  {\n+    if (graph != null)\n     {\n-        if ( graph != null )\n-        {\n-            log.info( \"Stopping...\" );\n-            graph.shutdown();\n-            isRunning = false;\n-            graph = null;\n-            log.info( \"Stopped.\" );\n-        }\n+      log.info(\"Stopping...\");\n+      graph.shutdown();\n+      isRunning = false;\n+      graph = null;\n+      log.info(\"Stopped.\");\n     }\n-\n-    @Override\n-    public void shutdown()\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+  }\n+\n+  @Override\n+  public boolean isRunning()\n+  {\n+    return isRunning;\n+  }\n+\n+  private void preLoadCypherCompiler()\n+  {\n+    // Execute a single Cypher query to pre-load the compiler to make the first user-query snappy\n+    try\n     {\n-    }\n-\n-    @Override\n-    public boolean isRunning()\n-    {\n-        return isRunning;\n-    }\n-\n-    private void preLoadCypherCompiler()\n-    {\n-        // Execute a single Cypher query to pre-load the compiler to make the first user-query snappy\n-        try\n-        {\n-            //noinspection EmptyTryBlock\n-            try ( Result ignore = this.graph.execute( CYPHER_WARMUP_QUERY ) )\n-            {\n-                // empty by design\n-            }\n-        }\n-        catch ( Exception ignore )\n-        {\n-            // This is only an attempt at warming up the database.\n-            // It's not a critical failure.\n-        }\n-    }\n-\n-    protected boolean isInTestMode()\n+      //noinspection EmptyTryBlock\n+      try (Result ignore = this.graph.execute(CYPHER_WARMUP_QUERY))\n+      {\n+        // empty by design\n+      }\n+    } catch (Exception ignore)\n     {\n-        // The assumption here is that assertions are only enabled during testing.\n-        boolean testing = false;\n-        assert testing = true : \"yes, this should be an assignment!\";\n-        return testing;\n+      // This is only an attempt at warming up the database.\n+      // It's not a critical failure.\n     }\n+  }\n+\n+  protected boolean isInTestMode()\n+  {\n+    // The assumption here is that assertions are only enabled during testing.\n+    boolean testing = false;\n+    assert testing = true : \"yes, this should be an assignment!\";\n+    return testing;\n+  }\n }\n",
            "diff_size": 139
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1785/LifecycleManagingDatabase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1785/LifecycleManagingDatabase.java\nindex db820b56520..961a92aa47b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1785/LifecycleManagingDatabase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1785/LifecycleManagingDatabase.java\n@@ -34,10 +34,9 @@ import org.neo4j.logging.Log;\n  */\n public class LifecycleManagingDatabase implements Database\n {\n-    static final String CYPHER_WARMUP_QUERY =\n-            \"MATCH (a:` This query is just used to load the cypher compiler during warmup. Please ignore `) RETURN a LIMIT 0\";\n+    static final String CYPHER_WARMUP_QUERY = \"MATCH (a:` This query is just used to load the cypher compiler during warmup. Please ignore `) RETURN a LIMIT 0\";\n \n-    public interface GraphFactory\n+public interface GraphFactory\n     {\n         GraphDatabaseFacade newGraphDatabase( Config config, GraphDatabaseFacadeFactory.Dependencies dependencies );\n     }\n@@ -145,4 +144,4 @@ public class LifecycleManagingDatabase implements Database\n         assert testing = true : \"yes, this should be an assignment!\";\n         return testing;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
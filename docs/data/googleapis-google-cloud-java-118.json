{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "118",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.google.cloud.logging.spi.v2;\n\nimport com.google.api.MonitoredResourceDescriptor;\nimport com.google.api.gax.grpc.CallContext;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/118/PagedResponseWrappers.java\nindex 7fc91470c06..786d316bed2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/118/PagedResponseWrappers.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.logging.spi.v2;\n \n import com.google.api.MonitoredResourceDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/118/PagedResponseWrappers.java\nindex 7fc91470c06..99445fc8c36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/118/PagedResponseWrappers.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.logging.spi.v2;\n \n import com.google.api.MonitoredResourceDescriptor;\n@@ -33,6 +34,7 @@ import com.google.logging.v2.LogMetric;\n import com.google.logging.v2.LogSink;\n \n // AUTO-GENERATED DOCUMENTATION AND CLASS\n+\n /**\n  * Wrapper class to contain paged response types for page streaming methods. Each static class\n  * inside this wrapper class is used as the return type of one of an API method that implements the\n@@ -55,16 +57,16 @@ public class PagedResponseWrappers {\n \n   public static class ListMonitoredResourceDescriptorsPagedResponse\n       extends PagedListResponseImpl<\n-          ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n-          MonitoredResourceDescriptor> {\n+      ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n+      MonitoredResourceDescriptor> {\n \n     public ListMonitoredResourceDescriptorsPagedResponse(\n         UnaryCallable<\n-                ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse>\n+            ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse>\n             callable,\n         PagedListDescriptor<\n-                ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n-                MonitoredResourceDescriptor>\n+            ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n+            MonitoredResourceDescriptor>\n             pageDescriptor,\n         ListMonitoredResourceDescriptorsRequest request,\n         CallContext context) {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 334).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/118/PagedResponseWrappers.java\nindex 7fc91470c06..1299a2227a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/118/PagedResponseWrappers.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.logging.spi.v2;\n \n import com.google.api.MonitoredResourceDescriptor;\n@@ -46,29 +47,17 @@ public class PagedResponseWrappers {\n \n     public ListLogEntriesPagedResponse(\n         UnaryCallable<ListLogEntriesRequest, ListLogEntriesResponse> callable,\n-        PagedListDescriptor<ListLogEntriesRequest, ListLogEntriesResponse, LogEntry> pageDescriptor,\n-        ListLogEntriesRequest request,\n-        CallContext context) {\n-      super(callable, pageDescriptor, request, context);\n+        PagedListDescriptor<ListLogEntriesRequest, ListLogEntriesResponse, LogEntry> pageDescriptor, ListLogEntriesRequest request, CallContext context) {\n+  super(callable, pageDescriptor, request, context);\n     }\n   }\n \n   public static class ListMonitoredResourceDescriptorsPagedResponse\n-      extends PagedListResponseImpl<\n-          ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n-          MonitoredResourceDescriptor> {\n+      extends PagedListResponseImpl<ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse, MonitoredResourceDescriptor> {\n \n-    public ListMonitoredResourceDescriptorsPagedResponse(\n-        UnaryCallable<\n-                ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse>\n-            callable,\n-        PagedListDescriptor<\n-                ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n-                MonitoredResourceDescriptor>\n-            pageDescriptor,\n-        ListMonitoredResourceDescriptorsRequest request,\n-        CallContext context) {\n-      super(callable, pageDescriptor, request, context);\n+  public ListMonitoredResourceDescriptorsPagedResponse(\n+        UnaryCallable<ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse> callable, PagedListDescriptor<ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse, MonitoredResourceDescriptor> pageDescriptor, ListMonitoredResourceDescriptorsRequest request, CallContext context) {\n+  super(callable, pageDescriptor, request, context);\n     }\n   }\n \n@@ -77,10 +66,8 @@ public class PagedResponseWrappers {\n \n     public ListSinksPagedResponse(\n         UnaryCallable<ListSinksRequest, ListSinksResponse> callable,\n-        PagedListDescriptor<ListSinksRequest, ListSinksResponse, LogSink> pageDescriptor,\n-        ListSinksRequest request,\n-        CallContext context) {\n-      super(callable, pageDescriptor, request, context);\n+        PagedListDescriptor<ListSinksRequest, ListSinksResponse, LogSink> pageDescriptor, ListSinksRequest request, CallContext context) {\n+  super(callable, pageDescriptor, request, context);\n     }\n   }\n \n@@ -89,11 +76,8 @@ public class PagedResponseWrappers {\n \n     public ListLogMetricsPagedResponse(\n         UnaryCallable<ListLogMetricsRequest, ListLogMetricsResponse> callable,\n-        PagedListDescriptor<ListLogMetricsRequest, ListLogMetricsResponse, LogMetric>\n-            pageDescriptor,\n-        ListLogMetricsRequest request,\n-        CallContext context) {\n-      super(callable, pageDescriptor, request, context);\n+        PagedListDescriptor<ListLogMetricsRequest, ListLogMetricsResponse, LogMetric> pageDescriptor, ListLogMetricsRequest request, CallContext context) {\n+  super(callable, pageDescriptor, request, context);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 256).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 383).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 257).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/118/PagedResponseWrappers.java\nindex 7fc91470c06..b780df0b2ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/118/PagedResponseWrappers.java\n@@ -38,62 +38,36 @@ import com.google.logging.v2.LogSink;\n  * inside this wrapper class is used as the return type of one of an API method that implements the\n  * page streaming pattern.\n  */\n+\n+\n @javax.annotation.Generated(\"by GAPIC\")\n public class PagedResponseWrappers {\n \n-  public static class ListLogEntriesPagedResponse\n-      extends PagedListResponseImpl<ListLogEntriesRequest, ListLogEntriesResponse, LogEntry> {\n+  public static class ListLogEntriesPagedResponse extends PagedListResponseImpl<ListLogEntriesRequest, ListLogEntriesResponse, LogEntry> {\n \n-    public ListLogEntriesPagedResponse(\n-        UnaryCallable<ListLogEntriesRequest, ListLogEntriesResponse> callable,\n-        PagedListDescriptor<ListLogEntriesRequest, ListLogEntriesResponse, LogEntry> pageDescriptor,\n-        ListLogEntriesRequest request,\n-        CallContext context) {\n+    public ListLogEntriesPagedResponse(UnaryCallable<ListLogEntriesRequest, ListLogEntriesResponse> callable, PagedListDescriptor<ListLogEntriesRequest, ListLogEntriesResponse, LogEntry> pageDescriptor, ListLogEntriesRequest request, CallContext context) {\n       super(callable, pageDescriptor, request, context);\n     }\n   }\n \n-  public static class ListMonitoredResourceDescriptorsPagedResponse\n-      extends PagedListResponseImpl<\n-          ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n-          MonitoredResourceDescriptor> {\n+  public static class ListMonitoredResourceDescriptorsPagedResponse extends PagedListResponseImpl<ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse, MonitoredResourceDescriptor> {\n \n-    public ListMonitoredResourceDescriptorsPagedResponse(\n-        UnaryCallable<\n-                ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse>\n-            callable,\n-        PagedListDescriptor<\n-                ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse,\n-                MonitoredResourceDescriptor>\n-            pageDescriptor,\n-        ListMonitoredResourceDescriptorsRequest request,\n-        CallContext context) {\n+    public ListMonitoredResourceDescriptorsPagedResponse(UnaryCallable<ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse> callable, PagedListDescriptor<ListMonitoredResourceDescriptorsRequest, ListMonitoredResourceDescriptorsResponse, MonitoredResourceDescriptor> pageDescriptor, ListMonitoredResourceDescriptorsRequest request, CallContext context) {\n       super(callable, pageDescriptor, request, context);\n     }\n   }\n \n-  public static class ListSinksPagedResponse\n-      extends PagedListResponseImpl<ListSinksRequest, ListSinksResponse, LogSink> {\n+  public static class ListSinksPagedResponse extends PagedListResponseImpl<ListSinksRequest, ListSinksResponse, LogSink> {\n \n-    public ListSinksPagedResponse(\n-        UnaryCallable<ListSinksRequest, ListSinksResponse> callable,\n-        PagedListDescriptor<ListSinksRequest, ListSinksResponse, LogSink> pageDescriptor,\n-        ListSinksRequest request,\n-        CallContext context) {\n+    public ListSinksPagedResponse(UnaryCallable<ListSinksRequest, ListSinksResponse> callable, PagedListDescriptor<ListSinksRequest, ListSinksResponse, LogSink> pageDescriptor, ListSinksRequest request, CallContext context) {\n       super(callable, pageDescriptor, request, context);\n     }\n   }\n \n-  public static class ListLogMetricsPagedResponse\n-      extends PagedListResponseImpl<ListLogMetricsRequest, ListLogMetricsResponse, LogMetric> {\n+  public static class ListLogMetricsPagedResponse extends PagedListResponseImpl<ListLogMetricsRequest, ListLogMetricsResponse, LogMetric> {\n \n-    public ListLogMetricsPagedResponse(\n-        UnaryCallable<ListLogMetricsRequest, ListLogMetricsResponse> callable,\n-        PagedListDescriptor<ListLogMetricsRequest, ListLogMetricsResponse, LogMetric>\n-            pageDescriptor,\n-        ListLogMetricsRequest request,\n-        CallContext context) {\n+    public ListLogMetricsPagedResponse(UnaryCallable<ListLogMetricsRequest, ListLogMetricsResponse> callable, PagedListDescriptor<ListLogMetricsRequest, ListLogMetricsResponse, LogMetric> pageDescriptor, ListLogMetricsRequest request, CallContext context) {\n       super(callable, pageDescriptor, request, context);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/118/PagedResponseWrappers.java\nindex 7fc91470c06..786d316bed2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/118/PagedResponseWrappers.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.logging.spi.v2;\n \n import com.google.api.MonitoredResourceDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/118/PagedResponseWrappers.java\nindex 7fc91470c06..786d316bed2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/118/PagedResponseWrappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/118/PagedResponseWrappers.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.logging.spi.v2;\n \n import com.google.api.MonitoredResourceDescriptor;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "616",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "232",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "258",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/616/TimeValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/616/TimeValue.java\nindex 3ffb7fea22d..1cd357ce3a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/616/TimeValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/616/TimeValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.Clock;\n@@ -51,46 +52,46 @@ import static org.neo4j.values.storable.LocalTimeValue.optInt;\n import static org.neo4j.values.storable.LocalTimeValue.parseTime;\n import static org.neo4j.values.storable.Values.NO_VALUE;\n \n-public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n+public final class TimeValue extends TemporalValue<OffsetTime, TimeValue>\n {\n-    private static final long INSTANCE_SIZE = shallowSizeOfInstance( TimeValue.class ) + OFFSET_TIME_SIZE;\n+    private static final long INSTANCE_SIZE = shallowSizeOfInstance(TimeValue.class) + OFFSET_TIME_SIZE;\n \n-    public static final TimeValue MIN_VALUE = new TimeValue( OffsetTime.MIN );\n-    public static final TimeValue MAX_VALUE = new TimeValue( OffsetTime.MAX );\n+    public static final TimeValue MIN_VALUE = new TimeValue(OffsetTime.MIN);\n+    public static final TimeValue MAX_VALUE = new TimeValue(OffsetTime.MAX);\n \n     private final OffsetTime value;\n     private final long nanosOfDayUTC;\n \n-    private TimeValue( OffsetTime value )\n+    private TimeValue(OffsetTime value)\n     {\n         this.value = value;\n-        this.nanosOfDayUTC = TemporalUtil.getNanosOfDayUTC( this.value );\n+        this.nanosOfDayUTC = TemporalUtil.getNanosOfDayUTC(this.value);\n     }\n \n-    public static TimeValue time( OffsetTime time )\n+    public static TimeValue time(OffsetTime time)\n     {\n-        return new TimeValue( requireNonNull( time, \"OffsetTime\" ) );\n+        return new TimeValue(requireNonNull(time, \"OffsetTime\"));\n     }\n \n-    public static TimeValue time( int hour, int minute, int second, int nanosOfSecond, String offset )\n+    public static TimeValue time(int hour, int minute, int second, int nanosOfSecond, String offset)\n     {\n-        return time( hour, minute, second, nanosOfSecond, parseOffset( offset ) );\n+        return time(hour, minute, second, nanosOfSecond, parseOffset(offset));\n     }\n \n-    public static TimeValue time( int hour, int minute, int second, int nanosOfSecond, ZoneOffset offset )\n+    public static TimeValue time(int hour, int minute, int second, int nanosOfSecond, ZoneOffset offset)\n     {\n         return new TimeValue(\n-                OffsetTime.of( assertValidArgument( () -> LocalTime.of( hour, minute, second, nanosOfSecond ) ), offset ) );\n+          OffsetTime.of(assertValidArgument(() -> LocalTime.of(hour, minute, second, nanosOfSecond)), offset));\n     }\n \n-    public static TimeValue time( long nanosOfDayUTC, ZoneOffset offset )\n+    public static TimeValue time(long nanosOfDayUTC, ZoneOffset offset)\n     {\n-        return new TimeValue( timeRaw( nanosOfDayUTC, offset ) );\n+        return new TimeValue(timeRaw(nanosOfDayUTC, offset));\n     }\n \n-    public static OffsetTime timeRaw( long nanosOfDayUTC, ZoneOffset offset )\n+    public static OffsetTime timeRaw(long nanosOfDayUTC, ZoneOffset offset)\n     {\n-        return OffsetTime.ofInstant( assertValidArgument( () -> Instant.ofEpochSecond( 0, nanosOfDayUTC ) ), offset );\n+        return OffsetTime.ofInstant(assertValidArgument(() -> Instant.ofEpochSecond(0, nanosOfDayUTC)), offset);\n     }\n \n     @Override\n@@ -99,53 +100,53 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n         return \"Time\";\n     }\n \n-    public static TimeValue parse( CharSequence text, Supplier<ZoneId> defaultZone, CSVHeaderInformation fieldsFromHeader )\n+    public static TimeValue parse(CharSequence text, Supplier<ZoneId> defaultZone, CSVHeaderInformation fieldsFromHeader)\n     {\n-        if ( fieldsFromHeader != null )\n+        if (fieldsFromHeader != null)\n         {\n-            if ( !(fieldsFromHeader instanceof TimeCSVHeaderInformation) )\n+            if (!(fieldsFromHeader instanceof TimeCSVHeaderInformation))\n             {\n-                throw new IllegalStateException( \"Wrong header information type: \" + fieldsFromHeader );\n+                throw new IllegalStateException(\"Wrong header information type: \" + fieldsFromHeader);\n             }\n             // Override defaultZone\n-            defaultZone = ((TimeCSVHeaderInformation) fieldsFromHeader).zoneSupplier( defaultZone );\n+            defaultZone = ((TimeCSVHeaderInformation) fieldsFromHeader).zoneSupplier(defaultZone);\n         }\n-        return parse( TimeValue.class, PATTERN, TimeValue::parse, text, defaultZone );\n+        return parse(TimeValue.class, PATTERN, TimeValue::parse, text, defaultZone);\n     }\n \n-    public static TimeValue parse( CharSequence text, Supplier<ZoneId> defaultZone )\n+    public static TimeValue parse(CharSequence text, Supplier<ZoneId> defaultZone)\n     {\n-        return parse( TimeValue.class, PATTERN, TimeValue::parse, text, defaultZone );\n+        return parse(TimeValue.class, PATTERN, TimeValue::parse, text, defaultZone);\n     }\n \n-    public static TimeValue parse( TextValue text, Supplier<ZoneId> defaultZone )\n+    public static TimeValue parse(TextValue text, Supplier<ZoneId> defaultZone)\n     {\n-        return parse( TimeValue.class, PATTERN, TimeValue::parse, text, defaultZone );\n+        return parse(TimeValue.class, PATTERN, TimeValue::parse, text, defaultZone);\n     }\n \n-    public static TimeValue now( Clock clock )\n+    public static TimeValue now(Clock clock)\n     {\n-        return new TimeValue( OffsetTime.now( clock ) );\n+        return new TimeValue(OffsetTime.now(clock));\n     }\n \n-    public static TimeValue now( Clock clock, String timezone )\n+    public static TimeValue now(Clock clock, String timezone)\n     {\n-        return now( clock.withZone( parseZoneName( timezone ) ) );\n+        return now(clock.withZone(parseZoneName(timezone)));\n     }\n \n-    public static TimeValue now( Clock clock, Supplier<ZoneId> defaultZone )\n+    public static TimeValue now(Clock clock, Supplier<ZoneId> defaultZone)\n     {\n-        return now( clock.withZone( defaultZone.get() ) );\n+        return now(clock.withZone(defaultZone.get()));\n     }\n \n-    public static TimeValue build( MapValue map, Supplier<ZoneId> defaultZone )\n+    public static TimeValue build(MapValue map, Supplier<ZoneId> defaultZone)\n     {\n-        return StructureBuilder.build( builder( defaultZone ), map );\n+        return StructureBuilder.build(builder(defaultZone), map);\n     }\n \n-    public static TimeValue select( AnyValue from, Supplier<ZoneId> defaultZone )\n+    public static TimeValue select(AnyValue from, Supplier<ZoneId> defaultZone)\n     {\n-        return builder( defaultZone ).selectTime( from );\n+        return builder(defaultZone).selectTime(from);\n     }\n \n     @Override\n@@ -155,55 +156,53 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n     }\n \n     public static TimeValue truncate(\n-            TemporalUnit unit,\n-            TemporalValue input,\n-            MapValue fields,\n-            Supplier<ZoneId> defaultZone )\n-    {\n-        OffsetTime time = input.getTimePart( defaultZone );\n-        OffsetTime truncatedOT = assertValidUnit( () -> time.truncatedTo( unit ) );\n-        if ( fields.size() == 0 )\n+      TemporalUnit unit,\n+      TemporalValue input,\n+      MapValue fields,\n+      Supplier<ZoneId> defaultZone)\n+    {\n+        OffsetTime time = input.getTimePart(defaultZone);\n+        OffsetTime truncatedOT = assertValidUnit(() -> time.truncatedTo(unit));\n+        if (fields.size() == 0)\n         {\n-            return time( truncatedOT );\n-        }\n-        else\n+            return time(truncatedOT);\n+        } else\n         {\n             // Timezone needs some special handling, since the builder will shift keeping the instant instead of the local time\n-            AnyValue timezone = fields.get( \"timezone\" );\n-            if ( timezone != NO_VALUE )\n+            AnyValue timezone = fields.get(\"timezone\");\n+            if (timezone != NO_VALUE)\n             {\n                 ZonedDateTime currentDT =\n-                        assertValidArgument( () -> ZonedDateTime.ofInstant( Instant.now(), timezoneOf( timezone ) ) );\n+                  assertValidArgument(() -> ZonedDateTime.ofInstant(Instant.now(), timezoneOf(timezone)));\n                 ZoneOffset currentOffset = currentDT.getOffset();\n-                truncatedOT = truncatedOT.withOffsetSameLocal( currentOffset );\n+                truncatedOT = truncatedOT.withOffsetSameLocal(currentOffset);\n             }\n \n-            return updateFieldMapWithConflictingSubseconds( fields, unit, truncatedOT,\n-                    ( mapValue, offsetTime ) -> {\n-                        if ( mapValue.size() == 0 )\n-                        {\n-                            return time( offsetTime );\n-                        }\n-                        else\n-                        {\n-                            return build( mapValue.updatedWith( \"time\", time( offsetTime ) ), defaultZone );\n+            return updateFieldMapWithConflictingSubseconds(fields, unit, truncatedOT,\n+              (mapValue, offsetTime) -> {\n+                  if (mapValue.size() == 0)\n+                  {\n+                      return time(offsetTime);\n+                  } else\n+                  {\n+                      return build(mapValue.updatedWith(\"time\", time(offsetTime)), defaultZone);\n \n-                        }\n-                    } );\n+                  }\n+              });\n \n         }\n     }\n \n-    private static OffsetTime defaultTime( ZoneId zoneId )\n+    private static OffsetTime defaultTime(ZoneId zoneId)\n     {\n-        return OffsetTime.of( TemporalFields.hour.defaultValue, TemporalFields.minute.defaultValue,\n-                TemporalFields.second.defaultValue, TemporalFields.nanosecond.defaultValue,\n-                assertValidZone( () -> ZoneOffset.of( zoneId.toString() ) ) );\n+        return OffsetTime.of(TemporalFields.hour.defaultValue, TemporalFields.minute.defaultValue,\n+          TemporalFields.second.defaultValue, TemporalFields.nanosecond.defaultValue,\n+          assertValidZone(() -> ZoneOffset.of(zoneId.toString())));\n     }\n \n-    private static TimeBuilder<TimeValue> builder( Supplier<ZoneId> defaultZone )\n+    private static TimeBuilder<TimeValue> builder(Supplier<ZoneId> defaultZone)\n     {\n-        return new TimeBuilder<>( defaultZone )\n+        return new TimeBuilder<>(defaultZone)\n         {\n             @Override\n             protected boolean supportsTimeZone()\n@@ -214,82 +213,80 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n             @Override\n             public TimeValue buildInternal()\n             {\n-                boolean selectingTime = fields.containsKey( TemporalFields.time );\n+                boolean selectingTime = fields.containsKey(TemporalFields.time);\n                 boolean selectingTimeZone;\n                 OffsetTime result;\n-                if ( selectingTime )\n+                if (selectingTime)\n                 {\n-                    AnyValue time = fields.get( TemporalFields.time );\n-                    if ( !(time instanceof TemporalValue) )\n+                    AnyValue time = fields.get(TemporalFields.time);\n+                    if (!(time instanceof TemporalValue))\n                     {\n-                        throw new InvalidArgumentException( String.format( \"Cannot construct time from: %s\", time ) );\n+                        throw new InvalidArgumentException(String.format(\"Cannot construct time from: %s\", time));\n                     }\n                     TemporalValue t = (TemporalValue) time;\n-                    result = t.getTimePart( defaultZone );\n+                    result = t.getTimePart(defaultZone);\n                     selectingTimeZone = t.supportsTimeZone();\n-                }\n-                else\n+                } else\n                 {\n                     ZoneId timezone = timezone();\n-                    if ( !(timezone instanceof ZoneOffset) )\n+                    if (!(timezone instanceof ZoneOffset))\n                     {\n-                        timezone = assertValidArgument( () -> ZonedDateTime.ofInstant( Instant.now(), timezone() ) ).getOffset();\n+                        timezone = assertValidArgument(() -> ZonedDateTime.ofInstant(Instant.now(), timezone())).getOffset();\n                     }\n \n-                    result = defaultTime( timezone );\n+                    result = defaultTime(timezone);\n                     selectingTimeZone = false;\n                 }\n \n-                result = assignAllFields( result );\n-                if ( timezone != null )\n+                result = assignAllFields(result);\n+                if (timezone != null)\n                 {\n-                    ZoneOffset currentOffset = assertValidArgument( () -> ZonedDateTime.ofInstant( Instant.now(), timezone() ) ).getOffset();\n-                    if ( selectingTime && selectingTimeZone )\n+                    ZoneOffset currentOffset = assertValidArgument(() -> ZonedDateTime.ofInstant(Instant.now(), timezone())).getOffset();\n+                    if (selectingTime && selectingTimeZone)\n                     {\n-                        result = result.withOffsetSameInstant( currentOffset );\n-                    }\n-                    else\n+                        result = result.withOffsetSameInstant(currentOffset);\n+                    } else\n                     {\n-                        result = result.withOffsetSameLocal( currentOffset );\n+                        result = result.withOffsetSameLocal(currentOffset);\n                     }\n                 }\n-                return time( result );\n+                return time(result);\n             }\n \n             @Override\n             protected TimeValue selectTime(\n-                    AnyValue temporal )\n+              AnyValue temporal)\n             {\n-                if ( !(temporal instanceof TemporalValue) )\n+                if (!(temporal instanceof TemporalValue))\n                 {\n-                    throw new InvalidArgumentException( String.format( \"Cannot construct time from: %s\", temporal ) );\n+                    throw new InvalidArgumentException(String.format(\"Cannot construct time from: %s\", temporal));\n                 }\n-                if ( temporal instanceof TimeValue &&\n-                     timezone == null )\n+                if (temporal instanceof TimeValue &&\n+                  timezone == null)\n                 {\n                     return (TimeValue) temporal;\n                 }\n \n                 TemporalValue v = (TemporalValue) temporal;\n-                OffsetTime time = v.getTimePart( defaultZone );\n-                if ( timezone != null )\n+                OffsetTime time = v.getTimePart(defaultZone);\n+                if (timezone != null)\n                 {\n-                    ZoneOffset currentOffset = assertValidArgument( () -> ZonedDateTime.ofInstant( Instant.now(), timezone() ) ).getOffset();\n-                    time = time.withOffsetSameInstant( currentOffset );\n+                    ZoneOffset currentOffset = assertValidArgument(() -> ZonedDateTime.ofInstant(Instant.now(), timezone())).getOffset();\n+                    time = time.withOffsetSameInstant(currentOffset);\n                 }\n-                return time( time );\n+                return time(time);\n             }\n         };\n     }\n \n     @Override\n-    int unsafeCompareTo( Value otherValue )\n+    int unsafeCompareTo(Value otherValue)\n     {\n         TimeValue other = (TimeValue) otherValue;\n-        int compare = Long.compare( nanosOfDayUTC, other.nanosOfDayUTC );\n-        if ( compare == 0 )\n+        int compare = Long.compare(nanosOfDayUTC, other.nanosOfDayUTC);\n+        if (compare == 0)\n         {\n-            compare = Integer.compare( value.getOffset().getTotalSeconds(), other.value.getOffset().getTotalSeconds() );\n+            compare = Integer.compare(value.getOffset().getTotalSeconds(), other.value.getOffset().getTotalSeconds());\n         }\n         return compare;\n     }\n@@ -303,7 +300,7 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n     @Override\n     LocalDate getDatePart()\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the date of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the date of: %s\", this));\n     }\n \n     @Override\n@@ -313,13 +310,13 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n     }\n \n     @Override\n-    OffsetTime getTimePart( Supplier<ZoneId> defaultZone )\n+    OffsetTime getTimePart(Supplier<ZoneId> defaultZone)\n     {\n         return value;\n     }\n \n     @Override\n-    ZoneId getZoneId( Supplier<ZoneId> defaultZone )\n+    ZoneId getZoneId(Supplier<ZoneId> defaultZone)\n     {\n         return value.getOffset();\n     }\n@@ -337,21 +334,21 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n     }\n \n     @Override\n-    public boolean equals( Value other )\n+    public boolean equals(Value other)\n     {\n-        return other instanceof TimeValue && value.equals( ((TimeValue) other).value );\n+        return other instanceof TimeValue && value.equals(((TimeValue) other).value);\n     }\n \n     @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        writer.writeTime( value );\n+        writer.writeTime(value);\n     }\n \n     @Override\n     public String prettyPrint()\n     {\n-        return assertPrintable( () -> value.format( DateTimeFormatter.ISO_TIME ) );\n+        return assertPrintable(() -> value.format(DateTimeFormatter.ISO_TIME));\n     }\n \n     @Override\n@@ -363,31 +360,31 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n     @Override\n     protected int computeHashToMemoize()\n     {\n-        return Long.hashCode( value.toLocalTime().toNanoOfDay() - value.getOffset().getTotalSeconds() * 1000_000_000L );\n+        return Long.hashCode(value.toLocalTime().toNanoOfDay() - value.getOffset().getTotalSeconds() * 1000_000_000L);\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public <T> T map(ValueMapper<T> mapper)\n     {\n-        return mapper.mapTime( this );\n+        return mapper.mapTime(this);\n     }\n \n     @Override\n-    public TimeValue add( DurationValue duration )\n+    public TimeValue add(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic( () -> value.plusNanos( duration.nanosOfDay() ) ) );\n+        return replacement(assertValidArithmetic(() -> value.plusNanos(duration.nanosOfDay())));\n     }\n \n     @Override\n-    public TimeValue sub( DurationValue duration )\n+    public TimeValue sub(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic( () -> value.minusNanos( duration.nanosOfDay() ) ) );\n+        return replacement(assertValidArithmetic(() -> value.minusNanos(duration.nanosOfDay())));\n     }\n \n     @Override\n-    TimeValue replacement( OffsetTime time )\n+    TimeValue replacement(OffsetTime time)\n     {\n-        return time == value ? this : new TimeValue( time );\n+        return time == value ? this : new TimeValue(time);\n     }\n \n     @Override\n@@ -399,63 +396,63 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n     private static final String OFFSET_PATTERN = \"(?<zone>Z|[+-](?<zoneHour>[0-9]{2})(?::?(?<zoneMinute>[0-9]{2}))?)\";\n     private static final String ZONE_NAME_PATTERN = \"(?<zoneName>[a-zA-Z0-9~._ /+-]+)\";\n     static final String TIME_PATTERN = LocalTimeValue.TIME_PATTERN + \"(?:\" + OFFSET_PATTERN + \")?\" + \"(?:\\\\[\" + ZONE_NAME_PATTERN + \"])?\";\n-    private static final Pattern PATTERN = Pattern.compile( \"(?:T)?\" + TIME_PATTERN, Pattern.CASE_INSENSITIVE );\n-    static final Pattern OFFSET = Pattern.compile( OFFSET_PATTERN );\n+    private static final Pattern PATTERN = Pattern.compile(\"(?:T)?\" + TIME_PATTERN, Pattern.CASE_INSENSITIVE);\n+    static final Pattern OFFSET = Pattern.compile(OFFSET_PATTERN);\n \n-    static ZoneOffset parseOffset( String offset )\n+    static ZoneOffset parseOffset(String offset)\n     {\n-        Matcher matcher = OFFSET.matcher( offset );\n-        if ( matcher.matches() )\n+        Matcher matcher = OFFSET.matcher(offset);\n+        if (matcher.matches())\n         {\n-            return parseOffset( matcher );\n+            return parseOffset(matcher);\n         }\n-        throw new InvalidArgumentException( \"Not a valid offset: \" + offset );\n+        throw new InvalidArgumentException(\"Not a valid offset: \" + offset);\n     }\n \n-    static ZoneOffset parseOffset( Matcher matcher )\n+    static ZoneOffset parseOffset(Matcher matcher)\n     {\n-        String zone = matcher.group( \"zone\" );\n-        if ( null == zone )\n+        String zone = matcher.group(\"zone\");\n+        if (null == zone)\n         {\n             return null;\n         }\n-        if ( \"Z\".equalsIgnoreCase( zone ) )\n+        if (\"Z\".equalsIgnoreCase(zone))\n         {\n             return UTC;\n         }\n-        int factor = zone.charAt( 0 ) == '+' ? 1 : -1;\n-        int hours = parseInt( matcher.group( \"zoneHour\" ) );\n-        int minutes = optInt( matcher.group( \"zoneMinute\" ) );\n-        return assertValidZone( () -> ZoneOffset.ofHoursMinutes( factor * hours, factor * minutes ) );\n+        int factor = zone.charAt(0) == '+' ? 1 : -1;\n+        int hours = parseInt(matcher.group(\"zoneHour\"));\n+        int minutes = optInt(matcher.group(\"zoneMinute\"));\n+        return assertValidZone(() -> ZoneOffset.ofHoursMinutes(factor * hours, factor * minutes));\n     }\n \n-    private static TimeValue parse( Matcher matcher, Supplier<ZoneId> defaultZone )\n+    private static TimeValue parse(Matcher matcher, Supplier<ZoneId> defaultZone)\n     {\n-        String zoneName = matcher.group( \"zoneName\" );\n-        if ( null != zoneName )\n+        String zoneName = matcher.group(\"zoneName\");\n+        if (null != zoneName)\n         {\n             throw new InvalidArgumentException(\n-                    \"Using a named time zone e.g. [UTC] is not valid for a time without a date. Instead, use a specific time zone string e.g. +00:00.\" );\n+              \"Using a named time zone e.g. [UTC] is not valid for a time without a date. Instead, use a specific time zone string e.g. +00:00.\");\n         }\n-        return new TimeValue( OffsetTime.of( parseTime( matcher ), parseOffset( matcher, defaultZone ) ) );\n+        return new TimeValue(OffsetTime.of(parseTime(matcher), parseOffset(matcher, defaultZone)));\n     }\n \n-    private static ZoneOffset parseOffset( Matcher matcher, Supplier<ZoneId> defaultZone )\n+    private static ZoneOffset parseOffset(Matcher matcher, Supplier<ZoneId> defaultZone)\n     {\n-        ZoneOffset offset = parseOffset( matcher );\n-        if ( offset == null )\n+        ZoneOffset offset = parseOffset(matcher);\n+        if (offset == null)\n         {\n             ZoneId zoneId = defaultZone.get();\n-            offset = zoneId instanceof ZoneOffset ? (ZoneOffset) zoneId : zoneId.getRules().getOffset( Instant.now() );\n+            offset = zoneId instanceof ZoneOffset ? (ZoneOffset) zoneId : zoneId.getRules().getOffset(Instant.now());\n         }\n         return offset;\n     }\n \n     abstract static class TimeBuilder<Result> extends Builder<Result>\n     {\n-        TimeBuilder( Supplier<ZoneId> defaultZone )\n+        TimeBuilder(Supplier<ZoneId> defaultZone)\n         {\n-            super( defaultZone );\n+            super(defaultZone);\n         }\n \n         @Override\n@@ -476,6 +473,6 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n             return false;\n         }\n \n-        protected abstract Result selectTime( AnyValue time );\n+        protected abstract Result selectTime(AnyValue time);\n     }\n }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/616/TimeValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/616/TimeValue.java\nindex 3ffb7fea22d..128f43800bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/616/TimeValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/616/TimeValue.java\n@@ -190,8 +190,7 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n \n                         }\n                     } );\n-\n-        }\n+    }\n     }\n \n     private static OffsetTime defaultTime( ZoneId zoneId )\n@@ -266,7 +265,7 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n                 }\n                 if ( temporal instanceof TimeValue &&\n                      timezone == null )\n-                {\n+{\n                     return (TimeValue) temporal;\n                 }\n \n@@ -478,4 +477,4 @@ public final class TimeValue extends TemporalValue<OffsetTime,TimeValue>\n \n         protected abstract Result selectTime( AnyValue time );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
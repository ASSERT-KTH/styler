{
    "project_name": "findbugsproject-findbugs",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "58",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     * Creates new form AboutDialog\n     */\n\tpublic AboutDialog(JFrame parent, Logger l, boolean modal) {\n        super(parent, modal);\n        //this.parent = parent;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/40/AboutDialog.java\nindex a156f382d46..30043805f9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/40/AboutDialog.java\n@@ -55,7 +55,7 @@ public class AboutDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AboutDialog\n      */\n-\tpublic AboutDialog(JFrame parent, Logger l, boolean modal) {\n+public AboutDialog(JFrame parent, Logger l, boolean modal) {\n         super(parent, modal);\n         //this.parent = parent;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/40/AboutDialog.java\nindex a156f382d46..69b36fb6332 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/40/AboutDialog.java\n@@ -55,7 +55,7 @@ public class AboutDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AboutDialog\n      */\n-\tpublic AboutDialog(JFrame parent, Logger l, boolean modal) {\n+    public AboutDialog(JFrame parent, Logger l, boolean modal) {\n         super(parent, modal);\n         //this.parent = parent;\n \n@@ -64,73 +64,76 @@ public class AboutDialog extends javax.swing.JDialog {\n         try {\n             aboutEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/About.html\"));\n             licenseEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/License.html\"));\n-\t\t\tacknowldgementsEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/Acknowledgements.html\"));\n+            acknowldgementsEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/Acknowledgements.html\"));\n         } catch (IOException e) {\n             l.logMessage(ConsoleLogger.ERROR, e.toString());\n         }\n \n-        setTitle(MessageFormat.format(L10N.getLocalString(\"dlg.aboutfindbugs_ttl\", \"About FindBugs {0}\"), new Object[]{Version.RELEASE}));\n+        setTitle(MessageFormat.format(L10N.getLocalString(\"dlg.aboutfindbugs_ttl\", \"About FindBugs {0}\"), new Object[] {Version.RELEASE}));\n     }\n \n     static Pattern pattern = Pattern.compile(\"@VERSION@\");\n+\n     /**\n      * Process an HTML page to replace certain substitution patterns.\n-\t * Right now, we just expand @VERSION@.\n+     * Right now, we just expand @VERSION@.\n      */\n     @edu.umd.cs.findbugs.annotations.SuppressWarnings(\"OS_OPEN_STREAM\")\n     private void processPage(javax.swing.JEditorPane pane, String fileName) throws IOException {\n-\t\tInputStream in = null;\n+        InputStream in = null;\n         BufferedReader reader = null;\n         try {\n             StringBuilder buf = new StringBuilder();\n \n             // Open the file as a stream\n             in = getClass().getClassLoader().getResourceAsStream(fileName);\n-            if (in == null)\n-\t\t\t\tthrow new IOException(MessageFormat.format(L10N.getLocalString(\"msg.couldntload_txt\", \"Couldn't load {0}\"), new Object[]{fileName}));\n-             reader = new BufferedReader(Util.getReader(in));\n+            if (in == null) {\n+                throw new IOException(MessageFormat.format(L10N.getLocalString(\"msg.couldntload_txt\", \"Couldn't load {0}\"), new Object[] {fileName}));\n+            }\n+            reader = new BufferedReader(Util.getReader(in));\n \n             // Replace instances of @VERSION@ with actual version number\n \n             String line;\n             while ((line = reader.readLine()) != null) {\n                 line = pattern.matcher(line).replaceAll(Version.RELEASE);\n-\t\t\t\tbuf.append(line);\n+                buf.append(line);\n                 buf.append('\\n');\n             }\n \n             // Load the page into the editor pane\n             String text = buf.toString();\n             pane.setContentType(\"text/html\");\n-\t\t\tpane.setText(text);\n+            pane.setText(text);\n         } finally {\n             try {\n-                if (reader != null)\n-\t\t\t\t\treader.close();\n-                else if (in != null)\n+                if (reader != null) {\n+                    reader.close();\n+                } else if (in != null) {\n                     in.close();\n+                }\n             } catch (IOException e) {\n-\t\t\t}\n+            }\n         }\n     }\n \n     /**\n      * This method is called from within the constructor to\n      * initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is\n+     * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n     private void initComponents() {//GEN-BEGIN:initComponents\n-\t\tjava.awt.GridBagConstraints gridBagConstraints;\n+        java.awt.GridBagConstraints gridBagConstraints;\n \n         aboutTabPane = new javax.swing.JTabbedPane();\n         aboutScrollPane = new javax.swing.JScrollPane();\n         aboutEditorPane = new javax.swing.JEditorPane();\n-\t\tlicenseScrollPane = new javax.swing.JScrollPane();\n+        licenseScrollPane = new javax.swing.JScrollPane();\n         licenseEditorPane = new javax.swing.JEditorPane();\n         acknowledgmentsScrollPane = new javax.swing.JScrollPane();\n         acknowldgementsEditorPane = new javax.swing.JEditorPane();\n-\t\tjSeparator1 = new javax.swing.JSeparator();\n+        jSeparator1 = new javax.swing.JSeparator();\n         okButton = new javax.swing.JButton();\n \n         getContentPane().setLayout(new java.awt.GridBagLayout());\n@@ -138,14 +141,14 @@ public class AboutDialog extends javax.swing.JDialog {\n         addWindowListener(new java.awt.event.WindowAdapter() {\n             @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n-\t\t\t\tcloseDialog(evt);\n+                closeDialog(evt);\n             }\n         });\n \n         aboutEditorPane.setEditable(false);\n         aboutEditorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {\n             public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {\n-\t\t\t\teditorPaneHyperlinkUpdate(evt);\n+                editorPaneHyperlinkUpdate(evt);\n             }\n         });\n \n@@ -156,7 +159,7 @@ public class AboutDialog extends javax.swing.JDialog {\n         licenseEditorPane.setEditable(false);\n         licenseEditorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {\n             public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {\n-\t\t\t\teditorPaneHyperlinkUpdate(evt);\n+                editorPaneHyperlinkUpdate(evt);\n             }\n         });\n \n@@ -167,7 +170,7 @@ public class AboutDialog extends javax.swing.JDialog {\n         acknowldgementsEditorPane.setEditable(false);\n         acknowldgementsEditorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {\n             public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {\n-\t\t\t\teditorPaneHyperlinkUpdate(evt);\n+                editorPaneHyperlinkUpdate(evt);\n             }\n         });\n \n@@ -178,33 +181,33 @@ public class AboutDialog extends javax.swing.JDialog {\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.weightx = 1.0;\n-\t\tgridBagConstraints.weighty = 1.0;\n+        gridBagConstraints.weighty = 1.0;\n         getContentPane().add(aboutTabPane, gridBagConstraints);\n \n         {\n             aboutTabPane.setTitleAt(0, L10N.getLocalString(\"dlg.about_tab\", \"About\"));\n             aboutTabPane.setTitleAt(1, L10N.getLocalString(\"dlg.license_tab\", \"License\"));\n-\t\t\taboutTabPane.setTitleAt(2, L10N.getLocalString(\"dlg.acknowledgements_tab\", \"Acknowledgements\"));\n+            aboutTabPane.setTitleAt(2, L10N.getLocalString(\"dlg.acknowledgements_tab\", \"Acknowledgements\"));\n         }\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n-\t\tgridBagConstraints.gridy = 1;\n+        gridBagConstraints.gridy = 1;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(jSeparator1, gridBagConstraints);\n \n         okButton.setMnemonic('O');\n         okButton.setText(\"OK\");\n         okButton.setText(L10N.getLocalString(\"dlg.ok_btn\", \"OK\"));\n-\t\tokButton.addActionListener(new java.awt.event.ActionListener() {\n+        okButton.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 okButtonActionPerformed(evt);\n             }\n-\t\t});\n+        });\n \n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 2;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         getContentPane().add(okButton, gridBagConstraints);\n \n         pack();\n@@ -212,12 +215,11 @@ public class AboutDialog extends javax.swing.JDialog {\n \n     private void editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_editorPaneHyperlinkUpdate\n         try {\n-            if (evt.getEventType().equals( HyperlinkEvent.EventType.ACTIVATED)) {\n-\t\t\t\tURL url = evt.getURL();\n+            if (evt.getEventType().equals(HyperlinkEvent.EventType.ACTIVATED)) {\n+                URL url = evt.getURL();\n                 LaunchBrowser.showDocument(url);\n             }\n-        }\n-\t\tcatch (Exception e) {\n+        } catch (Exception e) {\n         }\n     }//GEN-LAST:event_editorPaneHyperlinkUpdate\n \n@@ -229,23 +231,23 @@ public class AboutDialog extends javax.swing.JDialog {\n     /**\n      * Closes the dialog\n      */\n-\tprivate void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n+    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n         closeDialog();\n     }//GEN-LAST:event_closeDialog\n \n     private void closeDialog() {\n         setVisible(false);\n         dispose();\n-\t}\n+    }\n \n     // Variables declaration - do not modify//GEN-BEGIN:variables\n     private javax.swing.JEditorPane aboutEditorPane;\n     private javax.swing.JScrollPane aboutScrollPane;\n-\tprivate javax.swing.JTabbedPane aboutTabPane;\n+    private javax.swing.JTabbedPane aboutTabPane;\n     private javax.swing.JEditorPane acknowldgementsEditorPane;\n     private javax.swing.JScrollPane acknowledgmentsScrollPane;\n     private javax.swing.JSeparator jSeparator1;\n-\tprivate javax.swing.JEditorPane licenseEditorPane;\n+    private javax.swing.JEditorPane licenseEditorPane;\n     private javax.swing.JScrollPane licenseScrollPane;\n     private javax.swing.JButton okButton;\n     // End of variables declaration//GEN-END:variables\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/40/AboutDialog.java\nindex a156f382d46..b1b2508e758 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/40/AboutDialog.java\n@@ -31,10 +31,8 @@ import java.io.InputStream;\n import java.net.URL;\n import java.text.MessageFormat;\n import java.util.regex.Pattern;\n-\n import javax.swing.JFrame;\n import javax.swing.event.HyperlinkEvent;\n-\n import edu.umd.cs.findbugs.L10N;\n import edu.umd.cs.findbugs.Version;\n import edu.umd.cs.findbugs.log.ConsoleLogger;\n@@ -47,7 +45,9 @@ import edu.umd.cs.findbugs.util.Util;\n  *\n  * @author David Hovemeyer\n  */\n-public class AboutDialog extends javax.swing.JDialog {\n+\n+public class AboutDialog extends\n+    javax.swing.JDialog {\n     private static final long serialVersionUID = 3546076956480385584L;\n \n     //private JFrame parent;\n@@ -55,31 +55,31 @@ public class AboutDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AboutDialog\n      */\n-\tpublic AboutDialog(JFrame parent, Logger l, boolean modal) {\n+\n+\n+    public AboutDialog(JFrame parent, Logger l, boolean modal) {\n         super(parent, modal);\n         //this.parent = parent;\n-\n         initComponents();\n-\n         try {\n             aboutEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/About.html\"));\n             licenseEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/License.html\"));\n-\t\t\tacknowldgementsEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/Acknowledgements.html\"));\n+            acknowldgementsEditorPane.setPage(getClass().getClassLoader().getResource(\"edu/umd/cs/findbugs/gui/help/Acknowledgements.html\"));\n         } catch (IOException e) {\n             l.logMessage(ConsoleLogger.ERROR, e.toString());\n         }\n-\n-        setTitle(MessageFormat.format(L10N.getLocalString(\"dlg.aboutfindbugs_ttl\", \"About FindBugs {0}\"), new Object[]{Version.RELEASE}));\n+        setTitle(MessageFormat.format(L10N.getLocalString(\"dlg.aboutfindbugs_ttl\", \"About FindBugs {0}\"), new Object[] { Version.RELEASE }));\n     }\n \n     static Pattern pattern = Pattern.compile(\"@VERSION@\");\n     /**\n      * Process an HTML page to replace certain substitution patterns.\n-\t * Right now, we just expand @VERSION@.\n+     * Right now, we just expand @VERSION@.\n      */\n+\n     @edu.umd.cs.findbugs.annotations.SuppressWarnings(\"OS_OPEN_STREAM\")\n     private void processPage(javax.swing.JEditorPane pane, String fileName) throws IOException {\n-\t\tInputStream in = null;\n+        InputStream in = null;\n         BufferedReader reader = null;\n         try {\n             StringBuilder buf = new StringBuilder();\n@@ -87,137 +87,123 @@ public class AboutDialog extends javax.swing.JDialog {\n             // Open the file as a stream\n             in = getClass().getClassLoader().getResourceAsStream(fileName);\n             if (in == null)\n-\t\t\t\tthrow new IOException(MessageFormat.format(L10N.getLocalString(\"msg.couldntload_txt\", \"Couldn't load {0}\"), new Object[]{fileName}));\n-             reader = new BufferedReader(Util.getReader(in));\n+                throw new IOException(MessageFormat.format(L10N.getLocalString(\"msg.couldntload_txt\", \"Couldn't load {0}\"), new Object[] { fileName }));\n+            reader = new BufferedReader(Util.getReader(in));\n \n             // Replace instances of @VERSION@ with actual version number\n-\n             String line;\n             while ((line = reader.readLine()) != null) {\n                 line = pattern.matcher(line).replaceAll(Version.RELEASE);\n-\t\t\t\tbuf.append(line);\n+                buf.append(line);\n                 buf.append('\\n');\n             }\n \n             // Load the page into the editor pane\n             String text = buf.toString();\n             pane.setContentType(\"text/html\");\n-\t\t\tpane.setText(text);\n+            pane.setText(text);\n         } finally {\n             try {\n                 if (reader != null)\n-\t\t\t\t\treader.close();\n+                    reader.close();\n                 else if (in != null)\n                     in.close();\n             } catch (IOException e) {\n-\t\t\t}\n+\n+            }\n         }\n     }\n \n     /**\n      * This method is called from within the constructor to\n      * initialize the form.\n-\t * WARNING: Do NOT modify this code. The content of this method is\n+     * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n-    private void initComponents() {//GEN-BEGIN:initComponents\n-\t\tjava.awt.GridBagConstraints gridBagConstraints;\n \n+\n+    private void initComponents() {//GEN-BEGIN:initComponents\n+        java.awt.GridBagConstraints gridBagConstraints;\n         aboutTabPane = new javax.swing.JTabbedPane();\n         aboutScrollPane = new javax.swing.JScrollPane();\n         aboutEditorPane = new javax.swing.JEditorPane();\n-\t\tlicenseScrollPane = new javax.swing.JScrollPane();\n+        licenseScrollPane = new javax.swing.JScrollPane();\n         licenseEditorPane = new javax.swing.JEditorPane();\n         acknowledgmentsScrollPane = new javax.swing.JScrollPane();\n         acknowldgementsEditorPane = new javax.swing.JEditorPane();\n-\t\tjSeparator1 = new javax.swing.JSeparator();\n+        jSeparator1 = new javax.swing.JSeparator();\n         okButton = new javax.swing.JButton();\n-\n         getContentPane().setLayout(new java.awt.GridBagLayout());\n-\n         addWindowListener(new java.awt.event.WindowAdapter() {\n             @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n-\t\t\t\tcloseDialog(evt);\n+                closeDialog(evt);\n             }\n         });\n-\n         aboutEditorPane.setEditable(false);\n         aboutEditorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {\n             public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {\n-\t\t\t\teditorPaneHyperlinkUpdate(evt);\n+                editorPaneHyperlinkUpdate(evt);\n             }\n         });\n-\n         aboutScrollPane.setViewportView(aboutEditorPane);\n-\n         aboutTabPane.addTab(\"About\", aboutScrollPane);\n-\n         licenseEditorPane.setEditable(false);\n         licenseEditorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {\n             public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {\n-\t\t\t\teditorPaneHyperlinkUpdate(evt);\n+                editorPaneHyperlinkUpdate(evt);\n             }\n         });\n-\n         licenseScrollPane.setViewportView(licenseEditorPane);\n-\n         aboutTabPane.addTab(\"License\", licenseScrollPane);\n-\n         acknowldgementsEditorPane.setEditable(false);\n         acknowldgementsEditorPane.addHyperlinkListener(new javax.swing.event.HyperlinkListener() {\n             public void hyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {\n-\t\t\t\teditorPaneHyperlinkUpdate(evt);\n+                editorPaneHyperlinkUpdate(evt);\n             }\n         });\n-\n         acknowledgmentsScrollPane.setViewportView(acknowldgementsEditorPane);\n-\n         aboutTabPane.addTab(\"Acknowledgments\", acknowledgmentsScrollPane);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.weightx = 1.0;\n-\t\tgridBagConstraints.weighty = 1.0;\n+        gridBagConstraints.weighty = 1.0;\n         getContentPane().add(aboutTabPane, gridBagConstraints);\n-\n         {\n             aboutTabPane.setTitleAt(0, L10N.getLocalString(\"dlg.about_tab\", \"About\"));\n             aboutTabPane.setTitleAt(1, L10N.getLocalString(\"dlg.license_tab\", \"License\"));\n-\t\t\taboutTabPane.setTitleAt(2, L10N.getLocalString(\"dlg.acknowledgements_tab\", \"Acknowledgements\"));\n+            aboutTabPane.setTitleAt(2, L10N.getLocalString(\"dlg.acknowledgements_tab\", \"Acknowledgements\"));\n         }\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n-\t\tgridBagConstraints.gridy = 1;\n+        gridBagConstraints.gridy = 1;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         getContentPane().add(jSeparator1, gridBagConstraints);\n-\n         okButton.setMnemonic('O');\n         okButton.setText(\"OK\");\n         okButton.setText(L10N.getLocalString(\"dlg.ok_btn\", \"OK\"));\n-\t\tokButton.addActionListener(new java.awt.event.ActionListener() {\n+        okButton.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 okButtonActionPerformed(evt);\n             }\n-\t\t});\n-\n+        });\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 2;\n-\t\tgridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n+        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         getContentPane().add(okButton, gridBagConstraints);\n-\n         pack();\n     }//GEN-END:initComponents\n \n+\n     private void editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent evt) {//GEN-FIRST:event_editorPaneHyperlinkUpdate\n         try {\n-            if (evt.getEventType().equals( HyperlinkEvent.EventType.ACTIVATED)) {\n-\t\t\t\tURL url = evt.getURL();\n+            if (evt.getEventType().equals(HyperlinkEvent.EventType.ACTIVATED)) {\n+                URL url = evt.getURL();\n                 LaunchBrowser.showDocument(url);\n             }\n-        }\n-\t\tcatch (Exception e) {\n+        } catch (Exception e) {\n+\n         }\n     }//GEN-LAST:event_editorPaneHyperlinkUpdate\n \n@@ -229,27 +215,37 @@ public class AboutDialog extends javax.swing.JDialog {\n     /**\n      * Closes the dialog\n      */\n-\tprivate void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n+\n+\n+    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog\n         closeDialog();\n     }//GEN-LAST:event_closeDialog\n \n+\n     private void closeDialog() {\n         setVisible(false);\n         dispose();\n-\t}\n+    }\n \n     // Variables declaration - do not modify//GEN-BEGIN:variables\n+\n+\n     private javax.swing.JEditorPane aboutEditorPane;\n+\n     private javax.swing.JScrollPane aboutScrollPane;\n-\tprivate javax.swing.JTabbedPane aboutTabPane;\n+\n+    private javax.swing.JTabbedPane aboutTabPane;\n+\n     private javax.swing.JEditorPane acknowldgementsEditorPane;\n+\n     private javax.swing.JScrollPane acknowledgmentsScrollPane;\n+\n     private javax.swing.JSeparator jSeparator1;\n-\tprivate javax.swing.JEditorPane licenseEditorPane;\n+\n+    private javax.swing.JEditorPane licenseEditorPane;\n+\n     private javax.swing.JScrollPane licenseScrollPane;\n+\n     private javax.swing.JButton okButton;\n     // End of variables declaration//GEN-END:variables\n-\n-}\n-\n-// vim:ts=4\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/40/AboutDialog.java\nindex a156f382d46..30043805f9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/40/AboutDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/40/AboutDialog.java\n@@ -55,7 +55,7 @@ public class AboutDialog extends javax.swing.JDialog {\n     /**\n      * Creates new form AboutDialog\n      */\n-\tpublic AboutDialog(JFrame parent, Logger l, boolean modal) {\n+public AboutDialog(JFrame parent, Logger l, boolean modal) {\n         super(parent, modal);\n         //this.parent = parent;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
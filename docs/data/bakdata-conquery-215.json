{
    "project_name": "bakdata-conquery",
    "error_id": "215",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t}\n\t\t\treturn idParser.parse(key);\n\t\t} catch(Exception e) {\n\t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/215/IdKeyDeserializer.java\nindex 0b0e506cbbc..f44b02aff28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/215/IdKeyDeserializer.java\n@@ -31,7 +31,8 @@ public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implem\n \t\t\t\treturn idParser.parsePrefixed(dataset.getName(), key);\n \t\t\t}\n \t\t\treturn idParser.parse(key);\n-\t\t} catch(Exception e) {\n+\t\t}\n+\t\tcatch(Exception e) {\n \t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n \t\t}\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/215/IdKeyDeserializer.java\nindex 0b0e506cbbc..7061014853b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/215/IdKeyDeserializer.java\n@@ -16,39 +16,40 @@ import com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer;\n import lombok.AllArgsConstructor;\n import lombok.NoArgsConstructor;\n \n-@AllArgsConstructor @NoArgsConstructor\n+@AllArgsConstructor\n+@NoArgsConstructor\n public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implements ContextualKeyDeserializer {\n \n-\tprivate Class<ID> idClass;\n-\tprivate Parser<ID> idParser;\n-\t\n-\t@Override\n-\tpublic ID deserializeKey(String key, DeserializationContext ctxt) throws IOException {\n-\t\ttry {\n-\t\t\t//check if there was a dataset injected and if it is already a prefix\n-\t\t\tDataset dataset = (Dataset) ctxt.findInjectableValue(Dataset.class.getName(), null, null);\n-\t\t\tif(dataset != null) {\n-\t\t\t\treturn idParser.parsePrefixed(dataset.getName(), key);\n-\t\t\t}\n-\t\t\treturn idParser.parse(key);\n-\t\t} catch(Exception e) {\n-\t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n-\t\t}\n-\t}\n-\n-\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n-\t@Override\n-\tpublic KeyDeserializer createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException {\n-\t\tJavaType type = Optional\n-\t\t\t\t.ofNullable(ctxt.getContextualType())\n-\t\t\t\t.orElseGet(Optional.ofNullable(property).map(BeanProperty::getType)::get);\n-\n-\t\t//since this a key serializer property should point to a map\n-\t\ttype = type.getKeyType();\n-\t\t\n-\t\tClass<IId<?>> idClass = (Class<IId<?>>) type.getRawClass();\n-\t\tParser<IId<Identifiable<?>>> parser = IId.<IId<Identifiable<?>>>createParser((Class)idClass);\n-\t\t\n-\t\treturn new IdKeyDeserializer(idClass, parser);\n-\t}\n+    private Class<ID> idClass;\n+    private Parser<ID> idParser;\n+\n+    @Override\n+    public ID deserializeKey(String key, DeserializationContext ctxt) throws IOException {\n+        try {\n+            //check if there was a dataset injected and if it is already a prefix\n+            Dataset dataset = (Dataset) ctxt.findInjectableValue(Dataset.class.getName(), null, null);\n+            if (dataset != null) {\n+                return idParser.parsePrefixed(dataset.getName(), key);\n+            }\n+            return idParser.parse(key);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(\"Could not parse an \" + idClass.getSimpleName() + \" from \" + key, e);\n+        }\n+    }\n+\n+    @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n+    @Override\n+    public KeyDeserializer createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException {\n+        JavaType type = Optional\n+            .ofNullable(ctxt.getContextualType())\n+            .orElseGet(Optional.ofNullable(property).map(BeanProperty::getType)::get);\n+\n+        //since this a key serializer property should point to a map\n+        type = type.getKeyType();\n+\n+        Class<IId<?>> idClass = (Class<IId<?>>) type.getRawClass();\n+        Parser<IId<Identifiable<?>>> parser = IId.<IId<Identifiable<?>>>createParser((Class) idClass);\n+\n+        return new IdKeyDeserializer(idClass, parser);\n+    }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/215/IdKeyDeserializer.java\nindex 0b0e506cbbc..27ae095c7c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/215/IdKeyDeserializer.java\n@@ -31,7 +31,8 @@ public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implem\n \t\t\t\treturn idParser.parsePrefixed(dataset.getName(), key);\n \t\t\t}\n \t\t\treturn idParser.parse(key);\n-\t\t} catch(Exception e) {\n+\t\t}\n+catch(Exception e) {\n \t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n \t\t}\n \t}\n@@ -42,8 +43,7 @@ public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implem\n \t\tJavaType type = Optional\n \t\t\t\t.ofNullable(ctxt.getContextualType())\n \t\t\t\t.orElseGet(Optional.ofNullable(property).map(BeanProperty::getType)::get);\n-\n-\t\t//since this a key serializer property should point to a map\n+//since this a key serializer property should point to a map\n \t\ttype = type.getKeyType();\n \t\t\n \t\tClass<IId<?>> idClass = (Class<IId<?>>) type.getRawClass();\n@@ -51,4 +51,4 @@ public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implem\n \t\t\n \t\treturn new IdKeyDeserializer(idClass, parser);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/215/IdKeyDeserializer.java\nindex 0b0e506cbbc..48bf7a9a8d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/215/IdKeyDeserializer.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.io.jackson.serializer;\n \n import java.io.IOException;\n import java.util.Optional;\n-\n import com.bakdata.conquery.models.datasets.Dataset;\n import com.bakdata.conquery.models.identifiable.Identifiable;\n import com.bakdata.conquery.models.identifiable.ids.IId;\n@@ -19,36 +18,33 @@ import lombok.NoArgsConstructor;\n @AllArgsConstructor @NoArgsConstructor\n public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implements ContextualKeyDeserializer {\n \n-\tprivate Class<ID> idClass;\n-\tprivate Parser<ID> idParser;\n-\t\n-\t@Override\n-\tpublic ID deserializeKey(String key, DeserializationContext ctxt) throws IOException {\n-\t\ttry {\n-\t\t\t//check if there was a dataset injected and if it is already a prefix\n-\t\t\tDataset dataset = (Dataset) ctxt.findInjectableValue(Dataset.class.getName(), null, null);\n-\t\t\tif(dataset != null) {\n-\t\t\t\treturn idParser.parsePrefixed(dataset.getName(), key);\n-\t\t\t}\n-\t\t\treturn idParser.parse(key);\n-\t\t} catch(Exception e) {\n-\t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n-\t\t}\n-\t}\n+ private Class<ID> idClass;\n+ private Parser<ID> idParser;\n+\n+ @Override\n+ public ID deserializeKey(String key, DeserializationContext ctxt) throws IOException {\n+  try {\n+   //check if there was a dataset injected and if it is already a prefix\n+   Dataset dataset = (Dataset)ctxt.findInjectableValue(Dataset.class.getName(), null, null);\n+   if (dataset != null) {\n+    return idParser.parsePrefixed(dataset.getName(), key);\n+   }\n+   return idParser.parse(key);\n+  }\n+  catch (Exception e) {\n+   throw new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n+  }\n+ }\n \n-\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n-\t@Override\n-\tpublic KeyDeserializer createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException {\n-\t\tJavaType type = Optional\n-\t\t\t\t.ofNullable(ctxt.getContextualType())\n-\t\t\t\t.orElseGet(Optional.ofNullable(property).map(BeanProperty::getType)::get);\n+ @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+ @Override\n+ public KeyDeserializer createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException {\n+  JavaType type = Optional.ofNullable(ctxt.getContextualType()).orElseGet(Optional.ofNullable(property).map(BeanProperty::getType)::get);\n \n-\t\t//since this a key serializer property should point to a map\n-\t\ttype = type.getKeyType();\n-\t\t\n-\t\tClass<IId<?>> idClass = (Class<IId<?>>) type.getRawClass();\n-\t\tParser<IId<Identifiable<?>>> parser = IId.<IId<Identifiable<?>>>createParser((Class)idClass);\n-\t\t\n-\t\treturn new IdKeyDeserializer(idClass, parser);\n-\t}\n-}\n+  //since this a key serializer property should point to a map\n+  type = type.getKeyType();\n+  Class<IId<?>> idClass = (Class<IId<?>>)type.getRawClass();\n+  Parser<IId<Identifiable<?>>> parser = IId.<IId<Identifiable<?>>>createParser((Class)idClass);\n+  return new IdKeyDeserializer(idClass, parser);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/215/IdKeyDeserializer.java\nindex 0b0e506cbbc..f44b02aff28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/215/IdKeyDeserializer.java\n@@ -31,7 +31,8 @@ public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implem\n \t\t\t\treturn idParser.parsePrefixed(dataset.getName(), key);\n \t\t\t}\n \t\t\treturn idParser.parse(key);\n-\t\t} catch(Exception e) {\n+\t\t}\n+\t\tcatch(Exception e) {\n \t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n \t\t}\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/215/IdKeyDeserializer.java\nindex 0b0e506cbbc..f44b02aff28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/215/IdKeyDeserializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/215/IdKeyDeserializer.java\n@@ -31,7 +31,8 @@ public class IdKeyDeserializer<ID extends IId<?>> extends KeyDeserializer implem\n \t\t\t\treturn idParser.parsePrefixed(dataset.getName(), key);\n \t\t\t}\n \t\t\treturn idParser.parse(key);\n-\t\t} catch(Exception e) {\n+\t\t}\n+\t\tcatch(Exception e) {\n \t\t\tthrow new IllegalArgumentException(\"Could not parse an \"+idClass.getSimpleName()+\" from \"+key, e);\n \t\t}\n \t}\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
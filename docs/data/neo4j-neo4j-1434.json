{
    "project_name": "neo4j-neo4j",
    "error_id": "1434",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1434/TransitionalTxManagementKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1434/TransitionalTxManagementKernelTransaction.java\nindex d9e06b8a259..39cf04acf1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1434/TransitionalTxManagementKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1434/TransitionalTxManagementKernelTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher;\n \n import java.util.concurrent.TimeUnit;\n@@ -38,8 +39,8 @@ public class TransitionalTxManagementKernelTransaction\n \n     private InternalTransaction tx;\n \n-    TransitionalTxManagementKernelTransaction( GraphDatabaseAPI db, KernelTransaction.Type type, LoginContext loginContext,\n-            ClientConnectionInfo connectionInfo, long customTransactionTimeout )\n+    TransitionalTxManagementKernelTransaction(GraphDatabaseAPI db, KernelTransaction.Type type, LoginContext loginContext,\n+                                              ClientConnectionInfo connectionInfo, long customTransactionTimeout)\n     {\n         this.db = db;\n         this.type = type;\n@@ -81,7 +82,7 @@ public class TransitionalTxManagementKernelTransaction\n \n     private InternalTransaction startTransaction()\n     {\n-        return customTransactionTimeout > GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ? db.beginTransaction( type, loginContext, connectionInfo,\n-                customTransactionTimeout, TimeUnit.MILLISECONDS ) : db.beginTransaction( type, loginContext, connectionInfo );\n+        return customTransactionTimeout > GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ? db.beginTransaction(type, loginContext, connectionInfo,\n+          customTransactionTimeout, TimeUnit.MILLISECONDS) : db.beginTransaction(type, loginContext, connectionInfo);\n     }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1434/TransitionalTxManagementKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1434/TransitionalTxManagementKernelTransaction.java\nindex d9e06b8a259..b7979f6a097 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1434/TransitionalTxManagementKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1434/TransitionalTxManagementKernelTransaction.java\n@@ -84,4 +84,4 @@ public class TransitionalTxManagementKernelTransaction\n         return customTransactionTimeout > GraphDatabaseSettings.UNSPECIFIED_TIMEOUT ? db.beginTransaction( type, loginContext, connectionInfo,\n                 customTransactionTimeout, TimeUnit.MILLISECONDS ) : db.beginTransaction( type, loginContext, connectionInfo );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
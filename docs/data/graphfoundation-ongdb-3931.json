{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3931",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3931/Layout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3931/Layout.java\nindex aae740ec50f..4cea73aea00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3931/Layout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3931/Layout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.Comparator;\n@@ -33,186 +34,190 @@ import static java.lang.String.format;\n  * <p>\n  * Rather extend {@link Adapter} as to get standard implementation of e.g. {@link Adapter#toString()}.\n  *\n- * @param <KEY> type of key\n+ * @param <KEY>   type of key\n  * @param <VALUE> type of value\n  */\n public interface Layout<KEY, VALUE> extends Comparator<KEY>\n {\n-    int FIXED_SIZE_KEY = -1;\n-    int FIXED_SIZE_VALUE = -1;\n-\n-    /**\n-     * @return new key instance.\n-     */\n-    KEY newKey();\n-\n-    /**\n-     * Copies contents of {@code key} to {@code into}.\n-     *\n-     * @param key key (left unchanged as part of this call) to copy contents from.\n-     * @param into key (changed as part of this call) to copy contents into.\n-     * @return the provided {@code into} instance for convenience.\n-     */\n-    KEY copyKey( KEY key, KEY into );\n-\n-    /**\n-     * @return new value instance.\n-     */\n-    VALUE newValue();\n-\n-    /**\n-     * @param key for which to give size.\n-     * @return size, in bytes, of given key.\n-     */\n-    int keySize( KEY key );\n-\n-    /**\n-     * @param value for which to give size.\n-     * @return size, in bytes, of given value.\n-     */\n-    int valueSize( VALUE value );\n-\n-    /**\n-     * Writes contents of {@code key} into {@code cursor} at its current offset.\n-     *\n-     * @param cursor {@link PageCursor} to write into, at current offset.\n-     * @param key key containing data to write.\n-     */\n-    void writeKey( PageCursor cursor, KEY key );\n-\n-    /**\n-     * Writes contents of {@code value} into {@code cursor} at its current offset.\n-     *\n-     * @param cursor {@link PageCursor} to write into, at current offset.\n-     * @param value value containing data to write.\n-     */\n-    void writeValue( PageCursor cursor, VALUE value );\n-\n-    /**\n-     * Reads key contents at {@code cursor} at its current offset into {@code key}.\n-     * @param cursor {@link PageCursor} to read from, at current offset.\n-     * @param into key instances to read into.\n-     * @param keySize size of key to read or {@link #FIXED_SIZE_KEY} if key is fixed size.\n-     */\n-    void readKey( PageCursor cursor, KEY into, int keySize );\n-\n-    /**\n-     * Reads value contents at {@code cursor} at its current offset into {@code value}.\n-     * @param cursor {@link PageCursor} to read from, at current offset.\n-     * @param into value instances to read into.\n-     * @param valueSize size of key to read or {@link #FIXED_SIZE_VALUE} if value is fixed size.\n-     */\n-    void readValue( PageCursor cursor, VALUE into, int valueSize );\n-\n-    /**\n-     * Indicate if keys and values are fixed or dynamix size.\n-     * @return true if keys and values are fixed size, otherwise true.\n-     */\n-    boolean fixedSize();\n-    /**\n-     * Used as verification when loading an index after creation, to verify that the same layout is used,\n-     * as the one it was initially created with.\n-     *\n-     * @return a long acting as an identifier, written in the header of an index.\n-     */\n-    long identifier();\n-\n-    /**\n-     * @return major version of layout. Will be compared to version written into meta page when opening index.\n-     */\n-    int majorVersion();\n-\n-    /**\n-     * @return minor version of layout. Will be compared to version written into meta page when opening index.\n-     */\n-    int minorVersion();\n-\n-    /**\n-     * Writes meta data specific to this layout instance to {@code cursor} at its current offset.\n-     *\n-     * @param cursor {@link PageCursor} to write into, at its current offset.\n-     */\n-    default void writeMetaData( PageCursor cursor )\n-    {   // no meta-data by default\n+  int FIXED_SIZE_KEY = -1;\n+  int FIXED_SIZE_VALUE = -1;\n+\n+  /**\n+   * @return new key instance.\n+   */\n+  KEY newKey();\n+\n+  /**\n+   * Copies contents of {@code key} to {@code into}.\n+   *\n+   * @param key  key (left unchanged as part of this call) to copy contents from.\n+   * @param into key (changed as part of this call) to copy contents into.\n+   * @return the provided {@code into} instance for convenience.\n+   */\n+  KEY copyKey(KEY key, KEY into);\n+\n+  /**\n+   * @return new value instance.\n+   */\n+  VALUE newValue();\n+\n+  /**\n+   * @param key for which to give size.\n+   * @return size, in bytes, of given key.\n+   */\n+  int keySize(KEY key);\n+\n+  /**\n+   * @param value for which to give size.\n+   * @return size, in bytes, of given value.\n+   */\n+  int valueSize(VALUE value);\n+\n+  /**\n+   * Writes contents of {@code key} into {@code cursor} at its current offset.\n+   *\n+   * @param cursor {@link PageCursor} to write into, at current offset.\n+   * @param key    key containing data to write.\n+   */\n+  void writeKey(PageCursor cursor, KEY key);\n+\n+  /**\n+   * Writes contents of {@code value} into {@code cursor} at its current offset.\n+   *\n+   * @param cursor {@link PageCursor} to write into, at current offset.\n+   * @param value  value containing data to write.\n+   */\n+  void writeValue(PageCursor cursor, VALUE value);\n+\n+  /**\n+   * Reads key contents at {@code cursor} at its current offset into {@code key}.\n+   *\n+   * @param cursor  {@link PageCursor} to read from, at current offset.\n+   * @param into    key instances to read into.\n+   * @param keySize size of key to read or {@link #FIXED_SIZE_KEY} if key is fixed size.\n+   */\n+  void readKey(PageCursor cursor, KEY into, int keySize);\n+\n+  /**\n+   * Reads value contents at {@code cursor} at its current offset into {@code value}.\n+   *\n+   * @param cursor    {@link PageCursor} to read from, at current offset.\n+   * @param into      value instances to read into.\n+   * @param valueSize size of key to read or {@link #FIXED_SIZE_VALUE} if value is fixed size.\n+   */\n+  void readValue(PageCursor cursor, VALUE into, int valueSize);\n+\n+  /**\n+   * Indicate if keys and values are fixed or dynamix size.\n+   *\n+   * @return true if keys and values are fixed size, otherwise true.\n+   */\n+  boolean fixedSize();\n+\n+  /**\n+   * Used as verification when loading an index after creation, to verify that the same layout is used,\n+   * as the one it was initially created with.\n+   *\n+   * @return a long acting as an identifier, written in the header of an index.\n+   */\n+  long identifier();\n+\n+  /**\n+   * @return major version of layout. Will be compared to version written into meta page when opening index.\n+   */\n+  int majorVersion();\n+\n+  /**\n+   * @return minor version of layout. Will be compared to version written into meta page when opening index.\n+   */\n+  int minorVersion();\n+\n+  /**\n+   * Writes meta data specific to this layout instance to {@code cursor} at its current offset.\n+   *\n+   * @param cursor {@link PageCursor} to write into, at its current offset.\n+   */\n+  default void writeMetaData(PageCursor cursor)\n+  {   // no meta-data by default\n+  }\n+\n+  /**\n+   * Reads meta data specific to this layout instance from {@code cursor} at its current offset.\n+   * The read meta data must also be verified against meta data provided in constructor of this Layout.\n+   * Constructor-provided meta data can be {@code null} to skip this verification.\n+   * if read meta data doesn't match with the meta data provided in constructor\n+   * {@link PageCursor#setCursorException(String)} should be called with appropriate error message.\n+   *\n+   * @param cursor {@link PageCursor} to read from, at its current offset.\n+   */\n+  default void readMetaData(PageCursor cursor)\n+  {   // no meta-data by default\n+  }\n+\n+  /**\n+   * Utility method for generating an {@link #identifier()}. Generates an 8-byte identifier from a short name\n+   * plus a 4-byte identifier.\n+   *\n+   * @param name       name to be part of this identifier, must at most be 4 characters.\n+   * @param identifier to include into the returned named identifier.\n+   * @return a long which is a combination of {@code name} and {@code identifier}.\n+   */\n+  static long namedIdentifier(String name, int identifier)\n+  {\n+    char[] chars = name.toCharArray();\n+    if (chars.length > 4)\n+    {\n+      throw new IllegalArgumentException(\"Maximum 4 character name, was '\" + name + \"'\");\n     }\n-\n-    /**\n-     * Reads meta data specific to this layout instance from {@code cursor} at its current offset.\n-     * The read meta data must also be verified against meta data provided in constructor of this Layout.\n-     * Constructor-provided meta data can be {@code null} to skip this verification.\n-     * if read meta data doesn't match with the meta data provided in constructor\n-     * {@link PageCursor#setCursorException(String)} should be called with appropriate error message.\n-     *\n-     * @param cursor {@link PageCursor} to read from, at its current offset.\n-     */\n-    default void readMetaData( PageCursor cursor )\n-    {   // no meta-data by default\n+    long upperInt = 0;\n+    for (char aChar : chars)\n+    {\n+      byte byteValue = (byte) (((byte) aChar) ^ ((byte) (aChar >> 8)));\n+      upperInt <<= 8;\n+      upperInt |= byteValue & 0xFF;\n     }\n \n-    /**\n-     * Utility method for generating an {@link #identifier()}. Generates an 8-byte identifier from a short name\n-     * plus a 4-byte identifier.\n-     *\n-     * @param name name to be part of this identifier, must at most be 4 characters.\n-     * @param identifier to include into the returned named identifier.\n-     * @return a long which is a combination of {@code name} and {@code identifier}.\n-     */\n-    static long namedIdentifier( String name, int identifier )\n+    return (upperInt << Integer.SIZE) | identifier;\n+  }\n+\n+  /**\n+   * Typically, a layout is compatible with given identifier, major and minor version if\n+   * <ul>\n+   * <li>{@code layoutIdentifier == this.identifier()}</li>\n+   * <li>{@code majorVersion == this.majorVersion()}</li>\n+   * <li>{@code minorVersion == this.minorVersion()}</li>\n+   * </ul>\n+   * <p>\n+   * When opening a {@link GBPTree tree} to 'use' it, read and write to it, providing a layout with the right compatibility is\n+   * important because it decides how to read and write entries in the tree.\n+   *\n+   * @param layoutIdentifier the stored layout identifier we want to check compatibility against.\n+   * @param majorVersion     the stored major version we want to check compatibility against.\n+   * @param minorVersion     the stored minor version we want to check compatibility against.\n+   * @return true if this layout is compatible with combination of identifier, major and minor version, false otherwise.\n+   */\n+  boolean compatibleWith(long layoutIdentifier, int majorVersion, int minorVersion);\n+\n+  /**\n+   * Adapter for {@link Layout}, which contains convenient standard implementations of some methods.\n+   *\n+   * @param <KEY>   type of key\n+   * @param <VALUE> type of value\n+   */\n+  abstract class Adapter<KEY, VALUE> implements Layout<KEY, VALUE>\n+  {\n+    @Override\n+    public String toString()\n     {\n-        char[] chars = name.toCharArray();\n-        if ( chars.length > 4 )\n-        {\n-            throw new IllegalArgumentException( \"Maximum 4 character name, was '\" + name + \"'\" );\n-        }\n-        long upperInt = 0;\n-        for ( char aChar : chars )\n-        {\n-            byte byteValue = (byte) (((byte) aChar) ^ ((byte) (aChar >> 8)));\n-            upperInt <<= 8;\n-            upperInt |= byteValue & 0xFF;\n-        }\n-\n-        return (upperInt << Integer.SIZE) | identifier;\n+      return format(\"%s[version:%d.%d, identifier:%d, keySize:%d, valueSize:%d, fixedSize:%b]\",\n+          getClass().getSimpleName(), majorVersion(), minorVersion(), identifier(),\n+          keySize(null), valueSize(null), fixedSize());\n     }\n \n-    /**\n-     * Typically, a layout is compatible with given identifier, major and minor version if\n-     * <ul>\n-     * <li>{@code layoutIdentifier == this.identifier()}</li>\n-     * <li>{@code majorVersion == this.majorVersion()}</li>\n-     * <li>{@code minorVersion == this.minorVersion()}</li>\n-     * </ul>\n-     * <p>\n-     * When opening a {@link GBPTree tree} to 'use' it, read and write to it, providing a layout with the right compatibility is\n-     * important because it decides how to read and write entries in the tree.\n-     *\n-     * @param layoutIdentifier the stored layout identifier we want to check compatibility against.\n-     * @param majorVersion the stored major version we want to check compatibility against.\n-     * @param minorVersion the stored minor version we want to check compatibility against.\n-     * @return true if this layout is compatible with combination of identifier, major and minor version, false otherwise.\n-     */\n-    boolean compatibleWith( long layoutIdentifier, int majorVersion, int minorVersion );\n-\n-    /**\n-     * Adapter for {@link Layout}, which contains convenient standard implementations of some methods.\n-     *\n-     * @param <KEY> type of key\n-     * @param <VALUE> type of value\n-     */\n-    abstract class Adapter<KEY, VALUE> implements Layout<KEY,VALUE>\n+    @Override\n+    public boolean compatibleWith(long layoutIdentifier, int majorVersion, int minorVersion)\n     {\n-        @Override\n-        public String toString()\n-        {\n-            return format( \"%s[version:%d.%d, identifier:%d, keySize:%d, valueSize:%d, fixedSize:%b]\",\n-                    getClass().getSimpleName(), majorVersion(), minorVersion(), identifier(),\n-                    keySize( null ), valueSize( null ), fixedSize() );\n-        }\n-\n-        @Override\n-        public boolean compatibleWith( long layoutIdentifier, int majorVersion, int minorVersion )\n-        {\n-            return layoutIdentifier == identifier() && majorVersion == majorVersion() && minorVersion == minorVersion();\n-        }\n+      return layoutIdentifier == identifier() && majorVersion == majorVersion() && minorVersion == minorVersion();\n     }\n+  }\n }\n",
            "diff_size": 227
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "166",
                    "column": "26",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3931/Layout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3931/Layout.java\nindex aae740ec50f..1ffc5100042 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3931/Layout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3931/Layout.java\n@@ -36,7 +36,7 @@ import static java.lang.String.format;\n  * @param <KEY> type of key\n  * @param <VALUE> type of value\n  */\n-public interface Layout<KEY, VALUE> extends Comparator<KEY>\n+public interface Layout<KEY,VALUE> extends Comparator<KEY>\n {\n     int FIXED_SIZE_KEY = -1;\n     int FIXED_SIZE_VALUE = -1;\n@@ -109,7 +109,8 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * @return true if keys and values are fixed size, otherwise true.\n      */\n     boolean fixedSize();\n-    /**\n+\n+/**\n      * Used as verification when loading an index after creation, to verify that the same layout is used,\n      * as the one it was initially created with.\n      *\n@@ -133,7 +134,8 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * @param cursor {@link PageCursor} to write into, at its current offset.\n      */\n     default void writeMetaData( PageCursor cursor )\n-    {   // no meta-data by default\n+    {\n+    // no meta-data by default\n     }\n \n     /**\n@@ -146,7 +148,8 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * @param cursor {@link PageCursor} to read from, at its current offset.\n      */\n     default void readMetaData( PageCursor cursor )\n-    {   // no meta-data by default\n+    {\n+    // no meta-data by default\n     }\n \n     /**\n@@ -160,19 +163,19 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n     static long namedIdentifier( String name, int identifier )\n     {\n         char[] chars = name.toCharArray();\n-        if ( chars.length > 4 )\n+        if ( chars.length> 4 )\n         {\n             throw new IllegalArgumentException( \"Maximum 4 character name, was '\" + name + \"'\" );\n         }\n         long upperInt = 0;\n         for ( char aChar : chars )\n         {\n-            byte byteValue = (byte) (((byte) aChar) ^ ((byte) (aChar >> 8)));\n+            byte byteValue = (byte) (((byte) aChar) ^ ((byte) ( aChar >> 8 ) ));\n             upperInt <<= 8;\n             upperInt |= byteValue & 0xFF;\n         }\n \n-        return (upperInt << Integer.SIZE) | identifier;\n+        return ( upperInt << Integer.SIZE) | identifier;\n     }\n \n     /**\n@@ -199,7 +202,7 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n      * @param <KEY> type of key\n      * @param <VALUE> type of value\n      */\n-    abstract class Adapter<KEY, VALUE> implements Layout<KEY,VALUE>\n+    abstract class Adapter<KEY,VALUE> implements Layout<KEY,VALUE>\n     {\n         @Override\n         public String toString()\n@@ -215,4 +218,4 @@ public interface Layout<KEY, VALUE> extends Comparator<KEY>\n             return layoutIdentifier == identifier() && majorVersion == majorVersion() && minorVersion == minorVersion();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
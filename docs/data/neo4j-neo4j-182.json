{
    "project_name": "neo4j-neo4j",
    "error_id": "182",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/182/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/182/Transaction.java\nindex f0509819729..4c5edae3305 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/182/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/182/Transaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n import java.util.Map;\n@@ -93,7 +94,7 @@ public interface Transaction extends AutoCloseable\n      * @param labels {@link Label labels} to add to the created node.\n      * @return the created node.\n      */\n-    Node createNode( Label... labels );\n+    Node createNode(Label... labels);\n \n     /**\n      * Looks up a node by id. Please note: Neo4j reuses its internal ids when\n@@ -104,7 +105,7 @@ public interface Transaction extends AutoCloseable\n      * @return the node with id <code>id</code> if found\n      * @throws NotFoundException if not found\n      */\n-    Node getNodeById( long id );\n+    Node getNodeById(long id);\n \n     /**\n      * Looks up a relationship by id. Please note: Neo4j reuses its internal ids\n@@ -115,7 +116,7 @@ public interface Transaction extends AutoCloseable\n      * @return the relationship with id <code>id</code> if found\n      * @throws NotFoundException if not found\n      */\n-    Relationship getRelationshipById( long id );\n+    Relationship getRelationshipById(long id);\n \n     /**\n      * Factory method for bidirectional traversal descriptions.\n@@ -129,22 +130,22 @@ public interface Transaction extends AutoCloseable\n     /**\n      * Factory method for unidirectional traversal descriptions.\n      *\n-     * @deprecated Not part of public API, can be removed at any moment\n      * @return a new {@link TraversalDescription}\n+     * @deprecated Not part of public API, can be removed at any moment\n      */\n     @Deprecated\n     TraversalDescription traversalDescription();\n \n     /**\n      * Executes a query and returns an iterable that contains the result set.\n-     *\n+     * <p>\n      * This method is the same as {@link #execute(String, java.util.Map)} with an empty parameters-map.\n      *\n      * @param query The query to execute\n      * @return A {@link org.neo4j.graphdb.Result} that contains the result set.\n      * @throws QueryExecutionException If the Query contains errors\n      */\n-    Result execute( String query ) throws QueryExecutionException;\n+    Result execute(String query) throws QueryExecutionException;\n \n     /**\n      * Executes a query and returns an iterable that contains the result set.\n@@ -154,12 +155,12 @@ public interface Transaction extends AutoCloseable\n      * @return A {@link org.neo4j.graphdb.Result} that contains the result set\n      * @throws QueryExecutionException If the Query contains errors\n      */\n-    Result execute( String query, Map<String,Object> parameters ) throws QueryExecutionException;\n+    Result execute(String query, Map<String, Object> parameters) throws QueryExecutionException;\n \n     /**\n      * Returns all labels currently in the underlying store. Labels are added to the store the first time\n      * they are used. This method guarantees that it will return all labels currently in use.\n-     *\n+     * <p>\n      * Please take care that the returned {@link ResourceIterable} is closed correctly and as soon as possible\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n@@ -182,7 +183,7 @@ public interface Transaction extends AutoCloseable\n      * Returns all labels currently in the underlying store. Labels are added to the store the first time\n      * they are used. This method guarantees that it will return all labels currently in use. However,\n      * it may also return <i>more</i> than that (e.g. it can return \"historic\" labels that are no longer used).\n-     *\n+     * <p>\n      * Please take care that the returned {@link ResourceIterable} is closed correctly and as soon as possible\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n@@ -208,7 +209,7 @@ public interface Transaction extends AutoCloseable\n      * Returns all property keys currently in the underlying store. This method guarantees that it will return all\n      * property keys currently in use. However, it may also return <i>more</i> than that (e.g. it can return \"historic\"\n      * labels that are no longer used).\n-     *\n+     * <p>\n      * Please take care that the returned {@link ResourceIterable} is closed correctly and as soon as possible\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n@@ -243,7 +244,7 @@ public interface Transaction extends AutoCloseable\n      * @param searchMode required property value template\n      * @return an iterator containing all matching nodes. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Node> findNodes( Label label, String key, String template, StringSearchMode searchMode );\n+    ResourceIterator<Node> findNodes(Label label, String key, String template, StringSearchMode searchMode);\n \n     /**\n      * Returns all nodes having the label, and the wanted property values.\n@@ -267,7 +268,7 @@ public interface Transaction extends AutoCloseable\n      * @param propertyValues required property key-value combinations\n      * @return an iterator containing all matching nodes. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Node> findNodes( Label label, Map<String, Object> propertyValues );\n+    ResourceIterator<Node> findNodes(Label label, Map<String, Object> propertyValues);\n \n     /**\n      * Returns all nodes having the label, and the wanted property values.\n@@ -296,7 +297,7 @@ public interface Transaction extends AutoCloseable\n      * @param value3 required property value of key3\n      * @return an iterator containing all matching nodes. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2, String key3, Object value3 );\n+    ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2, String key3, Object value3);\n \n     /**\n      * Returns all nodes having the label, and the wanted property values.\n@@ -323,7 +324,7 @@ public interface Transaction extends AutoCloseable\n      * @param value2 required property value of key2\n      * @return an iterator containing all matching nodes. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2 );\n+    ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2);\n \n     /**\n      * Equivalent to {@link #findNodes(Label, String, Object)}, however it must find no more than one\n@@ -335,7 +336,7 @@ public interface Transaction extends AutoCloseable\n      * @return the matching node or <code>null</code> if none could be found\n      * @throws MultipleFoundException if more than one matching {@link Node node} is found\n      */\n-    Node findNode( Label label, String key, Object value );\n+    Node findNode(Label label, String key, Object value);\n \n     /**\n      * Returns all nodes having the label, and the wanted property value.\n@@ -360,30 +361,30 @@ public interface Transaction extends AutoCloseable\n      * @param value required property value\n      * @return an iterator containing all matching nodes. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Node> findNodes( Label label, String key, Object value );\n+    ResourceIterator<Node> findNodes(Label label, String key, Object value);\n \n     /**\n      * Returns all {@link Node nodes} with a specific {@link Label label}.\n-     *\n+     * <p>\n      * Please take care that the returned {@link ResourceIterator} is closed correctly and as soon as possible\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n      * @param label the {@link Label} to return nodes for.\n      * @return an iterator containing all nodes matching the label. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Node> findNodes( Label label );\n+    ResourceIterator<Node> findNodes(Label label);\n \n     /**\n      * Equivalent to {@link #findRelationships(RelationshipType, String, Object)}, however it must find no more than one\n      * {@link Relationship relationship} or it will throw an exception.\n      *\n      * @param relationshipType consider relationships with this type\n-     * @param key   required property key\n-     * @param value required property value\n+     * @param key              required property key\n+     * @param value            required property value\n      * @return the matching relatioonship or <code>null</code> if none could be found\n      * @throws MultipleFoundException if more than one matching {@link Relationship relationship} is found\n      */\n-    Relationship findRelationship( RelationshipType relationshipType, String key, Object value );\n+    Relationship findRelationship(RelationshipType relationshipType, String key, Object value);\n \n     /**\n      * Returns all {@link Relationship relationships} having the {@link RelationshipType type}, and the wanted property value.\n@@ -404,15 +405,15 @@ public interface Transaction extends AutoCloseable\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n      * @param relationshipType consider relationships with this type\n-     * @param key   required property key\n-     * @param value required property value\n+     * @param key              required property key\n+     * @param value            required property value\n      * @return an iterator containing all matching relationships. See {@link ResourceIterator} for responsibilities.\n      */\n-    ResourceIterator<Relationship> findRelationships( RelationshipType relationshipType, String key, Object value );\n+    ResourceIterator<Relationship> findRelationships(RelationshipType relationshipType, String key, Object value);\n \n     /**\n      * Returns all {@link Relationship relationships} of a specific {@link RelationshipType type}.\n-     *\n+     * <p>\n      * Please take care that the returned {@link ResourceIterator} is closed correctly and as soon as possible\n      * inside your transaction to avoid potential blocking of write operations.\n      *\n@@ -420,19 +421,19 @@ public interface Transaction extends AutoCloseable\n      * @return an iterator containing all relationships with matching type. See {@link ResourceIterator} for responsibilities.\n      * @throws IllegalStateException if relationship index feature not enabled\n      */\n-    ResourceIterator<Relationship> findRelationships( RelationshipType relationshipType );\n+    ResourceIterator<Relationship> findRelationships(RelationshipType relationshipType);\n \n     /**\n      * Marks this transaction as terminated, which means that it will be, much like in the case of failure,\n      * unconditionally rolled back when {@link #close()} is called. Once this method has been invoked, it doesn't matter\n      * if {@link #commit()} ()} is invoked afterwards -- the transaction will still be rolled back.\n-     *\n+     * <p>\n      * Additionally, terminating a transaction causes all subsequent operations carried out within that\n      * transaction to throw a {@link TransactionTerminatedException}.\n-     *\n+     * <p>\n      * Note that, unlike the other transaction operations, this method can be called from different thread.\n      * When this method is called, it signals to terminate the transaction and returns immediately.\n-     *\n+     * <p>\n      * Calling this method on an already closed transaction has no effect.\n      */\n     void terminate();\n@@ -457,30 +458,29 @@ public interface Transaction extends AutoCloseable\n      * if not it's released automatically when the transaction finishes.\n      *\n      * @param entity the entity to acquire a lock for. If another transaction\n-     * currently holds a write lock to that entity this call will wait until\n-     * it's released.\n-     *\n+     *               currently holds a write lock to that entity this call will wait until\n+     *               it's released.\n      * @return a {@link Lock} which optionally can be used to release this\n      * lock earlier than when the transaction finishes. If not released\n      * (with {@link Lock#release()} it's going to be released when the\n      * transaction finishes.\n      */\n-    Lock acquireWriteLock( Entity entity );\n+    Lock acquireWriteLock(Entity entity);\n \n     /**\n      * Acquires a read lock for {@code entity} for this transaction.\n      * The lock (returned from this method) can be released manually, but\n      * if not it's released automatically when the transaction finishes.\n-     * @param entity the entity to acquire a lock for. If another transaction\n-     * currently hold a write lock to that entity this call will wait until\n-     * it's released.\n      *\n+     * @param entity the entity to acquire a lock for. If another transaction\n+     *               currently hold a write lock to that entity this call will wait until\n+     *               it's released.\n      * @return a {@link Lock} which optionally can be used to release this\n      * lock earlier than when the transaction finishes. If not released\n      * (with {@link Lock#release()} it's going to be released with the\n      * transaction finishes.\n      */\n-    Lock acquireReadLock( Entity entity );\n+    Lock acquireReadLock(Entity entity);\n \n     /**\n      * Returns the {@link Schema schema manager} where all things related to schema,\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
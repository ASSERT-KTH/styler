{
    "project_name": "opencb-opencga",
    "error_id": "134",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 143).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        // Compute ratios: X-chrom / autosomic-chroms and Y-chrom / autosomic-chroms\n        double[] ratios = InferredSexComputation.computeRatios(getStudyId(), getIndividualId(), assembly, fileManager, alignmentStorageManager,\n                getToken());\n\n        // TODO infer sex from ratios",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/134/InferredSexLocalAnalysisExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/134/InferredSexLocalAnalysisExecutor.java\nindex 929614beba7..07be74640e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/134/InferredSexLocalAnalysisExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/134/InferredSexLocalAnalysisExecutor.java\n@@ -32,34 +32,34 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n-@ToolExecutor(id=\"opencga-local\", tool = InferredSexAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n-        source = ToolExecutor.Source.STORAGE)\n+@ToolExecutor(id = \"opencga-local\", tool = InferredSexAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n+    source = ToolExecutor.Source.STORAGE)\n public class InferredSexLocalAnalysisExecutor extends InferredSexAnalysisExecutor implements StorageToolExecutor {\n \n-    @Override\n-    public void run() throws ToolException {\n-        AlignmentStorageManager alignmentStorageManager = getAlignmentStorageManager();\n-        CatalogManager catalogManager = alignmentStorageManager.getCatalogManager();\n-        FileManager fileManager = catalogManager.getFileManager();\n-        String assembly;\n-        try {\n-            assembly = IndividualQcUtils.getAssembly(getStudyId(), alignmentStorageManager.getCatalogManager(), getToken());\n-        } catch (CatalogException e) {\n-            throw new ToolException(e);\n-        }\n+  @Override\n+  public void run() throws ToolException {\n+    AlignmentStorageManager alignmentStorageManager = getAlignmentStorageManager();\n+    CatalogManager catalogManager = alignmentStorageManager.getCatalogManager();\n+    FileManager fileManager = catalogManager.getFileManager();\n+    String assembly;\n+    try {\n+      assembly = IndividualQcUtils.getAssembly(getStudyId(), alignmentStorageManager.getCatalogManager(), getToken());\n+    } catch (CatalogException e) {\n+      throw new ToolException(e);\n+    }\n \n-        // Compute ratios: X-chrom / autosomic-chroms and Y-chrom / autosomic-chroms\n-        double[] ratios = InferredSexComputation.computeRatios(getStudyId(), getIndividualId(), assembly, fileManager, alignmentStorageManager,\n-                getToken());\n+    // Compute ratios: X-chrom / autosomic-chroms and Y-chrom / autosomic-chroms\n+    double[] ratios = InferredSexComputation.computeRatios(getStudyId(), getIndividualId(), assembly, fileManager, alignmentStorageManager,\n+        getToken());\n \n-        // TODO infer sex from ratios\n-        String inferredKaryotypicSex = \"\";\n+    // TODO infer sex from ratios\n+    String inferredKaryotypicSex = \"\";\n \n-        Map<String, Object> values = new HashMap<>();\n-        values.put(\"ratioX\", ratios[0]);\n-        values.put(\"ratioY\", ratios[1]);\n+    Map<String, Object> values = new HashMap<>();\n+    values.put(\"ratioX\", ratios[0]);\n+    values.put(\"ratioY\", ratios[1]);\n \n-        // Set inferred sex report (individual fields will be set later)\n-        setInferredSexReport(new InferredSexReport(\"CoverageRatio\", inferredKaryotypicSex, values, Collections.emptyList()));\n-    }\n+    // Set inferred sex report (individual fields will be set later)\n+    setInferredSexReport(new InferredSexReport(\"CoverageRatio\", inferredKaryotypicSex, values, Collections.emptyList()));\n+  }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/134/InferredSexLocalAnalysisExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/134/InferredSexLocalAnalysisExecutor.java\nindex 929614beba7..cfaac2662df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/134/InferredSexLocalAnalysisExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/134/InferredSexLocalAnalysisExecutor.java\n@@ -32,7 +32,7 @@ import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n-@ToolExecutor(id=\"opencga-local\", tool = InferredSexAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n+@ToolExecutor(id = \"opencga-local\", tool = InferredSexAnalysis.ID, framework = ToolExecutor.Framework.LOCAL,\n         source = ToolExecutor.Source.STORAGE)\n public class InferredSexLocalAnalysisExecutor extends InferredSexAnalysisExecutor implements StorageToolExecutor {\n \n@@ -62,4 +62,4 @@ public class InferredSexLocalAnalysisExecutor extends InferredSexAnalysisExecuto\n         // Set inferred sex report (individual fields will be set later)\n         setInferredSexReport(new InferredSexReport(\"CoverageRatio\", inferredKaryotypicSex, values, Collections.emptyList()));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
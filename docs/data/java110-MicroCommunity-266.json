{
    "project_name": "java110-MicroCommunity",
    "error_id": "266",
    "information": {
        "errors": [
            {
                "line": "48",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 166).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n\n        return machines;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/266/MachineInnerServiceSMOImpl.java\nindex 0e852b23a93..6571e86a028 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/266/MachineInnerServiceSMOImpl.java\n@@ -45,7 +45,8 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n             machineDto.setPage((page - 1) * machineDto.getRow());\n         }\n \n-        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n+        List<MachineDto> machines =\n+            BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n \n         return machines;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/266/MachineInnerServiceSMOImpl.java\nindex 0e852b23a93..c2b4389bdc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/266/MachineInnerServiceSMOImpl.java\n@@ -99,4 +99,4 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/266/MachineInnerServiceSMOImpl.java\nindex 0e852b23a93..f8a454483c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/266/MachineInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.common.smo.impl;\n \n-\n import com.java110.common.dao.IMachineServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.core.smo.hardwareAdapation.IMachineInnerServiceSMO;\n@@ -13,7 +12,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -25,6 +23,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachineInnerServiceSMO {\n \n@@ -39,14 +39,14 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = machineDto.getPage();\n \n+\n+        int page = machineDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             machineDto.setPage((page - 1) * machineDto.getRow());\n         }\n \n         List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n-\n         return machines;\n     }\n \n@@ -56,12 +56,13 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n      * @param demos \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<DemoDto> demos) {\n         List<String> userIds = new ArrayList<String>();\n         for (DemoDto demo : demos) {\n             userIds.add(demo.getUserId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n@@ -71,6 +72,8 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n      * @param demo  \u5c0f\u533ademo\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshDemo(DemoDto demo, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (demo.getUserId().equals(user.getUserId())) {\n@@ -99,4 +102,4 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/266/MachineInnerServiceSMOImpl.java\nindex 0e852b23a93..95a22f62164 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/266/MachineInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/266/MachineInnerServiceSMOImpl.java\n@@ -44,8 +44,7 @@ public class MachineInnerServiceSMOImpl extends BaseServiceSMO implements IMachi\n         if (page != PageDto.DEFAULT_PAGE) {\n             machineDto.setPage((page - 1) * machineDto.getRow());\n         }\n-\n-        List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n+    List<MachineDto> machines = BeanConvertUtil.covertBeanList(machineServiceDaoImpl.getMachineInfo(BeanConvertUtil.beanCovertMap(machineDto)), MachineDto.class);\n \n         return machines;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
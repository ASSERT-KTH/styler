{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2268",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2268/AbstractPrintWriterLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2268/AbstractPrintWriterLogger.java\nindex e58e97b636f..79abc74905e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2268/AbstractPrintWriterLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2268/AbstractPrintWriterLogger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging;\n \n import java.io.PrintWriter;\n@@ -32,121 +33,121 @@ import static java.util.Objects.requireNonNull;\n  */\n public abstract class AbstractPrintWriterLogger implements Logger\n {\n-    private final Supplier<PrintWriter> writerSupplier;\n-    private final Object lock;\n-    private final boolean autoFlush;\n+  private final Supplier<PrintWriter> writerSupplier;\n+  private final Object lock;\n+  private final boolean autoFlush;\n+\n+  /**\n+   * @param writerSupplier A {@link Supplier} for the {@link PrintWriter} that logs should be written to\n+   * @param lock           An object that will be used to synchronize all writes on\n+   * @param autoFlush      Whether to flush the writer after each log message is written\n+   */\n+  protected AbstractPrintWriterLogger(@Nonnull Supplier<PrintWriter> writerSupplier, @Nonnull Object lock,\n+                                      boolean autoFlush)\n+  {\n+    this.writerSupplier = writerSupplier;\n+    this.lock = lock;\n+    this.autoFlush = autoFlush;\n+  }\n \n-    /**\n-     * @param writerSupplier A {@link Supplier} for the {@link PrintWriter} that logs should be written to\n-     * @param lock           An object that will be used to synchronize all writes on\n-     * @param autoFlush      Whether to flush the writer after each log message is written\n-     */\n-    protected AbstractPrintWriterLogger( @Nonnull Supplier<PrintWriter> writerSupplier, @Nonnull Object lock,\n-            boolean autoFlush )\n+  @Override\n+  public void log(@Nonnull String message)\n+  {\n+    requireNonNull(message, \"message must not be null\");\n+    PrintWriter writer;\n+    synchronized (lock)\n     {\n-        this.writerSupplier = writerSupplier;\n-        this.lock = lock;\n-        this.autoFlush = autoFlush;\n+      writer = writerSupplier.get();\n+      writeLog(writer, message);\n     }\n+    maybeFlush(writer);\n+  }\n \n-    @Override\n-    public void log( @Nonnull String message )\n+  @Override\n+  public void log(@Nonnull String message, @Nonnull Throwable throwable)\n+  {\n+    requireNonNull(message, \"message must not be null\");\n+    if (throwable == null)\n     {\n-        requireNonNull( message, \"message must not be null\" );\n-        PrintWriter writer;\n-        synchronized ( lock )\n-        {\n-            writer = writerSupplier.get();\n-            writeLog( writer, message );\n-        }\n-        maybeFlush( writer );\n+      log(message);\n+      return;\n     }\n-\n-    @Override\n-    public void log( @Nonnull String message, @Nonnull Throwable throwable )\n+    PrintWriter writer;\n+    synchronized (lock)\n     {\n-        requireNonNull( message, \"message must not be null\" );\n-        if ( throwable == null )\n-        {\n-            log( message );\n-            return;\n-        }\n-        PrintWriter writer;\n-        synchronized ( lock )\n-        {\n-            writer = writerSupplier.get();\n-            writeLog( writer, message, throwable );\n-        }\n-        maybeFlush( writer );\n+      writer = writerSupplier.get();\n+      writeLog(writer, message, throwable);\n     }\n+    maybeFlush(writer);\n+  }\n \n-    @Override\n-    public void log( @Nonnull String format, @Nullable Object... arguments )\n+  @Override\n+  public void log(@Nonnull String format, @Nullable Object... arguments)\n+  {\n+    requireNonNull(format, \"format must not be null\");\n+    if (arguments == null || arguments.length == 0)\n+    {\n+      log(format);\n+      return;\n+    }\n+    String message = String.format(format, arguments);\n+    PrintWriter writer;\n+    synchronized (lock)\n     {\n-        requireNonNull( format, \"format must not be null\" );\n-        if ( arguments == null || arguments.length == 0 )\n-        {\n-            log( format );\n-            return;\n-        }\n-        String message = String.format( format, arguments );\n-        PrintWriter writer;\n-        synchronized ( lock )\n-        {\n-            writer = writerSupplier.get();\n-            writeLog( writer, message );\n-        }\n-        maybeFlush( writer );\n+      writer = writerSupplier.get();\n+      writeLog(writer, message);\n     }\n+    maybeFlush(writer);\n+  }\n \n-    @Override\n-    public void bulk( @Nonnull Consumer<Logger> consumer )\n+  @Override\n+  public void bulk(@Nonnull Consumer<Logger> consumer)\n+  {\n+    requireNonNull(consumer, \"consumer must not be null\");\n+    PrintWriter writer;\n+    synchronized (lock)\n     {\n-        requireNonNull( consumer, \"consumer must not be null\" );\n-        PrintWriter writer;\n-        synchronized ( lock )\n-        {\n-            writer = writerSupplier.get();\n-            consumer.accept( getBulkLogger( writer, lock ) );\n-        }\n-        maybeFlush( writer );\n+      writer = writerSupplier.get();\n+      consumer.accept(getBulkLogger(writer, lock));\n     }\n+    maybeFlush(writer);\n+  }\n \n-    /**\n-     * Invoked when a log line should be written. This method will only be called synchronously (whilst a lock is held\n-     * on the lock object provided during construction).\n-     *\n-     * @param writer the writer to write to\n-     * @param message the message to write\n-     */\n-    protected abstract void writeLog( @Nonnull PrintWriter writer, @Nonnull String message );\n+  /**\n+   * Invoked when a log line should be written. This method will only be called synchronously (whilst a lock is held\n+   * on the lock object provided during construction).\n+   *\n+   * @param writer  the writer to write to\n+   * @param message the message to write\n+   */\n+  protected abstract void writeLog(@Nonnull PrintWriter writer, @Nonnull String message);\n \n-    /**\n-     * Invoked when a log line should be written. This method will only be called synchronously (whilst a lock is held\n-     * on the lock object provided during construction).\n-     *\n-     * @param writer the writer to write to\n-     * @param message the message to write\n-     * @param throwable the exception to append to the log message\n-     */\n-    protected abstract void writeLog( @Nonnull PrintWriter writer, @Nonnull String message,\n-            @Nonnull Throwable throwable );\n+  /**\n+   * Invoked when a log line should be written. This method will only be called synchronously (whilst a lock is held\n+   * on the lock object provided during construction).\n+   *\n+   * @param writer    the writer to write to\n+   * @param message   the message to write\n+   * @param throwable the exception to append to the log message\n+   */\n+  protected abstract void writeLog(@Nonnull PrintWriter writer, @Nonnull String message,\n+                                   @Nonnull Throwable throwable);\n \n-    /**\n-     * Return a variant of the logger which will output to the specified writer (whilst holding a lock on the specified\n-     * object) in a bulk manner (no flushing, etc).\n-     *\n-     * @param writer the writer to write to\n-     * @param lock the object on which to lock\n-     * @return a new logger for bulk writes\n-     */\n-    protected abstract Logger getBulkLogger( @Nonnull PrintWriter writer, @Nonnull Object lock );\n+  /**\n+   * Return a variant of the logger which will output to the specified writer (whilst holding a lock on the specified\n+   * object) in a bulk manner (no flushing, etc).\n+   *\n+   * @param writer the writer to write to\n+   * @param lock   the object on which to lock\n+   * @return a new logger for bulk writes\n+   */\n+  protected abstract Logger getBulkLogger(@Nonnull PrintWriter writer, @Nonnull Object lock);\n \n-    private void maybeFlush( PrintWriter writer )\n+  private void maybeFlush(PrintWriter writer)\n+  {\n+    if (autoFlush)\n     {\n-        if ( autoFlush )\n-        {\n-            writer.flush();\n-        }\n+      writer.flush();\n     }\n+  }\n }\n",
            "diff_size": 139
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2268/AbstractPrintWriterLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2268/AbstractPrintWriterLogger.java\nindex e58e97b636f..f7c50b4b6c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2268/AbstractPrintWriterLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2268/AbstractPrintWriterLogger.java\n@@ -59,7 +59,8 @@ public abstract class AbstractPrintWriterLogger implements Logger\n             writer = writerSupplier.get();\n             writeLog( writer, message );\n         }\n-        maybeFlush( writer );\n+\n+maybeFlush( writer );\n     }\n \n     @Override\n@@ -71,13 +72,15 @@ public abstract class AbstractPrintWriterLogger implements Logger\n             log( message );\n             return;\n         }\n-        PrintWriter writer;\n+\n+PrintWriter writer;\n         synchronized ( lock )\n         {\n             writer = writerSupplier.get();\n             writeLog( writer, message, throwable );\n         }\n-        maybeFlush( writer );\n+\n+maybeFlush( writer );\n     }\n \n     @Override\n@@ -89,14 +92,16 @@ public abstract class AbstractPrintWriterLogger implements Logger\n             log( format );\n             return;\n         }\n-        String message = String.format( format, arguments );\n+\n+String message = String.format( format, arguments );\n         PrintWriter writer;\n         synchronized ( lock )\n         {\n             writer = writerSupplier.get();\n             writeLog( writer, message );\n         }\n-        maybeFlush( writer );\n+\n+maybeFlush( writer );\n     }\n \n     @Override\n@@ -109,7 +114,8 @@ public abstract class AbstractPrintWriterLogger implements Logger\n             writer = writerSupplier.get();\n             consumer.accept( getBulkLogger( writer, lock ) );\n         }\n-        maybeFlush( writer );\n+\n+maybeFlush( writer );\n     }\n \n     /**\n@@ -132,7 +138,7 @@ public abstract class AbstractPrintWriterLogger implements Logger\n     protected abstract void writeLog( @Nonnull PrintWriter writer, @Nonnull String message,\n             @Nonnull Throwable throwable );\n \n-    /**\n+/**\n      * Return a variant of the logger which will output to the specified writer (whilst holding a lock on the specified\n      * object) in a bulk manner (no flushing, etc).\n      *\n@@ -149,4 +155,4 @@ public abstract class AbstractPrintWriterLogger implements Logger\n             writer.flush();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
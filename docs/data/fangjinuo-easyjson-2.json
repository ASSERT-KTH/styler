{
    "project_name": "fangjinuo-easyjson",
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "47",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "import java.lang.reflect.Field;\n\npublic interface FieldAware extends ClassAware{\n    void setField(Field field);\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/2/FieldAware.java\nindex 8f0e4149f5f..b0863b35f53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/2/FieldAware.java\n@@ -16,6 +16,6 @@ package com.jn.easyjson.gson.typeadapter;\n \n import java.lang.reflect.Field;\n \n-public interface FieldAware extends ClassAware{\n+public interface FieldAware extends ClassAware {\n     void setField(Field field);\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/2/FieldAware.java\nindex 8f0e4149f5f..b0863b35f53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/2/FieldAware.java\n@@ -16,6 +16,6 @@ package com.jn.easyjson.gson.typeadapter;\n \n import java.lang.reflect.Field;\n \n-public interface FieldAware extends ClassAware{\n+public interface FieldAware extends ClassAware {\n     void setField(Field field);\n }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/2/FieldAware.java\nindex 8f0e4149f5f..815bdb7181a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/2/FieldAware.java\n@@ -16,6 +16,6 @@ package com.jn.easyjson.gson.typeadapter;\n \n import java.lang.reflect.Field;\n \n-public interface FieldAware extends ClassAware{\n+public interface FieldAware extends ClassAware {\n     void setField(Field field);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/2/FieldAware.java\nindex 8f0e4149f5f..815bdb7181a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/2/FieldAware.java\n@@ -16,6 +16,6 @@ package com.jn.easyjson.gson.typeadapter;\n \n import java.lang.reflect.Field;\n \n-public interface FieldAware extends ClassAware{\n+public interface FieldAware extends ClassAware {\n     void setField(Field field);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/2/FieldAware.java\nindex 8f0e4149f5f..b0863b35f53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/2/FieldAware.java\n@@ -16,6 +16,6 @@ package com.jn.easyjson.gson.typeadapter;\n \n import java.lang.reflect.Field;\n \n-public interface FieldAware extends ClassAware{\n+public interface FieldAware extends ClassAware {\n     void setField(Field field);\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/2/FieldAware.java\nindex 8f0e4149f5f..b0863b35f53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/2/FieldAware.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/2/FieldAware.java\n@@ -16,6 +16,6 @@ package com.jn.easyjson.gson.typeadapter;\n \n import java.lang.reflect.Field;\n \n-public interface FieldAware extends ClassAware{\n+public interface FieldAware extends ClassAware {\n     void setField(Field field);\n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
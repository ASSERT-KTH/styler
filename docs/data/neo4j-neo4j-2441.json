{
    "project_name": "neo4j-neo4j",
    "error_id": "2441",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2441/ListValueBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2441/ListValueBuilder.java\nindex ef2b331c173..b234ed23bde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2441/ListValueBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2441/ListValueBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.virtual;\n \n import java.util.ArrayList;\n@@ -38,23 +39,25 @@ public abstract class ListValueBuilder\n     /**\n      * @return a collector for {@link ListValue}s\n      */\n-    public static Collector<AnyValue,?,ListValue> collector()\n+    public static Collector<AnyValue, ?, ListValue> collector()\n     {\n         return LIST_VALUE_COLLECTOR;\n     }\n \n     /**\n      * Start building a list of known size\n+     *\n      * @param size the final size of the list\n      * @return a new builder\n      */\n-    public static ListValueBuilder newListBuilder( int size )\n+    public static ListValueBuilder newListBuilder(int size)\n     {\n-        return new FixedSizeListValueBuilder( size );\n+        return new FixedSizeListValueBuilder(size);\n     }\n \n     /**\n      * Start building a list of unknown size\n+     *\n      * @return a new builder\n      */\n     public static ListValueBuilder newListBuilder()\n@@ -62,7 +65,7 @@ public abstract class ListValueBuilder\n         return new UnknownSizeListValueBuilder();\n     }\n \n-    public abstract void add( AnyValue value );\n+    public abstract void add(AnyValue value);\n \n     public abstract ListValue build();\n \n@@ -72,13 +75,13 @@ public abstract class ListValueBuilder\n         private final AnyValue[] values;\n         private int index;\n \n-        private FixedSizeListValueBuilder( int size )\n+        private FixedSizeListValueBuilder(int size)\n         {\n             this.values = new AnyValue[size];\n         }\n \n         @Override\n-        public void add( AnyValue value )\n+        public void add(AnyValue value)\n         {\n             estimatedHeapSize += value.estimatedHeapUsage();\n             values[index++] = value;\n@@ -87,11 +90,12 @@ public abstract class ListValueBuilder\n         @Override\n         public ListValue build()\n         {\n-            return new ListValue.ArrayListValue( values, estimatedHeapSize );\n+            return new ListValue.ArrayListValue(values, estimatedHeapSize);\n         }\n     }\n \n-    private static final long ARRAY_LIST_SHALLOW_SIZE = shallowSizeOfInstance( ArrayList.class );\n+    private static final long ARRAY_LIST_SHALLOW_SIZE = shallowSizeOfInstance(ArrayList.class);\n+\n     private static class UnknownSizeListValueBuilder extends ListValueBuilder\n     {\n         long estimatedHeapSize;\n@@ -104,15 +108,15 @@ public abstract class ListValueBuilder\n         }\n \n         @Override\n-        public void add( AnyValue value )\n+        public void add(AnyValue value)\n         {\n             estimatedHeapSize += value.estimatedHeapUsage();\n-            values.add( value );\n+            values.add(value);\n         }\n \n-        public UnknownSizeListValueBuilder combine( UnknownSizeListValueBuilder rhs )\n+        public UnknownSizeListValueBuilder combine(UnknownSizeListValueBuilder rhs)\n         {\n-            values.addAll( rhs.values );\n+            values.addAll(rhs.values);\n             estimatedHeapSize += rhs.estimatedHeapSize;\n             return this;\n         }\n@@ -120,11 +124,11 @@ public abstract class ListValueBuilder\n         @Override\n         public ListValue build()\n         {\n-            return new ListValue.JavaListListValue( values, estimatedHeapSize );\n+            return new ListValue.JavaListListValue(values, estimatedHeapSize);\n         }\n     }\n \n-    private static final Collector<AnyValue,UnknownSizeListValueBuilder,ListValue> LIST_VALUE_COLLECTOR = new Collector<>()\n+    private static final Collector<AnyValue, UnknownSizeListValueBuilder, ListValue> LIST_VALUE_COLLECTOR = new Collector<>()\n     {\n         @Override\n         public Supplier<UnknownSizeListValueBuilder> supplier()\n@@ -133,7 +137,7 @@ public abstract class ListValueBuilder\n         }\n \n         @Override\n-        public BiConsumer<UnknownSizeListValueBuilder,AnyValue> accumulator()\n+        public BiConsumer<UnknownSizeListValueBuilder, AnyValue> accumulator()\n         {\n             return ListValueBuilder::add;\n         }\n@@ -145,7 +149,7 @@ public abstract class ListValueBuilder\n         }\n \n         @Override\n-        public Function<UnknownSizeListValueBuilder,ListValue> finisher()\n+        public Function<UnknownSizeListValueBuilder, ListValue> finisher()\n         {\n             return UnknownSizeListValueBuilder::build;\n         }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1814",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1814/BranchedStoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1814/BranchedStoreInfo.java\nindex 58b81280487..6f9be4905d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1814/BranchedStoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1814/BranchedStoreInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.management;\n \n import java.beans.ConstructorProperties;\n@@ -24,46 +25,46 @@ import java.io.Serializable;\n \n public final class BranchedStoreInfo implements Serializable\n {\n-    private static final long serialVersionUID = -3519343870927764106L;\n+  private static final long serialVersionUID = -3519343870927764106L;\n \n-    private String directory;\n+  private String directory;\n \n-    private long largestTxId;\n-    private long creationTime;\n-    private long branchedStoreSize;\n+  private long largestTxId;\n+  private long creationTime;\n+  private long branchedStoreSize;\n \n-    @ConstructorProperties( {\"directory\", \"largestTxId\", \"creationTime\"} )\n-    public BranchedStoreInfo( String directory, long largestTxId, long creationTime )\n-    {\n-        this( directory, largestTxId, creationTime, 0 );\n-    }\n+  @ConstructorProperties({\"directory\", \"largestTxId\", \"creationTime\"})\n+  public BranchedStoreInfo(String directory, long largestTxId, long creationTime)\n+  {\n+    this(directory, largestTxId, creationTime, 0);\n+  }\n \n-    @ConstructorProperties( {\"directory\", \"largestTxId\", \"creationTime\", \"storeSize\"} )\n-    public BranchedStoreInfo( String directory, long largestTxId, long creationTime, long branchedStoreSize )\n-    {\n-        this.directory = directory;\n-        this.largestTxId = largestTxId;\n-        this.creationTime = creationTime;\n-        this.branchedStoreSize = branchedStoreSize;\n-    }\n+  @ConstructorProperties({\"directory\", \"largestTxId\", \"creationTime\", \"storeSize\"})\n+  public BranchedStoreInfo(String directory, long largestTxId, long creationTime, long branchedStoreSize)\n+  {\n+    this.directory = directory;\n+    this.largestTxId = largestTxId;\n+    this.creationTime = creationTime;\n+    this.branchedStoreSize = branchedStoreSize;\n+  }\n \n-    public String getDirectory()\n-    {\n-        return directory;\n-    }\n+  public String getDirectory()\n+  {\n+    return directory;\n+  }\n \n-    public long getLargestTxId()\n-    {\n-        return largestTxId;\n-    }\n+  public long getLargestTxId()\n+  {\n+    return largestTxId;\n+  }\n \n-    public long getCreationTime()\n-    {\n-        return creationTime;\n-    }\n+  public long getCreationTime()\n+  {\n+    return creationTime;\n+  }\n \n-    public long getBranchedStoreSize()\n-    {\n-        return branchedStoreSize;\n-    }\n+  public long getBranchedStoreSize()\n+  {\n+    return branchedStoreSize;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1814/BranchedStoreInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1814/BranchedStoreInfo.java\nindex 58b81280487..2808f10a750 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1814/BranchedStoreInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1814/BranchedStoreInfo.java\n@@ -66,4 +66,4 @@ public final class BranchedStoreInfo implements Serializable\n     {\n         return branchedStoreSize;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4320",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4320/MandatoryNamedArg.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4320/MandatoryNamedArg.java\nindex 63e156d2f12..5ba4f0ad0a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4320/MandatoryNamedArg.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4320/MandatoryNamedArg.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.arguments;\n \n import java.util.Collection;\n@@ -28,56 +29,56 @@ import static org.neo4j.kernel.impl.util.Converters.mandatory;\n \n public class MandatoryNamedArg implements NamedArgument\n {\n-    private final String name;\n-    private final String exampleValue;\n-    private final String description;\n+  private final String name;\n+  private final String exampleValue;\n+  private final String description;\n \n-    public MandatoryNamedArg( String name, String exampleValue, String description )\n-    {\n-        this.name = name;\n-        this.exampleValue = exampleValue;\n-        this.description = description;\n-    }\n+  public MandatoryNamedArg(String name, String exampleValue, String description)\n+  {\n+    this.name = name;\n+    this.exampleValue = exampleValue;\n+    this.description = description;\n+  }\n \n-    @Override\n-    public String optionsListing()\n-    {\n-        return usage();\n-    }\n+  @Override\n+  public String optionsListing()\n+  {\n+    return usage();\n+  }\n \n-    @Override\n-    public String usage()\n-    {\n-        return String.format( \"--%s=<%s>\", name, exampleValue );\n-    }\n+  @Override\n+  public String usage()\n+  {\n+    return String.format(\"--%s=<%s>\", name, exampleValue);\n+  }\n \n-    @Override\n-    public String description()\n-    {\n-        return description;\n-    }\n+  @Override\n+  public String description()\n+  {\n+    return description;\n+  }\n \n-    @Override\n-    public String name()\n-    {\n-        return name;\n-    }\n+  @Override\n+  public String name()\n+  {\n+    return name;\n+  }\n \n-    @Override\n-    public String exampleValue()\n-    {\n-        return exampleValue;\n-    }\n+  @Override\n+  public String exampleValue()\n+  {\n+    return exampleValue;\n+  }\n \n-    @Override\n-    public String parse( Args parsedArgs )\n-    {\n-        return parsedArgs.interpretOption( name, mandatory(), identity() );\n-    }\n+  @Override\n+  public String parse(Args parsedArgs)\n+  {\n+    return parsedArgs.interpretOption(name, mandatory(), identity());\n+  }\n \n-    @Override\n-    public Collection<String> parseMultiple( Args parsedArgs )\n-    {\n-        return parsedArgs.interpretOptions( name, mandatory(), identity() );\n-    }\n+  @Override\n+  public Collection<String> parseMultiple(Args parsedArgs)\n+  {\n+    return parsedArgs.interpretOptions(name, mandatory(), identity());\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4320/MandatoryNamedArg.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4320/MandatoryNamedArg.java\nindex 63e156d2f12..4089c1b0d17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4320/MandatoryNamedArg.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4320/MandatoryNamedArg.java\n@@ -80,4 +80,4 @@ public class MandatoryNamedArg implements NamedArgument\n     {\n         return parsedArgs.interpretOptions( name, mandatory(), identity() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2873",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2873/PrimitiveIntCollections.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2873/PrimitiveIntCollections.java\nindex 18a170f2a59..2742f7e6d85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2873/PrimitiveIntCollections.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2873/PrimitiveIntCollections.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive;\n \n import java.util.ArrayList;\n@@ -43,389 +44,390 @@ import org.neo4j.collection.primitive.base.Empty;\n  */\n public class PrimitiveIntCollections\n {\n-    private PrimitiveIntCollections()\n+  private PrimitiveIntCollections()\n+  {\n+  }\n+\n+  /**\n+   * Base iterator for simpler implementations of {@link PrimitiveIntIterator}s.\n+   */\n+  public abstract static class PrimitiveIntBaseIterator implements PrimitiveIntIterator\n+  {\n+    private boolean hasNextDecided;\n+    private boolean hasNext;\n+    private int next;\n+\n+    @Override\n+    public boolean hasNext()\n     {\n+      if (!hasNextDecided)\n+      {\n+        hasNext = fetchNext();\n+        hasNextDecided = true;\n+      }\n+      return hasNext;\n     }\n \n-    /**\n-     * Base iterator for simpler implementations of {@link PrimitiveIntIterator}s.\n-     */\n-    public abstract static class PrimitiveIntBaseIterator implements PrimitiveIntIterator\n+    @Override\n+    public int next()\n     {\n-        private boolean hasNextDecided;\n-        private boolean hasNext;\n-        private int next;\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            if ( !hasNextDecided )\n-            {\n-                hasNext = fetchNext();\n-                hasNextDecided = true;\n-            }\n-            return hasNext;\n-        }\n-\n-        @Override\n-        public int next()\n-        {\n-            if ( !hasNext() )\n-            {\n-                throw new NoSuchElementException( \"No more elements in \" + this );\n-            }\n-            hasNextDecided = false;\n-            return next;\n-        }\n-\n-        /**\n-         * Fetches the next item in this iterator. Returns whether or not a next item was found. If a next\n-         * item was found, that value must have been set inside the implementation of this method\n-         * using {@link #next(int)}.\n-         */\n-        protected abstract boolean fetchNext();\n-\n-        /**\n-         * Called from inside an implementation of {@link #fetchNext()} if a next item was found.\n-         * This method returns {@code true} so that it can be used in short-hand conditionals\n-         * (TODO what are they called?), like:\n-         * <pre>\n-         * @Override\n-         * protected boolean fetchNext()\n-         * {\n-         *     return source.hasNext() ? next( source.next() ) : false;\n-         * }\n-         * </pre>\n-         * @param nextItem the next item found.\n-         */\n-        protected boolean next( int nextItem )\n-        {\n-            next = nextItem;\n-            hasNext = true;\n-            return true;\n-        }\n+      if (!hasNext())\n+      {\n+        throw new NoSuchElementException(\"No more elements in \" + this);\n+      }\n+      hasNextDecided = false;\n+      return next;\n     }\n \n-    public static PrimitiveIntIterator iterator( final int... items )\n-    {\n-        return new PrimitiveIntBaseIterator()\n-        {\n-            private int index = -1;\n-\n-            @Override\n-            protected boolean fetchNext()\n-            {\n-                return ++index < items.length && next( items[index] );\n-            }\n-        };\n-    }\n+    /**\n+     * Fetches the next item in this iterator. Returns whether or not a next item was found. If a next\n+     * item was found, that value must have been set inside the implementation of this method\n+     * using {@link #next(int)}.\n+     */\n+    protected abstract boolean fetchNext();\n \n-    // Concating\n-    public static PrimitiveIntIterator concat( Iterator<PrimitiveIntIterator> iterators )\n+    /**\n+     * Called from inside an implementation of {@link #fetchNext()} if a next item was found.\n+     * This method returns {@code true} so that it can be used in short-hand conditionals\n+     * (TODO what are they called?), like:\n+     * <pre>\n+     * @Override\n+     * protected boolean fetchNext()\n+     * {\n+     *     return source.hasNext() ? next( source.next() ) : false;\n+     * }\n+     * </pre>\n+     *\n+     * @param nextItem the next item found.\n+     */\n+    protected boolean next(int nextItem)\n     {\n-        return new PrimitiveIntConcatingIterator( iterators );\n+      next = nextItem;\n+      hasNext = true;\n+      return true;\n     }\n+  }\n \n-    public static class PrimitiveIntConcatingIterator extends PrimitiveIntBaseIterator\n+  public static PrimitiveIntIterator iterator(final int... items)\n+  {\n+    return new PrimitiveIntBaseIterator()\n     {\n-        private final Iterator<PrimitiveIntIterator> iterators;\n-        private PrimitiveIntIterator currentIterator;\n+      private int index = -1;\n \n-        public PrimitiveIntConcatingIterator( Iterator<PrimitiveIntIterator> iterators )\n-        {\n-            this.iterators = iterators;\n-        }\n+      @Override\n+      protected boolean fetchNext()\n+      {\n+        return ++index < items.length && next(items[index]);\n+      }\n+    };\n+  }\n \n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            if ( currentIterator == null || !currentIterator.hasNext() )\n-            {\n-                while ( iterators.hasNext() )\n-                {\n-                    currentIterator = iterators.next();\n-                    if ( currentIterator.hasNext() )\n-                    {\n-                        break;\n-                    }\n-                }\n-            }\n-            return (currentIterator != null && currentIterator.hasNext()) && next( currentIterator.next() );\n-        }\n+  // Concating\n+  public static PrimitiveIntIterator concat(Iterator<PrimitiveIntIterator> iterators)\n+  {\n+    return new PrimitiveIntConcatingIterator(iterators);\n+  }\n \n-        protected final PrimitiveIntIterator currentIterator()\n-        {\n-            return currentIterator;\n-        }\n+  public static class PrimitiveIntConcatingIterator extends PrimitiveIntBaseIterator\n+  {\n+    private final Iterator<PrimitiveIntIterator> iterators;\n+    private PrimitiveIntIterator currentIterator;\n+\n+    public PrimitiveIntConcatingIterator(Iterator<PrimitiveIntIterator> iterators)\n+    {\n+      this.iterators = iterators;\n     }\n \n-    public static PrimitiveIntIterator filter( PrimitiveIntIterator source, final IntPredicate filter )\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        return new PrimitiveIntFilteringIterator( source )\n+      if (currentIterator == null || !currentIterator.hasNext())\n+      {\n+        while (iterators.hasNext())\n         {\n-            @Override\n-            public boolean test( int item )\n-            {\n-                return filter.test( item );\n-            }\n-        };\n+          currentIterator = iterators.next();\n+          if (currentIterator.hasNext())\n+          {\n+            break;\n+          }\n+        }\n+      }\n+      return (currentIterator != null && currentIterator.hasNext()) && next(currentIterator.next());\n     }\n \n-    public static PrimitiveIntIterator deduplicate( PrimitiveIntIterator source )\n+    protected final PrimitiveIntIterator currentIterator()\n     {\n-        return new PrimitiveIntFilteringIterator( source )\n-        {\n-            private final PrimitiveIntSet visited = Primitive.intSet();\n-\n-            @Override\n-            public boolean test( int testItem )\n-            {\n-                return visited.add( testItem );\n-            }\n-        };\n+      return currentIterator;\n     }\n+  }\n \n-    public abstract static class PrimitiveIntFilteringIterator extends PrimitiveIntBaseIterator implements IntPredicate\n+  public static PrimitiveIntIterator filter(PrimitiveIntIterator source, final IntPredicate filter)\n+  {\n+    return new PrimitiveIntFilteringIterator(source)\n     {\n-        private final PrimitiveIntIterator source;\n+      @Override\n+      public boolean test(int item)\n+      {\n+        return filter.test(item);\n+      }\n+    };\n+  }\n \n-        public PrimitiveIntFilteringIterator( PrimitiveIntIterator source )\n-        {\n-            this.source = source;\n-        }\n+  public static PrimitiveIntIterator deduplicate(PrimitiveIntIterator source)\n+  {\n+    return new PrimitiveIntFilteringIterator(source)\n+    {\n+      private final PrimitiveIntSet visited = Primitive.intSet();\n \n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            while ( source.hasNext() )\n-            {\n-                int testItem = source.next();\n-                if ( test( testItem ) )\n-                {\n-                    return next( testItem );\n-                }\n-            }\n-            return false;\n-        }\n+      @Override\n+      public boolean test(int testItem)\n+      {\n+        return visited.add(testItem);\n+      }\n+    };\n+  }\n \n-        @Override\n-        public abstract boolean test( int testItem );\n-    }\n+  public abstract static class PrimitiveIntFilteringIterator extends PrimitiveIntBaseIterator implements IntPredicate\n+  {\n+    private final PrimitiveIntIterator source;\n \n-    public static PrimitiveIntSet asSet( PrimitiveIntIterator iterator )\n+    public PrimitiveIntFilteringIterator(PrimitiveIntIterator source)\n     {\n-        PrimitiveIntSet set = Primitive.intSet();\n-        while ( iterator.hasNext() )\n-        {\n-            int next = iterator.next();\n-            if ( !set.add( next ) )\n-            {\n-                throw new IllegalStateException( \"Duplicate \" + next + \" from \" + iterator );\n-            }\n-        }\n-        return set;\n+      this.source = source;\n     }\n \n-    public static long[] asLongArray( PrimitiveIntCollection values )\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        long[] array = new long[values.size()];\n-        PrimitiveIntIterator iterator = values.iterator();\n-        int i = 0;\n-        while ( iterator.hasNext() )\n+      while (source.hasNext())\n+      {\n+        int testItem = source.next();\n+        if (test(testItem))\n         {\n-            array[i++] = iterator.next();\n+          return next(testItem);\n         }\n-        return array;\n+      }\n+      return false;\n     }\n \n-    private static final PrimitiveIntIterator EMPTY = new PrimitiveIntBaseIterator()\n-    {\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            return false;\n-        }\n-    };\n+    @Override\n+    public abstract boolean test(int testItem);\n+  }\n \n-    public static PrimitiveIntIterator emptyIterator()\n+  public static PrimitiveIntSet asSet(PrimitiveIntIterator iterator)\n+  {\n+    PrimitiveIntSet set = Primitive.intSet();\n+    while (iterator.hasNext())\n     {\n-        return EMPTY;\n+      int next = iterator.next();\n+      if (!set.add(next))\n+      {\n+        throw new IllegalStateException(\"Duplicate \" + next + \" from \" + iterator);\n+      }\n     }\n-\n-    public static PrimitiveIntSet emptySet()\n+    return set;\n+  }\n+\n+  public static long[] asLongArray(PrimitiveIntCollection values)\n+  {\n+    long[] array = new long[values.size()];\n+    PrimitiveIntIterator iterator = values.iterator();\n+    int i = 0;\n+    while (iterator.hasNext())\n     {\n-        return Empty.EMPTY_PRIMITIVE_INT_SET;\n+      array[i++] = iterator.next();\n     }\n+    return array;\n+  }\n \n-    public static PrimitiveIntIterator toPrimitiveIterator( final Iterator<Integer> iterator )\n+  private static final PrimitiveIntIterator EMPTY = new PrimitiveIntBaseIterator()\n+  {\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        return new PrimitiveIntBaseIterator()\n-        {\n-            @Override\n-            protected boolean fetchNext()\n-            {\n-                if ( iterator.hasNext() )\n-                {\n-                    Integer nextValue = iterator.next();\n-                    if ( null == nextValue )\n-                    {\n-                        throw new IllegalArgumentException( \"Cannot convert null Integer to primitive int\" );\n-                    }\n-                    return next( nextValue.intValue() );\n-                }\n-                return false;\n-            }\n-        };\n+      return false;\n     }\n+  };\n \n-    public static <T> Iterator<T> map( final IntFunction<T> mapFunction, final PrimitiveIntIterator source )\n-    {\n-        return new Iterator<T>()\n-        {\n-            @Override\n-            public boolean hasNext()\n-            {\n-                return source.hasNext();\n-            }\n-\n-            @Override\n-            public T next()\n-            {\n-                return mapFunction.apply( source.next() );\n-            }\n-\n-            @Override\n-            public void remove()\n-            {\n-                throw new UnsupportedOperationException();\n-            }\n-        };\n-    }\n+  public static PrimitiveIntIterator emptyIterator()\n+  {\n+    return EMPTY;\n+  }\n+\n+  public static PrimitiveIntSet emptySet()\n+  {\n+    return Empty.EMPTY_PRIMITIVE_INT_SET;\n+  }\n \n-    public static void consume( PrimitiveIntIterator source, IntConsumer consumer )\n+  public static PrimitiveIntIterator toPrimitiveIterator(final Iterator<Integer> iterator)\n+  {\n+    return new PrimitiveIntBaseIterator()\n     {\n-        while ( source.hasNext() )\n+      @Override\n+      protected boolean fetchNext()\n+      {\n+        if (iterator.hasNext())\n         {\n-            consumer.accept( source.next() );\n+          Integer nextValue = iterator.next();\n+          if (null == nextValue)\n+          {\n+            throw new IllegalArgumentException(\"Cannot convert null Integer to primitive int\");\n+          }\n+          return next(nextValue.intValue());\n         }\n-    }\n+        return false;\n+      }\n+    };\n+  }\n \n-    public static PrimitiveIntSet asSet( int[] values )\n+  public static <T> Iterator<T> map(final IntFunction<T> mapFunction, final PrimitiveIntIterator source)\n+  {\n+    return new Iterator<T>()\n     {\n-        PrimitiveIntSet set = Primitive.intSet( values.length );\n-        for ( int value : values )\n-        {\n-            set.add( value );\n-        }\n-        return set;\n-    }\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return source.hasNext();\n+      }\n+\n+      @Override\n+      public T next()\n+      {\n+        return mapFunction.apply(source.next());\n+      }\n+\n+      @Override\n+      public void remove()\n+      {\n+        throw new UnsupportedOperationException();\n+      }\n+    };\n+  }\n \n-    public static PrimitiveIntSet asSet( long[] values, LongToIntFunction converter )\n+  public static void consume(PrimitiveIntIterator source, IntConsumer consumer)\n+  {\n+    while (source.hasNext())\n     {\n-        PrimitiveIntSet set = Primitive.intSet( values.length );\n-        for ( long value : values )\n-        {\n-            set.add( converter.applyAsInt( value ) );\n-        }\n-        return set;\n+      consumer.accept(source.next());\n     }\n+  }\n \n-    public static <T> PrimitiveIntObjectMap<T> copyTransform( PrimitiveIntObjectMap<T> original, Function<T,T> transform )\n+  public static PrimitiveIntSet asSet(int[] values)\n+  {\n+    PrimitiveIntSet set = Primitive.intSet(values.length);\n+    for (int value : values)\n     {\n-        PrimitiveIntObjectMap<T> copy = Primitive.intObjectMap( original.size() );\n-        original.visitEntries( ( key, value ) ->\n-        {\n-            copy.put( key, transform.apply( value ) );\n-            return false;\n-        } );\n-        return copy;\n+      set.add(value);\n     }\n+    return set;\n+  }\n \n-    public static boolean contains( int[] values, int candidate )\n+  public static PrimitiveIntSet asSet(long[] values, LongToIntFunction converter)\n+  {\n+    PrimitiveIntSet set = Primitive.intSet(values.length);\n+    for (long value : values)\n     {\n-        for ( int value : values )\n-        {\n-            if ( value == candidate )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      set.add(converter.applyAsInt(value));\n     }\n+    return set;\n+  }\n \n-    /**\n-     * Pulls all items from the {@code iterator} and puts them into a {@link List}, boxing each int.\n-     *\n-     * @param iterator {@link PrimitiveIntIterator} to pull values from.\n-     * @return a {@link List} containing all items.\n-     */\n-    public static List<Integer> toList( PrimitiveIntIterator iterator )\n+  public static <T> PrimitiveIntObjectMap<T> copyTransform(PrimitiveIntObjectMap<T> original, Function<T, T> transform)\n+  {\n+    PrimitiveIntObjectMap<T> copy = Primitive.intObjectMap(original.size());\n+    original.visitEntries((key, value) ->\n     {\n-        List<Integer> out = new ArrayList<>();\n-        while ( iterator.hasNext() )\n-        {\n-            out.add( iterator.next() );\n-        }\n-        return out;\n+      copy.put(key, transform.apply(value));\n+      return false;\n+    });\n+    return copy;\n+  }\n+\n+  public static boolean contains(int[] values, int candidate)\n+  {\n+    for (int value : values)\n+    {\n+      if (value == candidate)\n+      {\n+        return true;\n+      }\n     }\n-\n-    /**\n-     * Pulls all items from the {@code iterator} and puts them into a {@link Set}, boxing each int.\n-     * Any duplicate value will throw {@link IllegalStateException}.\n-     *\n-     * @param iterator {@link PrimitiveIntIterator} to pull values from.\n-     * @return a {@link Set} containing all items.\n-     * @throws IllegalStateException for the first encountered duplicate.\n-     */\n-    public static Set<Integer> toSet( PrimitiveIntIterator iterator )\n+    return false;\n+  }\n+\n+  /**\n+   * Pulls all items from the {@code iterator} and puts them into a {@link List}, boxing each int.\n+   *\n+   * @param iterator {@link PrimitiveIntIterator} to pull values from.\n+   * @return a {@link List} containing all items.\n+   */\n+  public static List<Integer> toList(PrimitiveIntIterator iterator)\n+  {\n+    List<Integer> out = new ArrayList<>();\n+    while (iterator.hasNext())\n     {\n-        return mapToSet( iterator, Integer::new );\n+      out.add(iterator.next());\n     }\n-\n-    public static <T> Set<T> mapToSet( PrimitiveIntIterator iterator, IntFunction<T> map )\n+    return out;\n+  }\n+\n+  /**\n+   * Pulls all items from the {@code iterator} and puts them into a {@link Set}, boxing each int.\n+   * Any duplicate value will throw {@link IllegalStateException}.\n+   *\n+   * @param iterator {@link PrimitiveIntIterator} to pull values from.\n+   * @return a {@link Set} containing all items.\n+   * @throws IllegalStateException for the first encountered duplicate.\n+   */\n+  public static Set<Integer> toSet(PrimitiveIntIterator iterator)\n+  {\n+    return mapToSet(iterator, Integer::new);\n+  }\n+\n+  public static <T> Set<T> mapToSet(PrimitiveIntIterator iterator, IntFunction<T> map)\n+  {\n+    Set<T> set = new HashSet<>();\n+    while (iterator.hasNext())\n     {\n-        Set<T> set = new HashSet<>();\n-        while ( iterator.hasNext() )\n-        {\n-            addUnique( set, map.apply( iterator.next() ) );\n-        }\n-        return set;\n+      addUnique(set, map.apply(iterator.next()));\n     }\n+    return set;\n+  }\n \n-    private static <T, C extends Collection<T>> void addUnique( C collection, T item )\n+  private static <T, C extends Collection<T>> void addUnique(C collection, T item)\n+  {\n+    if (!collection.add(item))\n     {\n-        if ( !collection.add( item ) )\n-        {\n-            throw new IllegalStateException( \"Encountered an already added item:\" + item +\n-                    \" when adding items uniquely to a collection:\" + collection );\n-        }\n+      throw new IllegalStateException(\"Encountered an already added item:\" + item +\n+          \" when adding items uniquely to a collection:\" + collection);\n     }\n-\n-    /**\n-     * Deduplicates values in the {@code values} array.\n-     *\n-     * @param values sorted array of int values.\n-     * @return the provided array if no duplicates were found, otherwise a new shorter array w/o duplicates.\n-     */\n-    public static int[] deduplicate( int[] values )\n+  }\n+\n+  /**\n+   * Deduplicates values in the {@code values} array.\n+   *\n+   * @param values sorted array of int values.\n+   * @return the provided array if no duplicates were found, otherwise a new shorter array w/o duplicates.\n+   */\n+  public static int[] deduplicate(int[] values)\n+  {\n+    int unique = 0;\n+    for (int i = 0; i < values.length; i++)\n     {\n-        int unique = 0;\n-        for ( int i = 0; i < values.length; i++ )\n+      int value = values[i];\n+      for (int j = 0; j < unique; j++)\n+      {\n+        if (value == values[j])\n         {\n-            int value = values[i];\n-            for ( int j = 0; j < unique; j++ )\n-            {\n-                if ( value == values[j] )\n-                {\n-                    value = -1; // signal that this value is not unique\n-                    break; // we will not find more than one conflict\n-                }\n-            }\n-            if ( value != -1 )\n-            {   // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n-                values[unique++] = values[i];\n-            }\n+          value = -1; // signal that this value is not unique\n+          break; // we will not find more than one conflict\n         }\n-        return unique < values.length ? Arrays.copyOf( values, unique ) : values;\n+      }\n+      if (value != -1)\n+      {   // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n+        values[unique++] = values[i];\n+      }\n     }\n+    return unique < values.length ? Arrays.copyOf(values, unique) : values;\n+  }\n }\n",
            "diff_size": 479
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2873/PrimitiveIntCollections.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2873/PrimitiveIntCollections.java\nindex 18a170f2a59..f73c0d8b136 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2873/PrimitiveIntCollections.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2873/PrimitiveIntCollections.java\n@@ -64,7 +64,8 @@ public class PrimitiveIntCollections\n                 hasNext = fetchNext();\n                 hasNextDecided = true;\n             }\n-            return hasNext;\n+\n+return hasNext;\n         }\n \n         @Override\n@@ -74,7 +75,8 @@ public class PrimitiveIntCollections\n             {\n                 throw new NoSuchElementException( \"No more elements in \" + this );\n             }\n-            hasNextDecided = false;\n+\n+hasNextDecided = false;\n             return next;\n         }\n \n@@ -115,7 +117,7 @@ public class PrimitiveIntCollections\n             @Override\n             protected boolean fetchNext()\n             {\n-                return ++index < items.length && next( items[index] );\n+                return ++ index < items.length && next( items[index] );\n             }\n         };\n     }\n@@ -235,7 +237,8 @@ public class PrimitiveIntCollections\n         {\n             array[i++] = iterator.next();\n         }\n-        return array;\n+\n+return array;\n     }\n \n     private static final PrimitiveIntIterator EMPTY = new PrimitiveIntBaseIterator()\n@@ -271,7 +274,8 @@ public class PrimitiveIntCollections\n                     {\n                         throw new IllegalArgumentException( \"Cannot convert null Integer to primitive int\" );\n                     }\n-                    return next( nextValue.intValue() );\n+\n+return next( nextValue.intValue() );\n                 }\n                 return false;\n             }\n@@ -317,7 +321,8 @@ public class PrimitiveIntCollections\n         {\n             set.add( value );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     public static PrimitiveIntSet asSet( long[] values, LongToIntFunction converter )\n@@ -327,7 +332,8 @@ public class PrimitiveIntCollections\n         {\n             set.add( converter.applyAsInt( value ) );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     public static <T> PrimitiveIntObjectMap<T> copyTransform( PrimitiveIntObjectMap<T> original, Function<T,T> transform )\n@@ -366,7 +372,8 @@ public class PrimitiveIntCollections\n         {\n             out.add( iterator.next() );\n         }\n-        return out;\n+\n+return out;\n     }\n \n     /**\n@@ -389,16 +396,16 @@ public class PrimitiveIntCollections\n         {\n             addUnique( set, map.apply( iterator.next() ) );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     private static <T, C extends Collection<T>> void addUnique( C collection, T item )\n     {\n         if ( !collection.add( item ) )\n         {\n-            throw new IllegalStateException( \"Encountered an already added item:\" + item +\n-                    \" when adding items uniquely to a collection:\" + collection );\n-        }\n+            throw new IllegalStateException( \"Encountered an already added item:\" + item + \" when adding items uniquely to a collection:\" + collection );\n+    }\n     }\n \n     /**\n@@ -422,10 +429,11 @@ public class PrimitiveIntCollections\n                 }\n             }\n             if ( value != -1 )\n-            {   // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n+            {\n+    // this has to be done outside the inner loop, otherwise we'd never accept a single one...\n                 values[unique++] = values[i];\n             }\n         }\n         return unique < values.length ? Arrays.copyOf( values, unique ) : values;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3890",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3890/DefaultNodeExplicitIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3890/DefaultNodeExplicitIndexCursor.java\nindex c00ee104ffa..95f4ad68dc9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3890/DefaultNodeExplicitIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3890/DefaultNodeExplicitIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.internal.kernel.api.NodeCursor;\n@@ -25,108 +26,107 @@ import org.neo4j.storageengine.api.schema.IndexProgressor.ExplicitClient;\n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n \n class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor>\n-        implements org.neo4j.internal.kernel.api.NodeExplicitIndexCursor, ExplicitClient\n+    implements org.neo4j.internal.kernel.api.NodeExplicitIndexCursor, ExplicitClient\n {\n-    private Read read;\n-    private int expectedSize;\n-    private long node;\n-    private float score;\n-\n-    private final DefaultCursors pool;\n-\n-    DefaultNodeExplicitIndexCursor( DefaultCursors pool )\n-    {\n-        this.pool = pool;\n-        node = NO_ID;\n-    }\n-\n-    @Override\n-    public void initialize( ExplicitIndexProgressor progressor, int expectedSize )\n-    {\n-        super.initialize( progressor );\n-        this.expectedSize = expectedSize;\n-    }\n-\n-    @Override\n-    public boolean acceptEntity( long reference, float score )\n-    {\n-        this.node = reference;\n-        this.score = score;\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean next()\n-    {\n-        return innerNext();\n-    }\n-\n-    public void setRead( Read read )\n-    {\n-        this.read = read;\n-    }\n-\n-    @Override\n-    public int expectedTotalNumberOfResults()\n+  private Read read;\n+  private int expectedSize;\n+  private long node;\n+  private float score;\n+\n+  private final DefaultCursors pool;\n+\n+  DefaultNodeExplicitIndexCursor(DefaultCursors pool)\n+  {\n+    this.pool = pool;\n+    node = NO_ID;\n+  }\n+\n+  @Override\n+  public void initialize(ExplicitIndexProgressor progressor, int expectedSize)\n+  {\n+    super.initialize(progressor);\n+    this.expectedSize = expectedSize;\n+  }\n+\n+  @Override\n+  public boolean acceptEntity(long reference, float score)\n+  {\n+    this.node = reference;\n+    this.score = score;\n+    return true;\n+  }\n+\n+  @Override\n+  public boolean next()\n+  {\n+    return innerNext();\n+  }\n+\n+  public void setRead(Read read)\n+  {\n+    this.read = read;\n+  }\n+\n+  @Override\n+  public int expectedTotalNumberOfResults()\n+  {\n+    return expectedSize;\n+  }\n+\n+  @Override\n+  public float score()\n+  {\n+    return score;\n+  }\n+\n+  @Override\n+  public void node(NodeCursor cursor)\n+  {\n+    read.singleNode(node, cursor);\n+  }\n+\n+  @Override\n+  public long nodeReference()\n+  {\n+    return node;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    if (!isClosed())\n     {\n-        return expectedSize;\n-    }\n+      super.close();\n+      node = NO_ID;\n+      score = 0;\n+      expectedSize = 0;\n+      read = null;\n \n-    @Override\n-    public float score()\n-    {\n-        return score;\n+      pool.accept(this);\n     }\n-\n-    @Override\n-    public void node( NodeCursor cursor )\n+  }\n+\n+  @Override\n+  public boolean isClosed()\n+  {\n+    return super.isClosed();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    if (isClosed())\n     {\n-        read.singleNode( node, cursor );\n-    }\n-\n-    @Override\n-    public long nodeReference()\n-    {\n-        return node;\n-    }\n-\n-    @Override\n-    public void close()\n+      return \"NodeExplicitIndexCursor[closed state]\";\n+    } else\n     {\n-        if ( !isClosed() )\n-        {\n-            super.close();\n-            node = NO_ID;\n-            score = 0;\n-            expectedSize = 0;\n-            read = null;\n-\n-            pool.accept( this );\n-        }\n+      return \"NodeExplicitIndexCursor[node=\" + node + \", expectedSize=\" + expectedSize + \", score=\" + score +\n+          \", underlying record=\" + super.toString() + \" ]\";\n     }\n+  }\n \n-    @Override\n-    public boolean isClosed()\n-    {\n-        return super.isClosed();\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        if ( isClosed() )\n-        {\n-            return \"NodeExplicitIndexCursor[closed state]\";\n-        }\n-        else\n-        {\n-            return \"NodeExplicitIndexCursor[node=\" + node + \", expectedSize=\" + expectedSize + \", score=\" + score +\n-                    \", underlying record=\" + super.toString() + \" ]\";\n-        }\n-    }\n-\n-    public void release()\n-    {\n-        // nothing to do\n-    }\n+  public void release()\n+  {\n+    // nothing to do\n+  }\n }\n",
            "diff_size": 136
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3890/DefaultNodeExplicitIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3890/DefaultNodeExplicitIndexCursor.java\nindex c00ee104ffa..830a9c9ffd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3890/DefaultNodeExplicitIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3890/DefaultNodeExplicitIndexCursor.java\n@@ -24,8 +24,7 @@ import org.neo4j.storageengine.api.schema.IndexProgressor.ExplicitClient;\n \n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n \n-class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor>\n-        implements org.neo4j.internal.kernel.api.NodeExplicitIndexCursor, ExplicitClient\n+class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor> implements org.neo4j.internal.kernel.api.NodeExplicitIndexCursor, ExplicitClient\n {\n     private Read read;\n     private int expectedSize;\n@@ -120,13 +119,12 @@ class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor\n         }\n         else\n         {\n-            return \"NodeExplicitIndexCursor[node=\" + node + \", expectedSize=\" + expectedSize + \", score=\" + score +\n-                    \", underlying record=\" + super.toString() + \" ]\";\n-        }\n+            return \"NodeExplicitIndexCursor[node=\" + node + \", expectedSize=\" + expectedSize + \", score=\" + score + \", underlying record=\" + super.toString() + \" ]\";\n+    }\n     }\n \n     public void release()\n     {\n         // nothing to do\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "column": "58",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "120",
                    "column": "92",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "120",
                    "column": "112",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3890/DefaultNodeExplicitIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3890/DefaultNodeExplicitIndexCursor.java\nindex c00ee104ffa..34916e1182f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3890/DefaultNodeExplicitIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3890/DefaultNodeExplicitIndexCursor.java\n@@ -21,17 +21,15 @@ package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.internal.kernel.api.NodeCursor;\n import org.neo4j.storageengine.api.schema.IndexProgressor.ExplicitClient;\n-\n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n \n class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor>\n-        implements org.neo4j.internal.kernel.api.NodeExplicitIndexCursor, ExplicitClient\n+implements org.neo4j.internal.kernel.api.NodeExplicitIndexCursor, ExplicitClient\n {\n     private Read read;\n     private int expectedSize;\n     private long node;\n     private float score;\n-\n     private final DefaultCursors pool;\n \n     DefaultNodeExplicitIndexCursor( DefaultCursors pool )\n@@ -93,14 +91,13 @@ class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor\n     @Override\n     public void close()\n     {\n-        if ( !isClosed() )\n+        if ( ! isClosed() )\n         {\n-            super.close();\n+            super.close( );\n             node = NO_ID;\n             score = 0;\n             expectedSize = 0;\n             read = null;\n-\n             pool.accept( this );\n         }\n     }\n@@ -120,8 +117,7 @@ class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor\n         }\n         else\n         {\n-            return \"NodeExplicitIndexCursor[node=\" + node + \", expectedSize=\" + expectedSize + \", score=\" + score +\n-                    \", underlying record=\" + super.toString() + \" ]\";\n+            return \"NodeExplicitIndexCursor[node=\" + node+ \", expectedSize=\" + expectedSize+ \", score=\" + score+ \", underlying record=\" + super.toString() + \" ]\";\n         }\n     }\n \n@@ -129,4 +125,4 @@ class DefaultNodeExplicitIndexCursor extends IndexCursor<ExplicitIndexProgressor\n     {\n         // nothing to do\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
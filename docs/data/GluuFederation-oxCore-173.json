{
    "project_name": "GluuFederation-oxCore",
    "error_id": "173",
    "information": {
        "errors": [
            {
                "line": "67",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 236).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                    if (configuration.getUseSsl()) {\n                        if (StringUtils.isNotBlank(configuration.getSslTrustStoreFilePath())) {\n                            shardInfo = new JedisShardInfo(host, port, true, RedisProviderFactory.createTrustStoreSslSocketFactory(new File(configuration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n                        } else {\n                            shardInfo = new JedisShardInfo(host, port, true);\n                        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/173/RedisShardedProvider.java\nindex 42201ca991e..3c5806f214e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/173/RedisShardedProvider.java\n@@ -64,7 +64,9 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n                     final JedisShardInfo shardInfo;\n                     if (configuration.getUseSsl()) {\n                         if (StringUtils.isNotBlank(configuration.getSslTrustStoreFilePath())) {\n-                            shardInfo = new JedisShardInfo(host, port, true, RedisProviderFactory.createTrustStoreSslSocketFactory(new File(configuration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n+                            shardInfo = new JedisShardInfo(host, port, true,\n+                                RedisProviderFactory.createTrustStoreSslSocketFactory(new File(configuration.getSslTrustStoreFilePath())),\n+                                new SSLParameters(), new DefaultHostnameVerifier());\n                         } else {\n                             shardInfo = new JedisShardInfo(host, port, true);\n                         }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/173/RedisShardedProvider.java\nindex 42201ca991e..9dc9e793041 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/173/RedisShardedProvider.java\n@@ -147,4 +147,4 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n     public void clear() {\n         LOG.trace(\"clear not supported by sharded implemented\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/173/RedisShardedProvider.java\nindex 42201ca991e..2d06451e52b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/173/RedisShardedProvider.java\n@@ -9,7 +9,6 @@ import redis.clients.jedis.JedisPoolConfig;\n import redis.clients.jedis.JedisShardInfo;\n import redis.clients.jedis.ShardedJedis;\n import redis.clients.jedis.ShardedJedisPool;\n-\n import javax.net.ssl.SSLParameters;\n import java.io.File;\n import java.io.Serializable;\n@@ -21,10 +20,11 @@ import java.util.List;\n  *\n  * @author yuriyz on 02/23/2017.\n  */\n+\n+\n public class RedisShardedProvider extends AbstractRedisProvider {\n \n     private static final Logger LOG = LoggerFactory.getLogger(RedisShardedProvider.class);\n-\n     private ShardedJedisPool pool;\n \n     public RedisShardedProvider(RedisConfiguration redisConfiguration) {\n@@ -38,9 +38,7 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n             JedisPoolConfig poolConfig = new JedisPoolConfig();\n             poolConfig.setMaxTotal(1000);\n             poolConfig.setMinIdle(2);\n-\n             pool = new ShardedJedisPool(poolConfig, shards(redisConfiguration));\n-\n             testConnection();\n             LOG.debug(\"RedisShardedProvider started.\");\n         } catch (Exception e) {\n@@ -51,7 +49,6 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n \n     private static List<JedisShardInfo> shards(RedisConfiguration configuration) {\n         final String[] serverWithPorts = StringUtils.split(configuration.getServers().trim(), \",\");\n-\n         List<JedisShardInfo> shards = new ArrayList<JedisShardInfo>();\n         for (String serverWithPort : serverWithPorts) {\n             serverWithPort = serverWithPort.trim();\n@@ -59,7 +56,6 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n                 final String[] split = serverWithPort.trim().split(\":\");\n                 String host = split[0];\n                 int port = Integer.parseInt(split[1].trim());\n-\n                 try {\n                     final JedisShardInfo shardInfo;\n                     if (configuration.getUseSsl()) {\n@@ -71,6 +67,7 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n                     } else {\n                         shardInfo = new JedisShardInfo(host, port);\n                     }\n+\n                     shards.add(shardInfo);\n                 } catch (Exception e) {\n                     LOG.error(\"Failed to create shard info.\", e);\n@@ -79,14 +76,13 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n                 shards.add(new JedisShardInfo(serverWithPort));\n             }\n         }\n+\n         return shards;\n     }\n \n     public void destroy() {\n         LOG.debug(\"Destroying RedisShardedProvider\");\n-\n         pool.close();\n-\n         LOG.debug(\"Destroyed RedisShardedProvider\");\n     }\n \n@@ -104,6 +100,7 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n             if (value != null && value.length > 0) {\n                 deserialized = SerializationUtils.deserialize(value);\n             }\n+\n             return deserialized;\n         } finally {\n             jedis.close();\n@@ -114,7 +111,9 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n     public void put(int expirationInSeconds, String key, Object object) {\n         ShardedJedis jedis = pool.getResource();\n         try {\n-            String status = jedis.setex(key.getBytes(), expirationInSeconds, SerializationUtils.serialize((Serializable) object));\n+            String status = jedis.setex(key.getBytes(),\n+                expirationInSeconds,\n+                    SerializationUtils.serialize((Serializable) object));\n             LOG.trace(\"put - key: \" + key + \", status: \" + status);\n         } finally {\n             jedis.close();\n@@ -147,4 +146,5 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n     public void clear() {\n         LOG.trace(\"clear not supported by sharded implemented\");\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/173/RedisShardedProvider.java\nindex 42201ca991e..a58eb7a2418 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/173/RedisShardedProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/173/RedisShardedProvider.java\n@@ -64,7 +64,8 @@ public class RedisShardedProvider extends AbstractRedisProvider {\n                     final JedisShardInfo shardInfo;\n                     if (configuration.getUseSsl()) {\n                         if (StringUtils.isNotBlank(configuration.getSslTrustStoreFilePath())) {\n-                            shardInfo = new JedisShardInfo(host, port, true, RedisProviderFactory.createTrustStoreSslSocketFactory(new File(configuration.getSslTrustStoreFilePath())), new SSLParameters(), new DefaultHostnameVerifier());\n+                            shardInfo = new JedisShardInfo(host, port, true, RedisProviderFactory.createTrustStoreSslSocketFactory(new File(configuration.getSslTrustStoreFilePath(\n+                        ) )), new SSLParameters(), new DefaultHostnameVerifier());\n                         } else {\n                             shardInfo = new JedisShardInfo(host, port, true);\n                         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
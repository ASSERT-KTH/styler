{
    "project_name": "graphfoundation-ongdb",
    "error_id": "565",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/565/TransactionLogFilesContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/565/TransactionLogFilesContext.java\nindex d19bedea96b..1ec6a8d7512 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/565/TransactionLogFilesContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/565/TransactionLogFilesContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.files;\n \n import java.util.concurrent.atomic.AtomicLong;\n@@ -29,60 +30,60 @@ import org.neo4j.kernel.impl.transaction.log.entry.LogEntryReader;\n \n class TransactionLogFilesContext\n {\n-    private final AtomicLong rotationThreshold;\n-    private final LogEntryReader logEntryReader;\n-    private final LongSupplier lastCommittedTransactionIdSupplier;\n-    private final LongSupplier committingTransactionIdSupplier;\n-    private final Supplier<LogVersionRepository> logVersionRepositorySupplier;\n-    private final LogFileCreationMonitor logFileCreationMonitor;\n-    private final FileSystemAbstraction fileSystem;\n+  private final AtomicLong rotationThreshold;\n+  private final LogEntryReader logEntryReader;\n+  private final LongSupplier lastCommittedTransactionIdSupplier;\n+  private final LongSupplier committingTransactionIdSupplier;\n+  private final Supplier<LogVersionRepository> logVersionRepositorySupplier;\n+  private final LogFileCreationMonitor logFileCreationMonitor;\n+  private final FileSystemAbstraction fileSystem;\n \n-    TransactionLogFilesContext( AtomicLong rotationThreshold, LogEntryReader logEntryReader,\n-            LongSupplier lastCommittedTransactionIdSupplier, LongSupplier committingTransactionIdSupplier,\n-            LogFileCreationMonitor logFileCreationMonitor, Supplier<LogVersionRepository> logVersionRepositorySupplier,\n-            FileSystemAbstraction fileSystem )\n-    {\n-        this.rotationThreshold = rotationThreshold;\n-        this.logEntryReader = logEntryReader;\n-        this.lastCommittedTransactionIdSupplier = lastCommittedTransactionIdSupplier;\n-        this.committingTransactionIdSupplier = committingTransactionIdSupplier;\n-        this.logVersionRepositorySupplier = logVersionRepositorySupplier;\n-        this.logFileCreationMonitor = logFileCreationMonitor;\n-        this.fileSystem = fileSystem;\n-    }\n+  TransactionLogFilesContext(AtomicLong rotationThreshold, LogEntryReader logEntryReader,\n+                             LongSupplier lastCommittedTransactionIdSupplier, LongSupplier committingTransactionIdSupplier,\n+                             LogFileCreationMonitor logFileCreationMonitor, Supplier<LogVersionRepository> logVersionRepositorySupplier,\n+                             FileSystemAbstraction fileSystem)\n+  {\n+    this.rotationThreshold = rotationThreshold;\n+    this.logEntryReader = logEntryReader;\n+    this.lastCommittedTransactionIdSupplier = lastCommittedTransactionIdSupplier;\n+    this.committingTransactionIdSupplier = committingTransactionIdSupplier;\n+    this.logVersionRepositorySupplier = logVersionRepositorySupplier;\n+    this.logFileCreationMonitor = logFileCreationMonitor;\n+    this.fileSystem = fileSystem;\n+  }\n \n-    AtomicLong getRotationThreshold()\n-    {\n-        return rotationThreshold;\n-    }\n+  AtomicLong getRotationThreshold()\n+  {\n+    return rotationThreshold;\n+  }\n \n-    LogEntryReader getLogEntryReader()\n-    {\n-        return logEntryReader;\n-    }\n+  LogEntryReader getLogEntryReader()\n+  {\n+    return logEntryReader;\n+  }\n \n-    LogVersionRepository getLogVersionRepository()\n-    {\n-        return logVersionRepositorySupplier.get();\n-    }\n+  LogVersionRepository getLogVersionRepository()\n+  {\n+    return logVersionRepositorySupplier.get();\n+  }\n \n-    long getLastCommittedTransactionId()\n-    {\n-        return lastCommittedTransactionIdSupplier.getAsLong();\n-    }\n+  long getLastCommittedTransactionId()\n+  {\n+    return lastCommittedTransactionIdSupplier.getAsLong();\n+  }\n \n-    long committingTransactionId()\n-    {\n-        return committingTransactionIdSupplier.getAsLong();\n-    }\n+  long committingTransactionId()\n+  {\n+    return committingTransactionIdSupplier.getAsLong();\n+  }\n \n-    LogFileCreationMonitor getLogFileCreationMonitor()\n-    {\n-        return logFileCreationMonitor;\n-    }\n+  LogFileCreationMonitor getLogFileCreationMonitor()\n+  {\n+    return logFileCreationMonitor;\n+  }\n \n-    FileSystemAbstraction getFileSystem()\n-    {\n-        return fileSystem;\n-    }\n+  FileSystemAbstraction getFileSystem()\n+  {\n+    return fileSystem;\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/565/TransactionLogFilesContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/565/TransactionLogFilesContext.java\nindex d19bedea96b..1823339a69c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/565/TransactionLogFilesContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/565/TransactionLogFilesContext.java\n@@ -85,4 +85,4 @@ class TransactionLogFilesContext\n     {\n         return fileSystem;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "942",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Sparse double matrix that is represented by a group of sparse double vector {@link SparseDoubleVector}\n */\npublic class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\n  private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/942/SparseDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/942/SparseDoubleMatrix.java\nindex 23376359d1c..c2fc3e9ec7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/942/SparseDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/942/SparseDoubleMatrix.java\n@@ -28,6 +28,7 @@ public class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\n \r\n   /**\r\n    * Build a SparseDoubleMatrix\r\n+   *\r\n    * @param row row number\r\n    * @param col column number\r\n    */\r\n@@ -47,7 +48,7 @@ public class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\n    */\r\n   @Override\r\n   public SparseDoubleVector initVector(int rowIndex) {\r\n-    SparseDoubleVector ret = new SparseDoubleVector((int)col);\r\n+    SparseDoubleVector ret = new SparseDoubleVector((int) col);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/942/SparseDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/942/SparseDoubleMatrix.java\nindex 23376359d1c..0bfa6dd276a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/942/SparseDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/942/SparseDoubleMatrix.java\n@@ -47,9 +47,9 @@ public class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\n    */\r\n   @Override\r\n   public SparseDoubleVector initVector(int rowIndex) {\r\n-    SparseDoubleVector ret = new SparseDoubleVector((int)col);\r\n+    SparseDoubleVector ret = new SparseDoubleVector((int) col);\r\n     ret.setMatrixId(matrixId);\r\n     ret.setRowId(rowIndex);\r\n     return ret;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/942/SparseDoubleMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/942/SparseDoubleMatrix.java\nindex 23376359d1c..083178b7e93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/942/SparseDoubleMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/942/SparseDoubleMatrix.java\n@@ -14,29 +14,32 @@\n  * the License.\r\n  */\r\n \r\n-package com.tencent.angel.ml.math.matrix;\r\n-\r\n-import com.tencent.angel.ml.math.vector.SparseDoubleVector;\r\n-import org.apache.commons.logging.Log;\r\n+package com.tencent.angel.ml.math.matrix;\n+\n+import com.tencent.angel.ml.math.vector.SparseDoubleVector;\n+import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\r\n \r\n /**\r\n  * Sparse double matrix that is represented by a group of sparse double vector {@link SparseDoubleVector}\r\n- */\r\n-public class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\r\n+ */\n+\n+public class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\n+\n   private static final Log LOG = LogFactory.getLog(SparseDoubleMatrix.class);\r\n \r\n   /**\r\n    * Build a SparseDoubleMatrix\r\n    * @param row row number\r\n    * @param col column number\r\n-   */\r\n-  public SparseDoubleMatrix(int row, int col) {\r\n-    this(row, col, new SparseDoubleVector[row]);\r\n-  }\r\n-\r\n-  public SparseDoubleMatrix(int row, int col, SparseDoubleVector[] vectors) {\r\n-    super(row, col, vectors);\r\n+   */\n+\n+  public SparseDoubleMatrix(int row, int col) {\n+    this(row, col, new SparseDoubleVector[row]);\n+  }\n+\n+  public SparseDoubleMatrix(int row, int col, SparseDoubleVector[] vectors) {\n+    super(row, col, vectors);\n   }\r\n \r\n   /**\r\n@@ -44,12 +47,14 @@ public class SparseDoubleMatrix extends TDoubleMatrix<SparseDoubleVector> {\n    *\r\n    * @param rowIndex row index\r\n    * @return\r\n-   */\r\n-  @Override\r\n-  public SparseDoubleVector initVector(int rowIndex) {\r\n-    SparseDoubleVector ret = new SparseDoubleVector((int)col);\r\n-    ret.setMatrixId(matrixId);\r\n-    ret.setRowId(rowIndex);\r\n-    return ret;\r\n-  }\r\n-}\r\n+   */\n+\n+  @Override\n+  public SparseDoubleVector initVector(int rowIndex) {\n+    SparseDoubleVector ret = new SparseDoubleVector((int) col);\n+    ret.setMatrixId(matrixId);\n+    ret.setRowId(rowIndex);\n+    return ret;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
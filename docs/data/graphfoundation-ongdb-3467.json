{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3467",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3467/OnlineBackupExtensionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3467/OnlineBackupExtensionFactory.java\nindex e69f5a2aef0..be9f588da72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3467/OnlineBackupExtensionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3467/OnlineBackupExtensionFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup;\n \n import java.util.function.Supplier;\n@@ -41,65 +42,65 @@ import org.neo4j.kernel.lifecycle.Lifecycle;\n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n import org.neo4j.kernel.monitoring.Monitors;\n \n-@Service.Implementation( KernelExtensionFactory.class )\n+@Service.Implementation(KernelExtensionFactory.class)\n public class OnlineBackupExtensionFactory extends KernelExtensionFactory<OnlineBackupExtensionFactory.Dependencies>\n {\n-    static final String KEY = \"online backup\";\n+  static final String KEY = \"online backup\";\n \n-    public interface Dependencies\n-    {\n-        Config getConfig();\n+  public interface Dependencies\n+  {\n+    Config getConfig();\n \n-        GraphDatabaseAPI getGraphDatabaseAPI();\n+    GraphDatabaseAPI getGraphDatabaseAPI();\n \n-        LogService logService();\n+    LogService logService();\n \n-        Monitors monitors();\n+    Monitors monitors();\n \n-        NeoStoreDataSource neoStoreDataSource();\n+    NeoStoreDataSource neoStoreDataSource();\n \n-        Supplier<CheckPointer> checkPointer();\n+    Supplier<CheckPointer> checkPointer();\n \n-        Supplier<TransactionIdStore> transactionIdStoreSupplier();\n+    Supplier<TransactionIdStore> transactionIdStoreSupplier();\n \n-        Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier();\n+    Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier();\n \n-        Supplier<LogFileInformation> logFileInformationSupplier();\n+    Supplier<LogFileInformation> logFileInformationSupplier();\n \n-        FileSystemAbstraction fileSystemAbstraction();\n+    FileSystemAbstraction fileSystemAbstraction();\n \n-        PageCache pageCache();\n+    PageCache pageCache();\n \n-        StoreCopyCheckPointMutex storeCopyCheckPointMutex();\n-    }\n-\n-    public OnlineBackupExtensionFactory()\n-    {\n-        super( KEY );\n-    }\n+    StoreCopyCheckPointMutex storeCopyCheckPointMutex();\n+  }\n \n-    @Deprecated\n-    public Class<OnlineBackupSettings> getSettingsClass()\n-    {\n-        throw new AssertionError();\n-    }\n+  public OnlineBackupExtensionFactory()\n+  {\n+    super(KEY);\n+  }\n \n-    @Override\n-    public Lifecycle newInstance( KernelContext context, Dependencies dependencies )\n-    {\n-        if ( !isCausalClusterInstance( context ) )\n-        {\n-            return new OnlineBackupKernelExtension( dependencies.getConfig(), dependencies.getGraphDatabaseAPI(),\n-                    dependencies.logService().getInternalLogProvider(), dependencies.monitors(), dependencies.neoStoreDataSource(), dependencies.checkPointer(),\n-                    dependencies.transactionIdStoreSupplier(), dependencies.logicalTransactionStoreSupplier(), dependencies.logFileInformationSupplier(),\n-                    dependencies.fileSystemAbstraction(), dependencies.pageCache(), dependencies.storeCopyCheckPointMutex() );\n-        }\n-        return new LifecycleAdapter();\n-    }\n+  @Deprecated\n+  public Class<OnlineBackupSettings> getSettingsClass()\n+  {\n+    throw new AssertionError();\n+  }\n \n-    private static boolean isCausalClusterInstance( KernelContext kernelContext )\n+  @Override\n+  public Lifecycle newInstance(KernelContext context, Dependencies dependencies)\n+  {\n+    if (!isCausalClusterInstance(context))\n     {\n-        OperationalMode thisMode = kernelContext.databaseInfo().operationalMode;\n-        return OperationalMode.core.equals( thisMode ) || OperationalMode.read_replica.equals( thisMode );\n+      return new OnlineBackupKernelExtension(dependencies.getConfig(), dependencies.getGraphDatabaseAPI(),\n+          dependencies.logService().getInternalLogProvider(), dependencies.monitors(), dependencies.neoStoreDataSource(), dependencies.checkPointer(),\n+          dependencies.transactionIdStoreSupplier(), dependencies.logicalTransactionStoreSupplier(), dependencies.logFileInformationSupplier(),\n+          dependencies.fileSystemAbstraction(), dependencies.pageCache(), dependencies.storeCopyCheckPointMutex());\n     }\n+    return new LifecycleAdapter();\n+  }\n+\n+  private static boolean isCausalClusterInstance(KernelContext kernelContext)\n+  {\n+    OperationalMode thisMode = kernelContext.databaseInfo().operationalMode;\n+    return OperationalMode.core.equals(thisMode) || OperationalMode.read_replica.equals(thisMode);\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 495).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3467/OnlineBackupExtensionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3467/OnlineBackupExtensionFactory.java\nindex e69f5a2aef0..c2804db245a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3467/OnlineBackupExtensionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3467/OnlineBackupExtensionFactory.java\n@@ -89,10 +89,7 @@ public class OnlineBackupExtensionFactory extends KernelExtensionFactory<OnlineB\n     {\n         if ( !isCausalClusterInstance( context ) )\n         {\n-            return new OnlineBackupKernelExtension( dependencies.getConfig(), dependencies.getGraphDatabaseAPI(),\n-                    dependencies.logService().getInternalLogProvider(), dependencies.monitors(), dependencies.neoStoreDataSource(), dependencies.checkPointer(),\n-                    dependencies.transactionIdStoreSupplier(), dependencies.logicalTransactionStoreSupplier(), dependencies.logFileInformationSupplier(),\n-                    dependencies.fileSystemAbstraction(), dependencies.pageCache(), dependencies.storeCopyCheckPointMutex() );\n+            return new OnlineBackupKernelExtension( dependencies.getConfig(), dependencies.getGraphDatabaseAPI(), dependencies.logService().getInternalLogProvider(), dependencies.monitors(), dependencies.neoStoreDataSource(), dependencies.checkPointer(), dependencies.transactionIdStoreSupplier(), dependencies.logicalTransactionStoreSupplier(), dependencies.logFileInformationSupplier(), dependencies.fileSystemAbstraction(), dependencies.pageCache(), dependencies.storeCopyCheckPointMutex() );\n         }\n         return new LifecycleAdapter();\n     }\n@@ -102,4 +99,4 @@ public class OnlineBackupExtensionFactory extends KernelExtensionFactory<OnlineB\n         OperationalMode thisMode = kernelContext.databaseInfo().operationalMode;\n         return OperationalMode.core.equals( thisMode ) || OperationalMode.read_replica.equals( thisMode );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
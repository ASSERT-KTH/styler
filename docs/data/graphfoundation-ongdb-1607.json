{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1607",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1607/Downstream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1607/Downstream.java\nindex 3d1f13c3ca6..c2f40158ac1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1607/Downstream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1607/Downstream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.staging;\n \n import java.util.ArrayList;\n@@ -24,54 +25,53 @@ import java.util.concurrent.atomic.AtomicLong;\n \n class Downstream\n {\n-    private static final java.util.Comparator<TicketedBatch> TICKETED_BATCH_COMPARATOR =\n-            ( a, b ) -> Long.compare( b.ticket, a.ticket );\n+  private static final java.util.Comparator<TicketedBatch> TICKETED_BATCH_COMPARATOR =\n+      (a, b) -> Long.compare(b.ticket, a.ticket);\n \n-    private final Step<Object> downstream;\n-    private final AtomicLong doneBatches;\n-    private final ArrayList<TicketedBatch> batches;\n-    private long lastSendTicket = -1;\n+  private final Step<Object> downstream;\n+  private final AtomicLong doneBatches;\n+  private final ArrayList<TicketedBatch> batches;\n+  private long lastSendTicket = -1;\n \n-    Downstream( Step<Object> downstream, AtomicLong doneBatches )\n-    {\n-        this.downstream = downstream;\n-        this.doneBatches = doneBatches;\n-        batches = new ArrayList<>();\n-    }\n+  Downstream(Step<Object> downstream, AtomicLong doneBatches)\n+  {\n+    this.downstream = downstream;\n+    this.doneBatches = doneBatches;\n+    batches = new ArrayList<>();\n+  }\n \n-    long send()\n-    {\n-        // Sort in reverse, so the elements we want to send first are at the end.\n-        batches.sort( TICKETED_BATCH_COMPARATOR );\n-        long idleTimeSum = 0;\n-        long batchesDone = 0;\n+  long send()\n+  {\n+    // Sort in reverse, so the elements we want to send first are at the end.\n+    batches.sort(TICKETED_BATCH_COMPARATOR);\n+    long idleTimeSum = 0;\n+    long batchesDone = 0;\n \n-        for ( int i = batches.size() - 1; i >= 0 ; i-- )\n-        {\n-            TicketedBatch batch = batches.get( i );\n-            if ( batch.ticket == lastSendTicket + 1 )\n-            {\n-                batches.remove( i );\n-                lastSendTicket = batch.ticket;\n-                idleTimeSum += downstream.receive( batch.ticket, batch.batch );\n-                batchesDone++;\n-            }\n-            else\n-            {\n-                break;\n-            }\n-        }\n-\n-        doneBatches.getAndAdd( batchesDone );\n-        return idleTimeSum;\n+    for (int i = batches.size() - 1; i >= 0; i--)\n+    {\n+      TicketedBatch batch = batches.get(i);\n+      if (batch.ticket == lastSendTicket + 1)\n+      {\n+        batches.remove(i);\n+        lastSendTicket = batch.ticket;\n+        idleTimeSum += downstream.receive(batch.ticket, batch.batch);\n+        batchesDone++;\n+      } else\n+      {\n+        break;\n+      }\n     }\n \n-    void queue( TicketedBatch batch )\n+    doneBatches.getAndAdd(batchesDone);\n+    return idleTimeSum;\n+  }\n+\n+  void queue(TicketedBatch batch)\n+  {\n+    // Check that this is not a marker to flush the downstream.\n+    if (batch.ticket != -1 && batch.batch != null)\n     {\n-        // Check that this is not a marker to flush the downstream.\n-        if ( batch.ticket != -1 && batch.batch != null )\n-        {\n-            batches.add( batch );\n-        }\n+      batches.add(batch);\n     }\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1607/Downstream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1607/Downstream.java\nindex 3d1f13c3ca6..b7d476cc769 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1607/Downstream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1607/Downstream.java\n@@ -24,10 +24,8 @@ import java.util.concurrent.atomic.AtomicLong;\n \n class Downstream\n {\n-    private static final java.util.Comparator<TicketedBatch> TICKETED_BATCH_COMPARATOR =\n-            ( a, b ) -> Long.compare( b.ticket, a.ticket );\n-\n-    private final Step<Object> downstream;\n+    private static final java.util.Comparator<TicketedBatch> TICKETED_BATCH_COMPARATOR = ( a, b ) -> Long.compare( b.ticket, a.ticket );\n+private final Step<Object> downstream;\n     private final AtomicLong doneBatches;\n     private final ArrayList<TicketedBatch> batches;\n     private long lastSendTicket = -1;\n@@ -45,8 +43,7 @@ class Downstream\n         batches.sort( TICKETED_BATCH_COMPARATOR );\n         long idleTimeSum = 0;\n         long batchesDone = 0;\n-\n-        for ( int i = batches.size() - 1; i >= 0 ; i-- )\n+for ( int i = batches.size() - 1; i >= 0; i-- )\n         {\n             TicketedBatch batch = batches.get( i );\n             if ( batch.ticket == lastSendTicket + 1 )\n@@ -74,4 +71,4 @@ class Downstream\n             batches.add( batch );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3377",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3377/ReplicatedIdAllocationRequestSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3377/ReplicatedIdAllocationRequestSerializer.java\nindex 551024dbffe..cfafec97a32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3377/ReplicatedIdAllocationRequestSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3377/ReplicatedIdAllocationRequestSerializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.id;\n \n import java.io.IOException;\n@@ -30,26 +31,26 @@ import org.neo4j.storageengine.api.WritableChannel;\n public class ReplicatedIdAllocationRequestSerializer\n {\n \n-    private ReplicatedIdAllocationRequestSerializer()\n-    {\n-    }\n-\n-    public static void marshal( ReplicatedIdAllocationRequest idRangeRequest, WritableChannel channel )\n-            throws IOException\n-    {\n-        new MemberId.Marshal().marshal( idRangeRequest.owner(), channel );\n-        channel.putInt( idRangeRequest.idType().ordinal() );\n-        channel.putLong( idRangeRequest.idRangeStart() );\n-        channel.putInt( idRangeRequest.idRangeLength() );\n-    }\n-\n-    public static ReplicatedIdAllocationRequest unmarshal( ReadableChannel channel ) throws IOException, EndOfStreamException\n-    {\n-        MemberId owner = new MemberId.Marshal().unmarshal( channel );\n-        IdType idType = IdType.values()[ channel.getInt() ];\n-        long idRangeStart = channel.getLong();\n-        int idRangeLength = channel.getInt();\n-\n-        return new ReplicatedIdAllocationRequest( owner, idType, idRangeStart, idRangeLength );\n-    }\n+  private ReplicatedIdAllocationRequestSerializer()\n+  {\n+  }\n+\n+  public static void marshal(ReplicatedIdAllocationRequest idRangeRequest, WritableChannel channel)\n+      throws IOException\n+  {\n+    new MemberId.Marshal().marshal(idRangeRequest.owner(), channel);\n+    channel.putInt(idRangeRequest.idType().ordinal());\n+    channel.putLong(idRangeRequest.idRangeStart());\n+    channel.putInt(idRangeRequest.idRangeLength());\n+  }\n+\n+  public static ReplicatedIdAllocationRequest unmarshal(ReadableChannel channel) throws IOException, EndOfStreamException\n+  {\n+    MemberId owner = new MemberId.Marshal().unmarshal(channel);\n+    IdType idType = IdType.values()[channel.getInt()];\n+    long idRangeStart = channel.getLong();\n+    int idRangeLength = channel.getInt();\n+\n+    return new ReplicatedIdAllocationRequest(owner, idType, idRangeStart, idRangeLength);\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3377/ReplicatedIdAllocationRequestSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3377/ReplicatedIdAllocationRequestSerializer.java\nindex 551024dbffe..60b6d4286bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3377/ReplicatedIdAllocationRequestSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3377/ReplicatedIdAllocationRequestSerializer.java\n@@ -29,14 +29,12 @@ import org.neo4j.storageengine.api.WritableChannel;\n \n public class ReplicatedIdAllocationRequestSerializer\n {\n-\n     private ReplicatedIdAllocationRequestSerializer()\n     {\n     }\n \n-    public static void marshal( ReplicatedIdAllocationRequest idRangeRequest, WritableChannel channel )\n-            throws IOException\n-    {\n+    public static void marshal( ReplicatedIdAllocationRequest idRangeRequest, WritableChannel channel ) throws IOException\n+{\n         new MemberId.Marshal().marshal( idRangeRequest.owner(), channel );\n         channel.putInt( idRangeRequest.idType().ordinal() );\n         channel.putLong( idRangeRequest.idRangeStart() );\n@@ -46,10 +44,9 @@ public class ReplicatedIdAllocationRequestSerializer\n     public static ReplicatedIdAllocationRequest unmarshal( ReadableChannel channel ) throws IOException, EndOfStreamException\n     {\n         MemberId owner = new MemberId.Marshal().unmarshal( channel );\n-        IdType idType = IdType.values()[ channel.getInt() ];\n+        IdType idType = IdType.values()[channel.getInt() ];\n         long idRangeStart = channel.getLong();\n         int idRangeLength = channel.getInt();\n-\n-        return new ReplicatedIdAllocationRequest( owner, idType, idRangeStart, idRangeLength );\n+return new ReplicatedIdAllocationRequest( owner, idType, idRangeStart, idRangeLength );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
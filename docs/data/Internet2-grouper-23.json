{
    "project_name": "Internet2-grouper",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "24",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * style license a copy of which has been included with this distribution in\n * the LICENSE.txt file.\n * \n * Created on 07. March 2004 by Joe Walnes\n */\npackage edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/23/HierarchicalStreamWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/23/HierarchicalStreamWriter.java\nindex bbcc8838770..dc1581d5a00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/23/HierarchicalStreamWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/23/HierarchicalStreamWriter.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -21,9 +21,10 @@\n  * The software in this package is published under the terms of the BSD\r\n  * style license a copy of which has been included with this distribution in\r\n  * the LICENSE.txt file.\r\n- * \r\n+ *\r\n  * Created on 07. March 2004 by Joe Walnes\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io;\r\n \r\n /**\r\n@@ -31,45 +32,44 @@ package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io;\n  */\r\n public interface HierarchicalStreamWriter {\r\n \r\n-    void startNode(String name);\r\n-\r\n-    void addAttribute(String name, String value);\r\n+  void startNode(String name);\r\n \r\n-    /**\r\n-     * Write the value (text content) of the current node.\r\n-     */\r\n-    void setValue(String text);\r\n+  void addAttribute(String name, String value);\r\n \r\n-    void endNode();\r\n+  /**\r\n+   * Write the value (text content) of the current node.\r\n+   */\r\n+  void setValue(String text);\r\n \r\n-    /**\r\n-     * Flush the writer, if necessary.\r\n-     */\r\n-    void flush();\r\n+  void endNode();\r\n \r\n-    /**\r\n-     * Close the writer, if necessary.\r\n-     */\r\n-    void close();\r\n+  /**\r\n+   * Flush the writer, if necessary.\r\n+   */\r\n+  void flush();\r\n \r\n-    /**\r\n-     * Return the underlying HierarchicalStreamWriter implementation.\r\n-     *\r\n-     * <p>If a Converter needs to access methods of a specific HierarchicalStreamWriter implementation that are not\r\n-     * defined in the HierarchicalStreamWriter interface, it should call this method before casting. This is because\r\n-     * the writer passed to the Converter is often wrapped/decorated by another implementation to provide additional\r\n-     * functionality (such as XPath tracking).</p>\r\n-     *\r\n-     * <p>For example:</p>\r\n-     * <pre>MySpecificWriter mySpecificWriter = (MySpecificWriter)writer; <b>// INCORRECT!</b>\r\n-     * mySpecificWriter.doSomethingSpecific();</pre>\r\n+  /**\r\n+   * Close the writer, if necessary.\r\n+   */\r\n+  void close();\r\n \r\n-     * <pre>MySpecificWriter mySpecificWriter = (MySpecificWriter)writer.underlyingWriter();  <b>// CORRECT!</b>\r\n-     * mySpecificWriter.doSomethingSpecific();</pre>\r\n-     *\r\n-     * <p>Implementations of HierarchicalStreamWriter should return 'this', unless they are a decorator, in which case\r\n-     * they should delegate to whatever they are wrapping.</p>\r\n-     */\r\n-    HierarchicalStreamWriter underlyingWriter();\r\n+  /**\r\n+   * Return the underlying HierarchicalStreamWriter implementation.\r\n+   *\r\n+   * <p>If a Converter needs to access methods of a specific HierarchicalStreamWriter implementation that are not\r\n+   * defined in the HierarchicalStreamWriter interface, it should call this method before casting. This is because\r\n+   * the writer passed to the Converter is often wrapped/decorated by another implementation to provide additional\r\n+   * functionality (such as XPath tracking).</p>\r\n+   *\r\n+   * <p>For example:</p>\r\n+   * <pre>MySpecificWriter mySpecificWriter = (MySpecificWriter)writer; <b>// INCORRECT!</b>\r\n+   * mySpecificWriter.doSomethingSpecific();</pre>\r\n+   * <pre>MySpecificWriter mySpecificWriter = (MySpecificWriter)writer.underlyingWriter();  <b>// CORRECT!</b>\r\n+   * mySpecificWriter.doSomethingSpecific();</pre>\r\n+   *\r\n+   * <p>Implementations of HierarchicalStreamWriter should return 'this', unless they are a decorator, in which case\r\n+   * they should delegate to whatever they are wrapping.</p>\r\n+   */\r\n+  HierarchicalStreamWriter underlyingWriter();\r\n \r\n }\r\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/23/HierarchicalStreamWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/23/HierarchicalStreamWriter.java\nindex bbcc8838770..63d75d4c822 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/23/HierarchicalStreamWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/23/HierarchicalStreamWriter.java\n@@ -29,8 +29,7 @@ package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io;\n /**\r\n  * @author Joe Walnes\r\n  */\r\n-public interface HierarchicalStreamWriter {\r\n-\r\n+public interface HierarchicalStreamWriter {\n     void startNode(String name);\r\n \r\n     void addAttribute(String name, String value);\r\n@@ -72,4 +71,4 @@ public interface HierarchicalStreamWriter {\n      */\r\n     HierarchicalStreamWriter underlyingWriter();\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/23/HierarchicalStreamWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/23/HierarchicalStreamWriter.java\nindex bbcc8838770..5233e3c9a15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/23/HierarchicalStreamWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/23/HierarchicalStreamWriter.java\n@@ -28,28 +28,38 @@ package edu.internet2.middleware.grouperClientExt.com.thoughtworks.xstream.io;\n \r\n /**\r\n  * @author Joe Walnes\r\n- */\r\n-public interface HierarchicalStreamWriter {\r\n-\r\n-    void startNode(String name);\r\n-\r\n+ */\n+\n+\n+\n+public interface HierarchicalStreamWriter {\n+    void startNode(String name);\n+\n+\n     void addAttribute(String name, String value);\r\n \r\n     /**\r\n      * Write the value (text content) of the current node.\r\n-     */\r\n-    void setValue(String text);\r\n-\r\n+     */\n+\n+\n+    void setValue(String text);\n+\n+\n     void endNode();\r\n \r\n     /**\r\n      * Flush the writer, if necessary.\r\n-     */\r\n+     */\n+\n+\n     void flush();\r\n \r\n     /**\r\n      * Close the writer, if necessary.\r\n-     */\r\n+     */\n+\n+\n     void close();\r\n \r\n     /**\r\n@@ -69,7 +79,8 @@ public interface HierarchicalStreamWriter {\n      *\r\n      * <p>Implementations of HierarchicalStreamWriter should return 'this', unless they are a decorator, in which case\r\n      * they should delegate to whatever they are wrapping.</p>\r\n-     */\r\n-    HierarchicalStreamWriter underlyingWriter();\r\n-\r\n-}\r\n+     */\n+\n+\n+    HierarchicalStreamWriter underlyingWriter();\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
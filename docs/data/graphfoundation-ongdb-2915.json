{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2915",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2915/StoreInfoCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2915/StoreInfoCommand.java\nindex 1cd3a8061ff..ad384de70ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2915/StoreInfoCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2915/StoreInfoCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.io.IOException;\n@@ -41,53 +42,52 @@ import static org.neo4j.kernel.impl.store.format.RecordFormatSelector.findSucces\n \n public class StoreInfoCommand implements AdminCommand\n {\n-    private static final Arguments arguments = new Arguments()\n-            .withArgument( new MandatoryCanonicalPath( \"store\", \"path-to-dir\",\n-                    \"Path to database store.\" ) );\n-\n-    private Consumer<String> out;\n+  private static final Arguments arguments = new Arguments()\n+      .withArgument(new MandatoryCanonicalPath(\"store\", \"path-to-dir\",\n+          \"Path to database store.\"));\n \n-    public StoreInfoCommand( Consumer<String> out )\n-    {\n-        this.out = out;\n-    }\n+  private Consumer<String> out;\n \n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n-    {\n-        final Path storeDir = arguments.parse( args ).getMandatoryPath( \"store\" );\n+  public StoreInfoCommand(Consumer<String> out)\n+  {\n+    this.out = out;\n+  }\n \n-        Validators.CONTAINS_EXISTING_DATABASE.validate( storeDir.toFile() );\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    final Path storeDir = arguments.parse(args).getMandatoryPath(\"store\");\n \n-        try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n-                PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n-        {\n-            final String storeVersion = new StoreVersionCheck( pageCache )\n-                    .getVersion( storeDir.resolve( MetaDataStore.DEFAULT_NAME ).toFile() )\n-                    .orElseThrow(\n-                            () -> new CommandFailed( String.format( \"Could not find version metadata in store '%s'\",\n-                                    storeDir ) ) );\n+    Validators.CONTAINS_EXISTING_DATABASE.validate(storeDir.toFile());\n \n-            final String fmt = \"%-30s%s\";\n-            out.accept( String.format( fmt, \"Store format version:\", storeVersion ) );\n+    try (DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n+         PageCache pageCache = StandalonePageCacheFactory.createPageCache(fileSystem))\n+    {\n+      final String storeVersion = new StoreVersionCheck(pageCache)\n+          .getVersion(storeDir.resolve(MetaDataStore.DEFAULT_NAME).toFile())\n+          .orElseThrow(\n+              () -> new CommandFailed(String.format(\"Could not find version metadata in store '%s'\",\n+                  storeDir)));\n \n-            RecordFormats format = RecordFormatSelector.selectForVersion( storeVersion );\n-            out.accept( String.format( fmt, \"Store format introduced in:\", format.introductionVersion() ) );\n+      final String fmt = \"%-30s%s\";\n+      out.accept(String.format(fmt, \"Store format version:\", storeVersion));\n \n-            findSuccessor( format )\n-                    .map( next -> String.format( fmt, \"Store format superseded in:\", next.introductionVersion() ) )\n-                    .ifPresent( out );\n+      RecordFormats format = RecordFormatSelector.selectForVersion(storeVersion);\n+      out.accept(String.format(fmt, \"Store format introduced in:\", format.introductionVersion()));\n \n-            //out.accept( String.format( fmt, \"Current version:\", Version.getNeo4jVersion() ) );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new CommandFailed( e.getMessage(), e );\n-        }\n-    }\n+      findSuccessor(format)\n+          .map(next -> String.format(fmt, \"Store format superseded in:\", next.introductionVersion()))\n+          .ifPresent(out);\n \n-    public static Arguments arguments()\n+      //out.accept( String.format( fmt, \"Current version:\", Version.getNeo4jVersion() ) );\n+    } catch (IOException e)\n     {\n-        return arguments;\n+      throw new CommandFailed(e.getMessage(), e);\n     }\n+  }\n+\n+  public static Arguments arguments()\n+  {\n+    return arguments;\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 245).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "column": "81",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2915/StoreInfoCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2915/StoreInfoCommand.java\nindex 1cd3a8061ff..86c20340812 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2915/StoreInfoCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2915/StoreInfoCommand.java\n@@ -41,11 +41,9 @@ import static org.neo4j.kernel.impl.store.format.RecordFormatSelector.findSucces\n \n public class StoreInfoCommand implements AdminCommand\n {\n-    private static final Arguments arguments = new Arguments()\n-            .withArgument( new MandatoryCanonicalPath( \"store\", \"path-to-dir\",\n-                    \"Path to database store.\" ) );\n+    private static final Arguments arguments = new Arguments().withArgument( new MandatoryCanonicalPath( \"store\", \"path-to-dir\", \"Path to database store.\" ) );\n \n-    private Consumer<String> out;\n+private Consumer<String> out;\n \n     public StoreInfoCommand( Consumer<String> out )\n     {\n@@ -56,29 +54,19 @@ public class StoreInfoCommand implements AdminCommand\n     public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n     {\n         final Path storeDir = arguments.parse( args ).getMandatoryPath( \"store\" );\n-\n-        Validators.CONTAINS_EXISTING_DATABASE.validate( storeDir.toFile() );\n+Validators.CONTAINS_EXISTING_DATABASE.validate( storeDir.toFile() );\n \n         try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n-                PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n+PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n         {\n-            final String storeVersion = new StoreVersionCheck( pageCache )\n-                    .getVersion( storeDir.resolve( MetaDataStore.DEFAULT_NAME ).toFile() )\n-                    .orElseThrow(\n-                            () -> new CommandFailed( String.format( \"Could not find version metadata in store '%s'\",\n-                                    storeDir ) ) );\n-\n-            final String fmt = \"%-30s%s\";\n+            final String storeVersion = new StoreVersionCheck( pageCache ).getVersion( storeDir.resolve( MetaDataStore.DEFAULT_NAME ).toFile() ).orElseThrow(() -> new CommandFailed( String.format( \"Could not find version metadata in store '%s'\",\n+                                    storeDir ) ) ); final String fmt = \"%-30s%s\";\n             out.accept( String.format( fmt, \"Store format version:\", storeVersion ) );\n-\n-            RecordFormats format = RecordFormatSelector.selectForVersion( storeVersion );\n+RecordFormats format = RecordFormatSelector.selectForVersion( storeVersion );\n             out.accept( String.format( fmt, \"Store format introduced in:\", format.introductionVersion() ) );\n \n-            findSuccessor( format )\n-                    .map( next -> String.format( fmt, \"Store format superseded in:\", next.introductionVersion() ) )\n-                    .ifPresent( out );\n-\n-            //out.accept( String.format( fmt, \"Current version:\", Version.getNeo4jVersion() ) );\n+            findSuccessor( format ).map( next -> String.format( fmt, \"Store format superseded in:\", next.introductionVersion() ) ).ifPresent( out );\n+    //out.accept( String.format( fmt, \"Current version:\", Version.getNeo4jVersion() ) );\n         }\n         catch ( IOException e )\n         {\n@@ -90,4 +78,4 @@ public class StoreInfoCommand implements AdminCommand\n     {\n         return arguments;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'try' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "column": "170",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2915/StoreInfoCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2915/StoreInfoCommand.java\nindex 1cd3a8061ff..170e8f20949 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2915/StoreInfoCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2915/StoreInfoCommand.java\n@@ -22,7 +22,6 @@ package org.neo4j.commandline.dbms;\n import java.io.IOException;\n import java.nio.file.Path;\n import java.util.function.Consumer;\n-\n import org.neo4j.commandline.admin.AdminCommand;\n import org.neo4j.commandline.admin.CommandFailed;\n import org.neo4j.commandline.admin.IncorrectUsage;\n@@ -36,15 +35,11 @@ import org.neo4j.kernel.impl.store.format.RecordFormatSelector;\n import org.neo4j.kernel.impl.store.format.RecordFormats;\n import org.neo4j.kernel.impl.storemigration.StoreVersionCheck;\n import org.neo4j.kernel.impl.util.Validators;\n-\n import static org.neo4j.kernel.impl.store.format.RecordFormatSelector.findSuccessor;\n \n public class StoreInfoCommand implements AdminCommand\n {\n-    private static final Arguments arguments = new Arguments()\n-            .withArgument( new MandatoryCanonicalPath( \"store\", \"path-to-dir\",\n-                    \"Path to database store.\" ) );\n-\n+    private static final Arguments arguments = new Arguments().withArgument( new MandatoryCanonicalPath( \"store\", \"path-to-dir\", \"Path to database store.\" ) );\n     private Consumer<String> out;\n \n     public StoreInfoCommand( Consumer<String> out )\n@@ -56,27 +51,15 @@ public class StoreInfoCommand implements AdminCommand\n     public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n     {\n         final Path storeDir = arguments.parse( args ).getMandatoryPath( \"store\" );\n-\n         Validators.CONTAINS_EXISTING_DATABASE.validate( storeDir.toFile() );\n-\n-        try ( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction();\n-                PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ) )\n+        try( DefaultFileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction(); PageCache pageCache = StandalonePageCacheFactory.createPageCache( fileSystem ))\n         {\n-            final String storeVersion = new StoreVersionCheck( pageCache )\n-                    .getVersion( storeDir.resolve( MetaDataStore.DEFAULT_NAME ).toFile() )\n-                    .orElseThrow(\n-                            () -> new CommandFailed( String.format( \"Could not find version metadata in store '%s'\",\n-                                    storeDir ) ) );\n-\n+            final String storeVersion = new StoreVersionCheck( pageCache ).getVersion( storeDir.resolve( MetaDataStore.DEFAULT_NAME ).toFile() ).orElseThrow( () -> new CommandFailed( String.format( \"Could not find version metadata in store '%s'\", storeDir ) ) );\n             final String fmt = \"%-30s%s\";\n             out.accept( String.format( fmt, \"Store format version:\", storeVersion ) );\n-\n             RecordFormats format = RecordFormatSelector.selectForVersion( storeVersion );\n             out.accept( String.format( fmt, \"Store format introduced in:\", format.introductionVersion() ) );\n-\n-            findSuccessor( format )\n-                    .map( next -> String.format( fmt, \"Store format superseded in:\", next.introductionVersion() ) )\n-                    .ifPresent( out );\n+            findSuccessor( format ).map( next -> String.format( fmt, \"Store format superseded in:\", next.introductionVersion() ) ).ifPresent( out );\n \n             //out.accept( String.format( fmt, \"Current version:\", Version.getNeo4jVersion() ) );\n         }\n@@ -90,4 +73,4 @@ public class StoreInfoCommand implements AdminCommand\n     {\n         return arguments;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1114",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1114/InputRelationshipCacheReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1114/InputRelationshipCacheReader.java\nindex 2a1aee5e157..fc6d3fff48a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1114/InputRelationshipCacheReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1114/InputRelationshipCacheReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -33,56 +34,56 @@ import static org.neo4j.unsafe.impl.batchimport.input.InputCache.SAME_TYPE;\n  */\n public class InputRelationshipCacheReader extends InputEntityCacheReader\n {\n-    public InputRelationshipCacheReader( StoreChannel channel, StoreChannel header ) throws IOException\n-    {\n-        super( channel, header );\n-    }\n+  public InputRelationshipCacheReader(StoreChannel channel, StoreChannel header) throws IOException\n+  {\n+    super(channel, header);\n+  }\n \n-    @Override\n-    public InputChunk newChunk()\n-    {\n-        return new InputRelationshipDeserializer();\n-    }\n+  @Override\n+  public InputChunk newChunk()\n+  {\n+    return new InputRelationshipDeserializer();\n+  }\n \n-    class InputRelationshipDeserializer extends InputEntityDeserializer\n-    {\n-        protected String previousType;\n+  class InputRelationshipDeserializer extends InputEntityDeserializer\n+  {\n+    protected String previousType;\n \n-        @Override\n-        public boolean next( InputEntityVisitor visitor ) throws IOException\n-        {\n-            if ( !readProperties( visitor ) )\n-            {\n-                return false;\n-            }\n+    @Override\n+    public boolean next(InputEntityVisitor visitor) throws IOException\n+    {\n+      if (!readProperties(visitor))\n+      {\n+        return false;\n+      }\n \n-            // groups\n-            Group startNodeGroup = readGroup( 0 );\n-            Group endNodeGroup = readGroup( 1 );\n+      // groups\n+      Group startNodeGroup = readGroup(0);\n+      Group endNodeGroup = readGroup(1);\n \n-            // ids\n-            Object startNodeId = readValue();\n-            Object endNodeId = readValue();\n-            visitor.startId( startNodeId, startNodeGroup );\n-            visitor.endId( endNodeId, endNodeGroup );\n+      // ids\n+      Object startNodeId = readValue();\n+      Object endNodeId = readValue();\n+      visitor.startId(startNodeId, startNodeGroup);\n+      visitor.endId(endNodeId, endNodeGroup);\n \n-            // type\n-            byte typeMode = channel.get();\n-            switch ( typeMode )\n-            {\n-            case SAME_TYPE:\n-                visitor.type( previousType );\n-                break;\n-            case NEW_TYPE:\n-                visitor.type( previousType = (String) readToken( RELATIONSHIP_TYPE_TOKEN ) );\n-                break;\n-            case HAS_TYPE_ID:\n-                visitor.type( channel.getInt() );\n-                break;\n-            default:\n-                throw new IllegalArgumentException( \"Unrecognized type mode \" + typeMode );\n-            }\n-            return true;\n-        }\n+      // type\n+      byte typeMode = channel.get();\n+      switch (typeMode)\n+      {\n+        case SAME_TYPE:\n+          visitor.type(previousType);\n+          break;\n+        case NEW_TYPE:\n+          visitor.type(previousType = (String) readToken(RELATIONSHIP_TYPE_TOKEN));\n+          break;\n+        case HAS_TYPE_ID:\n+          visitor.type(channel.getInt());\n+          break;\n+        default:\n+          throw new IllegalArgumentException(\"Unrecognized type mode \" + typeMode);\n+      }\n+      return true;\n     }\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1114/InputRelationshipCacheReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1114/InputRelationshipCacheReader.java\nindex 2a1aee5e157..537c72a8099 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1114/InputRelationshipCacheReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1114/InputRelationshipCacheReader.java\n@@ -85,4 +85,4 @@ public class InputRelationshipCacheReader extends InputEntityCacheReader\n             return true;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4544",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4544/ColumnPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4544/ColumnPrinter.java\nindex fa7cd279d12..58f3452953d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4544/ColumnPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4544/ColumnPrinter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell;\n \n import java.rmi.RemoteException;\n@@ -28,119 +29,119 @@ import static java.lang.System.lineSeparator;\n \n public class ColumnPrinter\n {\n-    private final Column rawColumn;\n-    private final List<Column> columns = new ArrayList<>();\n+  private final Column rawColumn;\n+  private final List<Column> columns = new ArrayList<>();\n \n-    public ColumnPrinter( String... columnPrefixes )\n+  public ColumnPrinter(String... columnPrefixes)\n+  {\n+    for (String prefix : columnPrefixes)\n     {\n-        for ( String prefix : columnPrefixes )\n-        {\n-            this.columns.add( new Column( prefix ) );\n-        }\n-        rawColumn = new RawColumn( columnPrefixes[0].length() );\n+      this.columns.add(new Column(prefix));\n     }\n+    rawColumn = new RawColumn(columnPrefixes[0].length());\n+  }\n \n-    public void add( Object... columns )\n+  public void add(Object... columns)\n+  {\n+    Iterator<Column> columnIterator = this.columns.iterator();\n+    rawColumn.add(\"\");\n+    for (Object column : columns)\n     {\n-        Iterator<Column> columnIterator = this.columns.iterator();\n-        rawColumn.add( \"\" );\n-        for ( Object column : columns )\n-        {\n-            columnIterator.next().add( column.toString() );\n-        }\n-        if ( columnIterator.hasNext() )\n-        {\n-            throw new IllegalArgumentException( \"Invalid column count \" + columns.length + \", expected \" +\n-                    this.columns.size() );\n-        }\n+      columnIterator.next().add(column.toString());\n+    }\n+    if (columnIterator.hasNext())\n+    {\n+      throw new IllegalArgumentException(\"Invalid column count \" + columns.length + \", expected \" +\n+          this.columns.size());\n     }\n+  }\n \n-    public void addRaw( String string )\n+  public void addRaw(String string)\n+  {\n+    rawColumn.add(string);\n+    for (Column col : columns)\n     {\n-        rawColumn.add( string );\n-        for ( Column col : columns )\n-        {\n-            col.add( \"\" );\n-        }\n+      col.add(\"\");\n     }\n+  }\n \n-    public void print( Output out ) throws RemoteException\n+  public void print(Output out) throws RemoteException\n+  {\n+    Column firstColumn = columns.get(0);\n+    for (int line = 0; line < firstColumn.size(); line++)\n     {\n-        Column firstColumn = columns.get( 0 );\n-        for ( int line = 0; line < firstColumn.size(); line++ )\n+      if (!rawColumn.print(out, line))\n+      {\n+        firstColumn.print(out, line);\n+        for (int col = 1; col < columns.size(); col++)\n         {\n-            if ( !rawColumn.print( out, line ) )\n-            {\n-                firstColumn.print( out, line );\n-                for ( int col = 1; col < columns.size(); col++ )\n-                {\n-                    columns.get( col ).print( out, line );\n-                }\n-            }\n-            out.println();\n+          columns.get(col).print(out, line);\n         }\n+      }\n+      out.println();\n     }\n+  }\n \n-    private static class Column\n-    {\n-        private int widest;\n-        protected final List<String> cells = new ArrayList<>();\n-        protected final String prefix;\n+  private static class Column\n+  {\n+    private int widest;\n+    protected final List<String> cells = new ArrayList<>();\n+    protected final String prefix;\n \n-        Column( String prefix )\n-        {\n-            this.prefix = prefix;\n-        }\n+    Column(String prefix)\n+    {\n+      this.prefix = prefix;\n+    }\n \n-        void add( String cell )\n-        {\n-            cells.add( cell );\n-            widest = Math.max( widest, cell.length() );\n-        }\n+    void add(String cell)\n+    {\n+      cells.add(cell);\n+      widest = Math.max(widest, cell.length());\n+    }\n \n-        int size()\n-        {\n-            return cells.size();\n-        }\n+    int size()\n+    {\n+      return cells.size();\n+    }\n \n-        boolean print( Output out, int i ) throws RemoteException\n-        {\n-            String value = cells.get( i );\n-            out.print( prefix + value + multiply( \" \", widest - value.length() + 1 ) );\n-            return value.length() > 0;\n-        }\n+    boolean print(Output out, int i) throws RemoteException\n+    {\n+      String value = cells.get(i);\n+      out.print(prefix + value + multiply(\" \", widest - value.length() + 1));\n+      return value.length() > 0;\n     }\n+  }\n \n-    private static class RawColumn extends Column\n+  private static class RawColumn extends Column\n+  {\n+    RawColumn(int indentation)\n     {\n-        RawColumn( int indentation )\n-        {\n-            super( multiply( \" \", indentation ) );\n-        }\n+      super(multiply(\" \", indentation));\n+    }\n \n-        @Override\n-        boolean print( Output out, int i ) throws RemoteException\n+    @Override\n+    boolean print(Output out, int i) throws RemoteException\n+    {\n+      String value = cells.get(i);\n+      if (value.length() > 0)\n+      {\n+        for (String line : value.split(lineSeparator()))\n         {\n-            String value = cells.get( i );\n-            if ( value.length() > 0 )\n-            {\n-                for ( String line : value.split( lineSeparator() ) )\n-                {\n-                    out.print( prefix + \"|\" + line + lineSeparator() );\n-                }\n-                return true;\n-            }\n-            return false;\n+          out.print(prefix + \"|\" + line + lineSeparator());\n         }\n+        return true;\n+      }\n+      return false;\n     }\n+  }\n \n-    private static String multiply( String string, int count )\n+  private static String multiply(String string, int count)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    for (int i = 0; i < count; i++)\n     {\n-        StringBuilder builder = new StringBuilder();\n-        for ( int i = 0; i < count; i++ )\n-        {\n-            builder.append( string );\n-        }\n-        return builder.toString();\n+      builder.append(string);\n     }\n+    return builder.toString();\n+  }\n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4544/ColumnPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4544/ColumnPrinter.java\nindex fa7cd279d12..35a53e036cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4544/ColumnPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4544/ColumnPrinter.java\n@@ -37,7 +37,8 @@ public class ColumnPrinter\n         {\n             this.columns.add( new Column( prefix ) );\n         }\n-        rawColumn = new RawColumn( columnPrefixes[0].length() );\n+\n+rawColumn = new RawColumn( columnPrefixes[0].length() );\n     }\n \n     public void add( Object... columns )\n@@ -48,11 +49,11 @@ public class ColumnPrinter\n         {\n             columnIterator.next().add( column.toString() );\n         }\n-        if ( columnIterator.hasNext() )\n+\n+if ( columnIterator.hasNext() )\n         {\n-            throw new IllegalArgumentException( \"Invalid column count \" + columns.length + \", expected \" +\n-                    this.columns.size() );\n-        }\n+            throw new IllegalArgumentException( \"Invalid column count \" + columns.length + \", expected \" + this.columns.size() );\n+    }\n     }\n \n     public void addRaw( String string )\n@@ -141,6 +142,7 @@ public class ColumnPrinter\n         {\n             builder.append( string );\n         }\n-        return builder.toString();\n+\n+return builder.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
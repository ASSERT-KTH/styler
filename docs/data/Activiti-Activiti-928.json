{
    "project_name": "Activiti-Activiti",
    "error_id": "928",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.cmd;\n\nimport java.io.Serializable;\nimport java.util.Collection;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/928/GetTaskVariableInstancesCmd.java\nindex 48ccde6bb07..f7a86687685 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/928/GetTaskVariableInstancesCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/928/GetTaskVariableInstancesCmd.java\nindex 48ccde6bb07..ba5810a3eb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/928/GetTaskVariableInstancesCmd.java\n@@ -21,7 +21,6 @@ import java.io.Serializable;\n import java.util.Collection;\n import java.util.Map;\n import java.util.Map.Entry;\n-\n import org.activiti.engine.ActivitiIllegalArgumentException;\n import org.activiti.engine.ActivitiObjectNotFoundException;\n import org.activiti.engine.impl.interceptor.Command;\n@@ -30,57 +29,53 @@ import org.activiti.engine.impl.persistence.entity.TaskEntity;\n import org.activiti.engine.impl.persistence.entity.VariableInstance;\n import org.activiti.engine.task.Task;\n \n-public class GetTaskVariableInstancesCmd implements Command<Map<String, VariableInstance>>, Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-    protected String taskId;\n-    protected Collection<String> variableNames;\n-    protected boolean isLocal;\n+public class GetTaskVariableInstancesCmd implements Command<Map<String, VariableInstance>>, Serializable {\n \n-    public GetTaskVariableInstancesCmd(String taskId, Collection<String> variableNames, boolean isLocal) {\n-        this.taskId = taskId;\n-        this.variableNames = variableNames;\n-        this.isLocal = isLocal;\n+  private static final long serialVersionUID = 1L;\n+  protected String taskId;\n+  protected Collection<String> variableNames;\n+  protected boolean isLocal;\n+\n+  public GetTaskVariableInstancesCmd(String taskId, Collection<String> variableNames, boolean isLocal) {\n+    this.taskId = taskId;\n+    this.variableNames = variableNames;\n+    this.isLocal = isLocal;\n+  }\n+\n+  @Override\n+  public Map<String, VariableInstance> execute(CommandContext commandContext) {\n+    if (taskId == null) {\n+      throw new ActivitiIllegalArgumentException(\"taskId is null\");\n     }\n \n-    @Override\n-    public Map<String, VariableInstance> execute(CommandContext commandContext) {\n-        if (taskId == null) {\n-            throw new ActivitiIllegalArgumentException(\"taskId is null\");\n-        }\n-\n-        TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n-\n-        if (task == null) {\n-            throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\", Task.class);\n-        }\n-\n-        Map<String, VariableInstance> variables = null;\n-        if (variableNames == null) {\n-\n-            if (isLocal) {\n-                variables = task.getVariableInstancesLocal();\n-            } else {\n-                variables = task.getVariableInstances();\n-            }\n-\n-        } else {\n-            if (isLocal) {\n-                variables = task.getVariableInstancesLocal(variableNames, false);\n-            } else {\n-                variables = task.getVariableInstances(variableNames, false);\n-            }\n-\n-        }\n+    TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n+    if (task == null) {\n+      throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\",\n+                                                Task.class);\n+    }\n \n-        if (variables != null) {\n-            for (Entry<String, VariableInstance> entry : variables.entrySet()) {\n-                if (entry.getValue() != null) {\n-                    entry.getValue().getValue();\n-                }\n-            }\n+    Map<String, VariableInstance> variables = null;\n+    if (variableNames == null) {\n+      if (isLocal) {\n+        variables = task.getVariableInstancesLocal();\n+      } else {\n+        variables = task.getVariableInstances();\n+      }\n+    } else {\n+      if (isLocal) {\n+        variables = task.getVariableInstancesLocal(variableNames, false);\n+      } else {\n+        variables = task.getVariableInstances(variableNames, false);\n+      }\n+    }\n+    if (variables != null) {\n+        for (Entry<String, VariableInstance> entry : variables.entrySet()) {\n+          if (entry.getValue() != null) {\n+            entry.getValue().getValue();\n+          }\n         }\n-\n-        return variables;\n     }\n-}\n+    return variables;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 74
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/928/GetTaskVariableInstancesCmd.java\nindex 48ccde6bb07..f7a86687685 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/928/GetTaskVariableInstancesCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/928/GetTaskVariableInstancesCmd.java\nindex 48ccde6bb07..f7a86687685 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/928/GetTaskVariableInstancesCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/928/GetTaskVariableInstancesCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4054",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4054/RaftServerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4054/RaftServerModule.java\nindex 402463ab704..7f6df904ded 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4054/RaftServerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4054/RaftServerModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core;\n \n import io.netty.channel.ChannelInboundHandler;\n@@ -60,104 +61,104 @@ import static java.util.Collections.singletonList;\n \n class RaftServerModule\n {\n-    private final PlatformModule platformModule;\n-    private final ConsensusModule consensusModule;\n-    private final IdentityModule identityModule;\n-    private final ApplicationSupportedProtocols supportedApplicationProtocol;\n-    private final LocalDatabase localDatabase;\n-    private final MessageLogger<MemberId> messageLogger;\n-    private final LogProvider logProvider;\n-    private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n-    private CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider;\n-    private final Collection<ModifierSupportedProtocols> supportedModifierProtocols;\n-\n-    private RaftServerModule( PlatformModule platformModule, ConsensusModule consensusModule, IdentityModule identityModule, CoreServerModule coreServerModule,\n-            LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory, MessageLogger<MemberId> messageLogger,\n-            CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider,\n-            ApplicationSupportedProtocols supportedApplicationProtocol,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler )\n-    {\n-        this.platformModule = platformModule;\n-        this.consensusModule = consensusModule;\n-        this.identityModule = identityModule;\n-        this.supportedApplicationProtocol = supportedApplicationProtocol;\n-        this.localDatabase = localDatabase;\n-        this.messageLogger = messageLogger;\n-        this.logProvider = platformModule.logging.getInternalLogProvider();\n-        this.pipelineBuilderFactory = pipelineBuilderFactory;\n-        this.catchupAddressProvider = catchupAddressProvider;\n-        this.supportedModifierProtocols = supportedModifierProtocols;\n-\n-        LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> messageHandlerChain = createMessageHandlerChain( coreServerModule );\n-\n-        createRaftServer( coreServerModule, messageHandlerChain, installedProtocolsHandler );\n-    }\n-\n-    static void createAndStart( PlatformModule platformModule, ConsensusModule consensusModule, IdentityModule identityModule,\n-            CoreServerModule coreServerModule, LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory,\n-            MessageLogger<MemberId> messageLogger, CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider addressProvider,\n-            ApplicationSupportedProtocols supportedApplicationProtocol,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler )\n-    {\n-        new RaftServerModule( platformModule, consensusModule, identityModule, coreServerModule, localDatabase, pipelineBuilderFactory, messageLogger,\n-                        addressProvider, supportedApplicationProtocol, supportedModifierProtocols, installedProtocolsHandler );\n-    }\n-\n-    private void createRaftServer( CoreServerModule coreServerModule, LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> messageHandlerChain,\n-            ChannelInboundHandler installedProtocolsHandler )\n-    {\n-        ApplicationProtocolRepository applicationProtocolRepository =\n-                new ApplicationProtocolRepository( Protocol.ApplicationProtocols.values(), supportedApplicationProtocol );\n-        ModifierProtocolRepository modifierProtocolRepository =\n-                new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n-\n-        RaftMessageNettyHandler nettyHandler = new RaftMessageNettyHandler( logProvider );\n-        RaftProtocolServerInstaller.Factory raftProtocolServerInstaller =\n-                new RaftProtocolServerInstaller.Factory( nettyHandler, pipelineBuilderFactory, logProvider );\n-        ProtocolInstallerRepository<ProtocolInstaller.Orientation.Server> protocolInstallerRepository =\n-                new ProtocolInstallerRepository<>( singletonList( raftProtocolServerInstaller ), ModifierProtocolInstaller.allServerInstallers );\n-\n-        HandshakeServerInitializer handshakeServerInitializer = new HandshakeServerInitializer( applicationProtocolRepository, modifierProtocolRepository,\n-                protocolInstallerRepository, pipelineBuilderFactory, logProvider );\n-\n-        ListenSocketAddress raftListenAddress = platformModule.config.get( CausalClusteringSettings.raft_listen_address );\n-        Server raftServer = new Server( handshakeServerInitializer, installedProtocolsHandler, logProvider, platformModule.logging.getUserLogProvider(),\n-                raftListenAddress, \"raft-server\" );\n-\n-        LoggingInbound<ReceivedInstantClusterIdAwareMessage<?>> loggingRaftInbound =\n-                new LoggingInbound<>( nettyHandler, messageLogger, identityModule.myself() );\n-        loggingRaftInbound.registerHandler( messageHandlerChain );\n-\n-        platformModule.life.add( raftServer ); // must start before core state so that it can trigger snapshot downloads when necessary\n-        platformModule.life.add( coreServerModule.createCoreLife( messageHandlerChain ) );\n-        platformModule.life.add( coreServerModule.catchupServer() ); // must start last and stop first, since it handles external requests\n-        coreServerModule.backupServer().ifPresent( platformModule.life::add );\n-        platformModule.life.add( coreServerModule.downloadService() );\n-    }\n-\n-    private LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> createMessageHandlerChain( CoreServerModule coreServerModule )\n-    {\n-        RaftMessageApplier messageApplier =\n-                new RaftMessageApplier( localDatabase, logProvider, consensusModule.raftMachine(), coreServerModule.downloadService(),\n-                        coreServerModule.commandApplicationProcess(), catchupAddressProvider );\n-\n-        ComposableMessageHandler monitoringHandler = RaftMessageMonitoringHandler.composable( platformModule.clock, platformModule.monitors );\n-\n-        int queueSize = platformModule.config.get( CausalClusteringSettings.raft_in_queue_size );\n-        int maxBatch = platformModule.config.get( CausalClusteringSettings.raft_in_queue_max_batch );\n-        Function<Runnable, ContinuousJob> jobFactory = runnable ->\n-                new ContinuousJob( platformModule.jobScheduler.threadFactory( new JobScheduler.Group( \"raft-batch-handler\" ) ), runnable, logProvider );\n-        ComposableMessageHandler batchingMessageHandler = BatchingMessageHandler.composable( queueSize, maxBatch, jobFactory, logProvider );\n-\n-        ComposableMessageHandler leaderAvailabilityHandler =\n-                LeaderAvailabilityHandler.composable( consensusModule.getLeaderAvailabilityTimers(), consensusModule.raftMachine()::term );\n-\n-        ComposableMessageHandler clusterBindingHandler = ClusterBindingHandler.composable( logProvider );\n-\n-        return clusterBindingHandler\n-                .compose( leaderAvailabilityHandler )\n-                .compose( batchingMessageHandler )\n-                .compose( monitoringHandler )\n-                .apply( messageApplier );\n-    }\n+  private final PlatformModule platformModule;\n+  private final ConsensusModule consensusModule;\n+  private final IdentityModule identityModule;\n+  private final ApplicationSupportedProtocols supportedApplicationProtocol;\n+  private final LocalDatabase localDatabase;\n+  private final MessageLogger<MemberId> messageLogger;\n+  private final LogProvider logProvider;\n+  private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n+  private CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider;\n+  private final Collection<ModifierSupportedProtocols> supportedModifierProtocols;\n+\n+  private RaftServerModule(PlatformModule platformModule, ConsensusModule consensusModule, IdentityModule identityModule, CoreServerModule coreServerModule,\n+                           LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory, MessageLogger<MemberId> messageLogger,\n+                           CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider,\n+                           ApplicationSupportedProtocols supportedApplicationProtocol,\n+                           Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler)\n+  {\n+    this.platformModule = platformModule;\n+    this.consensusModule = consensusModule;\n+    this.identityModule = identityModule;\n+    this.supportedApplicationProtocol = supportedApplicationProtocol;\n+    this.localDatabase = localDatabase;\n+    this.messageLogger = messageLogger;\n+    this.logProvider = platformModule.logging.getInternalLogProvider();\n+    this.pipelineBuilderFactory = pipelineBuilderFactory;\n+    this.catchupAddressProvider = catchupAddressProvider;\n+    this.supportedModifierProtocols = supportedModifierProtocols;\n+\n+    LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> messageHandlerChain = createMessageHandlerChain(coreServerModule);\n+\n+    createRaftServer(coreServerModule, messageHandlerChain, installedProtocolsHandler);\n+  }\n+\n+  static void createAndStart(PlatformModule platformModule, ConsensusModule consensusModule, IdentityModule identityModule,\n+                             CoreServerModule coreServerModule, LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory,\n+                             MessageLogger<MemberId> messageLogger, CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider addressProvider,\n+                             ApplicationSupportedProtocols supportedApplicationProtocol,\n+                             Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler)\n+  {\n+    new RaftServerModule(platformModule, consensusModule, identityModule, coreServerModule, localDatabase, pipelineBuilderFactory, messageLogger,\n+        addressProvider, supportedApplicationProtocol, supportedModifierProtocols, installedProtocolsHandler);\n+  }\n+\n+  private void createRaftServer(CoreServerModule coreServerModule, LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> messageHandlerChain,\n+                                ChannelInboundHandler installedProtocolsHandler)\n+  {\n+    ApplicationProtocolRepository applicationProtocolRepository =\n+        new ApplicationProtocolRepository(Protocol.ApplicationProtocols.values(), supportedApplicationProtocol);\n+    ModifierProtocolRepository modifierProtocolRepository =\n+        new ModifierProtocolRepository(Protocol.ModifierProtocols.values(), supportedModifierProtocols);\n+\n+    RaftMessageNettyHandler nettyHandler = new RaftMessageNettyHandler(logProvider);\n+    RaftProtocolServerInstaller.Factory raftProtocolServerInstaller =\n+        new RaftProtocolServerInstaller.Factory(nettyHandler, pipelineBuilderFactory, logProvider);\n+    ProtocolInstallerRepository<ProtocolInstaller.Orientation.Server> protocolInstallerRepository =\n+        new ProtocolInstallerRepository<>(singletonList(raftProtocolServerInstaller), ModifierProtocolInstaller.allServerInstallers);\n+\n+    HandshakeServerInitializer handshakeServerInitializer = new HandshakeServerInitializer(applicationProtocolRepository, modifierProtocolRepository,\n+        protocolInstallerRepository, pipelineBuilderFactory, logProvider);\n+\n+    ListenSocketAddress raftListenAddress = platformModule.config.get(CausalClusteringSettings.raft_listen_address);\n+    Server raftServer = new Server(handshakeServerInitializer, installedProtocolsHandler, logProvider, platformModule.logging.getUserLogProvider(),\n+        raftListenAddress, \"raft-server\");\n+\n+    LoggingInbound<ReceivedInstantClusterIdAwareMessage<?>> loggingRaftInbound =\n+        new LoggingInbound<>(nettyHandler, messageLogger, identityModule.myself());\n+    loggingRaftInbound.registerHandler(messageHandlerChain);\n+\n+    platformModule.life.add(raftServer); // must start before core state so that it can trigger snapshot downloads when necessary\n+    platformModule.life.add(coreServerModule.createCoreLife(messageHandlerChain));\n+    platformModule.life.add(coreServerModule.catchupServer()); // must start last and stop first, since it handles external requests\n+    coreServerModule.backupServer().ifPresent(platformModule.life::add);\n+    platformModule.life.add(coreServerModule.downloadService());\n+  }\n+\n+  private LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> createMessageHandlerChain(CoreServerModule coreServerModule)\n+  {\n+    RaftMessageApplier messageApplier =\n+        new RaftMessageApplier(localDatabase, logProvider, consensusModule.raftMachine(), coreServerModule.downloadService(),\n+            coreServerModule.commandApplicationProcess(), catchupAddressProvider);\n+\n+    ComposableMessageHandler monitoringHandler = RaftMessageMonitoringHandler.composable(platformModule.clock, platformModule.monitors);\n+\n+    int queueSize = platformModule.config.get(CausalClusteringSettings.raft_in_queue_size);\n+    int maxBatch = platformModule.config.get(CausalClusteringSettings.raft_in_queue_max_batch);\n+    Function<Runnable, ContinuousJob> jobFactory = runnable ->\n+        new ContinuousJob(platformModule.jobScheduler.threadFactory(new JobScheduler.Group(\"raft-batch-handler\")), runnable, logProvider);\n+    ComposableMessageHandler batchingMessageHandler = BatchingMessageHandler.composable(queueSize, maxBatch, jobFactory, logProvider);\n+\n+    ComposableMessageHandler leaderAvailabilityHandler =\n+        LeaderAvailabilityHandler.composable(consensusModule.getLeaderAvailabilityTimers(), consensusModule.raftMachine()::term);\n+\n+    ComposableMessageHandler clusterBindingHandler = ClusterBindingHandler.composable(logProvider);\n+\n+    return clusterBindingHandler\n+        .compose(leaderAvailabilityHandler)\n+        .compose(batchingMessageHandler)\n+        .compose(monitoringHandler)\n+        .apply(messageApplier);\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 255).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 234).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4054/RaftServerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4054/RaftServerModule.java\nindex 402463ab704..4bf6fadca08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4054/RaftServerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4054/RaftServerModule.java\n@@ -74,8 +74,7 @@ class RaftServerModule\n     private RaftServerModule( PlatformModule platformModule, ConsensusModule consensusModule, IdentityModule identityModule, CoreServerModule coreServerModule,\n             LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory, MessageLogger<MemberId> messageLogger,\n             CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider,\n-            ApplicationSupportedProtocols supportedApplicationProtocol,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler )\n+            ApplicationSupportedProtocols supportedApplicationProtocol, Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler )\n     {\n         this.platformModule = platformModule;\n         this.consensusModule = consensusModule;\n@@ -94,41 +93,28 @@ class RaftServerModule\n     }\n \n     static void createAndStart( PlatformModule platformModule, ConsensusModule consensusModule, IdentityModule identityModule,\n-            CoreServerModule coreServerModule, LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory,\n-            MessageLogger<MemberId> messageLogger, CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider addressProvider,\n-            ApplicationSupportedProtocols supportedApplicationProtocol,\n-            Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler )\n+            CoreServerModule coreServerModule, LocalDatabase localDatabase, NettyPipelineBuilderFactory pipelineBuilderFactory, MessageLogger<MemberId> messageLogger, CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider addressProvider,\n+            ApplicationSupportedProtocols supportedApplicationProtocol, Collection<ModifierSupportedProtocols> supportedModifierProtocols, ChannelInboundHandler installedProtocolsHandler )\n     {\n-        new RaftServerModule( platformModule, consensusModule, identityModule, coreServerModule, localDatabase, pipelineBuilderFactory, messageLogger,\n-                        addressProvider, supportedApplicationProtocol, supportedModifierProtocols, installedProtocolsHandler );\n+        new RaftServerModule( platformModule, consensusModule, identityModule, coreServerModule, localDatabase, pipelineBuilderFactory, messageLogger, addressProvider, supportedApplicationProtocol, supportedModifierProtocols, installedProtocolsHandler );\n     }\n \n     private void createRaftServer( CoreServerModule coreServerModule, LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> messageHandlerChain,\n             ChannelInboundHandler installedProtocolsHandler )\n     {\n-        ApplicationProtocolRepository applicationProtocolRepository =\n-                new ApplicationProtocolRepository( Protocol.ApplicationProtocols.values(), supportedApplicationProtocol );\n-        ModifierProtocolRepository modifierProtocolRepository =\n-                new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n-\n-        RaftMessageNettyHandler nettyHandler = new RaftMessageNettyHandler( logProvider );\n-        RaftProtocolServerInstaller.Factory raftProtocolServerInstaller =\n-                new RaftProtocolServerInstaller.Factory( nettyHandler, pipelineBuilderFactory, logProvider );\n-        ProtocolInstallerRepository<ProtocolInstaller.Orientation.Server> protocolInstallerRepository =\n-                new ProtocolInstallerRepository<>( singletonList( raftProtocolServerInstaller ), ModifierProtocolInstaller.allServerInstallers );\n-\n-        HandshakeServerInitializer handshakeServerInitializer = new HandshakeServerInitializer( applicationProtocolRepository, modifierProtocolRepository,\n+        ApplicationProtocolRepository applicationProtocolRepository = new ApplicationProtocolRepository( Protocol.ApplicationProtocols.values(), supportedApplicationProtocol );\n+ModifierProtocolRepository modifierProtocolRepository = new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n+RaftMessageNettyHandler nettyHandler = new RaftMessageNettyHandler( logProvider );\n+        RaftProtocolServerInstaller.Factory raftProtocolServerInstaller = new RaftProtocolServerInstaller.Factory( nettyHandler, pipelineBuilderFactory, logProvider );\n+ProtocolInstallerRepository<ProtocolInstaller.Orientation.Server> protocolInstallerRepository = new ProtocolInstallerRepository<>( singletonList( raftProtocolServerInstaller ), ModifierProtocolInstaller.allServerInstallers );\n+HandshakeServerInitializer handshakeServerInitializer = new HandshakeServerInitializer( applicationProtocolRepository, modifierProtocolRepository,\n                 protocolInstallerRepository, pipelineBuilderFactory, logProvider );\n-\n-        ListenSocketAddress raftListenAddress = platformModule.config.get( CausalClusteringSettings.raft_listen_address );\n+ListenSocketAddress raftListenAddress = platformModule.config.get( CausalClusteringSettings.raft_listen_address );\n         Server raftServer = new Server( handshakeServerInitializer, installedProtocolsHandler, logProvider, platformModule.logging.getUserLogProvider(),\n                 raftListenAddress, \"raft-server\" );\n-\n-        LoggingInbound<ReceivedInstantClusterIdAwareMessage<?>> loggingRaftInbound =\n-                new LoggingInbound<>( nettyHandler, messageLogger, identityModule.myself() );\n-        loggingRaftInbound.registerHandler( messageHandlerChain );\n-\n-        platformModule.life.add( raftServer ); // must start before core state so that it can trigger snapshot downloads when necessary\n+LoggingInbound<ReceivedInstantClusterIdAwareMessage<?>> loggingRaftInbound = new LoggingInbound<>( nettyHandler, messageLogger, identityModule.myself() );\n+loggingRaftInbound.registerHandler( messageHandlerChain );\n+platformModule.life.add( raftServer ); // must start before core state so that it can trigger snapshot downloads when necessary\n         platformModule.life.add( coreServerModule.createCoreLife( messageHandlerChain ) );\n         platformModule.life.add( coreServerModule.catchupServer() ); // must start last and stop first, since it handles external requests\n         coreServerModule.backupServer().ifPresent( platformModule.life::add );\n@@ -137,27 +123,18 @@ class RaftServerModule\n \n     private LifecycleMessageHandler<ReceivedInstantClusterIdAwareMessage<?>> createMessageHandlerChain( CoreServerModule coreServerModule )\n     {\n-        RaftMessageApplier messageApplier =\n-                new RaftMessageApplier( localDatabase, logProvider, consensusModule.raftMachine(), coreServerModule.downloadService(),\n-                        coreServerModule.commandApplicationProcess(), catchupAddressProvider );\n-\n-        ComposableMessageHandler monitoringHandler = RaftMessageMonitoringHandler.composable( platformModule.clock, platformModule.monitors );\n+        RaftMessageApplier messageApplier = new RaftMessageApplier( localDatabase, logProvider, consensusModule.raftMachine(), coreServerModule.downloadService(), coreServerModule.commandApplicationProcess(), catchupAddressProvider );\n+ComposableMessageHandler monitoringHandler = RaftMessageMonitoringHandler.composable( platformModule.clock, platformModule.monitors );\n \n         int queueSize = platformModule.config.get( CausalClusteringSettings.raft_in_queue_size );\n         int maxBatch = platformModule.config.get( CausalClusteringSettings.raft_in_queue_max_batch );\n-        Function<Runnable, ContinuousJob> jobFactory = runnable ->\n-                new ContinuousJob( platformModule.jobScheduler.threadFactory( new JobScheduler.Group( \"raft-batch-handler\" ) ), runnable, logProvider );\n-        ComposableMessageHandler batchingMessageHandler = BatchingMessageHandler.composable( queueSize, maxBatch, jobFactory, logProvider );\n-\n-        ComposableMessageHandler leaderAvailabilityHandler =\n-                LeaderAvailabilityHandler.composable( consensusModule.getLeaderAvailabilityTimers(), consensusModule.raftMachine()::term );\n-\n-        ComposableMessageHandler clusterBindingHandler = ClusterBindingHandler.composable( logProvider );\n-\n-        return clusterBindingHandler\n-                .compose( leaderAvailabilityHandler )\n+        Function<Runnable,ContinuousJob> jobFactory = runnable -> new ContinuousJob( platformModule.jobScheduler.threadFactory( new JobScheduler.Group( \"raft-batch-handler\" ) ), runnable, logProvider );\n+ComposableMessageHandler batchingMessageHandler = BatchingMessageHandler.composable( queueSize, maxBatch, jobFactory, logProvider );\n+ComposableMessageHandler leaderAvailabilityHandler = LeaderAvailabilityHandler.composable( consensusModule.getLeaderAvailabilityTimers(), consensusModule.raftMachine()::term );\n+ComposableMessageHandler clusterBindingHandler = ClusterBindingHandler.composable( logProvider );\n+return clusterBindingHandler.compose( leaderAvailabilityHandler )\n                 .compose( batchingMessageHandler )\n                 .compose( monitoringHandler )\n                 .apply( messageApplier );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
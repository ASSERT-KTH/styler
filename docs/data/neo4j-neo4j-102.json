{
    "project_name": "neo4j-neo4j",
    "error_id": "102",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/102/RecordLoad.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/102/RecordLoad.java\nindex 0f5cfca7c80..989ebab7c3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/102/RecordLoad.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/102/RecordLoad.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import org.neo4j.io.pagecache.CursorException;\n@@ -25,7 +26,7 @@ import org.neo4j.kernel.impl.store.InvalidRecordException;\n \n /**\n  * Specifies what happens when loading records, based on inUse status.\n- *\n+ * <p>\n  * Roughly this is what happens for the different modes:\n  * <ul>\n  * <li>{@link RecordLoad#CHECK}: Load at least data to determine whether it's in use or not.\n@@ -39,19 +40,19 @@ import org.neo4j.kernel.impl.store.InvalidRecordException;\n  * <li>{@link RecordLoad#ALWAYS}: always load all record data, even if the record is marked as not in use, but unlike {@link RecordLoad#FORCE} it will\n  * throw decoding and out-of-bounds exceptions. Will not throw InvalidRecordExceptions for records that are not in use.</li>\n  * </ul>\n- *\n+ * <p>\n  * There are also \"LENIENT\" variants of all those (except #FORCE), with the difference that reading a record which is not the first unit\n  * in a multi-unit record won't raise a cursor exception.\n  */\n public enum RecordLoad\n {\n-    LENIENT_NORMAL( false, true, true ),\n-    LENIENT_CHECK( false, false, true ),\n-    LENIENT_ALWAYS( true, false, true ),\n-    NORMAL( LENIENT_NORMAL ),\n-    CHECK( LENIENT_CHECK ),\n-    ALWAYS( LENIENT_ALWAYS ),\n-    FORCE( true, false, false, false, null );\n+    LENIENT_NORMAL(false, true, true),\n+    LENIENT_CHECK(false, false, true),\n+    LENIENT_ALWAYS(true, false, true),\n+    NORMAL(LENIENT_NORMAL),\n+    CHECK(LENIENT_CHECK),\n+    ALWAYS(LENIENT_ALWAYS),\n+    FORCE(true, false, false, false, null);\n \n     /**\n      * <ul>\n@@ -99,21 +100,21 @@ public enum RecordLoad\n      * and its {@link #lenientVariant} set to {@code null}, which means it's already a lenient variant and will return\n      * itself in {@link #lenient()}\n      */\n-    RecordLoad( boolean alwaysLoad, boolean failOnUnused, boolean failOnCursorException )\n+    RecordLoad(boolean alwaysLoad, boolean failOnUnused, boolean failOnCursorException)\n     {\n-        this( alwaysLoad, failOnUnused, failOnCursorException, false, null );\n+        this(alwaysLoad, failOnUnused, failOnCursorException, false, null);\n     }\n \n     /**\n      * Constructor for strict variants, i.e. has the parameters of the {@code lenientVariant}, except for {@link #failOnNonFirstUnit}\n      * which is {@code true}.\n      */\n-    RecordLoad( RecordLoad lenientVariant )\n+    RecordLoad(RecordLoad lenientVariant)\n     {\n-        this( lenientVariant.alwaysLoad, lenientVariant.failOnUnused, lenientVariant.failOnCursorException, true, lenientVariant );\n+        this(lenientVariant.alwaysLoad, lenientVariant.failOnUnused, lenientVariant.failOnCursorException, true, lenientVariant);\n     }\n \n-    RecordLoad( boolean alwaysLoad, boolean failOnUnused, boolean failOnCursorException, boolean failOnNonFirstUnit, RecordLoad lenientVariant )\n+    RecordLoad(boolean alwaysLoad, boolean failOnUnused, boolean failOnCursorException, boolean failOnNonFirstUnit, RecordLoad lenientVariant)\n     {\n         this.alwaysLoad = alwaysLoad;\n         this.failOnUnused = failOnUnused;\n@@ -125,7 +126,7 @@ public enum RecordLoad\n     /**\n      * Checks whether a record should be fully loaded from {@link PageCursor}, based on inUse status.\n      */\n-    public final boolean shouldLoad( boolean inUse )\n+    public final boolean shouldLoad(boolean inUse)\n     {\n         return inUse || alwaysLoad;\n     }\n@@ -133,36 +134,35 @@ public enum RecordLoad\n     /**\n      * Verifies that a record's in use status is in line with the mode, might throw {@link InvalidRecordException}.\n      */\n-    public final boolean verify( AbstractBaseRecord record )\n+    public final boolean verify(AbstractBaseRecord record)\n     {\n         boolean inUse = record.inUse();\n-        if ( failOnUnused && !inUse )\n+        if (failOnUnused && !inUse)\n         {\n-            throw new InvalidRecordException( record + \" not in use\" );\n+            throw new InvalidRecordException(record + \" not in use\");\n         }\n-        return shouldLoad( inUse );\n+        return shouldLoad(inUse);\n     }\n \n     /**\n      * Depending on the mode, this will - if a cursor error has been raised on the given {@link PageCursor} - either\n      * throw an {@link InvalidRecordException} with the underlying {@link CursorException}, or clear the error condition\n      * on the cursor.\n+     *\n      * @param cursor The {@link PageCursor} to be checked for errors.\n      */\n-    public final void clearOrThrowCursorError( PageCursor cursor )\n+    public final void clearOrThrowCursorError(PageCursor cursor)\n     {\n-        if ( failOnCursorException )\n+        if (failOnCursorException)\n         {\n             try\n             {\n                 cursor.checkAndClearCursorException();\n-            }\n-            catch ( CursorException e )\n+            } catch (CursorException e)\n             {\n-                throw new InvalidRecordException( e );\n+                throw new InvalidRecordException(e);\n             }\n-        }\n-        else\n+        } else\n         {\n             // The FORCE mode does not bother with reporting decoding errors...\n             // ... but it must still clear them, since the page cursor may be reused to read other records\n@@ -173,10 +173,11 @@ public enum RecordLoad\n     /**\n      * Checks the given {@link PageCursor} to see if its out-of-bounds flag has been raised, and returns {@code true} if\n      * that is the case <em>and</em> and out-of-bounds condition should be reported up the stack.\n+     *\n      * @param cursor The {@link PageCursor} to check the bounds flag for.\n      * @return {@code true} if an out-of-bounds condition should be reported up the stack, {@code false} otherwise.\n      */\n-    public boolean checkForOutOfBounds( PageCursor cursor )\n+    public boolean checkForOutOfBounds(PageCursor cursor)\n     {\n         return cursor.checkAndClearBoundsFlag() && failOnCursorException;\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
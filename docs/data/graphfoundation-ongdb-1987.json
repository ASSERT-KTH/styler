{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1987",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1987/JsonHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1987/JsonHelper.java\nindex 7093f1d3315..f5cd6ededa5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1987/JsonHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1987/JsonHelper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.domain;\n \n import org.codehaus.jackson.JsonGenerator;\n@@ -34,108 +35,103 @@ import org.neo4j.server.rest.web.PropertyValueException;\n \n public class JsonHelper\n {\n-    static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n+  static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n-    private JsonHelper()\n-    {\n-    }\n+  private JsonHelper()\n+  {\n+  }\n \n-    public static JsonNode jsonNode( String json ) throws JsonParseException\n+  public static JsonNode jsonNode(String json) throws JsonParseException\n+  {\n+    try\n     {\n-        try\n-        {\n-            return OBJECT_MAPPER.readTree( json );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new JsonParseException( e );\n-        }\n-    }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    public static Map<String, Object> jsonToMap( String json ) throws JsonParseException\n+      return OBJECT_MAPPER.readTree(json);\n+    } catch (IOException e)\n     {\n-        return (Map<String, Object>) readJson( json );\n+      throw new JsonParseException(e);\n     }\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static List<Map<String, Object>> jsonToList( String json ) throws JsonParseException\n-    {\n-        return (List<Map<String, Object>>) readJson( json );\n-    }\n+  @SuppressWarnings(\"unchecked\")\n+  public static Map<String, Object> jsonToMap(String json) throws JsonParseException\n+  {\n+    return (Map<String, Object>) readJson(json);\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public static List<Map<String, Object>> jsonToList(String json) throws JsonParseException\n+  {\n+    return (List<Map<String, Object>>) readJson(json);\n+  }\n \n-    public static Object readJson( String json ) throws JsonParseException\n+  public static Object readJson(String json) throws JsonParseException\n+  {\n+    try\n     {\n-        try\n-        {\n-            return OBJECT_MAPPER.readValue( json, Object.class );\n-        }\n-        catch ( org.codehaus.jackson.JsonParseException e )\n-        {\n-            String message = e.getMessage().split( \"\\\\r?\\\\n\" )[0];\n-            JsonLocation location = e.getLocation();\n-            throw new JsonParseException( String.format( \"%s [line: %d, column: %d]\", message, location.getLineNr(),\n-                    location.getColumnNr() ), e );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new JsonParseException( e );\n-        }\n+      return OBJECT_MAPPER.readValue(json, Object.class);\n+    } catch (org.codehaus.jackson.JsonParseException e)\n+    {\n+      String message = e.getMessage().split(\"\\\\r?\\\\n\")[0];\n+      JsonLocation location = e.getLocation();\n+      throw new JsonParseException(String.format(\"%s [line: %d, column: %d]\", message, location.getLineNr(),\n+          location.getColumnNr()), e);\n+    } catch (IOException e)\n+    {\n+      throw new JsonParseException(e);\n     }\n+  }\n \n-    public static Object assertSupportedPropertyValue( Object jsonObject ) throws PropertyValueException\n+  public static Object assertSupportedPropertyValue(Object jsonObject) throws PropertyValueException\n+  {\n+    if (jsonObject instanceof Collection<?>)\n     {\n-        if ( jsonObject instanceof Collection<?> )\n-        {\n-            return jsonObject;\n-        }\n-        if ( jsonObject == null )\n-        {\n-            throw new PropertyValueException( \"null value not supported\" );\n-        }\n-        if ( !(jsonObject instanceof String ||\n-               jsonObject instanceof Number ||\n-               jsonObject instanceof Boolean) )\n-        {\n-            throw new PropertyValueException(\n-                    \"Unsupported value type \" + jsonObject.getClass() + \".\"\n-                    + \" Supported value types are all java primitives (byte, char, short, int, \"\n-                    + \"long, float, double) and String, as well as arrays of all those types\" );\n-        }\n-        return jsonObject;\n+      return jsonObject;\n     }\n-\n-    public static String createJsonFrom( Object data ) throws JsonBuildRuntimeException\n+    if (jsonObject == null)\n     {\n-        try\n-        {\n-            StringWriter writer = new StringWriter();\n-            try\n-            {\n-                JsonGenerator generator = OBJECT_MAPPER.getJsonFactory()\n-                    .createJsonGenerator( writer )\n-                    .useDefaultPrettyPrinter();\n-                writeValue( generator, data );\n-            }\n-            finally\n-            {\n-                writer.close();\n-            }\n-            return writer.getBuffer().toString();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new JsonBuildRuntimeException( e );\n-        }\n+      throw new PropertyValueException(\"null value not supported\");\n     }\n-\n-    public static void writeValue( JsonGenerator jgen, Object value ) throws IOException\n+    if (!(jsonObject instanceof String ||\n+        jsonObject instanceof Number ||\n+        jsonObject instanceof Boolean))\n     {\n-        OBJECT_MAPPER.writeValue( jgen, value );\n+      throw new PropertyValueException(\n+          \"Unsupported value type \" + jsonObject.getClass() + \".\"\n+              + \" Supported value types are all java primitives (byte, char, short, int, \"\n+              + \"long, float, double) and String, as well as arrays of all those types\");\n     }\n+    return jsonObject;\n+  }\n \n-    public static String prettyPrint( Object item ) throws IOException\n+  public static String createJsonFrom(Object data) throws JsonBuildRuntimeException\n+  {\n+    try\n     {\n-        return OBJECT_MAPPER.writer().withDefaultPrettyPrinter().writeValueAsString( item );\n+      StringWriter writer = new StringWriter();\n+      try\n+      {\n+        JsonGenerator generator = OBJECT_MAPPER.getJsonFactory()\n+            .createJsonGenerator(writer)\n+            .useDefaultPrettyPrinter();\n+        writeValue(generator, data);\n+      } finally\n+      {\n+        writer.close();\n+      }\n+      return writer.getBuffer().toString();\n+    } catch (IOException e)\n+    {\n+      throw new JsonBuildRuntimeException(e);\n     }\n+  }\n+\n+  public static void writeValue(JsonGenerator jgen, Object value) throws IOException\n+  {\n+    OBJECT_MAPPER.writeValue(jgen, value);\n+  }\n+\n+  public static String prettyPrint(Object item) throws IOException\n+  {\n+    return OBJECT_MAPPER.writer().withDefaultPrettyPrinter().writeValueAsString(item);\n+  }\n }\n",
            "diff_size": 133
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 255).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1987/JsonHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1987/JsonHelper.java\nindex 7093f1d3315..0c954de3362 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1987/JsonHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1987/JsonHelper.java\n@@ -53,7 +53,7 @@ public class JsonHelper\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n-    public static Map<String, Object> jsonToMap( String json ) throws JsonParseException\n+    public static Map<String,Object> jsonToMap( String json ) throws JsonParseException\n     {\n         return (Map<String, Object>) readJson( json );\n     }\n@@ -74,9 +74,8 @@ public class JsonHelper\n         {\n             String message = e.getMessage().split( \"\\\\r?\\\\n\" )[0];\n             JsonLocation location = e.getLocation();\n-            throw new JsonParseException( String.format( \"%s [line: %d, column: %d]\", message, location.getLineNr(),\n-                    location.getColumnNr() ), e );\n-        }\n+            throw new JsonParseException( String.format( \"%s [line: %d, column: %d]\", message, location.getLineNr(), location.getColumnNr() ), e );\n+    }\n         catch ( IOException e )\n         {\n             throw new JsonParseException( e );\n@@ -89,20 +88,19 @@ public class JsonHelper\n         {\n             return jsonObject;\n         }\n-        if ( jsonObject == null )\n+\n+if ( jsonObject == null )\n         {\n             throw new PropertyValueException( \"null value not supported\" );\n         }\n-        if ( !(jsonObject instanceof String ||\n-               jsonObject instanceof Number ||\n+\n+if ( !( jsonObject instanceof String || jsonObject instanceof Number ||\n                jsonObject instanceof Boolean) )\n-        {\n-            throw new PropertyValueException(\n-                    \"Unsupported value type \" + jsonObject.getClass() + \".\"\n-                    + \" Supported value types are all java primitives (byte, char, short, int, \"\n-                    + \"long, float, double) and String, as well as arrays of all those types\" );\n+{\n+            throw new PropertyValueException( \"Unsupported value type \" + jsonObject.getClass() + \".\" + \" Supported value types are all java primitives (byte, char, short, int, \" + \"long, float, double) and String, as well as arrays of all those types\" );\n         }\n-        return jsonObject;\n+\n+return jsonObject;\n     }\n \n     public static String createJsonFrom( Object data ) throws JsonBuildRuntimeException\n@@ -112,16 +110,17 @@ public class JsonHelper\n             StringWriter writer = new StringWriter();\n             try\n             {\n-                JsonGenerator generator = OBJECT_MAPPER.getJsonFactory()\n-                    .createJsonGenerator( writer )\n+                JsonGenerator generator = OBJECT_MAPPER.getJsonFactory().createJsonGenerator( writer )\n                     .useDefaultPrettyPrinter();\n-                writeValue( generator, data );\n+\n+writeValue( generator, data );\n             }\n             finally\n             {\n                 writer.close();\n             }\n-            return writer.getBuffer().toString();\n+\n+return writer.getBuffer().toString();\n         }\n         catch ( IOException e )\n         {\n@@ -138,4 +137,4 @@ public class JsonHelper\n     {\n         return OBJECT_MAPPER.writer().withDefaultPrettyPrinter().writeValueAsString( item );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
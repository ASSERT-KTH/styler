{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  private static final Key KEY = Key.builder(\"ds1\", \"k1\", \"n1\").build();\n  private static final StringValue STRING_INDEX_VALUE = StringValue.builder(\"foo\").meaning(18).build();\n  private static final BlobValue BLOB_VALUE = BlobValue.of(Blob.copyFrom(new byte[]{1}));\n  private static final DateTimeValue DATE_TIME_VALUE = DateTimeValue.of(DateTime.now());\n  private static final LongValue LONG_INDEX_VALUE =",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/100/ProjectionEntityTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/100/ProjectionEntityTest.java\nindex f67d719af26..66e45a398f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/100/ProjectionEntityTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/100/ProjectionEntityTest.java\n@@ -27,8 +27,9 @@ import org.junit.Test;\n public class ProjectionEntityTest {\n \n   private static final Key KEY = Key.builder(\"ds1\", \"k1\", \"n1\").build();\n-  private static final StringValue STRING_INDEX_VALUE = StringValue.builder(\"foo\").meaning(18).build();\n-  private static final BlobValue BLOB_VALUE = BlobValue.of(Blob.copyFrom(new byte[]{1}));\n+  private static final StringValue STRING_INDEX_VALUE =\n+      StringValue.builder(\"foo\").meaning(18).build();\n+  private static final BlobValue BLOB_VALUE = BlobValue.of(Blob.copyFrom(new byte[] {1}));\n   private static final DateTimeValue DATE_TIME_VALUE = DateTimeValue.of(DateTime.now());\n   private static final LongValue LONG_INDEX_VALUE =\n       LongValue.builder(DATE_TIME_VALUE.get().timestampMicroseconds()).meaning(18).build();\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/100/ProjectionEntityTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/100/ProjectionEntityTest.java\nindex f67d719af26..f3557c12ca5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/100/ProjectionEntityTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/100/ProjectionEntityTest.java\n@@ -41,7 +41,7 @@ public class ProjectionEntityTest {\n       .set(\"d\", LONG_INDEX_VALUE)\n       .build();\n \n-  @Test\n+@Test\n   public void testHasKey() throws Exception {\n     assertTrue(ENTITY1.hasKey());\n     assertFalse(ENTITY2.hasKey());\n@@ -64,4 +64,4 @@ public class ProjectionEntityTest {\n     assertEquals(DATE_TIME_VALUE.get(), ENTITY2.getDateTime(\"c\"));\n     assertEquals(DATE_TIME_VALUE.get(), ENTITY2.getDateTime(\"d\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/100/ProjectionEntityTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/100/ProjectionEntityTest.java\nindex f67d719af26..5171b3b229d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/100/ProjectionEntityTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/100/ProjectionEntityTest.java\n@@ -24,22 +24,16 @@ import static org.junit.Assert.assertTrue;\n \n import org.junit.Test;\n \n+\n public class ProjectionEntityTest {\n \n   private static final Key KEY = Key.builder(\"ds1\", \"k1\", \"n1\").build();\n   private static final StringValue STRING_INDEX_VALUE = StringValue.builder(\"foo\").meaning(18).build();\n   private static final BlobValue BLOB_VALUE = BlobValue.of(Blob.copyFrom(new byte[]{1}));\n   private static final DateTimeValue DATE_TIME_VALUE = DateTimeValue.of(DateTime.now());\n-  private static final LongValue LONG_INDEX_VALUE =\n-      LongValue.builder(DATE_TIME_VALUE.get().timestampMicroseconds()).meaning(18).build();\n-  private static final ProjectionEntity ENTITY1 =\n-      new ProjectionEntity.Builder().key(KEY).set(\"a\", \"b\").build();\n-  private static final ProjectionEntity ENTITY2 = new ProjectionEntity.Builder()\n-      .set(\"a\", STRING_INDEX_VALUE)\n-      .set(\"b\", BLOB_VALUE)\n-      .set(\"c\", DATE_TIME_VALUE)\n-      .set(\"d\", LONG_INDEX_VALUE)\n-      .build();\n+  private static final LongValue LONG_INDEX_VALUE = LongValue.builder(DATE_TIME_VALUE.get().timestampMicroseconds()).meaning(18).build();\n+  private static final ProjectionEntity ENTITY1 = new ProjectionEntity.Builder().key(KEY).set(\"a\", \"b\").build();\n+  private static final ProjectionEntity ENTITY2 = new ProjectionEntity.Builder().set(\"a\", STRING_INDEX_VALUE).set(\"b\", BLOB_VALUE).set(\"c\", DATE_TIME_VALUE).set(\"d\", LONG_INDEX_VALUE).build();\n \n   @Test\n   public void testHasKey() throws Exception {\n@@ -64,4 +58,4 @@ public class ProjectionEntityTest {\n     assertEquals(DATE_TIME_VALUE.get(), ENTITY2.getDateTime(\"c\"));\n     assertEquals(DATE_TIME_VALUE.get(), ENTITY2.getDateTime(\"d\"));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
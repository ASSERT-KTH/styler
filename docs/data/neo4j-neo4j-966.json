{
    "project_name": "neo4j-neo4j",
    "error_id": "966",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/966/HttpConnectionInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/966/HttpConnectionInfo.java\nindex 79e632709b4..06ab478c118 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/966/HttpConnectionInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/966/HttpConnectionInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query.clientconnection;\n \n import java.net.InetSocketAddress;\n@@ -38,11 +39,11 @@ public class HttpConnectionInfo extends ClientConnectionInfo\n     private final String requestPath;\n \n     public HttpConnectionInfo(\n-            String connectionId,\n-            String protocol,\n-            SocketAddress clientAddress,\n-            SocketAddress serverAddress,\n-            String requestPath )\n+      String connectionId,\n+      String protocol,\n+      SocketAddress clientAddress,\n+      SocketAddress serverAddress,\n+      String requestPath)\n     {\n         this.connectionId = connectionId;\n         this.protocol = protocol;\n@@ -54,7 +55,7 @@ public class HttpConnectionInfo extends ClientConnectionInfo\n     @Override\n     public String asConnectionDetails()\n     {\n-        return String.join( \"\\t\", \"server-session\", protocol, getHostString( clientAddress ), requestPath );\n+        return String.join(\"\\t\", \"server-session\", protocol, getHostString(clientAddress), requestPath);\n     }\n \n     @Override\n@@ -72,18 +73,18 @@ public class HttpConnectionInfo extends ClientConnectionInfo\n     @Override\n     public String clientAddress()\n     {\n-        return format( clientAddress );\n+        return format(clientAddress);\n     }\n \n     @Override\n     public String requestURI()\n     {\n         return serverAddress == null\n-               ? requestPath\n-               : protocol + \"://\" + format( serverAddress ) + requestPath;\n+          ? requestPath\n+          : protocol + \"://\" + format(serverAddress) + requestPath;\n     }\n \n-    private static String getHostString( SocketAddress address )\n+    private static String getHostString(SocketAddress address)\n     {\n         return address instanceof InetSocketAddress ? ((InetSocketAddress) address).getHostString() : address.toString();\n     }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/966/HttpConnectionInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/966/HttpConnectionInfo.java\nindex 79e632709b4..39570c29e3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/966/HttpConnectionInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/966/HttpConnectionInfo.java\n@@ -87,4 +87,4 @@ public class HttpConnectionInfo extends ClientConnectionInfo\n     {\n         return address instanceof InetSocketAddress ? ((InetSocketAddress) address).getHostString() : address.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "opencb-opencga",
    "error_id": "356",
    "information": {
        "errors": [
            {
                "line": "4",
                "column": "13",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\npublic class PerBaseSeqQuality {\n    // #Base\tMean\tMedian\tLower Quartile\tUpper Quartile\t10th Percentile\t90th Percentile\n\n    private String base;\n    private double mean;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "4",
                    "column": "11",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/356/PerBaseSeqQuality.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/356/PerBaseSeqQuality.java\nindex 1a98f925229..3e9d1ce0206 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/356/PerBaseSeqQuality.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/356/PerBaseSeqQuality.java\n@@ -1,104 +1,104 @@\n package org.opencb.opencga.core.models.variant.fastqc;\n \n public class PerBaseSeqQuality {\n-    // #Base\tMean\tMedian\tLower Quartile\tUpper Quartile\t10th Percentile\t90th Percentile\n-\n-    private String base;\n-    private double mean;\n-    private double median;\n-    private double quartileLower;\n-    private double quartileUpper;\n-    private double percentile10th;\n-    private double percentile90th;\n-\n-    public PerBaseSeqQuality() {\n-    }\n-\n-    public PerBaseSeqQuality(String base, double mean, double median, double quartileLower, double quartileUpper, double percentile10th,\n-                             double percentile90th) {\n-        this.base = base;\n-        this.mean = mean;\n-        this.median = median;\n-        this.quartileLower = quartileLower;\n-        this.quartileUpper = quartileUpper;\n-        this.percentile10th = percentile10th;\n-        this.percentile90th = percentile90th;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"PerBaseSeqQuality{\");\n-        sb.append(\"base='\").append(base).append('\\'');\n-        sb.append(\", mean=\").append(mean);\n-        sb.append(\", median=\").append(median);\n-        sb.append(\", quartileLower=\").append(quartileLower);\n-        sb.append(\", quartileUpper=\").append(quartileUpper);\n-        sb.append(\", percentile10th=\").append(percentile10th);\n-        sb.append(\", percentile90th=\").append(percentile90th);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n-\n-    public String getBase() {\n-        return base;\n-    }\n-\n-    public PerBaseSeqQuality setBase(String base) {\n-        this.base = base;\n-        return this;\n-    }\n-\n-    public double getMean() {\n-        return mean;\n-    }\n-\n-    public PerBaseSeqQuality setMean(double mean) {\n-        this.mean = mean;\n-        return this;\n-    }\n-\n-    public double getMedian() {\n-        return median;\n-    }\n-\n-    public PerBaseSeqQuality setMedian(double median) {\n-        this.median = median;\n-        return this;\n-    }\n-\n-    public double getQuartileLower() {\n-        return quartileLower;\n-    }\n-\n-    public PerBaseSeqQuality setQuartileLower(double quartileLower) {\n-        this.quartileLower = quartileLower;\n-        return this;\n-    }\n-\n-    public double getQuartileUpper() {\n-        return quartileUpper;\n-    }\n-\n-    public PerBaseSeqQuality setQuartileUpper(double quartileUpper) {\n-        this.quartileUpper = quartileUpper;\n-        return this;\n-    }\n-\n-    public double getPercentile10th() {\n-        return percentile10th;\n-    }\n-\n-    public PerBaseSeqQuality setPercentile10th(double percentile10th) {\n-        this.percentile10th = percentile10th;\n-        return this;\n-    }\n-\n-    public double getPercentile90th() {\n-        return percentile90th;\n-    }\n-\n-    public PerBaseSeqQuality setPercentile90th(double percentile90th) {\n-        this.percentile90th = percentile90th;\n-        return this;\n-    }\n+  // #Base\tMean\tMedian\tLower Quartile\tUpper Quartile\t10th Percentile\t90th Percentile\n+\n+  private String base;\n+  private double mean;\n+  private double median;\n+  private double quartileLower;\n+  private double quartileUpper;\n+  private double percentile10th;\n+  private double percentile90th;\n+\n+  public PerBaseSeqQuality() {\n+  }\n+\n+  public PerBaseSeqQuality(String base, double mean, double median, double quartileLower, double quartileUpper, double percentile10th,\n+                           double percentile90th) {\n+    this.base = base;\n+    this.mean = mean;\n+    this.median = median;\n+    this.quartileLower = quartileLower;\n+    this.quartileUpper = quartileUpper;\n+    this.percentile10th = percentile10th;\n+    this.percentile90th = percentile90th;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"PerBaseSeqQuality{\");\n+    sb.append(\"base='\").append(base).append('\\'');\n+    sb.append(\", mean=\").append(mean);\n+    sb.append(\", median=\").append(median);\n+    sb.append(\", quartileLower=\").append(quartileLower);\n+    sb.append(\", quartileUpper=\").append(quartileUpper);\n+    sb.append(\", percentile10th=\").append(percentile10th);\n+    sb.append(\", percentile90th=\").append(percentile90th);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  public String getBase() {\n+    return base;\n+  }\n+\n+  public PerBaseSeqQuality setBase(String base) {\n+    this.base = base;\n+    return this;\n+  }\n+\n+  public double getMean() {\n+    return mean;\n+  }\n+\n+  public PerBaseSeqQuality setMean(double mean) {\n+    this.mean = mean;\n+    return this;\n+  }\n+\n+  public double getMedian() {\n+    return median;\n+  }\n+\n+  public PerBaseSeqQuality setMedian(double median) {\n+    this.median = median;\n+    return this;\n+  }\n+\n+  public double getQuartileLower() {\n+    return quartileLower;\n+  }\n+\n+  public PerBaseSeqQuality setQuartileLower(double quartileLower) {\n+    this.quartileLower = quartileLower;\n+    return this;\n+  }\n+\n+  public double getQuartileUpper() {\n+    return quartileUpper;\n+  }\n+\n+  public PerBaseSeqQuality setQuartileUpper(double quartileUpper) {\n+    this.quartileUpper = quartileUpper;\n+    return this;\n+  }\n+\n+  public double getPercentile10th() {\n+    return percentile10th;\n+  }\n+\n+  public PerBaseSeqQuality setPercentile10th(double percentile10th) {\n+    this.percentile10th = percentile10th;\n+    return this;\n+  }\n+\n+  public double getPercentile90th() {\n+    return percentile90th;\n+  }\n+\n+  public PerBaseSeqQuality setPercentile90th(double percentile90th) {\n+    this.percentile90th = percentile90th;\n+    return this;\n+  }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/356/PerBaseSeqQuality.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/356/PerBaseSeqQuality.java\nindex 1a98f925229..89efa0ec94f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/356/PerBaseSeqQuality.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/356/PerBaseSeqQuality.java\n@@ -14,8 +14,7 @@ public class PerBaseSeqQuality {\n     public PerBaseSeqQuality() {\n     }\n \n-    public PerBaseSeqQuality(String base, double mean, double median, double quartileLower, double quartileUpper, double percentile10th,\n-                             double percentile90th) {\n+    public PerBaseSeqQuality(String base, double mean, double median, double quartileLower, double quartileUpper, double percentile10th, double percentile90th) {\n         this.base = base;\n         this.mean = mean;\n         this.median = median;\n@@ -101,4 +100,4 @@ public class PerBaseSeqQuality {\n         this.percentile90th = percentile90th;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
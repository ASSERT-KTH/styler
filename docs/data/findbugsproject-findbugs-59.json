{
    "project_name": "findbugsproject-findbugs",
    "error_id": "59",
    "information": {
        "errors": [
            {
                "line": "23",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        try {\n            for (int i = -1; i <= 5; i++)\n\t\t\t\ttest.tp1(i);\n        } catch (NullPointerException e) {\n            return;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/59/TestTest.java\nindex a1003d16ba5..ec5581f9c0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/59/TestTest.java\n@@ -20,7 +20,7 @@ public class TestTest extends TestCase {\n     public void testTP1() {\n         try {\n             for (int i = -1; i <= 5; i++)\n-\t\t\t\ttest.tp1(i);\n+                    test.tp1(i);\n         } catch (NullPointerException e) {\n             return;\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/59/TestTest.java\nindex a1003d16ba5..a5211dc4cdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/59/TestTest.java\n@@ -5,9 +5,8 @@ import junit.framework.TestCase;\n /**\n  * This class just provides runtest test cases to verify that the true cases can\n  * throw null pointer exceptions and that the false positive cases do not.\n- * \n+ * <p>\n  * This code <em>must</em> be included in any static analysis.\n- * \n  */\n public class TestTest extends TestCase {\n \n@@ -19,82 +18,84 @@ public class TestTest extends TestCase {\n \n     public void testTP1() {\n         try {\n-            for (int i = -1; i <= 5; i++)\n-\t\t\t\ttest.tp1(i);\n+            for (int i = -1; i <= 5; i++) {\n+                test.tp1(i);\n+            }\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testFP1() {\n-        for (int i = -1; i <= 5; i++)\n+        for (int i = -1; i <= 5; i++) {\n             test.fp1(i);\n-\t}\n+        }\n+    }\n \n     public void testTP2() {\n         try {\n             test.tp2(true);\n-\t\t\ttest.tp2(false);\n+            test.tp2(false);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testFP2() {\n         test.fp2(true);\n         test.fp2(false);\n-\t}\n+    }\n \n     public void testTP3() {\n         try {\n             test.tp3(null);\n-\t\t\ttest.tp3(\"x\");\n+            test.tp3(\"x\");\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testTF3() {\n         test.fp3(null);\n         test.fp3(\"x\");\n-\t}\n+    }\n \n     public void testTP4() {\n         try {\n             test.tp4(true);\n-\t\t\ttest.tp4(false);\n+            test.tp4(false);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testFP4() {\n         test.fp4(true);\n         test.fp4(false);\n-\t}\n+    }\n \n     public void testTP5() {\n         try {\n             test.tp5(null);\n-\t\t\ttest.tp5(\"x\");\n+            test.tp5(\"x\");\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testTP6() {\n         try {\n             test.tp6(null);\n-\t\t\ttest.tp6(\"x\");\n+            test.tp6(\"x\");\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testIFP1() {\n@@ -106,73 +107,73 @@ public class TestTest extends TestCase {\n     public void testITP1() {\n         try {\n             test.itp1(false);\n-\t\t\ttest.itp1(true);\n+            test.itp1(true);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testITP2() {\n         try {\n             test.itp2();\n-\t\t} catch (NullPointerException e) {\n+        } catch (NullPointerException e) {\n             return;\n         }\n         fail();\n-\t}\n+    }\n \n     public void testITP3() {\n         try {\n             test.itp3(true);\n-\t\t\ttest.itp3(false);\n+            test.itp3(false);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public static void main(String args[]) {\n-\t\t\n+\n         {\n             TestTest tt = new TestTest();\n-        tt.setUp();\n-\t\ttt.testTP1();\n-        tt.testTP2();\n-        tt.testTP3();\n-        tt.testTP4();\n-\t\ttt.testTP5();\n-        tt.testTP6();\n-\n-        tt.testFP1();\n-\t\ttt.testFP2();\n-        tt.testFP4();\n-\n-        tt.testITP1();\n-        tt.testITP2();\n-        tt.testITP3();\n-\t\t\n-        tt.testIFP1();\n+            tt.setUp();\n+            tt.testTP1();\n+            tt.testTP2();\n+            tt.testTP3();\n+            tt.testTP4();\n+            tt.testTP5();\n+            tt.testTP6();\n+\n+            tt.testFP1();\n+            tt.testFP2();\n+            tt.testFP4();\n+\n+            tt.testITP1();\n+            tt.testITP2();\n+            tt.testITP3();\n+\n+            tt.testIFP1();\n         }\n         {\n-\t\t\tTestTestFields tt = new TestTestFields();\n+            TestTestFields tt = new TestTestFields();\n             tt.setUp();\n \n             tt.testTP1();\n-\t\t\ttt.testTP2();\n+            tt.testTP2();\n             tt.testTP3();\n             tt.testTP4();\n             tt.testTP5();\n-\t\t\ttt.testTP6();\n+            tt.testTP6();\n \n             tt.testFP1();\n             tt.testFP2();\n-\t\t\ttt.testFP4();\n+            tt.testFP4();\n \n             tt.testITP1();\n             tt.testITP2();\n             tt.testITP3();\n-\t\t\t\n+\n             tt.testIFP1();\n         }\n     }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/59/TestTest.java\nindex a1003d16ba5..0c296139432 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/59/TestTest.java\n@@ -20,81 +20,81 @@ public class TestTest extends TestCase {\n     public void testTP1() {\n         try {\n             for (int i = -1; i <= 5; i++)\n-\t\t\t\ttest.tp1(i);\n-        } catch (NullPointerException e) {\n+    test.tp1(i);\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testFP1() {\n         for (int i = -1; i <= 5; i++)\n             test.fp1(i);\n-\t}\n+    }\n \n-    public void testTP2() {\n+public void testTP2() {\n         try {\n             test.tp2(true);\n-\t\t\ttest.tp2(false);\n-        } catch (NullPointerException e) {\n+test.tp2(false);\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testFP2() {\n         test.fp2(true);\n         test.fp2(false);\n-\t}\n+    }\n \n-    public void testTP3() {\n+public void testTP3() {\n         try {\n             test.tp3(null);\n-\t\t\ttest.tp3(\"x\");\n-        } catch (NullPointerException e) {\n+test.tp3(\"x\");\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testTF3() {\n         test.fp3(null);\n         test.fp3(\"x\");\n-\t}\n+    }\n \n-    public void testTP4() {\n+public void testTP4() {\n         try {\n             test.tp4(true);\n-\t\t\ttest.tp4(false);\n-        } catch (NullPointerException e) {\n+test.tp4(false);\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testFP4() {\n         test.fp4(true);\n         test.fp4(false);\n-\t}\n+    }\n \n-    public void testTP5() {\n+public void testTP5() {\n         try {\n             test.tp5(null);\n-\t\t\ttest.tp5(\"x\");\n-        } catch (NullPointerException e) {\n+test.tp5(\"x\");\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testTP6() {\n         try {\n             test.tp6(null);\n-\t\t\ttest.tp6(\"x\");\n-        } catch (NullPointerException e) {\n+test.tp6(\"x\");\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testIFP1() {\n@@ -106,75 +106,70 @@ public class TestTest extends TestCase {\n     public void testITP1() {\n         try {\n             test.itp1(false);\n-\t\t\ttest.itp1(true);\n-        } catch (NullPointerException e) {\n+test.itp1(true);\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public void testITP2() {\n         try {\n             test.itp2();\n-\t\t} catch (NullPointerException e) {\n-            return;\n+    } catch (NullPointerException e) {\n+    return;\n         }\n         fail();\n-\t}\n+    }\n \n-    public void testITP3() {\n+public void testITP3() {\n         try {\n             test.itp3(true);\n-\t\t\ttest.itp3(false);\n-        } catch (NullPointerException e) {\n+test.itp3(false);\n+    } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+fail();\n     }\n \n     public static void main(String args[]) {\n-\t\t\n-        {\n-            TestTest tt = new TestTest();\n+    {\n+    TestTest tt = new TestTest();\n         tt.setUp();\n-\t\ttt.testTP1();\n-        tt.testTP2();\n+tt.testTP1();\n+tt.testTP2();\n         tt.testTP3();\n         tt.testTP4();\n-\t\ttt.testTP5();\n-        tt.testTP6();\n+tt.testTP5();\n+tt.testTP6();\n \n         tt.testFP1();\n-\t\ttt.testFP2();\n-        tt.testFP4();\n+tt.testFP2();\n+tt.testFP4();\n \n         tt.testITP1();\n         tt.testITP2();\n         tt.testITP3();\n-\t\t\n-        tt.testIFP1();\n-        }\n+tt.testIFP1();\n+    }\n         {\n-\t\t\tTestTestFields tt = new TestTestFields();\n-            tt.setUp();\n+    TestTestFields tt = new TestTestFields();\n+tt.setUp();\n \n             tt.testTP1();\n-\t\t\ttt.testTP2();\n-            tt.testTP3();\n+tt.testTP2();\n+tt.testTP3();\n             tt.testTP4();\n             tt.testTP5();\n-\t\t\ttt.testTP6();\n-\n-            tt.testFP1();\n+tt.testTP6();\n+tt.testFP1();\n             tt.testFP2();\n-\t\t\ttt.testFP4();\n-\n-            tt.testITP1();\n+tt.testFP4();\n+tt.testITP1();\n             tt.testITP2();\n             tt.testITP3();\n-\t\t\t\n-            tt.testIFP1();\n-        }\n+tt.testIFP1();\n+    }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/59/TestTest.java\nindex a1003d16ba5..eb78da94e79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/59/TestTest.java\n@@ -9,8 +9,8 @@ import junit.framework.TestCase;\n  * This code <em>must</em> be included in any static analysis.\n  * \n  */\n-public class TestTest extends TestCase {\n \n+public class TestTest extends TestCase {\n     Test test;\n \n     public void setUp() {\n@@ -20,161 +20,152 @@ public class TestTest extends TestCase {\n     public void testTP1() {\n         try {\n             for (int i = -1; i <= 5; i++)\n-\t\t\t\ttest.tp1(i);\n+                test.tp1(i);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testFP1() {\n         for (int i = -1; i <= 5; i++)\n             test.fp1(i);\n-\t}\n+    }\n \n     public void testTP2() {\n         try {\n             test.tp2(true);\n-\t\t\ttest.tp2(false);\n+            test.tp2(false);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testFP2() {\n         test.fp2(true);\n         test.fp2(false);\n-\t}\n+    }\n \n     public void testTP3() {\n         try {\n             test.tp3(null);\n-\t\t\ttest.tp3(\"x\");\n+            test.tp3(\"x\");\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testTF3() {\n         test.fp3(null);\n         test.fp3(\"x\");\n-\t}\n+    }\n \n     public void testTP4() {\n         try {\n             test.tp4(true);\n-\t\t\ttest.tp4(false);\n+            test.tp4(false);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testFP4() {\n         test.fp4(true);\n         test.fp4(false);\n-\t}\n+    }\n \n     public void testTP5() {\n         try {\n             test.tp5(null);\n-\t\t\ttest.tp5(\"x\");\n+            test.tp5(\"x\");\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testTP6() {\n         try {\n             test.tp6(null);\n-\t\t\ttest.tp6(\"x\");\n+            test.tp6(\"x\");\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testIFP1() {\n         test.ifp1(false);\n         test.ifp1(true);\n-\n     }\n \n     public void testITP1() {\n         try {\n             test.itp1(false);\n-\t\t\ttest.itp1(true);\n+            test.itp1(true);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public void testITP2() {\n         try {\n             test.itp2();\n-\t\t} catch (NullPointerException e) {\n+        } catch (NullPointerException e) {\n             return;\n         }\n         fail();\n-\t}\n+    }\n \n     public void testITP3() {\n         try {\n             test.itp3(true);\n-\t\t\ttest.itp3(false);\n+            test.itp3(false);\n         } catch (NullPointerException e) {\n             return;\n         }\n-\t\tfail();\n+        fail();\n     }\n \n     public static void main(String args[]) {\n-\t\t\n         {\n-            TestTest tt = new TestTest();\n+        TestTest tt = new TestTest();\n         tt.setUp();\n-\t\ttt.testTP1();\n+        tt.testTP1();\n         tt.testTP2();\n         tt.testTP3();\n         tt.testTP4();\n-\t\ttt.testTP5();\n+        tt.testTP5();\n         tt.testTP6();\n-\n         tt.testFP1();\n-\t\ttt.testFP2();\n+        tt.testFP2();\n         tt.testFP4();\n-\n         tt.testITP1();\n         tt.testITP2();\n         tt.testITP3();\n-\t\t\n         tt.testIFP1();\n         }\n         {\n-\t\t\tTestTestFields tt = new TestTestFields();\n+            TestTestFields tt = new TestTestFields();\n             tt.setUp();\n-\n             tt.testTP1();\n-\t\t\ttt.testTP2();\n+            tt.testTP2();\n             tt.testTP3();\n             tt.testTP4();\n             tt.testTP5();\n-\t\t\ttt.testTP6();\n-\n+            tt.testTP6();\n             tt.testFP1();\n             tt.testFP2();\n-\t\t\ttt.testFP4();\n-\n+            tt.testFP4();\n             tt.testITP1();\n             tt.testITP2();\n             tt.testITP3();\n-\t\t\t\n             tt.testIFP1();\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/59/TestTest.java\nindex a1003d16ba5..ec5581f9c0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/59/TestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/59/TestTest.java\n@@ -20,7 +20,7 @@ public class TestTest extends TestCase {\n     public void testTP1() {\n         try {\n             for (int i = -1; i <= 5; i++)\n-\t\t\t\ttest.tp1(i);\n+                    test.tp1(i);\n         } catch (NullPointerException e) {\n             return;\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
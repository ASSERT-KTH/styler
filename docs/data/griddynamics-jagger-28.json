{
    "project_name": "griddynamics-jagger",
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 210).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public interface TaskDistributor<T extends Task> {\n\n    Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator, T task, DistributionListener listener, NodeContext context);\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/28/TaskDistributor.java\nindex 0b7363e6190..ec194fd9059 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/28/TaskDistributor.java\n@@ -39,5 +39,4 @@ import java.util.concurrent.ExecutorService;\n public interface TaskDistributor<T extends Task> {\n \n     Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator, T task, DistributionListener listener, NodeContext context);\n-\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/28/TaskDistributor.java\nindex 0b7363e6190..a633d8ecd7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/28/TaskDistributor.java\n@@ -38,6 +38,7 @@ import java.util.concurrent.ExecutorService;\n  */\n public interface TaskDistributor<T extends Task> {\n \n-    Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator, T task, DistributionListener listener, NodeContext context);\n+    Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator,\n+                       T task, DistributionListener listener, NodeContext context);\n \n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/28/TaskDistributor.java\nindex 0b7363e6190..f138ee019bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/28/TaskDistributor.java\n@@ -40,4 +40,4 @@ public interface TaskDistributor<T extends Task> {\n \n     Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator, T task, DistributionListener listener, NodeContext context);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/28/TaskDistributor.java\nindex 0b7363e6190..ec194fd9059 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/28/TaskDistributor.java\n@@ -39,5 +39,4 @@ import java.util.concurrent.ExecutorService;\n public interface TaskDistributor<T extends Task> {\n \n     Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator, T task, DistributionListener listener, NodeContext context);\n-\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'coordinator' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'interface def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/28/TaskDistributor.java\nindex 0b7363e6190..7cbcff29e68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/28/TaskDistributor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/28/TaskDistributor.java\n@@ -37,7 +37,9 @@ import java.util.concurrent.ExecutorService;\n  * @author Mairbek Khadikov\n  */\n public interface TaskDistributor<T extends Task> {\n+    Service distribute(ExecutorService executor, String sessionId, String taskId,\n+                Multimap<NodeType, NodeId> availableNodes, Coordinator\n \n-    Service distribute(ExecutorService executor, String sessionId, String taskId, Multimap<NodeType, NodeId> availableNodes, Coordinator coordinator, T task, DistributionListener listener, NodeContext context);\n+    coordinator , T task, DistributionListener listener, NodeContext context);\n \n-}\n+  }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
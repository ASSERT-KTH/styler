{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2952",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2952/ReplicatedIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2952/ReplicatedIdGeneratorFactory.java\nindex 6ce37e8946f..a10a0de69c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2952/ReplicatedIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2952/ReplicatedIdGeneratorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.id;\n \n import java.io.File;\n@@ -34,61 +35,61 @@ import org.neo4j.logging.LogProvider;\n \n public class ReplicatedIdGeneratorFactory implements IdGeneratorFactory\n {\n-    private final Map<IdType, ReplicatedIdGenerator> generators = new HashMap<>();\n-    private final FileSystemAbstraction fs;\n-    private final ReplicatedIdRangeAcquirer idRangeAcquirer;\n-    private final LogProvider logProvider;\n-    private IdTypeConfigurationProvider idTypeConfigurationProvider;\n+  private final Map<IdType, ReplicatedIdGenerator> generators = new HashMap<>();\n+  private final FileSystemAbstraction fs;\n+  private final ReplicatedIdRangeAcquirer idRangeAcquirer;\n+  private final LogProvider logProvider;\n+  private IdTypeConfigurationProvider idTypeConfigurationProvider;\n \n-    public ReplicatedIdGeneratorFactory( FileSystemAbstraction fs, ReplicatedIdRangeAcquirer idRangeAcquirer,\n-            LogProvider logProvider, IdTypeConfigurationProvider idTypeConfigurationProvider )\n-    {\n-        this.fs = fs;\n-        this.idRangeAcquirer = idRangeAcquirer;\n-        this.logProvider = logProvider;\n-        this.idTypeConfigurationProvider = idTypeConfigurationProvider;\n-    }\n+  public ReplicatedIdGeneratorFactory(FileSystemAbstraction fs, ReplicatedIdRangeAcquirer idRangeAcquirer,\n+                                      LogProvider logProvider, IdTypeConfigurationProvider idTypeConfigurationProvider)\n+  {\n+    this.fs = fs;\n+    this.idRangeAcquirer = idRangeAcquirer;\n+    this.logProvider = logProvider;\n+    this.idTypeConfigurationProvider = idTypeConfigurationProvider;\n+  }\n \n-    @Override\n-    public IdGenerator open( File filename, IdType idType, LongSupplier highId, long maxId )\n-    {\n-        IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration( idType );\n-        return openGenerator( filename, idTypeConfiguration.getGrabSize(), idType, highId, maxId,\n-                idTypeConfiguration.allowAggressiveReuse() );\n-    }\n+  @Override\n+  public IdGenerator open(File filename, IdType idType, LongSupplier highId, long maxId)\n+  {\n+    IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration(idType);\n+    return openGenerator(filename, idTypeConfiguration.getGrabSize(), idType, highId, maxId,\n+        idTypeConfiguration.allowAggressiveReuse());\n+  }\n \n-    @Override\n-    public IdGenerator open( File fileName, int grabSize, IdType idType, LongSupplier highId, long maxId )\n-    {\n-        IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration( idType );\n-        return openGenerator( fileName, grabSize, idType, highId, maxId, idTypeConfiguration.allowAggressiveReuse() );\n-    }\n+  @Override\n+  public IdGenerator open(File fileName, int grabSize, IdType idType, LongSupplier highId, long maxId)\n+  {\n+    IdTypeConfiguration idTypeConfiguration = idTypeConfigurationProvider.getIdTypeConfiguration(idType);\n+    return openGenerator(fileName, grabSize, idType, highId, maxId, idTypeConfiguration.allowAggressiveReuse());\n+  }\n \n-    private IdGenerator openGenerator( File file, int grabSize, IdType idType, LongSupplier highId, long maxId,\n-            boolean aggressiveReuse )\n+  private IdGenerator openGenerator(File file, int grabSize, IdType idType, LongSupplier highId, long maxId,\n+                                    boolean aggressiveReuse)\n+  {\n+    ReplicatedIdGenerator other = generators.get(idType);\n+    if (other != null)\n     {\n-        ReplicatedIdGenerator other = generators.get( idType );\n-        if ( other != null )\n-        {\n-            other.close();\n-        }\n-        ReplicatedIdGenerator replicatedIdGenerator =\n-                new ReplicatedIdGenerator( fs, file, idType, highId, idRangeAcquirer, logProvider, grabSize,\n-                        aggressiveReuse );\n-\n-        generators.put( idType, replicatedIdGenerator);\n-        return replicatedIdGenerator;\n+      other.close();\n     }\n+    ReplicatedIdGenerator replicatedIdGenerator =\n+        new ReplicatedIdGenerator(fs, file, idType, highId, idRangeAcquirer, logProvider, grabSize,\n+            aggressiveReuse);\n \n-    @Override\n-    public IdGenerator get( IdType idType )\n-    {\n-        return generators.get( idType );\n-    }\n+    generators.put(idType, replicatedIdGenerator);\n+    return replicatedIdGenerator;\n+  }\n \n-    @Override\n-    public void create( File fileName, long highId, boolean throwIfFileExists )\n-    {\n-        ReplicatedIdGenerator.createGenerator( fs, fileName, highId, throwIfFileExists );\n-    }\n+  @Override\n+  public IdGenerator get(IdType idType)\n+  {\n+    return generators.get(idType);\n+  }\n+\n+  @Override\n+  public void create(File fileName, long highId, boolean throwIfFileExists)\n+  {\n+    ReplicatedIdGenerator.createGenerator(fs, fileName, highId, throwIfFileExists);\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2952/ReplicatedIdGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2952/ReplicatedIdGeneratorFactory.java\nindex 6ce37e8946f..c0978ae2628 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2952/ReplicatedIdGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2952/ReplicatedIdGeneratorFactory.java\n@@ -34,7 +34,7 @@ import org.neo4j.logging.LogProvider;\n \n public class ReplicatedIdGeneratorFactory implements IdGeneratorFactory\n {\n-    private final Map<IdType, ReplicatedIdGenerator> generators = new HashMap<>();\n+    private final Map<IdType,ReplicatedIdGenerator> generators = new HashMap<>();\n     private final FileSystemAbstraction fs;\n     private final ReplicatedIdRangeAcquirer idRangeAcquirer;\n     private final LogProvider logProvider;\n@@ -72,11 +72,10 @@ public class ReplicatedIdGeneratorFactory implements IdGeneratorFactory\n         {\n             other.close();\n         }\n-        ReplicatedIdGenerator replicatedIdGenerator =\n-                new ReplicatedIdGenerator( fs, file, idType, highId, idRangeAcquirer, logProvider, grabSize,\n-                        aggressiveReuse );\n \n-        generators.put( idType, replicatedIdGenerator);\n+ReplicatedIdGenerator replicatedIdGenerator = new ReplicatedIdGenerator( fs, file, idType, highId, idRangeAcquirer, logProvider, grabSize,\n+                        aggressiveReuse );\n+generators.put( idType, replicatedIdGenerator );\n         return replicatedIdGenerator;\n     }\n \n@@ -91,4 +90,4 @@ public class ReplicatedIdGeneratorFactory implements IdGeneratorFactory\n     {\n         ReplicatedIdGenerator.createGenerator( fs, fileName, highId, throwIfFileExists );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
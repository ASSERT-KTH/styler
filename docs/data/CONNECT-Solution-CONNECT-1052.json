{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1052",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docsubmission.audit.transform;\n\nimport com.services.nhinc.schema.auditmessage.AuditMessageType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1052/DocSubmissionDeferredRequestAuditTransforms.java\nindex 252cc4580e0..29a7d6bb60f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1052/DocSubmissionDeferredRequestAuditTransforms.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.audit.transform;\n \n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n@@ -33,80 +34,79 @@ import gov.hhs.healthit.nhin.XDRAcknowledgementType;\n import ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequestType;\n \n /**\n- *\n  * @author tjafri\n  */\n public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubmissionAuditTransforms<\n     ProvideAndRegisterDocumentSetRequestType, XDRAcknowledgementType> {\n \n-    @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForRequest(\n-        ProvideAndRegisterDocumentSetRequestType request, AssertionType assertion, AuditMessageType auditMsg) {\n-        // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n-        //Request and Response in case of DS\n-        auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n-        auditMsg = getSubmissionSetParticipantObjectIdentification(request, auditMsg);\n-        return auditMsg;\n-    }\n+  @Override\n+  protected AuditMessageType getParticipantObjectIdentificationForRequest(\n+      ProvideAndRegisterDocumentSetRequestType request, AssertionType assertion, AuditMessageType auditMsg) {\n+    // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n+    //Request and Response in case of DS\n+    auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n+    auditMsg = getSubmissionSetParticipantObjectIdentification(request, auditMsg);\n+    return auditMsg;\n+  }\n \n-    @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForResponse(\n-        ProvideAndRegisterDocumentSetRequestType request, XDRAcknowledgementType response, AssertionType assertion,\n-        AuditMessageType auditMsg) {\n-        // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n-        //Request and Response in case of DS\n-        auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n-        auditMsg = getSubmissionSetParticipantObjectIdentification(request, auditMsg);\n-        return auditMsg;\n-    }\n+  @Override\n+  protected AuditMessageType getParticipantObjectIdentificationForResponse(\n+      ProvideAndRegisterDocumentSetRequestType request, XDRAcknowledgementType response, AssertionType assertion,\n+      AuditMessageType auditMsg) {\n+    // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n+    //Request and Response in case of DS\n+    auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n+    auditMsg = getSubmissionSetParticipantObjectIdentification(request, auditMsg);\n+    return auditMsg;\n+  }\n \n-    @Override\n-    protected String getServiceEventIdCodeRequestor() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_DS_SOURCE;\n-    }\n+  @Override\n+  protected String getServiceEventIdCodeRequestor() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_DS_SOURCE;\n+  }\n \n-    @Override\n-    protected String getServiceEventIdCodeResponder() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_DS_RECIPIENT;\n-    }\n+  @Override\n+  protected String getServiceEventIdCodeResponder() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_DS_RECIPIENT;\n+  }\n \n-    @Override\n-    protected String getServiceEventCodeSystem() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_SYSTEM;\n-    }\n+  @Override\n+  protected String getServiceEventCodeSystem() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_SYSTEM;\n+  }\n \n-    @Override\n-    protected String getServiceEventDisplayRequestor() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ID_DISPLAY_SOURCE;\n-    }\n+  @Override\n+  protected String getServiceEventDisplayRequestor() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ID_DISPLAY_SOURCE;\n+  }\n \n-    @Override\n-    protected String getServiceEventDisplayResponder() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ID_DISPLAY_RECIPIENT;\n-    }\n+  @Override\n+  protected String getServiceEventDisplayResponder() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ID_DISPLAY_RECIPIENT;\n+  }\n \n-    @Override\n-    protected String getServiceEventTypeCode() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE;\n-    }\n+  @Override\n+  protected String getServiceEventTypeCode() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE;\n+  }\n \n-    @Override\n-    protected String getServiceEventTypeCodeSystem() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE_SYSTEM;\n-    }\n+  @Override\n+  protected String getServiceEventTypeCodeSystem() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE_SYSTEM;\n+  }\n \n-    @Override\n-    protected String getServiceEventTypeCodeDisplayName() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE_DISPLAY_NAME;\n-    }\n+  @Override\n+  protected String getServiceEventTypeCodeDisplayName() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE_DISPLAY_NAME;\n+  }\n \n-    @Override\n-    protected String getServiceEventActionCodeRequestor() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_SOURCE;\n-    }\n+  @Override\n+  protected String getServiceEventActionCodeRequestor() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_SOURCE;\n+  }\n \n-    @Override\n-    protected String getServiceEventActionCodeResponder() {\n-        return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_RECIPIENT;\n-    }\n+  @Override\n+  protected String getServiceEventActionCodeResponder() {\n+    return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_RECIPIENT;\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1052/DocSubmissionDeferredRequestAuditTransforms.java\nindex 252cc4580e0..1c3f06f25ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1052/DocSubmissionDeferredRequestAuditTransforms.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.audit.transform;\n \n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n@@ -36,28 +37,26 @@ import ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequestType;\n  *\n  * @author tjafri\n  */\n-public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubmissionAuditTransforms<\n-    ProvideAndRegisterDocumentSetRequestType, XDRAcknowledgementType> {\n+public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubmissionAuditTransforms<ProvideAndRegisterDocumentSetRequestType, XDRAcknowledgementType> {\n \n     @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForRequest(\n-        ProvideAndRegisterDocumentSetRequestType request, AssertionType assertion, AuditMessageType auditMsg) {\n+    protected AuditMessageType getParticipantObjectIdentificationForRequest(ProvideAndRegisterDocumentSetRequestType request, AssertionType assertion, AuditMessageType auditMsg) {\n         // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n         //Request and Response in case of DS\n         auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n         auditMsg = getSubmissionSetParticipantObjectIdentification(request, auditMsg);\n-        return auditMsg;\n+\n+return auditMsg;\n     }\n \n     @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForResponse(\n-        ProvideAndRegisterDocumentSetRequestType request, XDRAcknowledgementType response, AssertionType assertion,\n-        AuditMessageType auditMsg) {\n+    protected AuditMessageType getParticipantObjectIdentificationForResponse(ProvideAndRegisterDocumentSetRequestType request, XDRAcknowledgementType response, AssertionType assertion, AuditMessageType auditMsg) {\n         // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n         //Request and Response in case of DS\n         auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n         auditMsg = getSubmissionSetParticipantObjectIdentification(request, auditMsg);\n-        return auditMsg;\n+\n+return auditMsg;\n     }\n \n     @Override\n@@ -109,4 +108,4 @@ public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubm\n     protected String getServiceEventActionCodeResponder() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_RECIPIENT;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1052/DocSubmissionDeferredRequestAuditTransforms.java\nindex 252cc4580e0..f031918ad92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1052/DocSubmissionDeferredRequestAuditTransforms.java\n@@ -36,12 +36,15 @@ import ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequestType;\n  *\n  * @author tjafri\n  */\n-public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubmissionAuditTransforms<\n-    ProvideAndRegisterDocumentSetRequestType, XDRAcknowledgementType> {\n+\n+\n+public class DocSubmissionDeferredRequestAuditTransforms extends\n+    AbstractDocSubmissionAuditTransforms<ProvideAndRegisterDocumentSetRequestType, XDRAcknowledgementType> {\n+\n \n     @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForRequest(\n-        ProvideAndRegisterDocumentSetRequestType request, AssertionType assertion, AuditMessageType auditMsg) {\n+    protected AuditMessageType getParticipantObjectIdentificationForRequest(ProvideAndRegisterDocumentSetRequestType request,\n+        AssertionType assertion, AuditMessageType auditMsg) {\n         // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n         //Request and Response in case of DS\n         auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n@@ -49,10 +52,11 @@ public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubm\n         return auditMsg;\n     }\n \n+\n     @Override\n-    protected AuditMessageType getParticipantObjectIdentificationForResponse(\n-        ProvideAndRegisterDocumentSetRequestType request, XDRAcknowledgementType response, AssertionType assertion,\n-        AuditMessageType auditMsg) {\n+    protected AuditMessageType getParticipantObjectIdentificationForResponse(ProvideAndRegisterDocumentSetRequestType request,\n+        XDRAcknowledgementType response,\n+        AssertionType assertion, AuditMessageType auditMsg) {\n         // PatientParticipantObjetIdentification  and SubmissionSetParticipantObjetIdentification is same for both\n         //Request and Response in case of DS\n         auditMsg = getPatientParticipantObjectIdentification(request, auditMsg);\n@@ -60,53 +64,64 @@ public class DocSubmissionDeferredRequestAuditTransforms extends AbstractDocSubm\n         return auditMsg;\n     }\n \n+\n     @Override\n     protected String getServiceEventIdCodeRequestor() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_DS_SOURCE;\n     }\n \n+\n     @Override\n     protected String getServiceEventIdCodeResponder() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_DS_RECIPIENT;\n     }\n \n+\n     @Override\n     protected String getServiceEventCodeSystem() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ID_CODE_SYSTEM;\n     }\n \n+\n     @Override\n     protected String getServiceEventDisplayRequestor() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ID_DISPLAY_SOURCE;\n     }\n \n+\n     @Override\n     protected String getServiceEventDisplayResponder() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ID_DISPLAY_RECIPIENT;\n     }\n \n+\n     @Override\n     protected String getServiceEventTypeCode() {\n         return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE;\n     }\n \n+\n     @Override\n     protected String getServiceEventTypeCodeSystem() {\n         return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE_SYSTEM;\n     }\n \n+\n     @Override\n     protected String getServiceEventTypeCodeDisplayName() {\n         return DocSubmissionAuditTransformsConstants.EVENT_TYPE_CODE_DISPLAY_NAME;\n     }\n \n+\n     @Override\n     protected String getServiceEventActionCodeRequestor() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_SOURCE;\n     }\n \n+\n     @Override\n     protected String getServiceEventActionCodeResponder() {\n         return DocSubmissionAuditTransformsConstants.EVENT_ACTION_CODE_RECIPIENT;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1052/DocSubmissionDeferredRequestAuditTransforms.java\nindex 252cc4580e0..9ba4591b7d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1052/DocSubmissionDeferredRequestAuditTransforms.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1052/DocSubmissionDeferredRequestAuditTransforms.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.docsubmission.audit.transform;\n+\n+package gov.hhs.fha.nhinc.docsubmission.\n+\n+audit .transform;\n \n import com.services.nhinc.schema.auditmessage.AuditMessageType;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1205",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1205/ResourceIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1205/ResourceIterable.java\nindex 70cb1bf690b..3e1aaed534b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1205/ResourceIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1205/ResourceIterable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n import java.util.stream.Stream;\n@@ -26,10 +27,10 @@ import org.neo4j.annotations.api.PublicApi;\n /**\n  * {@link Iterable} whose {@link ResourceIterator iterators} have associated resources\n  * that need to be released.\n- *\n+ * <p>\n  * {@link ResourceIterator ResourceIterators} are always automatically released when their owning\n  * transaction is committed or rolled back.\n- *\n+ * <p>\n  * Inside a long running transaction, it is possible to release associated resources early. To do so\n  * you must ensure that all returned ResourceIterators are either fully exhausted, or explicitly closed.\n  * <p>\n@@ -44,7 +45,7 @@ import org.neo4j.annotations.api.PublicApi;\n  * }\n  * }\n  * </pre>\n- *\n+ * <p>\n  * However, if your code might not exhaust the iterator, (run until {@link java.util.Iterator#hasNext()}\n  * returns {@code false}), {@link ResourceIterator} provides you with a {@link ResourceIterator#close()} method that\n  * can be invoked to release its associated resources early, by using a {@code finally}-block, or try-with-resource.\n@@ -72,7 +73,6 @@ import org.neo4j.annotations.api.PublicApi;\n  * </pre>\n  *\n  * @param <T> the type of values returned through the iterators\n- *\n  * @see ResourceIterator\n  */\n @PublicApi\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1205/ResourceIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1205/ResourceIterable.java\nindex 70cb1bf690b..7129a1bbc7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1205/ResourceIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1205/ResourceIterable.java\n@@ -91,4 +91,4 @@ public interface ResourceIterable<T> extends Iterable<T>\n     {\n         return iterator().stream();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
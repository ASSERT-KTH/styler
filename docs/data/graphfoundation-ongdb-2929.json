{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2929",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2929/ThreadMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2929/ThreadMetrics.java\nindex 8d26170abe4..1c2b7bfcef6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2929/ThreadMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2929/ThreadMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.jvm;\n \n import com.codahale.metrics.Gauge;\n@@ -29,29 +30,29 @@ import static com.codahale.metrics.MetricRegistry.name;\n \n public class ThreadMetrics extends JvmMetrics\n {\n-    public static final String THREAD_COUNT = name( JvmMetrics.NAME_PREFIX, \"thread.count\" );\n-    public static final String THREAD_TOTAL = name( JvmMetrics.NAME_PREFIX, \"thread.total\" );\n-\n-    private final MetricRegistry registry;\n-    private final ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();\n-\n-    public ThreadMetrics( MetricRegistry registry )\n-    {\n-        this.registry = registry;\n-    }\n-\n-    @Override\n-    public void start()\n-    {\n-        registry.register( THREAD_COUNT, (Gauge<Integer>) Thread::activeCount );\n-        registry.register( THREAD_TOTAL, (Gauge<Integer>) threadMXBean::getThreadCount );\n-    }\n-\n-    @Override\n-    public void stop()\n-    {\n-        registry.remove( THREAD_COUNT );\n-        registry.remove( THREAD_TOTAL );\n-    }\n+  public static final String THREAD_COUNT = name(JvmMetrics.NAME_PREFIX, \"thread.count\");\n+  public static final String THREAD_TOTAL = name(JvmMetrics.NAME_PREFIX, \"thread.total\");\n+\n+  private final MetricRegistry registry;\n+  private final ThreadMXBean threadMXBean = ManagementFactory.getThreadMXBean();\n+\n+  public ThreadMetrics(MetricRegistry registry)\n+  {\n+    this.registry = registry;\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    registry.register(THREAD_COUNT, (Gauge<Integer>) Thread::activeCount);\n+    registry.register(THREAD_TOTAL, (Gauge<Integer>) threadMXBean::getThreadCount);\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    registry.remove(THREAD_COUNT);\n+    registry.remove(THREAD_TOTAL);\n+  }\n }\n \n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2929/ThreadMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2929/ThreadMetrics.java\nindex 8d26170abe4..40a9a7fc3ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2929/ThreadMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2929/ThreadMetrics.java\n@@ -53,5 +53,4 @@ public class ThreadMetrics extends JvmMetrics\n         registry.remove( THREAD_COUNT );\n         registry.remove( THREAD_TOTAL );\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
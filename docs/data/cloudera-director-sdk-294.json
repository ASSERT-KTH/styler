{
    "project_name": "cloudera-director-sdk",
    "error_id": "294",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/294/ExternalAccount.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/294/ExternalAccount.java\nindex 9fbf53e92e4..77f6817e62b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/294/ExternalAccount.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/294/ExternalAccount.java\n@@ -28,7 +28,9 @@ public class ExternalAccount {\n   private String name;\n   /* External account type */\n   private String type;\n-  public ExternalAccount() { }\n+\n+  public ExternalAccount() {\n+  }\n \n   private ExternalAccount(Map<String, String> configs, String name, String type) {\n     this.configs = configs;\n@@ -73,14 +75,16 @@ public class ExternalAccount {\n \n   public ExternalAccountBuilder toBuilder() {\n     return builder()\n-      .configs(configs)\n-      .name(name)\n-      .type(type)\n-      ;\n+        .configs(configs)\n+        .name(name)\n+        .type(type)\n+        ;\n   }\n+\n   public Map<String, String> getConfigs() {\n     return configs;\n   }\n+\n   public void setConfigs(Map<String, String> configs) {\n     this.configs = configs;\n   }\n@@ -88,6 +92,7 @@ public class ExternalAccount {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -95,23 +100,32 @@ public class ExternalAccount {\n   public String getType() {\n     return type;\n   }\n+\n   public void setType(String type) {\n     this.type = type;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     ExternalAccount other = (ExternalAccount) o; // NOPMD\n \n     if (name != null ?\n         !name.equals(other.name) :\n-        other.name != null) return false;\n+        other.name != null) {\n+      return false;\n+    }\n     if (type != null ?\n         !type.equals(other.type) :\n-        other.type != null) return false;\n+        other.type != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -124,7 +138,7 @@ public class ExternalAccount {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalAccount {\" + newLine);\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "97",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/294/ExternalAccount.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/294/ExternalAccount.java\nindex 9fbf53e92e4..f97ebd63e9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/294/ExternalAccount.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/294/ExternalAccount.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v10.model;\n@@ -28,7 +13,8 @@ public class ExternalAccount {\n   private String name;\n   /* External account type */\n   private String type;\n-  public ExternalAccount() { }\n+\n+public ExternalAccount() { }\n \n   private ExternalAccount(Map<String, String> configs, String name, String type) {\n     this.configs = configs;\n@@ -47,7 +33,8 @@ public class ExternalAccount {\n   }\n \n   public static class ExternalAccountBuilder {\n-    private Map<String, String> configs = new HashMap<String, String>();\n+\n+  private Map<String, String> configs = new HashMap<String, String>();\n     private String name = null;\n     private String type = null;\n \n@@ -72,11 +59,9 @@ public class ExternalAccount {\n   }\n \n   public ExternalAccountBuilder toBuilder() {\n-    return builder()\n-      .configs(configs)\n+    return builder().configs(configs)\n       .name(name)\n-      .type(type)\n-      ;\n+      .type(type);\n   }\n   public Map<String, String> getConfigs() {\n     return configs;\n@@ -102,16 +87,16 @@ public class ExternalAccount {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n \n-    ExternalAccount other = (ExternalAccount) o; // NOPMD\n+    ExternalAccount other = (ExternalAccount) o;\n \n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (type != null ?\n-        !type.equals(other.type) :\n-        other.type != null) return false;\n+// NOPMD\n+\n+    if (name != null ?!name.equals(other.name) : other.name != null) return false;\n+\n+if (type != null ?!type.equals(other.type) : other.type != null) return false;\n     return true;\n   }\n \n@@ -124,7 +109,7 @@ public class ExternalAccount {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalAccount {\" + newLine);\n@@ -134,5 +119,4 @@ public class ExternalAccount {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "37",
                    "column": "28",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "29",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "119",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "45",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "124",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "133",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/294/ExternalAccount.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/294/ExternalAccount.java\nindex 9fbf53e92e4..80b5ad33f57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/294/ExternalAccount.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/294/ExternalAccount.java\n@@ -21,34 +21,44 @@ package com.cloudera.director.client.v10.model;\n import java.util.HashMap;\n import java.util.Map;\n \n+\n public class ExternalAccount {\n   /* External account configurations [redacted on read] */\n+\n   private Map<String, String> configs;\n   /* External account name */\n+\n   private String name;\n   /* External account type */\n+\n   private String type;\n-  public ExternalAccount() { }\n+\n+\n+  public ExternalAccount() {}\n+\n \n   private ExternalAccount(Map<String, String> configs, String name, String type) {\n-    this.configs = configs;\n-    this.name = name;\n-    this.type = type;\n-  }\n+                                                                                 this.configs = configs;\n+                                                                                 this.name = name;\n+                                                                                 this.type = type;\n+                             }\n \n   private ExternalAccount(ExternalAccountBuilder builder) {\n-    this.configs = builder.configs;\n-    this.name = builder.name;\n-    this.type = builder.type;\n-  }\n+                                                          this.configs = builder.configs;\n+                                                          this.name = builder.name;\n+                                                          this.type = builder.type;\n+                             }\n \n   public static ExternalAccountBuilder builder() {\n     return new ExternalAccountBuilder();\n   }\n \n   public static class ExternalAccountBuilder {\n+\n     private Map<String, String> configs = new HashMap<String, String>();\n+\n     private String name = null;\n+\n     private String type = null;\n \n     public ExternalAccountBuilder configs(Map<String, String> configs) {\n@@ -75,12 +85,13 @@ public class ExternalAccount {\n     return builder()\n       .configs(configs)\n       .name(name)\n-      .type(type)\n-      ;\n+      .type(type);\n   }\n+\n   public Map<String, String> getConfigs() {\n     return configs;\n   }\n+\n   public void setConfigs(Map<String, String> configs) {\n     this.configs = configs;\n   }\n@@ -88,6 +99,7 @@ public class ExternalAccount {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -95,44 +107,48 @@ public class ExternalAccount {\n   public String getType() {\n     return type;\n   }\n+\n   public void setType(String type) {\n     this.type = type;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n \n-    ExternalAccount other = (ExternalAccount) o; // NOPMD\n+    ExternalAccount other = (ExternalAccount)o; // NOPMD\n \n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (type != null ?\n-        !type.equals(other.type) :\n-        other.type != null) return false;\n+    if (name != null?!name.equals(other.name): other.name != null) return false;\n+    if (type != null?!type.equals(other.type): other.type != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (name != null ? name.hashCode() : 0);\n-    result = 31 * result + (type != null ? type.hashCode() : 0);\n+    result = 31*result + (name != null? name.hashCode():0);\n+    result = 31*result + (type != null? type.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class ExternalAccount {\" + newLine);\n-    sb.append(\"  configs: \").append(\"REDACTED\").append(newLine);\n-    sb.append(\"  name: \").append(name).append(newLine);\n-    sb.append(\"  type: \").append(type).append(newLine);\n+    sb.append(\"  configs: \")\n+      .append(\"REDACTED\").append(newLine);\n+    sb.append(\"  name: \")\n+      .append(name).append(newLine);\n+    sb.append(\"  type: \")\n+      .append(type).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
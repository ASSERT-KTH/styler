{
    "project_name": "neo4j-neo4j",
    "error_id": "1171",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1171/SwapperSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1171/SwapperSet.java\nindex b91c83843e6..a4261ba0d7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1171/SwapperSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1171/SwapperSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import org.eclipse.collections.api.iterator.IntIterator;\n@@ -40,12 +41,12 @@ import org.neo4j.io.pagecache.PageSwapper;\n final class SwapperSet\n {\n     // The sentinel is used to reserve swapper id 0 as a special value.\n-    private static final SwapperMapping SENTINEL = new SwapperMapping( 0, null );\n+    private static final SwapperMapping SENTINEL = new SwapperMapping(0, null);\n     // The tombstone is used as a marker to reserve allocation entries that have been freed, but not yet vacuumed.\n     // An allocation cannot be reused until it has been vacuumed.\n-    private static final SwapperMapping TOMBSTONE = new SwapperMapping( 0, null );\n+    private static final SwapperMapping TOMBSTONE = new SwapperMapping(0, null);\n     private static final int MAX_SWAPPER_ID = (1 << 21) - 1;\n-    private volatile SwapperMapping[] swapperMappings = new SwapperMapping[] { SENTINEL };\n+    private volatile SwapperMapping[] swapperMappings = new SwapperMapping[] {SENTINEL};\n     private final MutableIntSet free = new IntHashSet();\n     private final Object vacuumLock = new Object();\n     private int freeCounter; // Used in `free`; Guarded by `this`\n@@ -58,7 +59,7 @@ final class SwapperSet\n         public final int id;\n         public final PageSwapper swapper;\n \n-        private SwapperMapping( int id, PageSwapper swapper )\n+        private SwapperMapping(int id, PageSwapper swapper)\n         {\n             this.id = id;\n             this.swapper = swapper;\n@@ -68,40 +69,40 @@ final class SwapperSet\n     /**\n      * Get the {@link SwapperMapping} for the given swapper id.\n      */\n-    SwapperMapping getAllocation( int id )\n+    SwapperMapping getAllocation(int id)\n     {\n-        checkId( id );\n+        checkId(id);\n         SwapperMapping swapperMapping = swapperMappings[id];\n-        if ( swapperMapping == null || swapperMapping == TOMBSTONE )\n+        if (swapperMapping == null || swapperMapping == TOMBSTONE)\n         {\n             return null;\n         }\n         return swapperMapping;\n     }\n \n-    private void checkId( int id )\n+    private void checkId(int id)\n     {\n-        if ( id == 0 )\n+        if (id == 0)\n         {\n-            throw new IllegalArgumentException( \"0 is an invalid swapper id\" );\n+            throw new IllegalArgumentException(\"0 is an invalid swapper id\");\n         }\n     }\n \n     /**\n      * Allocate a new swapper id for the given {@link PageSwapper}.\n      */\n-    synchronized int allocate( PageSwapper swapper )\n+    synchronized int allocate(PageSwapper swapper)\n     {\n         SwapperMapping[] swapperMappings = this.swapperMappings;\n \n         // First look for an available freed slot.\n-        synchronized ( free )\n+        synchronized (free)\n         {\n-            if ( !free.isEmpty() )\n+            if (!free.isEmpty())\n             {\n                 int id = free.intIterator().next();\n-                free.remove( id );\n-                swapperMappings[id] = new SwapperMapping( id, swapper );\n+                free.remove(id);\n+                swapperMappings[id] = new SwapperMapping(id, swapper);\n                 this.swapperMappings = swapperMappings; // Volatile store synchronizes-with loads in getters.\n                 return id;\n             }\n@@ -109,12 +110,12 @@ final class SwapperSet\n \n         // No free slot was found above, so we extend the array to make room for a new slot.\n         int id = swapperMappings.length;\n-        if ( id + 1 > MAX_SWAPPER_ID )\n+        if (id + 1 > MAX_SWAPPER_ID)\n         {\n-            throw new IllegalStateException( \"All swapper ids are allocated: \" + MAX_SWAPPER_ID );\n+            throw new IllegalStateException(\"All swapper ids are allocated: \" + MAX_SWAPPER_ID);\n         }\n-        swapperMappings = Arrays.copyOf( swapperMappings, id + 1 );\n-        swapperMappings[id] = new SwapperMapping( id, swapper );\n+        swapperMappings = Arrays.copyOf(swapperMappings, id + 1);\n+        swapperMappings[id] = new SwapperMapping(id, swapper);\n         this.swapperMappings = swapperMappings; // Volatile store synchronizes-with loads in getters.\n         return id;\n     }\n@@ -123,20 +124,20 @@ final class SwapperSet\n      * Free the given swapper id, and return {@code true} if it is time for a\n      * {@link MuninnPageCache#vacuum(SwapperSet)}, otherwise it returns {@code false}.\n      */\n-    synchronized boolean free( int id )\n+    synchronized boolean free(int id)\n     {\n-        checkId( id );\n+        checkId(id);\n         SwapperMapping[] swapperMappings = this.swapperMappings;\n         SwapperMapping current = swapperMappings[id];\n-        if ( current == null || current == TOMBSTONE )\n+        if (current == null || current == TOMBSTONE)\n         {\n             throw new IllegalStateException(\n-                    \"PageSwapper allocation id \" + id + \" is currently not allocated. Likely a double free bug.\" );\n+              \"PageSwapper allocation id \" + id + \" is currently not allocated. Likely a double free bug.\");\n         }\n         swapperMappings[id] = TOMBSTONE;\n         this.swapperMappings = swapperMappings; // Volatile store synchronizes-with loads in getters.\n         freeCounter++;\n-        if ( freeCounter == 20 )\n+        if (freeCounter == 20)\n         {\n             freeCounter = 0;\n             return true;\n@@ -150,22 +151,22 @@ final class SwapperSet\n      * This is done with careful synchronisation such that allocating and freeing of ids is allowed to mostly proceed\n      * concurrently.\n      */\n-    void vacuum( Consumer<IntSet> evictAllLoadedPagesCallback )\n+    void vacuum(Consumer<IntSet> evictAllLoadedPagesCallback)\n     {\n         // We do this complicated locking to avoid blocking allocate() and free() as much as possible, while still only\n         // allow a single thread to do vacuum at a time, and at the same time have consistent locking around the\n         // set of free ids.\n-        synchronized ( vacuumLock )\n+        synchronized (vacuumLock)\n         {\n             // Collect currently free ids.\n             final MutableIntSet freeIds = new IntHashSet();\n             SwapperMapping[] swapperMappings = this.swapperMappings;\n-            for ( int id = 0; id < swapperMappings.length; id++ )\n+            for (int id = 0; id < swapperMappings.length; id++)\n             {\n                 SwapperMapping swapperMapping = swapperMappings[id];\n-                if ( swapperMapping == TOMBSTONE )\n+                if (swapperMapping == TOMBSTONE)\n                 {\n-                    freeIds.add( id );\n+                    freeIds.add(id);\n                 }\n             }\n \n@@ -173,25 +174,25 @@ final class SwapperSet\n             // proceed concurrently with our eviction. This is safe because we know that the ids we are evicting cannot\n             // possibly be reused until we remove them from the free id set, which we won't do until after we've evicted\n             // all of their loaded pages.\n-            evictAllLoadedPagesCallback.accept( freeIds );\n+            evictAllLoadedPagesCallback.accept(freeIds);\n \n             // Finally, all of the pages that remained in memory with an unmapped swapper id have been evicted. We can\n             // now safely allow those ids to be reused. Note, however, that free() might have been called while we were\n             // doing this, so we can't just free.clear() the set; no, we have to explicitly remove only those specific\n             // ids whose pages we evicted.\n-            synchronized ( this )\n+            synchronized (this)\n             {\n                 final IntIterator itr = freeIds.intIterator();\n-                while ( itr.hasNext() )\n+                while (itr.hasNext())\n                 {\n                     int freeId = itr.next();\n                     swapperMappings[freeId] = null;\n                 }\n                 this.swapperMappings = swapperMappings; // Volatile store synchronizes-with loads in getters.\n             }\n-            synchronized ( free )\n+            synchronized (free)\n             {\n-                free.addAll( freeIds );\n+                free.addAll(freeIds);\n             }\n         }\n     }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1171/SwapperSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1171/SwapperSet.java\nindex b91c83843e6..7b84b93904f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1171/SwapperSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1171/SwapperSet.java\n@@ -204,4 +204,4 @@ final class SwapperSet\n         available += free.size(); // add back the ids that are free to be reused\n         return available;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
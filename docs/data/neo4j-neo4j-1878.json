{
    "project_name": "neo4j-neo4j",
    "error_id": "1878",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "89",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "213",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "245",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "279",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "292",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "324",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "339",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "361",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1878/SslPolicyLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1878/SslPolicyLoader.java\nindex c0ff2f18a67..515ebc3329b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1878/SslPolicyLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1878/SslPolicyLoader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.ssl.config;\n \n import io.netty.handler.ssl.SslProvider;\n@@ -76,22 +77,22 @@ import static java.nio.file.Files.exists;\n public class SslPolicyLoader\n {\n     private static final DirectoryStream.Filter<Path> ALL_FILES = path -> true;\n-    private static final DirectoryStream.Filter<Path> SKIP_DOT_FILES = path -> !path.getFileName().toString().startsWith( \".\" );\n+    private static final DirectoryStream.Filter<Path> SKIP_DOT_FILES = path -> !path.getFileName().toString().startsWith(\".\");\n \n-    private final Map<SslPolicyScope,SslPolicy> policies = new ConcurrentHashMap<>();\n+    private final Map<SslPolicyScope, SslPolicy> policies = new ConcurrentHashMap<>();\n     private final Config config;\n     private final SslProvider sslProvider;\n     private final LogProvider logProvider;\n     private final Log log;\n     private final boolean skipDotFiles;\n \n-    private SslPolicyLoader( Config config, LogProvider logProvider )\n+    private SslPolicyLoader(Config config, LogProvider logProvider)\n     {\n         this.config = config;\n-        this.skipDotFiles = config.get( SslSystemInternalSettings.ignore_dotfiles );\n-        this.sslProvider = config.get( SslSystemSettings.netty_ssl_provider );\n+        this.skipDotFiles = config.get(SslSystemInternalSettings.ignore_dotfiles);\n+        this.sslProvider = config.get(SslSystemSettings.netty_ssl_provider);\n         this.logProvider = logProvider;\n-        this.log = logProvider.getLog( SslPolicyLoader.class );\n+        this.log = logProvider.getLog(SslPolicyLoader.class);\n     }\n \n     /**\n@@ -100,9 +101,9 @@ public class SslPolicyLoader\n      * @param config The configuration for the SSL policies.\n      * @return A factory populated with SSL policies.\n      */\n-    public static SslPolicyLoader create( Config config, LogProvider logProvider )\n+    public static SslPolicyLoader create(Config config, LogProvider logProvider)\n     {\n-        SslPolicyLoader policyFactory = new SslPolicyLoader( config, logProvider );\n+        SslPolicyLoader policyFactory = new SslPolicyLoader(config, logProvider);\n         policyFactory.load();\n         return policyFactory;\n     }\n@@ -116,260 +117,250 @@ public class SslPolicyLoader\n      * to each respective SSL policy using component to decide exactly what that means.\n      * @throws IllegalArgumentException If a policy with the supplied name does not exist.\n      */\n-    public SslPolicy getPolicy( SslPolicyScope scope )\n+    public SslPolicy getPolicy(SslPolicyScope scope)\n     {\n-        if ( scope == null )\n+        if (scope == null)\n         {\n             return null;\n         }\n \n-        SslPolicy sslPolicy = policies.get( scope );\n+        SslPolicy sslPolicy = policies.get(scope);\n \n-        if ( sslPolicy == null )\n+        if (sslPolicy == null)\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Cannot find enabled SSL policy with name '%s' in the configuration\", scope ) );\n+              format(\"Cannot find enabled SSL policy with name '%s' in the configuration\", scope));\n         }\n         return sslPolicy;\n     }\n \n-    public boolean hasPolicyForSource( SslPolicyScope scope )\n+    public boolean hasPolicyForSource(SslPolicyScope scope)\n     {\n-        return policies.containsKey( scope );\n+        return policies.containsKey(scope);\n     }\n \n     private void load()\n     {\n-        config.getGroups( SslPolicyConfig.class ).values().forEach( this::addPolicy );\n+        config.getGroups(SslPolicyConfig.class).values().forEach(this::addPolicy);\n \n-        policies.forEach( ( scope, sslPolicy ) -> log.info( format( \"Loaded SSL policy '%s' = %s\", scope.name(), sslPolicy ) ) );\n+        policies.forEach((scope, sslPolicy) -> log.info(format(\"Loaded SSL policy '%s' = %s\", scope.name(), sslPolicy)));\n     }\n \n-    private void addPolicy( SslPolicyConfig policyConfig )\n+    private void addPolicy(SslPolicyConfig policyConfig)\n     {\n-        if ( config.get( policyConfig.enabled ) )\n+        if (config.get(policyConfig.enabled))\n         {\n             SslPolicyScope scope = policyConfig.getScope();\n-            SslPolicy policy = createSslPolicy( policyConfig );\n-            if ( policies.put( scope, policy ) != null )\n+            SslPolicy policy = createSslPolicy(policyConfig);\n+            if (policies.put(scope, policy) != null)\n             {\n-                throw new IllegalStateException( \"Can not have multiple SslPolicies configured for \" + scope.name() );\n+                throw new IllegalStateException(\"Can not have multiple SslPolicies configured for \" + scope.name());\n             }\n         }\n     }\n \n-    private SslPolicy createSslPolicy( SslPolicyConfig policyConfig )\n+    private SslPolicy createSslPolicy(SslPolicyConfig policyConfig)\n     {\n-        Path baseDirectory = config.get( policyConfig.base_directory );\n-        Path revokedCertificatesDir = config.get( policyConfig.revoked_dir );\n+        Path baseDirectory = config.get(policyConfig.base_directory);\n+        Path revokedCertificatesDir = config.get(policyConfig.revoked_dir);\n \n-        if ( Files.notExists( baseDirectory ) )\n+        if (Files.notExists(baseDirectory))\n         {\n             throw new IllegalArgumentException(\n-                    format( \"Base directory '%s' for SSL policy with name '%s' does not exist.\", baseDirectory, policyConfig.name() ) );\n+              format(\"Base directory '%s' for SSL policy with name '%s' does not exist.\", baseDirectory, policyConfig.name()));\n         }\n \n-        KeyAndChain keyAndChain = pemKeyAndChain( policyConfig );\n+        KeyAndChain keyAndChain = pemKeyAndChain(policyConfig);\n \n-        Collection<X509CRL> crls = getCRLs( revokedCertificatesDir, certificateFilenameFilter() );\n+        Collection<X509CRL> crls = getCRLs(revokedCertificatesDir, certificateFilenameFilter());\n         TrustManagerFactory trustManagerFactory;\n         try\n         {\n-            trustManagerFactory = createTrustManagerFactory( config.get( policyConfig.trust_all ), crls, keyAndChain.trustStore );\n-        }\n-        catch ( Exception e )\n+            trustManagerFactory = createTrustManagerFactory(config.get(policyConfig.trust_all), crls, keyAndChain.trustStore);\n+        } catch (Exception e)\n         {\n-            throw new RuntimeException( \"Failed to create trust manager\", e );\n+            throw new RuntimeException(\"Failed to create trust manager\", e);\n         }\n \n-        boolean verifyHostname = config.get( policyConfig.verify_hostname );\n-        ClientAuth clientAuth = config.get( policyConfig.client_auth );\n-        List<String> tlsVersions = config.get( policyConfig.tls_versions );\n-        List<String> ciphers = config.get( policyConfig.ciphers );\n+        boolean verifyHostname = config.get(policyConfig.verify_hostname);\n+        ClientAuth clientAuth = config.get(policyConfig.client_auth);\n+        List<String> tlsVersions = config.get(policyConfig.tls_versions);\n+        List<String> ciphers = config.get(policyConfig.ciphers);\n \n         return new SslPolicy(\n-                keyAndChain.privateKey,\n-                keyAndChain.keyCertChain,\n-                tlsVersions,\n-                ciphers,\n-                clientAuth,\n-                trustManagerFactory,\n-                sslProvider,\n-                verifyHostname,\n-                logProvider );\n+          keyAndChain.privateKey,\n+          keyAndChain.keyCertChain,\n+          tlsVersions,\n+          ciphers,\n+          clientAuth,\n+          trustManagerFactory,\n+          sslProvider,\n+          verifyHostname,\n+          logProvider);\n     }\n \n-    private KeyAndChain pemKeyAndChain( SslPolicyConfig policyConfig )\n+    private KeyAndChain pemKeyAndChain(SslPolicyConfig policyConfig)\n     {\n-        Path privateKeyFile = config.get( policyConfig.private_key );\n-        SecureString privateKeyPassword = config.get( policyConfig.private_key_password );\n-        Path trustedCertificatesDir = config.get( policyConfig.trusted_dir );\n+        Path privateKeyFile = config.get(policyConfig.private_key);\n+        SecureString privateKeyPassword = config.get(policyConfig.private_key_password);\n+        Path trustedCertificatesDir = config.get(policyConfig.trusted_dir);\n \n-        ClientAuth clientAuth = config.get( policyConfig.client_auth );\n+        ClientAuth clientAuth = config.get(policyConfig.client_auth);\n         KeyStore trustStore;\n         try\n         {\n-            trustStore = createTrustStoreFromPem( trustedCertificatesDir, clientAuth );\n-        }\n-        catch ( Exception e )\n+            trustStore = createTrustStoreFromPem(trustedCertificatesDir, clientAuth);\n+        } catch (Exception e)\n         {\n-            throw new RuntimeException( \"Failed to create trust manager based on: \" + trustedCertificatesDir, e );\n+            throw new RuntimeException(\"Failed to create trust manager based on: \" + trustedCertificatesDir, e);\n         }\n \n-        if ( policyConfig.getScope().isClientOnly() && !exists( privateKeyFile ) )\n+        if (policyConfig.getScope().isClientOnly() && !exists(privateKeyFile))\n         {\n-            return new KeyAndChain( null, new X509Certificate[0], trustStore );\n+            return new KeyAndChain(null, new X509Certificate[0], trustStore);\n         }\n \n         PrivateKey privateKey;\n \n         X509Certificate[] keyCertChain;\n-        Path keyCertChainFile = config.get( policyConfig.public_certificate );\n+        Path keyCertChainFile = config.get(policyConfig.public_certificate);\n \n-        privateKey = loadPrivateKey( privateKeyFile, privateKeyPassword );\n-        keyCertChain = loadCertificateChain( keyCertChainFile );\n+        privateKey = loadPrivateKey(privateKeyFile, privateKeyPassword);\n+        keyCertChain = loadCertificateChain(keyCertChainFile);\n \n-        return new KeyAndChain( privateKey, keyCertChain, trustStore );\n+        return new KeyAndChain(privateKey, keyCertChain, trustStore);\n     }\n \n-    private static Collection<X509CRL> getCRLs( Path revokedCertificatesDir, DirectoryStream.Filter<Path> filter )\n+    private static Collection<X509CRL> getCRLs(Path revokedCertificatesDir, DirectoryStream.Filter<Path> filter)\n     {\n-        if ( Files.notExists( revokedCertificatesDir ) )\n+        if (Files.notExists(revokedCertificatesDir))\n         {\n             return new ArrayList<>();\n         }\n \n         Path[] revocationFiles;\n-        try ( DirectoryStream<Path> paths = Files.newDirectoryStream( revokedCertificatesDir, filter ) )\n+        try (DirectoryStream<Path> paths = Files.newDirectoryStream(revokedCertificatesDir, filter))\n         {\n-            revocationFiles = StreamSupport.stream( paths.spliterator(), false ).toArray( Path[]::new );\n-        }\n-        catch ( IOException e )\n+            revocationFiles = StreamSupport.stream(paths.spliterator(), false).toArray(Path[]::new);\n+        } catch (IOException e)\n         {\n-            throw new RuntimeException( format( \"Could not find or list files in revoked directory: %s\", revokedCertificatesDir ), e );\n+            throw new RuntimeException(format(\"Could not find or list files in revoked directory: %s\", revokedCertificatesDir), e);\n         }\n \n         CertificateFactory certificateFactory;\n         try\n         {\n-            certificateFactory = CertificateFactory.getInstance( PkiUtils.CERTIFICATE_TYPE );\n-        }\n-        catch ( CertificateException e )\n+            certificateFactory = CertificateFactory.getInstance(PkiUtils.CERTIFICATE_TYPE);\n+        } catch (CertificateException e)\n         {\n-            throw new RuntimeException( \"Could not generated certificate factory\", e );\n+            throw new RuntimeException(\"Could not generated certificate factory\", e);\n         }\n \n         Collection<X509CRL> crls = new ArrayList<>();\n-        for ( Path crl : revocationFiles )\n+        for (Path crl : revocationFiles)\n         {\n-            try ( InputStream input = Files.newInputStream( crl ) )\n+            try (InputStream input = Files.newInputStream(crl))\n             {\n-                crls.addAll( (Collection<X509CRL>) certificateFactory.generateCRLs( input ) );\n-            }\n-            catch ( IOException | CRLException e )\n+                crls.addAll((Collection<X509CRL>) certificateFactory.generateCRLs(input));\n+            } catch (IOException | CRLException e)\n             {\n-                throw new RuntimeException( format( \"Could not load CRL: %s\", crl ), e );\n+                throw new RuntimeException(format(\"Could not load CRL: %s\", crl), e);\n             }\n         }\n \n         return crls;\n     }\n \n-    private static X509Certificate[] loadCertificateChain( Path keyCertChainFile )\n+    private static X509Certificate[] loadCertificateChain(Path keyCertChainFile)\n     {\n         try\n         {\n-            return PkiUtils.loadCertificates( keyCertChainFile );\n-        }\n-        catch ( Exception e )\n+            return PkiUtils.loadCertificates(keyCertChainFile);\n+        } catch (Exception e)\n         {\n-            throw new RuntimeException( \"Failed to load public certificate chain: \" + keyCertChainFile, e );\n+            throw new RuntimeException(\"Failed to load public certificate chain: \" + keyCertChainFile, e);\n         }\n     }\n \n-    private PrivateKey loadPrivateKey( Path privateKeyFile, SecureString privateKeyPassword )\n+    private PrivateKey loadPrivateKey(Path privateKeyFile, SecureString privateKeyPassword)\n     {\n         String password = privateKeyPassword != null ? privateKeyPassword.getString() : null;\n \n         try\n         {\n-            return PkiUtils.loadPrivateKey( privateKeyFile, password );\n-        }\n-        catch ( Exception e )\n+            return PkiUtils.loadPrivateKey(privateKeyFile, password);\n+        } catch (Exception e)\n         {\n-            throw new RuntimeException( \"Failed to load private key: \" + privateKeyFile +\n-                                        (privateKeyPassword == null ? \"\" : \" (using configured password)\"), e );\n+            throw new RuntimeException(\"Failed to load private key: \" + privateKeyFile +\n+              (privateKeyPassword == null ? \"\" : \" (using configured password)\"), e);\n         }\n     }\n \n-    private static TrustManagerFactory createTrustManagerFactory( boolean trustAll, Collection<X509CRL> crls, KeyStore trustStore ) throws Exception\n+    private static TrustManagerFactory createTrustManagerFactory(boolean trustAll, Collection<X509CRL> crls, KeyStore trustStore) throws Exception\n     {\n-        if ( trustAll )\n+        if (trustAll)\n         {\n             return InsecureTrustManagerFactory.INSTANCE;\n         }\n \n-        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance( TrustManagerFactory.getDefaultAlgorithm() );\n+        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n \n-        if ( !crls.isEmpty() )\n+        if (!crls.isEmpty())\n         {\n-            PKIXBuilderParameters pkixParamsBuilder = new PKIXBuilderParameters( trustStore, new X509CertSelector() );\n-            pkixParamsBuilder.setRevocationEnabled( true );\n+            PKIXBuilderParameters pkixParamsBuilder = new PKIXBuilderParameters(trustStore, new X509CertSelector());\n+            pkixParamsBuilder.setRevocationEnabled(true);\n \n-            pkixParamsBuilder.addCertStore( CertStore.getInstance( \"Collection\",\n-                    new CollectionCertStoreParameters( crls ) ) );\n+            pkixParamsBuilder.addCertStore(CertStore.getInstance(\"Collection\",\n+              new CollectionCertStoreParameters(crls)));\n \n-            trustManagerFactory.init( new CertPathTrustManagerParameters( pkixParamsBuilder ) );\n-        }\n-        else\n+            trustManagerFactory.init(new CertPathTrustManagerParameters(pkixParamsBuilder));\n+        } else\n         {\n-            trustManagerFactory.init( trustStore );\n+            trustManagerFactory.init(trustStore);\n         }\n         return trustManagerFactory;\n     }\n \n-    private KeyStore createTrustStoreFromPem( Path trustedCertificatesDir, ClientAuth clientAuth )\n-            throws KeyStoreException, IOException, NoSuchAlgorithmException, CertificateException\n+    private KeyStore createTrustStoreFromPem(Path trustedCertificatesDir, ClientAuth clientAuth)\n+      throws KeyStoreException, IOException, NoSuchAlgorithmException, CertificateException\n     {\n-        KeyStore trustStore = KeyStore.getInstance( KeyStore.getDefaultType() );\n-        trustStore.load( null, null );\n+        KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n+        trustStore.load(null, null);\n \n-        if ( Files.notExists( trustedCertificatesDir ) )\n+        if (Files.notExists(trustedCertificatesDir))\n         {\n             return trustStore;\n         }\n \n         Path[] trustedCertFiles;\n-        try ( DirectoryStream<Path> paths = Files.newDirectoryStream( trustedCertificatesDir, certificateFilenameFilter() ) )\n+        try (DirectoryStream<Path> paths = Files.newDirectoryStream(trustedCertificatesDir, certificateFilenameFilter()))\n         {\n-            trustedCertFiles = StreamSupport.stream( paths.spliterator(), false ).toArray( Path[]::new );\n-        }\n-        catch ( IOException e )\n+            trustedCertFiles = StreamSupport.stream(paths.spliterator(), false).toArray(Path[]::new);\n+        } catch (IOException e)\n         {\n-            throw new RuntimeException( format( \"Could not find or list files in trusted directory: %s\", trustedCertificatesDir ), e );\n+            throw new RuntimeException(format(\"Could not find or list files in trusted directory: %s\", trustedCertificatesDir), e);\n         }\n \n-        if ( clientAuth == ClientAuth.REQUIRE && trustedCertFiles.length == 0 )\n+        if (clientAuth == ClientAuth.REQUIRE && trustedCertFiles.length == 0)\n         {\n-            throw new RuntimeException( format( \"Client auth is required but no trust anchors found in: %s\", trustedCertificatesDir ) );\n+            throw new RuntimeException(format(\"Client auth is required but no trust anchors found in: %s\", trustedCertificatesDir));\n         }\n \n         int i = 0;\n-        for ( Path trustedCertFile : trustedCertFiles )\n+        for (Path trustedCertFile : trustedCertFiles)\n         {\n-            CertificateFactory certificateFactory = CertificateFactory.getInstance( PkiUtils.CERTIFICATE_TYPE );\n-            try ( InputStream input = Files.newInputStream( trustedCertFile ) )\n+            CertificateFactory certificateFactory = CertificateFactory.getInstance(PkiUtils.CERTIFICATE_TYPE);\n+            try (InputStream input = Files.newInputStream(trustedCertFile))\n             {\n-                while ( input.available() > 0 )\n+                while (input.available() > 0)\n                 {\n                     try\n                     {\n-                        X509Certificate cert = (X509Certificate) certificateFactory.generateCertificate( input );\n-                        trustStore.setCertificateEntry( Integer.toString( i++ ), cert );\n-                    }\n-                    catch ( Exception e )\n+                        X509Certificate cert = (X509Certificate) certificateFactory.generateCertificate(input);\n+                        trustStore.setCertificateEntry(Integer.toString(i++), cert);\n+                    } catch (Exception e)\n                     {\n-                        throw new CertificateException( \"Error loading certificate file: \" + trustedCertFile, e );\n+                        throw new CertificateException(\"Error loading certificate file: \" + trustedCertFile, e);\n                     }\n                 }\n             }\n@@ -383,7 +374,7 @@ public class SslPolicyLoader\n         final X509Certificate[] keyCertChain;\n         final KeyStore trustStore;\n \n-        private KeyAndChain( PrivateKey privateKey, X509Certificate[] keyCertChain, KeyStore trustStore )\n+        private KeyAndChain(PrivateKey privateKey, X509Certificate[] keyCertChain, KeyStore trustStore)\n         {\n             this.privateKey = privateKey;\n             this.keyCertChain = keyCertChain;\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
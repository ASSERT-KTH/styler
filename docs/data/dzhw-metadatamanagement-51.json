{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "51",
    "information": {
        "errors": [
            {
                "line": "21",
                "column": "84",
                "severity": "error",
                "message": "'}' at column 84 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidRepeatedMeasurementIdentifier constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/51/ValidRepeatedMeasurementIdentifierValidator.java\nindex 947cdb566bb..b9d79bda1d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/51/ValidRepeatedMeasurementIdentifierValidator.java\n@@ -7,22 +7,22 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n \n /**\n  * This validator checks the repeated measurement identifier.\n- *\n  */\n public class ValidRepeatedMeasurementIdentifierValidator\n     implements ConstraintValidator<ValidRepeatedMeasurementIdentifier, Variable> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidRepeatedMeasurementIdentifier constraintAnnotation) {}\n+  public void initialize(ValidRepeatedMeasurementIdentifier constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/51/ValidRepeatedMeasurementIdentifierValidator.java\nindex 947cdb566bb..d6466db6c0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/51/ValidRepeatedMeasurementIdentifierValidator.java\n@@ -38,4 +38,4 @@ public class ValidRepeatedMeasurementIdentifierValidator\n           .getDataAcquisitionProjectId() + \"-ds\" + variable.getDataSetNumber() + \"-\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/51/ValidRepeatedMeasurementIdentifierValidator.java\nindex 947cdb566bb..e6e0607b0c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/51/ValidRepeatedMeasurementIdentifierValidator.java\n@@ -2,23 +2,26 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n \n /**\n  * This validator checks the repeated measurement identifier.\n  *\n  */\n-public class ValidRepeatedMeasurementIdentifierValidator\n-    implements ConstraintValidator<ValidRepeatedMeasurementIdentifier, Variable> {\n+\n+\n+public class ValidRepeatedMeasurementIdentifierValidator implements ConstraintValidator<ValidRepeatedMeasurementIdentifier, Variable> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidRepeatedMeasurementIdentifier constraintAnnotation) {}\n+  public void initialize(ValidRepeatedMeasurementIdentifier constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -26,16 +29,19 @@ public class ValidRepeatedMeasurementIdentifierValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n+  public boolean isValid(Variable variable,\n+    ConstraintValidatorContext context) {\n     if (variable.isShadow()) {\n       return true;\n     } else {\n       if (variable.getRepeatedMeasurementIdentifier() == null) {\n         return true;\n       }\n-      return variable.getRepeatedMeasurementIdentifier().contains(variable\n-          .getDataAcquisitionProjectId() + \"-ds\" + variable.getDataSetNumber() + \"-\");\n+\n+      return variable.getRepeatedMeasurementIdentifier().contains(variable.getDataAcquisitionProjectId() + \"-ds\" + variable.getDataSetNumber() + \"-\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "column": "84",
                    "severity": "error",
                    "message": "'}' at column 84 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/51/ValidRepeatedMeasurementIdentifierValidator.java\nindex 947cdb566bb..1a26c4a4f33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/51/ValidRepeatedMeasurementIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/51/ValidRepeatedMeasurementIdentifierValidator.java\n@@ -19,7 +19,6 @@ public class ValidRepeatedMeasurementIdentifierValidator\n    */\n   @Override\n   public void initialize(ValidRepeatedMeasurementIdentifier constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
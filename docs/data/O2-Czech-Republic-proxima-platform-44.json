{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "44",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Pattern matcher for syntax used for patterns in input config. Accepted patterns can contain\n * wildcards (*) which are then translated into {@code java.util.regex.Pattern}s.\n */\n@Internal",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/44/NamePattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/44/NamePattern.java\nindex e5cef7321c4..9f9b093a3da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/44/NamePattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/44/NamePattern.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.util;\n \n import cz.o2.proxima.annotations.Internal;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'boolean' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/44/NamePattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/44/NamePattern.java\nindex e5cef7321c4..e40be349b29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/44/NamePattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/44/NamePattern.java\n@@ -41,7 +41,8 @@ public class NamePattern implements Serializable {\n     this.pattern = convert(Objects.requireNonNull(pattern), prefixOnly);\n   }\n \n-  private String convert(String pattern, boolean prefixOnly) {\n+  private String convert(String pattern,\n+boolean prefixOnly) {\n     if (prefixOnly) {\n       return pattern.substring(0, pattern.length() - 1);\n     }\n@@ -74,4 +75,4 @@ public class NamePattern implements Serializable {\n   public int hashCode() {\n     return Objects.hash(pattern, prefixOnly);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/44/NamePattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/44/NamePattern.java\nindex e5cef7321c4..fbddcc978fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/44/NamePattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/44/NamePattern.java\n@@ -23,11 +23,12 @@ import java.util.Objects;\n  * Pattern matcher for syntax used for patterns in input config. Accepted patterns can contain\n  * wildcards (*) which are then translated into {@code java.util.regex.Pattern}s.\n  */\n+\n+\n @Internal\n public class NamePattern implements Serializable {\n \n   private static final long serialVersionUID = 1L;\n-\n   private final String pattern;\n   private final boolean prefixOnly;\n \n@@ -36,6 +37,7 @@ public class NamePattern implements Serializable {\n    *\n    * @param pattern string pattern to wrap into this object\n    */\n+\n   public NamePattern(String pattern) {\n     this.prefixOnly = pattern.endsWith(\".*\");\n     this.pattern = convert(Objects.requireNonNull(pattern), prefixOnly);\n@@ -54,6 +56,7 @@ public class NamePattern implements Serializable {\n    * @param what the string to match\n    * @return {@code true} if matches\n    */\n+\n   public boolean matches(String what) {\n     if (prefixOnly) {\n       return what.startsWith(pattern);\n@@ -74,4 +77,4 @@ public class NamePattern implements Serializable {\n   public int hashCode() {\n     return Objects.hash(pattern, prefixOnly);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
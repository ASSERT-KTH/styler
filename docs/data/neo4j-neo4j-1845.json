{
    "project_name": "neo4j-neo4j",
    "error_id": "1845",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "146",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1845/JavaSourceClassWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1845/JavaSourceClassWriter.java\nindex e18b9c0327d..51108f23d97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1845/JavaSourceClassWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1845/JavaSourceClassWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.source;\n \n import java.lang.reflect.Modifier;\n@@ -38,149 +39,146 @@ class JavaSourceClassWriter implements ClassWriter\n     private final StringBuilder target;\n     final Configuration configuration;\n \n-    JavaSourceClassWriter( StringBuilder target, Configuration configuration )\n+    JavaSourceClassWriter(StringBuilder target, Configuration configuration)\n     {\n         this.target = target;\n         this.configuration = configuration;\n     }\n \n-    void declarePackage( TypeReference type )\n+    void declarePackage(TypeReference type)\n     {\n-        append( \"package \" ).append( type.packageName() ).append( \";\\n\" );\n+        append(\"package \").append(type.packageName()).append(\";\\n\");\n     }\n \n-    void javadoc( String javadoc )\n+    void javadoc(String javadoc)\n     {\n-        append( \"/** \" ).append( javadoc ).append( \" */\\n\" );\n+        append(\"/** \").append(javadoc).append(\" */\\n\");\n     }\n \n-    void publicClass( TypeReference type )\n+    void publicClass(TypeReference type)\n     {\n-        append( \"public class \" ).append( type.name() );\n+        append(\"public class \").append(type.name());\n     }\n \n-    void extendClass( TypeReference base )\n+    void extendClass(TypeReference base)\n     {\n-        append( \" extends \" ).append( base.fullName() ).append( \"\\n\" );\n+        append(\" extends \").append(base.fullName()).append(\"\\n\");\n     }\n \n-    void implement( TypeReference[] interfaces )\n+    void implement(TypeReference[] interfaces)\n     {\n         String prefix = \"    implements \";\n-        for ( TypeReference iFace : interfaces )\n+        for (TypeReference iFace : interfaces)\n         {\n-            append( prefix ).append( iFace.fullName() );\n+            append(prefix).append(iFace.fullName());\n             prefix = \", \";\n         }\n-        if ( prefix.length() == 2 )\n+        if (prefix.length() == 2)\n         {\n-            append( \"\\n\" );\n+            append(\"\\n\");\n         }\n     }\n \n     void begin()\n     {\n-        append( \"{\\n\" );\n+        append(\"{\\n\");\n     }\n \n     @Override\n-    public MethodWriter method( MethodDeclaration signature )\n+    public MethodWriter method(MethodDeclaration signature)\n     {\n         StringBuilder target = new StringBuilder();\n-        if ( signature.isConstructor() )\n+        if (signature.isConstructor())\n         {\n-            if ( signature.isStatic() )\n+            if (signature.isStatic())\n             {\n-                target.append( \"    static\\n    {\\n\" );\n-                return new JavaSourceMethodWriter( target, this, signature.isStatic() );\n-            }\n-            else\n+                target.append(\"    static\\n    {\\n\");\n+                return new JavaSourceMethodWriter(target, this, signature.isStatic());\n+            } else\n             {\n-                target.append( \"    \" ).append( Modifier.toString( signature.modifiers() ) ).append( ' ' );\n-                typeParameters( target, signature );\n-                target.append( signature.declaringClass().name() );\n+                target.append(\"    \").append(Modifier.toString(signature.modifiers())).append(' ');\n+                typeParameters(target, signature);\n+                target.append(signature.declaringClass().name());\n             }\n-        }\n-        else\n+        } else\n         {\n-            target.append( \"    \" ).append( Modifier.toString( signature.modifiers() ) ).append( ' ' );\n-            typeParameters( target, signature );\n-            target.append( signature.returnType().fullName() ).append( ' ' ).append( signature.name() );\n+            target.append(\"    \").append(Modifier.toString(signature.modifiers())).append(' ');\n+            typeParameters(target, signature);\n+            target.append(signature.returnType().fullName()).append(' ').append(signature.name());\n         }\n-        target.append( '(' );\n+        target.append('(');\n         String prefix = \" \";\n-        for ( Parameter parameter : signature.parameters() )\n+        for (Parameter parameter : signature.parameters())\n         {\n-            target.append( prefix ).append( parameter.type().fullName() ).append( ' ' ).append( parameter.name() );\n+            target.append(prefix).append(parameter.type().fullName()).append(' ').append(parameter.name());\n             prefix = \", \";\n         }\n-        if ( prefix.length() > 1 )\n+        if (prefix.length() > 1)\n         {\n-            target.append( ' ' );\n+            target.append(' ');\n         }\n-        target.append( ')' );\n+        target.append(')');\n         String sep = \" throws \";\n-        for ( TypeReference thrown : signature.throwsList() )\n+        for (TypeReference thrown : signature.throwsList())\n         {\n-            target.append( sep ).append( thrown.fullName() );\n+            target.append(sep).append(thrown.fullName());\n             sep = \", \";\n         }\n-        target.append( \"\\n    {\\n\" );\n-        return new JavaSourceMethodWriter( target, this, signature.isStatic() );\n+        target.append(\"\\n    {\\n\");\n+        return new JavaSourceMethodWriter(target, this, signature.isStatic());\n     }\n \n-    private static void typeParameters( StringBuilder target, MethodDeclaration method )\n+    private static void typeParameters(StringBuilder target, MethodDeclaration method)\n     {\n         List<MethodDeclaration.TypeParameter> parameters = method.typeParameters();\n-        if ( !parameters.isEmpty() )\n+        if (!parameters.isEmpty())\n         {\n-            target.append( '<' );\n+            target.append('<');\n             String sep = \"\";\n-            for ( MethodDeclaration.TypeParameter parameter : parameters )\n+            for (MethodDeclaration.TypeParameter parameter : parameters)\n             {\n-                target.append( sep ).append( parameter.name() );\n+                target.append(sep).append(parameter.name());\n                 TypeReference ext = parameter.extendsBound();\n                 TypeReference sup = parameter.superBound();\n-                if ( ext != null )\n+                if (ext != null)\n                 {\n-                    target.append( \" extends \" ).append( ext.fullName() );\n-                }\n-                else if ( sup != null )\n+                    target.append(\" extends \").append(ext.fullName());\n+                } else if (sup != null)\n                 {\n-                    target.append( \" super \" ).append( sup.fullName() );\n+                    target.append(\" super \").append(sup.fullName());\n                 }\n                 sep = \", \";\n             }\n-            target.append( \"> \" );\n+            target.append(\"> \");\n         }\n     }\n \n     @Override\n     public void done()\n     {\n-        append( \"}\\n\" );\n+        append(\"}\\n\");\n     }\n \n     @Override\n-    public void field( FieldReference field, Expression value )\n+    public void field(FieldReference field, Expression value)\n     {\n-        String modifiers = Modifier.toString( field.modifiers() );\n-        append( \"    \" ).append( modifiers );\n-        if ( !modifiers.isEmpty() )\n+        String modifiers = Modifier.toString(field.modifiers());\n+        append(\"    \").append(modifiers);\n+        if (!modifiers.isEmpty())\n         {\n-            append( \" \" );\n+            append(\" \");\n         }\n-        append( field.type().fullName() ).append( ' ' ).append( field.name() );\n-        if ( value != null )\n+        append(field.type().fullName()).append(' ').append(field.name());\n+        if (value != null)\n         {\n-            append( \" = \" );\n-            value.accept( new JavaSourceMethodWriter( target, this, false ) );\n+            append(\" = \");\n+            value.accept(new JavaSourceMethodWriter(target, this, false));\n         }\n-        append( \";\\n\" );\n+        append(\";\\n\");\n     }\n \n-    StringBuilder append( CharSequence chars )\n+    StringBuilder append(CharSequence chars)\n     {\n-        return target.append( chars );\n+        return target.append(chars);\n     }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1845/JavaSourceClassWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1845/JavaSourceClassWriter.java\nindex e18b9c0327d..a57b475bb12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1845/JavaSourceClassWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1845/JavaSourceClassWriter.java\n@@ -183,4 +183,4 @@ class JavaSourceClassWriter implements ClassWriter\n     {\n         return target.append( chars );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2529",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "150",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "195",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "96",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "328",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2529/ConsistencyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2529/ConsistencyReporter.java\nindex 561d94271b7..45523f139e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2529/ConsistencyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2529/ConsistencyReporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.report;\n \n import java.lang.reflect.Constructor;\n@@ -60,48 +61,48 @@ import static org.neo4j.consistency.report.ConsistencyReporter.ProxyFactory.crea\n \n public class ConsistencyReporter implements ConsistencyReport.Reporter\n {\n-    private static final ProxyFactory<SchemaConsistencyReport> SCHEMA_REPORT = create( SchemaConsistencyReport.class );\n-    private static final ProxyFactory<NodeConsistencyReport> NODE_REPORT = create( NodeConsistencyReport.class );\n-    private static final ProxyFactory<RelationshipConsistencyReport> RELATIONSHIP_REPORT = create( RelationshipConsistencyReport.class );\n-    private static final ProxyFactory<PropertyConsistencyReport> PROPERTY_REPORT = create( PropertyConsistencyReport.class );\n-    private static final ProxyFactory<RelationshipTypeConsistencyReport> RELATIONSHIP_TYPE_REPORT = create( RelationshipTypeConsistencyReport.class );\n-    private static final ProxyFactory<LabelTokenConsistencyReport> LABEL_KEY_REPORT = create( LabelTokenConsistencyReport.class );\n-    private static final ProxyFactory<PropertyKeyTokenConsistencyReport> PROPERTY_KEY_REPORT = create( PropertyKeyTokenConsistencyReport.class );\n-    private static final ProxyFactory<DynamicConsistencyReport> DYNAMIC_REPORT = create( DynamicConsistencyReport.class );\n-    private static final ProxyFactory<DynamicLabelConsistencyReport> DYNAMIC_LABEL_REPORT = create( DynamicLabelConsistencyReport.class );\n-    private static final ProxyFactory<LabelScanConsistencyReport> LABEL_SCAN_REPORT = create( LabelScanConsistencyReport.class );\n+    private static final ProxyFactory<SchemaConsistencyReport> SCHEMA_REPORT = create(SchemaConsistencyReport.class);\n+    private static final ProxyFactory<NodeConsistencyReport> NODE_REPORT = create(NodeConsistencyReport.class);\n+    private static final ProxyFactory<RelationshipConsistencyReport> RELATIONSHIP_REPORT = create(RelationshipConsistencyReport.class);\n+    private static final ProxyFactory<PropertyConsistencyReport> PROPERTY_REPORT = create(PropertyConsistencyReport.class);\n+    private static final ProxyFactory<RelationshipTypeConsistencyReport> RELATIONSHIP_TYPE_REPORT = create(RelationshipTypeConsistencyReport.class);\n+    private static final ProxyFactory<LabelTokenConsistencyReport> LABEL_KEY_REPORT = create(LabelTokenConsistencyReport.class);\n+    private static final ProxyFactory<PropertyKeyTokenConsistencyReport> PROPERTY_KEY_REPORT = create(PropertyKeyTokenConsistencyReport.class);\n+    private static final ProxyFactory<DynamicConsistencyReport> DYNAMIC_REPORT = create(DynamicConsistencyReport.class);\n+    private static final ProxyFactory<DynamicLabelConsistencyReport> DYNAMIC_LABEL_REPORT = create(DynamicLabelConsistencyReport.class);\n+    private static final ProxyFactory<LabelScanConsistencyReport> LABEL_SCAN_REPORT = create(LabelScanConsistencyReport.class);\n     private static final ProxyFactory<RelationshipTypeScanConsistencyReport> RELATIONSHIP_TYPE_SCAN_REPORT =\n-            create( RelationshipTypeScanConsistencyReport.class );\n-    private static final ProxyFactory<IndexConsistencyReport> INDEX_REPORT = create( IndexConsistencyReport.class );\n-    private static final ProxyFactory<RelationshipGroupConsistencyReport> RELATIONSHIP_GROUP_REPORT = create( RelationshipGroupConsistencyReport.class );\n-    private static final ProxyFactory<CountsConsistencyReport> COUNTS_REPORT = create( CountsConsistencyReport.class );\n+      create(RelationshipTypeScanConsistencyReport.class);\n+    private static final ProxyFactory<IndexConsistencyReport> INDEX_REPORT = create(IndexConsistencyReport.class);\n+    private static final ProxyFactory<RelationshipGroupConsistencyReport> RELATIONSHIP_GROUP_REPORT = create(RelationshipGroupConsistencyReport.class);\n+    private static final ProxyFactory<CountsConsistencyReport> COUNTS_REPORT = create(CountsConsistencyReport.class);\n \n     private final InconsistencyReport report;\n     private final Monitor monitor;\n \n     public interface Monitor\n     {\n-        void reported( Class<?> report, String method, String message );\n+        void reported(Class<?> report, String method, String message);\n     }\n \n-    public static final Monitor NO_MONITOR = ( report, method, message ) ->\n+    public static final Monitor NO_MONITOR = (report, method, message) ->\n     {\n     };\n \n-    public ConsistencyReporter( InconsistencyReport report )\n+    public ConsistencyReporter(InconsistencyReport report)\n     {\n-        this( report, NO_MONITOR );\n+        this(report, NO_MONITOR);\n     }\n \n-    public ConsistencyReporter( InconsistencyReport report, Monitor monitor )\n+    public ConsistencyReporter(InconsistencyReport report, Monitor monitor)\n     {\n         this.report = report;\n         this.monitor = monitor;\n     }\n \n-    public static FormattingDocumentedHandler formattingHandler( InconsistencyReport report, RecordType type )\n+    public static FormattingDocumentedHandler formattingHandler(InconsistencyReport report, RecordType type)\n     {\n-        return new FormattingDocumentedHandler( report, type );\n+        return new FormattingDocumentedHandler(report, type);\n     }\n \n     public static class FormattingDocumentedHandler implements InvocationHandler\n@@ -111,32 +112,31 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n         private short errors;\n         private short warnings;\n \n-        FormattingDocumentedHandler( InconsistencyReport report, RecordType type )\n+        FormattingDocumentedHandler(InconsistencyReport report, RecordType type)\n         {\n             this.report = report;\n             this.type = type;\n         }\n \n         @Override\n-        public Object invoke( Object proxy, Method method, Object[] args )\n+        public Object invoke(Object proxy, Method method, Object[] args)\n         {\n-            String message = DocumentedUtils.extractFormattedMessage( method, args );\n-            if ( method.getAnnotation( Warning.class ) == null )\n+            String message = DocumentedUtils.extractFormattedMessage(method, args);\n+            if (method.getAnnotation(Warning.class) == null)\n             {\n                 errors++;\n-                report.error( message );\n-            }\n-            else\n+                report.error(message);\n+            } else\n             {\n                 warnings++;\n-                report.warning( message );\n+                report.warning(message);\n             }\n             return null;\n         }\n \n         public void updateSummary()\n         {\n-            report.updateSummary( type, errors, warnings );\n+            report.updateSummary(type, errors, warnings);\n         }\n     }\n \n@@ -147,7 +147,7 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n         final RecordType type;\n         private final Monitor monitor;\n \n-        private ReportInvocationHandler( InconsistencyReport report, ProxyFactory<REPORT> factory, RecordType type, Monitor monitor )\n+        private ReportInvocationHandler(InconsistencyReport report, ProxyFactory<REPORT> factory, RecordType type, Monitor monitor)\n         {\n             this.report = report;\n             this.factory = factory;\n@@ -157,7 +157,7 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n \n         REPORT report()\n         {\n-            return factory.create( this );\n+            return factory.create(this);\n         }\n \n         /**\n@@ -166,25 +166,24 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n          * @param args array of the items referenced from this record with which it is inconsistent.\n          */\n         @Override\n-        public Object invoke( Object proxy, Method method, Object[] args )\n+        public Object invoke(Object proxy, Method method, Object[] args)\n         {\n-            if ( method.getName().equals( \"toString\" ) )\n+            if (method.getName().equals(\"toString\"))\n             {\n                 return factory.type.getName();\n             }\n \n-            String message = DocumentedUtils.extractMessage( method );\n-            if ( method.getAnnotation( Warning.class ) == null )\n+            String message = DocumentedUtils.extractMessage(method);\n+            if (method.getAnnotation(Warning.class) == null)\n             {\n-                logError( message, args );\n-                report.updateSummary( type, 1, 0 );\n-            }\n-            else\n+                logError(message, args);\n+                report.updateSummary(type, 1, 0);\n+            } else\n             {\n-                logWarning( message, args );\n-                report.updateSummary( type, 0, 1 );\n+                logWarning(message, args);\n+                report.updateSummary(type, 0, 1);\n             }\n-            monitor.reported( factory.type(), method.getName(), message );\n+            monitor.reported(factory.type(), method.getName(), message);\n             inconsistencyReported();\n             return null;\n         }\n@@ -193,123 +192,123 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n         {\n         }\n \n-        protected abstract void logError( String message, Object... args );\n+        protected abstract void logError(String message, Object... args);\n \n-        protected abstract void logWarning( String message, Object... args );\n+        protected abstract void logWarning(String message, Object... args);\n     }\n \n     public static class ReportHandler<REPORT extends ConsistencyReport> extends ReportInvocationHandler<REPORT>\n     {\n         private final AbstractBaseRecord record;\n \n-        public ReportHandler( InconsistencyReport report, ProxyFactory<REPORT> factory, RecordType type, AbstractBaseRecord record, Monitor monitor )\n+        public ReportHandler(InconsistencyReport report, ProxyFactory<REPORT> factory, RecordType type, AbstractBaseRecord record, Monitor monitor)\n         {\n-            super( report, factory, type, monitor );\n+            super(report, factory, type, monitor);\n             this.record = record;\n         }\n \n         @Override\n-        protected void logError( String message, Object... args )\n+        protected void logError(String message, Object... args)\n         {\n-            report.error( type, record, message, args );\n+            report.error(type, record, message, args);\n         }\n \n         @Override\n-        protected void logWarning( String message, Object... args )\n+        protected void logWarning(String message, Object... args)\n         {\n-            report.warning( type, record, message, args );\n+            report.warning(type, record, message, args);\n         }\n     }\n \n     // Plain and simple report instances\n \n     @Override\n-    public SchemaConsistencyReport forSchema( SchemaRecord schema )\n+    public SchemaConsistencyReport forSchema(SchemaRecord schema)\n     {\n-        return report( SCHEMA_REPORT, RecordType.SCHEMA, schema );\n+        return report(SCHEMA_REPORT, RecordType.SCHEMA, schema);\n     }\n \n     @Override\n-    public NodeConsistencyReport forNode( NodeRecord node )\n+    public NodeConsistencyReport forNode(NodeRecord node)\n     {\n-        return report( NODE_REPORT, RecordType.NODE, node );\n+        return report(NODE_REPORT, RecordType.NODE, node);\n     }\n \n     @Override\n-    public RelationshipConsistencyReport forRelationship( RelationshipRecord relationship )\n+    public RelationshipConsistencyReport forRelationship(RelationshipRecord relationship)\n     {\n-        return report( RELATIONSHIP_REPORT, RecordType.RELATIONSHIP, relationship );\n+        return report(RELATIONSHIP_REPORT, RecordType.RELATIONSHIP, relationship);\n     }\n \n     @Override\n-    public PropertyConsistencyReport forProperty( PropertyRecord property )\n+    public PropertyConsistencyReport forProperty(PropertyRecord property)\n     {\n-        return report( PROPERTY_REPORT, RecordType.PROPERTY, property );\n+        return report(PROPERTY_REPORT, RecordType.PROPERTY, property);\n     }\n \n     @Override\n-    public RelationshipTypeConsistencyReport forRelationshipTypeName( RelationshipTypeTokenRecord relationshipType )\n+    public RelationshipTypeConsistencyReport forRelationshipTypeName(RelationshipTypeTokenRecord relationshipType)\n     {\n-        return report( RELATIONSHIP_TYPE_REPORT, RecordType.RELATIONSHIP_TYPE, relationshipType );\n+        return report(RELATIONSHIP_TYPE_REPORT, RecordType.RELATIONSHIP_TYPE, relationshipType);\n     }\n \n     @Override\n-    public LabelTokenConsistencyReport forLabelName( LabelTokenRecord label )\n+    public LabelTokenConsistencyReport forLabelName(LabelTokenRecord label)\n     {\n-        return report( LABEL_KEY_REPORT, RecordType.LABEL, label );\n+        return report(LABEL_KEY_REPORT, RecordType.LABEL, label);\n     }\n \n     @Override\n-    public PropertyKeyTokenConsistencyReport forPropertyKey( PropertyKeyTokenRecord key )\n+    public PropertyKeyTokenConsistencyReport forPropertyKey(PropertyKeyTokenRecord key)\n     {\n-        return report( PROPERTY_KEY_REPORT, RecordType.PROPERTY_KEY, key );\n+        return report(PROPERTY_KEY_REPORT, RecordType.PROPERTY_KEY, key);\n     }\n \n     @Override\n-    public DynamicConsistencyReport forDynamicBlock( RecordType type, DynamicRecord record )\n+    public DynamicConsistencyReport forDynamicBlock(RecordType type, DynamicRecord record)\n     {\n-        return report( DYNAMIC_REPORT, type, record );\n+        return report(DYNAMIC_REPORT, type, record);\n     }\n \n     @Override\n-    public DynamicLabelConsistencyReport forDynamicLabelBlock( RecordType type, DynamicRecord record )\n+    public DynamicLabelConsistencyReport forDynamicLabelBlock(RecordType type, DynamicRecord record)\n     {\n-        return report( DYNAMIC_LABEL_REPORT, type, record );\n+        return report(DYNAMIC_LABEL_REPORT, type, record);\n     }\n \n     @Override\n-    public LabelScanConsistencyReport forNodeLabelScan( TokenScanDocument document )\n+    public LabelScanConsistencyReport forNodeLabelScan(TokenScanDocument document)\n     {\n-        return report( LABEL_SCAN_REPORT, RecordType.LABEL_SCAN_DOCUMENT, document );\n+        return report(LABEL_SCAN_REPORT, RecordType.LABEL_SCAN_DOCUMENT, document);\n     }\n \n     @Override\n-    public RelationshipTypeScanConsistencyReport forRelationshipTypeScan( TokenScanDocument document )\n+    public RelationshipTypeScanConsistencyReport forRelationshipTypeScan(TokenScanDocument document)\n     {\n-        return report( RELATIONSHIP_TYPE_SCAN_REPORT, RecordType.RELATIONSHIP_TYPE_SCAN_DOCUMENT, document );\n+        return report(RELATIONSHIP_TYPE_SCAN_REPORT, RecordType.RELATIONSHIP_TYPE_SCAN_DOCUMENT, document);\n     }\n \n     @Override\n-    public IndexConsistencyReport forIndexEntry( IndexEntry entry )\n+    public IndexConsistencyReport forIndexEntry(IndexEntry entry)\n     {\n-        return report( INDEX_REPORT, RecordType.INDEX, entry );\n+        return report(INDEX_REPORT, RecordType.INDEX, entry);\n     }\n \n     @Override\n-    public RelationshipGroupConsistencyReport forRelationshipGroup( RelationshipGroupRecord group )\n+    public RelationshipGroupConsistencyReport forRelationshipGroup(RelationshipGroupRecord group)\n     {\n-        return report( RELATIONSHIP_GROUP_REPORT, RecordType.RELATIONSHIP_GROUP, group );\n+        return report(RELATIONSHIP_GROUP_REPORT, RecordType.RELATIONSHIP_GROUP, group);\n     }\n \n     @Override\n-    public CountsConsistencyReport forCounts( CountsEntry countsEntry )\n+    public CountsConsistencyReport forCounts(CountsEntry countsEntry)\n     {\n-        return report( COUNTS_REPORT, RecordType.COUNTS, countsEntry );\n+        return report(COUNTS_REPORT, RecordType.COUNTS, countsEntry);\n     }\n \n-    private <RECORD extends AbstractBaseRecord,REPORT extends ConsistencyReport> REPORT report( ProxyFactory<REPORT> factory, RecordType type, RECORD record )\n+    private <RECORD extends AbstractBaseRecord, REPORT extends ConsistencyReport> REPORT report(ProxyFactory<REPORT> factory, RecordType type, RECORD record)\n     {\n-        return new ReportHandler<>( report, factory, type, record, monitor ).report();\n+        return new ReportHandler<>(report, factory, type, record, monitor).report();\n     }\n \n     public static class ProxyFactory<T>\n@@ -317,26 +316,25 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n         private final Constructor<? extends T> constructor;\n         private final Class<T> type;\n \n-        @SuppressWarnings( \"unchecked\" )\n-        ProxyFactory( Class<T> type ) throws LinkageError\n+        @SuppressWarnings(\"unchecked\")\n+        ProxyFactory(Class<T> type) throws LinkageError\n         {\n             this.type = type;\n             try\n             {\n                 this.constructor = (Constructor<? extends T>) Proxy\n-                        .getProxyClass( ConsistencyReporter.class.getClassLoader(), type )\n-                        .getConstructor( InvocationHandler.class );\n-            }\n-            catch ( NoSuchMethodException e )\n+                  .getProxyClass(ConsistencyReporter.class.getClassLoader(), type)\n+                  .getConstructor(InvocationHandler.class);\n+            } catch (NoSuchMethodException e)\n             {\n-                throw new LinkageError( \"Cannot access Proxy constructor for \" + type.getName(), e );\n+                throw new LinkageError(\"Cannot access Proxy constructor for \" + type.getName(), e);\n             }\n         }\n \n         @Override\n         public String toString()\n         {\n-            return getClass().getSimpleName() + asList( constructor.getDeclaringClass().getInterfaces() );\n+            return getClass().getSimpleName() + asList(constructor.getDeclaringClass().getInterfaces());\n         }\n \n         Class<?> type()\n@@ -344,21 +342,20 @@ public class ConsistencyReporter implements ConsistencyReport.Reporter\n             return type;\n         }\n \n-        public T create( InvocationHandler handler )\n+        public T create(InvocationHandler handler)\n         {\n             try\n             {\n-                return constructor.newInstance( handler );\n-            }\n-            catch ( Exception e )\n+                return constructor.newInstance(handler);\n+            } catch (Exception e)\n             {\n-                throw new LinkageError( \"Failed to create proxy instance\", e );\n+                throw new LinkageError(\"Failed to create proxy instance\", e);\n             }\n         }\n \n-        public static <T> ProxyFactory<T> create( Class<T> type )\n+        public static <T> ProxyFactory<T> create(Class<T> type)\n         {\n-            return new ProxyFactory<>( type );\n+            return new ProxyFactory<>(type);\n         }\n     }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "269",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 141).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\tpublic static void main(String[] args)throws AxisFault {\n\t\t\n\t\tConfigurationContext cc = ConfigurationContextFactory.createConfigurationContextFromFileSystem(args[0],args[1]+\"/axis2.xml\");\n\t\tOMElement payload = createPayLoad();\n\t\t\n\t\tServiceClient serviceclient = new ServiceClient(cc, null);   ",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/269/OnewayAddressableSOAP11Client.java\nindex ef65c8dfd2e..81ba70409b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/269/OnewayAddressableSOAP11Client.java\n@@ -27,7 +27,7 @@ public class OnewayAddressableSOAP11Client {\n \n \t\n \tpublic static void main(String[] args)throws AxisFault {\n-\t\t\n+\n \t\tConfigurationContext cc = ConfigurationContextFactory.createConfigurationContextFromFileSystem(args[0],args[1]+\"/axis2.xml\");\n \t\tOMElement payload = createPayLoad();\n \t\t\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/269/OnewayAddressableSOAP11Client.java\nindex ef65c8dfd2e..5bd8c150823 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/269/OnewayAddressableSOAP11Client.java\n@@ -25,50 +25,51 @@ import org.codehaus.groovy.sandbox.ui.Completer;\n \n public class OnewayAddressableSOAP11Client {\n \n-\t\n-\tpublic static void main(String[] args)throws AxisFault {\n-\t\t\n-\t\tConfigurationContext cc = ConfigurationContextFactory.createConfigurationContextFromFileSystem(args[0],args[1]+\"/axis2.xml\");\n-\t\tOMElement payload = createPayLoad();\n-\t\t\n-\t\tServiceClient serviceclient = new ServiceClient(cc, null);   \n-\t\t\n-\t\tOptions opts = new Options();\n-\t\topts.setTo(new EndpointReference(args[2]+\"/RMProxy\"));\n-\t\topts.setAction(\"urn:Ping\");\n-\t\t\n-\t\topts.setUseSeparateListener(true);\n-\t\tserviceclient.setOptions(opts);\t\t\n-\t\t\n-\t\t//for (int i = 0; i < 9; i++) {\n \n-\t\ttry {\n-\t\t\t//OMElement response = serviceclient.sendReceive(payload);\n-\t\t\t//System.out.println(response);\n-\t\t\tserviceclient.fireAndForget(payload);\n-\t\t} catch (RemoteException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\t\n-\t\ttry {\n-\t\t\tThread.sleep(1000);\n-\t\t} catch (InterruptedException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\t//}\n-\t\t//cc.getListenerManager().stop();\n-\t}\n-\t\n-\tpublic static OMElement createPayLoad(){\t\t\n-\t\tOMFactory fac = OMAbstractFactory.getOMFactory();\n-\t\tOMNamespace omNs = fac.createOMNamespace(\"http://service.esb.wso2.org\", \"ns\");\n-\t\tOMElement method = fac.createOMElement(\"Ping\", omNs);\n-\t\tOMElement value = fac.createOMElement(\"ping\", omNs);\n-\t\tvalue.addChild(fac.createOMText(method, \"pong\"));\n+  public static void main(String[] args) throws AxisFault {\n \n-\t\tmethod.addChild(value);\n-\t\t\n-\t\treturn method;\n-\t}\n+    ConfigurationContext cc =\n+      ConfigurationContextFactory.createConfigurationContextFromFileSystem(args[0], args[1] + \"/axis2.xml\");\n+    OMElement payload = createPayLoad();\n+\n+    ServiceClient serviceclient = new ServiceClient(cc, null);\n+\n+    Options opts = new Options();\n+    opts.setTo(new EndpointReference(args[2] + \"/RMProxy\"));\n+    opts.setAction(\"urn:Ping\");\n+\n+    opts.setUseSeparateListener(true);\n+    serviceclient.setOptions(opts);\n+\n+    //for (int i = 0; i < 9; i++) {\n+\n+    try {\n+      //OMElement response = serviceclient.sendReceive(payload);\n+      //System.out.println(response);\n+      serviceclient.fireAndForget(payload);\n+    } catch (RemoteException e) {\n+      e.printStackTrace();\n+    }\n+\n+    try {\n+      Thread.sleep(1000);\n+    } catch (InterruptedException e) {\n+      e.printStackTrace();\n+    }\n+    //}\n+    //cc.getListenerManager().stop();\n+  }\n+\n+  public static OMElement createPayLoad() {\n+    OMFactory fac = OMAbstractFactory.getOMFactory();\n+    OMNamespace omNs = fac.createOMNamespace(\"http://service.esb.wso2.org\", \"ns\");\n+    OMElement method = fac.createOMElement(\"Ping\", omNs);\n+    OMElement value = fac.createOMElement(\"ping\", omNs);\n+    value.addChild(fac.createOMText(method, \"pong\"));\n+\n+    method.addChild(value);\n+\n+    return method;\n+  }\n }\n \n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/269/OnewayAddressableSOAP11Client.java\nindex ef65c8dfd2e..81ba70409b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/269/OnewayAddressableSOAP11Client.java\n@@ -27,7 +27,7 @@ public class OnewayAddressableSOAP11Client {\n \n \t\n \tpublic static void main(String[] args)throws AxisFault {\n-\t\t\n+\n \t\tConfigurationContext cc = ConfigurationContextFactory.createConfigurationContextFromFileSystem(args[0],args[1]+\"/axis2.xml\");\n \t\tOMElement payload = createPayLoad();\n \t\t\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/269/OnewayAddressableSOAP11Client.java\nindex ef65c8dfd2e..f400b859ebb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/269/OnewayAddressableSOAP11Client.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/269/OnewayAddressableSOAP11Client.java\n@@ -27,7 +27,6 @@ public class OnewayAddressableSOAP11Client {\n \n \t\n \tpublic static void main(String[] args)throws AxisFault {\n-\t\t\n \t\tConfigurationContext cc = ConfigurationContextFactory.createConfigurationContextFromFileSystem(args[0],args[1]+\"/axis2.xml\");\n \t\tOMElement payload = createPayLoad();\n \t\t\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
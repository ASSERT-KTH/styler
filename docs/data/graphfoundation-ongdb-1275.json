{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1275",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1275/Voting.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1275/Voting.java\nindex d61c5522c82..9a4578b61b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1275/Voting.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1275/Voting.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.roles;\n \n import java.io.IOException;\n@@ -31,116 +32,116 @@ import org.neo4j.logging.Log;\n public class Voting\n {\n \n-    private Voting()\n-    {\n-    }\n+  private Voting()\n+  {\n+  }\n \n-    static void handleVoteRequest( ReadableRaftState state, Outcome outcome,\n-            RaftMessages.Vote.Request voteRequest, Log log ) throws IOException\n+  static void handleVoteRequest(ReadableRaftState state, Outcome outcome,\n+                                RaftMessages.Vote.Request voteRequest, Log log) throws IOException\n+  {\n+    if (voteRequest.term() > state.term())\n     {\n-        if ( voteRequest.term() > state.term() )\n-        {\n-            outcome.setNextTerm( voteRequest.term() );\n-            outcome.setVotedFor( null );\n-        }\n-\n-        boolean votedForAnother = outcome.getVotedFor() != null && !outcome.getVotedFor().equals( voteRequest.candidate() );\n-        boolean willVoteForCandidate = shouldVoteFor( state, outcome, voteRequest, votedForAnother, log );\n-\n-        if ( willVoteForCandidate )\n-        {\n-            outcome.setVotedFor( voteRequest.from() );\n-            outcome.renewElectionTimeout();\n-        }\n-\n-        outcome.addOutgoingMessage( new RaftMessages.Directed( voteRequest.from(), new RaftMessages.Vote.Response(\n-                state.myself(), outcome.getTerm(),\n-                willVoteForCandidate ) ) );\n+      outcome.setNextTerm(voteRequest.term());\n+      outcome.setVotedFor(null);\n     }\n \n-    static void handlePreVoteRequest( ReadableRaftState state, Outcome outcome,\n-            RaftMessages.PreVote.Request voteRequest, Log log ) throws IOException\n-    {\n-        ThrowingBooleanSupplier<IOException> willVoteForCandidate =\n-                () -> shouldVoteFor( state, outcome, voteRequest, false, log );\n-        respondToPreVoteRequest( state, outcome, voteRequest, willVoteForCandidate );\n-    }\n+    boolean votedForAnother = outcome.getVotedFor() != null && !outcome.getVotedFor().equals(voteRequest.candidate());\n+    boolean willVoteForCandidate = shouldVoteFor(state, outcome, voteRequest, votedForAnother, log);\n \n-    static void declinePreVoteRequest( ReadableRaftState state, Outcome outcome,\n-            RaftMessages.PreVote.Request voteRequest ) throws IOException\n+    if (willVoteForCandidate)\n     {\n-        respondToPreVoteRequest( state, outcome, voteRequest, () -> false );\n+      outcome.setVotedFor(voteRequest.from());\n+      outcome.renewElectionTimeout();\n     }\n \n-    private static void respondToPreVoteRequest( ReadableRaftState state, Outcome outcome,\n-            RaftMessages.PreVote.Request voteRequest, ThrowingBooleanSupplier<IOException> willVoteFor ) throws IOException\n+    outcome.addOutgoingMessage(new RaftMessages.Directed(voteRequest.from(), new RaftMessages.Vote.Response(\n+        state.myself(), outcome.getTerm(),\n+        willVoteForCandidate)));\n+  }\n+\n+  static void handlePreVoteRequest(ReadableRaftState state, Outcome outcome,\n+                                   RaftMessages.PreVote.Request voteRequest, Log log) throws IOException\n+  {\n+    ThrowingBooleanSupplier<IOException> willVoteForCandidate =\n+        () -> shouldVoteFor(state, outcome, voteRequest, false, log);\n+    respondToPreVoteRequest(state, outcome, voteRequest, willVoteForCandidate);\n+  }\n+\n+  static void declinePreVoteRequest(ReadableRaftState state, Outcome outcome,\n+                                    RaftMessages.PreVote.Request voteRequest) throws IOException\n+  {\n+    respondToPreVoteRequest(state, outcome, voteRequest, () -> false);\n+  }\n+\n+  private static void respondToPreVoteRequest(ReadableRaftState state, Outcome outcome,\n+                                              RaftMessages.PreVote.Request voteRequest, ThrowingBooleanSupplier<IOException> willVoteFor) throws IOException\n+  {\n+    if (voteRequest.term() > state.term())\n     {\n-        if ( voteRequest.term() > state.term() )\n-        {\n-            outcome.setNextTerm( voteRequest.term() );\n-        }\n-\n-        outcome.addOutgoingMessage( new RaftMessages.Directed( voteRequest.from(), new RaftMessages.PreVote.Response(\n-                state.myself(), outcome.getTerm(),\n-                willVoteFor.getAsBoolean() ) ) );\n+      outcome.setNextTerm(voteRequest.term());\n     }\n \n-    private static boolean shouldVoteFor( ReadableRaftState state, Outcome outcome, RaftMessages.AnyVote.Request voteRequest,\n-            boolean committedToVotingForAnother, Log log )\n-            throws IOException\n+    outcome.addOutgoingMessage(new RaftMessages.Directed(voteRequest.from(), new RaftMessages.PreVote.Response(\n+        state.myself(), outcome.getTerm(),\n+        willVoteFor.getAsBoolean())));\n+  }\n+\n+  private static boolean shouldVoteFor(ReadableRaftState state, Outcome outcome, RaftMessages.AnyVote.Request voteRequest,\n+                                       boolean committedToVotingForAnother, Log log)\n+      throws IOException\n+  {\n+    long requestTerm = voteRequest.term();\n+    MemberId candidate = voteRequest.candidate();\n+    long requestLastLogTerm = voteRequest.lastLogTerm();\n+    long requestLastLogIndex = voteRequest.lastLogIndex();\n+    long contextTerm = outcome.getTerm();\n+    long contextLastAppended = state.entryLog().appendIndex();\n+    long contextLastLogTerm = state.entryLog().readEntryTerm(contextLastAppended);\n+\n+    return shouldVoteFor(\n+        candidate,\n+        contextTerm,\n+        requestTerm,\n+        contextLastLogTerm,\n+        requestLastLogTerm,\n+        contextLastAppended,\n+        requestLastLogIndex,\n+        committedToVotingForAnother,\n+        log\n+    );\n+  }\n+\n+  public static boolean shouldVoteFor(MemberId candidate, long contextTerm, long requestTerm,\n+                                      long contextLastLogTerm, long requestLastLogTerm,\n+                                      long contextLastAppended, long requestLastLogIndex,\n+                                      boolean committedToVotingForAnother, Log log)\n+  {\n+    if (requestTerm < contextTerm)\n     {\n-        long requestTerm = voteRequest.term();\n-        MemberId candidate = voteRequest.candidate();\n-        long requestLastLogTerm = voteRequest.lastLogTerm();\n-        long requestLastLogIndex = voteRequest.lastLogIndex();\n-        long contextTerm = outcome.getTerm();\n-        long contextLastAppended = state.entryLog().appendIndex();\n-        long contextLastLogTerm = state.entryLog().readEntryTerm( contextLastAppended );\n-\n-        return shouldVoteFor(\n-                candidate,\n-                contextTerm,\n-                requestTerm,\n-                contextLastLogTerm,\n-                requestLastLogTerm,\n-                contextLastAppended,\n-                requestLastLogIndex,\n-                committedToVotingForAnother,\n-                log\n-        );\n+      log.debug(\"Will not vote for %s as vote request term %s was earlier than my term %s\", candidate, requestTerm, contextTerm);\n+      return false;\n     }\n \n-    public static boolean shouldVoteFor( MemberId candidate, long contextTerm, long requestTerm,\n-                                         long contextLastLogTerm, long requestLastLogTerm,\n-                                         long contextLastAppended, long requestLastLogIndex,\n-                                         boolean committedToVotingForAnother, Log log )\n-    {\n-        if ( requestTerm < contextTerm )\n-        {\n-            log.debug( \"Will not vote for %s as vote request term %s was earlier than my term %s\", candidate, requestTerm, contextTerm );\n-            return false;\n-        }\n-\n-        boolean requestLogEndsAtHigherTerm = requestLastLogTerm > contextLastLogTerm;\n-        boolean logsEndAtSameTerm = requestLastLogTerm == contextLastLogTerm;\n-        boolean requestLogAtLeastAsLongAsMyLog = requestLastLogIndex >= contextLastAppended;\n+    boolean requestLogEndsAtHigherTerm = requestLastLogTerm > contextLastLogTerm;\n+    boolean logsEndAtSameTerm = requestLastLogTerm == contextLastLogTerm;\n+    boolean requestLogAtLeastAsLongAsMyLog = requestLastLogIndex >= contextLastAppended;\n \n-        boolean requesterLogUpToDate = requestLogEndsAtHigherTerm ||\n-                (logsEndAtSameTerm && requestLogAtLeastAsLongAsMyLog);\n+    boolean requesterLogUpToDate = requestLogEndsAtHigherTerm ||\n+        (logsEndAtSameTerm && requestLogAtLeastAsLongAsMyLog);\n \n-        boolean votedForOtherInSameTerm = requestTerm == contextTerm && committedToVotingForAnother;\n+    boolean votedForOtherInSameTerm = requestTerm == contextTerm && committedToVotingForAnother;\n \n-        boolean shouldVoteFor = requesterLogUpToDate && !votedForOtherInSameTerm;\n+    boolean shouldVoteFor = requesterLogUpToDate && !votedForOtherInSameTerm;\n \n-        log.debug( \"Should vote for raft candidate %s: \" +\n-                        \"requester log up to date: %s \" +\n-                        \"(request last log term: %s, context last log term: %s, request last log index: %s, context last append: %s) \" +\n-                        \"voted for other in same term: %s \" +\n-                        \"(request term: %s, context term: %s, voted for another: %s)\",\n-                shouldVoteFor,\n-                requesterLogUpToDate, requestLastLogTerm, contextLastLogTerm, requestLastLogIndex, contextLastAppended,\n-                votedForOtherInSameTerm, requestTerm, contextTerm, committedToVotingForAnother );\n+    log.debug(\"Should vote for raft candidate %s: \" +\n+            \"requester log up to date: %s \" +\n+            \"(request last log term: %s, context last log term: %s, request last log index: %s, context last append: %s) \" +\n+            \"voted for other in same term: %s \" +\n+            \"(request term: %s, context term: %s, voted for another: %s)\",\n+        shouldVoteFor,\n+        requesterLogUpToDate, requestLastLogTerm, contextLastLogTerm, requestLastLogIndex, contextLastAppended,\n+        votedForOtherInSameTerm, requestTerm, contextTerm, committedToVotingForAnother);\n \n-        return shouldVoteFor;\n-    }\n+    return shouldVoteFor;\n+  }\n }\n",
            "diff_size": 151
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "column": "64",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 507).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1275/Voting.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1275/Voting.java\nindex d61c5522c82..0abeddaf97c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1275/Voting.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1275/Voting.java\n@@ -30,14 +30,13 @@ import org.neo4j.logging.Log;\n \n public class Voting\n {\n-\n     private Voting()\n     {\n     }\n \n     static void handleVoteRequest( ReadableRaftState state, Outcome outcome,\n             RaftMessages.Vote.Request voteRequest, Log log ) throws IOException\n-    {\n+{\n         if ( voteRequest.term() > state.term() )\n         {\n             outcome.setNextTerm( voteRequest.term() );\n@@ -46,49 +45,42 @@ public class Voting\n \n         boolean votedForAnother = outcome.getVotedFor() != null && !outcome.getVotedFor().equals( voteRequest.candidate() );\n         boolean willVoteForCandidate = shouldVoteFor( state, outcome, voteRequest, votedForAnother, log );\n-\n-        if ( willVoteForCandidate )\n+if ( willVoteForCandidate )\n         {\n             outcome.setVotedFor( voteRequest.from() );\n             outcome.renewElectionTimeout();\n         }\n \n-        outcome.addOutgoingMessage( new RaftMessages.Directed( voteRequest.from(), new RaftMessages.Vote.Response(\n-                state.myself(), outcome.getTerm(),\n-                willVoteForCandidate ) ) );\n+        outcome.addOutgoingMessage( new RaftMessages.Directed( voteRequest.from(), new RaftMessages.Vote.Response( state.myself(), outcome.getTerm(), willVoteForCandidate ) ) );\n     }\n \n     static void handlePreVoteRequest( ReadableRaftState state, Outcome outcome,\n             RaftMessages.PreVote.Request voteRequest, Log log ) throws IOException\n-    {\n-        ThrowingBooleanSupplier<IOException> willVoteForCandidate =\n-                () -> shouldVoteFor( state, outcome, voteRequest, false, log );\n-        respondToPreVoteRequest( state, outcome, voteRequest, willVoteForCandidate );\n+{\n+        ThrowingBooleanSupplier<IOException> willVoteForCandidate = () -> shouldVoteFor( state, outcome, voteRequest, false, log );\n+respondToPreVoteRequest( state, outcome, voteRequest, willVoteForCandidate );\n     }\n \n     static void declinePreVoteRequest( ReadableRaftState state, Outcome outcome,\n             RaftMessages.PreVote.Request voteRequest ) throws IOException\n-    {\n+{\n         respondToPreVoteRequest( state, outcome, voteRequest, () -> false );\n     }\n \n     private static void respondToPreVoteRequest( ReadableRaftState state, Outcome outcome,\n             RaftMessages.PreVote.Request voteRequest, ThrowingBooleanSupplier<IOException> willVoteFor ) throws IOException\n-    {\n+{\n         if ( voteRequest.term() > state.term() )\n         {\n             outcome.setNextTerm( voteRequest.term() );\n         }\n \n-        outcome.addOutgoingMessage( new RaftMessages.Directed( voteRequest.from(), new RaftMessages.PreVote.Response(\n-                state.myself(), outcome.getTerm(),\n-                willVoteFor.getAsBoolean() ) ) );\n+        outcome.addOutgoingMessage( new RaftMessages.Directed( voteRequest.from(), new RaftMessages.PreVote.Response( state.myself(), outcome.getTerm(), willVoteFor.getAsBoolean() ) ) );\n     }\n \n     private static boolean shouldVoteFor( ReadableRaftState state, Outcome outcome, RaftMessages.AnyVote.Request voteRequest,\n-            boolean committedToVotingForAnother, Log log )\n-            throws IOException\n-    {\n+            boolean committedToVotingForAnother, Log log ) throws IOException\n+{\n         long requestTerm = voteRequest.term();\n         MemberId candidate = voteRequest.candidate();\n         long requestLastLogTerm = voteRequest.lastLogTerm();\n@@ -96,51 +88,30 @@ public class Voting\n         long contextTerm = outcome.getTerm();\n         long contextLastAppended = state.entryLog().appendIndex();\n         long contextLastLogTerm = state.entryLog().readEntryTerm( contextLastAppended );\n-\n-        return shouldVoteFor(\n-                candidate,\n-                contextTerm,\n-                requestTerm,\n-                contextLastLogTerm,\n-                requestLastLogTerm,\n-                contextLastAppended,\n-                requestLastLogIndex,\n-                committedToVotingForAnother,\n-                log\n-        );\n+return shouldVoteFor( candidate, contextTerm, requestTerm, contextLastLogTerm, requestLastLogTerm, contextLastAppended, requestLastLogIndex, committedToVotingForAnother,\n+                log );\n     }\n \n-    public static boolean shouldVoteFor( MemberId candidate, long contextTerm, long requestTerm,\n-                                         long contextLastLogTerm, long requestLastLogTerm,\n+    public static boolean shouldVoteFor( MemberId candidate, long contextTerm, long requestTerm, long contextLastLogTerm, long requestLastLogTerm,\n                                          long contextLastAppended, long requestLastLogIndex,\n                                          boolean committedToVotingForAnother, Log log )\n-    {\n+{\n         if ( requestTerm < contextTerm )\n         {\n             log.debug( \"Will not vote for %s as vote request term %s was earlier than my term %s\", candidate, requestTerm, contextTerm );\n             return false;\n         }\n \n-        boolean requestLogEndsAtHigherTerm = requestLastLogTerm > contextLastLogTerm;\n+        boolean requestLogEndsAtHigherTerm = requestLastLogTerm> contextLastLogTerm;\n         boolean logsEndAtSameTerm = requestLastLogTerm == contextLastLogTerm;\n         boolean requestLogAtLeastAsLongAsMyLog = requestLastLogIndex >= contextLastAppended;\n \n-        boolean requesterLogUpToDate = requestLogEndsAtHigherTerm ||\n-                (logsEndAtSameTerm && requestLogAtLeastAsLongAsMyLog);\n-\n-        boolean votedForOtherInSameTerm = requestTerm == contextTerm && committedToVotingForAnother;\n+        boolean requesterLogUpToDate = requestLogEndsAtHigherTerm || ( logsEndAtSameTerm && requestLogAtLeastAsLongAsMyLog);\n+    boolean votedForOtherInSameTerm = requestTerm == contextTerm && committedToVotingForAnother;\n \n         boolean shouldVoteFor = requesterLogUpToDate && !votedForOtherInSameTerm;\n \n-        log.debug( \"Should vote for raft candidate %s: \" +\n-                        \"requester log up to date: %s \" +\n-                        \"(request last log term: %s, context last log term: %s, request last log index: %s, context last append: %s) \" +\n-                        \"voted for other in same term: %s \" +\n-                        \"(request term: %s, context term: %s, voted for another: %s)\",\n-                shouldVoteFor,\n-                requesterLogUpToDate, requestLastLogTerm, contextLastLogTerm, requestLastLogIndex, contextLastAppended,\n-                votedForOtherInSameTerm, requestTerm, contextTerm, committedToVotingForAnother );\n-\n-        return shouldVoteFor;\n+        log.debug( \"Should vote for raft candidate %s: \" + \"requester log up to date: %s \" + \"(request last log term: %s, context last log term: %s, request last log index: %s, context last append: %s) \" + \"voted for other in same term: %s \" + \"(request term: %s, context term: %s, voted for another: %s)\", shouldVoteFor, requesterLogUpToDate, requestLastLogTerm, contextLastLogTerm, requestLastLogIndex, contextLastAppended, votedForOtherInSameTerm, requestTerm, contextTerm, committedToVotingForAnother );\n+return shouldVoteFor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
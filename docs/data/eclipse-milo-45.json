{
    "project_name": "eclipse-milo",
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "21",
                "column": "41",
                "severity": "error",
                "message": "'}' at column 41 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class QualifiedNameConversions {\n\n    private QualifiedNameConversions() {}\n\n    @Nullable\n    static String qualifiedNameToString(@NotNull QualifiedName name) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "column": "41",
                    "severity": "error",
                    "message": "'}' at column 41 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/45/QualifiedNameConversions.java\nindex cce1b73f17d..6d420070e9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/45/QualifiedNameConversions.java\n@@ -18,7 +18,8 @@ import org.jetbrains.annotations.Nullable;\n \n final class QualifiedNameConversions {\n \n-    private QualifiedNameConversions() {}\n+    private QualifiedNameConversions() {\n+    }\n \n     @Nullable\n     static String qualifiedNameToString(@NotNull QualifiedName name) {\n@@ -52,9 +53,12 @@ final class QualifiedNameConversions {\n     static Object implicitConversion(@NotNull QualifiedName name, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case String:        return qualifiedNameToString(name);\n-            case LocalizedText: return qualifiedNameToLocalizedText(name);\n-            default:            return null;\n+            case String:\n+                return qualifiedNameToString(name);\n+            case LocalizedText:\n+                return qualifiedNameToLocalizedText(name);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "21",
                    "column": "41",
                    "severity": "error",
                    "message": "'}' at column 41 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/45/QualifiedNameConversions.java\nindex cce1b73f17d..207fb867fe6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/45/QualifiedNameConversions.java\n@@ -59,4 +59,4 @@ final class QualifiedNameConversions {\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/45/QualifiedNameConversions.java\nindex cce1b73f17d..35f6a0a6e1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/45/QualifiedNameConversions.java\n@@ -18,7 +18,8 @@ import org.jetbrains.annotations.Nullable;\n \n final class QualifiedNameConversions {\n \n-    private QualifiedNameConversions() {}\n+    private QualifiedNameConversions() {\n+    }\n \n     @Nullable\n     static String qualifiedNameToString(@NotNull QualifiedName name) {\n@@ -34,10 +35,7 @@ final class QualifiedNameConversions {\n     static Object convert(@NotNull Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof QualifiedName) {\n             QualifiedName name = (QualifiedName) o;\n-\n-            return implicit ?\n-                implicitConversion(name, targetType) :\n-                explicitConversion(name, targetType);\n+            return implicit ? implicitConversion(name, targetType) : explicitConversion(name, targetType);\n         } else {\n             return null;\n         }\n@@ -52,11 +50,15 @@ final class QualifiedNameConversions {\n     static Object implicitConversion(@NotNull QualifiedName name, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case String:        return qualifiedNameToString(name);\n-            case LocalizedText: return qualifiedNameToLocalizedText(name);\n-            default:            return null;\n+            case String:\n+                return qualifiedNameToString(name);\n+\n+            case LocalizedText:\n+                return qualifiedNameToLocalizedText(name);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "column": "41",
                    "severity": "error",
                    "message": "'}' at column 41 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/45/QualifiedNameConversions.java\nindex cce1b73f17d..adad018875b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/45/QualifiedNameConversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/45/QualifiedNameConversions.java\n@@ -18,8 +18,9 @@ import org.jetbrains.annotations.Nullable;\n \n final class QualifiedNameConversions {\n \n-    private QualifiedNameConversions() {}\n+    private QualifiedNameConversions() {\n \n+    }\n     @Nullable\n     static String qualifiedNameToString(@NotNull QualifiedName name) {\n         return name.getName();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
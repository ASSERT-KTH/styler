{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1594",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1594/AnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1594/AnnotationProcessor.java\nindex 1021f810644..403313d6aa2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1594/AnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1594/AnnotationProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.annotations;\n \n import java.io.File;\n@@ -42,103 +43,100 @@ import static org.neo4j.io.fs.FileUtils.newFilePrintWriter;\n \n public abstract class AnnotationProcessor extends AbstractProcessor\n {\n-    @Override\n-    public boolean process( Set<? extends TypeElement> annotations, RoundEnvironment roundEnv )\n+  @Override\n+  public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)\n+  {\n+    for (TypeElement type : annotations)\n     {\n-        for ( TypeElement type : annotations )\n+      for (Element annotated : roundEnv.getElementsAnnotatedWith(type))\n+      {\n+        for (AnnotationMirror mirror : annotated.getAnnotationMirrors())\n         {\n-            for ( Element annotated : roundEnv.getElementsAnnotatedWith( type ) )\n+          if (mirror.getAnnotationType().asElement().equals(type))\n+          {\n+            try\n+            {\n+              process(type, annotated, mirror, processingEnv.getElementUtils()\n+                  .getElementValuesWithDefaults(mirror));\n+            } catch (Exception e)\n             {\n-                for ( AnnotationMirror mirror : annotated.getAnnotationMirrors() )\n-                {\n-                    if ( mirror.getAnnotationType().asElement().equals( type ) )\n-                    {\n-                        try\n-                        {\n-                            process( type, annotated, mirror, processingEnv.getElementUtils()\n-                                    .getElementValuesWithDefaults( mirror ) );\n-                        }\n-                        catch ( Exception e )\n-                        {\n-                            e.printStackTrace();\n-                            processingEnv.getMessager().printMessage( Kind.ERROR, \"Internal error: \" + e,\n-                                    annotated, mirror );\n-                        }\n-                    }\n-                }\n+              e.printStackTrace();\n+              processingEnv.getMessager().printMessage(Kind.ERROR, \"Internal error: \" + e,\n+                  annotated, mirror);\n             }\n+          }\n         }\n-        return false;\n+      }\n     }\n+    return false;\n+  }\n \n-    protected final void warn( Element element, String message )\n-    {\n-        processingEnv.getMessager().printMessage( Kind.WARNING, message, element );\n-    }\n+  protected final void warn(Element element, String message)\n+  {\n+    processingEnv.getMessager().printMessage(Kind.WARNING, message, element);\n+  }\n \n-    protected final void warn( Element element, AnnotationMirror annotation, String message )\n-    {\n-        processingEnv.getMessager().printMessage( Kind.WARNING, message, element, annotation );\n-    }\n+  protected final void warn(Element element, AnnotationMirror annotation, String message)\n+  {\n+    processingEnv.getMessager().printMessage(Kind.WARNING, message, element, annotation);\n+  }\n \n-    protected final void error( Element element, String message )\n-    {\n-        processingEnv.getMessager().printMessage( Kind.ERROR, message, element );\n-    }\n+  protected final void error(Element element, String message)\n+  {\n+    processingEnv.getMessager().printMessage(Kind.ERROR, message, element);\n+  }\n \n-    protected final void error( Element element, AnnotationMirror annotation, String message )\n-    {\n-        processingEnv.getMessager().printMessage( Kind.ERROR, message, element, annotation );\n-    }\n+  protected final void error(Element element, AnnotationMirror annotation, String message)\n+  {\n+    processingEnv.getMessager().printMessage(Kind.ERROR, message, element, annotation);\n+  }\n \n-    protected abstract void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n-            Map<? extends ExecutableElement, ? extends AnnotationValue> values ) throws IOException;\n+  protected abstract void process(TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n+                                  Map<? extends ExecutableElement, ? extends AnnotationValue> values) throws IOException;\n \n-    private static Pattern nl = Pattern.compile( \"\\n\" );\n+  private static Pattern nl = Pattern.compile(\"\\n\");\n \n-    void addTo( String line, String... path ) throws IOException\n+  void addTo(String line, String... path) throws IOException\n+  {\n+    FileObject fo = processingEnv.getFiler().getResource(StandardLocation.CLASS_OUTPUT, \"\", path(path));\n+    URI uri = fo.toUri();\n+    File file;\n+    try\n     {\n-        FileObject fo = processingEnv.getFiler().getResource( StandardLocation.CLASS_OUTPUT, \"\", path( path ) );\n-        URI uri = fo.toUri();\n-        File file;\n-        try\n-        {\n-            file = new File( uri );\n-        }\n-        catch ( Exception e )\n-        {\n-            file = new File( uri.toString() );\n-        }\n-        if ( file.exists() )\n-        {\n-            for ( String previous : nl.split( fo.getCharContent( true ), 0 ) )\n-            {\n-                if ( line.equals( previous ) )\n-                {\n-                    return;\n-                }\n-            }\n-        }\n-        else\n+      file = new File(uri);\n+    } catch (Exception e)\n+    {\n+      file = new File(uri.toString());\n+    }\n+    if (file.exists())\n+    {\n+      for (String previous : nl.split(fo.getCharContent(true), 0))\n+      {\n+        if (line.equals(previous))\n         {\n-            file.getParentFile().mkdirs();\n+          return;\n         }\n+      }\n+    } else\n+    {\n+      file.getParentFile().mkdirs();\n+    }\n \n-        try ( PrintWriter writer = newFilePrintWriter( file, StandardCharsets.UTF_8 ) )\n-        {\n-            writer.append( line ).append( \"\\n\" );\n-        }\n+    try (PrintWriter writer = newFilePrintWriter(file, StandardCharsets.UTF_8))\n+    {\n+      writer.append(line).append(\"\\n\");\n     }\n+  }\n \n-    private String path( String[] path )\n+  private String path(String[] path)\n+  {\n+    StringBuilder filename = new StringBuilder();\n+    String sep = \"\";\n+    for (String part : path)\n     {\n-        StringBuilder filename = new StringBuilder();\n-        String sep = \"\";\n-        for ( String part : path )\n-        {\n-            filename.append( sep ).append( part );\n-            sep = \"/\";\n-        }\n-        return filename.toString();\n+      filename.append(sep).append(part);\n+      sep = \"/\";\n     }\n+    return filename.toString();\n+  }\n }\n",
            "diff_size": 109
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1594/AnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1594/AnnotationProcessor.java\nindex 1021f810644..f6c37ef20f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1594/AnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1594/AnnotationProcessor.java\n@@ -55,15 +55,14 @@ public abstract class AnnotationProcessor extends AbstractProcessor\n                     {\n                         try\n                         {\n-                            process( type, annotated, mirror, processingEnv.getElementUtils()\n-                                    .getElementValuesWithDefaults( mirror ) );\n-                        }\n+                            process( type, annotated, mirror, processingEnv.getElementUtils().getElementValuesWithDefaults( mirror ) );\n+    }\n                         catch ( Exception e )\n                         {\n                             e.printStackTrace();\n                             processingEnv.getMessager().printMessage( Kind.ERROR, \"Internal error: \" + e,\n                                     annotated, mirror );\n-                        }\n+    }\n                     }\n                 }\n             }\n@@ -91,10 +90,9 @@ public abstract class AnnotationProcessor extends AbstractProcessor\n         processingEnv.getMessager().printMessage( Kind.ERROR, message, element, annotation );\n     }\n \n-    protected abstract void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation,\n-            Map<? extends ExecutableElement, ? extends AnnotationValue> values ) throws IOException;\n+    protected abstract void process( TypeElement annotationType, Element annotated, AnnotationMirror annotation, Map<? extends ExecutableElement, ? extends AnnotationValue> values ) throws IOException;\n \n-    private static Pattern nl = Pattern.compile( \"\\n\" );\n+private static Pattern nl = Pattern.compile( \"\\n\" );\n \n     void addTo( String line, String... path ) throws IOException\n     {\n@@ -109,7 +107,8 @@ public abstract class AnnotationProcessor extends AbstractProcessor\n         {\n             file = new File( uri.toString() );\n         }\n-        if ( file.exists() )\n+\n+if ( file.exists() )\n         {\n             for ( String previous : nl.split( fo.getCharContent( true ), 0 ) )\n             {\n@@ -139,6 +138,7 @@ public abstract class AnnotationProcessor extends AbstractProcessor\n             filename.append( sep ).append( part );\n             sep = \"/\";\n         }\n-        return filename.toString();\n+\n+return filename.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "851",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/851/SchemaKernelException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/851/SchemaKernelException.java\nindex 7f0b76219d1..b12b7f98503 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/851/SchemaKernelException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/851/SchemaKernelException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.exceptions.schema;\n \n import java.util.Arrays;\n@@ -32,50 +33,49 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public abstract class SchemaKernelException extends KernelException\n {\n-    public enum OperationContext\n-    {\n-        INDEX_CREATION,\n-        CONSTRAINT_CREATION\n-    }\n+  public enum OperationContext\n+  {\n+    INDEX_CREATION,\n+    CONSTRAINT_CREATION\n+  }\n \n-    protected SchemaKernelException( Status statusCode, Throwable cause, String message, Object... parameters )\n-    {\n-        super( statusCode, cause, message, parameters );\n-    }\n+  protected SchemaKernelException(Status statusCode, Throwable cause, String message, Object... parameters)\n+  {\n+    super(statusCode, cause, message, parameters);\n+  }\n \n-    public SchemaKernelException( Status statusCode, String message, Throwable cause )\n-    {\n-        super( statusCode, cause, message );\n-    }\n+  public SchemaKernelException(Status statusCode, String message, Throwable cause)\n+  {\n+    super(statusCode, cause, message);\n+  }\n \n-    public SchemaKernelException( Status statusCode, String message )\n-    {\n-        super( statusCode, message );\n-    }\n+  public SchemaKernelException(Status statusCode, String message)\n+  {\n+    super(statusCode, message);\n+  }\n \n-    protected static String messageWithLabelAndPropertyName( TokenNameLookup tokenNameLookup, String formatString,\n-            SchemaDescriptor descriptor )\n-    {\n-        int[] propertyIds = descriptor.getPropertyIds();\n+  protected static String messageWithLabelAndPropertyName(TokenNameLookup tokenNameLookup, String formatString,\n+                                                          SchemaDescriptor descriptor)\n+  {\n+    int[] propertyIds = descriptor.getPropertyIds();\n \n-        if ( tokenNameLookup != null )\n-        {\n-            String propertyString = propertyIds.length == 1 ?\n-                                    \"property '\" + tokenNameLookup.propertyKeyGetName( propertyIds[0]) + \"'\" :\n-                                    \"properties \" + Arrays.stream( propertyIds )\n-                                            .mapToObj( i -> \"'\" + tokenNameLookup.propertyKeyGetName( i ) + \"'\" )\n-                                            .collect( Collectors.joining( \" and \" ));\n-            return String.format( formatString,\n-                    tokenNameLookup.labelGetName( descriptor.keyId() ), propertyString);\n-        }\n-        else\n-        {\n-            String keyString = propertyIds.length == 1 ? \"key[\" + propertyIds[0] + \"]\" :\n-                               \"keys[\" + Arrays.stream( propertyIds )\n-                                       .mapToObj( Integer::toString )\n-                                       .collect( Collectors.joining( \", \" )) + \"]\";\n-            return String.format( formatString,\n-                    \"label[\" + descriptor.keyId() + \"]\", keyString );\n-        }\n+    if (tokenNameLookup != null)\n+    {\n+      String propertyString = propertyIds.length == 1 ?\n+          \"property '\" + tokenNameLookup.propertyKeyGetName(propertyIds[0]) + \"'\" :\n+          \"properties \" + Arrays.stream(propertyIds)\n+              .mapToObj(i -> \"'\" + tokenNameLookup.propertyKeyGetName(i) + \"'\")\n+              .collect(Collectors.joining(\" and \"));\n+      return String.format(formatString,\n+          tokenNameLookup.labelGetName(descriptor.keyId()), propertyString);\n+    } else\n+    {\n+      String keyString = propertyIds.length == 1 ? \"key[\" + propertyIds[0] + \"]\" :\n+          \"keys[\" + Arrays.stream(propertyIds)\n+              .mapToObj(Integer::toString)\n+              .collect(Collectors.joining(\", \")) + \"]\";\n+      return String.format(formatString,\n+          \"label[\" + descriptor.keyId() + \"]\", keyString);\n     }\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/851/SchemaKernelException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/851/SchemaKernelException.java\nindex 7f0b76219d1..28d8bab9c2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/851/SchemaKernelException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/851/SchemaKernelException.java\n@@ -57,25 +57,16 @@ public abstract class SchemaKernelException extends KernelException\n             SchemaDescriptor descriptor )\n     {\n         int[] propertyIds = descriptor.getPropertyIds();\n-\n-        if ( tokenNameLookup != null )\n+if ( tokenNameLookup != null )\n         {\n-            String propertyString = propertyIds.length == 1 ?\n-                                    \"property '\" + tokenNameLookup.propertyKeyGetName( propertyIds[0]) + \"'\" :\n-                                    \"properties \" + Arrays.stream( propertyIds )\n-                                            .mapToObj( i -> \"'\" + tokenNameLookup.propertyKeyGetName( i ) + \"'\" )\n-                                            .collect( Collectors.joining( \" and \" ));\n-            return String.format( formatString,\n-                    tokenNameLookup.labelGetName( descriptor.keyId() ), propertyString);\n+            String propertyString = propertyIds.length == 1 ? \"property '\" + tokenNameLookup.propertyKeyGetName( propertyIds[0]) + \"'\" : \"properties \" + Arrays.stream( propertyIds ).mapToObj( i -> \"'\" + tokenNameLookup.propertyKeyGetName( i ) + \"'\" ).collect( Collectors.joining( \" and \" ));\n+return String.format( formatString,\n+                    tokenNameLookup.labelGetName( descriptor.keyId() ), propertyString );\n         }\n         else\n         {\n-            String keyString = propertyIds.length == 1 ? \"key[\" + propertyIds[0] + \"]\" :\n-                               \"keys[\" + Arrays.stream( propertyIds )\n-                                       .mapToObj( Integer::toString )\n-                                       .collect( Collectors.joining( \", \" )) + \"]\";\n-            return String.format( formatString,\n-                    \"label[\" + descriptor.keyId() + \"]\", keyString );\n-        }\n+            String keyString = propertyIds.length == 1 ? \"key[\" + propertyIds[0] + \"]\" : \"keys[\" + Arrays.stream( propertyIds ).mapToObj( Integer::toString ).collect( Collectors.joining( \", \" )) + \"]\";\n+return String.format( formatString, \"label[\" + descriptor.keyId() + \"]\", keyString );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "247",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "53",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n    @Autowired\n    public APITaskConverter(TaskService taskService){\n        this.taskService = taskService;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/247/APITaskConverter.java\nindex ec7aa4aedfa..6663c4ad73c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/247/APITaskConverter.java\n@@ -35,7 +35,7 @@ public class APITaskConverter extends ListConverter<org.activiti.engine.task.Tas\n     private final TaskService taskService;\n \n     @Autowired\n-    public APITaskConverter(TaskService taskService){\n+    public APITaskConverter(TaskService taskService) {\n         this.taskService = taskService;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/247/APITaskConverter.java\nindex ec7aa4aedfa..684ee596c3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/247/APITaskConverter.java\n@@ -35,19 +35,19 @@ public class APITaskConverter extends ListConverter<org.activiti.engine.task.Tas\n     private final TaskService taskService;\n \n     @Autowired\n-    public APITaskConverter(TaskService taskService){\n+    public APITaskConverter(TaskService taskService) {\n         this.taskService = taskService;\n     }\n \n     @Override\n     public Task from(org.activiti.engine.task.Task internalTask) {\n         return from(internalTask,\n-                    calculateStatus(internalTask));\n+                calculateStatus(internalTask));\n     }\n \n     public Task fromWithCandidates(org.activiti.engine.task.Task internalTask) {\n         TaskImpl task = (TaskImpl) from(internalTask,\n-                                        calculateStatus(internalTask));\n+                calculateStatus(internalTask));\n         extractCandidateUsersAndGroups(internalTask, task);\n         return task;\n     }\n@@ -55,8 +55,8 @@ public class APITaskConverter extends ListConverter<org.activiti.engine.task.Tas\n     public Task from(org.activiti.engine.task.Task internalTask,\n                      Task.TaskStatus status) {\n         TaskImpl task = new TaskImpl(internalTask.getId(),\n-                                     internalTask.getName(),\n-                                     status);\n+                internalTask.getName(),\n+                status);\n         task.setProcessDefinitionId(internalTask.getProcessDefinitionId());\n         task.setProcessInstanceId(internalTask.getProcessInstanceId());\n         task.setAssignee(internalTask.getAssignee());\n@@ -85,18 +85,18 @@ public class APITaskConverter extends ListConverter<org.activiti.engine.task.Tas\n         List<String> result = Collections.emptyList();\n         if (candidates != null) {\n             result = candidates\n-                             .stream()\n-                             .filter(candidate -> IdentityLinkType.CANDIDATE.equals(candidate.getType()))\n-                             .map(extractor::apply)\n-                             .filter(Objects::nonNull)\n-                             .collect(Collectors.toList());\n+                    .stream()\n+                    .filter(candidate -> IdentityLinkType.CANDIDATE.equals(candidate.getType()))\n+                    .map(extractor::apply)\n+                    .filter(Objects::nonNull)\n+                    .collect(Collectors.toList());\n         }\n         return result;\n     }\n \n     private Task.TaskStatus calculateStatus(org.activiti.engine.task.Task source) {\n         if (source instanceof TaskEntity &&\n-            (((TaskEntity) source).isDeleted() || ((TaskEntity) source).isCanceled())) {\n+                (((TaskEntity) source).isDeleted() || ((TaskEntity) source).isCanceled())) {\n             return Task.TaskStatus.CANCELLED;\n         } else if (source.isSuspended()) {\n             return Task.TaskStatus.SUSPENDED;\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/247/APITaskConverter.java\nindex ec7aa4aedfa..50c38206959 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/247/APITaskConverter.java\n@@ -23,86 +23,78 @@ import org.activiti.engine.impl.persistence.entity.TaskEntity;\n import org.activiti.engine.task.IdentityLink;\n import org.activiti.engine.task.IdentityLinkType;\n import org.springframework.beans.factory.annotation.Autowired;\n-\n import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n \n+\n public class APITaskConverter extends ListConverter<org.activiti.engine.task.Task, Task> implements ModelConverter<org.activiti.engine.task.Task, Task> {\n \n-    private final TaskService taskService;\n+  private final TaskService taskService;\n \n-    @Autowired\n-    public APITaskConverter(TaskService taskService){\n-        this.taskService = taskService;\n-    }\n+  @Autowired\n+  public APITaskConverter(TaskService taskService) {\n+    this.taskService = taskService;\n+  }\n \n-    @Override\n-    public Task from(org.activiti.engine.task.Task internalTask) {\n-        return from(internalTask,\n-                    calculateStatus(internalTask));\n-    }\n+  @Override\n+  public Task from(org.activiti.engine.task.Task internalTask) {\n+    return from(internalTask,\n+                calculateStatus(internalTask));\n+  }\n \n-    public Task fromWithCandidates(org.activiti.engine.task.Task internalTask) {\n-        TaskImpl task = (TaskImpl) from(internalTask,\n-                                        calculateStatus(internalTask));\n-        extractCandidateUsersAndGroups(internalTask, task);\n-        return task;\n-    }\n+  public Task fromWithCandidates(org.activiti.engine.task.Task internalTask) {\n+    TaskImpl task = (TaskImpl) from(internalTask,\n+                                    calculateStatus(internalTask));\n+    extractCandidateUsersAndGroups(internalTask, task);\n+    return task;\n+  }\n \n-    public Task from(org.activiti.engine.task.Task internalTask,\n-                     Task.TaskStatus status) {\n-        TaskImpl task = new TaskImpl(internalTask.getId(),\n-                                     internalTask.getName(),\n-                                     status);\n-        task.setProcessDefinitionId(internalTask.getProcessDefinitionId());\n-        task.setProcessInstanceId(internalTask.getProcessInstanceId());\n-        task.setAssignee(internalTask.getAssignee());\n-        task.setClaimedDate(internalTask.getClaimTime());\n-        task.setCreatedDate(internalTask.getCreateTime());\n-        task.setDueDate(internalTask.getDueDate());\n-        task.setDescription(internalTask.getDescription());\n-        task.setOwner(internalTask.getOwner());\n-        task.setParentTaskId(internalTask.getParentTaskId());\n-        task.setPriority(internalTask.getPriority());\n-        task.setFormKey(internalTask.getFormKey());\n-        task.setTaskDefinitionKey(internalTask.getTaskDefinitionKey());\n-        task.setAppVersion(Objects.toString(internalTask.getAppVersion(), null));\n-        task.setBusinessKey(internalTask.getBusinessKey());\n+  public Task from(org.activiti.engine.task.Task internalTask, Task.TaskStatus status) {\n+    TaskImpl task = new TaskImpl(internalTask.getId(),\n+                                 internalTask.getName(),\n+                                 status);\n+    task.setProcessDefinitionId(internalTask.getProcessDefinitionId());\n+    task.setProcessInstanceId(internalTask.getProcessInstanceId());\n+    task.setAssignee(internalTask.getAssignee());\n+    task.setClaimedDate(internalTask.getClaimTime());\n+    task.setCreatedDate(internalTask.getCreateTime());\n+    task.setDueDate(internalTask.getDueDate());\n+    task.setDescription(internalTask.getDescription());\n+    task.setOwner(internalTask.getOwner());\n+    task.setParentTaskId(internalTask.getParentTaskId());\n+    task.setPriority(internalTask.getPriority());\n+    task.setFormKey(internalTask.getFormKey());\n+    task.setTaskDefinitionKey(internalTask.getTaskDefinitionKey());\n+    task.setAppVersion(Objects.toString(internalTask.getAppVersion(), null));\n+    task.setBusinessKey(internalTask.getBusinessKey());\n+    return task;\n+  }\n \n-        return task;\n-    }\n-\n-    private void extractCandidateUsersAndGroups(org.activiti.engine.task.Task source, TaskImpl destination) {\n-        List<IdentityLink> candidates = taskService.getIdentityLinksForTask(source.getId());\n-        destination.setCandidateGroups(extractCandidatesBy(candidates, IdentityLink::getGroupId));\n-        destination.setCandidateUsers(extractCandidatesBy(candidates, IdentityLink::getUserId));\n-    }\n+  private void extractCandidateUsersAndGroups(org.activiti.engine.task.Task source, TaskImpl destination) {\n+    List<IdentityLink> candidates = taskService.getIdentityLinksForTask(source.getId());\n+    destination.setCandidateGroups(extractCandidatesBy(candidates, IdentityLink::getGroupId));\n+    destination.setCandidateUsers(extractCandidatesBy(candidates, IdentityLink::getUserId));\n+  }\n \n-    private List<String> extractCandidatesBy(List<IdentityLink> candidates, Function<IdentityLink, String> extractor) {\n-        List<String> result = Collections.emptyList();\n-        if (candidates != null) {\n-            result = candidates\n-                             .stream()\n-                             .filter(candidate -> IdentityLinkType.CANDIDATE.equals(candidate.getType()))\n-                             .map(extractor::apply)\n-                             .filter(Objects::nonNull)\n-                             .collect(Collectors.toList());\n-        }\n-        return result;\n+  private List<String> extractCandidatesBy(List<IdentityLink> candidates, Function<IdentityLink, String> extractor) {\n+    List<String> result = Collections.emptyList();\n+    if (candidates != null) {\n+      result = candidates.stream().filter(candidate -> IdentityLinkType.CANDIDATE.equals(candidate.getType())).map(extractor::apply).filter(Objects::nonNull).collect(Collectors.toList());\n     }\n+    return result;\n+  }\n \n-    private Task.TaskStatus calculateStatus(org.activiti.engine.task.Task source) {\n-        if (source instanceof TaskEntity &&\n-            (((TaskEntity) source).isDeleted() || ((TaskEntity) source).isCanceled())) {\n-            return Task.TaskStatus.CANCELLED;\n-        } else if (source.isSuspended()) {\n-            return Task.TaskStatus.SUSPENDED;\n-        } else if (source.getAssignee() != null && !source.getAssignee().isEmpty()) {\n-            return Task.TaskStatus.ASSIGNED;\n-        }\n-        return Task.TaskStatus.CREATED;\n-    }\n-}\n+  private Task.TaskStatus calculateStatus(org.activiti.engine.task.Task source) {\n+    if (source instanceof TaskEntity && (((TaskEntity) source).isDeleted() || ((TaskEntity) source).isCanceled())) {\n+      return Task.TaskStatus.CANCELLED;\n+    } else if (source.isSuspended()) {\n+      return Task.TaskStatus.SUSPENDED;\n+    } else if (source.getAssignee() != null && !source.getAssignee().isEmpty()) {\n+        return Task.TaskStatus.ASSIGNED;\n+           }\n+    return Task.TaskStatus.CREATED;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/247/APITaskConverter.java\nindex ec7aa4aedfa..6663c4ad73c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/247/APITaskConverter.java\n@@ -35,7 +35,7 @@ public class APITaskConverter extends ListConverter<org.activiti.engine.task.Tas\n     private final TaskService taskService;\n \n     @Autowired\n-    public APITaskConverter(TaskService taskService){\n+    public APITaskConverter(TaskService taskService) {\n         this.taskService = taskService;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/247/APITaskConverter.java\nindex ec7aa4aedfa..6663c4ad73c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/247/APITaskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/247/APITaskConverter.java\n@@ -35,7 +35,7 @@ public class APITaskConverter extends ListConverter<org.activiti.engine.task.Tas\n     private final TaskService taskService;\n \n     @Autowired\n-    public APITaskConverter(TaskService taskService){\n+    public APITaskConverter(TaskService taskService) {\n         this.taskService = taskService;\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
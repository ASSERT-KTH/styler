{
    "project_name": "Angel-ML-angel",
    "error_id": "365",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/365/GetByteNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/365/GetByteNeighbor.java\nindex db46e1b394b..8fd200216ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/365/GetByteNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/365/GetByteNeighbor.java\n@@ -70,7 +70,7 @@ public class GetByteNeighbor extends GetFunc {\n           if (serializedNeighbors.length > 0) {\n             nodeIdToNeighbors.put(nodeIds[i],\n                 ScalaKryoInstantiator.defaultPool().fromBytes(serializedNeighbors, long[].class));\n-          } else {\n+  } else {\n             nodeIdToNeighbors.put(nodeIds[i], emptyLongs);\n           }\n         } else {\n@@ -81,4 +81,4 @@ public class GetByteNeighbor extends GetFunc {\n \n     return new GetLongsResult(nodeIdToNeighbors);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/365/GetByteNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/365/GetByteNeighbor.java\nindex db46e1b394b..1f73792a614 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/365/GetByteNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/365/GetByteNeighbor.java\n@@ -34,6 +34,7 @@ import java.util.List;\n /**\n  * Sample the neighbor\n  */\n+\n public class GetByteNeighbor extends GetFunc {\n \n   public static final long[] emptyLongs = new long[0];\n@@ -59,7 +60,6 @@ public class GetByteNeighbor extends GetFunc {\n     }\n \n     Long2ObjectOpenHashMap<long[]> nodeIdToNeighbors = new Long2ObjectOpenHashMap<>(resultSize);\n-\n     for (PartitionGetResult result : partResults) {\n       PartGeneralGetResult partResult = (PartGeneralGetResult) result;\n       long[] nodeIds = partResult.getNodeIds();\n@@ -68,8 +68,7 @@ public class GetByteNeighbor extends GetFunc {\n         if (data[i] != null) {\n           byte[] serializedNeighbors = ((ByteArrayElement) data[i]).getData();\n           if (serializedNeighbors.length > 0) {\n-            nodeIdToNeighbors.put(nodeIds[i],\n-                ScalaKryoInstantiator.defaultPool().fromBytes(serializedNeighbors, long[].class));\n+            nodeIdToNeighbors.put(nodeIds[i], ScalaKryoInstantiator.defaultPool().fromBytes(serializedNeighbors, long[].class));\n           } else {\n             nodeIdToNeighbors.put(nodeIds[i], emptyLongs);\n           }\n@@ -78,7 +77,7 @@ public class GetByteNeighbor extends GetFunc {\n         }\n       }\n     }\n-\n     return new GetLongsResult(nodeIdToNeighbors);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1972",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1972/ZOrderSpaceFillingCurve2D.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1972/ZOrderSpaceFillingCurve2D.java\nindex 41285ddb2c4..60a6fdb26e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1972/ZOrderSpaceFillingCurve2D.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1972/ZOrderSpaceFillingCurve2D.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.gis.spatial.index.curves;\n \n import org.neo4j.gis.spatial.index.Envelope;\n@@ -24,50 +25,50 @@ import org.neo4j.gis.spatial.index.Envelope;\n public class ZOrderSpaceFillingCurve2D extends SpaceFillingCurve\n {\n \n-    /**\n-     * Description of the space filling curve structure\n-     */\n-    static class ZOrderCurve2D extends CurveRule\n-    {\n-\n-        private ZOrderCurve2D( int... npointValues )\n-        {\n-            super( 2, npointValues );\n-            assert npointValues[0] == 1 && npointValues[3] == 2;\n-        }\n-\n-        @Override\n-        public CurveRule childAt( int npoint )\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"Z\";\n-        }\n-    }\n-\n-    private static final ZOrderCurve2D rootCurve = new ZOrderCurve2D( 1, 3, 0, 2 );\n+  /**\n+   * Description of the space filling curve structure\n+   */\n+  static class ZOrderCurve2D extends CurveRule\n+  {\n \n-    public static final int MAX_LEVEL = 63 / 2 - 1;\n-\n-    public ZOrderSpaceFillingCurve2D( Envelope range )\n+    private ZOrderCurve2D(int... npointValues)\n     {\n-        this( range, MAX_LEVEL );\n+      super(2, npointValues);\n+      assert npointValues[0] == 1 && npointValues[3] == 2;\n     }\n \n-    public ZOrderSpaceFillingCurve2D( Envelope range, int maxLevel )\n+    @Override\n+    public CurveRule childAt(int npoint)\n     {\n-        super( range, maxLevel );\n-        assert maxLevel <= MAX_LEVEL;\n-        assert range.getDimension() == 2;\n+      return this;\n     }\n \n     @Override\n-    protected CurveRule rootCurve()\n+    public String toString()\n     {\n-        return rootCurve;\n+      return \"Z\";\n     }\n+  }\n+\n+  private static final ZOrderCurve2D rootCurve = new ZOrderCurve2D(1, 3, 0, 2);\n+\n+  public static final int MAX_LEVEL = 63 / 2 - 1;\n+\n+  public ZOrderSpaceFillingCurve2D(Envelope range)\n+  {\n+    this(range, MAX_LEVEL);\n+  }\n+\n+  public ZOrderSpaceFillingCurve2D(Envelope range, int maxLevel)\n+  {\n+    super(range, maxLevel);\n+    assert maxLevel <= MAX_LEVEL;\n+    assert range.getDimension() == 2;\n+  }\n+\n+  @Override\n+  protected CurveRule rootCurve()\n+  {\n+    return rootCurve;\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1972/ZOrderSpaceFillingCurve2D.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1972/ZOrderSpaceFillingCurve2D.java\nindex 41285ddb2c4..566663bb71d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1972/ZOrderSpaceFillingCurve2D.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1972/ZOrderSpaceFillingCurve2D.java\n@@ -23,14 +23,12 @@ import org.neo4j.gis.spatial.index.Envelope;\n \n public class ZOrderSpaceFillingCurve2D extends SpaceFillingCurve\n {\n-\n     /**\n      * Description of the space filling curve structure\n      */\n     static class ZOrderCurve2D extends CurveRule\n     {\n-\n-        private ZOrderCurve2D( int... npointValues )\n+    private ZOrderCurve2D( int... npointValues )\n         {\n             super( 2, npointValues );\n             assert npointValues[0] == 1 && npointValues[3] == 2;\n@@ -70,4 +68,4 @@ public class ZOrderSpaceFillingCurve2D extends SpaceFillingCurve\n     {\n         return rootCurve;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
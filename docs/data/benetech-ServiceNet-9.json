{
    "project_name": "benetech-ServiceNet",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "17",
                "column": "1",
                "severity": "error",
                "message": "'CLASS_DEF' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npublic class LocationMatchRepositoryImpl implements LocationMatchRepositoryCustom {\n    public static final Integer QUERY_PREDICATE_CHUNK_SIZE = 256;\n\n    private final EntityManager em;",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/9/LocationMatchRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/intellij/9/LocationMatchRepositoryImpl.java\nindex ba605ac3451..49288eebf54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/9/LocationMatchRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/intellij/9/LocationMatchRepositoryImpl.java\n@@ -28,7 +28,7 @@ public class LocationMatchRepositoryImpl implements LocationMatchRepositoryCusto\n     @Override\n     public void deleteInBatchByLocationAndMatchingLocationIds(\n         List<LocationMatchDto> dtos) {\n-        CriteriaBuilder criteriaBuilder  = em.getCriteriaBuilder();\n+        CriteriaBuilder criteriaBuilder = em.getCriteriaBuilder();\n         Lists.partition(dtos, QUERY_PREDICATE_CHUNK_SIZE).forEach(locationMatchDtos -> {\n             CriteriaDelete<LocationMatch> query = criteriaBuilder\n                 .createCriteriaDelete(LocationMatch.class);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
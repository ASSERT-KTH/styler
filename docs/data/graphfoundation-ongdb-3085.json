{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3085",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3085/LogMessageUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3085/LogMessageUtil.java\nindex 831c1b71c11..1fc7d107439 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3085/LogMessageUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3085/LogMessageUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging.internal;\n \n import java.util.regex.Pattern;\n@@ -25,21 +26,21 @@ import org.neo4j.logging.Log;\n \n public final class LogMessageUtil\n {\n-    private static final Pattern SLF4J_PLACEHOLDER = Pattern.compile( \"\\\\{}\" );\n+  private static final Pattern SLF4J_PLACEHOLDER = Pattern.compile(\"\\\\{}\");\n \n-    private LogMessageUtil()\n-    {\n-    }\n+  private LogMessageUtil()\n+  {\n+  }\n \n-    /**\n-     * Replace SLF4J-style placeholders like {@code {}} with {@link String#format(String, Object...)} placeholders like {@code %s} in the given string.\n-     * This is nessesary for logging adapters that redirect SLF4J loggers to neo4j {@link Log}. Former uses {@code {}} while later {@code %s}.\n-     *\n-     * @param template the message template to modify.\n-     * @return new message template which can be safely formatted using {@link String#format(String, Object...)}.\n-     */\n-    public static String slf4jToStringFormatPlaceholders( String template )\n-    {\n-        return SLF4J_PLACEHOLDER.matcher( template ).replaceAll( \"%s\" );\n-    }\n+  /**\n+   * Replace SLF4J-style placeholders like {@code {}} with {@link String#format(String, Object...)} placeholders like {@code %s} in the given string.\n+   * This is nessesary for logging adapters that redirect SLF4J loggers to neo4j {@link Log}. Former uses {@code {}} while later {@code %s}.\n+   *\n+   * @param template the message template to modify.\n+   * @return new message template which can be safely formatted using {@link String#format(String, Object...)}.\n+   */\n+  public static String slf4jToStringFormatPlaceholders(String template)\n+  {\n+    return SLF4J_PLACEHOLDER.matcher(template).replaceAll(\"%s\");\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3085/LogMessageUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3085/LogMessageUtil.java\nindex 831c1b71c11..724b0ee1b6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3085/LogMessageUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3085/LogMessageUtil.java\n@@ -42,4 +42,4 @@ public final class LogMessageUtil\n     {\n         return SLF4J_PLACEHOLDER.matcher( template ).replaceAll( \"%s\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3085/LogMessageUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3085/LogMessageUtil.java\nindex 831c1b71c11..32cb5a788b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3085/LogMessageUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3085/LogMessageUtil.java\n@@ -20,7 +20,6 @@\n package org.neo4j.logging.internal;\n \n import java.util.regex.Pattern;\n-\n import org.neo4j.logging.Log;\n \n public final class LogMessageUtil\n@@ -38,8 +37,9 @@ public final class LogMessageUtil\n      * @param template the message template to modify.\n      * @return new message template which can be safely formatted using {@link String#format(String, Object...)}.\n      */\n+\n     public static String slf4jToStringFormatPlaceholders( String template )\n     {\n         return SLF4J_PLACEHOLDER.matcher( template ).replaceAll( \"%s\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
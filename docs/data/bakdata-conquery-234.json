{
    "project_name": "bakdata-conquery",
    "error_id": "234",
    "information": {
        "errors": [
            {
                "line": "212",
                "column": "98",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t}\n\t\n\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n\n\t\t@Override\n\t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/234/OIDCResourceOwnerPasswordCredentialRealm.java\nindex 6fbe3e5f9be..9153671646c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/234/OIDCResourceOwnerPasswordCredentialRealm.java\n@@ -209,7 +209,7 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t\treturn accessToken.getValue();\n \t}\n \t\n-\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n+\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse> {\n \n \t\t@Override\n \t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "198",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "215",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "232",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "253",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "255",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "265",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "267",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "269",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "276",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/234/OIDCResourceOwnerPasswordCredentialRealm.java\nindex 6fbe3e5f9be..533fe640f68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/234/OIDCResourceOwnerPasswordCredentialRealm.java\n@@ -67,214 +67,212 @@ import org.apache.shiro.authc.ExpiredCredentialsException;\n @RequiredArgsConstructor\n public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticationConfig> extends ConqueryAuthenticationRealm implements AuthApiUnprotectedResourceProvider, AuthAdminUnprotectedResourceProvider, UsernamePasswordChecker {\n \n-\tpublic static final String CONFIDENTIAL_CREDENTIAL = \"secret\";\n-\tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n-\tprivate static final String GROUPS_CLAIM = \"groups\";\n-\t\n-\tprivate final MetaStorage storage;\n-\tprivate final OIDCAuthenticationConfig authProviderConf;\n-\t\n-\tprivate ClientAuthentication clientAuthentication;\n-\t\n-\t\n-\t/**\n-\t * We only hold validated Tokens for some minutes to recheck them regulary with Keycloak.\n-\t */\n-\tprivate LoadingCache<JwtToken, TokenIntrospectionSuccessResponse> tokenCache = CacheBuilder.newBuilder()\n-\t\t.expireAfterWrite(10, TimeUnit.MINUTES)\n-\t\t.build(new TokenValidator());\n-\t\n-\t@Override\n-\tprotected void onInit() {\n-\t\tsuper.onInit();\n-\t\tthis.setCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t\tthis.setAuthenticationTokenClass(TOKEN_CLASS);\n-\t}\n-\t\n-\t@Override\n-\t@SneakyThrows\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\t\n-\t\tTokenIntrospectionSuccessResponse successResponse = tokenCache.get((JwtToken) token);\n-\t\t\n-\t\tUserId userId = extractId(successResponse);\n-\n-\t\tUser user = storage.getUser(userId);\n-\t\t\n-\t\tif(user == null) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve user with id: \" + userId);\n-\t\t}\n-\n-\t\treturn new ConqueryAuthenticationInfo(user.getId(), token, this, true);\n-\t}\n-\n-\tprivate static UserId extractId(TokenIntrospectionSuccessResponse successResponse) {\n-\t\tString identifier = successResponse.getUsername();\n-\t\tif(StringUtils.isBlank(identifier)) {\n-\t\t\tidentifier = successResponse.getStringParameter(\"preferred_username\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(identifier)) {\n-\t\t\tidentifier = successResponse.getStringParameter(\"email\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(identifier)) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n-\t\t}\n-\t\t\n-\t\treturn new UserId(identifier);\n-\t}\n-\t\n-\tprivate static String extractDisplayName(TokenIntrospectionSuccessResponse successResponse) {\n-\t\tString username = successResponse.getUsername();\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tusername = successResponse.getStringParameter(\"name\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n-\t\t}\n-\t\t\n-\t\treturn username;\n-\t}\n-\n-\t/**\n-\t * Is called by the CacheLoader, so the Token is not validated on every request.\n-\t */\n-\tprivate TokenIntrospectionSuccessResponse validateToken(AuthenticationToken token) throws ParseException, IOException {\n-\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(URI.create(authProviderConf.getIntrospectionEndpoint()) , authProviderConf.getClientAuthentication(), new TypelessAccessToken((String) token.getCredentials()));\n-\t\t\n-\t\tTokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n-\t\t\n-\t\tif (!response.indicatesSuccess()) {\n-\t\t\tHTTPResponse httpResponse = response.toHTTPResponse();\n-\t\t\tlog.error(\"Received the following error from the auth server while validating a token: {} {} {}\",  httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n-\t\t\tthrow new AuthenticationException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new AuthenticationException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tTokenIntrospectionSuccessResponse successResponse = response.toSuccessResponse();\n-\t\tif(!successResponse.isActive()) {\n-\t\t\tthrow new ExpiredCredentialsException();\n-\t\t}\n-\t\treturn successResponse;\n-\t}\n-\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\treturn TokenHandler.extractToken(request);\n-\t}\n-\t\n-\t@Override\n-\tpublic void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t\tjerseyConfig.register(LoginResource.class);\n-\t}\n-\n-\t@Override\n-\tpublic void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t}\n-\n-\t@Override\n-\t@SneakyThrows\n-\tpublic String checkCredentialsAndCreateJWT(String username, char[] password) {\n-\t\t\n-\t\tSecret passwordSecret = new Secret(new String(password));\n-\n-\t\tAuthorizationGrant  grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n-\t\t\n-\t\tURI tokenEndpoint =  UriBuilder.fromUri(authProviderConf.getTokenEndpoint()).build();\n-\n-\t\tTokenRequest tokenRequest = new TokenRequest(tokenEndpoint, authProviderConf.getClientAuthentication(), grant, Scope.parse(\"openid\"));\n-\t\t\n-\t\t\n-\t\tTokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n-\n-\t\tif (!response.indicatesSuccess()) {\n-\t\t\tHTTPResponse httpResponse = response.toHTTPResponse();\n-\t\t\tlog.error(\"Received the following error from the auth server while validating username and password:\\n\\tPath: {}\\n\\tStatus code: {}\\n\\tStatus message: {}\\n\\tContent: {}\", tokenEndpoint, httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof AccessTokenResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new IllegalStateException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tAccessTokenResponse successResponse = (AccessTokenResponse) response;\n-\n-\t\t// Get the access token, the server may also return a refresh token\n-\t\tAccessToken accessToken = successResponse.getTokens().getAccessToken();\n-\t\t//RefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n-\t\treturn accessToken.getValue();\n-\t}\n-\t\n-\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n-\n-\t\t@Override\n-\t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n-\t\t\tTokenIntrospectionSuccessResponse response = validateToken(key);\n-\t\t\t\n-\t\t\tUser user = getOrCreateUser(response, extractDisplayName(response), extractId(response));\n-\t\t\tSet<Group> mappedGroupsToDo = getMappedGroups(response);\n-\n-\t\t\tsynchGroupMappings(user, mappedGroupsToDo);\n-\t\t\t\n-\t\t\treturn response;\n-\t\t}\n-\n-\n-\t\tprivate void synchGroupMappings(User user, Set<Group> mappedGroupsToDo) {\n-\t\t\tfor(Group group : storage.getAllGroups()) {\n-\t\t\t\tif(group.containsMember(user)) {\n-\t\t\t\t\tif(mappedGroupsToDo.contains(group)) {\n-\t\t\t\t\t\t// Mapping is still valid, remove from ToDo-List\n-\t\t\t\t\t\tmappedGroupsToDo.remove(group);\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\t// Mapping is not valid any more remove user from group\n-\t\t\t\t\t\tgroup.removeMember(storage, user);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\t\n-\t\t\tfor(Group group : mappedGroupsToDo) {\n-\t\t\t\tgroup.addMember(storage, user);\n-\t\t\t}\n-\t\t}\n-\n-\n-\t\tprivate synchronized User getOrCreateUser(TokenIntrospectionSuccessResponse successResponse, String username, UserId userId) {\n-\t\t\tUser user = storage.getUser(userId);\n-\t\t\tif (user != null) {\n-\t\t\t\treturn user;\n-\t\t\t}\n-\t\t\t// try to construct a new User if none could be found in the storage\n-\t\t\tString userLabel = successResponse.getStringParameter(\"name\");\n-\t\t\tuser = new User(username, userLabel != null ?  userLabel : username);\n-\t\t\tstorage.addUser(user);\n-\t\t\tlog.info(\"Created new user: {}\", user);\n-\t\t\treturn user;\n-\t\t}\n-\t\t\n-\t\tprivate Set<Group> getMappedGroups(TokenIntrospectionSuccessResponse successResponse) {\n-\t\t\tList<String> groupNames = Objects.requireNonNullElse(successResponse.getStringListParameter(GROUPS_CLAIM), List.of());\n-\t\t\tStream<Pair<String,GroupId>> derivedGroupIds = groupNames.stream().map(name -> Pair.of(name,new GroupId(name)));\n-\t\t\tSet<Group> groups =  derivedGroupIds.map(this::getOrCreateGroup).collect(Collectors.toCollection(Sets::newHashSet));\n-\t\t\treturn groups;\n-\t\t}\n-\t\t\n-\t\tprivate synchronized Group getOrCreateGroup(Pair<String,GroupId> groupNameId) {\n-\t\t\tGroup group = storage.getGroup(groupNameId.getValue());\n-\t\t\tif (group != null) {\n-\t\t\t\treturn group;\n-\t\t\t}\n-\t\t\tgroup = new Group(groupNameId.getValue().getGroup(), groupNameId.getKey());\n-\t\t\tstorage.addGroup(group);\n-\t\t\tlog.info(\"Created new group: {}\", group);\n-\t\t\treturn group;\n-\t\t}\n-\t\t\n-\t}\n+    public static final String CONFIDENTIAL_CREDENTIAL = \"secret\";\n+    private static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n+    private static final String GROUPS_CLAIM = \"groups\";\n+\n+    private final MetaStorage storage;\n+    private final OIDCAuthenticationConfig authProviderConf;\n+\n+    private ClientAuthentication clientAuthentication;\n+\n+\n+    /**\n+     * We only hold validated Tokens for some minutes to recheck them regulary with Keycloak.\n+     */\n+    private LoadingCache<JwtToken, TokenIntrospectionSuccessResponse> tokenCache = CacheBuilder.newBuilder()\n+        .expireAfterWrite(10, TimeUnit.MINUTES)\n+        .build(new TokenValidator());\n+\n+    @Override\n+    protected void onInit() {\n+        super.onInit();\n+        this.setCredentialsMatcher(new SkippingCredentialsMatcher());\n+        this.setAuthenticationTokenClass(TOKEN_CLASS);\n+    }\n+\n+    @Override\n+    @SneakyThrows\n+    protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+\n+        TokenIntrospectionSuccessResponse successResponse = tokenCache.get((JwtToken) token);\n+\n+        UserId userId = extractId(successResponse);\n+\n+        User user = storage.getUser(userId);\n+\n+        if (user == null) {\n+            throw new IllegalStateException(\"Unable to retrieve user with id: \" + userId);\n+        }\n+\n+        return new ConqueryAuthenticationInfo(user.getId(), token, this, true);\n+    }\n+\n+    private static UserId extractId(TokenIntrospectionSuccessResponse successResponse) {\n+        String identifier = successResponse.getUsername();\n+        if (StringUtils.isBlank(identifier)) {\n+            identifier = successResponse.getStringParameter(\"preferred_username\");\n+        }\n+        if (StringUtils.isBlank(identifier)) {\n+            identifier = successResponse.getStringParameter(\"email\");\n+        }\n+        if (StringUtils.isBlank(identifier)) {\n+            throw new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n+        }\n+\n+        return new UserId(identifier);\n+    }\n+\n+    private static String extractDisplayName(TokenIntrospectionSuccessResponse successResponse) {\n+        String username = successResponse.getUsername();\n+        if (StringUtils.isBlank(username)) {\n+            username = successResponse.getStringParameter(\"name\");\n+        }\n+        if (StringUtils.isBlank(username)) {\n+            throw new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n+        }\n+\n+        return username;\n+    }\n+\n+    /**\n+     * Is called by the CacheLoader, so the Token is not validated on every request.\n+     */\n+    private TokenIntrospectionSuccessResponse validateToken(AuthenticationToken token) throws ParseException, IOException {\n+        TokenIntrospectionRequest request = new TokenIntrospectionRequest(URI.create(authProviderConf.getIntrospectionEndpoint()), authProviderConf.getClientAuthentication(), new TypelessAccessToken((String) token.getCredentials()));\n+\n+        TokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n+\n+        if (!response.indicatesSuccess()) {\n+            HTTPResponse httpResponse = response.toHTTPResponse();\n+            log.error(\"Received the following error from the auth server while validating a token: {} {} {}\", httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n+            throw new AuthenticationException(\"Unable to retrieve access token from auth server.\");\n+        } else if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n+            log.error(\"Unknown token response {}.\", response.getClass().getName());\n+            throw new AuthenticationException(\"Unknown token response. See log.\");\n+        }\n+\n+        TokenIntrospectionSuccessResponse successResponse = response.toSuccessResponse();\n+        if (!successResponse.isActive()) {\n+            throw new ExpiredCredentialsException();\n+        }\n+        return successResponse;\n+    }\n+\n+    @Override\n+    public AuthenticationToken extractToken(ContainerRequestContext request) {\n+        return TokenHandler.extractToken(request);\n+    }\n+\n+    @Override\n+    public void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+        jerseyConfig.register(new TokenResource(this));\n+        jerseyConfig.register(LoginResource.class);\n+    }\n+\n+    @Override\n+    public void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+        jerseyConfig.register(new TokenResource(this));\n+    }\n+\n+    @Override\n+    @SneakyThrows\n+    public String checkCredentialsAndCreateJWT(String username, char[] password) {\n+\n+        Secret passwordSecret = new Secret(new String(password));\n+\n+        AuthorizationGrant grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n+\n+        URI tokenEndpoint = UriBuilder.fromUri(authProviderConf.getTokenEndpoint()).build();\n+\n+        TokenRequest tokenRequest = new TokenRequest(tokenEndpoint, authProviderConf.getClientAuthentication(), grant, Scope.parse(\"openid\"));\n+\n+\n+        TokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n+\n+        if (!response.indicatesSuccess()) {\n+            HTTPResponse httpResponse = response.toHTTPResponse();\n+            log.error(\"Received the following error from the auth server while validating username and password:\\n\\tPath: {}\\n\\tStatus code: {}\\n\\tStatus message: {}\\n\\tContent: {}\", tokenEndpoint, httpResponse.getStatusCode(),\n+                httpResponse.getStatusMessage(), httpResponse.getContent());\n+            throw new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n+        } else if (!(response instanceof AccessTokenResponse)) {\n+            log.error(\"Unknown token response {}.\", response.getClass().getName());\n+            throw new IllegalStateException(\"Unknown token response. See log.\");\n+        }\n+\n+        AccessTokenResponse successResponse = (AccessTokenResponse) response;\n+\n+        // Get the access token, the server may also return a refresh token\n+        AccessToken accessToken = successResponse.getTokens().getAccessToken();\n+        //RefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n+        return accessToken.getValue();\n+    }\n+\n+    private class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse> {\n+\n+        @Override\n+        public TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n+            TokenIntrospectionSuccessResponse response = validateToken(key);\n+\n+            User user = getOrCreateUser(response, extractDisplayName(response), extractId(response));\n+            Set<Group> mappedGroupsToDo = getMappedGroups(response);\n+\n+            synchGroupMappings(user, mappedGroupsToDo);\n+\n+            return response;\n+        }\n+\n+\n+        private void synchGroupMappings(User user, Set<Group> mappedGroupsToDo) {\n+            for (Group group : storage.getAllGroups()) {\n+                if (group.containsMember(user)) {\n+                    if (mappedGroupsToDo.contains(group)) {\n+                        // Mapping is still valid, remove from ToDo-List\n+                        mappedGroupsToDo.remove(group);\n+                    } else {\n+                        // Mapping is not valid any more remove user from group\n+                        group.removeMember(storage, user);\n+                    }\n+                }\n+            }\n+\n+            for (Group group : mappedGroupsToDo) {\n+                group.addMember(storage, user);\n+            }\n+        }\n+\n+\n+        private synchronized User getOrCreateUser(TokenIntrospectionSuccessResponse successResponse, String username, UserId userId) {\n+            User user = storage.getUser(userId);\n+            if (user != null) {\n+                return user;\n+            }\n+            // try to construct a new User if none could be found in the storage\n+            String userLabel = successResponse.getStringParameter(\"name\");\n+            user = new User(username, userLabel != null ? userLabel : username);\n+            storage.addUser(user);\n+            log.info(\"Created new user: {}\", user);\n+            return user;\n+        }\n+\n+        private Set<Group> getMappedGroups(TokenIntrospectionSuccessResponse successResponse) {\n+            List<String> groupNames = Objects.requireNonNullElse(successResponse.getStringListParameter(GROUPS_CLAIM), List.of());\n+            Stream<Pair<String, GroupId>> derivedGroupIds = groupNames.stream().map(name -> Pair.of(name, new GroupId(name)));\n+            Set<Group> groups = derivedGroupIds.map(this::getOrCreateGroup).collect(Collectors.toCollection(Sets::newHashSet));\n+            return groups;\n+        }\n+\n+        private synchronized Group getOrCreateGroup(Pair<String, GroupId> groupNameId) {\n+            Group group = storage.getGroup(groupNameId.getValue());\n+            if (group != null) {\n+                return group;\n+            }\n+            group = new Group(groupNameId.getValue().getGroup(), groupNameId.getKey());\n+            storage.addGroup(group);\n+            log.info(\"Created new group: {}\", group);\n+            return group;\n+        }\n+\n+    }\n \n }\n",
            "diff_size": 209
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "80",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 0, indentation should be the same level as line 83.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "83",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "column": "1",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "221",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/234/OIDCResourceOwnerPasswordCredentialRealm.java\nindex 6fbe3e5f9be..704d27b62c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/234/OIDCResourceOwnerPasswordCredentialRealm.java\n@@ -75,12 +75,12 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \tprivate final OIDCAuthenticationConfig authProviderConf;\n \t\n \tprivate ClientAuthentication clientAuthentication;\n-\t\n-\t\n-\t/**\n+\n+\n+\t\t/**\n \t * We only hold validated Tokens for some minutes to recheck them regulary with Keycloak.\n \t */\n-\tprivate LoadingCache<JwtToken, TokenIntrospectionSuccessResponse> tokenCache = CacheBuilder.newBuilder()\n+private LoadingCache<JwtToken, TokenIntrospectionSuccessResponse> tokenCache = CacheBuilder.newBuilder()\n \t\t.expireAfterWrite(10, TimeUnit.MINUTES)\n \t\t.build(new TokenValidator());\n \t\n@@ -94,8 +94,7 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t@Override\n \t@SneakyThrows\n \tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\t\n-\t\tTokenIntrospectionSuccessResponse successResponse = tokenCache.get((JwtToken) token);\n+\tTokenIntrospectionSuccessResponse successResponse = tokenCache.get((JwtToken) token);\n \t\t\n \t\tUserId userId = extractId(successResponse);\n \n@@ -139,13 +138,13 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t * Is called by the CacheLoader, so the Token is not validated on every request.\n \t */\n \tprivate TokenIntrospectionSuccessResponse validateToken(AuthenticationToken token) throws ParseException, IOException {\n-\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(URI.create(authProviderConf.getIntrospectionEndpoint()) , authProviderConf.getClientAuthentication(), new TypelessAccessToken((String) token.getCredentials()));\n+\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(URI.create(authProviderConf.getIntrospectionEndpoint()), authProviderConf.getClientAuthentication(), new TypelessAccessToken((String) token.getCredentials()));\n \t\t\n \t\tTokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n \t\t\n \t\tif (!response.indicatesSuccess()) {\n-\t\t\tHTTPResponse httpResponse = response.toHTTPResponse();\n-\t\t\tlog.error(\"Received the following error from the auth server while validating a token: {} {} {}\",  httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n+\tHTTPResponse httpResponse = response.toHTTPResponse();\n+\t\t\tlog.error(\"Received the following error from the auth server while validating a token: {} {} {}\", httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n \t\t\tthrow new AuthenticationException(\"Unable to retrieve access token from auth server.\");\n \t\t}\n \t\telse if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n@@ -179,19 +178,15 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t@Override\n \t@SneakyThrows\n \tpublic String checkCredentialsAndCreateJWT(String username, char[] password) {\n-\t\t\n-\t\tSecret passwordSecret = new Secret(new String(password));\n+\tSecret passwordSecret = new Secret(new String(password));\n \n-\t\tAuthorizationGrant  grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n+\t\tAuthorizationGrant grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n \t\t\n \t\tURI tokenEndpoint =  UriBuilder.fromUri(authProviderConf.getTokenEndpoint()).build();\n \n \t\tTokenRequest tokenRequest = new TokenRequest(tokenEndpoint, authProviderConf.getClientAuthentication(), grant, Scope.parse(\"openid\"));\n-\t\t\n-\t\t\n-\t\tTokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n-\n-\t\tif (!response.indicatesSuccess()) {\n+TokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n+if (!response.indicatesSuccess()) {\n \t\t\tHTTPResponse httpResponse = response.toHTTPResponse();\n \t\t\tlog.error(\"Received the following error from the auth server while validating username and password:\\n\\tPath: {}\\n\\tStatus code: {}\\n\\tStatus message: {}\\n\\tContent: {}\", tokenEndpoint, httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n \t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n@@ -209,22 +204,21 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t\treturn accessToken.getValue();\n \t}\n \t\n-\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n+\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse> {\n \n \t\t@Override\n \t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n \t\t\tTokenIntrospectionSuccessResponse response = validateToken(key);\n \t\t\t\n \t\t\tUser user = getOrCreateUser(response, extractDisplayName(response), extractId(response));\n-\t\t\tSet<Group> mappedGroupsToDo = getMappedGroups(response);\n+Set<Group> mappedGroupsToDo = getMappedGroups(response);\n \n \t\t\tsynchGroupMappings(user, mappedGroupsToDo);\n \t\t\t\n \t\t\treturn response;\n-\t\t}\n-\n+\t}\n \n-\t\tprivate void synchGroupMappings(User user, Set<Group> mappedGroupsToDo) {\n+private void synchGroupMappings(User user, Set<Group> mappedGroupsToDo) {\n \t\t\tfor(Group group : storage.getAllGroups()) {\n \t\t\t\tif(group.containsMember(user)) {\n \t\t\t\t\tif(mappedGroupsToDo.contains(group)) {\n@@ -243,29 +237,28 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t\t\t}\n \t\t}\n \n-\n-\t\tprivate synchronized User getOrCreateUser(TokenIntrospectionSuccessResponse successResponse, String username, UserId userId) {\n+private synchronized User getOrCreateUser(TokenIntrospectionSuccessResponse successResponse, String username, UserId userId) {\n \t\t\tUser user = storage.getUser(userId);\n \t\t\tif (user != null) {\n \t\t\t\treturn user;\n \t\t\t}\n \t\t\t// try to construct a new User if none could be found in the storage\n \t\t\tString userLabel = successResponse.getStringParameter(\"name\");\n-\t\t\tuser = new User(username, userLabel != null ?  userLabel : username);\n+\t\t\tuser = new User(username, userLabel != null ? userLabel : username);\n \t\t\tstorage.addUser(user);\n \t\t\tlog.info(\"Created new user: {}\", user);\n \t\t\treturn user;\n \t\t}\n-\t\t\n-\t\tprivate Set<Group> getMappedGroups(TokenIntrospectionSuccessResponse successResponse) {\n+\n+private Set<Group> getMappedGroups(TokenIntrospectionSuccessResponse successResponse) {\n \t\t\tList<String> groupNames = Objects.requireNonNullElse(successResponse.getStringListParameter(GROUPS_CLAIM), List.of());\n-\t\t\tStream<Pair<String,GroupId>> derivedGroupIds = groupNames.stream().map(name -> Pair.of(name,new GroupId(name)));\n+\t\t\tStream<Pair<String, GroupId>> derivedGroupIds = groupNames.stream().map(name -> Pair.of(name, new GroupId(name)));\n \t\t\tSet<Group> groups =  derivedGroupIds.map(this::getOrCreateGroup).collect(Collectors.toCollection(Sets::newHashSet));\n \t\t\treturn groups;\n \t\t}\n \t\t\n \t\tprivate synchronized Group getOrCreateGroup(Pair<String,GroupId> groupNameId) {\n-\t\t\tGroup group = storage.getGroup(groupNameId.getValue());\n+\tGroup group = storage.getGroup(groupNameId.getValue());\n \t\t\tif (group != null) {\n \t\t\t\treturn group;\n \t\t\t}\n@@ -277,4 +270,4 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t\t\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 7, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "179",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "181",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 7, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "187",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "189",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "190",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "192",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "194",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "197",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "198",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "199",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "200",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "201",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "203",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "204",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "205",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "206",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "208",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "209",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "210",
                    "column": "6",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "212",
                    "column": "7",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "213",
                    "column": "6",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "214",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "215",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "217",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "218",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "219",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "220",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "222",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "223",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "224",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "225",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "226",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "229",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "230",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "231",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "232",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "233",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "234",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "236",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "237",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "238",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "239",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "240",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "241",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "243",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "243",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "244",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "245",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "246",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "247",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "248",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "249",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "250",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "251",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "252",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "253",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/234/OIDCResourceOwnerPasswordCredentialRealm.java\nindex 6fbe3e5f9be..095766dccb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/234/OIDCResourceOwnerPasswordCredentialRealm.java\n@@ -8,10 +8,8 @@ import java.util.Set;\n import java.util.concurrent.TimeUnit;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-\n import javax.ws.rs.container.ContainerRequestContext;\n import javax.ws.rs.core.UriBuilder;\n-\n import com.bakdata.conquery.io.xodus.MetaStorage;\n import com.bakdata.conquery.models.auth.ConqueryAuthenticationInfo;\n import com.bakdata.conquery.models.auth.ConqueryAuthenticationRealm;\n@@ -61,220 +59,196 @@ import org.apache.shiro.authc.ExpiredCredentialsException;\n /**\n  * Realm that supports the Open ID Connect Resource-Owner-Password-Credential-Flow with a Keycloak IdP.\n  */\n-@Slf4j\n-@Getter\n-@Setter\n-@RequiredArgsConstructor\n-public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticationConfig> extends ConqueryAuthenticationRealm implements AuthApiUnprotectedResourceProvider, AuthAdminUnprotectedResourceProvider, UsernamePasswordChecker {\n-\n-\tpublic static final String CONFIDENTIAL_CREDENTIAL = \"secret\";\n-\tprivate static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n-\tprivate static final String GROUPS_CLAIM = \"groups\";\n-\t\n-\tprivate final MetaStorage storage;\n-\tprivate final OIDCAuthenticationConfig authProviderConf;\n-\t\n-\tprivate ClientAuthentication clientAuthentication;\n-\t\n-\t\n-\t/**\n-\t * We only hold validated Tokens for some minutes to recheck them regulary with Keycloak.\n-\t */\n-\tprivate LoadingCache<JwtToken, TokenIntrospectionSuccessResponse> tokenCache = CacheBuilder.newBuilder()\n-\t\t.expireAfterWrite(10, TimeUnit.MINUTES)\n-\t\t.build(new TokenValidator());\n-\t\n-\t@Override\n-\tprotected void onInit() {\n-\t\tsuper.onInit();\n-\t\tthis.setCredentialsMatcher(new SkippingCredentialsMatcher());\n-\t\tthis.setAuthenticationTokenClass(TOKEN_CLASS);\n-\t}\n-\t\n-\t@Override\n-\t@SneakyThrows\n-\tprotected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\t\n-\t\tTokenIntrospectionSuccessResponse successResponse = tokenCache.get((JwtToken) token);\n-\t\t\n-\t\tUserId userId = extractId(successResponse);\n-\n-\t\tUser user = storage.getUser(userId);\n-\t\t\n-\t\tif(user == null) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve user with id: \" + userId);\n-\t\t}\n-\n-\t\treturn new ConqueryAuthenticationInfo(user.getId(), token, this, true);\n-\t}\n-\n-\tprivate static UserId extractId(TokenIntrospectionSuccessResponse successResponse) {\n-\t\tString identifier = successResponse.getUsername();\n-\t\tif(StringUtils.isBlank(identifier)) {\n-\t\t\tidentifier = successResponse.getStringParameter(\"preferred_username\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(identifier)) {\n-\t\t\tidentifier = successResponse.getStringParameter(\"email\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(identifier)) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n-\t\t}\n-\t\t\n-\t\treturn new UserId(identifier);\n-\t}\n-\t\n-\tprivate static String extractDisplayName(TokenIntrospectionSuccessResponse successResponse) {\n-\t\tString username = successResponse.getUsername();\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tusername = successResponse.getStringParameter(\"name\");\n-\t\t}\n-\t\tif(StringUtils.isBlank(username)) {\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n-\t\t}\n-\t\t\n-\t\treturn username;\n-\t}\n-\n-\t/**\n-\t * Is called by the CacheLoader, so the Token is not validated on every request.\n-\t */\n-\tprivate TokenIntrospectionSuccessResponse validateToken(AuthenticationToken token) throws ParseException, IOException {\n-\t\tTokenIntrospectionRequest request = new TokenIntrospectionRequest(URI.create(authProviderConf.getIntrospectionEndpoint()) , authProviderConf.getClientAuthentication(), new TypelessAccessToken((String) token.getCredentials()));\n-\t\t\n-\t\tTokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n-\t\t\n-\t\tif (!response.indicatesSuccess()) {\n-\t\t\tHTTPResponse httpResponse = response.toHTTPResponse();\n-\t\t\tlog.error(\"Received the following error from the auth server while validating a token: {} {} {}\",  httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n-\t\t\tthrow new AuthenticationException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof TokenIntrospectionSuccessResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new AuthenticationException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tTokenIntrospectionSuccessResponse successResponse = response.toSuccessResponse();\n-\t\tif(!successResponse.isActive()) {\n-\t\t\tthrow new ExpiredCredentialsException();\n-\t\t}\n-\t\treturn successResponse;\n-\t}\n-\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\treturn TokenHandler.extractToken(request);\n-\t}\n-\t\n-\t@Override\n-\tpublic void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t\tjerseyConfig.register(LoginResource.class);\n-\t}\n-\n-\t@Override\n-\tpublic void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n-\t\tjerseyConfig.register(new TokenResource(this));\n-\t}\n-\n-\t@Override\n-\t@SneakyThrows\n-\tpublic String checkCredentialsAndCreateJWT(String username, char[] password) {\n-\t\t\n-\t\tSecret passwordSecret = new Secret(new String(password));\n \n-\t\tAuthorizationGrant  grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n-\t\t\n-\t\tURI tokenEndpoint =  UriBuilder.fromUri(authProviderConf.getTokenEndpoint()).build();\n-\n-\t\tTokenRequest tokenRequest = new TokenRequest(tokenEndpoint, authProviderConf.getClientAuthentication(), grant, Scope.parse(\"openid\"));\n-\t\t\n-\t\t\n-\t\tTokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n-\n-\t\tif (!response.indicatesSuccess()) {\n-\t\t\tHTTPResponse httpResponse = response.toHTTPResponse();\n-\t\t\tlog.error(\"Received the following error from the auth server while validating username and password:\\n\\tPath: {}\\n\\tStatus code: {}\\n\\tStatus message: {}\\n\\tContent: {}\", tokenEndpoint, httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n-\t\t\tthrow new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n-\t\t}\n-\t\telse if (!(response instanceof AccessTokenResponse)) {\n-\t\t\tlog.error(\"Unknown token response {}.\", response.getClass().getName());\n-\t\t\tthrow new IllegalStateException(\"Unknown token response. See log.\");\n-\t\t}\n-\n-\t\tAccessTokenResponse successResponse = (AccessTokenResponse) response;\n-\n-\t\t// Get the access token, the server may also return a refresh token\n-\t\tAccessToken accessToken = successResponse.getTokens().getAccessToken();\n-\t\t//RefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n-\t\treturn accessToken.getValue();\n-\t}\n-\t\n-\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n-\n-\t\t@Override\n-\t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n-\t\t\tTokenIntrospectionSuccessResponse response = validateToken(key);\n-\t\t\t\n-\t\t\tUser user = getOrCreateUser(response, extractDisplayName(response), extractId(response));\n-\t\t\tSet<Group> mappedGroupsToDo = getMappedGroups(response);\n-\n-\t\t\tsynchGroupMappings(user, mappedGroupsToDo);\n-\t\t\t\n-\t\t\treturn response;\n-\t\t}\n-\n-\n-\t\tprivate void synchGroupMappings(User user, Set<Group> mappedGroupsToDo) {\n-\t\t\tfor(Group group : storage.getAllGroups()) {\n-\t\t\t\tif(group.containsMember(user)) {\n-\t\t\t\t\tif(mappedGroupsToDo.contains(group)) {\n-\t\t\t\t\t\t// Mapping is still valid, remove from ToDo-List\n-\t\t\t\t\t\tmappedGroupsToDo.remove(group);\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\t// Mapping is not valid any more remove user from group\n-\t\t\t\t\t\tgroup.removeMember(storage, user);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\t\n-\t\t\tfor(Group group : mappedGroupsToDo) {\n-\t\t\t\tgroup.addMember(storage, user);\n-\t\t\t}\n-\t\t}\n-\n-\n-\t\tprivate synchronized User getOrCreateUser(TokenIntrospectionSuccessResponse successResponse, String username, UserId userId) {\n-\t\t\tUser user = storage.getUser(userId);\n-\t\t\tif (user != null) {\n-\t\t\t\treturn user;\n-\t\t\t}\n-\t\t\t// try to construct a new User if none could be found in the storage\n-\t\t\tString userLabel = successResponse.getStringParameter(\"name\");\n-\t\t\tuser = new User(username, userLabel != null ?  userLabel : username);\n-\t\t\tstorage.addUser(user);\n-\t\t\tlog.info(\"Created new user: {}\", user);\n-\t\t\treturn user;\n-\t\t}\n-\t\t\n-\t\tprivate Set<Group> getMappedGroups(TokenIntrospectionSuccessResponse successResponse) {\n-\t\t\tList<String> groupNames = Objects.requireNonNullElse(successResponse.getStringListParameter(GROUPS_CLAIM), List.of());\n-\t\t\tStream<Pair<String,GroupId>> derivedGroupIds = groupNames.stream().map(name -> Pair.of(name,new GroupId(name)));\n-\t\t\tSet<Group> groups =  derivedGroupIds.map(this::getOrCreateGroup).collect(Collectors.toCollection(Sets::newHashSet));\n-\t\t\treturn groups;\n-\t\t}\n-\t\t\n-\t\tprivate synchronized Group getOrCreateGroup(Pair<String,GroupId> groupNameId) {\n-\t\t\tGroup group = storage.getGroup(groupNameId.getValue());\n-\t\t\tif (group != null) {\n-\t\t\t\treturn group;\n-\t\t\t}\n-\t\t\tgroup = new Group(groupNameId.getValue().getGroup(), groupNameId.getKey());\n-\t\t\tstorage.addGroup(group);\n-\t\t\tlog.info(\"Created new group: {}\", group);\n-\t\t\treturn group;\n-\t\t}\n-\t\t\n-\t}\n+@Slf4j @Getter @Setter @RequiredArgsConstructor\n+public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticationConfig> extends ConqueryAuthenticationRealm implements AuthApiUnprotectedResourceProvider, AuthAdminUnprotectedResourceProvider, UsernamePasswordChecker {\n \n-}\n+ public static final String CONFIDENTIAL_CREDENTIAL = \"secret\";\n+ private static final Class<? extends AuthenticationToken> TOKEN_CLASS = JwtToken.class;\n+ private static final String GROUPS_CLAIM = \"groups\";\n+ private final MetaStorage storage;\n+ private final OIDCAuthenticationConfig authProviderConf;\n+ private ClientAuthentication clientAuthentication;\n+ \n+ \n+ /**\n+  * We only hold validated Tokens for some minutes to recheck them regulary with Keycloak.\n+  */\n+ private LoadingCache<JwtToken, TokenIntrospectionSuccessResponse> tokenCache = CacheBuilder.newBuilder().expireAfterWrite(10, TimeUnit.MINUTES).build(new TokenValidator());\n+\n+ @Override\n+ protected void onInit() {\n+  super.onInit();\n+  this.setCredentialsMatcher(new SkippingCredentialsMatcher());\n+  this.setAuthenticationTokenClass(TOKEN_CLASS);\n+ }\n+\n+ @Override @SneakyThrows\n+ protected ConqueryAuthenticationInfo doGetConqueryAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+  TokenIntrospectionSuccessResponse successResponse = tokenCache.get((JwtToken)token);\n+  UserId userId = extractId(successResponse);\n+  User user = storage.getUser(userId);\n+  if (user == null) {\n+   throw new IllegalStateException(\"Unable to retrieve user with id: \"+userId);\n+  }\n+  return new ConqueryAuthenticationInfo(user.getId(), token, this, true);\n+ }\n+\n+ private static UserId extractId(TokenIntrospectionSuccessResponse successResponse) {\n+  String identifier = successResponse.getUsername();\n+  if (StringUtils.isBlank(identifier)) {\n+   identifier = successResponse.getStringParameter(\"preferred_username\");\n+  }\n+  if (StringUtils.isBlank(identifier)) {\n+   identifier = successResponse.getStringParameter(\"email\");\n+  }\n+  if (StringUtils.isBlank(identifier)) {\n+   throw new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n+  }\n+  return new UserId(identifier);\n+ }\n+\n+ private static String extractDisplayName(TokenIntrospectionSuccessResponse successResponse) {\n+  String username = successResponse.getUsername();\n+  if (StringUtils.isBlank(username)) {\n+   username = successResponse.getStringParameter(\"name\");\n+  }\n+  if (StringUtils.isBlank(username)) {\n+   throw new IllegalStateException(\"Unable to retrieve a user identifier from validated token. Dismissing the token.\");\n+  }\n+  return username;\n+ }\n+\n+ /**\n+  * Is called by the CacheLoader, so the Token is not validated on every request.\n+  */\n+\n+ private TokenIntrospectionSuccessResponse validateToken(AuthenticationToken token) throws ParseException, IOException {\n+  TokenIntrospectionRequest request = new TokenIntrospectionRequest(URI.create(authProviderConf.getIntrospectionEndpoint()), authProviderConf.getClientAuthentication(), new TypelessAccessToken((String)token.getCredentials()));\n+  TokenIntrospectionResponse response = TokenIntrospectionResponse.parse(request.toHTTPRequest().send());\n+  if(!response.indicatesSuccess()) {\n+   HTTPResponse httpResponse = response.toHTTPResponse();\n+   log.error(\"Received the following error from the auth server while validating a token: {} {} {}\", httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n+   throw new AuthenticationException(\"Unable to retrieve access token from auth server.\");\n+  }\n+  else if(!(response instanceof TokenIntrospectionSuccessResponse)) {\n+        log.error(\"Unknown token response {}.\", response.getClass().getName());\n+        throw new AuthenticationException(\"Unknown token response. See log.\");\n+       }\n+\n+  TokenIntrospectionSuccessResponse successResponse = response.toSuccessResponse();\n+  if (!successResponse.isActive()) {\n+   throw new ExpiredCredentialsException();\n+  }\n+  return successResponse;\n+ }\n+\n+ @Override\n+ public AuthenticationToken extractToken(ContainerRequestContext request) {\n+  return TokenHandler.extractToken(request);\n+ }\n+\n+ @Override\n+ public void registerAdminUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+  jerseyConfig.register(new TokenResource(this));\n+  jerseyConfig.register(LoginResource.class);\n+ }\n+\n+ @Override\n+ public void registerApiUnprotectedAuthenticationResources(DropwizardResourceConfig jerseyConfig) {\n+  jerseyConfig.register(new TokenResource(this));\n+ }\n+\n+ @Override @SneakyThrows\n+ public String checkCredentialsAndCreateJWT(String username, char[] password) {\n+  Secret passwordSecret = new Secret(new String(password));\n+  AuthorizationGrant grant = new ResourceOwnerPasswordCredentialsGrant(username, passwordSecret);\n+  URI tokenEndpoint = UriBuilder.fromUri(authProviderConf.getTokenEndpoint()).build();\n+  TokenRequest tokenRequest = new TokenRequest(\n+                               tokenEndpoint,\n+                               authProviderConf.getClientAuthentication(),\n+                               grant,\n+                               Scope.parse(\"openid\")\n+                              );\n+  TokenResponse response = TokenResponse.parse(tokenRequest.toHTTPRequest().send());\n+  if(!response.indicatesSuccess()) {\n+   HTTPResponse httpResponse = response.toHTTPResponse();\n+   log.error(\"Received the following error from the auth server while validating username and password:\\n\\tPath: {}\\n\\tStatus code: {}\\n\\tStatus message: {}\\n\\tContent: {}\", tokenEndpoint, httpResponse.getStatusCode(), httpResponse.getStatusMessage(), httpResponse.getContent());\n+   throw new IllegalStateException(\"Unable to retrieve access token from auth server.\");\n+  }\n+  else if(!(response instanceof AccessTokenResponse)) {\n+        log.error(\"Unknown token response {}.\", response.getClass().getName());\n+        throw new IllegalStateException(\"Unknown token response. See log.\");\n+       }\n+\n+  AccessTokenResponse successResponse = (AccessTokenResponse)response;\n+\n+  // Get the access token, the server may also return a refresh token\n+  AccessToken accessToken = successResponse.getTokens().getAccessToken();\n+  //RefreshToken refreshToken = successResponse.getTokens().getRefreshToken();\n+  return accessToken.getValue();\n+ }\n+\n+ private class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse> {\n+\n+  @Override\n+  public TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n+   TokenIntrospectionSuccessResponse response = validateToken(key);\n+   User user = getOrCreateUser(response, extractDisplayName(response), extractId(response));\n+   Set<Group> mappedGroupsToDo = getMappedGroups(response);\n+   synchGroupMappings(user, mappedGroupsToDo);\n+   return response;\n+  }\n+\n+  private void synchGroupMappings(User user, Set<Group> mappedGroupsToDo) {\n+   for(Group group :storage.getAllGroups()) {\n+    if (group.containsMember(user)) {\n+     if(mappedGroupsToDo.contains(group)) {\n+      // Mapping is still valid, remove from ToDo-List\n+      mappedGroupsToDo.remove(group);\n+     }\n+     else {\n+      // Mapping is not valid any more remove user from group\n+      group.removeMember(storage, user);\n+     }\n+    }\n+   }\n+\n+   for(Group group :mappedGroupsToDo) {\n+    group.addMember(storage, user);\n+   }\n+  }\n+\n+  private synchronized User getOrCreateUser(TokenIntrospectionSuccessResponse successResponse, String username, UserId userId) {\n+   User user = storage.getUser(userId);\n+   if (user != null) {\n+    return user;\n+   }\n+   // try to construct a new User if none could be found in the storage\n+\n+   String userLabel = successResponse.getStringParameter(\"name\");\n+   user = new User(username, userLabel != null ? userLabel : username);\n+   storage.addUser(user);\n+   log.info(\"Created new user: {}\", user);\n+   return user;\n+  }\n+\n+  private Set<Group> getMappedGroups(TokenIntrospectionSuccessResponse successResponse) {\n+   List<String> groupNames = Objects.requireNonNullElse(successResponse.getStringListParameter(GROUPS_CLAIM), List.of());\n+   Stream<Pair<String, GroupId>> derivedGroupIds = groupNames.stream().map(name -> Pair.of(name, new GroupId(name)));\n+   Set<Group> groups = derivedGroupIds.map(this::getOrCreateGroup).collect(Collectors.toCollection(Sets::newHashSet));\n+   return groups;\n+  }\n+\n+  private synchronized Group getOrCreateGroup(Pair<String, GroupId> groupNameId) {\n+   Group group = storage.getGroup(groupNameId.getValue());\n+   if (group != null) {\n+    return group;\n+   }\n+   group = new Group(groupNameId.getValue().getGroup(), groupNameId.getKey());\n+   storage.addGroup(group);\n+   log.info(\"Created new group: {}\", group);\n+   return group;\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 405
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/234/OIDCResourceOwnerPasswordCredentialRealm.java\nindex 6fbe3e5f9be..9153671646c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/234/OIDCResourceOwnerPasswordCredentialRealm.java\n@@ -209,7 +209,7 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t\treturn accessToken.getValue();\n \t}\n \t\n-\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n+\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse> {\n \n \t\t@Override\n \t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/234/OIDCResourceOwnerPasswordCredentialRealm.java\nindex 6fbe3e5f9be..051155578a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/234/OIDCResourceOwnerPasswordCredentialRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/234/OIDCResourceOwnerPasswordCredentialRealm.java\n@@ -209,9 +209,7 @@ public class OIDCResourceOwnerPasswordCredentialRealm<C extends OIDCAuthenticati\n \t\treturn accessToken.getValue();\n \t}\n \t\n-\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse>{\n-\n-\t\t@Override\n+\tprivate class TokenValidator extends CacheLoader<JwtToken, TokenIntrospectionSuccessResponse> { @Override\n \t\tpublic TokenIntrospectionSuccessResponse load(JwtToken key) throws Exception {\n \t\t\tTokenIntrospectionSuccessResponse response = validateToken(key);\n \t\t\t\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
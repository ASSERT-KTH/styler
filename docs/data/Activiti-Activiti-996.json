{
    "project_name": "Activiti-Activiti",
    "error_id": "996",
    "information": {
        "errors": [
            {
                "line": "72",
                "column": "118",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    @Bean\n    InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService,\n                                                                     ProcessExtensionService processExtensionService){\n        return () -> processExtensionService.setRepositoryService(repositoryService);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/996/ProcessExtensionsAutoConfiguration.java\nindex 117c6947b91..0879accd1e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/996/ProcessExtensionsAutoConfiguration.java\n@@ -69,8 +69,8 @@ public class ProcessExtensionsAutoConfiguration {\n \n     @Bean\n     InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService,\n-                                                                     ProcessExtensionService processExtensionService){\n-        return () -> processExtensionService.setRepositoryService(repositoryService);\n+                                                                     ProcessExtensionService processExtensionService) {\n+                                                                         return () -> processExtensionService.setRepositoryService(repositoryService);\n     }\n \n     @Bean\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/996/ProcessExtensionsAutoConfiguration.java\nindex 117c6947b91..de274d12aaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/996/ProcessExtensionsAutoConfiguration.java\n@@ -44,8 +44,8 @@ public class ProcessExtensionsAutoConfiguration {\n                                                                VariableParsingService variableParsingService,\n                                                                VariableValidationService variableValidationService) {\n         return new ProcessVariablesInitiator(processExtensionService,\n-                                             variableParsingService,\n-                                             variableValidationService);\n+                variableParsingService,\n+                variableValidationService);\n     }\n \n     @Bean\n@@ -56,25 +56,25 @@ public class ProcessExtensionsAutoConfiguration {\n \n     @Bean\n     public ProcessExtensionService processExtensionService(@Value(\"${activiti.process.extensions.dir:classpath:/processes/}\") String processExtensionsRoot,\n-                                                            @Value(\"${activiti.process.extensions.suffix:**-extensions.json}\") String processExtensionsSuffix,\n-                                                            ObjectMapper objectMapper,\n-                                                            ResourcePatternResolver resourceLoader,\n-                                                            Map<String, VariableType> variableTypeMap) {\n+                                                           @Value(\"${activiti.process.extensions.suffix:**-extensions.json}\") String processExtensionsSuffix,\n+                                                           ObjectMapper objectMapper,\n+                                                           ResourcePatternResolver resourceLoader,\n+                                                           Map<String, VariableType> variableTypeMap) {\n         return new ProcessExtensionService(processExtensionsRoot,\n-                                           processExtensionsSuffix,\n-                                           objectMapper,\n-                                           resourceLoader,\n-                                           variableTypeMap);\n+                processExtensionsSuffix,\n+                objectMapper,\n+                resourceLoader,\n+                variableTypeMap);\n     }\n \n     @Bean\n     InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService,\n-                                                                     ProcessExtensionService processExtensionService){\n+                                                                     ProcessExtensionService processExtensionService) {\n         return () -> processExtensionService.setRepositoryService(repositoryService);\n     }\n \n     @Bean\n-    public Map<String, VariableType> variableTypeMap(ObjectMapper objectMapper, \n+    public Map<String, VariableType> variableTypeMap(ObjectMapper objectMapper,\n                                                      DateFormatterProvider dateFormatterProvider) {\n         Map<String, VariableType> variableTypeMap = new HashMap<>();\n         variableTypeMap.put(\"boolean\", new JavaObjectVariableType(Boolean.class));\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 364).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/996/ProcessExtensionsAutoConfiguration.java\nindex 117c6947b91..f13559dbbb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/996/ProcessExtensionsAutoConfiguration.java\n@@ -17,7 +17,6 @@ import java.io.IOException;\n import java.util.Date;\n import java.util.HashMap;\n import java.util.Map;\n-\n import com.fasterxml.jackson.databind.ObjectMapper;\n import org.activiti.common.util.DateFormatterProvider;\n import org.activiti.engine.RepositoryService;\n@@ -39,60 +38,55 @@ import org.springframework.core.io.support.ResourcePatternResolver;\n @Configuration\n public class ProcessExtensionsAutoConfiguration {\n \n-    @Bean\n-    public ProcessVariablesInitiator processVariablesInitiator(ProcessExtensionService processExtensionService,\n-                                                               VariableParsingService variableParsingService,\n-                                                               VariableValidationService variableValidationService) {\n-        return new ProcessVariablesInitiator(processExtensionService,\n-                                             variableParsingService,\n-                                             variableValidationService);\n-    }\n+  @Bean\n+  public ProcessVariablesInitiator processVariablesInitiator(ProcessExtensionService processExtensionService,\n+                                                             VariableParsingService variableParsingService, VariableValidationService variableValidationService) {\n+                                                               return new ProcessVariablesInitiator(processExtensionService,\n+                                                                                                    variableParsingService,\n+                                                                                                    variableValidationService);\n+  }\n \n-    @Bean\n-    public Map<String, ProcessExtensionModel> processExtensionsMap(ProcessExtensionService processExtensionService) throws IOException {\n-        return processExtensionService.readProcessExtensions();\n+  @Bean\n+  public Map<String, ProcessExtensionModel> processExtensionsMap(ProcessExtensionService processExtensionService) throws IOException {\n+    return processExtensionService.readProcessExtensions();\n+  }\n \n-    }\n+  @Bean\n+  public ProcessExtensionService processExtensionService(@Value(\"${activiti.process.extensions.dir:classpath:/processes/}\") String processExtensionsRoot, @Value(\"${activiti.process.extensions.suffix:**-extensions.json}\") String processExtensionsSuffix, ObjectMapper objectMapper, ResourcePatternResolver resourceLoader, Map<String, VariableType> variableTypeMap) {\n+    return new ProcessExtensionService(processExtensionsRoot, processExtensionsSuffix, objectMapper, resourceLoader, variableTypeMap);\n+  }\n \n-    @Bean\n-    public ProcessExtensionService processExtensionService(@Value(\"${activiti.process.extensions.dir:classpath:/processes/}\") String processExtensionsRoot,\n-                                                            @Value(\"${activiti.process.extensions.suffix:**-extensions.json}\") String processExtensionsSuffix,\n-                                                            ObjectMapper objectMapper,\n-                                                            ResourcePatternResolver resourceLoader,\n-                                                            Map<String, VariableType> variableTypeMap) {\n-        return new ProcessExtensionService(processExtensionsRoot,\n-                                           processExtensionsSuffix,\n-                                           objectMapper,\n-                                           resourceLoader,\n-                                           variableTypeMap);\n-    }\n+  @Bean\n+  InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService, ProcessExtensionService processExtensionService) {\n+    return () -> processExtensionService.setRepositoryService(repositoryService);\n+  }\n \n-    @Bean\n-    InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService,\n-                                                                     ProcessExtensionService processExtensionService){\n-        return () -> processExtensionService.setRepositoryService(repositoryService);\n-    }\n+  @Bean\n+  public Map<String, VariableType> variableTypeMap(ObjectMapper objectMapper, DateFormatterProvider dateFormatterProvider) {\n+    Map<String, VariableType> variableTypeMap = new HashMap<>();\n+    variableTypeMap.put(\"boolean\",\n+                        new JavaObjectVariableType(Boolean.class));\n+    variableTypeMap.put(\"string\",\n+                        new JavaObjectVariableType(String.class));\n+    variableTypeMap.put(\"integer\",\n+                        new JavaObjectVariableType(Integer.class));\n+    variableTypeMap.put(\"json\",\n+                        new JsonObjectVariableType(objectMapper));\n+    variableTypeMap.put(\"file\",\n+                        new JsonObjectVariableType(objectMapper));\n+    variableTypeMap.put(\"date\",\n+                        new DateVariableType(Date.class, dateFormatterProvider));\n+    return variableTypeMap;\n+  }\n \n-    @Bean\n-    public Map<String, VariableType> variableTypeMap(ObjectMapper objectMapper, \n-                                                     DateFormatterProvider dateFormatterProvider) {\n-        Map<String, VariableType> variableTypeMap = new HashMap<>();\n-        variableTypeMap.put(\"boolean\", new JavaObjectVariableType(Boolean.class));\n-        variableTypeMap.put(\"string\", new JavaObjectVariableType(String.class));\n-        variableTypeMap.put(\"integer\", new JavaObjectVariableType(Integer.class));\n-        variableTypeMap.put(\"json\", new JsonObjectVariableType(objectMapper));\n-        variableTypeMap.put(\"file\", new JsonObjectVariableType(objectMapper));\n-        variableTypeMap.put(\"date\", new DateVariableType(Date.class, dateFormatterProvider));\n-        return variableTypeMap;\n-    }\n+  @Bean\n+  public VariableValidationService variableValidationService(Map<String, VariableType> variableTypeMap) {\n+    return new VariableValidationService(variableTypeMap);\n+  }\n \n-    @Bean\n-    public VariableValidationService variableValidationService(Map<String, VariableType> variableTypeMap) {\n-        return new VariableValidationService(variableTypeMap);\n-    }\n+  @Bean\n+  public VariableParsingService variableParsingService(Map<String, VariableType> variableTypeMap) {\n+    return new VariableParsingService(variableTypeMap);\n+  }\n \n-    @Bean\n-    public VariableParsingService variableParsingService(Map<String, VariableType> variableTypeMap) {\n-        return new VariableParsingService(variableTypeMap);\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 67
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/996/ProcessExtensionsAutoConfiguration.java\nindex 117c6947b91..0879accd1e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/996/ProcessExtensionsAutoConfiguration.java\n@@ -69,8 +69,8 @@ public class ProcessExtensionsAutoConfiguration {\n \n     @Bean\n     InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService,\n-                                                                     ProcessExtensionService processExtensionService){\n-        return () -> processExtensionService.setRepositoryService(repositoryService);\n+                                                                     ProcessExtensionService processExtensionService) {\n+                                                                         return () -> processExtensionService.setRepositoryService(repositoryService);\n     }\n \n     @Bean\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/996/ProcessExtensionsAutoConfiguration.java\nindex 117c6947b91..6516135aa8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/996/ProcessExtensionsAutoConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/996/ProcessExtensionsAutoConfiguration.java\n@@ -69,8 +69,8 @@ public class ProcessExtensionsAutoConfiguration {\n \n     @Bean\n     InitializingBean initRepositoryServiceForProcessExtensionService(RepositoryService repositoryService,\n-                                                                     ProcessExtensionService processExtensionService){\n-        return () -> processExtensionService.setRepositoryService(repositoryService);\n+                                                                     ProcessExtensionService processExtensionService) {\n+                                                                       return () -> processExtensionService.setRepositoryService(repositoryService);\n     }\n \n     @Bean\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
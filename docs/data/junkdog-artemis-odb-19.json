{
    "project_name": "junkdog-artemis-odb",
    "error_id": "19",
    "information": {
        "errors": [
            {
                "line": "66",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 166).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                        .setStatic(true)\n                        .parameter(int.class, \"entityId\")\n                        .statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n                        .statement(\"return new E().init(_processingMapper,entityId)\")\n                        .build();\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/19/EBaseStrategy.java\nindex bf88bab2e6b..6846e5b21b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/19/EBaseStrategy.java\n@@ -44,15 +44,15 @@ public class EBaseStrategy implements BuilderModelStrategy {\n     }\n \n     private FieldDescriptor createEntityIdField() {\n-        return new FieldBuilder(int.class,\"entityId\").build();\n+        return new FieldBuilder(int.class, \"entityId\").build();\n     }\n \n     private FieldDescriptor createMapperField() {\n-        return new FieldBuilder(SuperMapper.class,\"mappers\").build();\n+        return new FieldBuilder(SuperMapper.class, \"mappers\").build();\n     }\n \n     private FieldDescriptor createStaticMapperField() {\n-        return new FieldBuilder(SuperMapper.class,\"_processingMapper\").setStatic(true).build();\n+        return new FieldBuilder(SuperMapper.class, \"_processingMapper\").setStatic(true).build();\n     }\n \n     /**\n@@ -63,7 +63,8 @@ public class EBaseStrategy implements BuilderModelStrategy {\n                 new MethodBuilder(E.class, \"E\")\n                         .setStatic(true)\n                         .parameter(int.class, \"entityId\")\n-                        .statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n+                        .statement(\n+                                \"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n                         .statement(\"return new E().init(_processingMapper,entityId)\")\n                         .build();\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/19/EBaseStrategy.java\nindex bf88bab2e6b..a354c3151d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/19/EBaseStrategy.java\n@@ -16,8 +16,7 @@ import com.artemis.utils.Bag;\n  * @author Daan van Yperen\n  */\n public class EBaseStrategy implements BuilderModelStrategy {\n-\n-    @Override\n+\t@Override\n     public void apply(ArtemisModel artemisModel, TypeModel model) {\n         model.name = \"E\";\n         model.packageName = \"com.artemis\";\n@@ -29,43 +28,40 @@ public class EBaseStrategy implements BuilderModelStrategy {\n     }\n \n     private FieldDescriptor createInstancePoolField() {\n-        return new FieldDescriptor(new ParameterizedTypeImpl(Bag.class, E.class), \"instances\");\n+\treturn new FieldDescriptor(new ParameterizedTypeImpl(Bag.class, E.class), \"instances\");\n     }\n \n     private MethodDescriptor createInitMethod() {\n-        return\n-                new MethodBuilder(E.class, \"init\")\n-                        .parameter(SuperMapper.class, \"mappers\")\n+\treturn new MethodBuilder(E.class, \"init\")\n+.parameter(SuperMapper.class, \"mappers\")\n                         .parameter(int.class, \"entityId\")\n                         .statement(\"this.mappers = mappers\")\n                         .statement(\"this.entityId = entityId\")\n                         .returnFluid()\n                         .build();\n-    }\n+\t}\n \n     private FieldDescriptor createEntityIdField() {\n-        return new FieldBuilder(int.class,\"entityId\").build();\n+\treturn new FieldBuilder(int.class, \"entityId\").build();\n     }\n \n     private FieldDescriptor createMapperField() {\n-        return new FieldBuilder(SuperMapper.class,\"mappers\").build();\n+\treturn new FieldBuilder(SuperMapper.class, \"mappers\").build();\n     }\n \n     private FieldDescriptor createStaticMapperField() {\n-        return new FieldBuilder(SuperMapper.class,\"_processingMapper\").setStatic(true).build();\n+\treturn new FieldBuilder(SuperMapper.class, \"_processingMapper\").setStatic(true).build();\n     }\n \n     /**\n      * E::E(int)\n      */\n     private MethodDescriptor createStaticInstancerMethod() {\n-        return\n-                new MethodBuilder(E.class, \"E\")\n-                        .setStatic(true)\n+\treturn new MethodBuilder(E.class, \"E\")\n+.setStatic(true)\n                         .parameter(int.class, \"entityId\")\n                         .statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n                         .statement(\"return new E().init(_processingMapper,entityId)\")\n                         .build();\n-    }\n-\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/19/EBaseStrategy.java\nindex bf88bab2e6b..57c8d9e37f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/19/EBaseStrategy.java\n@@ -4,6 +4,7 @@ import com.artemis.E;\n import com.artemis.SuperMapper;\n import com.artemis.generator.common.BuilderModelStrategy;\n import com.artemis.generator.model.artemis.ArtemisModel;\n+\n import com.artemis.generator.model.type.*;\n import com.artemis.generator.util.FieldBuilder;\n import com.artemis.generator.util.MethodBuilder;\n@@ -15,57 +16,54 @@ import com.artemis.utils.Bag;\n  *\n  * @author Daan van Yperen\n  */\n-public class EBaseStrategy implements BuilderModelStrategy {\n \n-    @Override\n-    public void apply(ArtemisModel artemisModel, TypeModel model) {\n-        model.name = \"E\";\n-        model.packageName = \"com.artemis\";\n-        model.add(createMapperField());\n-        model.add(createStaticMapperField());\n-        model.add(createEntityIdField());\n-        model.add(createInitMethod());\n-        model.add(createStaticInstancerMethod());\n-    }\n+public class EBaseStrategy implements BuilderModelStrategy {\n+ @Override\n+ public void apply(ArtemisModel artemisModel, TypeModel model) {\n+  model.name = \"E\";\n+  model.packageName = \"com.artemis\";\n+  model.add(createMapperField());\n+  model.add(createStaticMapperField());\n+  model.add(createEntityIdField());\n+  model.add(createInitMethod());\n+  model.add(createStaticInstancerMethod());\n+ }\n \n-    private FieldDescriptor createInstancePoolField() {\n-        return new FieldDescriptor(new ParameterizedTypeImpl(Bag.class, E.class), \"instances\");\n-    }\n+ private FieldDescriptor createInstancePoolField() {\n+  return new FieldDescriptor(new ParameterizedTypeImpl(Bag.class, E.class), \"instances\");\n+ }\n \n-    private MethodDescriptor createInitMethod() {\n-        return\n-                new MethodBuilder(E.class, \"init\")\n-                        .parameter(SuperMapper.class, \"mappers\")\n-                        .parameter(int.class, \"entityId\")\n-                        .statement(\"this.mappers = mappers\")\n-                        .statement(\"this.entityId = entityId\")\n-                        .returnFluid()\n-                        .build();\n-    }\n+ private MethodDescriptor createInitMethod() {\n+  return new MethodBuilder(E.class, \"init\").parameter(SuperMapper.class, \"mappers\")\n+                                           .parameter(int.class, \"entityId\")\n+                                           .statement(\"this.mappers = mappers\")\n+                                           .statement(\"this.entityId = entityId\")\n+                                           .returnFluid()\n+                                           .build();\n+ }\n \n-    private FieldDescriptor createEntityIdField() {\n-        return new FieldBuilder(int.class,\"entityId\").build();\n-    }\n+ private FieldDescriptor createEntityIdField() {\n+  return new FieldBuilder(int.class, \"entityId\").build();\n+ }\n \n-    private FieldDescriptor createMapperField() {\n-        return new FieldBuilder(SuperMapper.class,\"mappers\").build();\n-    }\n+ private FieldDescriptor createMapperField() {\n+  return new FieldBuilder(SuperMapper.class, \"mappers\").build();\n+ }\n \n-    private FieldDescriptor createStaticMapperField() {\n-        return new FieldBuilder(SuperMapper.class,\"_processingMapper\").setStatic(true).build();\n-    }\n+ private FieldDescriptor createStaticMapperField() {\n+  return new FieldBuilder(SuperMapper.class, \"_processingMapper\").setStatic(true)\n+                                                                 .build();\n+ }\n \n     /**\n      * E::E(int)\n      */\n-    private MethodDescriptor createStaticInstancerMethod() {\n-        return\n-                new MethodBuilder(E.class, \"E\")\n-                        .setStatic(true)\n-                        .parameter(int.class, \"entityId\")\n-                        .statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n-                        .statement(\"return new E().init(_processingMapper,entityId)\")\n-                        .build();\n-    }\n \n-}\n+ private MethodDescriptor createStaticInstancerMethod() {\n+  return new MethodBuilder(E.class, \"E\").setStatic(true)\n+                                        .parameter(int.class, \"entityId\")\n+                                        .statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n+                                        .statement(\"return new E().init(_processingMapper,entityId)\")\n+                                        .build();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 305).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/19/EBaseStrategy.java\nindex bf88bab2e6b..f9731032cb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/19/EBaseStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/19/EBaseStrategy.java\n@@ -63,8 +63,7 @@ public class EBaseStrategy implements BuilderModelStrategy {\n                 new MethodBuilder(E.class, \"E\")\n                         .setStatic(true)\n                         .parameter(int.class, \"entityId\")\n-                        .statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\")\n-                        .statement(\"return new E().init(_processingMapper,entityId)\")\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t. statement(\"if(_processingMapper==null) throw new RuntimeException(\\\"SuperMapper system must be registered before any systems using E().\\\");\"). statement(\"return new E().init(_processingMapper,entityId)\")\n                         .build();\n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
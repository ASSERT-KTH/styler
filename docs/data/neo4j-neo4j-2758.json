{
    "project_name": "neo4j-neo4j",
    "error_id": "2758",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2758/ByteBufferFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2758/ByteBufferFactory.java\nindex 57a51f3a4fe..6773c004769 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2758/ByteBufferFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2758/ByteBufferFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.memory;\n \n import java.nio.ByteBuffer;\n@@ -37,17 +38,17 @@ import org.neo4j.util.Preconditions;\n  *     These buffers are allocated from the global allocator on first use and then only cleared and handed out on further requests.\n  *     After use it must be {@link #releaseThreadLocalBuffer() released} so that other code paths in that thread's execution can acquire it.</li>\n  * </ul>\n- *\n+ * <p>\n  * These scopes together allows for efficient allocation, de-allocation and sharing of buffers.\n  */\n public class ByteBufferFactory implements AutoCloseable\n {\n     private final Allocator globalAllocator;\n     private final int threadLocalBufferSize;\n-    private final ThreadLocal<ThreadLocalByteBuffer> threadLocalBuffers = ThreadLocal.withInitial( ThreadLocalByteBuffer::new );\n+    private final ThreadLocal<ThreadLocalByteBuffer> threadLocalBuffers = ThreadLocal.withInitial(ThreadLocalByteBuffer::new);\n     private final Supplier<Allocator> allocatorFactory;\n \n-    public ByteBufferFactory( Supplier<Allocator> allocatorFactory, int threadLocalBufferSize )\n+    public ByteBufferFactory(Supplier<Allocator> allocatorFactory, int threadLocalBufferSize)\n     {\n         this.allocatorFactory = allocatorFactory;\n         this.globalAllocator = allocatorFactory.get();\n@@ -74,9 +75,9 @@ public class ByteBufferFactory implements AutoCloseable\n      * @return thread-local buffer. The returned buffer is meant to be used in a limited closure and then {@link #releaseThreadLocalBuffer() released}\n      * so that other pieces of code can use it again for this thread.\n      */\n-    public ByteBuffer acquireThreadLocalBuffer( MemoryTracker memoryTracker )\n+    public ByteBuffer acquireThreadLocalBuffer(MemoryTracker memoryTracker)\n     {\n-        return threadLocalBuffers.get().acquire( memoryTracker );\n+        return threadLocalBuffers.get().acquire(memoryTracker);\n     }\n \n     /**\n@@ -85,7 +86,7 @@ public class ByteBufferFactory implements AutoCloseable\n     public void releaseThreadLocalBuffer()\n     {\n         ThreadLocalByteBuffer managedByteBuffer = threadLocalBuffers.get();\n-        Preconditions.checkState( managedByteBuffer != null, \"Buffer doesn't exist\" );\n+        Preconditions.checkState(managedByteBuffer != null, \"Buffer doesn't exist\");\n         managedByteBuffer.release();\n     }\n \n@@ -100,9 +101,9 @@ public class ByteBufferFactory implements AutoCloseable\n         globalAllocator.close();\n     }\n \n-    public static ByteBufferFactory heapBufferFactory( int sharedBuffersSize )\n+    public static ByteBufferFactory heapBufferFactory(int sharedBuffersSize)\n     {\n-        return new ByteBufferFactory( () -> HEAP_ALLOCATOR, sharedBuffersSize );\n+        return new ByteBufferFactory(() -> HEAP_ALLOCATOR, sharedBuffersSize);\n     }\n \n     /**\n@@ -110,7 +111,7 @@ public class ByteBufferFactory implements AutoCloseable\n      */\n     public interface Allocator extends AutoCloseable\n     {\n-        ScopedBuffer allocate( int bufferSize, MemoryTracker memoryTracker );\n+        ScopedBuffer allocate(int bufferSize, MemoryTracker memoryTracker);\n \n         @Override\n         void close();\n@@ -119,9 +120,9 @@ public class ByteBufferFactory implements AutoCloseable\n     private static final Allocator HEAP_ALLOCATOR = new Allocator()\n     {\n         @Override\n-        public ScopedBuffer allocate( int bufferSize, MemoryTracker memoryTracker )\n+        public ScopedBuffer allocate(int bufferSize, MemoryTracker memoryTracker)\n         {\n-            return new HeapScopedBuffer( bufferSize, memoryTracker );\n+            return new HeapScopedBuffer(bufferSize, memoryTracker);\n         }\n \n         @Override\n@@ -136,15 +137,14 @@ public class ByteBufferFactory implements AutoCloseable\n         private boolean acquired;\n         private ScopedBuffer scopedBuffer;\n \n-        ByteBuffer acquire( MemoryTracker memoryTracker )\n+        ByteBuffer acquire(MemoryTracker memoryTracker)\n         {\n-            Preconditions.checkState( !acquired, \"Already acquired\" );\n+            Preconditions.checkState(!acquired, \"Already acquired\");\n             acquired = true;\n-            if ( scopedBuffer == null )\n+            if (scopedBuffer == null)\n             {\n-                scopedBuffer = globalAllocator.allocate( threadLocalBufferSize, memoryTracker );\n-            }\n-            else\n+                scopedBuffer = globalAllocator.allocate(threadLocalBufferSize, memoryTracker);\n+            } else\n             {\n                 scopedBuffer.getBuffer().clear();\n             }\n@@ -153,7 +153,7 @@ public class ByteBufferFactory implements AutoCloseable\n \n         void release()\n         {\n-            Preconditions.checkState( acquired, \"Not acquired\" );\n+            Preconditions.checkState(acquired, \"Not acquired\");\n             acquired = false;\n         }\n     }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2758/ByteBufferFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2758/ByteBufferFactory.java\nindex 57a51f3a4fe..550ee18f618 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2758/ByteBufferFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2758/ByteBufferFactory.java\n@@ -157,4 +157,4 @@ public class ByteBufferFactory implements AutoCloseable\n             acquired = false;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
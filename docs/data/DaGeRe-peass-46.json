{
    "project_name": "DaGeRe-peass",
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "86",
                "column": "77",
                "severity": "error",
                "message": "';' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n\tprivate VersionDiff getDiffFromProcess(final Process p) {\n\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n\t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n\n\t\tfinal InputSource is = new InputSource(new StringReader(output));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/46/SVNDiffLoader.java\nindex d0ca80d0b1b..df08f33e04f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/46/SVNDiffLoader.java\n@@ -83,7 +83,7 @@ public class SVNDiffLoader {\n \t}\n \n \tprivate VersionDiff getDiffFromProcess(final Process p) {\n-\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n+\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>()); //TODO F\u00fcr multmodulprojekte anpassen\n \t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n \n \t\tfinal InputSource is = new InputSource(new StringReader(output));\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "87",
                    "column": "65",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/46/SVNDiffLoader.java\nindex d0ca80d0b1b..08c7c942c5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/46/SVNDiffLoader.java\n@@ -1,19 +1,20 @@\n /**\n- *     This file is part of PerAn.\n- *\n- *     PerAn is free software: you can redistribute it and/or modify\n- *     it under the terms of the GNU General Public License as published by\n- *     the Free Software Foundation, either version 3 of the License, or\n- *     (at your option) any later version.\n- *\n- *     PerAn is distributed in the hope that it will be useful,\n- *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n- *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- *     GNU General Public License for more details.\n- *\n- *     You should have received a copy of the GNU General Public License\n- *     along with PerAn.  If not, see <http://www.gnu.org/licenses/>.\n+ * This file is part of PerAn.\n+ * <p>\n+ * PerAn is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ * <p>\n+ * PerAn is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU General Public License for more details.\n+ * <p>\n+ * You should have received a copy of the GNU General Public License\n+ * along with PerAn.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package de.peran.vcs;\n \n import java.io.File;\n@@ -43,76 +44,76 @@ import de.peran.utils.StreamGobbler;\n  */\n public class SVNDiffLoader {\n \n-\tprivate static final Logger LOG = LogManager.getLogger(SVNDiffLoader.class);\n-\n-\tpublic static final String URL = \"url\";\n-\tpublic static final String REVISIONS = \"revisions\";\n-\n-\t/**\n-\t * Gets diff between current revision and previous revision of repo.\n-\t * \n-\t * @param projectFolder Local working copy of the repo.\n-\t * @return\n-\t */\n-\tpublic VersionDiff getChangedClasses(final File projectFolder) {\n-\t\ttry {\n-\t\t\tfinal Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml -r PREV:BASE\", null, projectFolder);\n-\t\t\treturn getDiffFromProcess(p);\n-\t\t} catch (final IOException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\t/**\n-\t * Determines which classes are changed in an svn repo between two revisions. Furthermore determines weather the pom.xml has changed.\n-\t * \n-\t * @param url\n-\t * @param revisionString\n-\t * @return\n-\t */\n-\tpublic VersionDiff getChangedClasses(final String url, final String revisionStart, final String revisionDest) {\n-\t\ttry {\n-\t\t\tfinal Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml \" + url + \"@\" + revisionStart + \" \" + url + \"@\" + revisionDest);\n-\t\t\treturn getDiffFromProcess(p);\n-\n-\t\t} catch (final IOException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tprivate VersionDiff getDiffFromProcess(final Process p) {\n-\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n-\t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n-\n-\t\tfinal InputSource is = new InputSource(new StringReader(output));\n-\n-\t\tfinal DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n-\t\ttry {\n-\t\t\tfinal DocumentBuilder db = dbf.newDocumentBuilder();\n-\t\t\tfinal Document doc = db.parse(is);\n-\t\t\tfinal NodeList nodeList = doc.getChildNodes();\n-\n-\t\t\tfinal Node diffItem = nodeList.item(0);\n-\t\t\tfinal Node pathsItem = diffItem.getChildNodes().item(1);\n-\n-\t\t\tfor (int pathIndex = 0; pathIndex < pathsItem.getChildNodes().getLength(); pathIndex++) {\n-\t\t\t\tfinal Node pathNode = pathsItem.getChildNodes().item(pathIndex);\n-\t\t\t\tif (pathNode.getChildNodes().getLength() > 0) {\n-\t\t\t\t\tfinal String currentFileName = pathNode.getChildNodes().item(0).getNodeValue();\n-\t\t\t\t\tdiff.addChange(currentFileName);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t} catch (final ParserConfigurationException e) {\n-\t\t\te.printStackTrace();\n-\t\t} catch (final SAXException e) {\n-\t\t\te.printStackTrace();\n-\t\t} catch (final IOException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\n-\t\treturn diff;\n-\t}\n+  private static final Logger LOG = LogManager.getLogger(SVNDiffLoader.class);\n+\n+  public static final String URL = \"url\";\n+  public static final String REVISIONS = \"revisions\";\n+\n+  /**\n+   * Gets diff between current revision and previous revision of repo.\n+   *\n+   * @param projectFolder Local working copy of the repo.\n+   * @return\n+   */\n+  public VersionDiff getChangedClasses(final File projectFolder) {\n+    try {\n+      final Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml -r PREV:BASE\", null, projectFolder);\n+      return getDiffFromProcess(p);\n+    } catch (final IOException e) {\n+      e.printStackTrace();\n+    }\n+    return null;\n+  }\n+\n+  /**\n+   * Determines which classes are changed in an svn repo between two revisions. Furthermore determines weather the pom.xml has changed.\n+   *\n+   * @param url\n+   * @param revisionString\n+   * @return\n+   */\n+  public VersionDiff getChangedClasses(final String url, final String revisionStart, final String revisionDest) {\n+    try {\n+      final Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml \" + url + \"@\" + revisionStart + \" \" + url + \"@\" + revisionDest);\n+      return getDiffFromProcess(p);\n+\n+    } catch (final IOException e) {\n+      e.printStackTrace();\n+    }\n+    return null;\n+  }\n+\n+  private VersionDiff getDiffFromProcess(final Process p) {\n+    final VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n+    final String output = StreamGobbler.getFullProcess(p, false);\n+\n+    final InputSource is = new InputSource(new StringReader(output));\n+\n+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+    try {\n+      final DocumentBuilder db = dbf.newDocumentBuilder();\n+      final Document doc = db.parse(is);\n+      final NodeList nodeList = doc.getChildNodes();\n+\n+      final Node diffItem = nodeList.item(0);\n+      final Node pathsItem = diffItem.getChildNodes().item(1);\n+\n+      for (int pathIndex = 0; pathIndex < pathsItem.getChildNodes().getLength(); pathIndex++) {\n+        final Node pathNode = pathsItem.getChildNodes().item(pathIndex);\n+        if (pathNode.getChildNodes().getLength() > 0) {\n+          final String currentFileName = pathNode.getChildNodes().item(0).getNodeValue();\n+          diff.addChange(currentFileName);\n+        }\n+      }\n+    } catch (final ParserConfigurationException e) {\n+      e.printStackTrace();\n+    } catch (final SAXException e) {\n+      e.printStackTrace();\n+    } catch (final IOException e) {\n+      e.printStackTrace();\n+    }\n+\n+    return diff;\n+  }\n \n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/46/SVNDiffLoader.java\nindex d0ca80d0b1b..f5db77ad205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/naturalize/46/SVNDiffLoader.java\n@@ -83,7 +83,8 @@ public class SVNDiffLoader {\n \t}\n \n \tprivate VersionDiff getDiffFromProcess(final Process p) {\n-\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n+\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());\n+//TODO F\u00fcr multmodulprojekte anpassen\n \t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n \n \t\tfinal InputSource is = new InputSource(new StringReader(output));\n@@ -115,4 +116,4 @@ public class SVNDiffLoader {\n \t\treturn diff;\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "86",
                    "column": "63",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/46/SVNDiffLoader.java\nindex d0ca80d0b1b..f33a7bfa84a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/46/SVNDiffLoader.java\n@@ -20,11 +20,9 @@ import java.io.File;\n import java.io.IOException;\n import java.io.StringReader;\n import java.util.LinkedList;\n-\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.w3c.dom.Document;\n@@ -32,7 +30,6 @@ import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n import org.xml.sax.InputSource;\n import org.xml.sax.SAXException;\n-\n import de.peran.dependency.analysis.data.VersionDiff;\n import de.peran.utils.StreamGobbler;\n \n@@ -41,78 +38,75 @@ import de.peran.utils.StreamGobbler;\n  * @author reichelt\n  *\n  */\n-public class SVNDiffLoader {\n-\n-\tprivate static final Logger LOG = LogManager.getLogger(SVNDiffLoader.class);\n-\n-\tpublic static final String URL = \"url\";\n-\tpublic static final String REVISIONS = \"revisions\";\n-\n-\t/**\n-\t * Gets diff between current revision and previous revision of repo.\n-\t * \n-\t * @param projectFolder Local working copy of the repo.\n-\t * @return\n-\t */\n-\tpublic VersionDiff getChangedClasses(final File projectFolder) {\n-\t\ttry {\n-\t\t\tfinal Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml -r PREV:BASE\", null, projectFolder);\n-\t\t\treturn getDiffFromProcess(p);\n-\t\t} catch (final IOException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\t/**\n-\t * Determines which classes are changed in an svn repo between two revisions. Furthermore determines weather the pom.xml has changed.\n-\t * \n-\t * @param url\n-\t * @param revisionString\n-\t * @return\n-\t */\n-\tpublic VersionDiff getChangedClasses(final String url, final String revisionStart, final String revisionDest) {\n-\t\ttry {\n-\t\t\tfinal Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml \" + url + \"@\" + revisionStart + \" \" + url + \"@\" + revisionDest);\n-\t\t\treturn getDiffFromProcess(p);\n \n-\t\t} catch (final IOException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\t\treturn null;\n-\t}\n \n-\tprivate VersionDiff getDiffFromProcess(final Process p) {\n-\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n-\t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n-\n-\t\tfinal InputSource is = new InputSource(new StringReader(output));\n-\n-\t\tfinal DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n-\t\ttry {\n-\t\t\tfinal DocumentBuilder db = dbf.newDocumentBuilder();\n-\t\t\tfinal Document doc = db.parse(is);\n-\t\t\tfinal NodeList nodeList = doc.getChildNodes();\n-\n-\t\t\tfinal Node diffItem = nodeList.item(0);\n-\t\t\tfinal Node pathsItem = diffItem.getChildNodes().item(1);\n-\n-\t\t\tfor (int pathIndex = 0; pathIndex < pathsItem.getChildNodes().getLength(); pathIndex++) {\n-\t\t\t\tfinal Node pathNode = pathsItem.getChildNodes().item(pathIndex);\n-\t\t\t\tif (pathNode.getChildNodes().getLength() > 0) {\n-\t\t\t\t\tfinal String currentFileName = pathNode.getChildNodes().item(0).getNodeValue();\n-\t\t\t\t\tdiff.addChange(currentFileName);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t} catch (final ParserConfigurationException e) {\n-\t\t\te.printStackTrace();\n-\t\t} catch (final SAXException e) {\n-\t\t\te.printStackTrace();\n-\t\t} catch (final IOException e) {\n-\t\t\te.printStackTrace();\n-\t\t}\n-\n-\t\treturn diff;\n-\t}\n-\n-}\n+public class SVNDiffLoader {\n+ private static final Logger LOG = LogManager.getLogger(SVNDiffLoader.class);\n+\n+ public static final String URL = \"url\";\n+\n+ public static final String REVISIONS = \"revisions\";\n+\n+ /**\n+  * Gets diff between current revision and previous revision of repo.\n+  * \n+  * @param projectFolder Local working copy of the repo.\n+  * @return\n+  */\n+\n+ public VersionDiff getChangedClasses(final File projectFolder) {\n+  try {\n+   final Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml -r PREV:BASE\", null, projectFolder);\n+   return getDiffFromProcess(p);\n+  } catch (final IOException e) {\n+   e.printStackTrace();\n+  }\n+  return null;\n+ }\n+\n+ /**\n+  * Determines which classes are changed in an svn repo between two revisions. Furthermore determines weather the pom.xml has changed.\n+  * \n+  * @param url\n+  * @param revisionString\n+  * @return\n+  */\n+\n+ public VersionDiff getChangedClasses(final String url, final String revisionStart, final String revisionDest) {\n+  try {\n+   final Process p = Runtime.getRuntime().exec(\"svn diff --summarize --xml \" + url + \"@\" + revisionStart + \" \" + url + \"@\" + revisionDest);\n+   return getDiffFromProcess(p);\n+  } catch (final IOException e) {\n+   e.printStackTrace();\n+  }\n+  return null;\n+ }\n+\n+ private VersionDiff getDiffFromProcess(final Process p) {\n+  final VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n+  final String output = StreamGobbler.getFullProcess(p, false);\n+  final InputSource is = new InputSource(new StringReader(output));\n+  final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n+  try {\n+   final DocumentBuilder db = dbf.newDocumentBuilder();\n+   final Document doc = db.parse(is);\n+   final NodeList nodeList = doc.getChildNodes();\n+   final Node diffItem = nodeList.item(0);\n+   final Node pathsItem = diffItem.getChildNodes().item(1);\n+   for (int pathIndex = 0; pathIndex < pathsItem.getChildNodes().getLength(); pathIndex++) {\n+    final Node pathNode = pathsItem.getChildNodes().item(pathIndex);\n+    if (pathNode.getChildNodes().getLength() > 0) {\n+     final String currentFileName = pathNode.getChildNodes().item(0).getNodeValue();\n+     diff.addChange(currentFileName);\n+    }\n+   }\n+  } catch (final ParserConfigurationException e) {\n+   e.printStackTrace();\n+  } catch (final SAXException e) {\n+   e.printStackTrace();\n+  } catch (final IOException e) {\n+   e.printStackTrace();\n+  }\n+  return diff;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 112
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/46/SVNDiffLoader.java\nindex d0ca80d0b1b..26e17abe12b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/46/SVNDiffLoader.java\n@@ -83,7 +83,8 @@ public class SVNDiffLoader {\n \t}\n \n \tprivate VersionDiff getDiffFromProcess(final Process p) {\n-\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n+\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());\n+//TODO F\u00fcr multmodulprojekte anpassen\n \t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n \n \t\tfinal InputSource is = new InputSource(new StringReader(output));\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/46/SVNDiffLoader.java\nindex d0ca80d0b1b..df08f33e04f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/46/SVNDiffLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/46/SVNDiffLoader.java\n@@ -83,7 +83,7 @@ public class SVNDiffLoader {\n \t}\n \n \tprivate VersionDiff getDiffFromProcess(final Process p) {\n-\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>());//TODO F\u00fcr multmodulprojekte anpassen\n+\t\tfinal VersionDiff diff = new VersionDiff(new LinkedList<>()); //TODO F\u00fcr multmodulprojekte anpassen\n \t\tfinal String output = StreamGobbler.getFullProcess(p, false);\n \n \t\tfinal InputSource is = new InputSource(new StringReader(output));\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
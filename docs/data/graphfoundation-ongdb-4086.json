{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4086",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4086/IndexTypeCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4086/IndexTypeCache.java\nindex 3e8290b494f..988ee701e9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4086/IndexTypeCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4086/IndexTypeCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import java.util.Collections;\n@@ -29,38 +30,38 @@ import org.neo4j.kernel.impl.index.IndexConfigStore;\n \n class IndexTypeCache\n {\n-    private final Map<IndexIdentifier, Pair<Integer, IndexType>> cache = Collections.synchronizedMap(\n-            new HashMap<IndexIdentifier, Pair<Integer, IndexType>>() );\n-    private final IndexConfigStore indexStore;\n+  private final Map<IndexIdentifier, Pair<Integer, IndexType>> cache = Collections.synchronizedMap(\n+      new HashMap<IndexIdentifier, Pair<Integer, IndexType>>());\n+  private final IndexConfigStore indexStore;\n \n-    IndexTypeCache( IndexConfigStore indexStore )\n-    {\n-        this.indexStore = indexStore;\n-    }\n+  IndexTypeCache(IndexConfigStore indexStore)\n+  {\n+    this.indexStore = indexStore;\n+  }\n \n-    IndexType getIndexType( IndexIdentifier identifier, boolean recovery ) throws ExplicitIndexNotFoundKernelException\n+  IndexType getIndexType(IndexIdentifier identifier, boolean recovery) throws ExplicitIndexNotFoundKernelException\n+  {\n+    Pair<Integer, IndexType> type = cache.get(identifier);\n+    Map<String, String> config = indexStore.get(identifier.entityType.entityClass(), identifier.indexName);\n+    if (config == null)\n     {\n-        Pair<Integer, IndexType> type = cache.get( identifier );\n-        Map<String, String> config = indexStore.get( identifier.entityType.entityClass(), identifier.indexName );\n-        if ( config == null )\n-        {\n-            if ( recovery )\n-            {\n-                return null;\n-            }\n-            throw new ExplicitIndexNotFoundKernelException( \"Index '%s' doesn't exist.\", identifier );\n-        }\n-        if ( type != null && config.hashCode() == type.first() )\n-        {\n-            return type.other();\n-        }\n-        type = Pair.of( config.hashCode(), IndexType.getIndexType( config ) );\n-        cache.put( identifier, type );\n-        return type.other();\n+      if (recovery)\n+      {\n+        return null;\n+      }\n+      throw new ExplicitIndexNotFoundKernelException(\"Index '%s' doesn't exist.\", identifier);\n     }\n-\n-    void invalidate( IndexIdentifier identifier )\n+    if (type != null && config.hashCode() == type.first())\n     {\n-        cache.remove( identifier );\n+      return type.other();\n     }\n+    type = Pair.of(config.hashCode(), IndexType.getIndexType(config));\n+    cache.put(identifier, type);\n+    return type.other();\n+  }\n+\n+  void invalidate(IndexIdentifier identifier)\n+  {\n+    cache.remove(identifier);\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4086/IndexTypeCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4086/IndexTypeCache.java\nindex 3e8290b494f..dbcf2c51659 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4086/IndexTypeCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4086/IndexTypeCache.java\n@@ -29,9 +29,8 @@ import org.neo4j.kernel.impl.index.IndexConfigStore;\n \n class IndexTypeCache\n {\n-    private final Map<IndexIdentifier, Pair<Integer, IndexType>> cache = Collections.synchronizedMap(\n-            new HashMap<IndexIdentifier, Pair<Integer, IndexType>>() );\n-    private final IndexConfigStore indexStore;\n+    private final Map<IndexIdentifier, Pair<Integer, IndexType>> cache = Collections.synchronizedMap( new HashMap<IndexIdentifier, Pair<Integer, IndexType>>() );\n+private final IndexConfigStore indexStore;\n \n     IndexTypeCache( IndexConfigStore indexStore )\n     {\n@@ -40,8 +39,8 @@ class IndexTypeCache\n \n     IndexType getIndexType( IndexIdentifier identifier, boolean recovery ) throws ExplicitIndexNotFoundKernelException\n     {\n-        Pair<Integer, IndexType> type = cache.get( identifier );\n-        Map<String, String> config = indexStore.get( identifier.entityType.entityClass(), identifier.indexName );\n+        Pair<Integer,IndexType> type = cache.get( identifier );\n+        Map<String,String> config = indexStore.get( identifier.entityType.entityClass(), identifier.indexName );\n         if ( config == null )\n         {\n             if ( recovery )\n@@ -50,11 +49,13 @@ class IndexTypeCache\n             }\n             throw new ExplicitIndexNotFoundKernelException( \"Index '%s' doesn't exist.\", identifier );\n         }\n-        if ( type != null && config.hashCode() == type.first() )\n+\n+if ( type != null && config.hashCode() == type.first() )\n         {\n             return type.other();\n         }\n-        type = Pair.of( config.hashCode(), IndexType.getIndexType( config ) );\n+\n+type = Pair.of( config.hashCode(), IndexType.getIndexType( config ) );\n         cache.put( identifier, type );\n         return type.other();\n     }\n@@ -63,4 +64,4 @@ class IndexTypeCache\n     {\n         cache.remove( identifier );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3179",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "207",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "224",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "244",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3179/LocalDateTimeValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3179/LocalDateTimeValue.java\nindex 3d21b359c53..8415610b6db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3179/LocalDateTimeValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3179/LocalDateTimeValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.Clock;\n@@ -57,124 +58,123 @@ import static org.neo4j.values.storable.IntegralValue.safeCastIntegral;\n import static org.neo4j.values.storable.LocalTimeValue.TIME_PATTERN;\n import static org.neo4j.values.storable.LocalTimeValue.parseTime;\n \n-public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalDateTimeValue>\n+public final class LocalDateTimeValue extends TemporalValue<LocalDateTime, LocalDateTimeValue>\n {\n-    private static final long INSTANCE_SIZE = shallowSizeOfInstance( LocalDateTimeValue.class ) + LOCAL_DATE_TIME_SIZE;\n+    private static final long INSTANCE_SIZE = shallowSizeOfInstance(LocalDateTimeValue.class) + LOCAL_DATE_TIME_SIZE;\n \n-    public static final LocalDateTimeValue MIN_VALUE = new LocalDateTimeValue( LocalDateTime.MIN );\n-    public static final LocalDateTimeValue MAX_VALUE = new LocalDateTimeValue( LocalDateTime.MAX );\n+    public static final LocalDateTimeValue MIN_VALUE = new LocalDateTimeValue(LocalDateTime.MIN);\n+    public static final LocalDateTimeValue MAX_VALUE = new LocalDateTimeValue(LocalDateTime.MAX);\n \n     private final LocalDateTime value;\n     private final long epochSecondsInUTC;\n \n-    private LocalDateTimeValue( LocalDateTime value )\n+    private LocalDateTimeValue(LocalDateTime value)\n     {\n         this.value = value;\n         this.epochSecondsInUTC = this.value.toEpochSecond(UTC);\n     }\n \n-    public static LocalDateTimeValue localDateTime( DateValue date, LocalTimeValue time )\n+    public static LocalDateTimeValue localDateTime(DateValue date, LocalTimeValue time)\n     {\n-        return new LocalDateTimeValue( LocalDateTime.of( date.temporal(), time.temporal() ) );\n+        return new LocalDateTimeValue(LocalDateTime.of(date.temporal(), time.temporal()));\n     }\n \n     public static LocalDateTimeValue localDateTime(\n-            int year, int month, int day, int hour, int minute, int second, int nanoOfSecond )\n+      int year, int month, int day, int hour, int minute, int second, int nanoOfSecond)\n     {\n-        return new LocalDateTimeValue( assertValidArgument( () -> LocalDateTime.of( year, month, day, hour, minute, second, nanoOfSecond ) ) );\n+        return new LocalDateTimeValue(assertValidArgument(() -> LocalDateTime.of(year, month, day, hour, minute, second, nanoOfSecond)));\n     }\n \n-    public static LocalDateTimeValue localDateTime( LocalDateTime value )\n+    public static LocalDateTimeValue localDateTime(LocalDateTime value)\n     {\n-        return new LocalDateTimeValue( requireNonNull( value, \"LocalDateTime\" ) );\n+        return new LocalDateTimeValue(requireNonNull(value, \"LocalDateTime\"));\n     }\n \n-    public static LocalDateTimeValue localDateTime( long epochSecond, long nano )\n+    public static LocalDateTimeValue localDateTime(long epochSecond, long nano)\n     {\n-        return new LocalDateTimeValue( localDateTimeRaw( epochSecond, nano ) );\n+        return new LocalDateTimeValue(localDateTimeRaw(epochSecond, nano));\n     }\n \n-    public static LocalDateTime localDateTimeRaw( long epochSecond, long nano )\n+    public static LocalDateTime localDateTimeRaw(long epochSecond, long nano)\n     {\n-        return assertValidArgument( () -> ofInstant( ofEpochSecond( epochSecond, nano ), UTC ) );\n+        return assertValidArgument(() -> ofInstant(ofEpochSecond(epochSecond, nano), UTC));\n     }\n \n-    public static LocalDateTimeValue parse( CharSequence text )\n+    public static LocalDateTimeValue parse(CharSequence text)\n     {\n-        return parse( LocalDateTimeValue.class, PATTERN, LocalDateTimeValue::parse, text );\n+        return parse(LocalDateTimeValue.class, PATTERN, LocalDateTimeValue::parse, text);\n     }\n \n-    public static LocalDateTimeValue parse( TextValue text )\n+    public static LocalDateTimeValue parse(TextValue text)\n     {\n-        return parse( LocalDateTimeValue.class, PATTERN, LocalDateTimeValue::parse, text );\n+        return parse(LocalDateTimeValue.class, PATTERN, LocalDateTimeValue::parse, text);\n     }\n \n-    public static LocalDateTimeValue now( Clock clock )\n+    public static LocalDateTimeValue now(Clock clock)\n     {\n-        return new LocalDateTimeValue( LocalDateTime.now( clock ) );\n+        return new LocalDateTimeValue(LocalDateTime.now(clock));\n     }\n \n-    public static LocalDateTimeValue now( Clock clock, String timezone )\n+    public static LocalDateTimeValue now(Clock clock, String timezone)\n     {\n-        return now( clock.withZone( parseZoneName( timezone ) ) );\n+        return now(clock.withZone(parseZoneName(timezone)));\n     }\n \n-    public static LocalDateTimeValue now( Clock clock, Supplier<ZoneId> defaultZone )\n+    public static LocalDateTimeValue now(Clock clock, Supplier<ZoneId> defaultZone)\n     {\n-        return now( clock.withZone( defaultZone.get() ) );\n+        return now(clock.withZone(defaultZone.get()));\n     }\n \n-    public static LocalDateTimeValue build( MapValue map, Supplier<ZoneId> defaultZone )\n+    public static LocalDateTimeValue build(MapValue map, Supplier<ZoneId> defaultZone)\n     {\n-        return StructureBuilder.build( builder( defaultZone ), map );\n+        return StructureBuilder.build(builder(defaultZone), map);\n     }\n \n-    public static LocalDateTimeValue select( AnyValue from, Supplier<ZoneId> defaultZone )\n+    public static LocalDateTimeValue select(AnyValue from, Supplier<ZoneId> defaultZone)\n     {\n-        return builder( defaultZone ).selectDateTime( from );\n+        return builder(defaultZone).selectDateTime(from);\n     }\n+\n     public static LocalDateTimeValue truncate(\n-            TemporalUnit unit,\n-            TemporalValue input,\n-            MapValue fields,\n-            Supplier<ZoneId> defaultZone )\n+      TemporalUnit unit,\n+      TemporalValue input,\n+      MapValue fields,\n+      Supplier<ZoneId> defaultZone)\n     {\n-        Pair<LocalDate,LocalTime> pair = getTruncatedDateAndTime( unit, input, \"local date time\" );\n+        Pair<LocalDate, LocalTime> pair = getTruncatedDateAndTime(unit, input, \"local date time\");\n \n         LocalDate truncatedDate = pair.first();\n         LocalTime truncatedTime = pair.other();\n \n-        LocalDateTime truncatedLDT = LocalDateTime.of( truncatedDate, truncatedTime );\n+        LocalDateTime truncatedLDT = LocalDateTime.of(truncatedDate, truncatedTime);\n \n-        if ( fields.size() == 0 )\n+        if (fields.size() == 0)\n         {\n-            return localDateTime( truncatedLDT );\n-        }\n-        else\n+            return localDateTime(truncatedLDT);\n+        } else\n         {\n-            return updateFieldMapWithConflictingSubseconds( fields, unit, truncatedLDT,\n-                    ( mapValue, localDateTime ) -> {\n-                        if ( mapValue.size() == 0 )\n-                        {\n-                            return localDateTime( localDateTime );\n-                        }\n-                        else\n-                        {\n-                            return build( mapValue.updatedWith( \"datetime\", localDateTime( localDateTime ) ),\n-                                    defaultZone );\n-                        }\n-                    } );\n+            return updateFieldMapWithConflictingSubseconds(fields, unit, truncatedLDT,\n+              (mapValue, localDateTime) -> {\n+                  if (mapValue.size() == 0)\n+                  {\n+                      return localDateTime(localDateTime);\n+                  } else\n+                  {\n+                      return build(mapValue.updatedWith(\"datetime\", localDateTime(localDateTime)),\n+                        defaultZone);\n+                  }\n+              });\n         }\n     }\n \n     private static final LocalDateTime DEFAULT_LOCAL_DATE_TIME =\n-            LocalDateTime.of( TemporalFields.year.defaultValue, TemporalFields.month.defaultValue,\n-                    TemporalFields.day.defaultValue, TemporalFields.hour.defaultValue,\n-                    TemporalFields.minute.defaultValue );\n+      LocalDateTime.of(TemporalFields.year.defaultValue, TemporalFields.month.defaultValue,\n+        TemporalFields.day.defaultValue, TemporalFields.hour.defaultValue,\n+        TemporalFields.minute.defaultValue);\n \n-    private static DateTimeValue.DateTimeBuilder<LocalDateTimeValue> builder( Supplier<ZoneId> defaultZone )\n+    private static DateTimeValue.DateTimeBuilder<LocalDateTimeValue> builder(Supplier<ZoneId> defaultZone)\n     {\n-        return new DateTimeValue.DateTimeBuilder<>( defaultZone )\n+        return new DateTimeValue.DateTimeBuilder<>(defaultZone)\n         {\n             @Override\n             protected boolean supportsTimeZone()\n@@ -191,104 +191,100 @@ public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalD\n             @Override\n             public LocalDateTimeValue buildInternal()\n             {\n-                boolean selectingDate = fields.containsKey( TemporalFields.date );\n-                boolean selectingTime = fields.containsKey( TemporalFields.time );\n-                boolean selectingDateTime = fields.containsKey( TemporalFields.datetime );\n+                boolean selectingDate = fields.containsKey(TemporalFields.date);\n+                boolean selectingTime = fields.containsKey(TemporalFields.time);\n+                boolean selectingDateTime = fields.containsKey(TemporalFields.datetime);\n                 LocalDateTime result;\n-                if ( selectingDateTime )\n+                if (selectingDateTime)\n                 {\n-                    AnyValue dtField = fields.get( TemporalFields.datetime );\n-                    if ( !(dtField instanceof TemporalValue) )\n+                    AnyValue dtField = fields.get(TemporalFields.datetime);\n+                    if (!(dtField instanceof TemporalValue))\n                     {\n-                        throw new InvalidArgumentException( String.format( \"Cannot construct local date time from: %s\", dtField ) );\n+                        throw new InvalidArgumentException(String.format(\"Cannot construct local date time from: %s\", dtField));\n                     }\n                     TemporalValue dt = (TemporalValue) dtField;\n-                    result = LocalDateTime.of( dt.getDatePart(), dt.getLocalTimePart() );\n-                }\n-                else if ( selectingTime || selectingDate )\n+                    result = LocalDateTime.of(dt.getDatePart(), dt.getLocalTimePart());\n+                } else if (selectingTime || selectingDate)\n                 {\n                     LocalTime time;\n-                    if ( selectingTime )\n+                    if (selectingTime)\n                     {\n-                        AnyValue timeField = fields.get( TemporalFields.time );\n-                        if ( !(timeField instanceof TemporalValue) )\n+                        AnyValue timeField = fields.get(TemporalFields.time);\n+                        if (!(timeField instanceof TemporalValue))\n                         {\n-                            throw new InvalidArgumentException( String.format( \"Cannot construct local time from: %s\", timeField ) );\n+                            throw new InvalidArgumentException(String.format(\"Cannot construct local time from: %s\", timeField));\n                         }\n                         TemporalValue t = (TemporalValue) timeField;\n                         time = t.getLocalTimePart();\n-                    }\n-                    else\n+                    } else\n                     {\n                         time = LocalTimeValue.DEFAULT_LOCAL_TIME;\n                     }\n                     LocalDate date;\n-                    if ( selectingDate )\n+                    if (selectingDate)\n                     {\n-                        AnyValue dateField = fields.get( TemporalFields.date );\n-                        if ( !(dateField instanceof TemporalValue) )\n+                        AnyValue dateField = fields.get(TemporalFields.date);\n+                        if (!(dateField instanceof TemporalValue))\n                         {\n-                            throw new InvalidArgumentException( String.format( \"Cannot construct date from: %s\", dateField ) );\n+                            throw new InvalidArgumentException(String.format(\"Cannot construct date from: %s\", dateField));\n                         }\n                         TemporalValue t = (TemporalValue) dateField;\n                         date = t.getDatePart();\n-                    }\n-                    else\n+                    } else\n                     {\n                         date = DateValue.DEFAULT_CALENDER_DATE;\n                     }\n \n-                    result = LocalDateTime.of( date, time );\n-                }\n-                else\n+                    result = LocalDateTime.of(date, time);\n+                } else\n                 {\n                     result = DEFAULT_LOCAL_DATE_TIME;\n                 }\n \n-                if ( fields.containsKey( TemporalFields.week ) && !selectingDate && !selectingDateTime )\n+                if (fields.containsKey(TemporalFields.week) && !selectingDate && !selectingDateTime)\n                 {\n                     // Be sure to be in the start of the week based year (which can be later than 1st Jan)\n                     result = result\n-                            .with( IsoFields.WEEK_BASED_YEAR, safeCastIntegral( TemporalFields.year.name(), fields.get( TemporalFields.year ),\n-                                                                                TemporalFields.year.defaultValue ) )\n-                            .with( IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1 )\n-                            .with( ChronoField.DAY_OF_WEEK, 1 );\n+                      .with(IsoFields.WEEK_BASED_YEAR, safeCastIntegral(TemporalFields.year.name(), fields.get(TemporalFields.year),\n+                        TemporalFields.year.defaultValue))\n+                      .with(IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1)\n+                      .with(ChronoField.DAY_OF_WEEK, 1);\n                 }\n \n-                result = assignAllFields( result );\n-                return localDateTime( result );\n+                result = assignAllFields(result);\n+                return localDateTime(result);\n             }\n \n-            private LocalDateTime getLocalDateTimeOf( AnyValue temporal )\n+            private LocalDateTime getLocalDateTimeOf(AnyValue temporal)\n             {\n-                if ( temporal instanceof TemporalValue )\n+                if (temporal instanceof TemporalValue)\n                 {\n                     TemporalValue v = (TemporalValue) temporal;\n                     LocalDate datePart = v.getDatePart();\n                     LocalTime timePart = v.getLocalTimePart();\n-                    return LocalDateTime.of( datePart, timePart );\n+                    return LocalDateTime.of(datePart, timePart);\n                 }\n-                throw new InvalidArgumentException( String.format( \"Cannot construct date from: %s\", temporal ) );\n+                throw new InvalidArgumentException(String.format(\"Cannot construct date from: %s\", temporal));\n             }\n \n             @Override\n-            protected LocalDateTimeValue selectDateTime( AnyValue datetime )\n+            protected LocalDateTimeValue selectDateTime(AnyValue datetime)\n             {\n-                if ( datetime instanceof LocalDateTimeValue )\n+                if (datetime instanceof LocalDateTimeValue)\n                 {\n                     return (LocalDateTimeValue) datetime;\n                 }\n-                return localDateTime( getLocalDateTimeOf( datetime ) );\n+                return localDateTime(getLocalDateTimeOf(datetime));\n             }\n         };\n     }\n \n     @Override\n-    int unsafeCompareTo( Value other )\n+    int unsafeCompareTo(Value other)\n     {\n         LocalDateTimeValue that = (LocalDateTimeValue) other;\n-        int cmp = Long.compare( epochSecondsInUTC, that.epochSecondsInUTC );\n-        if ( cmp == 0 )\n+        int cmp = Long.compare(epochSecondsInUTC, that.epochSecondsInUTC);\n+        if (cmp == 0)\n         {\n             cmp = value.getNano() - that.value.getNano();\n         }\n@@ -320,14 +316,14 @@ public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalD\n     }\n \n     @Override\n-    OffsetTime getTimePart( Supplier<ZoneId> defaultZone )\n+    OffsetTime getTimePart(Supplier<ZoneId> defaultZone)\n     {\n-        ZoneOffset currentOffset = assertValidArgument( () -> ZonedDateTime.ofInstant( Instant.now(), defaultZone.get() ) ).getOffset();\n+        ZoneOffset currentOffset = assertValidArgument(() -> ZonedDateTime.ofInstant(Instant.now(), defaultZone.get())).getOffset();\n         return OffsetTime.of(value.toLocalTime(), currentOffset);\n     }\n \n     @Override\n-    ZoneId getZoneId( Supplier<ZoneId> defaultZone )\n+    ZoneId getZoneId(Supplier<ZoneId> defaultZone)\n     {\n         return defaultZone.get();\n     }\n@@ -335,7 +331,7 @@ public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalD\n     @Override\n     ZoneOffset getZoneOffset()\n     {\n-        throw new UnsupportedTemporalUnitException( String.format( \"Cannot get the offset of: %s\", this ) );\n+        throw new UnsupportedTemporalUnitException(String.format(\"Cannot get the offset of: %s\", this));\n     }\n \n     @Override\n@@ -351,21 +347,21 @@ public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalD\n     }\n \n     @Override\n-    public boolean equals( Value other )\n+    public boolean equals(Value other)\n     {\n-        return other instanceof LocalDateTimeValue && value.equals( ((LocalDateTimeValue) other).value );\n+        return other instanceof LocalDateTimeValue && value.equals(((LocalDateTimeValue) other).value);\n     }\n \n     @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        writer.writeLocalDateTime( value );\n+        writer.writeLocalDateTime(value);\n     }\n \n     @Override\n     public String prettyPrint()\n     {\n-        return assertPrintable( () -> value.format( DateTimeFormatter.ISO_LOCAL_DATE_TIME ) );\n+        return assertPrintable(() -> value.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));\n     }\n \n     @Override\n@@ -377,31 +373,31 @@ public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalD\n     @Override\n     protected int computeHashToMemoize()\n     {\n-        return value.toInstant( UTC ).hashCode();\n+        return value.toInstant(UTC).hashCode();\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public <T> T map(ValueMapper<T> mapper)\n     {\n-        return mapper.mapLocalDateTime( this );\n+        return mapper.mapLocalDateTime(this);\n     }\n \n     @Override\n-    public LocalDateTimeValue add( DurationValue duration )\n+    public LocalDateTimeValue add(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic( () -> value.plus( duration ) ) );\n+        return replacement(assertValidArithmetic(() -> value.plus(duration)));\n     }\n \n     @Override\n-    public LocalDateTimeValue sub( DurationValue duration )\n+    public LocalDateTimeValue sub(DurationValue duration)\n     {\n-        return replacement( assertValidArithmetic( () -> value.minus( duration ) ) );\n+        return replacement(assertValidArithmetic(() -> value.minus(duration)));\n     }\n \n     @Override\n-    LocalDateTimeValue replacement( LocalDateTime dateTime )\n+    LocalDateTimeValue replacement(LocalDateTime dateTime)\n     {\n-        return dateTime == value ? this : new LocalDateTimeValue( dateTime );\n+        return dateTime == value ? this : new LocalDateTimeValue(dateTime);\n     }\n \n     @Override\n@@ -411,16 +407,16 @@ public final class LocalDateTimeValue extends TemporalValue<LocalDateTime,LocalD\n     }\n \n     private static final Pattern PATTERN = Pattern.compile(\n-            DATE_PATTERN + \"(?<time>T\" + TIME_PATTERN + \")?\",\n-            Pattern.CASE_INSENSITIVE );\n+      DATE_PATTERN + \"(?<time>T\" + TIME_PATTERN + \")?\",\n+      Pattern.CASE_INSENSITIVE);\n \n-    private static LocalDateTimeValue parse( Matcher matcher )\n+    private static LocalDateTimeValue parse(Matcher matcher)\n     {\n-        return localDateTime( LocalDateTime.of( parseDate( matcher ), optTime( matcher ) ) );\n+        return localDateTime(LocalDateTime.of(parseDate(matcher), optTime(matcher)));\n     }\n \n-    static LocalTime optTime( Matcher matcher )\n+    static LocalTime optTime(Matcher matcher)\n     {\n-        return matcher.group( \"time\" ) != null ? parseTime( matcher ) : LocalTime.MIN;\n+        return matcher.group(\"time\") != null ? parseTime(matcher) : LocalTime.MIN;\n     }\n }\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
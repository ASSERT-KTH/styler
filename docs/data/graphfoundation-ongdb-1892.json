{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1892",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1892/GroupReferenceEncoding.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1892/GroupReferenceEncoding.java\nindex 51089fb5a10..5e51a7b4f3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1892/GroupReferenceEncoding.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1892/GroupReferenceEncoding.java\n@@ -17,28 +17,29 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n \n class GroupReferenceEncoding\n {\n-    private static final long DIRECT = 0x1000_0000_0000_0000L;\n+  private static final long DIRECT = 0x1000_0000_0000_0000L;\n \n-    /**\n-     * Encode a relationship id as a group reference.\n-     */\n-    static long encodeRelationship( long relationshipId )\n-    {\n-        return relationshipId | DIRECT | References.FLAG_MARKER;\n-    }\n+  /**\n+   * Encode a relationship id as a group reference.\n+   */\n+  static long encodeRelationship(long relationshipId)\n+  {\n+    return relationshipId | DIRECT | References.FLAG_MARKER;\n+  }\n \n-    /**\n-     * Check whether a group reference is an encoded relationship id.\n-     */\n-    static boolean isRelationship( long groupReference )\n-    {\n-        assert groupReference != NO_ID;\n-        return (groupReference & References.FLAG_MASK) == DIRECT;\n-    }\n+  /**\n+   * Check whether a group reference is an encoded relationship id.\n+   */\n+  static boolean isRelationship(long groupReference)\n+  {\n+    assert groupReference != NO_ID;\n+    return (groupReference & References.FLAG_MASK) == DIRECT;\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1892/GroupReferenceEncoding.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1892/GroupReferenceEncoding.java\nindex 51089fb5a10..b35e07e8f2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1892/GroupReferenceEncoding.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1892/GroupReferenceEncoding.java\n@@ -39,6 +39,6 @@ class GroupReferenceEncoding\n     static boolean isRelationship( long groupReference )\n     {\n         assert groupReference != NO_ID;\n-        return (groupReference & References.FLAG_MASK) == DIRECT;\n+        return ( groupReference & References.FLAG_MASK) == DIRECT;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
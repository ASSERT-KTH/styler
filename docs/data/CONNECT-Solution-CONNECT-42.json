{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.direct;\n\nimport javax.mail.MessagingException;\nimport javax.mail.Session;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/42/DirectSenderServiceImpl.java\nindex 1d24ca6a934..47954d7945c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/42/DirectSenderServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.direct;\n \n import javax.mail.MessagingException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/42/DirectSenderServiceImpl.java\nindex 1d24ca6a934..c6f7a230769 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/42/DirectSenderServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.direct;\n \n import javax.mail.MessagingException;\n@@ -37,38 +38,37 @@ import javax.xml.ws.soap.SOAPBinding;\n import org.apache.log4j.Logger;\n \n /**\n- *\n  * @author svalluripalli\n  */\n @BindingType(SOAPBinding.SOAP12HTTP_BINDING)\n public class DirectSenderServiceImpl extends DirectAdapterEntity implements DirectSenderPortType {\n \n-    private static final Logger LOG = Logger.getLogger(DirectSenderServiceImpl.class);\n+  private static final Logger LOG = Logger.getLogger(DirectSenderServiceImpl.class);\n \n-    @Override\n-    public void sendOutboundDirect(SendoutMessage parameters) {\n-        LOG.debug(\"-- Begin DirectSenderServiceImpl.sendOutboundDirect() --\");\n-        ConnectCustomSendMimeMessage message = parameters.getMessage();\n-        MimeMessage mimeMessage = new MimeMessage((Session) null);\n-        try {\n-            mimeMessage.setFrom(new InternetAddress(message.getSender()));\n-            int receipientCount = message.getReceipients().size();\n-            InternetAddress[] addressTo = new InternetAddress[receipientCount];\n-            for (int i = 0; i < receipientCount; i++) {\n-                addressTo[i] = new InternetAddress(message.getReceipients().get(i));\n-            }\n-            MimeMultipart mpart = new MimeMultipart();\n-            MimeBodyPart bp = new MimeBodyPart();\n-            bp.setText(message.getContent().toString());\n-            // add message body\n-            mpart.addBodyPart(bp);\n-            mimeMessage.setContent(mpart);\n-            mimeMessage.setRecipients(MimeMessage.RecipientType.TO, addressTo);\n-            mimeMessage.setSubject(message.getSubject());\n-            getDirectSender().sendOutboundDirect(mimeMessage);\n-        } catch (MessagingException ex) {\n-            LOG.error(ex.getMessage());\n-        }\n-        LOG.debug(\"-- End DirectSenderServiceImpl.sendOutboundDirect() --\");\n+  @Override\n+  public void sendOutboundDirect(SendoutMessage parameters) {\n+    LOG.debug(\"-- Begin DirectSenderServiceImpl.sendOutboundDirect() --\");\n+    ConnectCustomSendMimeMessage message = parameters.getMessage();\n+    MimeMessage mimeMessage = new MimeMessage((Session) null);\n+    try {\n+      mimeMessage.setFrom(new InternetAddress(message.getSender()));\n+      int receipientCount = message.getReceipients().size();\n+      InternetAddress[] addressTo = new InternetAddress[receipientCount];\n+      for (int i = 0; i < receipientCount; i++) {\n+        addressTo[i] = new InternetAddress(message.getReceipients().get(i));\n+      }\n+      MimeMultipart mpart = new MimeMultipart();\n+      MimeBodyPart bp = new MimeBodyPart();\n+      bp.setText(message.getContent().toString());\n+      // add message body\n+      mpart.addBodyPart(bp);\n+      mimeMessage.setContent(mpart);\n+      mimeMessage.setRecipients(MimeMessage.RecipientType.TO, addressTo);\n+      mimeMessage.setSubject(message.getSubject());\n+      getDirectSender().sendOutboundDirect(mimeMessage);\n+    } catch (MessagingException ex) {\n+      LOG.error(ex.getMessage());\n     }\n+    LOG.debug(\"-- End DirectSenderServiceImpl.sendOutboundDirect() --\");\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/42/DirectSenderServiceImpl.java\nindex 1d24ca6a934..de7d1ab32f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/42/DirectSenderServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.direct;\n \n import javax.mail.MessagingException;\n@@ -54,7 +55,8 @@ public class DirectSenderServiceImpl extends DirectAdapterEntity implements Dire\n             mimeMessage.setFrom(new InternetAddress(message.getSender()));\n             int receipientCount = message.getReceipients().size();\n             InternetAddress[] addressTo = new InternetAddress[receipientCount];\n-            for (int i = 0; i < receipientCount; i++) {\n+            for (int i = 0;\n+i < receipientCount; i++) {\n                 addressTo[i] = new InternetAddress(message.getReceipients().get(i));\n             }\n             MimeMultipart mpart = new MimeMultipart();\n@@ -71,4 +73,4 @@ public class DirectSenderServiceImpl extends DirectAdapterEntity implements Dire\n         }\n         LOG.debug(\"-- End DirectSenderServiceImpl.sendOutboundDirect() --\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "61",
                    "column": "28",
                    "severity": "error",
                    "message": "'InternetAddress' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "62",
                    "column": "63",
                    "severity": "error",
                    "message": "'InternetAddress' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "63",
                    "column": "16",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "column": "29",
                    "severity": "error",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "'<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/42/DirectSenderServiceImpl.java\nindex 1d24ca6a934..7725c909424 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/42/DirectSenderServiceImpl.java\n@@ -40,11 +40,15 @@ import org.apache.log4j.Logger;\n  *\n  * @author svalluripalli\n  */\n+\n+\n @BindingType(SOAPBinding.SOAP12HTTP_BINDING)\n-public class DirectSenderServiceImpl extends DirectAdapterEntity implements DirectSenderPortType {\n+public class DirectSenderServiceImpl extends\n+    DirectAdapterEntity implements DirectSenderPortType {\n \n     private static final Logger LOG = Logger.getLogger(DirectSenderServiceImpl.class);\n \n+\n     @Override\n     public void sendOutboundDirect(SendoutMessage parameters) {\n         LOG.debug(\"-- Begin DirectSenderServiceImpl.sendOutboundDirect() --\");\n@@ -52,10 +56,13 @@ public class DirectSenderServiceImpl extends DirectAdapterEntity implements Dire\n         MimeMessage mimeMessage = new MimeMessage((Session) null);\n         try {\n             mimeMessage.setFrom(new InternetAddress(message.getSender()));\n+\n             int receipientCount = message.getReceipients().size();\n-            InternetAddress[] addressTo = new InternetAddress[receipientCount];\n-            for (int i = 0; i < receipientCount; i++) {\n-                addressTo[i] = new InternetAddress(message.getReceipients().get(i));\n+            InternetAddress [] addressTo = new\n+                                               InternetAddress [ receipientCount];\n+            for(int i = 0; i<receipientCount;\n+i++) {\n+                addressTo[ i] = new InternetAddress(message.getReceipients().get(i));\n             }\n             MimeMultipart mpart = new MimeMultipart();\n             MimeBodyPart bp = new MimeBodyPart();\n@@ -71,4 +78,5 @@ public class DirectSenderServiceImpl extends DirectAdapterEntity implements Dire\n         }\n         LOG.debug(\"-- End DirectSenderServiceImpl.sendOutboundDirect() --\");\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/42/DirectSenderServiceImpl.java\nindex 1d24ca6a934..47954d7945c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/42/DirectSenderServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/42/DirectSenderServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.direct;\n \n import javax.mail.MessagingException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3374",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3374/RelationshipModifications.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3374/RelationshipModifications.java\nindex e63997e458f..ed51f4d9a59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3374/RelationshipModifications.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3374/RelationshipModifications.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.txstate;\n \n import org.apache.commons.lang3.mutable.MutableBoolean;\n@@ -63,7 +64,7 @@ public interface RelationshipModifications\n         }\n \n         @Override\n-        public void forEach( RelationshipVisitor relationship )\n+        public void forEach(RelationshipVisitor relationship)\n         {\n         }\n     };\n@@ -73,19 +74,19 @@ public interface RelationshipModifications\n         return new IdDataDecorator()\n         {\n             @Override\n-            public <E extends Exception> void accept( long id, RelationshipVisitor<E> visitor ) throws E\n+            public <E extends Exception> void accept(long id, RelationshipVisitor<E> visitor) throws E\n             {\n-                visitor.visit( id, -1, -1, -1 );\n+                visitor.visit(id, -1, -1, -1);\n             }\n         };\n     }\n \n-    static RelationshipBatch idsAsBatch( LongSet ids )\n+    static RelationshipBatch idsAsBatch(LongSet ids)\n     {\n-        return idsAsBatch( ids, noAdditionalDataDecorator() );\n+        return idsAsBatch(ids, noAdditionalDataDecorator());\n     }\n \n-    static RelationshipBatch idsAsBatch( LongSet ids, IdDataDecorator idDataDecorator )\n+    static RelationshipBatch idsAsBatch(LongSet ids, IdDataDecorator idDataDecorator)\n     {\n         return new RelationshipBatch()\n         {\n@@ -102,9 +103,9 @@ public interface RelationshipModifications\n             }\n \n             @Override\n-            public boolean contains( long id )\n+            public boolean contains(long id)\n             {\n-                return ids.contains( id );\n+                return ids.contains(id);\n             }\n \n             @Override\n@@ -114,19 +115,19 @@ public interface RelationshipModifications\n             }\n \n             @Override\n-            public <E extends Exception> void forEach( RelationshipVisitor<E> relationship ) throws E\n+            public <E extends Exception> void forEach(RelationshipVisitor<E> relationship) throws E\n             {\n                 LongIterator iterator = ids.longIterator();\n-                while ( iterator.hasNext() )\n+                while (iterator.hasNext())\n                 {\n                     long id = iterator.next();\n-                    idDataDecorator.accept( id, relationship );\n+                    idDataDecorator.accept(id, relationship);\n                 }\n             }\n         };\n     }\n \n-    void forEachSplit( IdsVisitor visitor );\n+    void forEachSplit(IdsVisitor visitor);\n \n     RelationshipBatch creations();\n \n@@ -150,7 +151,7 @@ public interface RelationshipModifications\n \n         boolean hasCreations();\n \n-        boolean hasCreations( int type );\n+        boolean hasCreations(int type);\n \n         boolean hasDeletions();\n \n@@ -158,45 +159,45 @@ public interface RelationshipModifications\n \n         RelationshipBatch deletions();\n \n-        default void forEachCreationSplit( TypeIdsVisitor visitor )\n+        default void forEachCreationSplit(TypeIdsVisitor visitor)\n         {\n-            forEachCreationSplitInterruptible( byType ->\n+            forEachCreationSplitInterruptible(byType ->\n             {\n-                visitor.accept( byType );\n+                visitor.accept(byType);\n                 return false;\n-            } );\n+            });\n         }\n \n-        void forEachCreationSplitInterruptible( InterruptibleTypeIdsVisitor visitor );\n+        void forEachCreationSplitInterruptible(InterruptibleTypeIdsVisitor visitor);\n \n-        default void forEachDeletionSplit( TypeIdsVisitor visitor )\n+        default void forEachDeletionSplit(TypeIdsVisitor visitor)\n         {\n-            forEachDeletionSplitInterruptible( byType ->\n+            forEachDeletionSplitInterruptible(byType ->\n             {\n-                visitor.accept( byType );\n+                visitor.accept(byType);\n                 return false;\n-            } );\n+            });\n         }\n \n-        void forEachDeletionSplitInterruptible( InterruptibleTypeIdsVisitor visitor );\n+        void forEachDeletionSplitInterruptible(InterruptibleTypeIdsVisitor visitor);\n     }\n \n     interface NodeRelationshipTypeIds\n     {\n         int type();\n \n-        default RelationshipBatch ids( RelationshipDirection direction )\n+        default RelationshipBatch ids(RelationshipDirection direction)\n         {\n-            switch ( direction )\n+            switch (direction)\n             {\n-            case OUTGOING:\n-                return out();\n-            case INCOMING:\n-                return in();\n-            case LOOP:\n-                return loop();\n-            default:\n-                throw new IllegalArgumentException( direction.name() );\n+                case OUTGOING:\n+                    return out();\n+                case INCOMING:\n+                    return in();\n+                case LOOP:\n+                    return loop();\n+                default:\n+                    throw new IllegalArgumentException(direction.name());\n             }\n         }\n \n@@ -217,7 +218,7 @@ public interface RelationshipModifications\n     {\n         int size();\n \n-        <E extends Exception> void forEach( RelationshipVisitor<E> relationship ) throws E;\n+        <E extends Exception> void forEach(RelationshipVisitor<E> relationship) throws E;\n \n         // The default implementations below are inefficient, but are implemented like this for simplicity of test versions of this interface,\n         // any implementor that is in production code will implement properly\n@@ -227,40 +228,40 @@ public interface RelationshipModifications\n             return size() == 0;\n         }\n \n-        default boolean contains( long id )\n+        default boolean contains(long id)\n         {\n-            if ( isEmpty() )\n+            if (isEmpty())\n             {\n                 return false;\n             }\n             MutableBoolean contains = new MutableBoolean();\n-            forEach( ( relationshipId, typeId, startNodeId, endNodeId ) ->\n+            forEach((relationshipId, typeId, startNodeId, endNodeId) ->\n             {\n-                if ( relationshipId == id )\n+                if (relationshipId == id)\n                 {\n                     contains.setTrue();\n                 }\n-            } );\n+            });\n             return contains.booleanValue();\n         }\n \n         default long first()\n         {\n-            Preconditions.checkState( !isEmpty(), \"No ids\" );\n-            MutableLong first = new MutableLong( -1 );\n-            forEach( ( relationshipId, typeId, startNodeId, endNodeId ) ->\n+            Preconditions.checkState(!isEmpty(), \"No ids\");\n+            MutableLong first = new MutableLong(-1);\n+            forEach((relationshipId, typeId, startNodeId, endNodeId) ->\n             {\n-                if ( first.longValue() == -1 )\n+                if (first.longValue() == -1)\n                 {\n-                    first.setValue( relationshipId );\n+                    first.setValue(relationshipId);\n                 }\n-            } );\n+            });\n             return first.longValue();\n         }\n     }\n \n     interface IdDataDecorator\n     {\n-        <E extends Exception> void accept( long id, RelationshipVisitor<E> visitor ) throws E;\n+        <E extends Exception> void accept(long id, RelationshipVisitor<E> visitor) throws E;\n     }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
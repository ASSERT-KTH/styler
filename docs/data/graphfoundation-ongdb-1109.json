{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1109",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1109/NewKernel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1109/NewKernel.java\nindex 00297efcd87..4b52e82c9ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1109/NewKernel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1109/NewKernel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.neo4j.internal.kernel.api.Kernel;\n@@ -32,52 +33,52 @@ import org.neo4j.storageengine.api.StorageStatement;\n  */\n public class NewKernel implements Kernel, Modes\n {\n-    private final StorageEngine engine;\n-    private final InwardKernel kernel;\n+  private final StorageEngine engine;\n+  private final InwardKernel kernel;\n \n-    private StorageStatement statement;\n+  private StorageStatement statement;\n \n-    private volatile boolean isRunning;\n+  private volatile boolean isRunning;\n \n-    public NewKernel( StorageEngine engine, InwardKernel kernel )\n-    {\n-        this.engine = engine;\n-        this.kernel = kernel;\n-        this.isRunning = false;\n-    }\n+  public NewKernel(StorageEngine engine, InwardKernel kernel)\n+  {\n+    this.engine = engine;\n+    this.kernel = kernel;\n+    this.isRunning = false;\n+  }\n \n-    @Override\n-    public KernelSession beginSession( LoginContext loginContext )\n-    {\n-        assert isRunning : \"kernel is not running, so it is not possible to use it\";\n-        return new KernelSession( kernel, loginContext );\n-    }\n+  @Override\n+  public KernelSession beginSession(LoginContext loginContext)\n+  {\n+    assert isRunning : \"kernel is not running, so it is not possible to use it\";\n+    return new KernelSession(kernel, loginContext);\n+  }\n \n-    @Override\n-    public Modes modes()\n-    {\n-        return this;\n-    }\n+  @Override\n+  public Modes modes()\n+  {\n+    return this;\n+  }\n \n-    public void start()\n-    {\n-        statement = engine.storeReadLayer().newStatement();\n-        isRunning = true;\n-    }\n+  public void start()\n+  {\n+    statement = engine.storeReadLayer().newStatement();\n+    isRunning = true;\n+  }\n \n-    public void stop()\n+  public void stop()\n+  {\n+    if (!isRunning)\n     {\n-        if ( !isRunning )\n-        {\n-            throw new IllegalStateException( \"kernel is not running, so it is not possible to stop it\" );\n-        }\n-        statement.close();\n-        isRunning = false;\n+      throw new IllegalStateException(\"kernel is not running, so it is not possible to stop it\");\n     }\n+    statement.close();\n+    isRunning = false;\n+  }\n \n-    @Override\n-    public boolean twoLayerTransactionState()\n-    {\n-        return false;\n-    }\n+  @Override\n+  public boolean twoLayerTransactionState()\n+  {\n+    return false;\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1109/NewKernel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1109/NewKernel.java\nindex 00297efcd87..27dca96e6f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1109/NewKernel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1109/NewKernel.java\n@@ -80,4 +80,4 @@ public class NewKernel implements Kernel, Modes\n     {\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
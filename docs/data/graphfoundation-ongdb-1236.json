{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1236",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1236/StoreFiles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1236/StoreFiles.java\nindex d380f6dc00b..c4f110b1e9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1236/StoreFiles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1236/StoreFiles.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import java.io.File;\n@@ -37,121 +38,120 @@ import org.neo4j.kernel.impl.transaction.log.files.LogFiles;\n \n public class StoreFiles\n {\n-    private static final FilenameFilter STORE_FILE_FILTER = ( dir, name ) ->\n+  private static final FilenameFilter STORE_FILE_FILTER = (dir, name) ->\n+  {\n+    // Skip log files and tx files from temporary database\n+    return !name.startsWith(\"metrics\") && !name.startsWith(\"temp-copy\") &&\n+        !name.startsWith(\"raft-messages.\") && !name.startsWith(\"debug.\") &&\n+        !name.startsWith(\"data\") && !name.startsWith(\"store_lock\");\n+  };\n+\n+  private final FilenameFilter fileFilter;\n+  private FileSystemAbstraction fs;\n+  private PageCache pageCache;\n+\n+  public StoreFiles(FileSystemAbstraction fs, PageCache pageCache)\n+  {\n+    this(fs, pageCache, STORE_FILE_FILTER);\n+  }\n+\n+  public StoreFiles(FileSystemAbstraction fs, PageCache pageCache, FilenameFilter fileFilter)\n+  {\n+    this.fs = fs;\n+    this.pageCache = pageCache;\n+    this.fileFilter = fileFilter;\n+  }\n+\n+  public void delete(File storeDir, LogFiles logFiles) throws IOException\n+  {\n+    // 'files' can be null if the directory doesn't exist. This is fine, we just ignore it then.\n+    File[] files = fs.listFiles(storeDir, fileFilter);\n+    if (files != null)\n     {\n-        // Skip log files and tx files from temporary database\n-        return !name.startsWith( \"metrics\" ) && !name.startsWith( \"temp-copy\" ) &&\n-               !name.startsWith( \"raft-messages.\" ) && !name.startsWith( \"debug.\" ) &&\n-               !name.startsWith( \"data\" ) && !name.startsWith( \"store_lock\" );\n-    };\n-\n-    private final FilenameFilter fileFilter;\n-    private FileSystemAbstraction fs;\n-    private PageCache pageCache;\n+      for (File file : files)\n+      {\n+        fs.deleteRecursively(file);\n+      }\n+    }\n \n-    public StoreFiles( FileSystemAbstraction fs, PageCache pageCache )\n+    File[] txLogs = fs.listFiles(logFiles.logFilesDirectory());\n+    if (txLogs != null)\n     {\n-        this( fs, pageCache, STORE_FILE_FILTER );\n+      for (File txLog : txLogs)\n+      {\n+        fs.deleteFile(txLog);\n+      }\n     }\n \n-    public StoreFiles( FileSystemAbstraction fs, PageCache pageCache, FilenameFilter fileFilter )\n+    Iterable<FileHandle> iterator = acceptedPageCachedFiles(storeDir)::iterator;\n+    for (FileHandle fh : iterator)\n     {\n-        this.fs = fs;\n-        this.pageCache = pageCache;\n-        this.fileFilter = fileFilter;\n+      fh.delete();\n     }\n+  }\n \n-    public void delete( File storeDir, LogFiles logFiles ) throws IOException\n+  private Stream<FileHandle> acceptedPageCachedFiles(File storeDir) throws IOException\n+  {\n+    try\n     {\n-        // 'files' can be null if the directory doesn't exist. This is fine, we just ignore it then.\n-        File[] files = fs.listFiles( storeDir, fileFilter );\n-        if ( files != null )\n-        {\n-            for ( File file : files )\n-            {\n-                fs.deleteRecursively( file );\n-            }\n-        }\n-\n-        File[] txLogs = fs.listFiles( logFiles.logFilesDirectory() );\n-        if ( txLogs != null )\n-        {\n-            for ( File txLog : txLogs )\n-            {\n-                fs.deleteFile( txLog );\n-            }\n-        }\n-\n-        Iterable<FileHandle> iterator = acceptedPageCachedFiles( storeDir )::iterator;\n-        for ( FileHandle fh : iterator )\n-        {\n-            fh.delete();\n-        }\n+      Stream<FileHandle> stream = pageCache.getCachedFileSystem().streamFilesRecursive(storeDir);\n+      Predicate<FileHandle> acceptableFiles = fh -> fileFilter.accept(storeDir, fh.getRelativeFile().getPath());\n+      return stream.filter(acceptableFiles);\n+    } catch (NoSuchFileException e)\n+    {\n+      // This is fine. Just ignore empty or non-existing directories.\n+      return Stream.empty();\n     }\n+  }\n \n-    private Stream<FileHandle> acceptedPageCachedFiles( File storeDir ) throws IOException\n+  public void moveTo(File source, File target, LogFiles logFiles) throws IOException\n+  {\n+    fs.mkdirs(logFiles.logFilesDirectory());\n+    for (File candidate : fs.listFiles(source, fileFilter))\n     {\n-        try\n-        {\n-            Stream<FileHandle> stream = pageCache.getCachedFileSystem().streamFilesRecursive( storeDir );\n-            Predicate<FileHandle> acceptableFiles = fh -> fileFilter.accept( storeDir, fh.getRelativeFile().getPath() );\n-            return stream.filter( acceptableFiles );\n-        }\n-        catch ( NoSuchFileException e )\n-        {\n-            // This is fine. Just ignore empty or non-existing directories.\n-            return Stream.empty();\n-        }\n+      File destination = logFiles.isLogFile(candidate) ? logFiles.logFilesDirectory() : target;\n+      fs.moveToDirectory(candidate, destination);\n     }\n \n-    public void moveTo( File source, File target, LogFiles logFiles ) throws IOException\n+    Iterable<FileHandle> fileHandles = acceptedPageCachedFiles(source)::iterator;\n+    for (FileHandle fh : fileHandles)\n     {\n-        fs.mkdirs( logFiles.logFilesDirectory() );\n-        for ( File candidate : fs.listFiles( source, fileFilter ) )\n-        {\n-            File destination = logFiles.isLogFile( candidate) ? logFiles.logFilesDirectory() : target;\n-            fs.moveToDirectory( candidate, destination );\n-        }\n-\n-        Iterable<FileHandle> fileHandles = acceptedPageCachedFiles( source )::iterator;\n-        for ( FileHandle fh : fileHandles )\n-        {\n-            fh.rename( new File( target, fh.getRelativeFile().getPath() ), StandardCopyOption.REPLACE_EXISTING );\n-        }\n+      fh.rename(new File(target, fh.getRelativeFile().getPath()), StandardCopyOption.REPLACE_EXISTING);\n     }\n+  }\n \n-    public boolean isEmpty( File storeDir, List<File> filesToLookFor ) throws IOException\n+  public boolean isEmpty(File storeDir, List<File> filesToLookFor) throws IOException\n+  {\n+    // 'files' can be null if the directory doesn't exist. This is fine, we just ignore it then.\n+    File[] files = fs.listFiles(storeDir, fileFilter);\n+    if (files != null)\n     {\n-        // 'files' can be null if the directory doesn't exist. This is fine, we just ignore it then.\n-        File[] files = fs.listFiles( storeDir, fileFilter );\n-        if ( files != null )\n+      for (File file : files)\n+      {\n+        if (filesToLookFor.contains(file))\n         {\n-            for ( File file : files )\n-            {\n-                if ( filesToLookFor.contains( file ) )\n-                {\n-                    return false;\n-                }\n-            }\n+          return false;\n         }\n-\n-        Iterable<FileHandle> fileHandles = acceptedPageCachedFiles( storeDir )::iterator;\n-        for ( FileHandle fh : fileHandles )\n-        {\n-            if ( filesToLookFor.contains( fh.getFile() ) )\n-            {\n-                return false;\n-            }\n-        }\n-\n-        return true;\n+      }\n     }\n \n-    public StoreId readStoreId( File storeDir ) throws IOException\n+    Iterable<FileHandle> fileHandles = acceptedPageCachedFiles(storeDir)::iterator;\n+    for (FileHandle fh : fileHandles)\n     {\n-        File neoStoreFile = new File( storeDir, MetaDataStore.DEFAULT_NAME );\n-        org.neo4j.kernel.impl.store.StoreId kernelStoreId = MetaDataStore.getStoreId( pageCache, neoStoreFile );\n-        return new StoreId( kernelStoreId.getCreationTime(), kernelStoreId.getRandomId(),\n-                kernelStoreId.getUpgradeTime(), kernelStoreId.getUpgradeId() );\n+      if (filesToLookFor.contains(fh.getFile()))\n+      {\n+        return false;\n+      }\n     }\n+\n+    return true;\n+  }\n+\n+  public StoreId readStoreId(File storeDir) throws IOException\n+  {\n+    File neoStoreFile = new File(storeDir, MetaDataStore.DEFAULT_NAME);\n+    org.neo4j.kernel.impl.store.StoreId kernelStoreId = MetaDataStore.getStoreId(pageCache, neoStoreFile);\n+    return new StoreId(kernelStoreId.getCreationTime(), kernelStoreId.getRandomId(),\n+        kernelStoreId.getUpgradeTime(), kernelStoreId.getUpgradeId());\n+  }\n }\n",
            "diff_size": 152
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "81",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1236/StoreFiles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1236/StoreFiles.java\nindex d380f6dc00b..799edf97cf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1236/StoreFiles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1236/StoreFiles.java\n@@ -40,8 +40,7 @@ public class StoreFiles\n     private static final FilenameFilter STORE_FILE_FILTER = ( dir, name ) ->\n     {\n         // Skip log files and tx files from temporary database\n-        return !name.startsWith( \"metrics\" ) && !name.startsWith( \"temp-copy\" ) &&\n-               !name.startsWith( \"raft-messages.\" ) && !name.startsWith( \"debug.\" ) &&\n+        return !name.startsWith( \"metrics\" ) && !name.startsWith( \"temp-copy\" ) &&!name.startsWith( \"raft-messages.\" ) && !name.startsWith( \"debug.\" ) &&\n                !name.startsWith( \"data\" ) && !name.startsWith( \"store_lock\" );\n     };\n \n@@ -151,7 +150,6 @@ public class StoreFiles\n     {\n         File neoStoreFile = new File( storeDir, MetaDataStore.DEFAULT_NAME );\n         org.neo4j.kernel.impl.store.StoreId kernelStoreId = MetaDataStore.getStoreId( pageCache, neoStoreFile );\n-        return new StoreId( kernelStoreId.getCreationTime(), kernelStoreId.getRandomId(),\n-                kernelStoreId.getUpgradeTime(), kernelStoreId.getUpgradeId() );\n+        return new StoreId( kernelStoreId.getCreationTime(), kernelStoreId.getRandomId(), kernelStoreId.getUpgradeTime(), kernelStoreId.getUpgradeId() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1786",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1786/ParallelBatchImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1786/ParallelBatchImporter.java\nindex 49476300eb5..89090029a41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1786/ParallelBatchImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1786/ParallelBatchImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.io.File;\n@@ -46,53 +47,53 @@ import static org.neo4j.unsafe.impl.batchimport.ImportLogic.instantiateNeoStores\n  */\n public class ParallelBatchImporter extends LifecycleAdapter implements BatchImporter\n {\n-    private final PageCache externalPageCache;\n-    private final File storeDir;\n-    private final FileSystemAbstraction fileSystem;\n-    private final Configuration config;\n-    private final LogService logService;\n-    private final Config dbConfig;\n-    private final RecordFormats recordFormats;\n-    private final ExecutionMonitor executionMonitor;\n-    private final AdditionalInitialIds additionalInitialIds;\n-    private final ImportLogic.Monitor monitor;\n+  private final PageCache externalPageCache;\n+  private final File storeDir;\n+  private final FileSystemAbstraction fileSystem;\n+  private final Configuration config;\n+  private final LogService logService;\n+  private final Config dbConfig;\n+  private final RecordFormats recordFormats;\n+  private final ExecutionMonitor executionMonitor;\n+  private final AdditionalInitialIds additionalInitialIds;\n+  private final ImportLogic.Monitor monitor;\n \n-    public ParallelBatchImporter( File storeDir, FileSystemAbstraction fileSystem, PageCache externalPageCache,\n-            Configuration config, LogService logService, ExecutionMonitor executionMonitor,\n-            AdditionalInitialIds additionalInitialIds, Config dbConfig, RecordFormats recordFormats, ImportLogic.Monitor monitor )\n-    {\n-        this.externalPageCache = externalPageCache;\n-        this.storeDir = storeDir;\n-        this.fileSystem = fileSystem;\n-        this.config = config;\n-        this.logService = logService;\n-        this.dbConfig = dbConfig;\n-        this.recordFormats = recordFormats;\n-        this.executionMonitor = executionMonitor;\n-        this.additionalInitialIds = additionalInitialIds;\n-        this.monitor = monitor;\n-    }\n+  public ParallelBatchImporter(File storeDir, FileSystemAbstraction fileSystem, PageCache externalPageCache,\n+                               Configuration config, LogService logService, ExecutionMonitor executionMonitor,\n+                               AdditionalInitialIds additionalInitialIds, Config dbConfig, RecordFormats recordFormats, ImportLogic.Monitor monitor)\n+  {\n+    this.externalPageCache = externalPageCache;\n+    this.storeDir = storeDir;\n+    this.fileSystem = fileSystem;\n+    this.config = config;\n+    this.logService = logService;\n+    this.dbConfig = dbConfig;\n+    this.recordFormats = recordFormats;\n+    this.executionMonitor = executionMonitor;\n+    this.additionalInitialIds = additionalInitialIds;\n+    this.monitor = monitor;\n+  }\n \n-    @Override\n-    public void doImport( Input input ) throws IOException\n+  @Override\n+  public void doImport(Input input) throws IOException\n+  {\n+    try (BatchingNeoStores store = instantiateNeoStores(fileSystem, storeDir, externalPageCache, recordFormats,\n+        config, logService, additionalInitialIds, dbConfig);\n+         ImportLogic logic = new ImportLogic(storeDir, fileSystem, store, config, logService,\n+             executionMonitor, recordFormats, monitor))\n     {\n-        try ( BatchingNeoStores store = instantiateNeoStores( fileSystem, storeDir, externalPageCache, recordFormats,\n-                      config, logService, additionalInitialIds, dbConfig );\n-              ImportLogic logic = new ImportLogic( storeDir, fileSystem, store, config, logService,\n-                      executionMonitor, recordFormats, monitor ) )\n-        {\n-            store.createNew();\n-            logic.initialize( input );\n+      store.createNew();\n+      logic.initialize(input);\n \n-            logic.importNodes();\n-            logic.prepareIdMapper();\n-            logic.importRelationships();\n-            logic.calculateNodeDegrees();\n-            logic.linkRelationshipsOfAllTypes();\n-            logic.defragmentRelationshipGroups();\n-            logic.buildCountsStore();\n+      logic.importNodes();\n+      logic.prepareIdMapper();\n+      logic.importRelationships();\n+      logic.calculateNodeDegrees();\n+      logic.linkRelationshipsOfAllTypes();\n+      logic.defragmentRelationshipGroups();\n+      logic.buildCountsStore();\n \n-            logic.success();\n-        }\n+      logic.success();\n     }\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1786/ParallelBatchImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1786/ParallelBatchImporter.java\nindex 49476300eb5..3dc86462297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1786/ParallelBatchImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1786/ParallelBatchImporter.java\n@@ -76,23 +76,20 @@ public class ParallelBatchImporter extends LifecycleAdapter implements BatchImpo\n     @Override\n     public void doImport( Input input ) throws IOException\n     {\n-        try ( BatchingNeoStores store = instantiateNeoStores( fileSystem, storeDir, externalPageCache, recordFormats,\n-                      config, logService, additionalInitialIds, dbConfig );\n-              ImportLogic logic = new ImportLogic( storeDir, fileSystem, store, config, logService,\n+        try ( BatchingNeoStores store = instantiateNeoStores( fileSystem, storeDir, externalPageCache, recordFormats, config, logService, additionalInitialIds, dbConfig );\n+ImportLogic logic = new ImportLogic( storeDir, fileSystem, store, config, logService,\n                       executionMonitor, recordFormats, monitor ) )\n-        {\n+{\n             store.createNew();\n             logic.initialize( input );\n-\n-            logic.importNodes();\n+logic.importNodes();\n             logic.prepareIdMapper();\n             logic.importRelationships();\n             logic.calculateNodeDegrees();\n             logic.linkRelationshipsOfAllTypes();\n             logic.defragmentRelationshipGroups();\n             logic.buildCountsStore();\n-\n-            logic.success();\n+logic.success();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
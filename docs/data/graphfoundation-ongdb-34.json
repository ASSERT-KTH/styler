{
    "project_name": "graphfoundation-ongdb",
    "error_id": "34",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/34/RecordCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/34/RecordCursor.java\nindex 40cfd47f4b1..2443055f7c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/34/RecordCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/34/RecordCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.util.ArrayList;\n@@ -38,128 +39,128 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n  */\n public interface RecordCursor<R extends AbstractBaseRecord> extends Cursor<R>\n {\n-    /**\n-     * Acquires this cursor, placing it at record {@code id} {@link RecordLoad} for loading record data.\n-     *\n-     * @param id record id to start at.\n-     * @param mode {@link RecordLoad} for loading.\n-     * @return this record cursor.\n-     */\n-    RecordCursor<R> acquire( long id, RecordLoad mode );\n-\n-    /**\n-     * Moves this cursor to the specified {@code id} with the specified {@link RecordLoad mode} without actually\n-     * fetching the record. {@link #next()} and {@link #get()} could be used next to fetch the record.\n-     *\n-     * @param id the id of the record.\n-     * @param mode the mode for subsequent loading.\n-     */\n-    void placeAt( long id, RecordLoad mode );\n-\n-    /**\n-     * Moves to the next record and reads it. If this is the first call since {@link #acquire(long, RecordLoad)}\n-     * the record specified in acquire will be read, otherwise the next record in the chain,\n-     * {@link RecordStore#getNextRecordReference(AbstractBaseRecord)}.\n-     * The read record can be accessed using {@link #get()}.\n-     *\n-     * @return whether or not that record is in use.\n-     */\n+  /**\n+   * Acquires this cursor, placing it at record {@code id} {@link RecordLoad} for loading record data.\n+   *\n+   * @param id   record id to start at.\n+   * @param mode {@link RecordLoad} for loading.\n+   * @return this record cursor.\n+   */\n+  RecordCursor<R> acquire(long id, RecordLoad mode);\n+\n+  /**\n+   * Moves this cursor to the specified {@code id} with the specified {@link RecordLoad mode} without actually\n+   * fetching the record. {@link #next()} and {@link #get()} could be used next to fetch the record.\n+   *\n+   * @param id   the id of the record.\n+   * @param mode the mode for subsequent loading.\n+   */\n+  void placeAt(long id, RecordLoad mode);\n+\n+  /**\n+   * Moves to the next record and reads it. If this is the first call since {@link #acquire(long, RecordLoad)}\n+   * the record specified in acquire will be read, otherwise the next record in the chain,\n+   * {@link RecordStore#getNextRecordReference(AbstractBaseRecord)}.\n+   * The read record can be accessed using {@link #get()}.\n+   *\n+   * @return whether or not that record is in use.\n+   */\n+  @Override\n+  boolean next();\n+\n+  /**\n+   * An additional way of placing this cursor at an arbitrary record id. This is useful when stride,\n+   * as opposed to following record chains, is controlled from the outside.\n+   * The read record can be accessed using {@link #get()}.\n+   *\n+   * @param id record id to place cursor at.\n+   * @return whether or not that record is in use.\n+   */\n+  boolean next(long id);\n+\n+  /**\n+   * An additional way of placing this cursor at an arbitrary record id.\n+   * Calling this method will not advance the \"current id\" as to change which {@link #next()} will load next.\n+   * This method is useful when there's an opportunity to load a record from an already acquired\n+   * {@link PageCursor} and potentially even an already pinned page.\n+   *\n+   * @param id     record id to place cursor at.\n+   * @param record record to load the record data into.\n+   * @param mode   {@link RecordLoad} mode temporarily overriding the default provided in\n+   *               {@link #acquire(long, RecordLoad)}.\n+   * @return whether or not that record is in use.\n+   */\n+  boolean next(long id, R record, RecordLoad mode);\n+\n+  /**\n+   * Read all records in the chain starting from the id this cursor is positioned at using either\n+   * {@link #acquire(long, RecordLoad)} or {@link #placeAt(long, RecordLoad)}. Each next record in the chain is\n+   * determined by {@link RecordStore#getNextRecordReference(AbstractBaseRecord)}. Each record placed in the\n+   * resulting list is a clone of the reused record.\n+   *\n+   * @return records of the chain in list.\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  default List<R> getAll()\n+  {\n+    List<R> recordList = new ArrayList<>();\n+    while (next())\n+    {\n+      recordList.add((R) get().clone());\n+    }\n+    return recordList;\n+  }\n+\n+  class Delegator<R extends AbstractBaseRecord> implements RecordCursor<R>\n+  {\n+    private final RecordCursor<R> actual;\n+\n+    public Delegator(RecordCursor<R> actual)\n+    {\n+      this.actual = actual;\n+    }\n+\n     @Override\n-    boolean next();\n-\n-    /**\n-     * An additional way of placing this cursor at an arbitrary record id. This is useful when stride,\n-     * as opposed to following record chains, is controlled from the outside.\n-     * The read record can be accessed using {@link #get()}.\n-     *\n-     * @param id record id to place cursor at.\n-     * @return whether or not that record is in use.\n-     */\n-    boolean next( long id );\n-\n-     /**\n-      * An additional way of placing this cursor at an arbitrary record id.\n-      * Calling this method will not advance the \"current id\" as to change which {@link #next()} will load next.\n-      * This method is useful when there's an opportunity to load a record from an already acquired\n-      * {@link PageCursor} and potentially even an already pinned page.\n-      *\n-      * @param id record id to place cursor at.\n-      * @param record record to load the record data into.\n-      * @param mode {@link RecordLoad} mode temporarily overriding the default provided in\n-      * {@link #acquire(long, RecordLoad)}.\n-      * @return whether or not that record is in use.\n-      */\n-    boolean next( long id, R record, RecordLoad mode );\n-\n-    /**\n-     * Read all records in the chain starting from the id this cursor is positioned at using either\n-     * {@link #acquire(long, RecordLoad)} or {@link #placeAt(long, RecordLoad)}. Each next record in the chain is\n-     * determined by {@link RecordStore#getNextRecordReference(AbstractBaseRecord)}. Each record placed in the\n-     * resulting list is a clone of the reused record.\n-     *\n-     * @return records of the chain in list.\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    default List<R> getAll()\n+    public R get()\n     {\n-        List<R> recordList = new ArrayList<>();\n-        while ( next() )\n-        {\n-            recordList.add( (R) get().clone() );\n-        }\n-        return recordList;\n+      return actual.get();\n     }\n \n-    class Delegator<R extends AbstractBaseRecord> implements RecordCursor<R>\n+    @Override\n+    public boolean next()\n+    {\n+      return actual.next();\n+    }\n+\n+    @Override\n+    public void placeAt(long id, RecordLoad mode)\n+    {\n+      actual.placeAt(id, mode);\n+    }\n+\n+    @Override\n+    public void close()\n+    {\n+      actual.close();\n+    }\n+\n+    @Override\n+    public RecordCursor<R> acquire(long id, RecordLoad mode)\n+    {\n+      actual.acquire(id, mode);\n+      return this;\n+    }\n+\n+    @Override\n+    public boolean next(long id)\n+    {\n+      return actual.next(id);\n+    }\n+\n+    @Override\n+    public boolean next(long id, R record, RecordLoad mode)\n     {\n-        private final RecordCursor<R> actual;\n-\n-        public Delegator( RecordCursor<R> actual )\n-        {\n-            this.actual = actual;\n-        }\n-\n-        @Override\n-        public R get()\n-        {\n-            return actual.get();\n-        }\n-\n-        @Override\n-        public boolean next()\n-        {\n-            return actual.next();\n-        }\n-\n-        @Override\n-        public void placeAt( long id, RecordLoad mode )\n-        {\n-            actual.placeAt( id, mode );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            actual.close();\n-        }\n-\n-        @Override\n-        public RecordCursor<R> acquire( long id, RecordLoad mode )\n-        {\n-            actual.acquire( id, mode );\n-            return this;\n-        }\n-\n-        @Override\n-        public boolean next( long id )\n-        {\n-            return actual.next( id );\n-        }\n-\n-        @Override\n-        public boolean next( long id, R record, RecordLoad mode )\n-        {\n-            return actual.next( id, record, mode );\n-        }\n+      return actual.next(id, record, mode);\n     }\n+  }\n }\n",
            "diff_size": 207
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/34/RecordCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/34/RecordCursor.java\nindex 40cfd47f4b1..0f90e7f2243 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/34/RecordCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/34/RecordCursor.java\n@@ -77,7 +77,7 @@ public interface RecordCursor<R extends AbstractBaseRecord> extends Cursor<R>\n      */\n     boolean next( long id );\n \n-     /**\n+/**\n       * An additional way of placing this cursor at an arbitrary record id.\n       * Calling this method will not advance the \"current id\" as to change which {@link #next()} will load next.\n       * This method is useful when there's an opportunity to load a record from an already acquired\n@@ -89,7 +89,7 @@ public interface RecordCursor<R extends AbstractBaseRecord> extends Cursor<R>\n       * {@link #acquire(long, RecordLoad)}.\n       * @return whether or not that record is in use.\n       */\n-    boolean next( long id, R record, RecordLoad mode );\n+boolean next( long id, R record, RecordLoad mode );\n \n     /**\n      * Read all records in the chain starting from the id this cursor is positioned at using either\n@@ -107,7 +107,8 @@ public interface RecordCursor<R extends AbstractBaseRecord> extends Cursor<R>\n         {\n             recordList.add( (R) get().clone() );\n         }\n-        return recordList;\n+\n+return recordList;\n     }\n \n     class Delegator<R extends AbstractBaseRecord> implements RecordCursor<R>\n@@ -162,4 +163,4 @@ public interface RecordCursor<R extends AbstractBaseRecord> extends Cursor<R>\n             return actual.next( id, record, mode );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
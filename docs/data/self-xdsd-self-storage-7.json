{
    "project_name": "self-xdsd-self-storage",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "81",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public void iteratesUsers() {\n        final Users users = new SelfJooq(new H2Database()).users();\n        for(final User user : users) {\n            MatcherAssert.assertThat(user, Matchers.notNullValue());\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/7/SelfUsersITCase.java\nindex 403f6a512c7..077a678ebc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/7/SelfUsersITCase.java\n@@ -78,7 +78,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/7/SelfUsersITCase.java\nindex 403f6a512c7..99cc44c64e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/7/SelfUsersITCase.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.User;\n@@ -31,6 +32,7 @@ import org.junit.Test;\n /**\n  * Integration tests for {@link SelfUsers}.\n  * Read the package-info.java if you want to run these tests manually.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.1\n@@ -78,7 +80,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'\"vlad\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'\"github\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'\"vlad\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'\"github\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'\"vlad@example.com\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'\"missing\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'\"github\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/7/SelfUsersITCase.java\nindex 403f6a512c7..7875b3c7d29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/7/SelfUsersITCase.java\n@@ -43,19 +43,28 @@ public final class SelfUsersITCase {\n      */\n     @Test\n     public void returnsUser() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"vlad\", \"github\");\n+        final Users users = new SelfJooq(\n+    new H2Database()).users();\n+        final User found = users.user(\n+    \"vlad\",\n+\"github\");\n         MatcherAssert.assertThat(\n             found.username(),\n-            Matchers.equalTo(\"vlad\")\n+            Matchers.equalTo(\n+    \"vlad\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.provider().name(),\n-            Matchers.equalTo(\"github\")\n+            Matchers.equalTo(\n+    \"github\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.email(),\n-            Matchers.equalTo(\"vlad@example.com\")\n+            Matchers.equalTo(\n+    \"vlad@example.com\"\n+    )\n         );\n     }\n \n@@ -64,8 +73,11 @@ public final class SelfUsersITCase {\n      */\n     @Test\n     public void returnsNullIfUserMissing() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"missing\", \"github\");\n+        final Users users = new SelfJooq(\n+    new H2Database()).users();\n+        final User found = users.user(\n+    \"missing\",\n+\"github\");\n         MatcherAssert.assertThat(\n             found,\n             Matchers.nullValue()\n@@ -77,10 +89,10 @@ public final class SelfUsersITCase {\n      */\n     @Test\n     public void iteratesUsers() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n+        final Users users = new SelfJooq(\n+    new H2Database()).users();\n         for(final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "31",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "64",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "34",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "68",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 35, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "37",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 26, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 29, expected level should be 26.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 41, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 41, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 37, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/7/SelfUsersITCase.java\nindex 403f6a512c7..d29f57d8916 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/7/SelfUsersITCase.java\n@@ -35,52 +35,75 @@ import org.junit.Test;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class SelfUsersITCase {\n \n     /**\n      * SelfUsers can find and return a Users from the\n      * Database.\n      */\n+\n+\n     @Test\n     public void returnsUser() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"vlad\", \"github\");\n-        MatcherAssert.assertThat(\n-            found.username(),\n-            Matchers.equalTo(\"vlad\")\n-        );\n-        MatcherAssert.assertThat(\n-            found.provider().name(),\n-            Matchers.equalTo(\"github\")\n-        );\n-        MatcherAssert.assertThat(\n-            found.email(),\n-            Matchers.equalTo(\"vlad@example.com\")\n-        );\n+        final Users users= new SelfJooq(\n+new H2Database()\n+                           ) .users();\n+\n+\n+        final User found= users.user(\n+                              \"vlad\", \"github\"\n+                          ); MatcherAssert.assertThat(\n+                                 found.username(),\n+                                 Matchers.equalTo(\n+                                 \"vlad\" )\n+                             ); MatcherAssert.assertThat(\n+                                    found.provider() .name(),\n+                                    Matchers.equalTo(\n+                                    \"github\" )\n+                                ); MatcherAssert.assertThat(\n+                                       found.email(),\n+                                       Matchers.equalTo(\n+                                       \"vlad@example.com\" )\n+                                   );\n     }\n \n     /**\n      * SelfUsers returns null if the User is not found.\n      */\n+\n     @Test\n     public void returnsNullIfUserMissing() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        final User found = users.user(\"missing\", \"github\");\n-        MatcherAssert.assertThat(\n-            found,\n-            Matchers.nullValue()\n-        );\n+        final Users users= new SelfJooq(\n+new H2Database()\n+                           ) .users();\n+\n+\n+        final User found= users.user(\n+                              \"missing\", \"github\"\n+                          ); MatcherAssert.assertThat(\n+                                 found,\n+                                 Matchers.nullValue()\n+                             );\n     }\n \n     /**\n      * SelfUsers can be iterated.\n      */\n+\n     @Test\n     public void iteratesUsers() {\n-        final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n-            MatcherAssert.assertThat(user, Matchers.notNullValue());\n-        }\n-    }\n+        final Users users= new SelfJooq(\n+new H2Database()\n+                           ) .users();\n+\n \n-}\n+        for( final User user: users) {\n+                                         MatcherAssert.assertThat(\n+                                             user,\n+                                             Matchers.notNullValue()\n+                                         );\n+                                     }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/7/SelfUsersITCase.java\nindex 403f6a512c7..077a678ebc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/7/SelfUsersITCase.java\n@@ -78,7 +78,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/7/SelfUsersITCase.java\nindex 403f6a512c7..077a678ebc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/7/SelfUsersITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/7/SelfUsersITCase.java\n@@ -78,7 +78,7 @@ public final class SelfUsersITCase {\n     @Test\n     public void iteratesUsers() {\n         final Users users = new SelfJooq(new H2Database()).users();\n-        for(final User user : users) {\n+        for (final User user : users) {\n             MatcherAssert.assertThat(user, Matchers.notNullValue());\n         }\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
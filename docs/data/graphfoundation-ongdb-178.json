{
    "project_name": "graphfoundation-ongdb",
    "error_id": "178",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/178/XForwardUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/178/XForwardUtil.java\nindex 6c191f14c6e..7ed2d07a522 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/178/XForwardUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/178/XForwardUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import java.net.URI;\n@@ -24,129 +25,127 @@ import javax.ws.rs.core.UriBuilder;\n \n public class XForwardUtil\n {\n-    public static final String X_FORWARD_HOST_HEADER_KEY = \"X-Forwarded-Host\";\n-    public static final String X_FORWARD_PROTO_HEADER_KEY = \"X-Forwarded-Proto\";\n+  public static final String X_FORWARD_HOST_HEADER_KEY = \"X-Forwarded-Host\";\n+  public static final String X_FORWARD_PROTO_HEADER_KEY = \"X-Forwarded-Proto\";\n+\n+  private XForwardUtil()\n+  {\n+  }\n+\n+  public static String externalUri(String internalUri, String xForwardedHost, String xForwardedProto)\n+  {\n+    return externalUri(UriBuilder.fromUri(internalUri), xForwardedHost, xForwardedProto).toString();\n+  }\n+\n+  public static URI externalUri(URI internalUri, String xForwardedHost, String xForwardedProto)\n+  {\n+    return externalUri(UriBuilder.fromUri(internalUri), xForwardedHost, xForwardedProto);\n+  }\n \n-    private XForwardUtil()\n+  private static URI externalUri(UriBuilder builder, String xForwardedHost, String xForwardedProto)\n+  {\n+    ForwardedHost forwardedHost = new ForwardedHost(xForwardedHost);\n+    ForwardedProto forwardedProto = new ForwardedProto(xForwardedProto);\n+\n+    if (forwardedHost.isValid)\n     {\n+      builder.host(forwardedHost.getHost());\n+\n+      if (forwardedHost.hasExplicitlySpecifiedPort())\n+      {\n+        builder.port(forwardedHost.getPort());\n+      }\n     }\n \n-    public static String externalUri( String internalUri, String xForwardedHost, String xForwardedProto )\n+    if (forwardedProto.isValid())\n     {\n-        return externalUri( UriBuilder.fromUri( internalUri ), xForwardedHost, xForwardedProto ).toString();\n+      builder.scheme(forwardedProto.getScheme());\n     }\n \n-    public static URI externalUri( URI internalUri, String xForwardedHost, String xForwardedProto )\n+    return builder.build();\n+  }\n+\n+  private static final class ForwardedHost\n+  {\n+    String host;\n+    int port = -1;\n+    boolean isValid;\n+\n+    ForwardedHost(String headerValue)\n     {\n-        return externalUri( UriBuilder.fromUri( internalUri ), xForwardedHost, xForwardedProto );\n+      if (headerValue == null)\n+      {\n+        this.isValid = false;\n+        return;\n+      }\n+\n+      String firstHostInXForwardedHostHeader = headerValue.split(\",\")[0].trim();\n+\n+      try\n+      {\n+        UriBuilder.fromUri(firstHostInXForwardedHostHeader).build();\n+      } catch (IllegalArgumentException ex)\n+      {\n+        this.isValid = false;\n+        return;\n+      }\n+\n+      String[] strings = firstHostInXForwardedHostHeader.split(\":\");\n+      if (strings.length > 0)\n+      {\n+        this.host = strings[0];\n+        isValid = true;\n+      }\n+      if (strings.length > 1)\n+      {\n+        this.port = Integer.valueOf(strings[1]);\n+        isValid = true;\n+      }\n+      if (strings.length > 2)\n+      {\n+        this.isValid = false;\n+      }\n     }\n \n-    private static URI externalUri( UriBuilder builder, String xForwardedHost, String xForwardedProto )\n+    boolean hasExplicitlySpecifiedPort()\n     {\n-        ForwardedHost forwardedHost = new ForwardedHost( xForwardedHost );\n-        ForwardedProto forwardedProto = new ForwardedProto( xForwardedProto );\n+      return port >= 0;\n+    }\n \n-        if ( forwardedHost.isValid )\n-        {\n-            builder.host( forwardedHost.getHost() );\n+    String getHost()\n+    {\n+      return host;\n+    }\n \n-            if ( forwardedHost.hasExplicitlySpecifiedPort() )\n-            {\n-                builder.port( forwardedHost.getPort() );\n-            }\n-        }\n+    int getPort()\n+    {\n+      return port;\n+    }\n+  }\n \n-        if ( forwardedProto.isValid() )\n-        {\n-            builder.scheme( forwardedProto.getScheme() );\n-        }\n+  private static final class ForwardedProto\n+  {\n+    final String headerValue;\n \n-        return builder.build();\n+    ForwardedProto(String headerValue)\n+    {\n+      if (headerValue != null)\n+      {\n+        this.headerValue = headerValue;\n+      } else\n+      {\n+        this.headerValue = \"\";\n+      }\n     }\n \n-    private static final class ForwardedHost\n+    boolean isValid()\n     {\n-        String host;\n-        int port = -1;\n-        boolean isValid;\n-\n-        ForwardedHost( String headerValue )\n-        {\n-            if ( headerValue == null )\n-            {\n-                this.isValid = false;\n-                return;\n-            }\n-\n-            String firstHostInXForwardedHostHeader = headerValue.split( \",\" )[0].trim();\n-\n-            try\n-            {\n-                UriBuilder.fromUri( firstHostInXForwardedHostHeader ).build();\n-            }\n-            catch ( IllegalArgumentException ex )\n-            {\n-                this.isValid = false;\n-                return;\n-            }\n-\n-            String[] strings = firstHostInXForwardedHostHeader.split( \":\" );\n-            if ( strings.length > 0 )\n-            {\n-                this.host = strings[0];\n-                isValid = true;\n-            }\n-            if ( strings.length > 1 )\n-            {\n-                this.port = Integer.valueOf( strings[1] );\n-                isValid = true;\n-            }\n-            if ( strings.length > 2 )\n-            {\n-                this.isValid = false;\n-            }\n-        }\n-\n-        boolean hasExplicitlySpecifiedPort()\n-        {\n-            return port >= 0;\n-        }\n-\n-        String getHost()\n-        {\n-            return host;\n-        }\n-\n-        int getPort()\n-        {\n-            return port;\n-        }\n+      return headerValue.toLowerCase().equals(\"http\") || headerValue.toLowerCase().equals(\"https\");\n     }\n \n-    private static final class ForwardedProto\n+    String getScheme()\n     {\n-        final String headerValue;\n-\n-        ForwardedProto( String headerValue )\n-        {\n-            if ( headerValue != null )\n-            {\n-                this.headerValue = headerValue;\n-            }\n-            else\n-            {\n-                this.headerValue = \"\";\n-            }\n-        }\n-\n-        boolean isValid()\n-        {\n-            return headerValue.toLowerCase().equals( \"http\" ) || headerValue.toLowerCase().equals( \"https\" );\n-        }\n-\n-        String getScheme()\n-        {\n-            return headerValue;\n-        }\n+      return headerValue;\n     }\n+  }\n }\n",
            "diff_size": 179
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "column": "32",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "20",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/178/XForwardUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/178/XForwardUtil.java\nindex 6c191f14c6e..0abae7f36e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/178/XForwardUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/178/XForwardUtil.java\n@@ -25,7 +25,8 @@ import javax.ws.rs.core.UriBuilder;\n public class XForwardUtil\n {\n     public static final String X_FORWARD_HOST_HEADER_KEY = \"X-Forwarded-Host\";\n-    public static final String X_FORWARD_PROTO_HEADER_KEY = \"X-Forwarded-Proto\";\n+\n+public static final String X_FORWARD_PROTO_HEADER_KEY = \"X-Forwarded-Proto\";\n \n     private XForwardUtil()\n     {\n@@ -45,12 +46,10 @@ public class XForwardUtil\n     {\n         ForwardedHost forwardedHost = new ForwardedHost( xForwardedHost );\n         ForwardedProto forwardedProto = new ForwardedProto( xForwardedProto );\n-\n-        if ( forwardedHost.isValid )\n+if ( forwardedHost.isValid )\n         {\n             builder.host( forwardedHost.getHost() );\n-\n-            if ( forwardedHost.hasExplicitlySpecifiedPort() )\n+if ( forwardedHost.hasExplicitlySpecifiedPort() )\n             {\n                 builder.port( forwardedHost.getPort() );\n             }\n@@ -91,17 +90,19 @@ public class XForwardUtil\n             }\n \n             String[] strings = firstHostInXForwardedHostHeader.split( \":\" );\n-            if ( strings.length > 0 )\n+            if ( strings.length> 0 )\n             {\n                 this.host = strings[0];\n                 isValid = true;\n             }\n-            if ( strings.length > 1 )\n+\n+if ( strings.length> 1 )\n             {\n                 this.port = Integer.valueOf( strings[1] );\n                 isValid = true;\n             }\n-            if ( strings.length > 2 )\n+\n+if ( strings.length> 2 )\n             {\n                 this.isValid = false;\n             }\n@@ -149,4 +150,4 @@ public class XForwardUtil\n             return headerValue;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
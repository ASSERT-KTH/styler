{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3587",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "121",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "246",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3587/NativeSchemaIndexPopulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3587/NativeSchemaIndexPopulator.java\nindex 981cac299a2..c4d9fc09446 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3587/NativeSchemaIndexPopulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3587/NativeSchemaIndexPopulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.File;\n@@ -58,340 +59,336 @@ import static org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor.Type.UNIQU\n /**\n  * {@link IndexPopulator} backed by a {@link GBPTree}.\n  *\n- * @param <KEY> type of {@link NativeSchemaKey}.\n+ * @param <KEY>   type of {@link NativeSchemaKey}.\n  * @param <VALUE> type of {@link NativeSchemaValue}.\n  */\n public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NativeSchemaIndex<KEY,VALUE> implements IndexPopulator\n+    extends NativeSchemaIndex<KEY, VALUE> implements IndexPopulator\n {\n-    public static final byte BYTE_FAILED = 0;\n-    static final byte BYTE_ONLINE = 1;\n-    static final byte BYTE_POPULATING = 2;\n-\n-    private final KEY treeKey;\n-    private final VALUE treeValue;\n-    private final UniqueIndexSampler uniqueSampler;\n-    private final NonUniqueIndexSampler nonUniqueSampler;\n-    final IndexSamplingConfig samplingConfig;\n-\n-    private WorkSync<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>> additionsWorkSync;\n-    private WorkSync<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>> updatesWorkSync;\n-\n-    private byte[] failureBytes;\n-    private boolean dropped;\n-    private boolean closed;\n-\n-    NativeSchemaIndexPopulator( PageCache pageCache, FileSystemAbstraction fs, File storeFile, Layout<KEY,VALUE> layout,\n-                                IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig )\n+  public static final byte BYTE_FAILED = 0;\n+  static final byte BYTE_ONLINE = 1;\n+  static final byte BYTE_POPULATING = 2;\n+\n+  private final KEY treeKey;\n+  private final VALUE treeValue;\n+  private final UniqueIndexSampler uniqueSampler;\n+  private final NonUniqueIndexSampler nonUniqueSampler;\n+  final IndexSamplingConfig samplingConfig;\n+\n+  private WorkSync<IndexUpdateApply<KEY, VALUE>, IndexUpdateWork<KEY, VALUE>> additionsWorkSync;\n+  private WorkSync<IndexUpdateApply<KEY, VALUE>, IndexUpdateWork<KEY, VALUE>> updatesWorkSync;\n+\n+  private byte[] failureBytes;\n+  private boolean dropped;\n+  private boolean closed;\n+\n+  NativeSchemaIndexPopulator(PageCache pageCache, FileSystemAbstraction fs, File storeFile, Layout<KEY, VALUE> layout,\n+                             IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig)\n+  {\n+    super(pageCache, fs, storeFile, layout, monitor, descriptor, indexId);\n+    this.treeKey = layout.newKey();\n+    this.treeValue = layout.newValue();\n+    this.samplingConfig = samplingConfig;\n+    switch (descriptor.type())\n     {\n-        super( pageCache, fs, storeFile, layout, monitor, descriptor, indexId );\n-        this.treeKey = layout.newKey();\n-        this.treeValue = layout.newValue();\n-        this.samplingConfig = samplingConfig;\n-        switch ( descriptor.type() )\n-        {\n-        case GENERAL:\n-            uniqueSampler = null;\n-            nonUniqueSampler = new DefaultNonUniqueIndexSampler( samplingConfig.sampleSizeLimit() );\n-            break;\n-        case UNIQUE:\n-            uniqueSampler = new UniqueIndexSampler();\n-            nonUniqueSampler = null;\n-            break;\n-        default:\n-            throw new IllegalArgumentException( \"Unexpected index type \" + descriptor.type() );\n-        }\n+      case GENERAL:\n+        uniqueSampler = null;\n+        nonUniqueSampler = new DefaultNonUniqueIndexSampler(samplingConfig.sampleSizeLimit());\n+        break;\n+      case UNIQUE:\n+        uniqueSampler = new UniqueIndexSampler();\n+        nonUniqueSampler = null;\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\"Unexpected index type \" + descriptor.type());\n     }\n-\n-    public void clear() throws IOException\n+  }\n+\n+  public void clear() throws IOException\n+  {\n+    gbpTreeFileUtil.deleteFileIfPresent(storeFile);\n+  }\n+\n+  @Override\n+  public synchronized void create() throws IOException\n+  {\n+    create(new NativeSchemaIndexHeaderWriter(BYTE_POPULATING));\n+  }\n+\n+  protected synchronized void create(Consumer<PageCursor> headerWriter) throws IOException\n+  {\n+    assertNotDropped();\n+    assertNotClosed();\n+\n+    gbpTreeFileUtil.deleteFileIfPresent(storeFile);\n+    instantiateTree(RecoveryCleanupWorkCollector.immediate(), headerWriter);\n+\n+    // true:  tree uniqueness is (value,entityId)\n+    // false: tree uniqueness is (value) <-- i.e. more strict\n+    additionsWorkSync = new WorkSync<>(new IndexUpdateApply<>(tree, treeKey, treeValue, getMainConflictDetector()));\n+\n+    // for updates we have to have uniqueness on (value,entityId) to allow for intermediary violating updates.\n+    // there are added conflict checks after updates have been applied.\n+    updatesWorkSync = new WorkSync<>(new IndexUpdateApply<>(tree, treeKey, treeValue, new ConflictDetectingValueMerger<>(true)));\n+  }\n+\n+  ConflictDetectingValueMerger<KEY, VALUE> getMainConflictDetector()\n+  {\n+    return new ConflictDetectingValueMerger<>(descriptor.type() == GENERAL);\n+  }\n+\n+  @Override\n+  public synchronized void drop() throws IOException\n+  {\n+    try\n     {\n-        gbpTreeFileUtil.deleteFileIfPresent( storeFile );\n-    }\n-\n-    @Override\n-    public synchronized void create() throws IOException\n+      closeTree();\n+      gbpTreeFileUtil.deleteFileIfPresent(storeFile);\n+    } finally\n     {\n-        create( new NativeSchemaIndexHeaderWriter( BYTE_POPULATING ) );\n+      dropped = true;\n+      closed = true;\n     }\n-\n-    protected synchronized void create( Consumer<PageCursor> headerWriter ) throws IOException\n+  }\n+\n+  @Override\n+  public void add(Collection<? extends IndexEntryUpdate<?>> updates) throws IOException, IndexEntryConflictException\n+  {\n+    applyWithWorkSync(additionsWorkSync, updates);\n+  }\n+\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor propertyAccessor) throws IndexEntryConflictException\n+  {\n+    // No-op, uniqueness is checked for each update in add(IndexEntryUpdate)\n+  }\n+\n+  @Override\n+  public IndexUpdater newPopulatingUpdater(PropertyAccessor accessor)\n+  {\n+    IndexUpdater updater = new IndexUpdater()\n     {\n-        assertNotDropped();\n-        assertNotClosed();\n+      private boolean closed;\n+      private final Collection<IndexEntryUpdate<?>> updates = new ArrayList<>();\n+\n+      @Override\n+      public void process(IndexEntryUpdate<?> update)\n+      {\n+        assertOpen();\n+        updates.add(update);\n+      }\n+\n+      @Override\n+      public void close() throws IOException, IndexEntryConflictException\n+      {\n+        applyWithWorkSync(updatesWorkSync, updates);\n+        closed = true;\n+      }\n+\n+      private void assertOpen()\n+      {\n+        if (closed)\n+        {\n+          throw new IllegalStateException(\"Updater has been closed\");\n+        }\n+      }\n+    };\n \n-        gbpTreeFileUtil.deleteFileIfPresent( storeFile );\n-        instantiateTree( RecoveryCleanupWorkCollector.immediate(), headerWriter );\n+    if (descriptor.type() == UNIQUE && canCheckConflictsWithoutStoreAccess())\n+    {\n+      // The index population detects conflicts on the fly, however for updates coming in we're in a position\n+      // where we cannot detect conflicts while applying, but instead afterwards.\n+      updater = new DeferredConflictCheckingIndexUpdater(updater, this::newReader, descriptor);\n+    }\n+    return updater;\n+  }\n \n-        // true:  tree uniqueness is (value,entityId)\n-        // false: tree uniqueness is (value) <-- i.e. more strict\n-        additionsWorkSync = new WorkSync<>( new IndexUpdateApply<>( tree, treeKey, treeValue, getMainConflictDetector() ) );\n+  boolean canCheckConflictsWithoutStoreAccess()\n+  {\n+    return true;\n+  }\n \n-        // for updates we have to have uniqueness on (value,entityId) to allow for intermediary violating updates.\n-        // there are added conflict checks after updates have been applied.\n-        updatesWorkSync = new WorkSync<>( new IndexUpdateApply<>( tree, treeKey, treeValue, new ConflictDetectingValueMerger<>( true ) ) );\n-    }\n+  abstract IndexReader newReader();\n \n-    ConflictDetectingValueMerger<KEY,VALUE> getMainConflictDetector()\n+  @Override\n+  public synchronized void close(boolean populationCompletedSuccessfully) throws IOException\n+  {\n+    if (populationCompletedSuccessfully && failureBytes != null)\n     {\n-        return new ConflictDetectingValueMerger<>( descriptor.type() == GENERAL );\n+      throw new IllegalStateException(\"Can't mark index as online after it has been marked as failure\");\n     }\n \n-    @Override\n-    public synchronized void drop() throws IOException\n+    try\n     {\n-        try\n-        {\n-            closeTree();\n-            gbpTreeFileUtil.deleteFileIfPresent( storeFile );\n-        }\n-        finally\n-        {\n-            dropped = true;\n-            closed = true;\n-        }\n-    }\n-\n-    @Override\n-    public void add( Collection<? extends IndexEntryUpdate<?>> updates ) throws IOException, IndexEntryConflictException\n+      if (populationCompletedSuccessfully)\n+      {\n+        assertPopulatorOpen();\n+        markTreeAsOnline();\n+      } else\n+      {\n+        assertNotDropped();\n+        ensureTreeInstantiated();\n+        markTreeAsFailed();\n+      }\n+    } finally\n     {\n-        applyWithWorkSync( additionsWorkSync, updates );\n+      closeTree();\n+      closed = true;\n     }\n+  }\n \n-    @Override\n-    public void verifyDeferredConstraints( PropertyAccessor propertyAccessor ) throws IndexEntryConflictException\n+  private void applyWithWorkSync(WorkSync<IndexUpdateApply<KEY, VALUE>, IndexUpdateWork<KEY, VALUE>> workSync,\n+                                 Collection<? extends IndexEntryUpdate<?>> updates) throws IOException, IndexEntryConflictException\n+  {\n+    try\n+    {\n+      workSync.apply(new IndexUpdateWork<>(updates));\n+    } catch (ExecutionException e)\n     {\n-        // No-op, uniqueness is checked for each update in add(IndexEntryUpdate)\n+      Throwable cause = e.getCause();\n+      if (cause instanceof IOException)\n+      {\n+        throw (IOException) cause;\n+      }\n+      if (cause instanceof IndexEntryConflictException)\n+      {\n+        throw (IndexEntryConflictException) cause;\n+      }\n+      throw new IOException(cause);\n     }\n+  }\n \n-    @Override\n-    public IndexUpdater newPopulatingUpdater( PropertyAccessor accessor )\n+  private void assertNotDropped()\n+  {\n+    if (dropped)\n     {\n-        IndexUpdater updater = new IndexUpdater()\n-        {\n-            private boolean closed;\n-            private final Collection<IndexEntryUpdate<?>> updates = new ArrayList<>();\n-\n-            @Override\n-            public void process( IndexEntryUpdate<?> update )\n-            {\n-                assertOpen();\n-                updates.add( update );\n-            }\n-\n-            @Override\n-            public void close() throws IOException, IndexEntryConflictException\n-            {\n-                applyWithWorkSync( updatesWorkSync, updates );\n-                closed = true;\n-            }\n-\n-            private void assertOpen()\n-            {\n-                if ( closed )\n-                {\n-                    throw new IllegalStateException( \"Updater has been closed\" );\n-                }\n-            }\n-        };\n-\n-        if ( descriptor.type() == UNIQUE && canCheckConflictsWithoutStoreAccess() )\n-        {\n-            // The index population detects conflicts on the fly, however for updates coming in we're in a position\n-            // where we cannot detect conflicts while applying, but instead afterwards.\n-            updater = new DeferredConflictCheckingIndexUpdater( updater, this::newReader, descriptor );\n-        }\n-        return updater;\n+      throw new IllegalStateException(\"Populator has already been dropped.\");\n     }\n+  }\n \n-    boolean canCheckConflictsWithoutStoreAccess()\n+  private void assertNotClosed()\n+  {\n+    if (closed)\n     {\n-        return true;\n+      throw new IllegalStateException(\"Populator has already been closed.\");\n     }\n+  }\n \n-    abstract IndexReader newReader();\n+  @Override\n+  public void markAsFailed(String failure)\n+  {\n+    failureBytes = failure.getBytes(StandardCharsets.UTF_8);\n+  }\n \n-    @Override\n-    public synchronized void close( boolean populationCompletedSuccessfully ) throws IOException\n+  private void ensureTreeInstantiated() throws IOException\n+  {\n+    if (tree == null)\n     {\n-        if ( populationCompletedSuccessfully && failureBytes != null )\n-        {\n-            throw new IllegalStateException( \"Can't mark index as online after it has been marked as failure\" );\n-        }\n-\n-        try\n-        {\n-            if ( populationCompletedSuccessfully )\n-            {\n-                assertPopulatorOpen();\n-                markTreeAsOnline();\n-            }\n-            else\n-            {\n-                assertNotDropped();\n-                ensureTreeInstantiated();\n-                markTreeAsFailed();\n-            }\n-        }\n-        finally\n-        {\n-            closeTree();\n-            closed = true;\n-        }\n+      instantiateTree(RecoveryCleanupWorkCollector.ignore(), NO_HEADER_WRITER);\n     }\n+  }\n \n-    private void applyWithWorkSync( WorkSync<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>> workSync,\n-            Collection<? extends IndexEntryUpdate<?>> updates ) throws IOException, IndexEntryConflictException\n+  private void assertPopulatorOpen()\n+  {\n+    if (tree == null)\n     {\n-        try\n-        {\n-            workSync.apply( new IndexUpdateWork<>( updates ) );\n-        }\n-        catch ( ExecutionException e )\n-        {\n-            Throwable cause = e.getCause();\n-            if ( cause instanceof IOException )\n-            {\n-                throw (IOException) cause;\n-            }\n-            if ( cause instanceof IndexEntryConflictException )\n-            {\n-                throw (IndexEntryConflictException) cause;\n-            }\n-            throw new IOException( cause );\n-        }\n+      throw new IllegalStateException(\"Populator has already been closed.\");\n     }\n+  }\n \n-    private void assertNotDropped()\n+  private void markTreeAsFailed() throws IOException\n+  {\n+    if (failureBytes == null)\n     {\n-        if ( dropped )\n-        {\n-            throw new IllegalStateException( \"Populator has already been dropped.\" );\n-        }\n+      failureBytes = new byte[0];\n     }\n+    tree.checkpoint(IOLimiter.unlimited(), new FailureHeaderWriter(failureBytes));\n+  }\n \n-    private void assertNotClosed()\n-    {\n-        if ( closed )\n-        {\n-            throw new IllegalStateException( \"Populator has already been closed.\" );\n-        }\n-    }\n+  void markTreeAsOnline() throws IOException\n+  {\n+    tree.checkpoint(IOLimiter.unlimited(), pc -> pc.putByte(BYTE_ONLINE));\n+  }\n \n-    @Override\n-    public void markAsFailed( String failure )\n-    {\n-        failureBytes = failure.getBytes( StandardCharsets.UTF_8 );\n-    }\n+  static class IndexUpdateApply<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n+  {\n+    private final GBPTree<KEY, VALUE> tree;\n+    private final KEY treeKey;\n+    private final VALUE treeValue;\n+    private final ConflictDetectingValueMerger<KEY, VALUE> conflictDetectingValueMerger;\n \n-    private void ensureTreeInstantiated() throws IOException\n+    IndexUpdateApply(GBPTree<KEY, VALUE> tree, KEY treeKey, VALUE treeValue, ConflictDetectingValueMerger<KEY, VALUE> conflictDetectingValueMerger)\n     {\n-        if ( tree == null )\n-        {\n-            instantiateTree( RecoveryCleanupWorkCollector.ignore(), NO_HEADER_WRITER );\n-        }\n+      this.tree = tree;\n+      this.treeKey = treeKey;\n+      this.treeValue = treeValue;\n+      this.conflictDetectingValueMerger = conflictDetectingValueMerger;\n     }\n \n-    private void assertPopulatorOpen()\n+    void process(Iterable<? extends IndexEntryUpdate<?>> indexEntryUpdates) throws Exception\n     {\n-        if ( tree == null )\n+      try (Writer<KEY, VALUE> writer = tree.writer())\n+      {\n+        for (IndexEntryUpdate<?> indexEntryUpdate : indexEntryUpdates)\n         {\n-            throw new IllegalStateException( \"Populator has already been closed.\" );\n+          NativeSchemaIndexUpdater.processUpdate(treeKey, treeValue, indexEntryUpdate, writer, conflictDetectingValueMerger);\n         }\n+      }\n     }\n+  }\n \n-    private void markTreeAsFailed() throws IOException\n-    {\n-        if ( failureBytes == null )\n-        {\n-            failureBytes = new byte[0];\n-        }\n-        tree.checkpoint( IOLimiter.unlimited(), new FailureHeaderWriter( failureBytes ) );\n-    }\n+  static class IndexUpdateWork<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n+      implements Work<IndexUpdateApply<KEY, VALUE>, IndexUpdateWork<KEY, VALUE>>\n+  {\n+    private final Collection<? extends IndexEntryUpdate<?>> updates;\n \n-    void markTreeAsOnline() throws IOException\n+    IndexUpdateWork(Collection<? extends IndexEntryUpdate<?>> updates)\n     {\n-        tree.checkpoint( IOLimiter.unlimited(), pc -> pc.putByte( BYTE_ONLINE ) );\n+      this.updates = updates;\n     }\n \n-    static class IndexUpdateApply<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n+    @Override\n+    public IndexUpdateWork<KEY, VALUE> combine(IndexUpdateWork<KEY, VALUE> work)\n     {\n-        private final GBPTree<KEY,VALUE> tree;\n-        private final KEY treeKey;\n-        private final VALUE treeValue;\n-        private final ConflictDetectingValueMerger<KEY,VALUE> conflictDetectingValueMerger;\n-\n-        IndexUpdateApply( GBPTree<KEY,VALUE> tree, KEY treeKey, VALUE treeValue, ConflictDetectingValueMerger<KEY,VALUE> conflictDetectingValueMerger )\n-        {\n-            this.tree = tree;\n-            this.treeKey = treeKey;\n-            this.treeValue = treeValue;\n-            this.conflictDetectingValueMerger = conflictDetectingValueMerger;\n-        }\n-\n-        void process( Iterable<? extends IndexEntryUpdate<?>> indexEntryUpdates ) throws Exception\n-        {\n-            try ( Writer<KEY,VALUE> writer = tree.writer() )\n-            {\n-                for ( IndexEntryUpdate<?> indexEntryUpdate : indexEntryUpdates )\n-                {\n-                    NativeSchemaIndexUpdater.processUpdate( treeKey, treeValue, indexEntryUpdate, writer, conflictDetectingValueMerger );\n-                }\n-            }\n-        }\n+      ArrayList<IndexEntryUpdate<?>> combined = new ArrayList<>(updates);\n+      combined.addAll(work.updates);\n+      return new IndexUpdateWork<>(combined);\n     }\n \n-    static class IndexUpdateWork<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-            implements Work<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>>\n+    @Override\n+    public void apply(IndexUpdateApply<KEY, VALUE> indexUpdateApply) throws Exception\n     {\n-        private final Collection<? extends IndexEntryUpdate<?>> updates;\n-\n-        IndexUpdateWork( Collection<? extends IndexEntryUpdate<?>> updates )\n-        {\n-            this.updates = updates;\n-        }\n-\n-        @Override\n-        public IndexUpdateWork<KEY,VALUE> combine( IndexUpdateWork<KEY,VALUE> work )\n-        {\n-            ArrayList<IndexEntryUpdate<?>> combined = new ArrayList<>( updates );\n-            combined.addAll( work.updates );\n-            return new IndexUpdateWork<>( combined );\n-        }\n-\n-        @Override\n-        public void apply( IndexUpdateApply<KEY,VALUE> indexUpdateApply ) throws Exception\n-        {\n-            indexUpdateApply.process( updates );\n-        }\n+      indexUpdateApply.process(updates);\n     }\n+  }\n \n-    @Override\n-    public void includeSample( IndexEntryUpdate<?> update )\n+  @Override\n+  public void includeSample(IndexEntryUpdate<?> update)\n+  {\n+    switch (descriptor.type())\n     {\n-        switch ( descriptor.type() )\n-        {\n-        case GENERAL:\n-            nonUniqueSampler.include( SamplingUtil.encodedStringValuesForSampling( (Object[]) update.values() ) );\n-            break;\n-        case UNIQUE:\n-            uniqueSampler.increment( 1 );\n-            break;\n-        default:\n-            throw new IllegalArgumentException( \"Unexpected index type \" + descriptor.type() );\n-        }\n+      case GENERAL:\n+        nonUniqueSampler.include(SamplingUtil.encodedStringValuesForSampling((Object[]) update.values()));\n+        break;\n+      case UNIQUE:\n+        uniqueSampler.increment(1);\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\"Unexpected index type \" + descriptor.type());\n     }\n+  }\n \n-    @Override\n-    public IndexSample sampleResult()\n+  @Override\n+  public IndexSample sampleResult()\n+  {\n+    switch (descriptor.type())\n     {\n-        switch ( descriptor.type() )\n-        {\n-        case GENERAL:\n-            return nonUniqueSampler.result();\n-        case UNIQUE:\n-            return uniqueSampler.result();\n-        default:\n-            throw new IllegalArgumentException( \"Unexpected index type \" + descriptor.type() );\n-        }\n+      case GENERAL:\n+        return nonUniqueSampler.result();\n+      case UNIQUE:\n+        return uniqueSampler.result();\n+      default:\n+        throw new IllegalArgumentException(\"Unexpected index type \" + descriptor.type());\n     }\n+  }\n }\n",
            "diff_size": 412
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "340",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3587/NativeSchemaIndexPopulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3587/NativeSchemaIndexPopulator.java\nindex 981cac299a2..1372b8f5132 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3587/NativeSchemaIndexPopulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3587/NativeSchemaIndexPopulator.java\n@@ -61,29 +61,26 @@ import static org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor.Type.UNIQU\n  * @param <KEY> type of {@link NativeSchemaKey}.\n  * @param <VALUE> type of {@link NativeSchemaValue}.\n  */\n-public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-        extends NativeSchemaIndex<KEY,VALUE> implements IndexPopulator\n+public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> extends NativeSchemaIndex<KEY,VALUE> implements IndexPopulator\n {\n     public static final byte BYTE_FAILED = 0;\n     static final byte BYTE_ONLINE = 1;\n     static final byte BYTE_POPULATING = 2;\n-\n-    private final KEY treeKey;\n+private final KEY treeKey;\n     private final VALUE treeValue;\n     private final UniqueIndexSampler uniqueSampler;\n     private final NonUniqueIndexSampler nonUniqueSampler;\n     final IndexSamplingConfig samplingConfig;\n \n-    private WorkSync<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>> additionsWorkSync;\n-    private WorkSync<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>> updatesWorkSync;\n+    private WorkSync<IndexUpdateApply<KEY,VALUE>, IndexUpdateWork<KEY,VALUE>> additionsWorkSync;\n+    private WorkSync<IndexUpdateApply<KEY,VALUE>, IndexUpdateWork<KEY,VALUE>> updatesWorkSync;\n \n     private byte[] failureBytes;\n     private boolean dropped;\n     private boolean closed;\n \n-    NativeSchemaIndexPopulator( PageCache pageCache, FileSystemAbstraction fs, File storeFile, Layout<KEY,VALUE> layout,\n-                                IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig )\n-    {\n+    NativeSchemaIndexPopulator( PageCache pageCache, FileSystemAbstraction fs, File storeFile, Layout<KEY,VALUE> layout, IndexProvider.Monitor monitor, SchemaIndexDescriptor descriptor, long indexId, IndexSamplingConfig samplingConfig )\n+{\n         super( pageCache, fs, storeFile, layout, monitor, descriptor, indexId );\n         this.treeKey = layout.newKey();\n         this.treeValue = layout.newValue();\n@@ -118,8 +115,7 @@ public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY\n     {\n         assertNotDropped();\n         assertNotClosed();\n-\n-        gbpTreeFileUtil.deleteFileIfPresent( storeFile );\n+gbpTreeFileUtil.deleteFileIfPresent( storeFile );\n         instantiateTree( RecoveryCleanupWorkCollector.immediate(), headerWriter );\n \n         // true:  tree uniqueness is (value,entityId)\n@@ -200,7 +196,8 @@ public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY\n             // where we cannot detect conflicts while applying, but instead afterwards.\n             updater = new DeferredConflictCheckingIndexUpdater( updater, this::newReader, descriptor );\n         }\n-        return updater;\n+\n+return updater;\n     }\n \n     boolean canCheckConflictsWithoutStoreAccess()\n@@ -239,9 +236,8 @@ public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY\n         }\n     }\n \n-    private void applyWithWorkSync( WorkSync<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>> workSync,\n-            Collection<? extends IndexEntryUpdate<?>> updates ) throws IOException, IndexEntryConflictException\n-    {\n+    private void applyWithWorkSync( WorkSync<IndexUpdateApply<KEY,VALUE>, IndexUpdateWork<KEY,VALUE>> workSync, Collection<? extends IndexEntryUpdate<?>> updates ) throws IOException, IndexEntryConflictException\n+{\n         try\n         {\n             workSync.apply( new IndexUpdateWork<>( updates ) );\n@@ -253,7 +249,8 @@ public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY\n             {\n                 throw (IOException) cause;\n             }\n-            if ( cause instanceof IndexEntryConflictException )\n+\n+if ( cause instanceof IndexEntryConflictException )\n             {\n                 throw (IndexEntryConflictException) cause;\n             }\n@@ -340,8 +337,7 @@ public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY\n         }\n     }\n \n-    static class IndexUpdateWork<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue>\n-            implements Work<IndexUpdateApply<KEY,VALUE>,IndexUpdateWork<KEY,VALUE>>\n+    static class IndexUpdateWork<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> implements Work<IndexUpdateApply<KEY,VALUE>, IndexUpdateWork<KEY,VALUE>>\n     {\n         private final Collection<? extends IndexEntryUpdate<?>> updates;\n \n@@ -394,4 +390,4 @@ public abstract class NativeSchemaIndexPopulator<KEY extends NativeSchemaKey<KEY\n             throw new IllegalArgumentException( \"Unexpected index type \" + descriptor.type() );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "240",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/240/CharArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/240/CharArray.java\nindex e357e5628ac..e7c5c1cf6ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/240/CharArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/240/CharArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -29,114 +30,114 @@ import static java.lang.String.format;\n \n public class CharArray extends TextArray\n {\n-    private final char[] value;\n+  private final char[] value;\n \n-    CharArray( char[] value )\n-    {\n-        assert value != null;\n-        this.value = value;\n-    }\n+  CharArray(char[] value)\n+  {\n+    assert value != null;\n+    this.value = value;\n+  }\n \n-    @Override\n-    public boolean equals( Value other )\n-    {\n-        return other.equals( value );\n-    }\n+  @Override\n+  public boolean equals(Value other)\n+  {\n+    return other.equals(value);\n+  }\n \n-    // TODO: should we support this?\n+  // TODO: should we support this?\n //    @Override\n //    boolean equals( String x )\n //    {\n //        return false;\n //    }\n \n-    @Override\n-    public boolean equals( char[] x )\n-    {\n-        return Arrays.equals( value, x );\n-    }\n-\n-    @Override\n-    public boolean equals( String[] x )\n-    {\n-        return PrimitiveArrayValues.equals( value, x );\n-    }\n-\n-    @Override\n-    public int computeHash()\n-    {\n-        return NumberValues.hash( value );\n-    }\n-\n-    @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n-    {\n-        hash = hashFunction.update( hash, value.length );\n-        for ( char c : value )\n-        {\n-            hash = CharValue.updateHash( hashFunction, hash, c );\n-        }\n-        return hash;\n-    }\n-\n-    @Override\n-    public int length()\n-    {\n-        return value.length;\n-    }\n-\n-    @Override\n-    public String stringValue( int offset )\n-    {\n-        return Character.toString( value[offset] );\n-    }\n-\n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-    {\n-        PrimitiveArrayWriting.writeTo( writer, value );\n-    }\n-\n-    @Override\n-    public char[] asObjectCopy()\n-    {\n-        return value.clone();\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public char[] asObject()\n-    {\n-        return value;\n-    }\n-\n-    @Override\n-    public String prettyPrint()\n-    {\n-        return Arrays.toString( value );\n-    }\n-\n-    @Override\n-    public AnyValue value( int position )\n-    {\n-        return Values.charValue( value[position] );\n-    }\n-\n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n-    {\n-        return mapper.mapCharArray( this );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return format( \"%s%s\", getTypeName(), Arrays.toString( value ) );\n-    }\n-\n-    @Override\n-    public String getTypeName()\n-    {\n-        return \"CharArray\";\n-    }\n+  @Override\n+  public boolean equals(char[] x)\n+  {\n+    return Arrays.equals(value, x);\n+  }\n+\n+  @Override\n+  public boolean equals(String[] x)\n+  {\n+    return PrimitiveArrayValues.equals(value, x);\n+  }\n+\n+  @Override\n+  public int computeHash()\n+  {\n+    return NumberValues.hash(value);\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    hash = hashFunction.update(hash, value.length);\n+    for (char c : value)\n+    {\n+      hash = CharValue.updateHash(hashFunction, hash, c);\n+    }\n+    return hash;\n+  }\n+\n+  @Override\n+  public int length()\n+  {\n+    return value.length;\n+  }\n+\n+  @Override\n+  public String stringValue(int offset)\n+  {\n+    return Character.toString(value[offset]);\n+  }\n+\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n+  {\n+    PrimitiveArrayWriting.writeTo(writer, value);\n+  }\n+\n+  @Override\n+  public char[] asObjectCopy()\n+  {\n+    return value.clone();\n+  }\n+\n+  @Override\n+  @Deprecated\n+  public char[] asObject()\n+  {\n+    return value;\n+  }\n+\n+  @Override\n+  public String prettyPrint()\n+  {\n+    return Arrays.toString(value);\n+  }\n+\n+  @Override\n+  public AnyValue value(int position)\n+  {\n+    return Values.charValue(value[position]);\n+  }\n+\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapCharArray(this);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"%s%s\", getTypeName(), Arrays.toString(value));\n+  }\n+\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"CharArray\";\n+  }\n }\n",
            "diff_size": 102
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/240/CharArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/240/CharArray.java\nindex e357e5628ac..dd2674d3a10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/240/CharArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/240/CharArray.java\n@@ -43,14 +43,9 @@ public class CharArray extends TextArray\n         return other.equals( value );\n     }\n \n-    // TODO: should we support this?\n-//    @Override\n-//    boolean equals( String x )\n-//    {\n-//        return false;\n-//    }\n+    // TODO: sh\n \n-    @Override\n+@Override\n     public boolean equals( char[] x )\n     {\n         return Arrays.equals( value, x );\n@@ -76,7 +71,8 @@ public class CharArray extends TextArray\n         {\n             hash = CharValue.updateHash( hashFunction, hash, c );\n         }\n-        return hash;\n+\n+return hash;\n     }\n \n     @Override\n@@ -139,4 +135,4 @@ public class CharArray extends TextArray\n     {\n         return \"CharArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
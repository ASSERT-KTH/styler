{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1015",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "174",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "192",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1015/DumpRecordsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1015/DumpRecordsCommand.java\nindex a61aab94a59..f8db0b47017 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1015/DumpRecordsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1015/DumpRecordsCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.applytx;\n \n import io.airlift.airline.Arguments;\n@@ -48,196 +49,194 @@ import static org.neo4j.tools.console.input.ConsoleUtil.airlineHelp;\n  */\n public class DumpRecordsCommand implements Command\n {\n-    public static final String NAME = \"dump\";\n-\n-    private interface Action\n-    {\n-        void run( StoreAccess store, PrintStream out );\n-    }\n-\n-    private final Cli<Action> cli;\n-    private final Supplier<StoreAccess> store;\n+  public static final String NAME = \"dump\";\n+\n+  private interface Action\n+  {\n+    void run(StoreAccess store, PrintStream out);\n+  }\n+\n+  private final Cli<Action> cli;\n+  private final Supplier<StoreAccess> store;\n+\n+  @SuppressWarnings(\"unchecked\")\n+  public DumpRecordsCommand(Supplier<StoreAccess> store)\n+  {\n+    this.store = store;\n+    CliBuilder<Action> builder = Cli.<Action>builder(NAME)\n+        .withDescription(\"Dump record contents\")\n+        .withCommands(DumpRelationshipTypes.class, Help.class)\n+        .withDefaultCommand(Help.class);\n+    builder.withGroup(\"node\")\n+        .withCommands(DumpNodePropertyChain.class, DumpNodeRelationshipChain.class, Help.class)\n+        .withDefaultCommand(Help.class);\n+    builder.withGroup(\"relationship\")\n+        .withCommands(DumpRelationshipPropertyChain.class, Help.class)\n+        .withDefaultCommand(Help.class);\n+    builder.withGroup(\"tokens\")\n+        .withCommands(DumpRelationshipTypes.class, DumpLabels.class, DumpPropertyKeys.class, Help.class)\n+        .withDefaultCommand(Help.class);\n+    this.cli = builder.build();\n+  }\n+\n+  @Override\n+  public void run(String[] args, PrintStream out)\n+  {\n+    cli.parse(args).run(store.get(), out);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return airlineHelp(cli);\n+  }\n+\n+  abstract static class DumpPropertyChain implements Action\n+  {\n+    @Arguments(title = \"id\", description = \"Entity id\", required = true)\n+    public long id;\n+\n+    protected abstract long firstPropId(StoreAccess access);\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public DumpRecordsCommand( Supplier<StoreAccess> store )\n+    @Override\n+    public void run(StoreAccess store, PrintStream out)\n     {\n-        this.store = store;\n-        CliBuilder<Action> builder = Cli.<Action>builder( NAME )\n-                .withDescription( \"Dump record contents\" )\n-                .withCommands( DumpRelationshipTypes.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        builder.withGroup( \"node\" )\n-                .withCommands( DumpNodePropertyChain.class, DumpNodeRelationshipChain.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        builder.withGroup( \"relationship\" )\n-                .withCommands( DumpRelationshipPropertyChain.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        builder.withGroup( \"tokens\" )\n-                .withCommands( DumpRelationshipTypes.class, DumpLabels.class, DumpPropertyKeys.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        this.cli = builder.build();\n+      long propId = firstPropId(store);\n+      RecordStore<PropertyRecord> propertyStore = store.getPropertyStore();\n+      PropertyRecord record = propertyStore.newRecord();\n+      while (propId != Record.NO_NEXT_PROPERTY.intValue())\n+      {\n+        propertyStore.getRecord(propId, record, NORMAL);\n+        // We rely on this method having the side-effect of loading the property blocks:\n+        record.numberOfProperties();\n+        out.println(record);\n+        propId = record.getNextProp();\n+      }\n     }\n+  }\n \n+  @io.airlift.airline.Command(name = \"properties\", description = \"Dump property chain for a node\")\n+  public static class DumpNodePropertyChain extends DumpPropertyChain\n+  {\n     @Override\n-    public void run( String[] args, PrintStream out )\n+    protected long firstPropId(StoreAccess access)\n     {\n-        cli.parse( args ).run( store.get(), out );\n+      RecordStore<NodeRecord> nodeStore = access.getNodeStore();\n+      return nodeStore.getRecord(id, nodeStore.newRecord(), NORMAL).getNextProp();\n     }\n+  }\n \n+  @io.airlift.airline.Command(name = \"properties\", description = \"Dump property chain for a relationship\")\n+  public static class DumpRelationshipPropertyChain extends DumpPropertyChain\n+  {\n     @Override\n-    public String toString()\n+    protected long firstPropId(StoreAccess access)\n     {\n-        return airlineHelp( cli );\n+      RecordStore<RelationshipRecord> relationshipStore = access.getRelationshipStore();\n+      return relationshipStore.getRecord(id, relationshipStore.newRecord(), NORMAL).getNextProp();\n     }\n+  }\n \n-    abstract static class DumpPropertyChain implements Action\n-    {\n-        @Arguments( title = \"id\", description = \"Entity id\", required = true )\n-        public long id;\n-\n-        protected abstract long firstPropId( StoreAccess access );\n-\n-        @Override\n-        public void run( StoreAccess store, PrintStream out )\n-        {\n-            long propId = firstPropId( store );\n-            RecordStore<PropertyRecord> propertyStore = store.getPropertyStore();\n-            PropertyRecord record = propertyStore.newRecord();\n-            while ( propId != Record.NO_NEXT_PROPERTY.intValue() )\n-            {\n-                propertyStore.getRecord( propId, record, NORMAL );\n-                // We rely on this method having the side-effect of loading the property blocks:\n-                record.numberOfProperties();\n-                out.println( record );\n-                propId = record.getNextProp();\n-            }\n-        }\n-    }\n-\n-    @io.airlift.airline.Command( name = \"properties\", description = \"Dump property chain for a node\" )\n-    public static class DumpNodePropertyChain extends DumpPropertyChain\n-    {\n-        @Override\n-        protected long firstPropId( StoreAccess access )\n-        {\n-            RecordStore<NodeRecord> nodeStore = access.getNodeStore();\n-            return nodeStore.getRecord( id, nodeStore.newRecord(), NORMAL ).getNextProp();\n-        }\n-    }\n+  @io.airlift.airline.Command(name = \"relationships\", description = \"Dump relationship chain for a node\")\n+  public static class DumpNodeRelationshipChain implements Action\n+  {\n+    @Arguments(description = \"Node id\", required = true)\n+    public long id;\n \n-    @io.airlift.airline.Command( name = \"properties\", description = \"Dump property chain for a relationship\" )\n-    public static class DumpRelationshipPropertyChain extends DumpPropertyChain\n+    @Override\n+    public void run(StoreAccess store, PrintStream out)\n     {\n-        @Override\n-        protected long firstPropId( StoreAccess access )\n+      RecordStore<NodeRecord> nodeStore = store.getNodeStore();\n+      NodeRecord node = nodeStore.getRecord(id, nodeStore.newRecord(), NORMAL);\n+      if (node.isDense())\n+      {\n+        RecordStore<RelationshipGroupRecord> relationshipGroupStore = store.getRelationshipGroupStore();\n+        RelationshipGroupRecord group = relationshipGroupStore.newRecord();\n+        relationshipGroupStore.getRecord(node.getNextRel(), group, NORMAL);\n+        do\n         {\n-            RecordStore<RelationshipRecord> relationshipStore = access.getRelationshipStore();\n-            return relationshipStore.getRecord( id, relationshipStore.newRecord(), NORMAL ).getNextProp();\n-        }\n+          out.println(\"group \" + group);\n+          out.println(\"out:\");\n+          printRelChain(store, out, group.getFirstOut());\n+          out.println(\"in:\");\n+          printRelChain(store, out, group.getFirstIn());\n+          out.println(\"loop:\");\n+          printRelChain(store, out, group.getFirstLoop());\n+          group = group.getNext() != -1 ?\n+              relationshipGroupStore.getRecord(group.getNext(), group, NORMAL) : null;\n+        } while (group != null);\n+      } else\n+      {\n+        printRelChain(store, out, node.getNextRel());\n+      }\n     }\n \n-    @io.airlift.airline.Command( name = \"relationships\", description = \"Dump relationship chain for a node\" )\n-    public static class DumpNodeRelationshipChain implements Action\n+    private void printRelChain(StoreAccess access, PrintStream out, long firstRelId)\n     {\n-        @Arguments( description = \"Node id\", required = true )\n-        public long id;\n-\n-        @Override\n-        public void run( StoreAccess store, PrintStream out )\n+      for (long rel = firstRelId; rel != Record.NO_NEXT_RELATIONSHIP.intValue(); )\n+      {\n+        RecordStore<RelationshipRecord> relationshipStore = access.getRelationshipStore();\n+        RelationshipRecord record = relationshipStore.getRecord(rel, relationshipStore.newRecord(), NORMAL);\n+        out.println(rel + \"\\t\" + record);\n+        if (record.getFirstNode() == id)\n         {\n-            RecordStore<NodeRecord> nodeStore = store.getNodeStore();\n-            NodeRecord node = nodeStore.getRecord( id, nodeStore.newRecord(), NORMAL );\n-            if ( node.isDense() )\n-            {\n-                RecordStore<RelationshipGroupRecord> relationshipGroupStore = store.getRelationshipGroupStore();\n-                RelationshipGroupRecord group = relationshipGroupStore.newRecord();\n-                relationshipGroupStore.getRecord( node.getNextRel(), group, NORMAL );\n-                do\n-                {\n-                    out.println( \"group \" + group );\n-                    out.println( \"out:\" );\n-                    printRelChain( store, out, group.getFirstOut() );\n-                    out.println( \"in:\" );\n-                    printRelChain( store, out, group.getFirstIn() );\n-                    out.println( \"loop:\" );\n-                    printRelChain( store, out, group.getFirstLoop() );\n-                    group = group.getNext() != -1 ?\n-                            relationshipGroupStore.getRecord( group.getNext(), group, NORMAL ) : null;\n-                } while ( group != null );\n-            }\n-            else\n-            {\n-                printRelChain( store, out, node.getNextRel() );\n-            }\n-        }\n-\n-        private void printRelChain( StoreAccess access, PrintStream out, long firstRelId )\n+          rel = record.getFirstNextRel();\n+        } else\n         {\n-            for ( long rel = firstRelId; rel != Record.NO_NEXT_RELATIONSHIP.intValue(); )\n-            {\n-                RecordStore<RelationshipRecord> relationshipStore = access.getRelationshipStore();\n-                RelationshipRecord record = relationshipStore.getRecord( rel, relationshipStore.newRecord(), NORMAL );\n-                out.println( rel + \"\\t\" + record );\n-                if ( record.getFirstNode() == id )\n-                {\n-                    rel = record.getFirstNextRel();\n-                }\n-                else\n-                {\n-                    rel = record.getSecondNextRel();\n-                }\n-            }\n+          rel = record.getSecondNextRel();\n         }\n+      }\n     }\n+  }\n \n-    @io.airlift.airline.Command( name = \"relationship-type\", description = \"Dump relationship type tokens\" )\n-    public static class DumpRelationshipTypes implements Action\n+  @io.airlift.airline.Command(name = \"relationship-type\", description = \"Dump relationship type tokens\")\n+  public static class DumpRelationshipTypes implements Action\n+  {\n+    @Override\n+    public void run(StoreAccess store, PrintStream out)\n     {\n-        @Override\n-        public void run( StoreAccess store, PrintStream out )\n-        {\n-            for ( Token token : ((RelationshipTypeTokenStore)\n-                    store.getRelationshipTypeTokenStore()).getTokens( Integer.MAX_VALUE ) )\n-            {\n-                out.println( token );\n-            }\n-        }\n+      for (Token token : ((RelationshipTypeTokenStore)\n+          store.getRelationshipTypeTokenStore()).getTokens(Integer.MAX_VALUE))\n+      {\n+        out.println(token);\n+      }\n     }\n+  }\n \n-    @io.airlift.airline.Command( name = \"label\", description = \"Dump label tokens\" )\n-    public static class DumpLabels implements Action\n+  @io.airlift.airline.Command(name = \"label\", description = \"Dump label tokens\")\n+  public static class DumpLabels implements Action\n+  {\n+    @Override\n+    public void run(StoreAccess store, PrintStream out)\n     {\n-        @Override\n-        public void run( StoreAccess store, PrintStream out )\n-        {\n-            for ( Token token : ((LabelTokenStore)\n-                    store.getLabelTokenStore()).getTokens( Integer.MAX_VALUE ) )\n-            {\n-                out.println( token );\n-            }\n-        }\n+      for (Token token : ((LabelTokenStore)\n+          store.getLabelTokenStore()).getTokens(Integer.MAX_VALUE))\n+      {\n+        out.println(token);\n+      }\n     }\n+  }\n \n-    @io.airlift.airline.Command( name = \"property-key\", description = \"Dump property key tokens\" )\n-    public static class DumpPropertyKeys implements Action\n+  @io.airlift.airline.Command(name = \"property-key\", description = \"Dump property key tokens\")\n+  public static class DumpPropertyKeys implements Action\n+  {\n+    @Override\n+    public void run(StoreAccess store, PrintStream out)\n     {\n-        @Override\n-        public void run( StoreAccess store, PrintStream out )\n-        {\n-            for ( Token token : ((PropertyKeyTokenStore)\n-                    store.getPropertyKeyTokenStore()).getTokens( Integer.MAX_VALUE ) )\n-            {\n-                out.println( token );\n-            }\n-        }\n+      for (Token token : ((PropertyKeyTokenStore)\n+          store.getPropertyKeyTokenStore()).getTokens(Integer.MAX_VALUE))\n+      {\n+        out.println(token);\n+      }\n     }\n+  }\n \n-    public static class Help extends io.airlift.airline.Help implements Action\n+  public static class Help extends io.airlift.airline.Help implements Action\n+  {\n+    @Override\n+    public void run(StoreAccess store, PrintStream out)\n     {\n-        @Override\n-        public void run( StoreAccess store, PrintStream out )\n-        {\n-            run();\n-        }\n+      run();\n     }\n+  }\n }\n",
            "diff_size": 245
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "column": "49",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1015/DumpRecordsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1015/DumpRecordsCommand.java\nindex a61aab94a59..443f58300a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1015/DumpRecordsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1015/DumpRecordsCommand.java\n@@ -62,20 +62,11 @@ public class DumpRecordsCommand implements Command\n     public DumpRecordsCommand( Supplier<StoreAccess> store )\n     {\n         this.store = store;\n-        CliBuilder<Action> builder = Cli.<Action>builder( NAME )\n-                .withDescription( \"Dump record contents\" )\n-                .withCommands( DumpRelationshipTypes.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        builder.withGroup( \"node\" )\n-                .withCommands( DumpNodePropertyChain.class, DumpNodeRelationshipChain.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        builder.withGroup( \"relationship\" )\n-                .withCommands( DumpRelationshipPropertyChain.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        builder.withGroup( \"tokens\" )\n-                .withCommands( DumpRelationshipTypes.class, DumpLabels.class, DumpPropertyKeys.class, Help.class )\n-                .withDefaultCommand( Help.class );\n-        this.cli = builder.build();\n+        CliBuilder<Action> builder = Cli.<Action> builder( NAME ).withDescription( \"Dump record contents\" ).withCommands( DumpRelationshipTypes.class, Help.class ).withDefaultCommand( Help.class );\n+builder.withGroup( \"node\" ).withCommands( DumpNodePropertyChain.class, DumpNodeRelationshipChain.class, Help.class ).withDefaultCommand( Help.class );\n+builder.withGroup( \"relationship\" ).withCommands( DumpRelationshipPropertyChain.class, Help.class ).withDefaultCommand( Help.class );\n+builder.withGroup( \"tokens\" ).withCommands( DumpRelationshipTypes.class, DumpLabels.class, DumpPropertyKeys.class, Help.class ).withDefaultCommand( Help.class );\n+this.cli = builder.build();\n     }\n \n     @Override\n@@ -161,9 +152,10 @@ public class DumpRecordsCommand implements Command\n                     printRelChain( store, out, group.getFirstIn() );\n                     out.println( \"loop:\" );\n                     printRelChain( store, out, group.getFirstLoop() );\n-                    group = group.getNext() != -1 ?\n-                            relationshipGroupStore.getRecord( group.getNext(), group, NORMAL ) : null;\n-                } while ( group != null );\n+                    group = group.getNext() != -1 ? relationshipGroupStore.getRecord( group.getNext(), group, NORMAL ) : null;\n+                }\n+\n+while ( group != null );\n             }\n             else\n             {\n@@ -196,8 +188,7 @@ public class DumpRecordsCommand implements Command\n         @Override\n         public void run( StoreAccess store, PrintStream out )\n         {\n-            for ( Token token : ((RelationshipTypeTokenStore)\n-                    store.getRelationshipTypeTokenStore()).getTokens( Integer.MAX_VALUE ) )\n+            for ( Token token : ((RelationshipTypeTokenStore) store.getRelationshipTypeTokenStore()).getTokens( Integer.MAX_VALUE ) )\n             {\n                 out.println( token );\n             }\n@@ -210,8 +201,7 @@ public class DumpRecordsCommand implements Command\n         @Override\n         public void run( StoreAccess store, PrintStream out )\n         {\n-            for ( Token token : ((LabelTokenStore)\n-                    store.getLabelTokenStore()).getTokens( Integer.MAX_VALUE ) )\n+            for ( Token token : ((LabelTokenStore) store.getLabelTokenStore()).getTokens( Integer.MAX_VALUE ) )\n             {\n                 out.println( token );\n             }\n@@ -224,8 +214,7 @@ public class DumpRecordsCommand implements Command\n         @Override\n         public void run( StoreAccess store, PrintStream out )\n         {\n-            for ( Token token : ((PropertyKeyTokenStore)\n-                    store.getPropertyKeyTokenStore()).getTokens( Integer.MAX_VALUE ) )\n+            for ( Token token : ((PropertyKeyTokenStore) store.getPropertyKeyTokenStore()).getTokens( Integer.MAX_VALUE ) )\n             {\n                 out.println( token );\n             }\n@@ -240,4 +229,4 @@ public class DumpRecordsCommand implements Command\n             run();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
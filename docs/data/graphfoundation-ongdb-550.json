{
    "project_name": "graphfoundation-ongdb",
    "error_id": "550",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/550/DelegatingRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/550/DelegatingRecordAccess.java\nindex 0970bc43f64..74261fa313b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/550/DelegatingRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/550/DelegatingRecordAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.store;\n \n import java.util.Iterator;\n@@ -35,118 +36,118 @@ import org.neo4j.kernel.impl.store.record.RelationshipTypeTokenRecord;\n \n public class DelegatingRecordAccess implements RecordAccess\n {\n-    private final RecordAccess delegate;\n-\n-    public DelegatingRecordAccess( RecordAccess delegate )\n-    {\n-        this.delegate = delegate;\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> schema( long id )\n-    {\n-        return delegate.schema( id );\n-    }\n-\n-    @Override\n-    public RecordReference<NodeRecord> node( long id )\n-    {\n-        return delegate.node( id );\n-    }\n-\n-    @Override\n-    public RecordReference<RelationshipRecord> relationship( long id )\n-    {\n-        return delegate.relationship( id );\n-    }\n-\n-    @Override\n-    public RecordReference<PropertyRecord> property( long id )\n-    {\n-        return delegate.property( id );\n-    }\n-\n-    @Override\n-    public Iterator<PropertyRecord> rawPropertyChain( long firstId )\n-    {\n-        return delegate.rawPropertyChain( firstId );\n-    }\n-\n-    @Override\n-    public RecordReference<RelationshipTypeTokenRecord> relationshipType( int id )\n-    {\n-        return delegate.relationshipType( id );\n-    }\n-\n-    @Override\n-    public RecordReference<PropertyKeyTokenRecord> propertyKey( int id )\n-    {\n-        return delegate.propertyKey( id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> string( long id )\n-    {\n-        return delegate.string( id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> array( long id )\n-    {\n-        return delegate.array( id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> relationshipTypeName( int id )\n-    {\n-        return delegate.relationshipTypeName( id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> nodeLabels( long id )\n-    {\n-        return delegate.nodeLabels( id );\n-    }\n-\n-    @Override\n-    public RecordReference<LabelTokenRecord> label( int id )\n-    {\n-        return delegate.label( id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> labelName( int id )\n-    {\n-        return delegate.labelName( id );\n-    }\n-\n-    @Override\n-    public RecordReference<DynamicRecord> propertyKeyName( int id )\n-    {\n-        return delegate.propertyKeyName( id );\n-    }\n-\n-    @Override\n-    public RecordReference<NeoStoreRecord> graph()\n-    {\n-        return delegate.graph();\n-    }\n-\n-    @Override\n-    public RecordReference<RelationshipGroupRecord> relationshipGroup( long id )\n-    {\n-        return delegate.relationshipGroup( id );\n-    }\n-\n-    @Override\n-    public boolean shouldCheck( long id, MultiPassStore store )\n-    {\n-        return delegate.shouldCheck( id, store );\n-    }\n-\n-    @Override\n-    public CacheAccess cacheAccess()\n-    {\n-        return delegate.cacheAccess();\n-    }\n+  private final RecordAccess delegate;\n+\n+  public DelegatingRecordAccess(RecordAccess delegate)\n+  {\n+    this.delegate = delegate;\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> schema(long id)\n+  {\n+    return delegate.schema(id);\n+  }\n+\n+  @Override\n+  public RecordReference<NodeRecord> node(long id)\n+  {\n+    return delegate.node(id);\n+  }\n+\n+  @Override\n+  public RecordReference<RelationshipRecord> relationship(long id)\n+  {\n+    return delegate.relationship(id);\n+  }\n+\n+  @Override\n+  public RecordReference<PropertyRecord> property(long id)\n+  {\n+    return delegate.property(id);\n+  }\n+\n+  @Override\n+  public Iterator<PropertyRecord> rawPropertyChain(long firstId)\n+  {\n+    return delegate.rawPropertyChain(firstId);\n+  }\n+\n+  @Override\n+  public RecordReference<RelationshipTypeTokenRecord> relationshipType(int id)\n+  {\n+    return delegate.relationshipType(id);\n+  }\n+\n+  @Override\n+  public RecordReference<PropertyKeyTokenRecord> propertyKey(int id)\n+  {\n+    return delegate.propertyKey(id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> string(long id)\n+  {\n+    return delegate.string(id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> array(long id)\n+  {\n+    return delegate.array(id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> relationshipTypeName(int id)\n+  {\n+    return delegate.relationshipTypeName(id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> nodeLabels(long id)\n+  {\n+    return delegate.nodeLabels(id);\n+  }\n+\n+  @Override\n+  public RecordReference<LabelTokenRecord> label(int id)\n+  {\n+    return delegate.label(id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> labelName(int id)\n+  {\n+    return delegate.labelName(id);\n+  }\n+\n+  @Override\n+  public RecordReference<DynamicRecord> propertyKeyName(int id)\n+  {\n+    return delegate.propertyKeyName(id);\n+  }\n+\n+  @Override\n+  public RecordReference<NeoStoreRecord> graph()\n+  {\n+    return delegate.graph();\n+  }\n+\n+  @Override\n+  public RecordReference<RelationshipGroupRecord> relationshipGroup(long id)\n+  {\n+    return delegate.relationshipGroup(id);\n+  }\n+\n+  @Override\n+  public boolean shouldCheck(long id, MultiPassStore store)\n+  {\n+    return delegate.shouldCheck(id, store);\n+  }\n+\n+  @Override\n+  public CacheAccess cacheAccess()\n+  {\n+    return delegate.cacheAccess();\n+  }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/550/DelegatingRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/550/DelegatingRecordAccess.java\nindex 0970bc43f64..0f2000b7d92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/550/DelegatingRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/550/DelegatingRecordAccess.java\n@@ -149,4 +149,4 @@ public class DelegatingRecordAccess implements RecordAccess\n     {\n         return delegate.cacheAccess();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
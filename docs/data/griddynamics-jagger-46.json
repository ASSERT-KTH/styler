{
    "project_name": "griddynamics-jagger",
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "26",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 151).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/** Validates that invocation result is not null.@n\n * To use this validator add @xlink{validator} element with type @xlink{validator-not-null-response} in @xlink{test-description,info-collectors} block.\n * @author Dmitry Kotlyarov\n * @n\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/46/NotNullResponseValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/46/NotNullResponseValidator.java\nindex 4d12cb74765..06b016bca0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/46/NotNullResponseValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/46/NotNullResponseValidator.java\n@@ -22,16 +22,17 @@ package com.griddynamics.jagger.engine.e1.collector;\n \n import com.griddynamics.jagger.coordinator.NodeContext;\n \n-/** Validates that invocation result is not null.@n\n+/**\n+ * Validates that invocation result is not null.@n\n  * To use this validator add @xlink{validator} element with type @xlink{validator-not-null-response} in @xlink{test-description,info-collectors} block.\n- * @author Dmitry Kotlyarov\n- * @n\n  *\n  * @param <Q> - Query type\n  * @param <R> - Result type\n  * @param <E> - Endpoint type\n- *\n- * @ingroup Main_Collectors_group */\n+ * @author Dmitry Kotlyarov\n+ * @n\n+ * @ingroup Main_Collectors_group\n+ */\n public class NotNullResponseValidator<Q, E, R> extends ResponseValidator<Q, E, R> {\n     public NotNullResponseValidator(String taskId, String sessionId, NodeContext kernelContext) {\n         super(taskId, sessionId, kernelContext);\n@@ -42,16 +43,17 @@ public class NotNullResponseValidator<Q, E, R> extends ResponseValidator<Q, E, R\n         return \"Not-null Validator\";\n     }\n \n-    /** Return false if invocation result is null\n+    /**\n+     * Return false if invocation result is null\n+     *\n+     * @param query    - the query of current invocation\n+     * @param endpoint - the endpoint of current invocation\n+     * @param result   - the result of invocation\n+     * @param duration - the duration of invocation\n+     * @return false if invocation result is null\n      * @author Dmitry Kotlyarov\n      * @n\n-     *\n-     * @param query     - the query of current invocation\n-     * @param endpoint  - the endpoint of current invocation\n-     * @param result    - the result of invocation\n-     * @param duration  - the duration of invocation\n-     *\n-     * @return false if invocation result is null */\n+     */\n     @Override\n     public boolean validate(Q query, E endpoint, R result, long duration) {\n         return result != null;\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/46/NotNullResponseValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/46/NotNullResponseValidator.java\nindex 4d12cb74765..88b2034bc76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/46/NotNullResponseValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/46/NotNullResponseValidator.java\n@@ -56,4 +56,4 @@ public class NotNullResponseValidator<Q, E, R> extends ResponseValidator<Q, E, R\n     public boolean validate(Q query, E endpoint, R result, long duration) {\n         return result != null;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
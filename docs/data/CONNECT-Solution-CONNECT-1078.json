{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1078",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.services.impl;\n\nimport gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\nimport gov.hhs.fha.nhinc.admingui.services.StatusService;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1078/StatusServiceImpl.java\nindex ea49cf571e0..c2d24b70533 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1078/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1078/StatusServiceImpl.java\nindex ea49cf571e0..629c2402123 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1078/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n@@ -33,46 +34,44 @@ import java.lang.management.MemoryMXBean;\n import java.text.MessageFormat;\n \n /**\n- *\n  * @author jassmit\n  */\n public class StatusServiceImpl implements StatusService {\n \n-    private static final String JAVA_VERSION_KEY = \"java.version\";\n-    private static final String JAVA_VENDOR_KEY = \"java.vm.vendor\";\n-    private static final String OS_KEY = \"os.name\";\n-    private static final String OS_VERSION_KEY = \"os.version\";\n-    private static final long MB_VALUE = 1048576;\n-\n-    @Override\n-    public String getOperatingSystem() {\n-        return MessageFormat.format(\"{0}, {1}\", System.getProperty(OS_KEY), System.getProperty(OS_VERSION_KEY));\n-    }\n+  private static final String JAVA_VERSION_KEY = \"java.version\";\n+  private static final String JAVA_VENDOR_KEY = \"java.vm.vendor\";\n+  private static final String OS_KEY = \"os.name\";\n+  private static final String OS_VERSION_KEY = \"os.version\";\n+  private static final long MB_VALUE = 1048576;\n \n-    @Override\n-    public String getJavaVersion() {\n-        return MessageFormat.format(\"{0}, {1}\", System.getProperty(JAVA_VERSION_KEY),\n-            System.getProperty(JAVA_VENDOR_KEY));\n-    }\n+  @Override\n+  public String getOperatingSystem() {\n+    return MessageFormat.format(\"{0}, {1}\", System.getProperty(OS_KEY), System.getProperty(OS_VERSION_KEY));\n+  }\n \n-    @Override\n-    public String getMemory() {\n-        MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();\n-        long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n-        long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n-        long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n+  @Override\n+  public String getJavaVersion() {\n+    return MessageFormat.format(\"{0}, {1}\", System.getProperty(JAVA_VERSION_KEY),\n+        System.getProperty(JAVA_VENDOR_KEY));\n+  }\n \n-        if (totalMemoryUsed > 0) {\n-            return Long.toString(totalMemoryUsed) + \" MB\";\n-        }\n-        return null;\n-    }\n+  @Override\n+  public String getMemory() {\n+    MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();\n+    long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n+    long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n+    long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n \n-    @Override\n-    public String getApplicationServer() {\n-        return ApplicationInfo.getInstance().getServerInfo();\n+    if (totalMemoryUsed > 0) {\n+      return Long.toString(totalMemoryUsed) + \" MB\";\n     }\n+    return null;\n+  }\n \n+  @Override\n+  public String getApplicationServer() {\n+    return ApplicationInfo.getInstance().getServerInfo();\n+  }\n \n \n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "column": "20",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1078/StatusServiceImpl.java\nindex ea49cf571e0..dfcadcf876b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1078/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n@@ -51,8 +52,7 @@ public class StatusServiceImpl implements StatusService {\n \n     @Override\n     public String getJavaVersion() {\n-        return MessageFormat.format(\"{0}, {1}\", System.getProperty(JAVA_VERSION_KEY),\n-            System.getProperty(JAVA_VENDOR_KEY));\n+        return MessageFormat.format(\"{0}, {1}\", System.getProperty(JAVA_VERSION_KEY), System.getProperty(JAVA_VENDOR_KEY));\n     }\n \n     @Override\n@@ -61,8 +61,7 @@ public class StatusServiceImpl implements StatusService {\n         long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n         long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n         long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n-\n-        if (totalMemoryUsed > 0) {\n+if (totalMemoryUsed> 0) {\n             return Long.toString(totalMemoryUsed) + \" MB\";\n         }\n         return null;\n@@ -73,6 +72,4 @@ public class StatusServiceImpl implements StatusService {\n         return ApplicationInfo.getInstance().getServerInfo();\n     }\n \n-\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "60",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "70",
                    "column": "60",
                    "severity": "error",
                    "message": "'/' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                },
                {
                    "line": "72",
                    "column": "28",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1078/StatusServiceImpl.java\nindex ea49cf571e0..bf5f1922762 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1078/StatusServiceImpl.java\n@@ -36,6 +36,8 @@ import java.text.MessageFormat;\n  *\n  * @author jassmit\n  */\n+\n+\n public class StatusServiceImpl implements StatusService {\n \n     private static final String JAVA_VERSION_KEY = \"java.version\";\n@@ -44,35 +46,39 @@ public class StatusServiceImpl implements StatusService {\n     private static final String OS_VERSION_KEY = \"os.version\";\n     private static final long MB_VALUE = 1048576;\n \n+\n     @Override\n     public String getOperatingSystem() {\n         return MessageFormat.format(\"{0}, {1}\", System.getProperty(OS_KEY), System.getProperty(OS_VERSION_KEY));\n     }\n \n+\n     @Override\n     public String getJavaVersion() {\n-        return MessageFormat.format(\"{0}, {1}\", System.getProperty(JAVA_VERSION_KEY),\n-            System.getProperty(JAVA_VENDOR_KEY));\n+        return MessageFormat.format(\"{0}, {1}\", System.getProperty(JAVA_VERSION_KEY), System.getProperty(JAVA_VENDOR_KEY));\n     }\n \n+\n     @Override\n     public String getMemory() {\n         MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();\n+\n         long heapMemUsed = memoryBean.getHeapMemoryUsage().getUsed();\n+\n         long otherMemUsed = memoryBean.getNonHeapMemoryUsage().getUsed();\n-        long totalMemoryUsed = (heapMemUsed + otherMemUsed) / MB_VALUE;\n \n-        if (totalMemoryUsed > 0) {\n+        long totalMemoryUsed = (heapMemUsed + otherMemUsed)/\n+                                   MB_VALUE;\n+        if (totalMemoryUsed> 0) {\n             return Long.toString(totalMemoryUsed) + \" MB\";\n         }\n         return null;\n     }\n \n+\n     @Override\n     public String getApplicationServer() {\n         return ApplicationInfo.getInstance().getServerInfo();\n     }\n \n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1078/StatusServiceImpl.java\nindex ea49cf571e0..c2d24b70533 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1078/StatusServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1078/StatusServiceImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.services.impl;\n \n import gov.hhs.fha.nhinc.admingui.application.ApplicationInfo;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
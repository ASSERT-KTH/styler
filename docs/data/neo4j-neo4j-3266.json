{
    "project_name": "neo4j-neo4j",
    "error_id": "3266",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3266/SslSocketConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3266/SslSocketConnectorFactory.java\nindex d91c49b7f20..0d9f7dec6b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3266/SslSocketConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3266/SslSocketConnectorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.ssl;\n \n import org.eclipse.jetty.http.HttpVersion;\n@@ -43,66 +44,66 @@ public class SslSocketConnectorFactory extends HttpConnectorFactory\n \n     private final Customizer requestCustomizer;\n \n-    public SslSocketConnectorFactory( NetworkConnectionTracker connectionTracker, Config config )\n+    public SslSocketConnectorFactory(NetworkConnectionTracker connectionTracker, Config config)\n     {\n-        super( NAME, connectionTracker, config );\n-        requestCustomizer = new HttpsRequestCustomizer( config );\n+        super(NAME, connectionTracker, config);\n+        requestCustomizer = new HttpsRequestCustomizer(config);\n     }\n \n     @Override\n     protected HttpConfiguration createHttpConfig()\n     {\n         HttpConfiguration httpConfig = super.createHttpConfig();\n-        httpConfig.addCustomizer( requestCustomizer );\n+        httpConfig.addCustomizer(requestCustomizer);\n         return httpConfig;\n     }\n \n-    public ServerConnector createConnector( Server server, SslPolicy sslPolicy, SocketAddress address,\n-            JettyThreadCalculator jettyThreadCalculator )\n+    public ServerConnector createConnector(Server server, SslPolicy sslPolicy, SocketAddress address,\n+                                           JettyThreadCalculator jettyThreadCalculator)\n     {\n-        SslConnectionFactory sslConnectionFactory = createSslConnectionFactory( sslPolicy );\n-        return createConnector( server, address, jettyThreadCalculator, sslConnectionFactory, createHttpConnectionFactory() );\n+        SslConnectionFactory sslConnectionFactory = createSslConnectionFactory(sslPolicy);\n+        return createConnector(server, address, jettyThreadCalculator, sslConnectionFactory, createHttpConnectionFactory());\n     }\n \n-    private SslConnectionFactory createSslConnectionFactory( SslPolicy sslPolicy )\n+    private SslConnectionFactory createSslConnectionFactory(SslPolicy sslPolicy)\n     {\n         SslContextFactory.Server sslContextFactory = new SslContextFactory.Server();\n \n         String password = UUID.randomUUID().toString();\n-        sslContextFactory.setKeyStore( sslPolicy.getKeyStore( password.toCharArray(), password.toCharArray() ) );\n-        sslContextFactory.setKeyStorePassword( password );\n-        sslContextFactory.setKeyManagerPassword( password );\n+        sslContextFactory.setKeyStore(sslPolicy.getKeyStore(password.toCharArray(), password.toCharArray()));\n+        sslContextFactory.setKeyStorePassword(password);\n+        sslContextFactory.setKeyManagerPassword(password);\n \n         List<String> ciphers = sslPolicy.getCipherSuites();\n-        if ( ciphers != null )\n+        if (ciphers != null)\n         {\n-            sslContextFactory.setIncludeCipherSuites( ciphers.toArray( new String[0] ) );\n+            sslContextFactory.setIncludeCipherSuites(ciphers.toArray(new String[0]));\n             sslContextFactory.setExcludeCipherSuites();\n         }\n \n         String[] protocols = sslPolicy.getTlsVersions();\n-        if ( protocols != null )\n+        if (protocols != null)\n         {\n-            sslContextFactory.setIncludeProtocols( protocols );\n+            sslContextFactory.setIncludeProtocols(protocols);\n             sslContextFactory.setExcludeProtocols();\n         }\n \n-        switch ( sslPolicy.getClientAuth() )\n+        switch (sslPolicy.getClientAuth())\n         {\n-        case REQUIRE:\n-            sslContextFactory.setNeedClientAuth( true );\n-            break;\n-        case OPTIONAL:\n-            sslContextFactory.setWantClientAuth( true );\n-            break;\n-        case NONE:\n-            sslContextFactory.setWantClientAuth( false );\n-            sslContextFactory.setNeedClientAuth( false );\n-            break;\n-        default:\n-            throw new IllegalArgumentException( \"Not supported: \" + sslPolicy.getClientAuth() );\n+            case REQUIRE:\n+                sslContextFactory.setNeedClientAuth(true);\n+                break;\n+            case OPTIONAL:\n+                sslContextFactory.setWantClientAuth(true);\n+                break;\n+            case NONE:\n+                sslContextFactory.setWantClientAuth(false);\n+                sslContextFactory.setNeedClientAuth(false);\n+                break;\n+            default:\n+                throw new IllegalArgumentException(\"Not supported: \" + sslPolicy.getClientAuth());\n         }\n \n-        return new SslConnectionFactory( sslContextFactory, HttpVersion.HTTP_1_1.asString() );\n+        return new SslConnectionFactory(sslContextFactory, HttpVersion.HTTP_1_1.asString());\n     }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
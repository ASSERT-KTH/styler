{
    "project_name": "graphfoundation-ongdb",
    "error_id": "514",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/514/NativeMemoryAllocationRefusedError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/514/NativeMemoryAllocationRefusedError.java\nindex 7fe3ba42d8e..cbedb2b6f6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/514/NativeMemoryAllocationRefusedError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/514/NativeMemoryAllocationRefusedError.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.internal.dragons;\n \n import static org.neo4j.io.os.OsBeanUtil.VALUE_UNAVAILABLE;\n@@ -26,64 +27,62 @@ import static org.neo4j.io.os.OsBeanUtil.getTotalPhysicalMemory;\n \n public class NativeMemoryAllocationRefusedError extends Error\n {\n-    private final long attemptedAllocationSizeBytes;\n-    private final long alreadyAllocatedBytes;\n+  private final long attemptedAllocationSizeBytes;\n+  private final long alreadyAllocatedBytes;\n \n-    NativeMemoryAllocationRefusedError( long size, long alreadyAllocatedBytes, Throwable cause )\n-    {\n-        super( cause );\n-        this.attemptedAllocationSizeBytes = size;\n-        this.alreadyAllocatedBytes = alreadyAllocatedBytes;\n-    }\n-\n-    @Override\n-    public String getMessage()\n-    {\n-        String message = super.getMessage();\n-        StringBuilder sb = new StringBuilder();\n-        sb.append( \"Failed to allocate \" ).append( attemptedAllocationSizeBytes ).append( \" bytes. \" );\n-        sb.append( \"So far \" ).append( alreadyAllocatedBytes );\n-        sb.append( \" bytes have already been successfully allocated. \" );\n-        sb.append( \"The system currently has \" );\n-        appendBytes( sb, getTotalPhysicalMemory() ).append( \" total physical memory, \" );\n-        appendBytes( sb, getCommittedVirtualMemory() ).append( \" committed virtual memory, and \" );\n-        appendBytes( sb, getFreePhysicalMemory() ).append( \" free physical memory. \" );\n-        sb.append( \"Relevant system properties: \" );\n-        appendSysProp( sb, \"java.vm.name\" );\n-        appendSysProp( sb.append( \", \" ), \"java.vm.vendor\" );\n-        appendSysProp( sb.append( \", \" ), \"os.arch\" );\n+  NativeMemoryAllocationRefusedError(long size, long alreadyAllocatedBytes, Throwable cause)\n+  {\n+    super(cause);\n+    this.attemptedAllocationSizeBytes = size;\n+    this.alreadyAllocatedBytes = alreadyAllocatedBytes;\n+  }\n \n-        if ( getCause() instanceof OutOfMemoryError )\n-        {\n-            sb.append( \". The allocation was refused by the operating system\" );\n-        }\n+  @Override\n+  public String getMessage()\n+  {\n+    String message = super.getMessage();\n+    StringBuilder sb = new StringBuilder();\n+    sb.append(\"Failed to allocate \").append(attemptedAllocationSizeBytes).append(\" bytes. \");\n+    sb.append(\"So far \").append(alreadyAllocatedBytes);\n+    sb.append(\" bytes have already been successfully allocated. \");\n+    sb.append(\"The system currently has \");\n+    appendBytes(sb, getTotalPhysicalMemory()).append(\" total physical memory, \");\n+    appendBytes(sb, getCommittedVirtualMemory()).append(\" committed virtual memory, and \");\n+    appendBytes(sb, getFreePhysicalMemory()).append(\" free physical memory. \");\n+    sb.append(\"Relevant system properties: \");\n+    appendSysProp(sb, \"java.vm.name\");\n+    appendSysProp(sb.append(\", \"), \"java.vm.vendor\");\n+    appendSysProp(sb.append(\", \"), \"os.arch\");\n \n-        if ( message != null )\n-        {\n-            sb.append( \": \" ).append( message );\n-        }\n-        else\n-        {\n-            sb.append( '.' );\n-        }\n-        return sb.toString();\n+    if (getCause() instanceof OutOfMemoryError)\n+    {\n+      sb.append(\". The allocation was refused by the operating system\");\n     }\n \n-    private StringBuilder appendBytes( StringBuilder sb, long bytes )\n+    if (message != null)\n+    {\n+      sb.append(\": \").append(message);\n+    } else\n     {\n-        if ( bytes == VALUE_UNAVAILABLE )\n-        {\n-            sb.append( \"(?) bytes\" );\n-        }\n-        else\n-        {\n-            sb.append( bytes ).append( \" bytes\" );\n-        }\n-        return sb;\n+      sb.append('.');\n     }\n+    return sb.toString();\n+  }\n \n-    private void appendSysProp( StringBuilder sb, String sysProp )\n+  private StringBuilder appendBytes(StringBuilder sb, long bytes)\n+  {\n+    if (bytes == VALUE_UNAVAILABLE)\n     {\n-        sb.append( '\"' ).append( sysProp ).append( \"\\\" = \\\"\" ).append( System.getProperty( sysProp ) ).append( '\"' );\n+      sb.append(\"(?) bytes\");\n+    } else\n+    {\n+      sb.append(bytes).append(\" bytes\");\n     }\n+    return sb;\n+  }\n+\n+  private void appendSysProp(StringBuilder sb, String sysProp)\n+  {\n+    sb.append('\"').append(sysProp).append(\"\\\" = \\\"\").append(System.getProperty(sysProp)).append('\"');\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/514/NativeMemoryAllocationRefusedError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/514/NativeMemoryAllocationRefusedError.java\nindex 7fe3ba42d8e..6712f9a1d09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/514/NativeMemoryAllocationRefusedError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/514/NativeMemoryAllocationRefusedError.java\n@@ -52,8 +52,7 @@ public class NativeMemoryAllocationRefusedError extends Error\n         appendSysProp( sb, \"java.vm.name\" );\n         appendSysProp( sb.append( \", \" ), \"java.vm.vendor\" );\n         appendSysProp( sb.append( \", \" ), \"os.arch\" );\n-\n-        if ( getCause() instanceof OutOfMemoryError )\n+if ( getCause() instanceof OutOfMemoryError )\n         {\n             sb.append( \". The allocation was refused by the operating system\" );\n         }\n@@ -66,7 +65,8 @@ public class NativeMemoryAllocationRefusedError extends Error\n         {\n             sb.append( '.' );\n         }\n-        return sb.toString();\n+\n+return sb.toString();\n     }\n \n     private StringBuilder appendBytes( StringBuilder sb, long bytes )\n@@ -79,11 +79,12 @@ public class NativeMemoryAllocationRefusedError extends Error\n         {\n             sb.append( bytes ).append( \" bytes\" );\n         }\n-        return sb;\n+\n+return sb;\n     }\n \n     private void appendSysProp( StringBuilder sb, String sysProp )\n     {\n         sb.append( '\"' ).append( sysProp ).append( \"\\\" = \\\"\" ).append( System.getProperty( sysProp ) ).append( '\"' );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
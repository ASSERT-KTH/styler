{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2194",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2194/AbstractUserRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2194/AbstractUserRepository.java\nindex a8aa9c5d558..d77c1ab003d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2194/AbstractUserRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2194/AbstractUserRepository.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import java.io.IOException;\n@@ -38,181 +39,183 @@ import static org.neo4j.helpers.collection.MapUtil.trimToList;\n \n public abstract class AbstractUserRepository extends LifecycleAdapter implements UserRepository\n {\n-    /** Quick lookup of users by name */\n-    private final Map<String,User> usersByName = new ConcurrentHashMap<>();\n-\n-    /** Master list of users */\n-    protected volatile List<User> users = new ArrayList<>();\n-    protected AtomicLong lastLoaded = new AtomicLong( 0L );\n-\n-    // Allow all ascii from '!' to '~', apart from ',' and ':' which are used as separators in flat file\n-    private final Pattern usernamePattern = Pattern.compile( \"^[\\\\x21-\\\\x2B\\\\x2D-\\\\x39\\\\x3B-\\\\x7E]+$\" );\n-\n-    @Override\n-    public void clear()\n+  /**\n+   * Quick lookup of users by name\n+   */\n+  private final Map<String, User> usersByName = new ConcurrentHashMap<>();\n+\n+  /**\n+   * Master list of users\n+   */\n+  protected volatile List<User> users = new ArrayList<>();\n+  protected AtomicLong lastLoaded = new AtomicLong(0L);\n+\n+  // Allow all ascii from '!' to '~', apart from ',' and ':' which are used as separators in flat file\n+  private final Pattern usernamePattern = Pattern.compile(\"^[\\\\x21-\\\\x2B\\\\x2D-\\\\x39\\\\x3B-\\\\x7E]+$\");\n+\n+  @Override\n+  public void clear()\n+  {\n+    users.clear();\n+    usersByName.clear();\n+  }\n+\n+  @Override\n+  public User getUserByName(String username)\n+  {\n+    return username == null ? null : usersByName.get(username);\n+  }\n+\n+  @Override\n+  public void create(User user) throws InvalidArgumentsException, IOException\n+  {\n+    assertValidUsername(user.name());\n+\n+    synchronized (this)\n     {\n-        users.clear();\n-        usersByName.clear();\n-    }\n+      // Check for existing user\n+      for (User other : users)\n+      {\n+        if (other.name().equals(user.name()))\n+        {\n+          throw new InvalidArgumentsException(\"The specified user '\" + user.name() + \"' already exists.\");\n+        }\n+      }\n \n-    @Override\n-    public User getUserByName( String username )\n-    {\n-        return username == null ? null : usersByName.get( username );\n+      users.add(user);\n+      usersByName.put(user.name(), user);\n+      persistUsers();\n     }\n+  }\n \n-    @Override\n-    public void create( User user ) throws InvalidArgumentsException, IOException\n+  @Override\n+  public void setUsers(ListSnapshot<User> usersSnapshot) throws InvalidArgumentsException\n+  {\n+    for (User user : usersSnapshot.values())\n     {\n-        assertValidUsername( user.name() );\n-\n-        synchronized ( this )\n-        {\n-            // Check for existing user\n-            for ( User other : users )\n-            {\n-                if ( other.name().equals( user.name() ) )\n-                {\n-                    throw new InvalidArgumentsException( \"The specified user '\" + user.name() + \"' already exists.\" );\n-                }\n-            }\n-\n-            users.add( user );\n-            usersByName.put( user.name(), user );\n-            persistUsers();\n-        }\n+      assertValidUsername(user.name());\n     }\n \n-    @Override\n-    public void setUsers( ListSnapshot<User> usersSnapshot ) throws InvalidArgumentsException\n+    synchronized (this)\n     {\n-        for ( User user : usersSnapshot.values() )\n-        {\n-            assertValidUsername( user.name() );\n-        }\n+      users.clear();\n \n-        synchronized ( this )\n-        {\n-            users.clear();\n+      this.users.addAll(usersSnapshot.values());\n+      this.lastLoaded.set(usersSnapshot.timestamp());\n \n-            this.users.addAll( usersSnapshot.values() );\n-            this.lastLoaded.set( usersSnapshot.timestamp() );\n+      trimToList(usersByName, users, User::name);\n \n-            trimToList( usersByName, users, User::name );\n-\n-            for ( User user : users )\n-            {\n-                usersByName.put( user.name(), user );\n-            }\n-        }\n+      for (User user : users)\n+      {\n+        usersByName.put(user.name(), user);\n+      }\n     }\n-\n-    @Override\n-    public void update( User existingUser, User updatedUser )\n-            throws ConcurrentModificationException, IOException\n+  }\n+\n+  @Override\n+  public void update(User existingUser, User updatedUser)\n+      throws ConcurrentModificationException, IOException\n+  {\n+    // Assert input is ok\n+    if (!existingUser.name().equals(updatedUser.name()))\n     {\n-        // Assert input is ok\n-        if ( !existingUser.name().equals( updatedUser.name() ) )\n-        {\n-            throw new IllegalArgumentException( \"The attempt to update the role from '\" + existingUser.name() +\n-                    \"' to '\" + updatedUser.name() + \"' failed. Changing a roles name is not allowed.\" );\n-        }\n-\n-        synchronized ( this )\n-        {\n-            // Copy-on-write for the users list\n-            List<User> newUsers = new ArrayList<>();\n-            boolean foundUser = false;\n-            for ( User other : users )\n-            {\n-                if ( other.equals( existingUser ) )\n-                {\n-                    foundUser = true;\n-                    newUsers.add( updatedUser );\n-                }\n-                else\n-                {\n-                    newUsers.add( other );\n-                }\n-            }\n-\n-            if ( !foundUser )\n-            {\n-                throw new ConcurrentModificationException();\n-            }\n-\n-            users = newUsers;\n-            usersByName.put( updatedUser.name(), updatedUser );\n-            persistUsers();\n-        }\n+      throw new IllegalArgumentException(\"The attempt to update the role from '\" + existingUser.name() +\n+          \"' to '\" + updatedUser.name() + \"' failed. Changing a roles name is not allowed.\");\n     }\n \n-    @Override\n-    public synchronized boolean delete( User user ) throws IOException\n+    synchronized (this)\n     {\n-        boolean foundUser = false;\n-        // Copy-on-write for the users list\n-        List<User> newUsers = new ArrayList<>();\n-        for ( User other : users )\n+      // Copy-on-write for the users list\n+      List<User> newUsers = new ArrayList<>();\n+      boolean foundUser = false;\n+      for (User other : users)\n+      {\n+        if (other.equals(existingUser))\n         {\n-            if ( other.name().equals( user.name() ) )\n-            {\n-                foundUser = true;\n-            }\n-            else\n-            {\n-                newUsers.add( other );\n-            }\n-        }\n-\n-        if ( foundUser )\n+          foundUser = true;\n+          newUsers.add(updatedUser);\n+        } else\n         {\n-            users = newUsers;\n-            usersByName.remove( user.name() );\n-            persistUsers();\n+          newUsers.add(other);\n         }\n-        return foundUser;\n-    }\n+      }\n \n-    @Override\n-    public synchronized int numberOfUsers()\n+      if (!foundUser)\n+      {\n+        throw new ConcurrentModificationException();\n+      }\n+\n+      users = newUsers;\n+      usersByName.put(updatedUser.name(), updatedUser);\n+      persistUsers();\n+    }\n+  }\n+\n+  @Override\n+  public synchronized boolean delete(User user) throws IOException\n+  {\n+    boolean foundUser = false;\n+    // Copy-on-write for the users list\n+    List<User> newUsers = new ArrayList<>();\n+    for (User other : users)\n     {\n-        return users.size();\n+      if (other.name().equals(user.name()))\n+      {\n+        foundUser = true;\n+      } else\n+      {\n+        newUsers.add(other);\n+      }\n     }\n \n-    @Override\n-    public void assertValidUsername( String username ) throws InvalidArgumentsException\n+    if (foundUser)\n     {\n-        if ( username == null || username.isEmpty() )\n-        {\n-            throw new InvalidArgumentsException( \"The provided username is empty.\" );\n-        }\n-        if ( !usernamePattern.matcher( username ).matches() )\n-        {\n-            throw new InvalidArgumentsException(\n-                    \"Username '\" + username +\n-                    \"' contains illegal characters. Use ascii characters that are not ',', ':' or whitespaces.\" );\n-        }\n+      users = newUsers;\n+      usersByName.remove(user.name());\n+      persistUsers();\n     }\n-\n-    @Override\n-    public synchronized Set<String> getAllUsernames()\n+    return foundUser;\n+  }\n+\n+  @Override\n+  public synchronized int numberOfUsers()\n+  {\n+    return users.size();\n+  }\n+\n+  @Override\n+  public void assertValidUsername(String username) throws InvalidArgumentsException\n+  {\n+    if (username == null || username.isEmpty())\n     {\n-        return users.stream().map( User::name ).collect( Collectors.toSet() );\n+      throw new InvalidArgumentsException(\"The provided username is empty.\");\n     }\n-\n-    /**\n-     * Override this in the implementing class to persist users\n-     *\n-     * @throws IOException\n-     */\n-    protected abstract void persistUsers() throws IOException;\n-\n-    /**\n-     * Override this in the implementing class to load users\n-     *\n-     * @return a timestamped snapshot of users, or null if the backing file did not exist\n-     * @throws IOException\n-     */\n-    protected abstract ListSnapshot<User> readPersistedUsers() throws IOException;\n+    if (!usernamePattern.matcher(username).matches())\n+    {\n+      throw new InvalidArgumentsException(\n+          \"Username '\" + username +\n+              \"' contains illegal characters. Use ascii characters that are not ',', ':' or whitespaces.\");\n+    }\n+  }\n+\n+  @Override\n+  public synchronized Set<String> getAllUsernames()\n+  {\n+    return users.stream().map(User::name).collect(Collectors.toSet());\n+  }\n+\n+  /**\n+   * Override this in the implementing class to persist users\n+   *\n+   * @throws IOException\n+   */\n+  protected abstract void persistUsers() throws IOException;\n+\n+  /**\n+   * Override this in the implementing class to load users\n+   *\n+   * @return a timestamped snapshot of users, or null if the backing file did not exist\n+   * @throws IOException\n+   */\n+  protected abstract ListSnapshot<User> readPersistedUsers() throws IOException;\n }\n",
            "diff_size": 231
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2194/AbstractUserRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2194/AbstractUserRepository.java\nindex a8aa9c5d558..06d80837b4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2194/AbstractUserRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2194/AbstractUserRepository.java\n@@ -94,13 +94,11 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n         synchronized ( this )\n         {\n             users.clear();\n-\n-            this.users.addAll( usersSnapshot.values() );\n+this.users.addAll( usersSnapshot.values() );\n             this.lastLoaded.set( usersSnapshot.timestamp() );\n \n             trimToList( usersByName, users, User::name );\n-\n-            for ( User user : users )\n+for ( User user : users )\n             {\n                 usersByName.put( user.name(), user );\n             }\n@@ -108,14 +106,12 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n     }\n \n     @Override\n-    public void update( User existingUser, User updatedUser )\n-            throws ConcurrentModificationException, IOException\n-    {\n+    public void update( User existingUser, User updatedUser ) throws ConcurrentModificationException, IOException\n+{\n         // Assert input is ok\n         if ( !existingUser.name().equals( updatedUser.name() ) )\n         {\n-            throw new IllegalArgumentException( \"The attempt to update the role from '\" + existingUser.name() +\n-                    \"' to '\" + updatedUser.name() + \"' failed. Changing a roles name is not allowed.\" );\n+            throw new IllegalArgumentException( \"The attempt to update the role from '\" + existingUser.name() + \"' to '\" + updatedUser.name() + \"' failed. Changing a roles name is not allowed.\" );\n         }\n \n         synchronized ( this )\n@@ -171,7 +167,8 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n             usersByName.remove( user.name() );\n             persistUsers();\n         }\n-        return foundUser;\n+\n+return foundUser;\n     }\n \n     @Override\n@@ -187,12 +184,11 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n         {\n             throw new InvalidArgumentsException( \"The provided username is empty.\" );\n         }\n-        if ( !usernamePattern.matcher( username ).matches() )\n+\n+if ( !usernamePattern.matcher( username ).matches() )\n         {\n-            throw new InvalidArgumentsException(\n-                    \"Username '\" + username +\n-                    \"' contains illegal characters. Use ascii characters that are not ',', ':' or whitespaces.\" );\n-        }\n+            throw new InvalidArgumentsException( \"Username '\" + username + \"' contains illegal characters. Use ascii characters that are not ',', ':' or whitespaces.\" );\n+    }\n     }\n \n     @Override\n@@ -215,4 +211,4 @@ public abstract class AbstractUserRepository extends LifecycleAdapter implements\n      * @throws IOException\n      */\n     protected abstract ListSnapshot<User> readPersistedUsers() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
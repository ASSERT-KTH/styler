{
    "project_name": "wso2-attic-commons",
    "error_id": "238",
    "information": {
        "errors": [
            {
                "line": "148",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /* (non-Javadoc)\n   * @see org.wsi.test.report.AssertionResult#setAssertionResultsOption(org.wsi.test.analyzer.config.AssertionResultsOption)\n   */\n  public void setAssertionResultsOption(AssertionResultsOption assertionResultsOption)\n  {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/238/AssertionResultImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/238/AssertionResultImpl.java\nindex 5b2d8ce1414..5bfeeacaeb0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/238/AssertionResultImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/238/AssertionResultImpl.java\n@@ -8,6 +8,7 @@\n  * Contributors:\n  *   IBM - Initial API and implementation\n  *******************************************************************************/\n+\n package org.eclipse.wst.wsi.internal.core.report.impl;\n \n import java.io.PrintWriter;\n@@ -29,11 +30,10 @@ import com.ibm.wsdl.util.xml.DOMUtils;\n /**\n  * Test assertion result.\n  *\n- * @version 1.0.1\n  * @author Peter Brittenham (peterbr@us.ibm.com)\n+ * @version 1.0.1\n  */\n-public class AssertionResultImpl implements AssertionResult\n-{\n+public class AssertionResultImpl implements AssertionResult {\n   /**\n    * Assertion result.\n    */\n@@ -68,117 +68,104 @@ public class AssertionResultImpl implements AssertionResult\n   /**\n    * Create a new assertion result.\n    */\n-  public AssertionResultImpl()\n-  {\n+  public AssertionResultImpl() {\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#getResult()\n    */\n-  public String getResult()\n-  {\n+  public String getResult() {\n     return this.result;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#setResult(java.lang.String)\n    */\n-  public void setResult(String result)\n-  {\n+  public void setResult(String result) {\n     this.result = result;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#getAssertion()\n    */\n-  public TestAssertion getAssertion()\n-  {\n+  public TestAssertion getAssertion() {\n     return this.testAssertion;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#setAssertion(org.wsi.test.profile.TestAssertion)\n    */\n-  public void setAssertion(TestAssertion testAssertion)\n-  {\n+  public void setAssertion(TestAssertion testAssertion) {\n     this.testAssertion = testAssertion;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#getEntry()\n    */\n-  public Entry getEntry()\n-  {\n+  public Entry getEntry() {\n     return this.entry;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#setEntry(org.wsi.test.report.Entry)\n    */\n-  public void setEntry(Entry entry)\n-  {\n+  public void setEntry(Entry entry) {\n     this.entry = entry;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#getFailureDetailList()\n    */\n-  public Vector getFailureDetailList()\n-  {\n+  public Vector getFailureDetailList() {\n     return this.failureDetailList;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#setFailureDetailList(java.util.Vector)\n    */\n-  public void setFailureDetailList(Vector failureDetailList)\n-  {\n+  public void setFailureDetailList(Vector failureDetailList) {\n     this.failureDetailList = failureDetailList;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#getAssertionResultsOption()\n    */\n-  public AssertionResultsOption getAssertionResultsOption()\n-  {\n+  public AssertionResultsOption getAssertionResultsOption() {\n     return this.assertionResultsOption;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#setAssertionResultsOption(org.wsi.test.analyzer.config.AssertionResultsOption)\n    */\n-  public void setAssertionResultsOption(AssertionResultsOption assertionResultsOption)\n-  {\n+  public void setAssertionResultsOption(AssertionResultsOption assertionResultsOption) {\n     this.assertionResultsOption = assertionResultsOption;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#getPrereqFailedList()\n    */\n-  public PrereqFailedList getPrereqFailedList()\n-  {\n+  public PrereqFailedList getPrereqFailedList() {\n     return this.prereqFailedList;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.report.AssertionResult#setPrereqFailedList(org.wsi.test.report.PrereqFailedList)\n    */\n-  public void setPrereqFailedList(PrereqFailedList prereqFailedList)\n-  {\n+  public void setPrereqFailedList(PrereqFailedList prereqFailedList) {\n     this.prereqFailedList = prereqFailedList;\n   }\n \n   /* (non-Javadoc)\n    * @see org.wsi.test.document.DocumentElement#toXMLString(java.lang.String)\n    */\n-  public String toXMLString(String namespaceName)\n-  {\n+  public String toXMLString(String namespaceName) {\n     StringWriter sw = new StringWriter();\n     PrintWriter pw = new PrintWriter(sw);\n \n     String nsName = namespaceName;\n-    if ((!nsName.equals(\"\") && (!nsName.endsWith(\":\"))))\n+    if ((!nsName.equals(\"\") && (!nsName.endsWith(\":\")))) {\n       nsName += \":\";\n+    }\n \n     // Create element \n     pw.print(\"      <\" + nsName + ELEM_NAME + \" \");\n@@ -188,16 +175,14 @@ public class AssertionResultImpl implements AssertionResult\n     // ADD: Add support for additional targets\n \n     // Add prereq failed list\n-    if (this.prereqFailedList != null)\n-    {\n+    if (this.prereqFailedList != null) {\n       pw.print(prereqFailedList.toXMLString(nsName));\n     }\n \n     // ADD: Add support for multiple languages\n     // If result is failed or warning, then add failure message\n     if ((result.equals(RESULT_FAILED) || result.equals(RESULT_WARNING))\n-      && (assertionResultsOption.getShowFailureMessage()))\n-    {\n+      && (assertionResultsOption.getShowFailureMessage())) {\n       pw.print(\n         \"        <\"\n           + nsName\n@@ -210,11 +195,9 @@ public class AssertionResultImpl implements AssertionResult\n     // ADD: Add support for multiple languages\n     // If any failure detail messages were specified, then add them\n     if ((failureDetailList != null)\n-      && (assertionResultsOption.getShowFailureDetail()))\n-    {\n+      && (assertionResultsOption.getShowFailureDetail())) {\n       Iterator iterator = failureDetailList.iterator();\n-      while (iterator.hasNext())\n-      {\n+      while (iterator.hasNext()) {\n         pw.print(((FailureDetail) iterator.next()).toXMLString(nsName));\n       }\n     }\n@@ -229,8 +212,7 @@ public class AssertionResultImpl implements AssertionResult\n   /* (non-Javadoc)\n    * @see java.lang.Object#toString()\n    */\n-  public String toString()\n-  {\n+  public String toString() {\n     return result;\n   }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/238/AssertionResultImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/238/AssertionResultImpl.java\nindex 5b2d8ce1414..cf908057b27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/238/AssertionResultImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/238/AssertionResultImpl.java\n@@ -233,4 +233,4 @@ public class AssertionResultImpl implements AssertionResult\n   {\n     return result;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
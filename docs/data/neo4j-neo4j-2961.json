{
    "project_name": "neo4j-neo4j",
    "error_id": "2961",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2961/AsyncEvents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2961/AsyncEvents.java\nindex 7eb1484803c..0e8e7396519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2961/AsyncEvents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2961/AsyncEvents.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.util.concurrent;\n \n import java.util.concurrent.atomic.AtomicReferenceFieldUpdater;\n@@ -44,7 +45,7 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n {\n     public interface Monitor\n     {\n-        void eventCount( long count );\n+        void eventCount(long count);\n \n         Monitor NONE = count ->\n         {\n@@ -52,17 +53,17 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n     }\n \n     // TODO use VarHandles in Java 9\n-    private static final AtomicReferenceFieldUpdater<AsyncEvents,AsyncEvent> STACK_UPDATER =\n-            AtomicReferenceFieldUpdater.newUpdater( AsyncEvents.class, AsyncEvent.class, \"stack\" );\n-    private static final Sentinel END_SENTINEL = new Sentinel( \"END\" );\n-    private static final Sentinel SHUTDOWN_SENTINEL = new Sentinel( \"SHUTDOWN\" );\n+    private static final AtomicReferenceFieldUpdater<AsyncEvents, AsyncEvent> STACK_UPDATER =\n+      AtomicReferenceFieldUpdater.newUpdater(AsyncEvents.class, AsyncEvent.class, \"stack\");\n+    private static final Sentinel END_SENTINEL = new Sentinel(\"END\");\n+    private static final Sentinel SHUTDOWN_SENTINEL = new Sentinel(\"SHUTDOWN\");\n \n     private final Consumer<T> eventConsumer;\n     private final Monitor monitor;\n     private final BinaryLatch startupLatch;\n     private final BinaryLatch shutdownLatch;\n \n-    @SuppressWarnings( {\"unused\", \"FieldCanBeLocal\"} )\n+    @SuppressWarnings({\"unused\", \"FieldCanBeLocal\"})\n     private volatile AsyncEvent stack; // Accessed via AtomicReferenceFieldUpdater\n     private volatile Thread backgroundThread;\n     private volatile boolean shutdown;\n@@ -72,7 +73,7 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n      *\n      * @param eventConsumer The {@link Consumer} used for processing the events that are sent in.\n      */\n-    public AsyncEvents( Consumer<T> eventConsumer, Monitor monitor )\n+    public AsyncEvents(Consumer<T> eventConsumer, Monitor monitor)\n     {\n         this.eventConsumer = eventConsumer;\n         this.monitor = monitor;\n@@ -82,19 +83,18 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n     }\n \n     @Override\n-    public void send( T event )\n+    public void send(T event)\n     {\n-        AsyncEvent prev = STACK_UPDATER.getAndSet( this, event );\n+        AsyncEvent prev = STACK_UPDATER.getAndSet(this, event);\n         assert prev != null;\n         event.next = prev;\n-        if ( prev == END_SENTINEL )\n+        if (prev == END_SENTINEL)\n         {\n-            LockSupport.unpark( backgroundThread );\n-        }\n-        else if ( prev == SHUTDOWN_SENTINEL )\n+            LockSupport.unpark(backgroundThread);\n+        } else if (prev == SHUTDOWN_SENTINEL)\n         {\n-            AsyncEvent events = STACK_UPDATER.getAndSet( this, SHUTDOWN_SENTINEL );\n-            process( events );\n+            AsyncEvent events = STACK_UPDATER.getAndSet(this, SHUTDOWN_SENTINEL);\n+            process(events);\n         }\n     }\n \n@@ -109,58 +109,57 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n         {\n             do\n             {\n-                AsyncEvent events = STACK_UPDATER.getAndSet( this, END_SENTINEL );\n-                process( events );\n-                if ( stack == END_SENTINEL && !shutdown )\n+                AsyncEvent events = STACK_UPDATER.getAndSet(this, END_SENTINEL);\n+                process(events);\n+                if (stack == END_SENTINEL && !shutdown)\n                 {\n-                    LockSupport.park( this );\n+                    LockSupport.park(this);\n                 }\n             }\n-            while ( !shutdown );\n+            while (!shutdown);\n \n-            AsyncEvent events = STACK_UPDATER.getAndSet( this, SHUTDOWN_SENTINEL );\n-            process( events );\n-        }\n-        finally\n+            AsyncEvent events = STACK_UPDATER.getAndSet(this, SHUTDOWN_SENTINEL);\n+            process(events);\n+        } finally\n         {\n             backgroundThread = null;\n             shutdownLatch.release();\n         }\n     }\n \n-    private void process( AsyncEvent events )\n+    private void process(AsyncEvent events)\n     {\n-        events = reverseAndStripEndMark( events );\n+        events = reverseAndStripEndMark(events);\n \n-        while ( events != null )\n+        while (events != null)\n         {\n-            @SuppressWarnings( \"unchecked\" )\n+            @SuppressWarnings(\"unchecked\")\n             T event = (T) events;\n-            eventConsumer.accept( event );\n+            eventConsumer.accept(event);\n             events = events.next;\n         }\n     }\n \n-    private AsyncEvent reverseAndStripEndMark( AsyncEvent events )\n+    private AsyncEvent reverseAndStripEndMark(AsyncEvent events)\n     {\n         AsyncEvent result = null;\n         long count = 0;\n-        while ( events != END_SENTINEL && events != SHUTDOWN_SENTINEL )\n+        while (events != END_SENTINEL && events != SHUTDOWN_SENTINEL)\n         {\n             AsyncEvent next;\n             do\n             {\n                 next = events.next;\n             }\n-            while ( next == null );\n+            while (next == null);\n             events.next = result;\n             result = events;\n             events = next;\n             count++;\n         }\n-        if ( count > 0 )\n+        if (count > 0)\n         {\n-            monitor.eventCount( count );\n+            monitor.eventCount(count);\n         }\n         return result;\n     }\n@@ -174,7 +173,7 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n     {\n         assert !shutdown : \"Already shut down\";\n         shutdown = true;\n-        LockSupport.unpark( backgroundThread );\n+        LockSupport.unpark(backgroundThread);\n     }\n \n     public void awaitStartup()\n@@ -191,7 +190,7 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n     {\n         private final String str;\n \n-        Sentinel( String identifier )\n+        Sentinel(String identifier)\n         {\n             this.str = \"AsyncEvent/Sentinel[\" + identifier + \"]\";\n         }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2961/AsyncEvents.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2961/AsyncEvents.java\nindex 7eb1484803c..6bb38b483ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2961/AsyncEvents.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2961/AsyncEvents.java\n@@ -202,4 +202,4 @@ public class AsyncEvents<T extends AsyncEvent> implements AsyncEventSender<T>, R\n             return str;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
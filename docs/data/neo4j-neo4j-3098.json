{
    "project_name": "neo4j-neo4j",
    "error_id": "3098",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "126",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "235",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "243",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3098/DynamicSizeUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3098/DynamicSizeUtil.java\nindex 283201b2552..37e5c477d06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3098/DynamicSizeUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3098/DynamicSizeUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -29,7 +30,7 @@ import static java.lang.String.format;\n  * - Key pointer in offset array (K*), 2B\n  * - keyValueSize, 1B-4B\n  * - Key tombstone, first bit in keyValueSize\n- *\n+ * <p>\n  * Format of key/value size is dynamic in itself, first byte being:\n  * <pre>\n  * [T,K,V,k,k,k,k,k]\n@@ -38,7 +39,7 @@ import static java.lang.String.format;\n  * If {@code K} is set the next byte contains the higher order bits of the key size.\n  * If {@code V} is set there is a value size to be read directly after key size.\n  * This first byte can fit key size <= 31 (0x1F) and we only need the second byte if key size is larger.\n- *\n+ * <p>\n  * The second key byte is:\n  * <pre>\n  * [O,k,k,k,k,k,k,k]\n@@ -46,14 +47,14 @@ import static java.lang.String.format;\n  * If {@code O} is set there is either an offload id to be read after after keyValueSize or it is the most significant bit of the key size, depending on\n  * context. Together with the second byte we can fit key size <= 4095 (0xFFF) if {@code O} denotes offload or size <= 8191 (0x1FFF) if denotes most\n  * significant bit.\n- *\n+ * <p>\n  * Byte following key size bytes (second or third byte depending on how many bytes needed for key size):\n  * <pre>\n  * [V,v,v,v,v,v,v,v]\n  * </pre>\n  * If {@code V} is set the next byte contains the higher order bits of the value size.\n  * This first value size byte can fit value size <= 127 (0x7F) and with the second byte we can fit value size <= 32767 (0x7FFF).\n- *\n+ * <p>\n  * So in total key/value size has six different looks (not including tombstone being set or not set):\n  * <pre>\n  * One byte key, no value\n@@ -82,16 +83,16 @@ import static java.lang.String.format;\n  *\n  * </pre>\n  * This key/value size format is used, both for leaves and internal nodes even though internal nodes can never have values.\n- *\n+ * <p>\n  * The most significant key bit in the second byte (shown as 0) is not needed for the discrete key sizes for our 8k page size\n  * and is to be considered reserved for future use.\n- *\n+ * <p>\n  * Relative layout of key and key_value\n  * KeyOffset points to the exact offset where key entry or key_value entry\n  * can be read.\n  * key entry - [keyValueSize 1B-2B|actualKey]\n  * key_value entry - [keyValueSize 1B-4B|actualKey|actualValue]\n- *\n+ * <p>\n  * Tombstone\n  * First bit in keyValueSize is used as a tombstone, set to 1 if key is dead.\n  */\n@@ -122,19 +123,19 @@ public class DynamicSizeUtil\n     private static final int SHIFT_LSB_KEY_SIZE = 5;\n     private static final int SHIFT_LSB_VALUE_SIZE = 7;\n \n-    static boolean putKeySize( PageCursor cursor, int keySize, boolean offload )\n+    static boolean putKeySize(PageCursor cursor, int keySize, boolean offload)\n     {\n-        return putKeyValueSize( cursor, keySize, 0, offload );\n+        return putKeyValueSize(cursor, keySize, 0, offload);\n     }\n \n-    public static boolean putKeyValueSize( PageCursor cursor, int keySize, int valueSize, boolean offload )\n+    public static boolean putKeyValueSize(PageCursor cursor, int keySize, int valueSize, boolean offload)\n     {\n-        if ( offload )\n+        if (offload)\n         {\n             byte firstByte = FLAG_ADDITIONAL_KEY_SIZE;\n             byte secondByte = (byte) FLAG_SECOND_BYTE_OFFLOAD;\n-            cursor.putByte( firstByte );\n-            cursor.putByte( secondByte );\n+            cursor.putByte(firstByte);\n+            cursor.putByte(secondByte);\n             return false;\n         }\n \n@@ -144,97 +145,94 @@ public class DynamicSizeUtil\n         // Key size\n         {\n             byte firstByte = (byte) (keySize & MASK_ONE_BYTE_KEY_SIZE); // Least significant 5 bits\n-            if ( hasAdditionalKeySize )\n+            if (hasAdditionalKeySize)\n             {\n                 firstByte |= FLAG_ADDITIONAL_KEY_SIZE;\n-                if ( keySize > MAX_TWO_BYTE_KEY_SIZE_NO_OFFLOAD )\n+                if (keySize > MAX_TWO_BYTE_KEY_SIZE_NO_OFFLOAD)\n                 {\n                     throw new IllegalArgumentException(\n-                            format( \"Max supported key size is %d, but tried to store key of size %d. Please see index documentation for limitations.\",\n-                                    MAX_TWO_BYTE_KEY_SIZE_NO_OFFLOAD, keySize ) );\n+                      format(\"Max supported key size is %d, but tried to store key of size %d. Please see index documentation for limitations.\",\n+                        MAX_TWO_BYTE_KEY_SIZE_NO_OFFLOAD, keySize));\n                 }\n             }\n-            if ( hasValueSize )\n+            if (hasValueSize)\n             {\n                 firstByte |= FLAG_HAS_VALUE_SIZE;\n             }\n-            cursor.putByte( firstByte );\n+            cursor.putByte(firstByte);\n \n-            if ( hasAdditionalKeySize )\n+            if (hasAdditionalKeySize)\n             {\n                 // Assuming no key size larger than maxKeySize limit\n-                cursor.putByte( (byte) (keySize >> SHIFT_LSB_KEY_SIZE) );\n+                cursor.putByte((byte) (keySize >> SHIFT_LSB_KEY_SIZE));\n             }\n         }\n \n         // Value size\n         {\n-            if ( hasValueSize )\n+            if (hasValueSize)\n             {\n                 boolean needsAdditionalValueSize = valueSize > MASK_ONE_BYTE_VALUE_SIZE;\n                 byte firstByte = (byte) (valueSize & MASK_ONE_BYTE_VALUE_SIZE); // Least significant 7 bits\n-                if ( needsAdditionalValueSize )\n+                if (needsAdditionalValueSize)\n                 {\n-                    if ( valueSize > MAX_TWO_BYTE_VALUE_SIZE )\n+                    if (valueSize > MAX_TWO_BYTE_VALUE_SIZE)\n                     {\n                         throw new IllegalArgumentException(\n-                                format( \"Max supported value size is %d, but tried to store value of size %d. Please see index documentation for limitations.\",\n-                                        MAX_TWO_BYTE_VALUE_SIZE, valueSize ) );\n+                          format(\"Max supported value size is %d, but tried to store value of size %d. Please see index documentation for limitations.\",\n+                            MAX_TWO_BYTE_VALUE_SIZE, valueSize));\n                     }\n                     firstByte |= FLAG_ADDITIONAL_VALUE_SIZE;\n                 }\n-                cursor.putByte( firstByte );\n+                cursor.putByte(firstByte);\n \n-                if ( needsAdditionalValueSize )\n+                if (needsAdditionalValueSize)\n                 {\n                     // Assuming no value size larger than 16k\n-                    cursor.putByte( (byte) (valueSize >> SHIFT_LSB_VALUE_SIZE) );\n+                    cursor.putByte((byte) (valueSize >> SHIFT_LSB_VALUE_SIZE));\n                 }\n             }\n         }\n         return true;\n     }\n \n-    public static long readKeyValueSize( PageCursor cursor, boolean msbIsOffload )\n+    public static long readKeyValueSize(PageCursor cursor, boolean msbIsOffload)\n     {\n         byte firstByte = cursor.getByte();\n-        boolean hasTombstone = hasTombstone( firstByte );\n+        boolean hasTombstone = hasTombstone(firstByte);\n         boolean hasAdditionalKeySize = (firstByte & FLAG_ADDITIONAL_KEY_SIZE) != 0;\n         boolean hasValueSize = (firstByte & FLAG_HAS_VALUE_SIZE) != 0;\n         int keySizeLsb = firstByte & MASK_ONE_BYTE_KEY_SIZE;\n         long keySize;\n-        if ( hasAdditionalKeySize )\n+        if (hasAdditionalKeySize)\n         {\n             byte secondByte = cursor.getByte();\n-            if ( msbIsOffload && hasOffload( secondByte ) )\n+            if (msbIsOffload && hasOffload(secondByte))\n             {\n                 return (hasTombstone ? FLAG_READ_TOMBSTONE : 0) | FLAG_READ_OFFLOAD;\n             }\n             int keySizeMsb = secondByte & 0xFF;\n             keySize = (keySizeMsb << SHIFT_LSB_KEY_SIZE) | keySizeLsb;\n-        }\n-        else\n+        } else\n         {\n             keySize = keySizeLsb;\n         }\n \n         long valueSize;\n-        if ( hasValueSize )\n+        if (hasValueSize)\n         {\n             byte firstValueByte = cursor.getByte();\n             int valueSizeLsb = firstValueByte & MASK_ONE_BYTE_VALUE_SIZE;\n             boolean hasAdditionalValueSize = (firstValueByte & FLAG_ADDITIONAL_VALUE_SIZE) != 0;\n-            if ( hasAdditionalValueSize )\n+            if (hasAdditionalValueSize)\n             {\n                 int valueSizeMsb = cursor.getByte() & 0xFF;\n                 valueSize = (valueSizeMsb << SHIFT_LSB_VALUE_SIZE) | valueSizeLsb;\n-            }\n-            else\n+            } else\n             {\n                 valueSize = valueSizeLsb;\n             }\n-        }\n-        else\n+        } else\n         {\n             valueSize = 0;\n         }\n@@ -242,75 +240,77 @@ public class DynamicSizeUtil\n         return (hasTombstone ? FLAG_READ_TOMBSTONE : 0) | (keySize << Integer.SIZE) | valueSize;\n     }\n \n-    public static int extractValueSize( long keyValueSize )\n+    public static int extractValueSize(long keyValueSize)\n     {\n         return (int) keyValueSize;\n     }\n \n-    public static int extractKeySize( long keyValueSize )\n+    public static int extractKeySize(long keyValueSize)\n     {\n         return (int) ((keyValueSize & ~(FLAG_READ_TOMBSTONE | FLAG_READ_OFFLOAD)) >>> Integer.SIZE);\n     }\n \n-    public static int getOverhead( int keySize, int valueSize, boolean offload )\n+    public static int getOverhead(int keySize, int valueSize, boolean offload)\n     {\n-        if ( offload )\n+        if (offload)\n         {\n             return 2 + SIZE_OFFLOAD_ID;\n         }\n         return 1 + (keySize > MASK_ONE_BYTE_KEY_SIZE ? 1 : 0) + (valueSize > 0 ? 1 : 0) + (valueSize > MASK_ONE_BYTE_VALUE_SIZE ? 1 : 0);\n     }\n \n-    static boolean extractTombstone( long keyValueSize )\n+    static boolean extractTombstone(long keyValueSize)\n     {\n         return (keyValueSize & FLAG_READ_TOMBSTONE) != 0;\n     }\n \n-    static boolean extractOffload( long keyValueSize )\n+    static boolean extractOffload(long keyValueSize)\n     {\n         return (keyValueSize & FLAG_READ_OFFLOAD) != 0;\n     }\n \n     /**\n      * Put a tombstone into key size.\n+     *\n      * @param cursor on offset to key size where tombstone should be put.\n      */\n-    static void putTombstone( PageCursor cursor )\n+    static void putTombstone(PageCursor cursor)\n     {\n         int offset = cursor.getOffset();\n         byte firstByte = cursor.getByte();\n-        firstByte = withTombstoneFlag( firstByte );\n-        cursor.setOffset( offset );\n-        cursor.putByte( firstByte );\n+        firstByte = withTombstoneFlag(firstByte);\n+        cursor.setOffset(offset);\n+        cursor.putByte(firstByte);\n     }\n \n     /**\n      * Check read key size for tombstone.\n+     *\n      * @return True if read key size has tombstone.\n      */\n-    private static boolean hasTombstone( byte firstKeySizeByte )\n+    private static boolean hasTombstone(byte firstKeySizeByte)\n     {\n         return (firstKeySizeByte & FLAG_FIRST_BYTE_TOMBSTONE) != 0;\n     }\n \n-    private static byte withTombstoneFlag( byte firstByte )\n+    private static byte withTombstoneFlag(byte firstByte)\n     {\n         assert (firstByte & FLAG_FIRST_BYTE_TOMBSTONE) == 0 : \"First key size byte \" + firstByte + \" is too large to fit tombstone.\";\n         return (byte) (firstByte | FLAG_FIRST_BYTE_TOMBSTONE);\n     }\n \n-    private static boolean hasOffload( long secondByte )\n+    private static boolean hasOffload(long secondByte)\n     {\n         return (secondByte & FLAG_SECOND_BYTE_OFFLOAD) != 0;\n     }\n \n-    static long readOffloadId( PageCursor cursor )\n+    static long readOffloadId(PageCursor cursor)\n     {\n         return cursor.getLong();\n     }\n \n-    static void putOffloadId( PageCursor cursor, long offloadId )\n+    static void putOffloadId(PageCursor cursor, long offloadId)\n     {\n-        cursor.putLong( offloadId );\n+        cursor.putLong(offloadId);\n     }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
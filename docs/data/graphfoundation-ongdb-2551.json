{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2551",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2551/SuperDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2551/SuperDiffSets.java\nindex 8e7d163935c..acf82e168e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2551/SuperDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2551/SuperDiffSets.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.diffsets;\n \n import java.util.Collections;\n@@ -42,241 +43,241 @@ import static java.util.Collections.newSetFromMap;\n  */\n abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n {\n-    private Set<T> addedElements;\n-    private Set<T> removedElements;\n-    private Predicate<T> filter;\n-\n-    SuperDiffSets()\n-    {\n-        this( null, null );\n-    }\n-\n-    SuperDiffSets( Set<T> addedElements, Set<T> removedElements )\n-    {\n-        this.addedElements = addedElements;\n-        this.removedElements = removedElements;\n-    }\n-\n-    @Override\n-    public void accept( DiffSetsVisitor<T> visitor )\n-            throws ConstraintValidationException, CreateConstraintFailureException\n-    {\n-        for ( T element : added( false ) )\n-        {\n-            visitor.visitAdded( element );\n-        }\n-        for ( T element : removed( false ) )\n-        {\n-            visitor.visitRemoved( element );\n-        }\n-    }\n-\n-    public boolean add( T elem )\n-    {\n-        boolean wasRemoved = removed( false ).remove( elem );\n-        // Add to the addedElements only if it was not removed from the removedElements\n-        return wasRemoved || added( true ).add( elem );\n-    }\n-\n-    public void replace( T toRemove, T toAdd )\n-    {\n-        Set<T> added = added( true ); // we're doing both add and remove on it, so pass in true\n-        boolean removedFromAdded = added.remove( toRemove );\n-        removed( false ).remove( toAdd );\n-\n-        added.add( toAdd );\n-        if ( !removedFromAdded )\n-        {\n-            removed( true ).add( toRemove );\n-        }\n-    }\n-\n-    public boolean remove( T elem )\n-    {\n-        boolean removedFromAddedElements = added( false ).remove( elem );\n-        // Add to the removedElements only if it was not removed from the addedElements.\n-        return removedFromAddedElements || removed( true ).add( elem );\n-    }\n-\n-    public void addAll( Iterator<T> elems )\n+  private Set<T> addedElements;\n+  private Set<T> removedElements;\n+  private Predicate<T> filter;\n+\n+  SuperDiffSets()\n+  {\n+    this(null, null);\n+  }\n+\n+  SuperDiffSets(Set<T> addedElements, Set<T> removedElements)\n+  {\n+    this.addedElements = addedElements;\n+    this.removedElements = removedElements;\n+  }\n+\n+  @Override\n+  public void accept(DiffSetsVisitor<T> visitor)\n+      throws ConstraintValidationException, CreateConstraintFailureException\n+  {\n+    for (T element : added(false))\n     {\n-        while ( elems.hasNext() )\n-        {\n-            add( elems.next() );\n-        }\n+      visitor.visitAdded(element);\n     }\n-\n-    public void removeAll( Iterator<T> elems )\n+    for (T element : removed(false))\n     {\n-        while ( elems.hasNext() )\n-        {\n-            remove( elems.next() );\n-        }\n+      visitor.visitRemoved(element);\n     }\n-\n-    @Override\n-    public boolean isAdded( T elem )\n+  }\n+\n+  public boolean add(T elem)\n+  {\n+    boolean wasRemoved = removed(false).remove(elem);\n+    // Add to the addedElements only if it was not removed from the removedElements\n+    return wasRemoved || added(true).add(elem);\n+  }\n+\n+  public void replace(T toRemove, T toAdd)\n+  {\n+    Set<T> added = added(true); // we're doing both add and remove on it, so pass in true\n+    boolean removedFromAdded = added.remove(toRemove);\n+    removed(false).remove(toAdd);\n+\n+    added.add(toAdd);\n+    if (!removedFromAdded)\n     {\n-        return added( false ).contains( elem );\n+      removed(true).add(toRemove);\n     }\n-\n-    @Override\n-    public boolean isRemoved( T elem )\n+  }\n+\n+  public boolean remove(T elem)\n+  {\n+    boolean removedFromAddedElements = added(false).remove(elem);\n+    // Add to the removedElements only if it was not removed from the addedElements.\n+    return removedFromAddedElements || removed(true).add(elem);\n+  }\n+\n+  public void addAll(Iterator<T> elems)\n+  {\n+    while (elems.hasNext())\n     {\n-        return removed( false ).contains( elem );\n+      add(elems.next());\n     }\n+  }\n \n-    @Override\n-    public Set<T> getAdded()\n+  public void removeAll(Iterator<T> elems)\n+  {\n+    while (elems.hasNext())\n     {\n-        return resultSet( addedElements );\n+      remove(elems.next());\n     }\n-\n-    @Override\n-    public Set<T> getAddedSnapshot()\n+  }\n+\n+  @Override\n+  public boolean isAdded(T elem)\n+  {\n+    return added(false).contains(elem);\n+  }\n+\n+  @Override\n+  public boolean isRemoved(T elem)\n+  {\n+    return removed(false).contains(elem);\n+  }\n+\n+  @Override\n+  public Set<T> getAdded()\n+  {\n+    return resultSet(addedElements);\n+  }\n+\n+  @Override\n+  public Set<T> getAddedSnapshot()\n+  {\n+    if (addedElements == null)\n     {\n-        if ( addedElements == null )\n-        {\n-            return Collections.emptySet();\n-        }\n-        //TODO VersionedHashMap can probably do this more efficiently, but it is hidden behind layers\n-        return new HashSet<>( addedElements );\n+      return Collections.emptySet();\n     }\n-\n-    @Override\n-    public Set<T> getRemoved()\n+    //TODO VersionedHashMap can probably do this more efficiently, but it is hidden behind layers\n+    return new HashSet<>(addedElements);\n+  }\n+\n+  @Override\n+  public Set<T> getRemoved()\n+  {\n+    return resultSet(removedElements);\n+  }\n+\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return added(false).isEmpty() && removed(false).isEmpty();\n+  }\n+\n+  @Override\n+  public Iterator<T> apply(Iterator<T> source)\n+  {\n+    Iterator<T> result = source;\n+    if ((removedElements != null && !removedElements.isEmpty()) ||\n+        (addedElements != null && !addedElements.isEmpty()))\n     {\n-        return resultSet( removedElements );\n+      ensureFilterHasBeenCreated();\n+      result = Iterators.filter(filter, result);\n     }\n-\n-    @Override\n-    public boolean isEmpty()\n+    if (addedElements != null && !addedElements.isEmpty())\n     {\n-        return added( false ).isEmpty() && removed( false ).isEmpty();\n+      result = Iterators.concat(result, addedElements.iterator());\n     }\n+    return result;\n+  }\n \n-    @Override\n-    public Iterator<T> apply( Iterator<T> source )\n+  protected Set<T> added(boolean create)\n+  {\n+    if (addedElements == null)\n     {\n-        Iterator<T> result = source;\n-        if ( ( removedElements != null && !removedElements.isEmpty() ) ||\n-             ( addedElements != null && !addedElements.isEmpty() ) )\n-        {\n-            ensureFilterHasBeenCreated();\n-            result = Iterators.filter( filter, result );\n-        }\n-        if ( addedElements != null && !addedElements.isEmpty() )\n-        {\n-            result = Iterators.concat( result, addedElements.iterator() );\n-        }\n-        return result;\n+      if (!create)\n+      {\n+        return Collections.emptySet();\n+      }\n+      addedElements = newSet();\n     }\n+    return addedElements;\n+  }\n \n-    protected Set<T> added( boolean create )\n+  protected Set<T> removed(boolean create)\n+  {\n+    if (removedElements == null)\n     {\n-        if ( addedElements == null )\n-        {\n-            if ( !create )\n-            {\n-                return Collections.emptySet();\n-            }\n-            addedElements = newSet();\n-        }\n-        return addedElements;\n+      if (!create)\n+      {\n+        return Collections.emptySet();\n+      }\n+      removedElements = newSet();\n     }\n+    return removedElements;\n+  }\n \n-    protected Set<T> removed( boolean create )\n+  private void ensureFilterHasBeenCreated()\n+  {\n+    if (filter == null)\n     {\n-        if ( removedElements == null )\n-        {\n-            if ( !create )\n-            {\n-                return Collections.emptySet();\n-            }\n-            removedElements = newSet();\n-        }\n-        return removedElements;\n+      filter = item -> !removed(false).contains(item) && !added(false).contains(item);\n     }\n-\n-    private void ensureFilterHasBeenCreated()\n+  }\n+\n+  @Override\n+  public int delta()\n+  {\n+    return added(false).size() - removed(false).size();\n+  }\n+\n+  private Set<T> newSet()\n+  {\n+    return newSetFromMap(new VersionedHashMap<>());\n+  }\n+\n+  private Set<T> resultSet(Set<T> coll)\n+  {\n+    return coll == null ? Collections.emptySet() : Collections.unmodifiableSet(coll);\n+  }\n+\n+  public boolean unRemove(T item)\n+  {\n+    return removed(false).remove(item);\n+  }\n+\n+  public void clear()\n+  {\n+    if (addedElements != null)\n     {\n-        if ( filter == null )\n-        {\n-            filter = item -> !removed( false ).contains( item ) && !added( false ).contains( item );\n-        }\n+      addedElements.clear();\n     }\n-\n-    @Override\n-    public int delta()\n+    if (removedElements != null)\n     {\n-        return added( false ).size() - removed( false ).size();\n+      removedElements.clear();\n     }\n+  }\n \n-    private Set<T> newSet()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return newSetFromMap( new VersionedHashMap<>() );\n+      return true;\n     }\n-\n-    private Set<T> resultSet( Set<T> coll )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return coll == null ? Collections.emptySet() : Collections.unmodifiableSet( coll );\n+      return false;\n     }\n \n-    public boolean unRemove( T item )\n-    {\n-        return removed( false ).remove( item );\n-    }\n-\n-    public void clear()\n-    {\n-        if ( addedElements != null )\n-        {\n-            addedElements.clear();\n-        }\n-        if ( removedElements != null )\n-        {\n-            removedElements.clear();\n-        }\n-    }\n+    SuperDiffSets diffSets = (SuperDiffSets) o;\n \n-    @Override\n-    public boolean equals( Object o )\n+    if (addedElements != null ? !addedElements.equals(diffSets.addedElements) : diffSets.addedElements != null)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        SuperDiffSets diffSets = (SuperDiffSets) o;\n-\n-        if ( addedElements != null ? !addedElements.equals( diffSets.addedElements ) : diffSets.addedElements != null )\n-        {\n-            return false;\n-        }\n-        if ( filter != null ? !filter.equals( diffSets.filter ) : diffSets.filter != null )\n-        {\n-            return false;\n-        }\n-        return removedElements != null ? removedElements.equals( diffSets.removedElements )\n-                                       : diffSets.removedElements == null;\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = addedElements != null ? addedElements.hashCode() : 0;\n-        result = 31 * result + (removedElements != null ? removedElements.hashCode() : 0);\n-        result = 31 * result + (filter != null ? filter.hashCode() : 0);\n-        return result;\n-    }\n-\n-    @Override\n-    public String toString()\n+    if (filter != null ? !filter.equals(diffSets.filter) : diffSets.filter != null)\n     {\n-        return format( \"{+%s, -%s}\", added( false ), removed( false ) );\n+      return false;\n     }\n+    return removedElements != null ? removedElements.equals(diffSets.removedElements)\n+        : diffSets.removedElements == null;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = addedElements != null ? addedElements.hashCode() : 0;\n+    result = 31 * result + (removedElements != null ? removedElements.hashCode() : 0);\n+    result = 31 * result + (filter != null ? filter.hashCode() : 0);\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"{+%s, -%s}\", added(false), removed(false));\n+  }\n }\n",
            "diff_size": 320
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "160",
                    "column": "72",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2551/SuperDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2551/SuperDiffSets.java\nindex 8e7d163935c..810f23844a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2551/SuperDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2551/SuperDiffSets.java\n@@ -58,9 +58,8 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n     }\n \n     @Override\n-    public void accept( DiffSetsVisitor<T> visitor )\n-            throws ConstraintValidationException, CreateConstraintFailureException\n-    {\n+    public void accept( DiffSetsVisitor<T> visitor ) throws ConstraintValidationException, CreateConstraintFailureException\n+{\n         for ( T element : added( false ) )\n         {\n             visitor.visitAdded( element );\n@@ -83,8 +82,7 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n         Set<T> added = added( true ); // we're doing both add and remove on it, so pass in true\n         boolean removedFromAdded = added.remove( toRemove );\n         removed( false ).remove( toAdd );\n-\n-        added.add( toAdd );\n+added.add( toAdd );\n         if ( !removedFromAdded )\n         {\n             removed( true ).add( toRemove );\n@@ -159,17 +157,18 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n     public Iterator<T> apply( Iterator<T> source )\n     {\n         Iterator<T> result = source;\n-        if ( ( removedElements != null && !removedElements.isEmpty() ) ||\n-             ( addedElements != null && !addedElements.isEmpty() ) )\n-        {\n+        if ( ( removedElements != null && !removedElements.isEmpty() ) ||( addedElements != null && !addedElements.isEmpty() ) )\n+{\n             ensureFilterHasBeenCreated();\n             result = Iterators.filter( filter, result );\n         }\n-        if ( addedElements != null && !addedElements.isEmpty() )\n+\n+if ( addedElements != null && !addedElements.isEmpty() )\n         {\n             result = Iterators.concat( result, addedElements.iterator() );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     protected Set<T> added( boolean create )\n@@ -180,9 +179,11 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n             {\n                 return Collections.emptySet();\n             }\n-            addedElements = newSet();\n+\n+addedElements = newSet();\n         }\n-        return addedElements;\n+\n+return addedElements;\n     }\n \n     protected Set<T> removed( boolean create )\n@@ -193,9 +194,11 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n             {\n                 return Collections.emptySet();\n             }\n-            removedElements = newSet();\n+\n+removedElements = newSet();\n         }\n-        return removedElements;\n+\n+return removedElements;\n     }\n \n     private void ensureFilterHasBeenCreated()\n@@ -233,7 +236,8 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n         {\n             addedElements.clear();\n         }\n-        if ( removedElements != null )\n+\n+if ( removedElements != null )\n         {\n             removedElements.clear();\n         }\n@@ -246,7 +250,8 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -257,20 +262,21 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n         {\n             return false;\n         }\n-        if ( filter != null ? !filter.equals( diffSets.filter ) : diffSets.filter != null )\n+\n+if ( filter != null ? !filter.equals( diffSets.filter ) : diffSets.filter != null )\n         {\n             return false;\n         }\n-        return removedElements != null ? removedElements.equals( diffSets.removedElements )\n-                                       : diffSets.removedElements == null;\n+\n+return removedElements != null ? removedElements.equals( diffSets.removedElements ) : diffSets.removedElements == null;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = addedElements != null ? addedElements.hashCode() : 0;\n-        result = 31 * result + (removedElements != null ? removedElements.hashCode() : 0);\n-        result = 31 * result + (filter != null ? filter.hashCode() : 0);\n+        result = 31 * result + (removedElements != null ? removedElements.hashCode() : 0 );\n+        result = 31 * result + (filter != null ? filter.hashCode() : 0 );\n         return result;\n     }\n \n@@ -279,4 +285,4 @@ abstract class SuperDiffSets<T> implements SuperReadableDiffSets<T>\n     {\n         return format( \"{+%s, -%s}\", added( false ), removed( false ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
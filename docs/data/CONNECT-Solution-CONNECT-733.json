{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "733",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.event;\n\nimport gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/733/EventLoggerFactory.java\nindex 021af8b8a3d..6df7d284284 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/733/EventLoggerFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event;\n \n import gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/733/EventLoggerFactory.java\nindex 021af8b8a3d..f83a9169354 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/733/EventLoggerFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event;\n \n import gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\n@@ -36,52 +37,53 @@ import org.slf4j.LoggerFactory;\n  */\n public class EventLoggerFactory {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(EventLoggerFactory.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(EventLoggerFactory.class);\n \n-    private static final String CONFIG_FILE_NAME = \"EventLoggerFactoryConfig.xml\";\n-    private static final String BEAN_NAME = \"eventLoggerFactory\";\n+  private static final String CONFIG_FILE_NAME = \"EventLoggerFactoryConfig.xml\";\n+  private static final String BEAN_NAME = \"eventLoggerFactory\";\n \n-    private final EventManager eventManager;\n-    private List<EventLogger> loggers;\n+  private final EventManager eventManager;\n+  private List<EventLogger> loggers;\n \n-    /**\n-     * @return an instance of the event logger factory using the component proxy object factory.\n-     */\n-    public static EventLoggerFactory getInstance() {\n-        return new ComponentProxyFactory(CONFIG_FILE_NAME).getInstance(BEAN_NAME, EventLoggerFactory.class);\n-    }\n+  /**\n+   * @return an instance of the event logger factory using the component proxy object factory.\n+   */\n+  public static EventLoggerFactory getInstance() {\n+    return new ComponentProxyFactory(CONFIG_FILE_NAME).getInstance(BEAN_NAME, EventLoggerFactory.class);\n+  }\n \n-    /**\n-     * Constructor.\n-     * @param eventManager Event Manager used to create and register loggers.\n-     */\n-    public EventLoggerFactory(final EventManager eventManager) {\n-        this.eventManager = eventManager;\n-    }\n+  /**\n+   * Constructor.\n+   *\n+   * @param eventManager Event Manager used to create and register loggers.\n+   */\n+  public EventLoggerFactory(final EventManager eventManager) {\n+    this.eventManager = eventManager;\n+  }\n \n-    /**\n-     * Register Loggers.\n-     */\n-    public void registerLoggers() {\n-        LOG.debug(\"Registering loggers...\");\n-        for (EventLogger logger : loggers) {\n-            LOG.info(\"Registering logger: \" + logger.getClass().getName());\n-            eventManager.addObserver(logger);\n-        }\n+  /**\n+   * Register Loggers.\n+   */\n+  public void registerLoggers() {\n+    LOG.debug(\"Registering loggers...\");\n+    for (EventLogger logger : loggers) {\n+      LOG.info(\"Registering logger: \" + logger.getClass().getName());\n+      eventManager.addObserver(logger);\n     }\n+  }\n \n-    /**\n-     * @return the loggers\n-     */\n-    public List<EventLogger> getLoggers() {\n-        return loggers;\n-    }\n+  /**\n+   * @return the loggers\n+   */\n+  public List<EventLogger> getLoggers() {\n+    return loggers;\n+  }\n \n-    /**\n-     * @param loggers the loggers to set\n-     */\n-    public void setLoggers(List<EventLogger> loggers) {\n-        this.loggers = loggers;\n-    }\n+  /**\n+   * @param loggers the loggers to set\n+   */\n+  public void setLoggers(List<EventLogger> loggers) {\n+    this.loggers = loggers;\n+  }\n \n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/733/EventLoggerFactory.java\nindex 021af8b8a3d..7925b23634f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/733/EventLoggerFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event;\n \n import gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\n@@ -84,4 +85,4 @@ public class EventLoggerFactory {\n         this.loggers = loggers;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/733/EventLoggerFactory.java\nindex 021af8b8a3d..a0030b57e05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/733/EventLoggerFactory.java\n@@ -34,19 +34,21 @@ import org.slf4j.LoggerFactory;\n /**\n  * This class is responsible for bootstrapping event loggers.\n  */\n+\n+\n public class EventLoggerFactory {\n \n     private static final Logger LOG = LoggerFactory.getLogger(EventLoggerFactory.class);\n-\n     private static final String CONFIG_FILE_NAME = \"EventLoggerFactoryConfig.xml\";\n     private static final String BEAN_NAME = \"eventLoggerFactory\";\n-\n     private final EventManager eventManager;\n     private List<EventLogger> loggers;\n \n     /**\n      * @return an instance of the event logger factory using the component proxy object factory.\n      */\n+\n+\n     public static EventLoggerFactory getInstance() {\n         return new ComponentProxyFactory(CONFIG_FILE_NAME).getInstance(BEAN_NAME, EventLoggerFactory.class);\n     }\n@@ -55,6 +57,8 @@ public class EventLoggerFactory {\n      * Constructor.\n      * @param eventManager Event Manager used to create and register loggers.\n      */\n+\n+\n     public EventLoggerFactory(final EventManager eventManager) {\n         this.eventManager = eventManager;\n     }\n@@ -62,6 +66,8 @@ public class EventLoggerFactory {\n     /**\n      * Register Loggers.\n      */\n+\n+\n     public void registerLoggers() {\n         LOG.debug(\"Registering loggers...\");\n         for (EventLogger logger : loggers) {\n@@ -73,6 +79,8 @@ public class EventLoggerFactory {\n     /**\n      * @return the loggers\n      */\n+\n+\n     public List<EventLogger> getLoggers() {\n         return loggers;\n     }\n@@ -80,8 +88,10 @@ public class EventLoggerFactory {\n     /**\n      * @param loggers the loggers to set\n      */\n+\n+\n     public void setLoggers(List<EventLogger> loggers) {\n         this.loggers = loggers;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "33",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/733/EventLoggerFactory.java\nindex 021af8b8a3d..78e1872341b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/733/EventLoggerFactory.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.event;\n+package gov.hhs.fha.nhinc.event;import\n \n-import gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\n+gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\n import java.util.List;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/733/EventLoggerFactory.java\nindex 021af8b8a3d..6df7d284284 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/733/EventLoggerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/733/EventLoggerFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event;\n \n import gov.hhs.fha.nhinc.proxy.ComponentProxyFactory;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
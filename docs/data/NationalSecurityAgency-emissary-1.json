{
    "project_name": "NationalSecurityAgency-emissary",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "30",
                "column": "34",
                "severity": "warning",
                "message": "'}' at column 34 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "     * Create an empty parameter list\n     */\n    public HttpPostParameters() {}\n\n    /**\n     * Create and add one parameter",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "column": "34",
                    "severity": "warning",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/1/HttpPostParameters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/1/HttpPostParameters.java\nindex c404199ed7a..54cf9b897c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/1/HttpPostParameters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/1/HttpPostParameters.java\n@@ -6,11 +6,12 @@ package emissary.util.web;\n /**\n  * Hold onto fielded data that should be posted to a URL\n  * in x-www-urlencoded format.\n- *\n+ * <p>\n  * For convenience also keep it around in unencoded format\n  *\n  * @author MJF, 2000-08-01\n  */\n+\n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n \n@@ -27,11 +28,12 @@ public class HttpPostParameters {\n     /**\n      * Create an empty parameter list\n      */\n-    public HttpPostParameters() {}\n+    public HttpPostParameters() {\n+    }\n \n     /**\n      * Create and add one parameter\n-     * \n+     *\n      * @param s the field name\n      * @param v the value\n      */\n@@ -41,7 +43,7 @@ public class HttpPostParameters {\n \n     /**\n      * Add a field and value\n-     * \n+     *\n      * @param s the field name\n      * @param v the value (can be null)\n      */\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/1/HttpPostParameters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/1/HttpPostParameters.java\nindex c404199ed7a..d718e9bcf8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/1/HttpPostParameters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/1/HttpPostParameters.java\n@@ -27,7 +27,9 @@ public class HttpPostParameters {\n     /**\n      * Create an empty parameter list\n      */\n-    public HttpPostParameters() {}\n+    public HttpPostParameters() {\n+\n+}\n \n     /**\n      * Create and add one parameter\n@@ -97,4 +99,4 @@ public class HttpPostParameters {\n     public String toString() {\n         return this.thePostData.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/1/HttpPostParameters.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/1/HttpPostParameters.java\nindex c404199ed7a..ec43b7aa75e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/1/HttpPostParameters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/1/HttpPostParameters.java\n@@ -11,23 +11,28 @@ package emissary.util.web;\n  *\n  * @author MJF, 2000-08-01\n  */\n+\n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class HttpPostParameters {\n \n     private static final Logger logger = LoggerFactory.getLogger(HttpPostParameters.class);\n \n     private final StringBuilder thePostData = new StringBuilder();\n+\n     private final StringBuilder thePostDataEncoded = new StringBuilder();\n \n     /**\n      * Create an empty parameter list\n      */\n-    public HttpPostParameters() {}\n+\n+    public HttpPostParameters() {\n+\n+    }\n \n     /**\n      * Create and add one parameter\n@@ -35,6 +40,8 @@ public class HttpPostParameters {\n      * @param s the field name\n      * @param v the value\n      */\n+\n+\n     public HttpPostParameters(final String s, final String v) {\n         this.add(s, v);\n     }\n@@ -45,12 +52,12 @@ public class HttpPostParameters {\n      * @param s the field name\n      * @param v the value (can be null)\n      */\n+\n     public void add(final String s, final String v) {\n         if (this.thePostDataEncoded.length() != 0) {\n             this.thePostData.append(\"&\");\n             this.thePostDataEncoded.append(\"&\");\n         }\n-\n         this.thePostData.append(s).append(\"=\");\n         try {\n             this.thePostDataEncoded.append(URLEncoder.encode(s, \"UTF-8\")).append(\"=\");\n@@ -72,6 +79,8 @@ public class HttpPostParameters {\n     /**\n      * Get the length of the encoded stuff for the Content-length header\n      */\n+\n+\n     public int length() {\n         return this.thePostDataEncoded.length();\n     }\n@@ -79,6 +88,8 @@ public class HttpPostParameters {\n     /**\n      * Get the x-www-urlencoded string\n      */\n+\n+\n     public String toPostString() {\n         return this.thePostDataEncoded.toString();\n     }\n@@ -86,6 +97,8 @@ public class HttpPostParameters {\n     /**\n      * Get the x-www-urlencoded string with '?' preceeding\n      */\n+\n+\n     public String toGetString() {\n         return \"?\" + this.thePostDataEncoded.toString();\n     }\n@@ -93,8 +106,10 @@ public class HttpPostParameters {\n     /**\n      * Get the plain old data\n      */\n+\n+\n     @Override\n     public String toString() {\n         return this.thePostData.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "column": "34",
                    "severity": "warning",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "column": "34",
                    "severity": "warning",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2716",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2716/Neo4JTemporalField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2716/Neo4JTemporalField.java\nindex a63aba5f5b9..32941508b23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2716/Neo4JTemporalField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2716/Neo4JTemporalField.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.Year;\n@@ -36,9 +37,9 @@ import static java.time.temporal.ChronoUnit.YEARS;\n \n enum Neo4JTemporalField implements TemporalField\n {\n-    YEAR_OF_DECADE( \"Year of decade\", YEARS, DECADES, 10 ),\n-    YEAR_OF_CENTURY( \"Year of century\", YEARS, CENTURIES, 100 ),\n-    YEAR_OF_MILLENNIUM( \"Millennium\", YEARS, MILLENNIA, 1000 );\n+    YEAR_OF_DECADE(\"Year of decade\", YEARS, DECADES, 10),\n+    YEAR_OF_CENTURY(\"Year of century\", YEARS, CENTURIES, 100),\n+    YEAR_OF_MILLENNIUM(\"Millennium\", YEARS, MILLENNIA, 1000);\n \n     private final String name;\n     private final TemporalUnit baseUnit;\n@@ -46,17 +47,17 @@ enum Neo4JTemporalField implements TemporalField\n     private final int years;\n     private final ValueRange range;\n \n-    Neo4JTemporalField( String name, TemporalUnit baseUnit, TemporalUnit rangeUnit, int years )\n+    Neo4JTemporalField(String name, TemporalUnit baseUnit, TemporalUnit rangeUnit, int years)\n     {\n         this.name = name;\n         this.baseUnit = baseUnit;\n         this.rangeUnit = rangeUnit;\n         this.years = years;\n-        this.range = ValueRange.of( Year.MIN_VALUE / years, Year.MAX_VALUE / years );\n+        this.range = ValueRange.of(Year.MIN_VALUE / years, Year.MAX_VALUE / years);\n     }\n \n     @Override\n-    public String getDisplayName( Locale locale )\n+    public String getDisplayName(Locale locale)\n     {\n         return name;\n     }\n@@ -92,32 +93,32 @@ enum Neo4JTemporalField implements TemporalField\n     }\n \n     @Override\n-    public boolean isSupportedBy( TemporalAccessor temporal )\n+    public boolean isSupportedBy(TemporalAccessor temporal)\n     {\n         return false;\n     }\n \n     @Override\n-    public ValueRange rangeRefinedBy( TemporalAccessor temporal )\n+    public ValueRange rangeRefinedBy(TemporalAccessor temporal)\n     {\n         // Always identical\n         return range();\n     }\n \n     @Override\n-    public long getFrom( TemporalAccessor temporal )\n+    public long getFrom(TemporalAccessor temporal)\n     {\n-        throw new UnsupportedOperationException( \"Getting a \" + this.name + \" from temporal values is not supported.\" );\n+        throw new UnsupportedOperationException(\"Getting a \" + this.name + \" from temporal values is not supported.\");\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    public <R extends Temporal> R adjustInto( R temporal, long newValue )\n+    public <R extends Temporal> R adjustInto(R temporal, long newValue)\n     {\n-        int newVal = range.checkValidIntValue( newValue, this );\n-        int oldYear = temporal.get( ChronoField.YEAR );\n-        return (R) temporal.with( ChronoField.YEAR, (oldYear / years) * years + newVal )\n-                           .with( TemporalAdjusters.firstDayOfYear() );\n+        int newVal = range.checkValidIntValue(newValue, this);\n+        int oldYear = temporal.get(ChronoField.YEAR);\n+        return (R) temporal.with(ChronoField.YEAR, (oldYear / years) * years + newVal)\n+          .with(TemporalAdjusters.firstDayOfYear());\n     }\n \n     @Override\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1508",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1508/ThreadPoolManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1508/ThreadPoolManager.java\nindex 4aa89fef86b..c46de857f45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1508/ThreadPoolManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1508/ThreadPoolManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.util.concurrent.ConcurrentHashMap;\n@@ -31,14 +32,14 @@ import static java.util.Objects.requireNonNullElseGet;\n \n final class ThreadPoolManager\n {\n-    private final ConcurrentHashMap<Group,ThreadPool> pools;\n+    private final ConcurrentHashMap<Group, ThreadPool> pools;\n     private final ThreadGroup topLevelGroup;\n     private final SystemNanoClock clock;\n     private final FailedJobRunsStore failedJobRunsStore;\n     private final LongSupplier jobIdSupplier;\n     private boolean shutdown;\n \n-    ThreadPoolManager( ThreadGroup topLevelGroup, SystemNanoClock clock, FailedJobRunsStore failedJobRunsStore, LongSupplier jobIdSupplier )\n+    ThreadPoolManager(ThreadGroup topLevelGroup, SystemNanoClock clock, FailedJobRunsStore failedJobRunsStore, LongSupplier jobIdSupplier)\n     {\n         this.topLevelGroup = topLevelGroup;\n         pools = new ConcurrentHashMap<>();\n@@ -47,62 +48,62 @@ final class ThreadPoolManager\n         this.jobIdSupplier = jobIdSupplier;\n     }\n \n-    ThreadPool getThreadPool( Group group )\n+    ThreadPool getThreadPool(Group group)\n     {\n-        return getThreadPool( group, null );\n+        return getThreadPool(group, null);\n     }\n \n-    ThreadPool getThreadPool( Group group, ThreadPool.ThreadPoolParameters parameters )\n+    ThreadPool getThreadPool(Group group, ThreadPool.ThreadPoolParameters parameters)\n     {\n-        return pools.computeIfAbsent( group, g -> createThreadPool( g, parameters ) );\n+        return pools.computeIfAbsent(group, g -> createThreadPool(g, parameters));\n     }\n \n-    boolean isStarted( Group group )\n+    boolean isStarted(Group group)\n     {\n-        return pools.containsKey( group );\n+        return pools.containsKey(group);\n     }\n \n-    void assumeNotStarted( Group group )\n+    void assumeNotStarted(Group group)\n     {\n-        if ( isStarted( group ) )\n+        if (isStarted(group))\n         {\n-            throw new IllegalStateException( group.groupName() + \" is already been started. \" );\n+            throw new IllegalStateException(group.groupName() + \" is already been started. \");\n         }\n     }\n \n-    synchronized void forEachStarted( BiConsumer<Group, ThreadPool> consumer )\n+    synchronized void forEachStarted(BiConsumer<Group, ThreadPool> consumer)\n     {\n         assertNotShutDown();\n-        pools.forEach( consumer );\n+        pools.forEach(consumer);\n     }\n \n-    private synchronized ThreadPool createThreadPool( Group group, ThreadPool.ThreadPoolParameters parameters )\n+    private synchronized ThreadPool createThreadPool(Group group, ThreadPool.ThreadPoolParameters parameters)\n     {\n         assertNotShutDown();\n-        ThreadPool.ThreadPoolParameters effectiveParameters = requireNonNullElseGet( parameters, () ->\n+        ThreadPool.ThreadPoolParameters effectiveParameters = requireNonNullElseGet(parameters, () ->\n         {\n             ThreadPool.ThreadPoolParameters newParameters = new ThreadPool.ThreadPoolParameters();\n-            group.defaultParallelism().ifPresent( parallelism -> newParameters.desiredParallelism = parallelism  );\n+            group.defaultParallelism().ifPresent(parallelism -> newParameters.desiredParallelism = parallelism);\n             return newParameters;\n-        } );\n-        return new ThreadPool( group, topLevelGroup, effectiveParameters, clock, failedJobRunsStore, jobIdSupplier );\n+        });\n+        return new ThreadPool(group, topLevelGroup, effectiveParameters, clock, failedJobRunsStore, jobIdSupplier);\n     }\n \n     private void assertNotShutDown()\n     {\n-        if ( shutdown )\n+        if (shutdown)\n         {\n-            throw new IllegalStateException( \"ThreadPoolManager is shutdown.\" );\n+            throw new IllegalStateException(\"ThreadPoolManager is shutdown.\");\n         }\n     }\n \n     synchronized InterruptedException shutDownAll()\n     {\n         shutdown = true;\n-        pools.forEach( ( group, pool ) -> pool.cancelAllJobs() );\n-        pools.forEach( ( group, pool ) -> pool.shutDown() );\n+        pools.forEach((group, pool) -> pool.cancelAllJobs());\n+        pools.forEach((group, pool) -> pool.shutDown());\n         return pools.values().stream()\n-                    .map( ThreadPool::getShutdownException )\n-                    .reduce( null, Exceptions::chain );\n+          .map(ThreadPool::getShutdownException)\n+          .reduce(null, Exceptions::chain);\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
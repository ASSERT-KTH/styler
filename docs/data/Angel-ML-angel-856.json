{
    "project_name": "Angel-ML-angel",
    "error_id": "856",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/856/AngelThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/856/AngelThreadFactory.java\nindex ae572dcf651..49964352bf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/856/AngelThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/856/AngelThreadFactory.java\n@@ -29,17 +29,13 @@ public class AngelThreadFactory implements ThreadFactory {\n \n   public AngelThreadFactory(String poolName) {\n     SecurityManager s = System.getSecurityManager();\n-    group = (s != null) ? s.getThreadGroup() :\n-        Thread.currentThread().getThreadGroup();\n-    namePrefix = \"\" + poolName +\n-        \"-thread-\";\n+    group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n+    namePrefix = \"\" + poolName + \"-thread-\";\n   }\n \n   public Thread newThread(Runnable r) {\n-    Thread t = new Thread(group, r,\n-        namePrefix + threadNumber.getAndIncrement(),\n-        0);\n-    if (t.isDaemon()) {\n+    Thread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement(), 0);\n+if (t.isDaemon()) {\n       t.setDaemon(false);\n     }\n     if (t.getPriority() != Thread.NORM_PRIORITY) {\n@@ -47,4 +43,4 @@ public class AngelThreadFactory implements ThreadFactory {\n     }\n     return t;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/856/AngelThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/856/AngelThreadFactory.java\nindex ae572dcf651..e80a7dc1b9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/856/AngelThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/856/AngelThreadFactory.java\n@@ -29,22 +29,20 @@ public class AngelThreadFactory implements ThreadFactory {\n \n   public AngelThreadFactory(String poolName) {\n     SecurityManager s = System.getSecurityManager();\n-    group = (s != null) ? s.getThreadGroup() :\n-        Thread.currentThread().getThreadGroup();\n-    namePrefix = \"\" + poolName +\n-        \"-thread-\";\n+    group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n+    namePrefix = \"\" + poolName + \"-thread-\";\n   }\n \n   public Thread newThread(Runnable r) {\n-    Thread t = new Thread(group, r,\n-        namePrefix + threadNumber.getAndIncrement(),\n-        0);\n+    Thread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement(), 0);\n     if (t.isDaemon()) {\n       t.setDaemon(false);\n     }\n+\n     if (t.getPriority() != Thread.NORM_PRIORITY) {\n       t.setPriority(Thread.NORM_PRIORITY);\n     }\n     return t;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "936",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/936/PerformsWriteMethodVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/936/PerformsWriteMethodVisitor.java\nindex 1fe90fd7570..a7c1c72211c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/936/PerformsWriteMethodVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/936/PerformsWriteMethodVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import org.neo4j.tooling.procedure.messages.CompilationMessage;\n@@ -30,26 +31,26 @@ import org.neo4j.procedure.Mode;\n import org.neo4j.procedure.PerformsWrites;\n import org.neo4j.procedure.Procedure;\n \n-public class PerformsWriteMethodVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n+public class PerformsWriteMethodVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>, Void>\n {\n \n-    @Override\n-    public Stream<CompilationMessage> visitExecutable( ExecutableElement method, Void ignored )\n+  @Override\n+  public Stream<CompilationMessage> visitExecutable(ExecutableElement method, Void ignored)\n+  {\n+    Procedure procedure = method.getAnnotation(Procedure.class);\n+    if (procedure == null)\n+    {\n+      return Stream.of(new PerformsWriteMisuseError(method, \"@%s usage error: missing @%s annotation on method\",\n+          PerformsWrites.class.getSimpleName(), Procedure.class.getSimpleName()));\n+    }\n+\n+    if (procedure.mode() != Mode.DEFAULT)\n     {\n-        Procedure procedure = method.getAnnotation( Procedure.class );\n-        if ( procedure == null )\n-        {\n-            return Stream.of( new PerformsWriteMisuseError( method, \"@%s usage error: missing @%s annotation on method\",\n-                    PerformsWrites.class.getSimpleName(), Procedure.class.getSimpleName() ) );\n-        }\n-\n-        if ( procedure.mode() != Mode.DEFAULT )\n-        {\n-            return Stream.of( new PerformsWriteMisuseError( method,\n-                    \"@%s usage error: cannot use mode other than Mode.DEFAULT\",\n-                    PerformsWrites.class.getSimpleName() ) );\n-        }\n-        return Stream.empty();\n+      return Stream.of(new PerformsWriteMisuseError(method,\n+          \"@%s usage error: cannot use mode other than Mode.DEFAULT\",\n+          PerformsWrites.class.getSimpleName()));\n     }\n+    return Stream.empty();\n+  }\n \n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/936/PerformsWriteMethodVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/936/PerformsWriteMethodVisitor.java\nindex 1fe90fd7570..8f3d8af868a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/936/PerformsWriteMethodVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/936/PerformsWriteMethodVisitor.java\n@@ -33,7 +33,7 @@ import org.neo4j.procedure.Procedure;\n public class PerformsWriteMethodVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n {\n \n-    @Override\n+@Override\n     public Stream<CompilationMessage> visitExecutable( ExecutableElement method, Void ignored )\n     {\n         Procedure procedure = method.getAnnotation( Procedure.class );\n@@ -45,11 +45,10 @@ public class PerformsWriteMethodVisitor extends SimpleElementVisitor8<Stream<Com\n \n         if ( procedure.mode() != Mode.DEFAULT )\n         {\n-            return Stream.of( new PerformsWriteMisuseError( method,\n-                    \"@%s usage error: cannot use mode other than Mode.DEFAULT\",\n+            return Stream.of( new PerformsWriteMisuseError( method, \"@%s usage error: cannot use mode other than Mode.DEFAULT\",\n                     PerformsWrites.class.getSimpleName() ) );\n         }\n-        return Stream.empty();\n-    }\n \n-}\n+return Stream.empty();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "702",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/702/BasicType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/702/BasicType.java\nindex e06d9a42a87..e8336157c68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/702/BasicType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/702/BasicType.java\n@@ -44,4 +44,4 @@ public enum BasicType {\n   public int getValue() {\n     return value;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/702/BasicType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/702/BasicType.java\nindex e06d9a42a87..3c18fdd97b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/702/BasicType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/702/BasicType.java\n@@ -17,31 +17,32 @@\n \n package com.tencent.angel.ps.storage.vector.storage;\n \n-public enum BasicType {\n-  INT(0), LONG(1), FLOAT(2), DOUBLE(3);\n-\n-  private final int value;\n-\n-  BasicType(int value) {\n-    this.value = value;\n-  }\n-\n-  public static BasicType valuesOf(int value) {\n-    switch (value) {\n-      case 0:\n-        return INT;\n-      case 1:\n-        return LONG;\n-      case 2:\n-        return FLOAT;\n-      case 3:\n-        return DOUBLE;\n-      default:\n-        return INT;\n-    }\n-  }\n-\n-  public int getValue() {\n-    return value;\n-  }\n-}\n+\n+\n+public enum BasicType {INT(0), LONG(1), FLOAT(2), DOUBLE(3);\n+                        private final int value;\n+\n+                        BasicType(int value) {\n+                          this.value = value;\n+                        }\n+\n+                        public static BasicType valuesOf(int value) {\n+                          switch (value) {\n+                            case 0:\n+                              return INT;\n+                            case 1:\n+                              return LONG;\n+                            case 2:\n+                              return FLOAT;\n+                            case 3:\n+                              return DOUBLE;\n+                            default:\n+                              return INT;\n+                          }\n+                        }\n+\n+                        public int getValue() {\n+                          return value;\n+                        }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "768",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/768/EmbeddedProxySPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/768/EmbeddedProxySPI.java\nindex 9dbedc04083..0fc743c11a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/768/EmbeddedProxySPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/768/EmbeddedProxySPI.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import org.neo4j.graphdb.GraphDatabaseService;\n@@ -26,25 +27,25 @@ import org.neo4j.kernel.api.Statement;\n \n public interface EmbeddedProxySPI\n {\n-    Statement statement();\n+  Statement statement();\n \n-    KernelTransaction kernelTransaction();\n+  KernelTransaction kernelTransaction();\n \n-    GraphDatabaseService getGraphDatabase();\n+  GraphDatabaseService getGraphDatabase();\n \n-    void assertInUnterminatedTransaction();\n+  void assertInUnterminatedTransaction();\n \n-    void failTransaction();\n+  void failTransaction();\n \n-    RelationshipProxy newRelationshipProxy( long id );\n+  RelationshipProxy newRelationshipProxy(long id);\n \n-    RelationshipProxy newRelationshipProxy( long id, long startNodeId, int typeId, long endNodeId );\n+  RelationshipProxy newRelationshipProxy(long id, long startNodeId, int typeId, long endNodeId);\n \n-    NodeProxy newNodeProxy( long nodeId );\n+  NodeProxy newNodeProxy(long nodeId);\n \n-    GraphPropertiesProxy newGraphPropertiesProxy();\n+  GraphPropertiesProxy newGraphPropertiesProxy();\n \n-    RelationshipType getRelationshipTypeById( int type );\n+  RelationshipType getRelationshipTypeById(int type);\n \n-    int getRelationshipTypeIdByName( String typeName );\n+  int getRelationshipTypeIdByName(String typeName);\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/768/EmbeddedProxySPI.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/768/EmbeddedProxySPI.java\nindex 9dbedc04083..3b2309be72e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/768/EmbeddedProxySPI.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/768/EmbeddedProxySPI.java\n@@ -37,14 +37,11 @@ public interface EmbeddedProxySPI\n     void failTransaction();\n \n     RelationshipProxy newRelationshipProxy( long id );\n-\n-    RelationshipProxy newRelationshipProxy( long id, long startNodeId, int typeId, long endNodeId );\n-\n-    NodeProxy newNodeProxy( long nodeId );\n-\n-    GraphPropertiesProxy newGraphPropertiesProxy();\n+RelationshipProxy newRelationshipProxy( long id, long startNodeId, int typeId, long endNodeId );\n+NodeProxy newNodeProxy( long nodeId );\n+GraphPropertiesProxy newGraphPropertiesProxy();\n \n     RelationshipType getRelationshipTypeById( int type );\n \n     int getRelationshipTypeIdByName( String typeName );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
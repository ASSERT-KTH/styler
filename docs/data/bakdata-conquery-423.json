{
    "project_name": "bakdata-conquery",
    "error_id": "423",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\tinfo.addObjectPermissions(permissions);\n\t\t\treturn info;\n\t\t} else {\n\t\t\t// only used for test cases\n\t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n\t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/423/AllGrantedRealm.java\nindex bf6e89e61a7..7114b55a0eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/423/AllGrantedRealm.java\n@@ -64,7 +64,8 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(permissions);\n \t\t\treturn info;\n-\t\t} else {\n+\t\t}\n+\t\telse {\n \t\t\t// only used for test cases\n \t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/423/AllGrantedRealm.java\nindex bf6e89e61a7..1d27cf4b634 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/423/AllGrantedRealm.java\n@@ -24,67 +24,67 @@ import lombok.extern.slf4j.Slf4j;\n  */\n @Slf4j\n public class AllGrantedRealm extends AuthorizingRealm {\n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\" +\n-\t\t\t\"           \u00a7\u00a7\\n\" +\n-\t\t\t\"          \u00a7  \u00a7\\n\" +\n-\t\t\t\"         \u00a7    \u00a7\\n\" +\n-\t\t\t\"        \u00a7      \u00a7\\n\" +\n-\t\t\t\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n-\t\t\t\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n-\t\t\t\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n-\t\t\t\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n-\t\t\t\"   $                \u00a7\\n\" +\n-\t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n-\t\t\t\" \u00a7                    \u00a7\\n\" +\n-\t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n-\tprivate final MasterMetaStorage storage;\n-\t\n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic AllGrantedRealm(MasterMetaStorage storage) {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(AuthenticationToken.class);\n-\t\tthis.storage = storage;\n-\t}\n+    /**\n+     * The warning that is displayed, when the realm is instantiated.\n+     */\n+    private static final String WARNING = \"\\n\" +\n+        \"           \u00a7\u00a7\\n\" +\n+        \"          \u00a7  \u00a7\\n\" +\n+        \"         \u00a7    \u00a7\\n\" +\n+        \"        \u00a7      \u00a7\\n\" +\n+        \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n+        \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n+        \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n+        \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n+        \"   $                \u00a7\\n\" +\n+        \"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n+        \" \u00a7                    \u00a7\\n\" +\n+        \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n \n-\t@Override\n-\tprotected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n-\t\tObjects.requireNonNull(principals, \"No principal info was provided\");\n-\t\tUserId userId = UserId.class.cast(principals.getPrimaryPrincipal());\n-\t\t\n-\t\tif(userId.equals(DevAuthConfig.USER.getId())) {\n-\t\t\t// It's the default superuser, give her/him the ultimate permission\n-\t\t\tSet<Permission> permissions = new HashSet<Permission>();\n-\t\t\tpermissions.add(new AllGrantedPermission());\n-\t\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n-\t\t\tinfo.addObjectPermissions(permissions);\n-\t\t\treturn info;\n-\t\t} else {\n-\t\t\t// only used for test cases\n-\t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n-\t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n-\t\t\treturn info;\n-\t\t}\n-\t}\n+    private final MasterMetaStorage storage;\n \n-\t@Override\n-\tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\t// Authenticate every token as the superuser\n-\t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n-\t}\n-\t\n-\t/**\n-\t * Inner class that represents a permission, that is always valid.\n-\t */\n-\tprivate static class AllGrantedPermission implements Permission {\n-\t\t@Override\n-\t\tpublic boolean implies(Permission permission) {\n-\t\t\treturn true;\n-\t\t}\n-\t}\n+    /**\n+     * Standard constructor.\n+     */\n+    public AllGrantedRealm(MasterMetaStorage storage) {\n+        log.warn(WARNING);\n+        this.setAuthenticationTokenClass(AuthenticationToken.class);\n+        this.storage = storage;\n+    }\n+\n+    @Override\n+    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n+        Objects.requireNonNull(principals, \"No principal info was provided\");\n+        UserId userId = UserId.class.cast(principals.getPrimaryPrincipal());\n+\n+        if (userId.equals(DevAuthConfig.USER.getId())) {\n+            // It's the default superuser, give her/him the ultimate permission\n+            Set<Permission> permissions = new HashSet<Permission>();\n+            permissions.add(new AllGrantedPermission());\n+            SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n+            info.addObjectPermissions(permissions);\n+            return info;\n+        } else {\n+            // only used for test cases\n+            SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n+            info.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n+            return info;\n+        }\n+    }\n+\n+    @Override\n+    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        // Authenticate every token as the superuser\n+        return new SingleAuthenticationInfo(DevAuthConfig.USER.getId(), token.getCredentials());\n+    }\n+\n+    /**\n+     * Inner class that represents a permission, that is always valid.\n+     */\n+    private static class AllGrantedPermission implements Permission {\n+        @Override\n+        public boolean implies(Permission permission) {\n+            return true;\n+        }\n+    }\n }\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "49",
                    "column": "5",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 1, expected is 3, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "column": "1",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/423/AllGrantedRealm.java\nindex bf6e89e61a7..c115a1d2748 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/423/AllGrantedRealm.java\n@@ -27,19 +27,7 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t/**\n \t * The warning that is displayed, when the realm is instantiated.\n \t */\n-\tprivate static final String WARNING = \"\\n\" +\n-\t\t\t\"           \u00a7\u00a7\\n\" +\n-\t\t\t\"          \u00a7  \u00a7\\n\" +\n-\t\t\t\"         \u00a7    \u00a7\\n\" +\n-\t\t\t\"        \u00a7      \u00a7\\n\" +\n-\t\t\t\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n-\t\t\t\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n-\t\t\t\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n-\t\t\t\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n-\t\t\t\"   $                \u00a7\\n\" +\n-\t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n-\t\t\t\" \u00a7                    \u00a7\\n\" +\n-\t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+\tprivate static final String WARNING = \"\\n\" + \"           \u00a7\u00a7\\n\" + \"          \u00a7  \u00a7\\n\" + \"         \u00a7    \u00a7\\n\" + \"        \u00a7      \u00a7\\n\" + \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" + \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" + \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" + \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" + \"   $                \u00a7\\n\" + \"  \u00a7        \u00a7\u00a7        \u00a7\\n\" + \" \u00a7                    \u00a7\\n\" + \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n \t\n \tprivate final MasterMetaStorage storage;\n \t\n@@ -58,15 +46,16 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\tUserId userId = UserId.class.cast(principals.getPrimaryPrincipal());\n \t\t\n \t\tif(userId.equals(DevAuthConfig.USER.getId())) {\n-\t\t\t// It's the default superuser, give her/him the ultimate permission\n+\t// It's the default superuser, give her/him the ultimate permission\n \t\t\tSet<Permission> permissions = new HashSet<Permission>();\n \t\t\tpermissions.add(new AllGrantedPermission());\n-\t\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n+\t\t\tSimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(permissions);\n \t\t\treturn info;\n-\t\t} else {\n+\t\t}\n+else {\n \t\t\t// only used for test cases\n-\t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n+\t\t\tSimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n \t\t\treturn info;\n \t\t}\n@@ -87,4 +76,4 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\treturn true;\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/423/AllGrantedRealm.java\nindex bf6e89e61a7..52162f3d7ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/423/AllGrantedRealm.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.auth;\n import java.util.HashSet;\n import java.util.Objects;\n import java.util.Set;\n-\n import org.apache.shiro.authc.AuthenticationException;\n import org.apache.shiro.authc.AuthenticationInfo;\n import org.apache.shiro.authc.AuthenticationToken;\n@@ -12,79 +11,69 @@ import org.apache.shiro.authz.Permission;\n import org.apache.shiro.authz.SimpleAuthorizationInfo;\n import org.apache.shiro.realm.AuthorizingRealm;\n import org.apache.shiro.subject.PrincipalCollection;\n-\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.util.SingleAuthenticationInfo;\n import com.bakdata.conquery.models.identifiable.ids.specific.UserId;\n-\n import lombok.extern.slf4j.Slf4j;\n \n /**\n  * This realm authenticates and authorizes all requests given to it positive.\n  */\n+\n @Slf4j\n public class AllGrantedRealm extends AuthorizingRealm {\n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\" +\n-\t\t\t\"           \u00a7\u00a7\\n\" +\n-\t\t\t\"          \u00a7  \u00a7\\n\" +\n-\t\t\t\"         \u00a7    \u00a7\\n\" +\n-\t\t\t\"        \u00a7      \u00a7\\n\" +\n-\t\t\t\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\" +\n-\t\t\t\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\" +\n-\t\t\t\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\" +\n-\t\t\t\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\" +\n-\t\t\t\"   $                \u00a7\\n\" +\n-\t\t\t\"  \u00a7        \u00a7\u00a7        \u00a7\\n\" +\n-\t\t\t\" \u00a7                    \u00a7\\n\" +\n-\t\t\t\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\t\n-\tprivate final MasterMetaStorage storage;\n-\t\n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic AllGrantedRealm(MasterMetaStorage storage) {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(AuthenticationToken.class);\n-\t\tthis.storage = storage;\n-\t}\n+ /**\n+  * The warning that is displayed, when the realm is instantiated.\n+  */\n+\n+ private static final String WARNING = \"\\n\"+\"           \u00a7\u00a7\\n\"+\"          \u00a7  \u00a7\\n\"+\"         \u00a7    \u00a7\\n\"+\"        \u00a7      \u00a7\\n\"+\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"+\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"+\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"+\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"+\"   $                \u00a7\\n\"+\"  \u00a7        \u00a7\u00a7        \u00a7\\n\"+\" \u00a7                    \u00a7\\n\"+\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+ private final MasterMetaStorage storage;\n+ \n+ /**\n+  * Standard constructor.\n+  */\n+\n+ public AllGrantedRealm(MasterMetaStorage storage) {\n+  log.warn(WARNING);\n+  this.setAuthenticationTokenClass(AuthenticationToken.class);\n+  this.storage = storage;\n+ }\n+\n+ @Override\n+ protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n+  Objects.requireNonNull(principals, \"No principal info was provided\");\n+  UserId userId = UserId.class.cast(principals.getPrimaryPrincipal());\n+  if(userId.equals(DevAuthConfig.USER.getId())) {\n+   // It's the default superuser, give her/him the ultimate permission\n+   Set<Permission> permissions = new HashSet<Permission>();\n+   permissions.add(new AllGrantedPermission());\n+   SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n+   info.addObjectPermissions(permissions);\n+   return info;\n+  }\n+  else {\n+   // only used for test cases\n+   SimpleAuthorizationInfo info = new SimpleAuthorizationInfo();\n+   info.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n+   return info;\n+  }\n+ }\n+\n+ @Override\n+ protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+  // Authenticate every token as the superuser\n+  return new SingleAuthenticationInfo(DevAuthConfig.USER.getId(), token.getCredentials());\n+ }\n+ \n+ /**\n+  * Inner class that represents a permission, that is always valid.\n+  */\n \n-\t@Override\n-\tprotected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principals) {\n-\t\tObjects.requireNonNull(principals, \"No principal info was provided\");\n-\t\tUserId userId = UserId.class.cast(principals.getPrimaryPrincipal());\n-\t\t\n-\t\tif(userId.equals(DevAuthConfig.USER.getId())) {\n-\t\t\t// It's the default superuser, give her/him the ultimate permission\n-\t\t\tSet<Permission> permissions = new HashSet<Permission>();\n-\t\t\tpermissions.add(new AllGrantedPermission());\n-\t\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n-\t\t\tinfo.addObjectPermissions(permissions);\n-\t\t\treturn info;\n-\t\t} else {\n-\t\t\t// only used for test cases\n-\t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n-\t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n-\t\t\treturn info;\n-\t\t}\n-\t}\n+ private static class AllGrantedPermission implements Permission {\n \n-\t@Override\n-\tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\t// Authenticate every token as the superuser\n-\t\treturn new SingleAuthenticationInfo(DevAuthConfig.USER.getId(),token.getCredentials());\n-\t}\n-\t\n-\t/**\n-\t * Inner class that represents a permission, that is always valid.\n-\t */\n-\tprivate static class AllGrantedPermission implements Permission {\n-\t\t@Override\n-\t\tpublic boolean implies(Permission permission) {\n-\t\t\treturn true;\n-\t\t}\n-\t}\n-}\n+  @Override\n+  public boolean implies(Permission permission) {\n+   return true;\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 85
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/423/AllGrantedRealm.java\nindex bf6e89e61a7..7114b55a0eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/423/AllGrantedRealm.java\n@@ -64,7 +64,8 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(permissions);\n \t\t\treturn info;\n-\t\t} else {\n+\t\t}\n+\t\telse {\n \t\t\t// only used for test cases\n \t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/423/AllGrantedRealm.java\nindex bf6e89e61a7..7114b55a0eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/423/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/423/AllGrantedRealm.java\n@@ -64,7 +64,8 @@ public class AllGrantedRealm extends AuthorizingRealm {\n \t\t\tSimpleAuthorizationInfo info =  new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(permissions);\n \t\t\treturn info;\n-\t\t} else {\n+\t\t}\n+\t\telse {\n \t\t\t// only used for test cases\n \t\t\tSimpleAuthorizationInfo info  = new SimpleAuthorizationInfo();\n \t\t\tinfo.addObjectPermissions(new HashSet<Permission>(userId.getOwner(storage).getPermissionsEffective()));\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
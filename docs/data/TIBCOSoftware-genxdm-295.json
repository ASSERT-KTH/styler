{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "295",
    "information": {
        "errors": [
            {
                "line": "9",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class TestNavigate extends BaseBareDomPerfTest {\n\n\tlong m_attributes = 0;\n\tlong m_comments = 0;\n\tlong m_documents = 0;\n\tlong m_elements = 0;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "10",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/295/TestNavigate.java\nindex 63601f08199..7ef5ec28c2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/295/TestNavigate.java\n@@ -6,7 +6,7 @@ import org.w3c.dom.Node;\n \r\n public class TestNavigate extends BaseBareDomPerfTest {\r\n \r\n-\tlong m_attributes = 0;\r\n+long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "52",
                    "column": "11",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/295/TestNavigate.java\nindex 63601f08199..433062ac5f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/295/TestNavigate.java\n@@ -6,41 +6,49 @@ import org.w3c.dom.Node;\n \r\n public class TestNavigate extends BaseBareDomPerfTest {\r\n \r\n-\tlong m_attributes = 0;\r\n-\tlong m_comments = 0;\r\n-\tlong m_documents = 0;\r\n-\tlong m_elements = 0;\r\n-\tlong m_namespaces = 0;\r\n-\tlong m_processingInstructions = 0;\r\n-\tlong m_texts = 0;\r\n-\tlong m_other = 0;\r\n-\tlong m_all = 0;\r\n-\t\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\treturn getDocFile();\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {\r\n-\t\tif(m_testNode == null)\r\n-\t\t{\r\n-\t\t\tsetupTestNode();\r\n-\t\t}\r\n-\t\tm_attributes = 0;\r\n-\t\tm_comments = 0;\r\n-\t\tm_documents = 0;\r\n-\t\tm_elements = 0;\r\n-\t\tm_namespaces = 0;\r\n-\t\tm_processingInstructions = 0;\r\n-\t\tm_texts = 0;\r\n-\t\tm_other = 0;\r\n-\t\tm_all = 0;\r\n-\t}\r\n-\t@Override\r\n-\tpublic void execute() {\r\n-\t\tNode node = m_testNode;\r\n-        while (node!=null) {\r\n+    long m_attributes = 0;\r\n+\r\n+    long m_comments = 0;\r\n+\r\n+    long m_documents = 0;\r\n+\r\n+    long m_elements = 0;\r\n+\r\n+    long m_namespaces = 0;\r\n+\r\n+    long m_processingInstructions = 0;\r\n+\r\n+    long m_texts = 0;\r\n+\r\n+    long m_other = 0;\r\n+\r\n+    long m_all = 0;\r\n+\r\n+    @Override\r\n+    public String getTestName() {\r\n+        return getDocFile();\r\n+    }\r\n+\r\n+    @Override\r\n+    public void iterativeSetup() {\r\n+        if (m_testNode == null) {\r\n+            setupTestNode();\r\n+        }\r\n+        m_attributes = 0;\r\n+        m_comments = 0;\r\n+        m_documents = 0;\r\n+        m_elements = 0;\r\n+        m_namespaces = 0;\r\n+        m_processingInstructions = 0;\r\n+        m_texts = 0;\r\n+        m_other = 0;\r\n+        m_all = 0;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void execute() {\r\n+        Node node = m_testNode;\r\n+        while (node != null) {\r\n /*        \t\r\n \t        switch(node.getNodeType())\r\n \t        {\r\n@@ -69,24 +77,22 @@ public class TestNavigate extends BaseBareDomPerfTest {\n \t        \tmi_other++;\r\n \t        \tbreak;\r\n \t        }\r\n-*/\t        \r\n-\t        m_all++;\r\n-\t        if(node.hasChildNodes())\r\n-\t        {\r\n-\t\t        node = node.getFirstChild();\r\n-\t        } \r\n-\t        else {\r\n-\t        \twhile (node.getNextSibling() == null && node != m_testNode)\r\n-\t        \t{\r\n-\t        \t\tnode = node.getParentNode();\r\n-\t        \t}\r\n-\t\t        node = node.getNextSibling();\r\n-\t\t      } \r\n-\t    } \r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() {\r\n-\t\tArrayList<String> retval = new ArrayList<String>();\r\n+*/\r\n+            m_all++;\r\n+            if (node.hasChildNodes()) {\r\n+                node = node.getFirstChild();\r\n+            } else {\r\n+                while (node.getNextSibling() == null && node != m_testNode) {\r\n+                    node = node.getParentNode();\r\n+                }\r\n+                node = node.getNextSibling();\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public Iterable<String> iterativeTeardown() {\r\n+        ArrayList<String> retval = new ArrayList<String>();\r\n /*\t\t\r\n        \tif(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n        \tif(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n@@ -96,11 +102,16 @@ public class TestNavigate extends BaseBareDomPerfTest {\n        \tif(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n        \tif(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n        \tif(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n-*/       \t\r\n-       \tif(m_all > 0)                  retval.add(\"node count = \" + Long.toString(m_all));\r\n-\t\treturn retval; \r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void finalTeardown() {};\r\n+*/\r\n+        if (m_all > 0) {\r\n+            retval.add(\"node count = \" + Long.toString(m_all));\r\n+        }\r\n+        return retval;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void finalTeardown() {\r\n+    }\r\n+\r\n+    ;\r\n }\r\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "9",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/295/TestNavigate.java\nindex 63601f08199..52ec56e843f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/295/TestNavigate.java\n@@ -4,9 +4,8 @@ import java.util.ArrayList;\n \r\n import org.w3c.dom.Node;\r\n \r\n-public class TestNavigate extends BaseBareDomPerfTest {\r\n-\r\n-\tlong m_attributes = 0;\r\n+public class TestNavigate extends BaseBareDomPerfTest {\n+    long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n@@ -14,19 +13,19 @@ public class TestNavigate extends BaseBareDomPerfTest {\n \tlong m_processingInstructions = 0;\r\n \tlong m_texts = 0;\r\n \tlong m_other = 0;\r\n-\tlong m_all = 0;\r\n-\t\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\treturn getDocFile();\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {\r\n-\t\tif(m_testNode == null)\r\n-\t\t{\r\n-\t\t\tsetupTestNode();\r\n-\t\t}\r\n+\tlong m_all = 0;\n+\n+@Override\n+public String getTestName() {\n+    return getDocFile();\n+    }\n+\n+@Override\n+public void iterativeSetup() {\n+                if (m_testNode == null)\r\n+\t\t{\n+    setupTestNode();\n+    }\r\n \t\tm_attributes = 0;\r\n \t\tm_comments = 0;\r\n \t\tm_documents = 0;\r\n@@ -35,13 +34,12 @@ public class TestNavigate extends BaseBareDomPerfTest {\n \t\tm_processingInstructions = 0;\r\n \t\tm_texts = 0;\r\n \t\tm_other = 0;\r\n-\t\tm_all = 0;\r\n-\t}\r\n+\t\tm_all = 0;\n+    }\r\n \t@Override\r\n-\tpublic void execute() {\r\n-\t\tNode node = m_testNode;\r\n-        while (node!=null) {\r\n-/*        \t\r\n+\tpublic void execute() {\n+    Node node = m_testNode;\n+while (node != null) { /*        \t\r\n \t        switch(node.getNodeType())\r\n \t        {\r\n \t\t\tcase Node.ATTRIBUTE_NODE:\r\n@@ -69,24 +67,28 @@ public class TestNavigate extends BaseBareDomPerfTest {\n \t        \tmi_other++;\r\n \t        \tbreak;\r\n \t        }\r\n-*/\t        \r\n-\t        m_all++;\r\n-\t        if(node.hasChildNodes())\r\n-\t        {\r\n-\t\t        node = node.getFirstChild();\r\n-\t        } \r\n-\t        else {\r\n-\t        \twhile (node.getNextSibling() == null && node != m_testNode)\r\n-\t        \t{\r\n-\t        \t\tnode = node.getParentNode();\r\n-\t        \t}\r\n-\t\t        node = node.getNextSibling();\r\n-\t\t      } \r\n-\t    } \r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() {\r\n-\t\tArrayList<String> retval = new ArrayList<String>();\r\n+*/\n+        m_all++;\n+if(node.hasChildNodes())\r\n+\t        {\n+    node = node.getFirstChild();\n+    }\n+else\n+ {\n+\n+            while (node.getNextSibling() == null && node != m_testNode)\r\n+\t        \t{\n+    node = node.getParentNode();\n+    }\r\n+\t\t        node = node.getNextSibling();\n+    }\n+    } \r\n+\t}\n+\n+@Override\r\n+\tpublic Iterable<String> iterativeTeardown() {\n+    ArrayList<String> retval = new ArrayList<String>();\n+\n /*\t\t\r\n        \tif(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n        \tif(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n@@ -96,11 +98,12 @@ public class TestNavigate extends BaseBareDomPerfTest {\n        \tif(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n        \tif(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n        \tif(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n-*/       \t\r\n-       \tif(m_all > 0)                  retval.add(\"node count = \" + Long.toString(m_all));\r\n-\t\treturn retval; \r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void finalTeardown() {};\r\n-}\r\n+*/\n+if (m_all > 0)\n+    retval.add(\"node count = \" + Long.toString(m_all));\n+return retval;\n+    }\n+\n+@Override\n+public void finalTeardown() {};\n+    }\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/295/TestNavigate.java\nindex 63601f08199..35d97459d86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/295/TestNavigate.java\n@@ -1,106 +1,120 @@\n-package org.genxdm.samples.performance.dom;\r\n-\r\n-import java.util.ArrayList;\r\n-\r\n-import org.w3c.dom.Node;\r\n-\r\n-public class TestNavigate extends BaseBareDomPerfTest {\r\n-\r\n-\tlong m_attributes = 0;\r\n-\tlong m_comments = 0;\r\n-\tlong m_documents = 0;\r\n-\tlong m_elements = 0;\r\n-\tlong m_namespaces = 0;\r\n-\tlong m_processingInstructions = 0;\r\n-\tlong m_texts = 0;\r\n-\tlong m_other = 0;\r\n-\tlong m_all = 0;\r\n-\t\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\treturn getDocFile();\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {\r\n-\t\tif(m_testNode == null)\r\n-\t\t{\r\n-\t\t\tsetupTestNode();\r\n-\t\t}\r\n-\t\tm_attributes = 0;\r\n-\t\tm_comments = 0;\r\n-\t\tm_documents = 0;\r\n-\t\tm_elements = 0;\r\n-\t\tm_namespaces = 0;\r\n-\t\tm_processingInstructions = 0;\r\n-\t\tm_texts = 0;\r\n-\t\tm_other = 0;\r\n-\t\tm_all = 0;\r\n-\t}\r\n-\t@Override\r\n-\tpublic void execute() {\r\n-\t\tNode node = m_testNode;\r\n-        while (node!=null) {\r\n-/*        \t\r\n-\t        switch(node.getNodeType())\r\n-\t        {\r\n-\t\t\tcase Node.ATTRIBUTE_NODE:\r\n-\t\t\t\tif(isNamespace(node))\r\n-\t\t\t\t\tmi_namespaces++;\r\n-\t\t\t\telse\r\n-\t\t\t\t\tmi_attributes++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase Node.COMMENT_NODE:\r\n-\t\t\t\tmi_comments++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase Node.DOCUMENT_NODE:\r\n-\t\t\t\tmi_documents++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase Node.ELEMENT_NODE:\r\n-\t\t\t\tmi_elements++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase Node.PROCESSING_INSTRUCTION_NODE:\r\n-\t\t\t\tmi_processingInstructions++;\r\n-\t\t\t\tbreak;\r\n-\t\t\tcase Node.TEXT_NODE:\r\n-\t\t\t\tmi_texts++;\r\n-\t\t\t\tbreak;\r\n-\t        default:\r\n-\t        \tmi_other++;\r\n-\t        \tbreak;\r\n-\t        }\r\n-*/\t        \r\n-\t        m_all++;\r\n-\t        if(node.hasChildNodes())\r\n-\t        {\r\n-\t\t        node = node.getFirstChild();\r\n-\t        } \r\n-\t        else {\r\n-\t        \twhile (node.getNextSibling() == null && node != m_testNode)\r\n-\t        \t{\r\n-\t        \t\tnode = node.getParentNode();\r\n-\t        \t}\r\n-\t\t        node = node.getNextSibling();\r\n-\t\t      } \r\n-\t    } \r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() {\r\n-\t\tArrayList<String> retval = new ArrayList<String>();\r\n-/*\t\t\r\n-       \tif(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n-       \tif(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n-       \tif(m_documents > 0)              retval.add(\"document count = \" + Long.toString(m_documents));\r\n-       \tif(m_elements > 0)               retval.add(\"element  count = \" + Long.toString(m_elements));\r\n-       \tif(m_namespaces > 0)             retval.add(\"ns       count = \" + Long.toString(m_namespaces));\r\n-       \tif(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n-       \tif(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n-       \tif(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n-*/       \t\r\n-       \tif(m_all > 0)                  retval.add(\"node count = \" + Long.toString(m_all));\r\n-\t\treturn retval; \r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void finalTeardown() {};\r\n-}\r\n+package org.genxdm.samples.performance.dom;\n+\n+import java.util.ArrayList;\n+import org.w3c.dom.Node;\n+\n+public class TestNavigate extends BaseBareDomPerfTest\n+{\n+    long m_attributes = 0;\n+    long m_comments = 0;\n+    long m_documents = 0;\n+    long m_elements = 0;\n+    long m_namespaces = 0;\n+    long m_processingInstructions = 0;\n+    long m_texts = 0;\n+    long m_other = 0;\n+    long m_all = 0;\n+\n+    @Override\n+    public String getTestName()\n+    {\n+        return getDocFile();\n+    }\n+\n+    @Override\n+    public void iterativeSetup()\n+    {\n+        if (m_testNode == null)\n+        {\n+            setupTestNode();\n+        }\n+        m_attributes = 0;\n+        m_comments = 0;\n+        m_documents = 0;\n+        m_elements = 0;\n+        m_namespaces = 0;\n+        m_processingInstructions = 0;\n+        m_texts = 0;\n+        m_other = 0;\n+        m_all = 0;\n+    }\n+\n+    @Override\n+    public void execute()\n+    {\n+        Node node = m_testNode;\n+        while (node != null)\n+        {\r\n+/*          \r\n+            switch(node.getNodeType())\r\n+            {\r\n+            case Node.ATTRIBUTE_NODE:\r\n+                if(isNamespace(node))\r\n+                    mi_namespaces++;\r\n+                else\r\n+                    mi_attributes++;\r\n+                break;\r\n+            case Node.COMMENT_NODE:\r\n+                mi_comments++;\r\n+                break;\r\n+            case Node.DOCUMENT_NODE:\r\n+                mi_documents++;\r\n+                break;\r\n+            case Node.ELEMENT_NODE:\r\n+                mi_elements++;\r\n+                break;\r\n+            case Node.PROCESSING_INSTRUCTION_NODE:\r\n+                mi_processingInstructions++;\r\n+                break;\r\n+            case Node.TEXT_NODE:\r\n+                mi_texts++;\r\n+                break;\r\n+            default:\r\n+                mi_other++;\r\n+                break;\r\n+            }\r\n+*/\n+            m_all++;\n+            if (node.hasChildNodes())\n+            {\n+                node = node.getFirstChild();\n+            }\n+            else\n+            {\n+                while (node.getNextSibling() == null && node != m_testNode)\n+                {\n+                    node = node.getParentNode();\n+                }\n+                node = node.getNextSibling();\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public Iterable<String> iterativeTeardown()\n+    {\n+        ArrayList<String> retval = new ArrayList<String>();\r\n+/*      \r\n+        if(m_attributes > 0)             retval.add(\"att      count = \" + Long.toString(m_attributes));\r\n+        if(m_comments > 0)               retval.add(\"comment  count = \" + Long.toString(m_comments));\r\n+        if(m_documents > 0)              retval.add(\"document count = \" + Long.toString(m_documents));\r\n+        if(m_elements > 0)               retval.add(\"element  count = \" + Long.toString(m_elements));\r\n+        if(m_namespaces > 0)             retval.add(\"ns       count = \" + Long.toString(m_namespaces));\r\n+        if(m_processingInstructions > 0) retval.add(\"pi       count = \" + Long.toString(m_processingInstructions));\r\n+        if(m_texts > 0)                  retval.add(\"text     count = \" + Long.toString(m_texts));\r\n+        if(m_other > 0)                  retval.add(\"other    count = \" + Long.toString(m_other));\r\n+*/\n+        if (m_all > 0)\n+            retval.add(\"node count = \" + Long.toString(m_all));\n+        return retval;\n+    }\n+\n+    @Override\n+    public void finalTeardown()\n+    {\n+\n+\n+    }\n+\n+    ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 120
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "10",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/295/TestNavigate.java\nindex 63601f08199..7ef5ec28c2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/295/TestNavigate.java\n@@ -6,7 +6,7 @@ import org.w3c.dom.Node;\n \r\n public class TestNavigate extends BaseBareDomPerfTest {\r\n \r\n-\tlong m_attributes = 0;\r\n+long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "10",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/295/TestNavigate.java\nindex 63601f08199..de2386b1626 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/295/TestNavigate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/295/TestNavigate.java\n@@ -6,7 +6,7 @@ import org.w3c.dom.Node;\n \r\n public class TestNavigate extends BaseBareDomPerfTest {\r\n \r\n-\tlong m_attributes = 0;\r\n+    long m_attributes = 0;\r\n \tlong m_comments = 0;\r\n \tlong m_documents = 0;\r\n \tlong m_elements = 0;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
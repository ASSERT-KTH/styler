{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3942",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "139",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3942/JULBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3942/JULBridge.java\nindex 7f38a50f42f..25990ec0413 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3942/JULBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3942/JULBridge.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.logging;\n \n import java.text.MessageFormat;\n@@ -35,132 +36,127 @@ import org.neo4j.logging.Logger;\n \n public class JULBridge extends Handler\n {\n-    private static final String UNKNOWN_LOGGER_NAME = \"unknown\";\n-\n-    private final LogProvider logProvider;\n-    private final ConcurrentMap<String, Log> logs = new ConcurrentHashMap<>();\n-\n-    protected JULBridge( LogProvider logProvider )\n+  private static final String UNKNOWN_LOGGER_NAME = \"unknown\";\n+\n+  private final LogProvider logProvider;\n+  private final ConcurrentMap<String, Log> logs = new ConcurrentHashMap<>();\n+\n+  protected JULBridge(LogProvider logProvider)\n+  {\n+    this.logProvider = logProvider;\n+  }\n+\n+  public static void resetJUL()\n+  {\n+    LogManager.getLogManager().reset();\n+  }\n+\n+  public static void forwardTo(LogProvider logProvider)\n+  {\n+    rootJULLogger().addHandler(new JULBridge(logProvider));\n+  }\n+\n+  private static java.util.logging.Logger rootJULLogger()\n+  {\n+    return LogManager.getLogManager().getLogger(\"\");\n+  }\n+\n+  @Override\n+  public void publish(LogRecord record)\n+  {\n+    if (record == null)\n     {\n-        this.logProvider = logProvider;\n+      return;\n     }\n \n-    public static void resetJUL()\n+    String message = getMessage(record);\n+    if (message == null)\n     {\n-        LogManager.getLogManager().reset();\n+      return;\n     }\n \n-    public static void forwardTo( LogProvider logProvider )\n-    {\n-        rootJULLogger().addHandler( new JULBridge( logProvider ) );\n-    }\n+    String context = record.getLoggerName();\n+    Log log = getLog((context != null) ? context : UNKNOWN_LOGGER_NAME);\n+    Logger logger = getLogger(record, log);\n \n-    private static java.util.logging.Logger rootJULLogger()\n+    Throwable throwable = record.getThrown();\n+    if (throwable == null)\n     {\n-        return LogManager.getLogManager().getLogger( \"\" );\n-    }\n-\n-    @Override\n-    public void publish( LogRecord record )\n+      logger.log(message);\n+    } else\n     {\n-        if ( record == null )\n-        {\n-            return;\n-        }\n-\n-        String message = getMessage( record );\n-        if ( message == null )\n-        {\n-            return;\n-        }\n-\n-        String context = record.getLoggerName();\n-        Log log = getLog( ( context != null ) ? context : UNKNOWN_LOGGER_NAME );\n-        Logger logger = getLogger( record, log );\n-\n-        Throwable throwable = record.getThrown();\n-        if ( throwable == null )\n-        {\n-            logger.log( message );\n-        }\n-        else\n-        {\n-            logger.log( message, throwable );\n-        }\n+      logger.log(message, throwable);\n     }\n+  }\n \n-    private Logger getLogger( LogRecord record, Log log )\n+  private Logger getLogger(LogRecord record, Log log)\n+  {\n+    int level = record.getLevel().intValue();\n+    if (level <= Level.FINE.intValue())\n+    {\n+      return log.debugLogger();\n+    } else if (level <= Level.INFO.intValue())\n+    {\n+      return log.infoLogger();\n+    } else if (level <= Level.WARNING.intValue())\n+    {\n+      return log.warnLogger();\n+    } else\n     {\n-        int level = record.getLevel().intValue();\n-        if ( level <= Level.FINE.intValue() )\n-        {\n-            return log.debugLogger();\n-        }\n-        else if ( level <= Level.INFO.intValue() )\n-        {\n-            return log.infoLogger();\n-        }\n-        else if ( level <= Level.WARNING.intValue() )\n-        {\n-            return log.warnLogger();\n-        }\n-        else\n-        {\n-            return log.errorLogger();\n-        }\n+      return log.errorLogger();\n     }\n+  }\n \n-    private Log getLog( String name )\n+  private Log getLog(String name)\n+  {\n+    Log log = logs.get(name);\n+    if (log == null)\n     {\n-        Log log = logs.get( name );\n-        if ( log == null )\n-        {\n-            Log newLog = logProvider.getLog( name );\n-            log = logs.putIfAbsent( name, newLog );\n-            if ( log == null )\n-            {\n-                log = newLog;\n-            }\n-        }\n-        return log;\n+      Log newLog = logProvider.getLog(name);\n+      log = logs.putIfAbsent(name, newLog);\n+      if (log == null)\n+      {\n+        log = newLog;\n+      }\n     }\n+    return log;\n+  }\n \n-    private String getMessage( LogRecord record )\n+  private String getMessage(LogRecord record)\n+  {\n+    String message = record.getMessage();\n+    if (message == null)\n     {\n-        String message = record.getMessage();\n-        if ( message == null )\n-        {\n-            return null;\n-        }\n-\n-        ResourceBundle bundle = record.getResourceBundle();\n-        if ( bundle != null )\n-        {\n-            try\n-            {\n-                message = bundle.getString( message );\n-            }\n-            catch ( MissingResourceException e )\n-            {\n-                // leave message as it was\n-            }\n-        }\n-\n-        Object[] params = record.getParameters();\n-        if ( params != null && params.length > 0 )\n-        {\n-            message = MessageFormat.format( message, params );\n-        }\n-        return message;\n+      return null;\n     }\n \n-    @Override\n-    public void flush()\n+    ResourceBundle bundle = record.getResourceBundle();\n+    if (bundle != null)\n     {\n+      try\n+      {\n+        message = bundle.getString(message);\n+      } catch (MissingResourceException e)\n+      {\n+        // leave message as it was\n+      }\n     }\n \n-    @Override\n-    public void close() throws SecurityException\n+    Object[] params = record.getParameters();\n+    if (params != null && params.length > 0)\n     {\n+      message = MessageFormat.format(message, params);\n     }\n+    return message;\n+  }\n+\n+  @Override\n+  public void flush()\n+  {\n+  }\n+\n+  @Override\n+  public void close() throws SecurityException\n+  {\n+  }\n }\n",
            "diff_size": 171
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "148",
                    "column": "45",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3942/JULBridge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3942/JULBridge.java\nindex 7f38a50f42f..f2cbacb412a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3942/JULBridge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3942/JULBridge.java\n@@ -36,9 +36,8 @@ import org.neo4j.logging.Logger;\n public class JULBridge extends Handler\n {\n     private static final String UNKNOWN_LOGGER_NAME = \"unknown\";\n-\n-    private final LogProvider logProvider;\n-    private final ConcurrentMap<String, Log> logs = new ConcurrentHashMap<>();\n+private final LogProvider logProvider;\n+    private final ConcurrentMap<String,Log> logs = new ConcurrentHashMap<>();\n \n     protected JULBridge( LogProvider logProvider )\n     {\n@@ -77,8 +76,7 @@ public class JULBridge extends Handler\n         String context = record.getLoggerName();\n         Log log = getLog( ( context != null ) ? context : UNKNOWN_LOGGER_NAME );\n         Logger logger = getLogger( record, log );\n-\n-        Throwable throwable = record.getThrown();\n+Throwable throwable = record.getThrown();\n         if ( throwable == null )\n         {\n             logger.log( message );\n@@ -147,11 +145,12 @@ public class JULBridge extends Handler\n         }\n \n         Object[] params = record.getParameters();\n-        if ( params != null && params.length > 0 )\n+        if ( params != null && params.length> 0 )\n         {\n             message = MessageFormat.format( message, params );\n         }\n-        return message;\n+\n+return message;\n     }\n \n     @Override\n@@ -163,4 +162,4 @@ public class JULBridge extends Handler\n     public void close() throws SecurityException\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
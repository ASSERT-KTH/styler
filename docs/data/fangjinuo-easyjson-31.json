{
    "project_name": "fangjinuo-easyjson",
    "error_id": "31",
    "information": {
        "errors": [
            {
                "line": "40",
                "column": "90",
                "severity": "warning",
                "message": "')' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "    Class<T> type();\n\n    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/31/CustomObjectSerializer.java\nindex 868576c93ef..8484bc49d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/31/CustomObjectSerializer.java\n@@ -37,6 +37,6 @@ public interface CustomObjectSerializer <T> {\n \n     Class<T> type();\n \n-    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n+    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/31/CustomObjectSerializer.java\nindex 868576c93ef..3c2f825adec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/31/CustomObjectSerializer.java\n@@ -33,10 +33,10 @@ import io.advantageous.boon.primitive.CharBuf;\n /**\n  * Created by rick on 1/2/14.\n  */\n-public interface CustomObjectSerializer <T> {\n+public interface CustomObjectSerializer<T> {\n \n     Class<T> type();\n \n-    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n+    void serializeObject(JsonSerializerInternal serializer, T instance, CharBuf builder);\n \n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/31/CustomObjectSerializer.java\nindex 868576c93ef..7de47587fb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/31/CustomObjectSerializer.java\n@@ -33,10 +33,9 @@ import io.advantageous.boon.primitive.CharBuf;\n /**\n  * Created by rick on 1/2/14.\n  */\n-public interface CustomObjectSerializer <T> {\n-\n+public interface CustomObjectSerializer<T> {\n     Class<T> type();\n \n-    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n+    void serializeObject(JsonSerializerInternal serializer, T instance, CharBuf builder);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/31/CustomObjectSerializer.java\nindex 868576c93ef..ce3215733b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/31/CustomObjectSerializer.java\n@@ -4,7 +4,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *  \t\thttp://www.apache.org/licenses/LICENSE-2.0\n+ *          http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -33,10 +33,9 @@ import io.advantageous.boon.primitive.CharBuf;\n /**\n  * Created by rick on 1/2/14.\n  */\n-public interface CustomObjectSerializer <T> {\n \n+public interface CustomObjectSerializer<T> {\n     Class<T> type();\n \n-    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n-\n-}\n+    void serializeObject(JsonSerializerInternal serializer, T instance, CharBuf builder);\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/31/CustomObjectSerializer.java\nindex 868576c93ef..8484bc49d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/31/CustomObjectSerializer.java\n@@ -37,6 +37,6 @@ public interface CustomObjectSerializer <T> {\n \n     Class<T> type();\n \n-    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n+    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder);\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/31/CustomObjectSerializer.java\nindex 868576c93ef..8484bc49d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/31/CustomObjectSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/31/CustomObjectSerializer.java\n@@ -37,6 +37,6 @@ public interface CustomObjectSerializer <T> {\n \n     Class<T> type();\n \n-    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder );\n+    void serializeObject(JsonSerializerInternal serializer,  T instance, CharBuf builder);\n \n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
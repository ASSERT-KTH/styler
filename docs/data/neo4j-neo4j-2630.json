{
    "project_name": "neo4j-neo4j",
    "error_id": "2630",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2630/ByteArrayBitsManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2630/ByteArrayBitsManipulator.java\nindex f30e010b3de..f08eeadfba6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2630/ByteArrayBitsManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2630/ByteArrayBitsManipulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking;\n \n import java.util.Arrays;\n@@ -45,7 +46,7 @@ public class ByteArrayBitsManipulator\n         private final long mask;\n         private final int fbMask;\n \n-        Slot( int bits, int absoluteBitOffset )\n+        Slot(int bits, int absoluteBitOffset)\n         {\n             this.byteOffset = absoluteBitOffset / Byte.SIZE;\n             this.bitOffset = absoluteBitOffset % Byte.SIZE;\n@@ -54,107 +55,103 @@ public class ByteArrayBitsManipulator\n             this.fbMask = 1 << bitOffset;\n         }\n \n-        public long get( ByteArray array, long index )\n+        public long get(ByteArray array, long index)\n         {\n             // Basically two modes: boolean or 5B field, right?\n-            if ( bitCount == 1 )\n+            if (bitCount == 1)\n             {\n-                int field = array.getByte( index, byteOffset ) & 0xFF;\n+                int field = array.getByte(index, byteOffset) & 0xFF;\n                 boolean bitIsSet = (field & fbMask) != 0;\n                 return bitIsSet ? -1 : 0; // the -1 here is a bit weird, but for the time being this is what the rest of the code expects\n-            }\n-            else if ( bitCount == Short.SIZE )\n+            } else if (bitCount == Short.SIZE)\n             {\n-                long raw = array.getShort( index, byteOffset ) & mask;\n+                long raw = array.getShort(index, byteOffset) & mask;\n                 return raw == mask ? -1 : raw;\n-            }\n-            else // we know that this larger field starts at the beginning of a byte\n+            } else // we know that this larger field starts at the beginning of a byte\n             {\n-                long field = array.get5ByteLong( index, byteOffset );\n+                long field = array.get5ByteLong(index, byteOffset);\n                 long raw = field & mask;\n                 return raw == mask ? -1 : raw;\n             }\n         }\n \n-        public void set( ByteArray array, long index, long value )\n+        public void set(ByteArray array, long index, long value)\n         {\n-            if ( value < -1 || value > mask )\n+            if (value < -1 || value > mask)\n             {\n-                throw new IllegalStateException( \"Invalid value \" + value + \", max is \" + mask );\n+                throw new IllegalStateException(\"Invalid value \" + value + \", max is \" + mask);\n             }\n \n-            if ( bitCount == 1 )\n+            if (bitCount == 1)\n             {\n-                int field = array.getByte( index, byteOffset ) & 0xFF;\n+                int field = array.getByte(index, byteOffset) & 0xFF;\n                 int otherBits = field & ~fbMask;\n-                array.setByte( index, byteOffset, (byte) (otherBits | (value << bitOffset)) );\n-            }\n-            else if ( bitCount == Short.SIZE )\n+                array.setByte(index, byteOffset, (byte) (otherBits | (value << bitOffset)));\n+            } else if (bitCount == Short.SIZE)\n             {\n-                array.setShort( index, byteOffset, (short) value );\n-            }\n-            else\n+                array.setShort(index, byteOffset, (short) value);\n+            } else\n             {\n-                long field = array.get5ByteLong( index, byteOffset );\n+                long field = array.get5ByteLong(index, byteOffset);\n                 long otherBits = field & ~mask;\n-                array.set5ByteLong( index, byteOffset, value | otherBits );\n+                array.set5ByteLong(index, byteOffset, value | otherBits);\n             }\n         }\n \n         @Override\n         public String toString()\n         {\n-            return getClass().getSimpleName() + \"[\" + Bits.numbersToBitString( new long[] {mask << bitOffset} ) + \"]\";\n+            return getClass().getSimpleName() + \"[\" + Bits.numbersToBitString(new long[] {mask << bitOffset}) + \"]\";\n         }\n     }\n \n     private final Slot[] slots;\n \n-    public ByteArrayBitsManipulator( int... slotsAndTheirBitCounts )\n+    public ByteArrayBitsManipulator(int... slotsAndTheirBitCounts)\n     {\n-        slots = intoSlots( slotsAndTheirBitCounts );\n+        slots = intoSlots(slotsAndTheirBitCounts);\n     }\n \n-    private Slot[] intoSlots( int[] slotsAndTheirSizes )\n+    private Slot[] intoSlots(int[] slotsAndTheirSizes)\n     {\n         Slot[] slots = new Slot[slotsAndTheirSizes.length];\n         int bitCursor = 0;\n-        for ( int i = 0; i < slotsAndTheirSizes.length; i++ )\n+        for (int i = 0; i < slotsAndTheirSizes.length; i++)\n         {\n             int bits = slotsAndTheirSizes[i];\n-            if ( bits > 1 && bitCursor % Byte.SIZE != 0 )\n+            if (bits > 1 && bitCursor % Byte.SIZE != 0)\n             {\n-                throw new IllegalArgumentException( \"Larger slots, i.e. size > 1 needs to be placed at the beginning of a byte\" );\n+                throw new IllegalArgumentException(\"Larger slots, i.e. size > 1 needs to be placed at the beginning of a byte\");\n             }\n-            if ( bits > MAX_SLOT_BITS )\n+            if (bits > MAX_SLOT_BITS)\n             {\n-                throw new IllegalArgumentException( \"Too large slot \" + bits + \", biggest allowed \" + MAX_SLOT_BITS );\n+                throw new IllegalArgumentException(\"Too large slot \" + bits + \", biggest allowed \" + MAX_SLOT_BITS);\n             }\n-            slots[i] = new Slot( bits, bitCursor );\n+            slots[i] = new Slot(bits, bitCursor);\n             bitCursor += bits;\n         }\n-        if ( bitCursor > MAX_BITS )\n+        if (bitCursor > MAX_BITS)\n         {\n-            throw new IllegalArgumentException( \"Max number of bits is \" + MAX_BITS );\n+            throw new IllegalArgumentException(\"Max number of bits is \" + MAX_BITS);\n         }\n         return slots;\n     }\n \n-    public void set( ByteArray array, long index, int slotIndex, long value )\n+    public void set(ByteArray array, long index, int slotIndex, long value)\n     {\n-        slot( slotIndex ).set( array, index, value );\n+        slot(slotIndex).set(array, index, value);\n     }\n \n-    public long get( ByteArray array, long index, int slotIndex )\n+    public long get(ByteArray array, long index, int slotIndex)\n     {\n-        return slot( slotIndex ).get( array, index );\n+        return slot(slotIndex).get(array, index);\n     }\n \n-    private Slot slot( int slotIndex )\n+    private Slot slot(int slotIndex)\n     {\n-        if ( slotIndex < 0 || slotIndex >= slots.length )\n+        if (slotIndex < 0 || slotIndex >= slots.length)\n         {\n-            throw new IllegalArgumentException( \"Invalid slot \" + slotIndex + \", I've got \" + this );\n+            throw new IllegalArgumentException(\"Invalid slot \" + slotIndex + \", I've got \" + this);\n         }\n         return slots[slotIndex];\n     }\n@@ -162,6 +159,6 @@ public class ByteArrayBitsManipulator\n     @Override\n     public String toString()\n     {\n-        return Arrays.toString( slots );\n+        return Arrays.toString(slots);\n     }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
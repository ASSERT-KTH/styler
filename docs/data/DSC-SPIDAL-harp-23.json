{
    "project_name": "DSC-SPIDAL-harp",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "3",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright 2013-2017 Indiana University\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/23/IntArrMax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/intellij/23/IntArrMax.java\nindex a2631d65aaa..8937536b609 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/23/IntArrMax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/intellij/23/IntArrMax.java\n@@ -1,6 +1,6 @@\n /*\n  * Copyright 2013-2017 Indiana University\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n@@ -21,23 +21,23 @@ import edu.iu.harp.partition.PartitionStatus;\n import edu.iu.harp.resource.IntArray;\n \n public class IntArrMax\n-  extends PartitionCombiner<IntArray> {\n+    extends PartitionCombiner<IntArray> {\n \n-  @Override\n-  public PartitionStatus combine(IntArray curPar,\n-    IntArray newPar) {\n-    int[] longs1 = curPar.get();\n-    int size1 = curPar.size();\n-    int[] longs2 = newPar.get();\n-    int size2 = newPar.size();\n-    if (size1 != size2) {\n-      return PartitionStatus.COMBINE_FAILED;\n-    }\n-    for (int i = 0; i < size1; i++) {\n-      if (longs1[i] < longs2[i]) {\n-        longs1[i] = longs2[i];\n-      }\n+    @Override\n+    public PartitionStatus combine(IntArray curPar,\n+                                   IntArray newPar) {\n+        int[] longs1 = curPar.get();\n+        int size1 = curPar.size();\n+        int[] longs2 = newPar.get();\n+        int size2 = newPar.size();\n+        if (size1 != size2) {\n+            return PartitionStatus.COMBINE_FAILED;\n+        }\n+        for (int i = 0; i < size1; i++) {\n+            if (longs1[i] < longs2[i]) {\n+                longs1[i] = longs2[i];\n+            }\n+        }\n+        return PartitionStatus.COMBINED;\n     }\n-    return PartitionStatus.COMBINED;\n-  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/23/IntArrMax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/naturalize/23/IntArrMax.java\nindex a2631d65aaa..6377a18e690 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/23/IntArrMax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/naturalize/23/IntArrMax.java\n@@ -40,4 +40,4 @@ public class IntArrMax\n     }\n     return PartitionStatus.COMBINED;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/23/IntArrMax.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/codebuff/23/IntArrMax.java\nindex a2631d65aaa..dbf95378a63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/23/IntArrMax.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/codebuff/23/IntArrMax.java\n@@ -20,12 +20,13 @@ import edu.iu.harp.partition.PartitionCombiner;\n import edu.iu.harp.partition.PartitionStatus;\n import edu.iu.harp.resource.IntArray;\n \n-public class IntArrMax\n-  extends PartitionCombiner<IntArray> {\n+\n+public class IntArrMax extends\n+  PartitionCombiner<IntArray> {\n \n   @Override\n   public PartitionStatus combine(IntArray curPar,\n-    IntArray newPar) {\n+                                 IntArray newPar) {\n     int[] longs1 = curPar.get();\n     int size1 = curPar.size();\n     int[] longs2 = newPar.get();\n@@ -33,6 +34,7 @@ public class IntArrMax\n     if (size1 != size2) {\n       return PartitionStatus.COMBINE_FAILED;\n     }\n+\n     for (int i = 0; i < size1; i++) {\n       if (longs1[i] < longs2[i]) {\n         longs1[i] = longs2[i];\n@@ -40,4 +42,4 @@ public class IntArrMax\n     }\n     return PartitionStatus.COMBINED;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
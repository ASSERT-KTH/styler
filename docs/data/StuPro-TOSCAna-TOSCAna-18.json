{
    "project_name": "StuPro-TOSCAna-TOSCAna",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "83",
                "column": "5",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    /**\n     @param ipAddress {@link #ipAddress}\n     */\n    public static PublicEndpointCapabilityBuilder builder(String ipAddress) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/18/PublicEndpointCapability.java\nindex 624af521386..f13f64cb995 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/18/PublicEndpointCapability.java\n@@ -79,7 +79,6 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "85",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/18/PublicEndpointCapability.java\nindex 624af521386..5c77f5f79d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/18/PublicEndpointCapability.java\n@@ -15,36 +15,36 @@ import lombok.Data;\n import lombok.Singular;\n \n /**\n- Represents a public endpoint which is accessible to the general internet (and its public IP\n- address ranges).\n- <p>\n- This public endpoint capability also can be used to create a floating (IP) address that the underlying\n- network assigns from a pool allocated from the application\u2019s underlying public network. This floating\n- address is managed by the underlying network such that can be routed an application\u2019s private address\n- and remains reliable to internet clients.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 154)\n- <p>\n- Note: If the networkName set to the name of a network (or sub-network) that is not public\n- (i.e., has non-public IP address ranges assigned to it), then TOSCA orchestrators SHALL treat this as an error.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n+ * Represents a public endpoint which is accessible to the general internet (and its public IP\n+ * address ranges).\n+ * <p>\n+ * This public endpoint capability also can be used to create a floating (IP) address that the underlying\n+ * network assigns from a pool allocated from the application\u2019s underlying public network. This floating\n+ * address is managed by the underlying network such that can be routed an application\u2019s private address\n+ * and remains reliable to internet clients.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 154)\n+ * <p>\n+ * Note: If the networkName set to the name of a network (or sub-network) that is not public\n+ * (i.e., has non-public IP address ranges assigned to it), then TOSCA orchestrators SHALL treat this as an error.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n  */\n @Data\n public class PublicEndpointCapability extends EndpointCapability {\n \n     /**\n-     indicates that the public address should be allocated from a pool of floating IPs\n-     that are associated with the network\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n+     * indicates that the public address should be allocated from a pool of floating IPs\n+     * that are associated with the network\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n      */\n     private final boolean floating;\n \n     /**\n-     The optional name to register with DNS (experimental)\n-     <p>\n-     Note: If a dns_name is set, TOSCA orchestrators SHALL attempt to register the name\n-     in the (local) DNS registry for the Cloud Provider.\n-     <p>\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n+     * The optional name to register with DNS (experimental)\n+     * <p>\n+     * Note: If a dns_name is set, TOSCA orchestrators SHALL attempt to register the name\n+     * in the (local) DNS registry for the Cloud Provider.\n+     * <p>\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n      */\n     private final String dnsName;\n \n@@ -63,17 +63,19 @@ public class PublicEndpointCapability extends EndpointCapability {\n                                        @Singular Set<Class<? extends RootNode>> validSourceTypes,\n                                        Range occurence,\n                                        String description) {\n-        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"),\n+        super(protocol, port, secure, urlPath, portName,\n+            (networkName != null ? networkName : \"PUBLIC\"),\n             initiator, ports, ipAddress, validSourceTypes, occurence, description);\n         if (networkName.equalsIgnoreCase(\"private\")) {\n-            throw new IllegalArgumentException(\"Constraint violation: network name must not equal 'private'\");\n+            throw new IllegalArgumentException(\n+                \"Constraint violation: network name must not equal 'private'\");\n         }\n         this.floating = floating;\n         this.dnsName = dnsName;\n     }\n \n     /**\n-     @return {@link #dnsName}\n+     * @return {@link #dnsName}\n      */\n     public Optional<String> getDnsName() {\n         return Optional.ofNullable(dnsName);\n@@ -81,7 +83,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n \n \n     /**\n-     @param ipAddress {@link #ipAddress}\n+     * @param ipAddress {@link #ipAddress}\n      */\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n         return new PublicEndpointCapabilityBuilder().ipAddress(ipAddress);\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/18/PublicEndpointCapability.java\nindex 624af521386..34605a8fc9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/18/PublicEndpointCapability.java\n@@ -49,11 +49,9 @@ public class PublicEndpointCapability extends EndpointCapability {\n     private final String dnsName;\n \n     @Builder\n-    protected PublicEndpointCapability(boolean floating,\n-                                       String dnsName,\n+    protected PublicEndpointCapability(boolean floating, String dnsName,\n                                        NetworkProtocol protocol,\n-                                       Port port,\n-                                       boolean secure,\n+                                       Port port, boolean secure,\n                                        URL urlPath,\n                                        String portName,\n                                        String networkName,\n@@ -63,8 +61,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n                                        @Singular Set<Class<? extends RootNode>> validSourceTypes,\n                                        Range occurence,\n                                        String description) {\n-        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"),\n-            initiator, ports, ipAddress, validSourceTypes, occurence, description);\n+    super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"), initiator, ports, ipAddress, validSourceTypes, occurence, description);\n         if (networkName.equalsIgnoreCase(\"private\")) {\n             throw new IllegalArgumentException(\"Constraint violation: network name must not equal 'private'\");\n         }\n@@ -79,8 +76,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n-    /**\n+/**\n      @param ipAddress {@link #ipAddress}\n      */\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n@@ -89,4 +85,4 @@ public class PublicEndpointCapability extends EndpointCapability {\n \n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/18/PublicEndpointCapability.java\nindex 624af521386..d442e4cdf6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/18/PublicEndpointCapability.java\n@@ -3,13 +3,11 @@ package org.opentosca.toscana.model.capability;\n import java.net.URL;\n import java.util.Optional;\n import java.util.Set;\n-\n import org.opentosca.toscana.model.datatype.NetworkProtocol;\n import org.opentosca.toscana.model.datatype.Port;\n import org.opentosca.toscana.model.datatype.PortSpec;\n import org.opentosca.toscana.model.datatype.Range;\n import org.opentosca.toscana.model.node.RootNode;\n-\n import lombok.Builder;\n import lombok.Data;\n import lombok.Singular;\n@@ -28,6 +26,7 @@ import lombok.Singular;\n  (i.e., has non-public IP address ranges assigned to it), then TOSCA orchestrators SHALL treat this as an error.\n  (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n  */\n+\n @Data\n public class PublicEndpointCapability extends EndpointCapability {\n \n@@ -36,6 +35,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n      that are associated with the network\n      (TOSCA Simple Profile in YAML Version 1.1, p. 155)\n      */\n+\n     private final boolean floating;\n \n     /**\n@@ -49,22 +49,22 @@ public class PublicEndpointCapability extends EndpointCapability {\n     private final String dnsName;\n \n     @Builder\n-    protected PublicEndpointCapability(boolean floating,\n-                                       String dnsName,\n-                                       NetworkProtocol protocol,\n-                                       Port port,\n-                                       boolean secure,\n-                                       URL urlPath,\n-                                       String portName,\n-                                       String networkName,\n-                                       Initiator initiator,\n-                                       @Singular Set<PortSpec> ports,\n-                                       String ipAddress,\n-                                       @Singular Set<Class<? extends RootNode>> validSourceTypes,\n-                                       Range occurence,\n-                                       String description) {\n-        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"),\n-            initiator, ports, ipAddress, validSourceTypes, occurence, description);\n+    protected PublicEndpointCapability(\n+        boolean floating,\n+        String dnsName,\n+        NetworkProtocol protocol,\n+        Port port,\n+        boolean secure,\n+        URL urlPath,\n+        String portName,\n+        String networkName,\n+        Initiator initiator,\n+        @Singular Set<PortSpec> ports,\n+        String ipAddress,\n+        @Singular Set<Class<? extends RootNode>> validSourceTypes,\n+        Range occurence, String description\n+    ) {\n+        super(protocol, port, secure, urlPath, portName, (networkName != null ? networkName : \"PUBLIC\"), initiator, ports, ipAddress, validSourceTypes, occurence, description);\n         if (networkName.equalsIgnoreCase(\"private\")) {\n             throw new IllegalArgumentException(\"Constraint violation: network name must not equal 'private'\");\n         }\n@@ -75,6 +75,7 @@ public class PublicEndpointCapability extends EndpointCapability {\n     /**\n      @return {@link #dnsName}\n      */\n+\n     public Optional<String> getDnsName() {\n         return Optional.ofNullable(dnsName);\n     }\n@@ -83,10 +84,14 @@ public class PublicEndpointCapability extends EndpointCapability {\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n+\n+\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n-        return new PublicEndpointCapabilityBuilder().ipAddress(ipAddress);\n+        return new PublicEndpointCapabilityBuilder()\n+            .ipAddress(ipAddress);\n     }\n \n+\n     public static class PublicEndpointCapabilityBuilder extends EndpointCapabilityBuilder {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/18/PublicEndpointCapability.java\nindex 624af521386..ffcbcfc71f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/18/PublicEndpointCapability.java\n@@ -79,10 +79,10 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n+\n     public static PublicEndpointCapabilityBuilder builder(String ipAddress) {\n         return new PublicEndpointCapabilityBuilder().ipAddress(ipAddress);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/18/PublicEndpointCapability.java\nindex 624af521386..f13f64cb995 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/18/PublicEndpointCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/18/PublicEndpointCapability.java\n@@ -79,7 +79,6 @@ public class PublicEndpointCapability extends EndpointCapability {\n         return Optional.ofNullable(dnsName);\n     }\n \n-\n     /**\n      @param ipAddress {@link #ipAddress}\n      */\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
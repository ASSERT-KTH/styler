{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2992",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2992/ConfigValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2992/ConfigValue.java\nindex d69e903babc..4f79cb57f5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2992/ConfigValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2992/ConfigValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import java.time.Duration;\n@@ -28,109 +29,109 @@ import javax.annotation.Nonnull;\n  */\n public class ConfigValue\n {\n-    private final String name;\n-    private final Optional<String> description;\n-    private final Optional<String> documentedDefaultValue;\n-    private final Optional<Object> value;\n-    private final String valueDescription;\n-    private final boolean internal;\n-    private final boolean secret;\n-    private final boolean dynamic;\n-    private final boolean deprecated;\n-    private final Optional<String> replacement;\n-\n-    public ConfigValue( @Nonnull String name, @Nonnull Optional<String> description,\n-            @Nonnull Optional<String> documentedDefaultValue, @Nonnull Optional<Object> value,\n-            @Nonnull String valueDescription, boolean internal, boolean dynamic, boolean deprecated,\n-            @Nonnull Optional<String> replacement, boolean secret )\n-    {\n-        this.name = name;\n-        this.description = description;\n-        this.documentedDefaultValue = documentedDefaultValue;\n-        this.value = value;\n-        this.valueDescription = valueDescription;\n-        this.internal = internal;\n-        this.secret = secret;\n-        this.dynamic = dynamic;\n-        this.deprecated = deprecated;\n-        this.replacement = replacement;\n-    }\n-\n-    @Nonnull\n-    public String name()\n-    {\n-        return name;\n-    }\n-\n-    @Nonnull\n-    public Optional<String> description()\n-    {\n-        return description;\n-    }\n-\n-    @Nonnull\n-    public Optional<Object> value()\n-    {\n-        return value;\n-    }\n-\n-    @Nonnull\n-    public Optional<String> valueAsString()\n-    {\n-        return this.secret() ? Optional.of( Secret.OBSFUCATED ) : value.map( ConfigValue::valueToString );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return valueAsString().orElse( \"null\" );\n-    }\n-\n-    public boolean deprecated()\n-    {\n-        return deprecated;\n-    }\n-\n-    @Nonnull\n-    public Optional<String> replacement()\n-    {\n-        return replacement;\n-    }\n-\n-    public boolean internal()\n-    {\n-        return internal;\n-    }\n-\n-    public boolean secret()\n-    {\n-        return secret;\n-    }\n-\n-    public boolean dynamic()\n-    {\n-        return dynamic;\n-    }\n-\n-    @Nonnull\n-    public Optional<String> documentedDefaultValue()\n-    {\n-        return documentedDefaultValue;\n-    }\n-\n-    @Nonnull\n-    public String valueDescription()\n-    {\n-        return valueDescription;\n-    }\n-\n-    static String valueToString( Object v )\n+  private final String name;\n+  private final Optional<String> description;\n+  private final Optional<String> documentedDefaultValue;\n+  private final Optional<Object> value;\n+  private final String valueDescription;\n+  private final boolean internal;\n+  private final boolean secret;\n+  private final boolean dynamic;\n+  private final boolean deprecated;\n+  private final Optional<String> replacement;\n+\n+  public ConfigValue(@Nonnull String name, @Nonnull Optional<String> description,\n+                     @Nonnull Optional<String> documentedDefaultValue, @Nonnull Optional<Object> value,\n+                     @Nonnull String valueDescription, boolean internal, boolean dynamic, boolean deprecated,\n+                     @Nonnull Optional<String> replacement, boolean secret)\n+  {\n+    this.name = name;\n+    this.description = description;\n+    this.documentedDefaultValue = documentedDefaultValue;\n+    this.value = value;\n+    this.valueDescription = valueDescription;\n+    this.internal = internal;\n+    this.secret = secret;\n+    this.dynamic = dynamic;\n+    this.deprecated = deprecated;\n+    this.replacement = replacement;\n+  }\n+\n+  @Nonnull\n+  public String name()\n+  {\n+    return name;\n+  }\n+\n+  @Nonnull\n+  public Optional<String> description()\n+  {\n+    return description;\n+  }\n+\n+  @Nonnull\n+  public Optional<Object> value()\n+  {\n+    return value;\n+  }\n+\n+  @Nonnull\n+  public Optional<String> valueAsString()\n+  {\n+    return this.secret() ? Optional.of(Secret.OBSFUCATED) : value.map(ConfigValue::valueToString);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return valueAsString().orElse(\"null\");\n+  }\n+\n+  public boolean deprecated()\n+  {\n+    return deprecated;\n+  }\n+\n+  @Nonnull\n+  public Optional<String> replacement()\n+  {\n+    return replacement;\n+  }\n+\n+  public boolean internal()\n+  {\n+    return internal;\n+  }\n+\n+  public boolean secret()\n+  {\n+    return secret;\n+  }\n+\n+  public boolean dynamic()\n+  {\n+    return dynamic;\n+  }\n+\n+  @Nonnull\n+  public Optional<String> documentedDefaultValue()\n+  {\n+    return documentedDefaultValue;\n+  }\n+\n+  @Nonnull\n+  public String valueDescription()\n+  {\n+    return valueDescription;\n+  }\n+\n+  static String valueToString(Object v)\n+  {\n+    if (v instanceof Duration)\n     {\n-        if ( v instanceof Duration )\n-        {\n-            Duration d = (Duration) v;\n-            return String.format( \"%dms\", d.toMillis() );\n-        }\n-        return String.valueOf( v );\n+      Duration d = (Duration) v;\n+      return String.format(\"%dms\", d.toMillis());\n     }\n+    return String.valueOf(v);\n+  }\n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2992/ConfigValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2992/ConfigValue.java\nindex d69e903babc..12bbe4d22d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2992/ConfigValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2992/ConfigValue.java\n@@ -131,6 +131,7 @@ public class ConfigValue\n             Duration d = (Duration) v;\n             return String.format( \"%dms\", d.toMillis() );\n         }\n-        return String.valueOf( v );\n+\n+return String.valueOf( v );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "66",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    private String summary;\n    private Logger logger;\n\tprivate IFindBugsEngine findBugs;\n    private SwingGUIBugReporter reporter;\n    private HashMap<String, DefaultTreeModel> treeModelMap;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "73",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/18/AnalysisRun.java\nindex 39673ff628f..79297af646f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/18/AnalysisRun.java\n@@ -63,7 +63,7 @@ public class AnalysisRun {\n     private FindBugsFrame frame;\n     private String summary;\n     private Logger logger;\n-\tprivate IFindBugsEngine findBugs;\n+private IFindBugsEngine findBugs;\n     private SwingGUIBugReporter reporter;\n     private HashMap<String, DefaultTreeModel> treeModelMap;\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/18/AnalysisRun.java\nindex 39673ff628f..810d2596972 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/18/AnalysisRun.java\n@@ -51,7 +51,6 @@ import edu.umd.cs.findbugs.log.ConsoleLogger;\n import edu.umd.cs.findbugs.log.Logger;\n \n \n-\n /**\n  * Representation of a run of the FindBugs analysis on a Project.\n  * This class has convenient methods which can be used to extract\n@@ -63,23 +62,23 @@ public class AnalysisRun {\n     private FindBugsFrame frame;\n     private String summary;\n     private Logger logger;\n-\tprivate IFindBugsEngine findBugs;\n+    private IFindBugsEngine findBugs;\n     private SwingGUIBugReporter reporter;\n     private HashMap<String, DefaultTreeModel> treeModelMap;\n \n     /**\n      * Creates a new instance of AnalysisRun.\n      */\n-\tpublic AnalysisRun(Project project, FindBugsFrame frame) {\n+    public AnalysisRun(Project project, FindBugsFrame frame) {\n         this.frame = frame;\n         this.logger = frame.getLogger();\n         this.reporter = new SwingGUIBugReporter(this);\n-\t\tthis.reporter.setPriorityThreshold(Detector.EXP_PRIORITY);\n+        this.reporter.setPriorityThreshold(Detector.EXP_PRIORITY);\n \n         // Create IFindBugsEngine\n         FindBugs2 engine = new FindBugs2();\n         engine.setBugReporter(reporter);\n-\t\tengine.setProject(project);\n+        engine.setProject(project);\n         engine.setDetectorFactoryCollection(DetectorFactoryCollection.instance());\n \n         this.findBugs = engine;\n@@ -89,24 +88,24 @@ public class AnalysisRun {\n     /**\n      * Get the FindBugsFrame which created this analysis run.\n      *\n-\t * @return the FindBugsFrame\n+     * @return the FindBugsFrame\n      */\n     public FindBugsFrame getFrame() {\n         return frame;\n-\t}\n+    }\n \n     /**\n      * Run the analysis.\n      * This should be done in a separate thread (not the GUI event thread).\n-\t * The progress callback can be used to update the user interface to\n+     * The progress callback can be used to update the user interface to\n      * reflect the progress of the analysis.  The GUI may cancel the analysis\n      * by interrupting the analysis thread, in which case InterruptedException\n      * will be thrown by this method.\n-\t *\n+     *\n      * @param progressCallback the progress callback\n      * @throws IOException          if an I/O error occurs during the analysis\n      * @throws InterruptedException if the analysis thread is interrupted\n-\t */\n+     */\n     public void execute(FindBugsProgress progressCallback) throws IOException, InterruptedException {\n         findBugs.setProgressCallback(progressCallback);\n \n@@ -122,24 +121,24 @@ public class AnalysisRun {\n         if (!SystemProperties.getBoolean(\"findbugs.noSummary\")) {\n             // Get the summary!\n             createSummary(reporter.getProjectStats());\n-\t\t}\n+        }\n \n     }\n \n     private static final String MISSING_SUMMARY_MESSAGE =\n-            \"<html><head><title>Could not format summary</title></head>\" +\n+        \"<html><head><title>Could not format summary</title></head>\" +\n             \"<body><h1>Could not format summary</h1>\" +\n-\t\t\t\"<p> Please report this failure to <a href=\\\"findbugs-discuss@cs.umd.edu\\\">\" +\n+            \"<p> Please report this failure to <a href=\\\"findbugs-discuss@cs.umd.edu\\\">\" +\n             \"findbugs-discuss@cs.umd.edu</a>.</body></html>\";\n \n     private void createSummary(ProjectStats stats) throws IOException {\n         StringWriter html = new StringWriter();\n         try {\n-\t\t\tstats.transformSummaryToHTML(html);\n+            stats.transformSummaryToHTML(html);\n             summary = html.toString();\n         } catch (Exception e) {\n-            logger.logMessage(ConsoleLogger.WARNING, MessageFormat.format(L10N.getLocalString(\"msg.failedtotransform_txt\", \"Failed to transform summary: {0}\"), new Object[]{e.toString()}));\n-\t\t\tsummary = MISSING_SUMMARY_MESSAGE;\n+            logger.logMessage(ConsoleLogger.WARNING, MessageFormat.format(L10N.getLocalString(\"msg.failedtotransform_txt\", \"Failed to transform summary: {0}\"), new Object[] {e.toString()}));\n+            summary = MISSING_SUMMARY_MESSAGE;\n         }\n     }\n \n@@ -148,7 +147,7 @@ public class AnalysisRun {\n     /**\n      * Load bugs from a file.\n      */\n-\tpublic void loadBugsFromFile(File file) throws IOException, org.dom4j.DocumentException {\n+    public void loadBugsFromFile(File file) throws IOException, org.dom4j.DocumentException {\n         reporter.getBugCollection().readXML(file);\n \n         // Update summary stats\n@@ -158,11 +157,11 @@ public class AnalysisRun {\n     /**\n      * Load bugs from an InputStream.\n      *\n-\t * @param in the InputStream\n+     * @param in the InputStream\n      * @throws IOException\n      * @throws DocumentException\n      */\n-\tpublic void loadBugsFromInputStream(InputStream in) throws IOException, DocumentException {\n+    public void loadBugsFromInputStream(InputStream in) throws IOException, DocumentException {\n         reporter.getBugCollection().readXML(in);\n \n         // Update summary stats\n@@ -172,46 +171,46 @@ public class AnalysisRun {\n     /**\n      * Save bugs to a file.\n      */\n-\tpublic void saveBugsToFile(File file) throws IOException {\n+    public void saveBugsToFile(File file) throws IOException {\n         reporter.getBugCollection().writeXML(file);\n     }\n \n     /**\n      * Report any errors that may have occurred during analysis.\n      */\n-\tpublic void reportAnalysisErrors() {\n+    public void reportAnalysisErrors() {\n         if (reporter.errorsOccurred()) {\n             reporter.getErrorDialog().setSize(750, 520);\n             reporter.getErrorDialog().setLocationRelativeTo(null); // center the dialog\n-\t\t\treporter.getErrorDialog().setVisible(true);\n+            reporter.getErrorDialog().setVisible(true);\n         }\n     }\n \n     /**\n      * Return the collection of BugInstances.\n      */\n-\tpublic java.util.Collection<BugInstance> getBugInstances() {\n+    public java.util.Collection<BugInstance> getBugInstances() {\n         return reporter.getBugCollection().getCollection();\n     }\n \n     /**\n      * Set the tree model to be used in the BugTree.\n      *\n-\t * @param groupByOrder the grouping order that the tree model will conform to\n+     * @param groupByOrder the grouping order that the tree model will conform to\n      * @param treeModel    the tree model\n      */\n     public void setTreeModel(String groupByOrder, DefaultTreeModel treeModel) {\n-\t\ttreeModelMap.put(groupByOrder, treeModel);\n+        treeModelMap.put(groupByOrder, treeModel);\n     }\n \n     /**\n      * Get the tree model to be used in the BugTree.\n      *\n-\t * @param groupByOrder the grouping order that the tree model conforms to\n+     * @param groupByOrder the grouping order that the tree model conforms to\n      * @return the tree model\n      */\n     public DefaultTreeModel getTreeModel(String groupByOrder) {\n-\t\treturn treeModelMap.get(groupByOrder);\n+        return treeModelMap.get(groupByOrder);\n     }\n \n     public String getSummary() {\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/18/AnalysisRun.java\nindex 39673ff628f..b7e92532ea7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/18/AnalysisRun.java\n@@ -31,11 +31,8 @@ import java.io.InputStream;\n import java.io.StringWriter;\n import java.text.MessageFormat;\n import java.util.HashMap;\n-\n import javax.swing.tree.DefaultTreeModel;\n-\n import org.dom4j.DocumentException;\n-\n import edu.umd.cs.findbugs.BugInstance;\n import edu.umd.cs.findbugs.Detector;\n import edu.umd.cs.findbugs.DetectorFactoryCollection;\n@@ -59,29 +56,36 @@ import edu.umd.cs.findbugs.log.Logger;\n  *\n  * @author David Hovemeyer\n  */\n+\n public class AnalysisRun {\n     private FindBugsFrame frame;\n+\n     private String summary;\n+\n     private Logger logger;\n-\tprivate IFindBugsEngine findBugs;\n+\n+    private IFindBugsEngine findBugs;\n+\n     private SwingGUIBugReporter reporter;\n+\n     private HashMap<String, DefaultTreeModel> treeModelMap;\n \n     /**\n      * Creates a new instance of AnalysisRun.\n      */\n-\tpublic AnalysisRun(Project project, FindBugsFrame frame) {\n+\n+\n+    public AnalysisRun(Project project, FindBugsFrame frame) {\n         this.frame = frame;\n         this.logger = frame.getLogger();\n         this.reporter = new SwingGUIBugReporter(this);\n-\t\tthis.reporter.setPriorityThreshold(Detector.EXP_PRIORITY);\n+        this.reporter.setPriorityThreshold(Detector.EXP_PRIORITY);\n \n         // Create IFindBugsEngine\n         FindBugs2 engine = new FindBugs2();\n         engine.setBugReporter(reporter);\n-\t\tengine.setProject(project);\n+        engine.setProject(project);\n         engine.setDetectorFactoryCollection(DetectorFactoryCollection.instance());\n-\n         this.findBugs = engine;\n         this.treeModelMap = new HashMap<String, DefaultTreeModel>();\n     }\n@@ -89,24 +93,27 @@ public class AnalysisRun {\n     /**\n      * Get the FindBugsFrame which created this analysis run.\n      *\n-\t * @return the FindBugsFrame\n+     * @return the FindBugsFrame\n      */\n+\n+\n     public FindBugsFrame getFrame() {\n         return frame;\n-\t}\n+    }\n \n     /**\n      * Run the analysis.\n      * This should be done in a separate thread (not the GUI event thread).\n-\t * The progress callback can be used to update the user interface to\n+     * The progress callback can be used to update the user interface to\n      * reflect the progress of the analysis.  The GUI may cancel the analysis\n      * by interrupting the analysis thread, in which case InterruptedException\n      * will be thrown by this method.\n-\t *\n+     *\n      * @param progressCallback the progress callback\n      * @throws IOException          if an I/O error occurs during the analysis\n      * @throws InterruptedException if the analysis thread is interrupted\n-\t */\n+     */\n+\n     public void execute(FindBugsProgress progressCallback) throws IOException, InterruptedException {\n         findBugs.setProgressCallback(progressCallback);\n \n@@ -118,37 +125,35 @@ public class AnalysisRun {\n \n         // Run the analysis!\n         findBugs.execute();\n-\n         if (!SystemProperties.getBoolean(\"findbugs.noSummary\")) {\n             // Get the summary!\n             createSummary(reporter.getProjectStats());\n-\t\t}\n-\n+        }\n     }\n \n-    private static final String MISSING_SUMMARY_MESSAGE =\n-            \"<html><head><title>Could not format summary</title></head>\" +\n-            \"<body><h1>Could not format summary</h1>\" +\n-\t\t\t\"<p> Please report this failure to <a href=\\\"findbugs-discuss@cs.umd.edu\\\">\" +\n-            \"findbugs-discuss@cs.umd.edu</a>.</body></html>\";\n+\n+    private static final String MISSING_SUMMARY_MESSAGE = \"<html><head><title>Could not format summary</title></head>\" + \"<body><h1>Could not format summary</h1>\" + \"<p> Please report this failure to <a href=\\\"findbugs-discuss@cs.umd.edu\\\">\" + \"findbugs-discuss@cs.umd.edu</a>.</body></html>\";\n \n     private void createSummary(ProjectStats stats) throws IOException {\n         StringWriter html = new StringWriter();\n         try {\n-\t\t\tstats.transformSummaryToHTML(html);\n+            stats.transformSummaryToHTML(html);\n             summary = html.toString();\n         } catch (Exception e) {\n-            logger.logMessage(ConsoleLogger.WARNING, MessageFormat.format(L10N.getLocalString(\"msg.failedtotransform_txt\", \"Failed to transform summary: {0}\"), new Object[]{e.toString()}));\n-\t\t\tsummary = MISSING_SUMMARY_MESSAGE;\n+            logger.logMessage(ConsoleLogger.WARNING,\n+                              MessageFormat.format(L10N.getLocalString(\"msg.failedtotransform_txt\", \"Failed to transform summary: {0}\"), new Object[] { e.toString() }));\n+            summary = MISSING_SUMMARY_MESSAGE;\n         }\n     }\n \n+\n     private static final boolean CREATE_SUMMARY = !SystemProperties.getBoolean(\"findbugs.noSummary\");\n \n     /**\n      * Load bugs from a file.\n      */\n-\tpublic void loadBugsFromFile(File file) throws IOException, org.dom4j.DocumentException {\n+\n+    public void loadBugsFromFile(File file) throws IOException, org.dom4j.DocumentException {\n         reporter.getBugCollection().readXML(file);\n \n         // Update summary stats\n@@ -158,11 +163,12 @@ public class AnalysisRun {\n     /**\n      * Load bugs from an InputStream.\n      *\n-\t * @param in the InputStream\n+     * @param in the InputStream\n      * @throws IOException\n      * @throws DocumentException\n      */\n-\tpublic void loadBugsFromInputStream(InputStream in) throws IOException, DocumentException {\n+\n+    public void loadBugsFromInputStream(InputStream in) throws IOException, DocumentException {\n         reporter.getBugCollection().readXML(in);\n \n         // Update summary stats\n@@ -172,49 +178,54 @@ public class AnalysisRun {\n     /**\n      * Save bugs to a file.\n      */\n-\tpublic void saveBugsToFile(File file) throws IOException {\n+\n+    public void saveBugsToFile(File file) throws IOException {\n         reporter.getBugCollection().writeXML(file);\n     }\n \n     /**\n      * Report any errors that may have occurred during analysis.\n      */\n-\tpublic void reportAnalysisErrors() {\n+\n+    public void reportAnalysisErrors() {\n         if (reporter.errorsOccurred()) {\n             reporter.getErrorDialog().setSize(750, 520);\n             reporter.getErrorDialog().setLocationRelativeTo(null); // center the dialog\n-\t\t\treporter.getErrorDialog().setVisible(true);\n+            reporter.getErrorDialog().setVisible(true);\n         }\n     }\n \n     /**\n      * Return the collection of BugInstances.\n      */\n-\tpublic java.util.Collection<BugInstance> getBugInstances() {\n+\n+    public java.util.Collection<BugInstance> getBugInstances() {\n         return reporter.getBugCollection().getCollection();\n     }\n \n     /**\n      * Set the tree model to be used in the BugTree.\n      *\n-\t * @param groupByOrder the grouping order that the tree model will conform to\n+     * @param groupByOrder the grouping order that the tree model will conform to\n      * @param treeModel    the tree model\n      */\n+\n     public void setTreeModel(String groupByOrder, DefaultTreeModel treeModel) {\n-\t\ttreeModelMap.put(groupByOrder, treeModel);\n+        treeModelMap.put(groupByOrder, treeModel);\n     }\n \n     /**\n      * Get the tree model to be used in the BugTree.\n      *\n-\t * @param groupByOrder the grouping order that the tree model conforms to\n+     * @param groupByOrder the grouping order that the tree model conforms to\n      * @return the tree model\n      */\n+\n     public DefaultTreeModel getTreeModel(String groupByOrder) {\n-\t\treturn treeModelMap.get(groupByOrder);\n+        return treeModelMap.get(groupByOrder);\n     }\n \n     public String getSummary() {\n         return summary;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "73",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/18/AnalysisRun.java\nindex 39673ff628f..79297af646f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/18/AnalysisRun.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/18/AnalysisRun.java\n@@ -63,7 +63,7 @@ public class AnalysisRun {\n     private FindBugsFrame frame;\n     private String summary;\n     private Logger logger;\n-\tprivate IFindBugsEngine findBugs;\n+private IFindBugsEngine findBugs;\n     private SwingGUIBugReporter reporter;\n     private HashMap<String, DefaultTreeModel> treeModelMap;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
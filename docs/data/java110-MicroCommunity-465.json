{
    "project_name": "java110-MicroCommunity",
    "error_id": "465",
    "information": {
        "errors": [
            {
                "line": "56",
                "column": "47",
                "severity": "error",
                "message": "'=' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n\n        ResponseEntity<String> responseEntity =visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n\n        context.setResponseEntity(responseEntity);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/465/SaveVisitListener.java\nindex dadebdef31d..e3b5bf482af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/465/SaveVisitListener.java\n@@ -53,7 +53,7 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n \n \n \n-        ResponseEntity<String> responseEntity =visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n+        ResponseEntity<String> responseEntity = visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n \n         context.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/465/SaveVisitListener.java\nindex dadebdef31d..cfe809cb74b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/465/SaveVisitListener.java\n@@ -28,6 +28,7 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n \n     @Autowired\n     private IVisitBMO visitBMOImpl;\n+\n     @Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n         //Assert.hasKeyAndValue(reqJson, \"xxx\", \"xxx\");\n@@ -52,8 +53,7 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n         businesses.add(addVisit(reqJson, context));\n \n \n-\n-        ResponseEntity<String> responseEntity =visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n+        ResponseEntity<String> responseEntity = visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n \n         context.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/465/SaveVisitListener.java\nindex dadebdef31d..69eae30284f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/465/SaveVisitListener.java\n@@ -15,46 +15,40 @@ import org.springframework.http.ResponseEntity;\n import com.java110.utils.constant.CommonConstant;\n import com.java110.utils.constant.BusinessTypeConstant;\n import com.java110.utils.constant.ServiceCodeVisitConstant;\n-\n-\n import com.java110.core.annotation.Java110Listener;\n \n /**\n  * \u4fdd\u5b58\u5c0f\u533a\u4fa6\u542c\n  * add by wuxw 2019-06-30\n  */\n+\n+\n @Java110Listener(\"saveVisitListener\")\n public class SaveVisitListener extends AbstractServiceApiListener {\n \n     @Autowired\n     private IVisitBMO visitBMOImpl;\n+\n     @Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n         //Assert.hasKeyAndValue(reqJson, \"xxx\", \"xxx\");\n-\n         Assert.hasKeyAndValue(reqJson, \"vName\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u8bbf\u5ba2\u59d3\u540d\");\n         Assert.hasKeyAndValue(reqJson, \"visitGender\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u8bbf\u5ba2\u59d3\u540d\");\n         Assert.hasKeyAndValue(reqJson, \"phoneNumber\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u8bbf\u5ba2\u8054\u7cfb\u65b9\u5f0f\");\n         Assert.hasKeyAndValue(reqJson, \"visitTime\", \"\u5fc5\u586b\uff0c\u8bf7\u586b\u5199\u8bbf\u5ba2\u62dc\u8bbf\u65f6\u95f4\");\n-\n     }\n \n     @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n-\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         HttpHeaders header = new HttpHeaders();\n         context.getRequestCurrentHeaders().put(CommonConstant.HTTP_ORDER_TYPE_CD, \"D\");\n         JSONArray businesses = new JSONArray();\n-\n         AppService service = event.getAppService();\n \n         //\u6dfb\u52a0\u5355\u5143\u4fe1\u606f\n         businesses.add(addVisit(reqJson, context));\n-\n-\n-\n-        ResponseEntity<String> responseEntity =visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n-\n+        ResponseEntity<String> responseEntity = visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n         context.setResponseEntity(responseEntity);\n     }\n \n@@ -81,9 +75,9 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n      * @param dataFlowContext \u6570\u636e\u4e0a\u4e0b\u6587\n      * @return \u8ba2\u5355\u670d\u52a1\u80fd\u591f\u63a5\u53d7\u7684\u62a5\u6587\n      */\n-    private JSONObject addVisit(JSONObject paramInJson, DataFlowContext dataFlowContext) {\n \n \n+    private JSONObject addVisit(JSONObject paramInJson, DataFlowContext dataFlowContext) {\n         JSONObject business = JSONObject.parseObject(\"{\\\"datas\\\":{}}\");\n         business.put(CommonConstant.HTTP_BUSINESS_TYPE_CD, BusinessTypeConstant.BUSINESS_TYPE_SAVE_VISIT);\n         business.put(CommonConstant.HTTP_SEQ, DEFAULT_SEQ);\n@@ -96,4 +90,5 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n         return business;\n     }\n \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/465/SaveVisitListener.java\nindex dadebdef31d..e3b5bf482af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/465/SaveVisitListener.java\n@@ -53,7 +53,7 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n \n \n \n-        ResponseEntity<String> responseEntity =visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n+        ResponseEntity<String> responseEntity = visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n \n         context.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/465/SaveVisitListener.java\nindex dadebdef31d..e3b5bf482af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/465/SaveVisitListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/465/SaveVisitListener.java\n@@ -53,7 +53,7 @@ public class SaveVisitListener extends AbstractServiceApiListener {\n \n \n \n-        ResponseEntity<String> responseEntity =visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n+        ResponseEntity<String> responseEntity = visitBMOImpl.callService(context, service.getServiceCode(), businesses);\n \n         context.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "66",
                "severity": "error",
                "message": "'}' at column 66 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidStorageType constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "20",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/133/ValidStorageTypeValidator.java\nindex a2c6b28a1b4..06bc53bddaa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/133/ValidStorageTypeValidator.java\n@@ -13,15 +13,16 @@ public class ValidStorageTypeValidator implements ConstraintValidator<ValidStora\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidStorageType constraintAnnotation) {}\n+  public void initialize(ValidStorageType constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "20",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/133/ValidStorageTypeValidator.java\nindex a2c6b28a1b4..96f2e6b7b05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/133/ValidStorageTypeValidator.java\n@@ -32,4 +32,4 @@ public class ValidStorageTypeValidator implements ConstraintValidator<ValidStora\n     return StorageTypes.ALL.contains(storageType);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/133/ValidStorageTypeValidator.java\nindex a2c6b28a1b4..613eb8372a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/133/ValidStorageTypeValidator.java\n@@ -2,13 +2,14 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.StorageTypes;\n \n /**\n  * Validator for the storage type of a variable. Only valued from the {@link StorageTypes} class are\n  * allowed.\n  */\n+\n+\n public class ValidStorageTypeValidator implements ConstraintValidator<ValidStorageType, String> {\n \n   /*\n@@ -16,8 +17,11 @@ public class ValidStorageTypeValidator implements ConstraintValidator<ValidStora\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidStorageType constraintAnnotation) {}\n+  public void initialize(ValidStorageType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -25,11 +29,13 @@ public class ValidStorageTypeValidator implements ConstraintValidator<ValidStora\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(String storageType, ConstraintValidatorContext context) {\n+  public boolean isValid(String storageType,\n+    ConstraintValidatorContext context) {\n \n     // check for storage types\n     return StorageTypes.ALL.contains(storageType);\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "20",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/133/ValidStorageTypeValidator.java\nindex a2c6b28a1b4..acd8c0cc7c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/133/ValidStorageTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/133/ValidStorageTypeValidator.java\n@@ -17,9 +17,8 @@ public class ValidStorageTypeValidator implements ConstraintValidator<ValidStora\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidStorageType constraintAnnotation) {}\n-\n-  /*\n+  public void initialize(ValidStorageType constraintAnnotation) {\n+  }/*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
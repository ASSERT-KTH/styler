{
    "project_name": "ciandt-dev-tech-gallery",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "52",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @throws BadRequestException in case a request with problem were made.\n   */\n//  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n//  public List<TechGalleryUser> usersAutoComplete(@Named(\"query\") String query)\n//      throws NotFoundException, BadRequestException, InternalServerErrorException {\n//    return service.getUsersAutoComplete(query);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler/7/UserEndpoint.java\nindex ac3d685f31c..e0780662d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler/7/UserEndpoint.java\n@@ -49,7 +49,7 @@ public class UserEndpoint {\n    * @throws NotFoundException in case the information are not founded\n    * @throws BadRequestException in case a request with problem were made.\n    */\n-//  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n+  //  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n //  public List<TechGalleryUser> usersAutoComplete(@Named(\"query\") String query)\n //      throws NotFoundException, BadRequestException, InternalServerErrorException {\n //    return service.getUsersAutoComplete(query);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/7/UserEndpoint.java\nindex ac3d685f31c..f27e5a44396 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/7/UserEndpoint.java\n@@ -21,9 +21,8 @@ import javax.servlet.http.HttpServletRequest;\n \n /**\n  * Endpoint controller class for User requests.\n- * \n- * @author felipers\n  *\n+ * @author felipers\n  */\n @Api(name = \"rest\", version = \"v1\",\n     clientIds = {Constants.WEB_CLIENT_ID, Constants.API_EXPLORER_CLIENT_ID},\n@@ -41,9 +40,9 @@ public class UserEndpoint {\n   /**\n    * Endpoint for getting a users from a user provider. The interface with the provider is made by\n    * the service\n-   * \n+   *\n    * @param string to search on provider by name or login\n-   * \n+   *\n    * @return list of users\n    * @throws InternalServerErrorException in case something goes wrong\n    * @throws NotFoundException in case the information are not founded\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/7/UserEndpoint.java\nindex ac3d685f31c..7919fd04828 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/7/UserEndpoint.java\n@@ -49,10 +49,5 @@ public class UserEndpoint {\n    * @throws NotFoundException in case the information are not founded\n    * @throws BadRequestException in case a request with problem were made.\n    */\n-//  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n-//  public List<TechGalleryUser> usersAutoComplete(@Named(\"query\") String query)\n-//      throws NotFoundException, BadRequestException, InternalServerErrorException {\n-//    return service.getUsersAutoComplete(query);\n-//  }\n-\n-}\n+//  @ApiM\n+  }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/7/UserEndpoint.java\nindex ac3d685f31c..19e331f6841 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/7/UserEndpoint.java\n@@ -8,15 +8,12 @@ import com.google.api.server.spi.response.InternalServerErrorException;\n import com.google.api.server.spi.response.NotFoundException;\n import com.google.appengine.api.oauth.OAuthRequestException;\n import com.google.appengine.api.users.User;\n-\n import com.ciandt.techgallery.Constants;\n import com.ciandt.techgallery.persistence.model.TechGalleryUser;\n import com.ciandt.techgallery.service.UserServiceTG;\n import com.ciandt.techgallery.service.impl.UserServiceTGImpl;\n-\n import java.io.IOException;\n import java.util.List;\n-\n import javax.servlet.http.HttpServletRequest;\n \n /**\n@@ -25,16 +22,16 @@ import javax.servlet.http.HttpServletRequest;\n  * @author felipers\n  *\n  */\n-@Api(name = \"rest\", version = \"v1\",\n-    clientIds = {Constants.WEB_CLIENT_ID, Constants.API_EXPLORER_CLIENT_ID},\n-    scopes = {Constants.EMAIL_SCOPE, Constants.PLUS_SCOPE})\n+\n+\n+@Api(name = \"rest\", version = \"v1\", clientIds = {Constants.WEB_CLIENT_ID, Constants.API_EXPLORER_CLIENT_ID}, scopes = {Constants.EMAIL_SCOPE, Constants.PLUS_SCOPE})\n public class UserEndpoint {\n \n   private UserServiceTG service = UserServiceTGImpl.getInstance();\n \n   @ApiMethod(name = \"handleLogin\", path = \"handleLogin\", httpMethod = \"post\")\n-  public TechGalleryUser handleLogin(User user, HttpServletRequest req) throws NotFoundException,\n-      BadRequestException, InternalServerErrorException, IOException, OAuthRequestException {\n+  public TechGalleryUser handleLogin(User user, HttpServletRequest req)\n+    throws NotFoundException, BadRequestException, InternalServerErrorException, IOException, OAuthRequestException {\n     return service.handleLogin(user, req);\n   }\n \n@@ -55,4 +52,4 @@ public class UserEndpoint {\n //    return service.getUsersAutoComplete(query);\n //  }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler_random/7/UserEndpoint.java\nindex ac3d685f31c..e0780662d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler_random/7/UserEndpoint.java\n@@ -49,7 +49,7 @@ public class UserEndpoint {\n    * @throws NotFoundException in case the information are not founded\n    * @throws BadRequestException in case a request with problem were made.\n    */\n-//  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n+  //  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n //  public List<TechGalleryUser> usersAutoComplete(@Named(\"query\") String query)\n //      throws NotFoundException, BadRequestException, InternalServerErrorException {\n //    return service.getUsersAutoComplete(query);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler_three_grams/7/UserEndpoint.java\nindex ac3d685f31c..e0780662d02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/7/UserEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/styler_three_grams/7/UserEndpoint.java\n@@ -49,7 +49,7 @@ public class UserEndpoint {\n    * @throws NotFoundException in case the information are not founded\n    * @throws BadRequestException in case a request with problem were made.\n    */\n-//  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n+  //  @ApiMethod(name = \"usersAutoComplete\", path = \"users/autocomplete?q={query}\", httpMethod = \"get\")\n //  public List<TechGalleryUser> usersAutoComplete(@Named(\"query\") String query)\n //      throws NotFoundException, BadRequestException, InternalServerErrorException {\n //    return service.getUsersAutoComplete(query);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
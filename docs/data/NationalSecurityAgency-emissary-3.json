{
    "project_name": "NationalSecurityAgency-emissary",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "331",
                "column": "25",
                "severity": "warning",
                "message": "'}' at column 25 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n    /** This class is not meant to be instantiated. */\n    private DataUtil() {}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "331",
                    "column": "25",
                    "severity": "warning",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler/3/DataUtil.java\nindex 4426ebcc59b..715deb88fb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler/3/DataUtil.java\n@@ -329,4 +329,5 @@ public class DataUtil {\n \n     /** This class is not meant to be instantiated. */\n     private DataUtil() {}\n+\n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/3/DataUtil.java\nindex 4426ebcc59b..ab373cd36df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/3/DataUtil.java\n@@ -23,8 +23,8 @@ public class DataUtil {\n \n     /**\n      * As {@link IBaseDataObject#pushCurrentForm(String)} but makes sure each form is not already on the stack first.\n-     * \n-     * @param d data object to have form pushed into\n+     *\n+     * @param d     data object to have form pushed into\n      * @param forms that are pushed into current forms if not already present\n      */\n     public static void pushDedupedForms(final IBaseDataObject d, final Collection<String> forms) {\n@@ -35,8 +35,8 @@ public class DataUtil {\n \n     /**\n      * As {@link IBaseDataObject#pushCurrentForm(String)} but makes sure each form is not already on the stack first.\n-     * \n-     * @param d data object to have form pushed into\n+     *\n+     * @param d    data object to have form pushed into\n      * @param form that are pushed into current forms if not already present\n      */\n     public static void pushDedupedForm(final IBaseDataObject d, final String form) {\n@@ -65,7 +65,7 @@ public class DataUtil {\n \n     /**\n      * Return true if the data is empty or consists only of whitespace or control characters\n-     * \n+     *\n      * @param data array to check\n      * @return true if data is null or devoid of real characters\n      */\n@@ -83,7 +83,7 @@ public class DataUtil {\n \n     /**\n      * Convenience method to assign the current form and file type of a {@link IBaseDataObject} to \"EMPTY_SESSION\".\n-     * \n+     *\n      * @param d the object to set as empty\n      */\n     public static void setEmptySession(final IBaseDataObject d) {\n@@ -111,7 +111,7 @@ public class DataUtil {\n     /**\n      * Get the event or collection date from a data object by checking the EventDate and FILE_DATE parameters. If both are\n      * missing default to today.\n-     * \n+     *\n      * @param payload data object to examine\n      * @return event date\n      */\n@@ -137,7 +137,7 @@ public class DataUtil {\n \n     /**\n      * Get a Calendar object from a Date Object with the TZ set to UTC\n-     * \n+     *\n      * @param eventDate the date object to convert\n      * @return specified time UTC calendar\n      */\n@@ -160,9 +160,9 @@ public class DataUtil {\n \n     /**\n      * Merge a key-value pair into a map, where the values are semicolon delimited lists\n-     * \n-     * @param info the map to merge into\n-     * @param key the newly arriving key\n+     *\n+     * @param info  the map to merge into\n+     * @param key   the newly arriving key\n      * @param value the newly arriving value\n      */\n     @Deprecated\n@@ -180,7 +180,7 @@ public class DataUtil {\n \n     /**\n      * Convert a semicolon delmited list as a set of strings\n-     * \n+     *\n      * @param values semicolon delimited list\n      * @return strings in list\n      */\n@@ -194,10 +194,10 @@ public class DataUtil {\n \n     /**\n      * Join a collection with a delimiter\n-     * \n+     *\n      * @param values the collection to join\n-     * @param delim the string delimiter to use\n-     * @param sort true if the output should be sorted\n+     * @param delim  the string delimiter to use\n+     * @param sort   true if the output should be sorted\n      */\n     @Deprecated\n     public static String join(final Collection<String> values, final String delim, final boolean sort) {\n@@ -221,9 +221,9 @@ public class DataUtil {\n \n     /**\n      * Join a collection with a delimiter, output in sorted order\n-     * \n+     *\n      * @param values the collection to join\n-     * @param delim the string delimiter to use\n+     * @param delim  the string delimiter to use\n      */\n     @Deprecated\n     public static String join(final Collection<String> values, final String delim) {\n@@ -232,7 +232,7 @@ public class DataUtil {\n \n     /**\n      * Join a collection with a semi-colon delimiter, output in sorted order\n-     * \n+     *\n      * @param values the collection to join\n      */\n     @Deprecated\n@@ -242,9 +242,9 @@ public class DataUtil {\n \n     /**\n      * Given a map of key-values, merge each into {@link IBaseDataObject} checking for duplication\n-     * \n+     *\n      * @param parent IBaseDataObject to merge String parameter with\n-     * @param map key-value pairs to merge\n+     * @param map    key-value pairs to merge\n      */\n     @Deprecated\n     public static void mergeMap(final IBaseDataObject parent, final Map<String, String> map) {\n@@ -256,10 +256,10 @@ public class DataUtil {\n     /**\n      * Assume key is name of String value parameter. Check wither parent already has string value in a delim-separated\n      * string. If so do nothing, otherwise, add delim + value\n-     * \n+     *\n      * @param parent IBaseDataObject to mere String parameter with\n-     * @param key name of String parameter\n-     * @param val String to append if not already in parents values\n+     * @param key    name of String parameter\n+     * @param val    String to append if not already in parents values\n      */\n     @Deprecated\n     public static void mergeParameter(final IBaseDataObject parent, final String key, final String val) {\n@@ -278,10 +278,10 @@ public class DataUtil {\n \n     /**\n      * Copy an array of metadata parameters from one data object to another\n-     * \n+     *\n      * @param source to copy from\n      * @param target to copy to\n-     * @param keys array of metadata keys to copy\n+     * @param keys   array of metadata keys to copy\n      */\n     public static void copyParams(final IBaseDataObject source, final IBaseDataObject target, final String[] keys) {\n         for (final String k : keys) {\n@@ -291,10 +291,10 @@ public class DataUtil {\n \n     /**\n      * Copy an collection of metadata parameters from one data object to another\n-     * \n+     *\n      * @param source to copy from\n      * @param target to copy to\n-     * @param keys collection of metadata keys to copy\n+     * @param keys   collection of metadata keys to copy\n      */\n     public static void copyParams(final IBaseDataObject source, final IBaseDataObject target, final Collection<String> keys) {\n         for (final String k : keys) {\n@@ -304,10 +304,10 @@ public class DataUtil {\n \n     /**\n      * Copy a metadata item from one payload to another\n-     * \n+     *\n      * @param source to copy from\n      * @param target to copy to\n-     * @param key metadata key to copy\n+     * @param key    metadata key to copy\n      */\n     public static void copyParam(final IBaseDataObject source, final IBaseDataObject target, final String key) {\n         final Object value = source.getParameter(key);\n@@ -318,15 +318,18 @@ public class DataUtil {\n \n     /**\n      * Convenience method for using same value as currentForm (pushed) and filetype for a {@link IBaseDataObject}\n-     * \n+     *\n      * @param dataobj to be set\n-     * @param form added as current form and filetype for dataobj\n+     * @param form    added as current form and filetype for dataobj\n      */\n     public static void setCurrentFormAndFiletype(final IBaseDataObject dataobj, final String form) {\n         dataobj.pushCurrentForm(form);\n         dataobj.setFileType(form);\n     }\n \n-    /** This class is not meant to be instantiated. */\n-    private DataUtil() {}\n+    /**\n+     * This class is not meant to be instantiated.\n+     */\n+    private DataUtil() {\n+    }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/3/DataUtil.java\nindex 4426ebcc59b..0dc68a8fd6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/3/DataUtil.java\n@@ -328,5 +328,6 @@ public class DataUtil {\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private DataUtil() {}\n-}\n+    private DataUtil() {\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/3/DataUtil.java\nindex 4426ebcc59b..accf138540e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/3/DataUtil.java\n@@ -11,14 +11,16 @@ import java.util.Set;\n import java.util.TimeZone;\n import java.util.TreeSet;\n import java.util.regex.Pattern;\n-\n import emissary.core.Form;\n import emissary.core.IBaseDataObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class DataUtil {\n+\n     private static final Logger logger = LoggerFactory.getLogger(DataUtil.class);\n+\n     private static final Pattern NL_REPL = Pattern.compile(\"[\\n\\r]+\");\n \n     /**\n@@ -27,6 +29,7 @@ public class DataUtil {\n      * @param d data object to have form pushed into\n      * @param forms that are pushed into current forms if not already present\n      */\n+\n     public static void pushDedupedForms(final IBaseDataObject d, final Collection<String> forms) {\n         for (final String f : forms) {\n             pushDedupedForm(d, f);\n@@ -39,6 +42,8 @@ public class DataUtil {\n      * @param d data object to have form pushed into\n      * @param form that are pushed into current forms if not already present\n      */\n+\n+\n     public static void pushDedupedForm(final IBaseDataObject d, final String form) {\n         if (d.searchCurrentForm(form) == -1) {\n             d.pushCurrentForm(form);\n@@ -51,6 +56,8 @@ public class DataUtil {\n      * @param d the data object\n      * @return true if d is not null and not empty\n      */\n+\n+\n     public static boolean isNotEmpty(final IBaseDataObject d) {\n         return (d != null) && !isEmpty(d);\n     }\n@@ -58,6 +65,8 @@ public class DataUtil {\n     /**\n      * Return true if the data slot is empty or just whitespace and/or control chars\n      */\n+\n+\n     public static boolean isEmpty(final IBaseDataObject d) {\n         final byte[] data = d.data();\n         return isEmpty(data);\n@@ -69,6 +78,8 @@ public class DataUtil {\n      * @param data array to check\n      * @return true if data is null or devoid of real characters\n      */\n+\n+\n     public static boolean isEmpty(final byte[] data) {\n         return (data == null) || (data.length == 0);\n     }\n@@ -76,6 +87,8 @@ public class DataUtil {\n     /**\n      * Return true if the data slot is empty or just one whitespace character\n      */\n+\n+\n     public static boolean isEmpty(final emissary.id.WorkUnit u) {\n         final byte[] data = u.getData();\n         return isEmpty(data);\n@@ -86,6 +99,8 @@ public class DataUtil {\n      * \n      * @param d the object to set as empty\n      */\n+\n+\n     public static void setEmptySession(final IBaseDataObject d) {\n         d.setCurrentForm(Form.EMPTY);\n         d.setFileTypeIfEmpty(Form.EMPTY);\n@@ -94,17 +109,17 @@ public class DataUtil {\n     /**\n      * Escape a string so it is suitable for use in a CSV record\n      */\n+\n+\n     public static String csvescape(final String field) {\n         final String SEP = \",\";\n         String s = field;\n         if ((s != null) && (s.indexOf(\"\\n\") > -1 || s.indexOf(\"\\r\") > -1)) {\n             s = NL_REPL.matcher(s).replaceAll(\" \");\n         }\n-\n         if ((s != null) && (s.indexOf(SEP) > -1 || s.indexOf('\"') > -1)) {\n             s = \"\\\"\" + s.replaceAll(\"\\\"\", \"\\\"\\\"\") + \"\\\"\"; // escape quotes\n         }\n-\n         return s;\n     }\n \n@@ -115,12 +130,15 @@ public class DataUtil {\n      * @param payload data object to examine\n      * @return event date\n      */\n+\n+\n     @Deprecated\n     public static Calendar getEventDate(final IBaseDataObject payload) {\n         String evDate = payload.getStringParameter(\"EventDate\");\n         if (evDate == null) {\n             evDate = payload.getStringParameter(\"FILE_DATE\");\n         }\n+\n         Date eventDate = null;\n         if (evDate != null) {\n             try {\n@@ -141,6 +159,8 @@ public class DataUtil {\n      * @param eventDate the date object to convert\n      * @return specified time UTC calendar\n      */\n+\n+\n     @Deprecated\n     public static Calendar getCal(final Date eventDate) {\n         final Calendar cal = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"));\n@@ -151,6 +171,8 @@ public class DataUtil {\n     /**\n      * Merge two maps with semicolon delimited lists as values\n      */\n+\n+\n     @Deprecated\n     public static void merge(final Map<String, String> info, final Map<String, String> recordInfo) {\n         for (final Map.Entry<String, String> entry : recordInfo.entrySet()) {\n@@ -165,6 +187,8 @@ public class DataUtil {\n      * @param key the newly arriving key\n      * @param value the newly arriving value\n      */\n+\n+\n     @Deprecated\n     public static void addInfo(final Map<String, String> info, final String key, final String value) {\n         if (info.containsKey(key)) {\n@@ -184,6 +208,7 @@ public class DataUtil {\n      * @param values semicolon delimited list\n      * @return strings in list\n      */\n+\n     @Deprecated\n     public static Set<String> split(final String values) {\n         final Set<String> valuesSet = new HashSet<String>();\n@@ -199,6 +224,8 @@ public class DataUtil {\n      * @param delim the string delimiter to use\n      * @param sort true if the output should be sorted\n      */\n+\n+\n     @Deprecated\n     public static String join(final Collection<String> values, final String delim, final boolean sort) {\n         final Collection<String> tojoin;\n@@ -225,6 +252,8 @@ public class DataUtil {\n      * @param values the collection to join\n      * @param delim the string delimiter to use\n      */\n+\n+\n     @Deprecated\n     public static String join(final Collection<String> values, final String delim) {\n         return join(values, delim, true);\n@@ -235,6 +264,8 @@ public class DataUtil {\n      * \n      * @param values the collection to join\n      */\n+\n+\n     @Deprecated\n     public static String join(final Collection<String> values) {\n         return join(values, IBaseDataObject.DEFAULT_PARAM_SEPARATOR, true);\n@@ -246,6 +277,8 @@ public class DataUtil {\n      * @param parent IBaseDataObject to merge String parameter with\n      * @param map key-value pairs to merge\n      */\n+\n+\n     @Deprecated\n     public static void mergeMap(final IBaseDataObject parent, final Map<String, String> map) {\n         for (final Map.Entry<String, String> e : map.entrySet()) {\n@@ -261,6 +294,8 @@ public class DataUtil {\n      * @param key name of String parameter\n      * @param val String to append if not already in parents values\n      */\n+\n+\n     @Deprecated\n     public static void mergeParameter(final IBaseDataObject parent, final String key, final String val) {\n         String param;\n@@ -283,6 +318,8 @@ public class DataUtil {\n      * @param target to copy to\n      * @param keys array of metadata keys to copy\n      */\n+\n+\n     public static void copyParams(final IBaseDataObject source, final IBaseDataObject target, final String[] keys) {\n         for (final String k : keys) {\n             copyParam(source, target, k);\n@@ -296,6 +333,8 @@ public class DataUtil {\n      * @param target to copy to\n      * @param keys collection of metadata keys to copy\n      */\n+\n+\n     public static void copyParams(final IBaseDataObject source, final IBaseDataObject target, final Collection<String> keys) {\n         for (final String k : keys) {\n             copyParam(source, target, k);\n@@ -309,6 +348,8 @@ public class DataUtil {\n      * @param target to copy to\n      * @param key metadata key to copy\n      */\n+\n+\n     public static void copyParam(final IBaseDataObject source, final IBaseDataObject target, final String key) {\n         final Object value = source.getParameter(key);\n         if (value != null) {\n@@ -322,11 +363,16 @@ public class DataUtil {\n      * @param dataobj to be set\n      * @param form added as current form and filetype for dataobj\n      */\n+\n+\n     public static void setCurrentFormAndFiletype(final IBaseDataObject dataobj, final String form) {\n         dataobj.pushCurrentForm(form);\n         dataobj.setFileType(form);\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private DataUtil() {}\n-}\n+\n+    private DataUtil() {\n+\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "331",
                    "column": "25",
                    "severity": "warning",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_random/3/DataUtil.java\nindex 4426ebcc59b..715deb88fb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_random/3/DataUtil.java\n@@ -329,4 +329,5 @@ public class DataUtil {\n \n     /** This class is not meant to be instantiated. */\n     private DataUtil() {}\n+\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "331",
                    "column": "25",
                    "severity": "warning",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "5",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_three_grams/3/DataUtil.java\nindex 4426ebcc59b..3ccb5dc5e60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/3/DataUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_three_grams/3/DataUtil.java\n@@ -329,4 +329,4 @@ public class DataUtil {\n \n     /** This class is not meant to be instantiated. */\n     private DataUtil() {}\n-}\n+    }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
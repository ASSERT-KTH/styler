{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3047",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3047/FreelistNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3047/FreelistNode.java\nindex f4399a2c599..a1fbab9414e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3047/FreelistNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3047/FreelistNode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -33,82 +34,82 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.put6BLong;\n  * [HEADER         ][RELEASED PAGE IDS...                         ]\n  * [NODE TYPE][NEXT][GENERATION,ID][GENERATION,ID][...............]\n  * </pre>\n- *\n+ * <p>\n  * A free-list node is a page in the same {@link org.neo4j.io.pagecache.PagedFile mapped page cache file}\n  * as a {@link TreeNode}. They distinguish themselves from one another by a \"node type\" one-byte header.\n  */\n class FreelistNode\n {\n-    private static final int PAGE_ID_SIZE = GenerationSafePointer.POINTER_SIZE;\n-    private static final int BYTE_POS_NEXT = TreeNode.BYTE_POS_NODE_TYPE + Byte.BYTES;\n-    private static final int HEADER_LENGTH = BYTE_POS_NEXT + PAGE_ID_SIZE;\n-    private static final int ENTRY_SIZE = GenerationSafePointer.GENERATION_SIZE + PAGE_ID_SIZE;\n-    static final long NO_PAGE_ID = TreeNode.NO_NODE_FLAG;\n+  private static final int PAGE_ID_SIZE = GenerationSafePointer.POINTER_SIZE;\n+  private static final int BYTE_POS_NEXT = TreeNode.BYTE_POS_NODE_TYPE + Byte.BYTES;\n+  private static final int HEADER_LENGTH = BYTE_POS_NEXT + PAGE_ID_SIZE;\n+  private static final int ENTRY_SIZE = GenerationSafePointer.GENERATION_SIZE + PAGE_ID_SIZE;\n+  static final long NO_PAGE_ID = TreeNode.NO_NODE_FLAG;\n \n-    private final int maxEntries;\n+  private final int maxEntries;\n \n-    FreelistNode( int pageSize )\n-    {\n-        this.maxEntries = (pageSize - HEADER_LENGTH) / ENTRY_SIZE;\n-    }\n+  FreelistNode(int pageSize)\n+  {\n+    this.maxEntries = (pageSize - HEADER_LENGTH) / ENTRY_SIZE;\n+  }\n \n-    static void initialize( PageCursor cursor )\n-    {\n-        cursor.putByte( TreeNode.BYTE_POS_NODE_TYPE, TreeNode.NODE_TYPE_FREE_LIST_NODE );\n-    }\n+  static void initialize(PageCursor cursor)\n+  {\n+    cursor.putByte(TreeNode.BYTE_POS_NODE_TYPE, TreeNode.NODE_TYPE_FREE_LIST_NODE);\n+  }\n \n-    void write( PageCursor cursor, long unstableGeneration, long pageId, int pos )\n+  void write(PageCursor cursor, long unstableGeneration, long pageId, int pos)\n+  {\n+    if (pageId == NO_PAGE_ID)\n     {\n-        if ( pageId == NO_PAGE_ID )\n-        {\n-            throw new IllegalArgumentException( \"Tried to write pageId \" + pageId + \" which means null\" );\n-        }\n-        assertPos( pos );\n-        GenerationSafePointer.assertGenerationOnWrite( unstableGeneration );\n-        cursor.setOffset( entryOffset( pos ) );\n-        cursor.putInt( (int) unstableGeneration );\n-        put6BLong( cursor, pageId );\n+      throw new IllegalArgumentException(\"Tried to write pageId \" + pageId + \" which means null\");\n     }\n+    assertPos(pos);\n+    GenerationSafePointer.assertGenerationOnWrite(unstableGeneration);\n+    cursor.setOffset(entryOffset(pos));\n+    cursor.putInt((int) unstableGeneration);\n+    put6BLong(cursor, pageId);\n+  }\n \n-    private void assertPos( int pos )\n+  private void assertPos(int pos)\n+  {\n+    if (pos >= maxEntries)\n     {\n-        if ( pos >= maxEntries )\n-        {\n-            throw new IllegalArgumentException( \"Pos \" + pos + \" too big, max entries \" + maxEntries );\n-        }\n-        if ( pos < 0 )\n-        {\n-            throw new IllegalArgumentException( \"Negative pos \" + pos );\n-        }\n+      throw new IllegalArgumentException(\"Pos \" + pos + \" too big, max entries \" + maxEntries);\n     }\n-\n-    long read( PageCursor cursor, long stableGeneration, int pos )\n+    if (pos < 0)\n     {\n-        assertPos( pos );\n-        cursor.setOffset( entryOffset( pos ) );\n-        long generation = getUnsignedInt( cursor );\n-        return generation <= stableGeneration ? get6BLong( cursor ) : NO_PAGE_ID;\n+      throw new IllegalArgumentException(\"Negative pos \" + pos);\n     }\n+  }\n \n-    private static int entryOffset( int pos )\n-    {\n-        return HEADER_LENGTH + pos * ENTRY_SIZE;\n-    }\n+  long read(PageCursor cursor, long stableGeneration, int pos)\n+  {\n+    assertPos(pos);\n+    cursor.setOffset(entryOffset(pos));\n+    long generation = getUnsignedInt(cursor);\n+    return generation <= stableGeneration ? get6BLong(cursor) : NO_PAGE_ID;\n+  }\n \n-    int maxEntries()\n-    {\n-        return maxEntries;\n-    }\n+  private static int entryOffset(int pos)\n+  {\n+    return HEADER_LENGTH + pos * ENTRY_SIZE;\n+  }\n \n-    static void setNext( PageCursor cursor, long nextFreelistPage )\n-    {\n-        cursor.setOffset( BYTE_POS_NEXT );\n-        put6BLong( cursor, nextFreelistPage );\n-    }\n+  int maxEntries()\n+  {\n+    return maxEntries;\n+  }\n \n-    static long next( PageCursor cursor )\n-    {\n-        cursor.setOffset( BYTE_POS_NEXT );\n-        return get6BLong( cursor );\n-    }\n+  static void setNext(PageCursor cursor, long nextFreelistPage)\n+  {\n+    cursor.setOffset(BYTE_POS_NEXT);\n+    put6BLong(cursor, nextFreelistPage);\n+  }\n+\n+  static long next(PageCursor cursor)\n+  {\n+    cursor.setOffset(BYTE_POS_NEXT);\n+    return get6BLong(cursor);\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3047/FreelistNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3047/FreelistNode.java\nindex f4399a2c599..27b29599e02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3047/FreelistNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3047/FreelistNode.java\n@@ -63,10 +63,11 @@ class FreelistNode\n         {\n             throw new IllegalArgumentException( \"Tried to write pageId \" + pageId + \" which means null\" );\n         }\n-        assertPos( pos );\n+\n+assertPos( pos );\n         GenerationSafePointer.assertGenerationOnWrite( unstableGeneration );\n         cursor.setOffset( entryOffset( pos ) );\n-        cursor.putInt( (int) unstableGeneration );\n+        cursor.putInt( ( int) unstableGeneration );\n         put6BLong( cursor, pageId );\n     }\n \n@@ -76,7 +77,8 @@ class FreelistNode\n         {\n             throw new IllegalArgumentException( \"Pos \" + pos + \" too big, max entries \" + maxEntries );\n         }\n-        if ( pos < 0 )\n+\n+if ( pos < 0 )\n         {\n             throw new IllegalArgumentException( \"Negative pos \" + pos );\n         }\n@@ -111,4 +113,4 @@ class FreelistNode\n         cursor.setOffset( BYTE_POS_NEXT );\n         return get6BLong( cursor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
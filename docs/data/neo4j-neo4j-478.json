{
    "project_name": "neo4j-neo4j",
    "error_id": "478",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/478/SupportedCommunitySecurityComponentVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/478/SupportedCommunitySecurityComponentVersion.java\nindex 97a1d3393a4..bfe26e023e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/478/SupportedCommunitySecurityComponentVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/478/SupportedCommunitySecurityComponentVersion.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.systemgraph.versions;\n \n import java.util.Optional;\n@@ -42,85 +43,82 @@ public class SupportedCommunitySecurityComponentVersion extends KnownCommunitySe\n     private final UserRepository userRepository;\n     private final SecureHasher secureHasher;\n \n-    SupportedCommunitySecurityComponentVersion( ComponentVersion componentVersion, Log log, UserRepository userRepository )\n+    SupportedCommunitySecurityComponentVersion(ComponentVersion componentVersion, Log log, UserRepository userRepository)\n     {\n-        super( componentVersion, log );\n+        super(componentVersion, log);\n         this.userRepository = userRepository;\n         this.secureHasher = new SecureHasher();\n     }\n \n     @Override\n-    public void upgradeSecurityGraph( Transaction tx, KnownCommunitySecurityComponentVersion latest )\n+    public void upgradeSecurityGraph(Transaction tx, KnownCommunitySecurityComponentVersion latest)\n     {\n-        Preconditions.checkState( latest.version == LATEST_COMMUNITY_SECURITY_COMPONENT_VERSION,\n-                format(\"Latest version should be %s but was %s\", LATEST_COMMUNITY_SECURITY_COMPONENT_VERSION, latest.version ));\n-        this.setVersionProperty( tx, latest.version );\n+        Preconditions.checkState(latest.version == LATEST_COMMUNITY_SECURITY_COMPONENT_VERSION,\n+          format(\"Latest version should be %s but was %s\", LATEST_COMMUNITY_SECURITY_COMPONENT_VERSION, latest.version));\n+        this.setVersionProperty(tx, latest.version);\n     }\n \n     @Override\n-    public void setupUsers( Transaction tx ) throws Exception\n+    public void setupUsers(Transaction tx) throws Exception\n     {\n-        addDefaultUser( tx );\n+        addDefaultUser(tx);\n     }\n \n-    private void addDefaultUser( Transaction tx ) throws Exception\n+    private void addDefaultUser(Transaction tx) throws Exception\n     {\n         Optional<User> initialUser = getInitialUser();\n-        if ( initialUser.isPresent() )\n+        if (initialUser.isPresent())\n         {\n             User user = initialUser.get();\n-            log.info( String.format( \"Setting up initial user from `auth.ini` file: %s\", user.name() ) );\n-            addUser( tx, INITIAL_USER_NAME, user.credentials(), user.passwordChangeRequired(), user.hasFlag( IS_SUSPENDED ) );\n-        }\n-        else\n+            log.info(String.format(\"Setting up initial user from `auth.ini` file: %s\", user.name()));\n+            addUser(tx, INITIAL_USER_NAME, user.credentials(), user.passwordChangeRequired(), user.hasFlag(IS_SUSPENDED));\n+        } else\n         {\n-            SystemGraphCredential credential = SystemGraphCredential.createCredentialForPassword( UTF8.encode( INITIAL_PASSWORD ), secureHasher );\n-            log.info( String.format( \"Setting up initial user from defaults: %s\", INITIAL_USER_NAME ) );\n-            addUser( tx, INITIAL_USER_NAME, credential, true, false );\n+            SystemGraphCredential credential = SystemGraphCredential.createCredentialForPassword(UTF8.encode(INITIAL_PASSWORD), secureHasher);\n+            log.info(String.format(\"Setting up initial user from defaults: %s\", INITIAL_USER_NAME));\n+            addUser(tx, INITIAL_USER_NAME, credential, true, false);\n         }\n     }\n \n     @Override\n-    public void updateInitialUserPassword( Transaction tx ) throws Exception\n+    public void updateInitialUserPassword(Transaction tx) throws Exception\n     {\n         Optional<User> initialUser = getInitialUser();\n-        if ( initialUser.isPresent() )\n+        if (initialUser.isPresent())\n         {\n-            updateInitialUserPassword( tx, initialUser.get() );\n-        }\n-        else\n+            updateInitialUserPassword(tx, initialUser.get());\n+        } else\n         {\n-            log.debug( \"Not updating initial user password: No initial user found in `auth.ini`\" );\n+            log.debug(\"Not updating initial user password: No initial user found in `auth.ini`\");\n         }\n     }\n \n     private Optional<User> getInitialUser() throws Exception\n     {\n         userRepository.start();\n-        log.debug( \"Opened `auth.ini` file to find the initial user\" );\n-        if ( userRepository.numberOfUsers() == 0 )\n+        log.debug(\"Opened `auth.ini` file to find the initial user\");\n+        if (userRepository.numberOfUsers() == 0)\n         {\n-            log.debug( \"Not updating initial user password: No initial user found in `auth.ini`\" );\n+            log.debug(\"Not updating initial user password: No initial user found in `auth.ini`\");\n         }\n-        if ( userRepository.numberOfUsers() == 1 )\n+        if (userRepository.numberOfUsers() == 1)\n         {\n             // In alignment with InternalFlatFileRealm we only allow the INITIAL_USER_NAME here for now\n             // (This is what we get from the `set-initial-password` command\n-            User initialUser = userRepository.getUserByName( INITIAL_USER_NAME );\n-            if ( initialUser == null )\n+            User initialUser = userRepository.getUserByName(INITIAL_USER_NAME);\n+            if (initialUser == null)\n             {\n                 String errorMessage = \"Invalid `auth.ini` file: the user in the file is not named \" + INITIAL_USER_NAME;\n-                log.error( errorMessage );\n-                throw new IllegalStateException( errorMessage );\n+                log.error(errorMessage);\n+                throw new IllegalStateException(errorMessage);\n             }\n-            log.debug( \"Valid `auth.ini` file: found initial user\" );\n-            return Optional.of( initialUser );\n-        }\n-        else if ( userRepository.numberOfUsers() > 1 )\n+            log.debug(\"Valid `auth.ini` file: found initial user\");\n+            return Optional.of(initialUser);\n+        } else if (userRepository.numberOfUsers() > 1)\n         {\n             String errorMessage = \"Invalid `auth.ini` file: the file contains more than one user\";\n-            log.error( errorMessage );\n-            throw new IllegalStateException( errorMessage );\n+            log.error(errorMessage);\n+            throw new IllegalStateException(errorMessage);\n         }\n         return Optional.empty();\n     }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/478/SupportedCommunitySecurityComponentVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/478/SupportedCommunitySecurityComponentVersion.java\nindex 97a1d3393a4..08d7b143461 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/478/SupportedCommunitySecurityComponentVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/478/SupportedCommunitySecurityComponentVersion.java\n@@ -124,4 +124,4 @@ public class SupportedCommunitySecurityComponentVersion extends KnownCommunitySe\n         }\n         return Optional.empty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
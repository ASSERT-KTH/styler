{
    "project_name": "Angel-ML-angel",
    "error_id": "249",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/249/TreeConf.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/249/TreeConf.java\nindex 1f8cce8d6c1..07eaaeaa8f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/249/TreeConf.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/249/TreeConf.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.spark.ml.tree.common;\n \n public class TreeConf {\n@@ -71,4 +70,4 @@ public class TreeConf {\n   public static final String ML_GBDT_MAX_LEAF_WEIGHT = \"spark.gbdt.max.leaf.weight\";\n   public static final double DEFAULT_ML_GBDT_MAX_LEAF_WEIGHT = 0.0;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/249/TreeConf.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/249/TreeConf.java\nindex 1f8cce8d6c1..f4b1ca98ef9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/249/TreeConf.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/249/TreeConf.java\n@@ -18,57 +18,105 @@\n \n package com.tencent.angel.spark.ml.tree.common;\n \n+\n+\n public class TreeConf {\n \n   // ML TreeConf\n+\n   public static final String ML_MODEL_PATH = \"spark.ml.model.path\";\n+\n   public static final String ML_TRAIN_PATH = \"spark.ml.train.path\";\n+\n   public static final String ML_VALID_PATH = \"spark.ml.valid.path\";\n+\n   public static final String ML_PREDICT_PATH = \"spark.ml.predict.path\";\n+\n   public static final String ML_OUTPUT_PATH = \"spark.ml.output.path\";\n \n   public static final String ML_GBDT_TASK_TYPE = \"ml.gbdt.task.type\";\n+\n   public static final String DEFAULT_ML_GBDT_TASK_TYPE = \"classification\";\n+\n   public static final String ML_VALID_DATA_RATIO = \"spark.ml.valid.ratio\";\n+\n   public static final double DEFAULT_ML_VALID_DATA_RATIO = 0.25;\n+\n   public static final String ML_NUM_CLASS = \"spark.ml.class.num\";\n+\n   public static final int DEFAULT_ML_NUM_CLASS = 2;\n+\n   public static final String ML_NUM_FEATURE = \"spark.ml.feature.num\";\n+\n   public static final String ML_FEATURE_SAMPLE_RATIO = \"spark.feature.sample.ratio\";\n+\n   public static final double DEFAULT_ML_FEATURE_SAMPLE_RATIO = 1.0;\n+\n   public static final String ML_LEARN_RATE = \"spark.ml.learn.rate\";\n+\n   public static final double DEFAULT_ML_LEARN_RATE = 1.0;\n+\n   public static final String ML_LOSS_FUNCTION = \"spark.ml.loss.func\";\n+\n   public static final String ML_EVAL_METRIC = \"spark.ml.eval.metric\";\n+\n   public static final String DEFAULT_ML_EVAL_METRIC = \"\";\n+\n   public static final String ML_NUM_WORKER = \"spark.ml.worker.num\";\n+\n   public static final String ML_NUM_THREAD = \"spark.ml.thread.num\";\n+\n   public static final int DEFAULT_ML_NUM_THREAD = 1;\n   // GBDT TreeConf\n+\n   public static final String ML_GBDT_SPLIT_NUM = \"spark.gbdt.split.num\";\n+\n   public static final int DEFAULT_ML_GBDT_SPLIT_NUM = 100;\n+\n   public static final String ML_GBDT_TREE_NUM = \"spark.gbdt.tree.num\";\n+\n   public static final int DEFAULT_ML_GBDT_TREE_NUM = 20;\n+\n   public static final String ML_GBDT_MAX_DEPTH = \"spark.gbdt.max.depth\";\n+\n   public static final int DEFAULT_ML_GBDT_MAX_DEPTH = 6;\n+\n   public static final String ML_GBDT_MAX_NODE_NUM = \"spark.gbdt.max.node.num\";\n+\n   public static final String ML_GBDT_HIST_SUBTRACTION = \"spark.gbdt.hist.subtraction\";\n+\n   public static final boolean DEFAULT_ML_GBDT_HIST_SUBTRACTION = true;\n+\n   public static final String ML_GBDT_LIGHTER_CHILD_FIRST = \"spark.gbdt.lighter.child.first\";\n+\n   public static final boolean DEFAULT_ML_GBDT_LIGHTER_CHILD_FIRST = true;\n+\n   public static final String ML_GBDT_FULL_HESSIAN = \"spark.gbdt.full.hessian\";\n+\n   public static final boolean DEFAULT_ML_GBDT_FULL_HESSIAN = false;\n+\n   public static final String ML_GBDT_MIN_CHILD_WEIGHT = \"spark.gbdt.min.child.weight\";\n+\n   public static final double DEFAULT_ML_GBDT_MIN_CHILD_WEIGHT = 0.0;\n+\n   public static final String ML_GBDT_MIN_NODE_INSTANCE = \"spark.gbdt.min.node.instance\";\n+\n   public static final int DEFAULT_ML_GBDT_MIN_NODE_INSTANCE = 1024;\n+\n   public static final String ML_GBDT_MIN_SPLIT_GAIN = \"spark.gbdt.min.split.gain\";\n+\n   public static final double DEFAULT_ML_GBDT_MIN_SPLIT_GAIN = 0.0;\n+\n   public static final String ML_GBDT_REG_ALPHA = \"spark.gbdt.reg.alpha\";\n+\n   public static final double DEFAULT_ML_GBDT_REG_ALPHA = 0.0;\n+\n   public static final String ML_GBDT_REG_LAMBDA = \"spark.gbdt.reg.lambda\";\n+\n   public static final double DEFAULT_ML_GBDT_REG_LAMBDA = 1.0;\n+\n   public static final String ML_GBDT_MAX_LEAF_WEIGHT = \"spark.gbdt.max.leaf.weight\";\n+\n   public static final double DEFAULT_ML_GBDT_MAX_LEAF_WEIGHT = 0.0;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
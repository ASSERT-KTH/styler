{
    "project_name": "graphfoundation-ongdb",
    "error_id": "494",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/494/ClientMessageEncoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/494/ClientMessageEncoder.java\nindex 88ba8a45356..e7e36159d64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/494/ClientMessageEncoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/494/ClientMessageEncoder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import io.netty.buffer.ByteBuf;\n@@ -32,62 +33,62 @@ import org.neo4j.causalclustering.messaging.marshalling.StringMarshal;\n  */\n public class ClientMessageEncoder extends MessageToByteEncoder<ServerMessage>\n {\n-    @Override\n-    protected void encode( ChannelHandlerContext ctx, ServerMessage msg, ByteBuf out )\n+  @Override\n+  protected void encode(ChannelHandlerContext ctx, ServerMessage msg, ByteBuf out)\n+  {\n+    msg.dispatch(new Encoder(out));\n+  }\n+\n+  class Encoder implements ServerMessageHandler\n+  {\n+    private final ByteBuf out;\n+\n+    Encoder(ByteBuf out)\n     {\n-        msg.dispatch( new Encoder( out ) );\n+      this.out = out;\n     }\n \n-    class Encoder implements ServerMessageHandler\n+    @Override\n+    public void handle(InitialMagicMessage magicMessage)\n     {\n-        private final ByteBuf out;\n-\n-        Encoder( ByteBuf out )\n-        {\n-            this.out = out;\n-        }\n-\n-        @Override\n-        public void handle( InitialMagicMessage magicMessage )\n-        {\n-            out.writeInt( InitialMagicMessage.MESSAGE_CODE );\n-            StringMarshal.marshal( out, magicMessage.magic() );\n-        }\n+      out.writeInt(InitialMagicMessage.MESSAGE_CODE);\n+      StringMarshal.marshal(out, magicMessage.magic());\n+    }\n \n-        @Override\n-        public void handle( ApplicationProtocolRequest applicationProtocolRequest )\n-        {\n-            out.writeInt( 1 );\n-            encodeProtocolRequest( applicationProtocolRequest, ByteBuf::writeInt );\n-        }\n+    @Override\n+    public void handle(ApplicationProtocolRequest applicationProtocolRequest)\n+    {\n+      out.writeInt(1);\n+      encodeProtocolRequest(applicationProtocolRequest, ByteBuf::writeInt);\n+    }\n \n-        @Override\n-        public void handle( ModifierProtocolRequest modifierProtocolRequest )\n-        {\n-            out.writeInt( 2 );\n-            encodeProtocolRequest( modifierProtocolRequest, StringMarshal::marshal );\n-        }\n+    @Override\n+    public void handle(ModifierProtocolRequest modifierProtocolRequest)\n+    {\n+      out.writeInt(2);\n+      encodeProtocolRequest(modifierProtocolRequest, StringMarshal::marshal);\n+    }\n \n-        @Override\n-        public void handle( SwitchOverRequest switchOverRequest )\n-        {\n-            out.writeInt( 3 );\n-            StringMarshal.marshal( out, switchOverRequest.protocolName() );\n-            out.writeInt( switchOverRequest.version() );\n-            out.writeInt( switchOverRequest.modifierProtocols().size() );\n-            switchOverRequest.modifierProtocols().forEach( pair ->\n-                    {\n-                        StringMarshal.marshal( out, pair.first() );\n-                        StringMarshal.marshal( out, pair.other() );\n-                    }\n-            );\n-        }\n+    @Override\n+    public void handle(SwitchOverRequest switchOverRequest)\n+    {\n+      out.writeInt(3);\n+      StringMarshal.marshal(out, switchOverRequest.protocolName());\n+      out.writeInt(switchOverRequest.version());\n+      out.writeInt(switchOverRequest.modifierProtocols().size());\n+      switchOverRequest.modifierProtocols().forEach(pair ->\n+          {\n+            StringMarshal.marshal(out, pair.first());\n+            StringMarshal.marshal(out, pair.other());\n+          }\n+      );\n+    }\n \n-        private <U extends Comparable<U>> void encodeProtocolRequest( BaseProtocolRequest<U> protocolRequest, BiConsumer<ByteBuf,U> writer )\n-        {\n-            StringMarshal.marshal( out, protocolRequest.protocolName() );\n-            out.writeInt( protocolRequest.versions().size() );\n-            protocolRequest.versions().forEach( version -> writer.accept( out, version) );\n-        }\n+    private <U extends Comparable<U>> void encodeProtocolRequest(BaseProtocolRequest<U> protocolRequest, BiConsumer<ByteBuf, U> writer)\n+    {\n+      StringMarshal.marshal(out, protocolRequest.protocolName());\n+      out.writeInt(protocolRequest.versions().size());\n+      protocolRequest.versions().forEach(version -> writer.accept(out, version));\n     }\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/494/ClientMessageEncoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/494/ClientMessageEncoder.java\nindex 88ba8a45356..f9058eaddd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/494/ClientMessageEncoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/494/ClientMessageEncoder.java\n@@ -76,11 +76,10 @@ public class ClientMessageEncoder extends MessageToByteEncoder<ServerMessage>\n             out.writeInt( switchOverRequest.version() );\n             out.writeInt( switchOverRequest.modifierProtocols().size() );\n             switchOverRequest.modifierProtocols().forEach( pair ->\n-                    {\n+{\n                         StringMarshal.marshal( out, pair.first() );\n                         StringMarshal.marshal( out, pair.other() );\n-                    }\n-            );\n+                    } );\n         }\n \n         private <U extends Comparable<U>> void encodeProtocolRequest( BaseProtocolRequest<U> protocolRequest, BiConsumer<ByteBuf,U> writer )\n@@ -90,4 +89,4 @@ public class ClientMessageEncoder extends MessageToByteEncoder<ServerMessage>\n             protocolRequest.versions().forEach( version -> writer.accept( out, version) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "ppati000-visualDFA",
    "error_id": "17",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "4",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " * \n * @author Anika Nietzer \n * \t\t\tImplementation of the Interface {@code Filter}. Used if\n *          all inherited methods should be filtered out.\n *\n */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/styler/17/StandardFilter.java\nindex 178e99595ec..065abcfa1a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/styler/17/StandardFilter.java\n@@ -20,7 +20,7 @@ public class StandardFilter extends Filter {\n \t * @return if the method passes the filter or not\n \t */\n \tpublic boolean filter(SootMethod method) {\n-\t    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n+     return !method.isJavaLibraryMethod() && super.filterTaint(method);\n \t}\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/intellij/17/StandardFilter.java\nindex 178e99595ec..4c4a4d9ce9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/intellij/17/StandardFilter.java\n@@ -3,24 +3,21 @@ package codeprocessor;\n import soot.SootMethod;\n \n /**\n- * \n- * @author Anika Nietzer \n- * \t\t\tImplementation of the Interface {@code Filter}. Used if\n- *          all inherited methods should be filtered out.\n- *\n+ * @author Anika Nietzer\n+ * Implementation of the Interface {@code Filter}. Used if\n+ * all inherited methods should be filtered out.\n  */\n public class StandardFilter extends Filter {\n \n-\t/**\n-\t * Filter for a given method, that decides if the method should be filtered\n-\t * out or not.\n-\t * \n-\t * @param method\n-\t *            signature of the method\n-\t * @return if the method passes the filter or not\n-\t */\n-\tpublic boolean filter(SootMethod method) {\n-\t    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n-\t}\n+  /**\n+   * Filter for a given method, that decides if the method should be filtered\n+   * out or not.\n+   *\n+   * @param method signature of the method\n+   * @return if the method passes the filter or not\n+   */\n+  public boolean filter(SootMethod method) {\n+    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n+  }\n \n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/naturalize/17/StandardFilter.java\nindex 178e99595ec..62c214b95c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/naturalize/17/StandardFilter.java\n@@ -11,7 +11,7 @@ import soot.SootMethod;\n  */\n public class StandardFilter extends Filter {\n \n-\t/**\n+    /**\n \t * Filter for a given method, that decides if the method should be filtered\n \t * out or not.\n \t * \n@@ -23,4 +23,4 @@ public class StandardFilter extends Filter {\n \t    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n \t}\n \n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/codebuff/17/StandardFilter.java\nindex 178e99595ec..4d8ee421635 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/codebuff/17/StandardFilter.java\n@@ -5,22 +5,25 @@ import soot.SootMethod;\n /**\n  * \n  * @author Anika Nietzer \n- * \t\t\tImplementation of the Interface {@code Filter}. Used if\n+ *          Implementation of the Interface {@code Filter}. Used if\n  *          all inherited methods should be filtered out.\n  *\n  */\n+\n+\n public class StandardFilter extends Filter {\n \n-\t/**\n-\t * Filter for a given method, that decides if the method should be filtered\n-\t * out or not.\n-\t * \n-\t * @param method\n-\t *            signature of the method\n-\t * @return if the method passes the filter or not\n-\t */\n-\tpublic boolean filter(SootMethod method) {\n-\t    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n-\t}\n+    /**\n+     * Filter for a given method, that decides if the method should be filtered\n+     * out or not.\n+     * \n+     * @param method\n+     *            signature of the method\n+     * @return if the method passes the filter or not\n+     */\n+\n+    public boolean filter(SootMethod method) {\n+        return !method.isJavaLibraryMethod() && super.filterTaint(method);\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/styler_random/17/StandardFilter.java\nindex 178e99595ec..065abcfa1a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/styler_random/17/StandardFilter.java\n@@ -20,7 +20,7 @@ public class StandardFilter extends Filter {\n \t * @return if the method passes the filter or not\n \t */\n \tpublic boolean filter(SootMethod method) {\n-\t    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n+     return !method.isJavaLibraryMethod() && super.filterTaint(method);\n \t}\n \n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/styler_three_grams/17/StandardFilter.java\nindex 178e99595ec..065abcfa1a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/errored/1/17/StandardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ppati000-visualDFA/styler_three_grams/17/StandardFilter.java\n@@ -20,7 +20,7 @@ public class StandardFilter extends Filter {\n \t * @return if the method passes the filter or not\n \t */\n \tpublic boolean filter(SootMethod method) {\n-\t    return !method.isJavaLibraryMethod() && super.filterTaint(method);\n+     return !method.isJavaLibraryMethod() && super.filterTaint(method);\n \t}\n \n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
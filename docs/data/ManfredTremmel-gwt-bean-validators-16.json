{
    "project_name": "ManfredTremmel-gwt-bean-validators",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "14",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * the License.\n */\npackage org.springframework.data.domain;\n\nimport org.springframework.lang.Nullable;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler/16/SliceImpl.java\nindex 271bfb8ddca..6b5a851201c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler/16/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/intellij/16/SliceImpl.java\nindex 271bfb8ddca..e73a2694e9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/intellij/16/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n@@ -34,9 +35,9 @@ public class SliceImpl<T> extends Chunk<T> {\n   /**\n    * Creates a new {@link Slice} with the given content and {@link Pageable}.\n    *\n-   * @param content the content of this {@link Slice}, must not be {@literal null}.\n+   * @param content  the content of this {@link Slice}, must not be {@literal null}.\n    * @param pageable the paging information, can be {@literal null}.\n-   * @param hasNext whether there's another slice following the current one.\n+   * @param hasNext  whether there's another slice following the current one.\n    */\n   public SliceImpl(final List<T> content, final Pageable pageable, final boolean hasNext) {\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/naturalize/16/SliceImpl.java\nindex 271bfb8ddca..3a9df78e2ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/naturalize/16/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n@@ -39,8 +40,7 @@ public class SliceImpl<T> extends Chunk<T> {\n    * @param hasNext whether there's another slice following the current one.\n    */\n   public SliceImpl(final List<T> content, final Pageable pageable, final boolean hasNext) {\n-\n-    super(content, pageable);\n+  super(content, pageable);\n \n     this.hasNext = hasNext;\n     this.pageable = pageable;\n@@ -85,8 +85,7 @@ public class SliceImpl<T> extends Chunk<T> {\n    */\n   @Override\n   public String toString() {\n-\n-    String contentType = \"UNKNOWN\";\n+  String contentType = \"UNKNOWN\";\n     final List<T> content = getContent();\n \n     if (content.size() > 0) {\n@@ -124,12 +123,11 @@ public class SliceImpl<T> extends Chunk<T> {\n    */\n   @Override\n   public int hashCode() {\n-\n-    int result = 17;\n+  int result = 17;\n \n     result += 31 * (this.hasNext ? 1 : 0);\n     result += 31 * super.hashCode();\n \n     return result;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/codebuff/16/SliceImpl.java\nindex 271bfb8ddca..bf2bbbd5a41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/codebuff/16/SliceImpl.java\n@@ -14,7 +14,6 @@\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n-\n import java.util.List;\n import java.util.function.Function;\n \n@@ -24,11 +23,17 @@ import java.util.function.Function;\n  * @author Oliver Gierke\n  * @since 1.8\n  */\n+\n+\n public class SliceImpl<T> extends Chunk<T> {\n \n+\n   private static final long serialVersionUID = 867755909294344406L;\n \n+\n   private final boolean hasNext;\n+\n+\n   private final Pageable pageable;\n \n   /**\n@@ -38,10 +43,11 @@ public class SliceImpl<T> extends Chunk<T> {\n    * @param pageable the paging information, can be {@literal null}.\n    * @param hasNext whether there's another slice following the current one.\n    */\n-  public SliceImpl(final List<T> content, final Pageable pageable, final boolean hasNext) {\n \n-    super(content, pageable);\n \n+  public SliceImpl(final List<T> content, final Pageable pageable,\n+                            final boolean hasNext) {\n+    super(content, pageable);\n     this.hasNext = hasNext;\n     this.pageable = pageable;\n   }\n@@ -52,6 +58,8 @@ public class SliceImpl<T> extends Chunk<T> {\n    *\n    * @param content must not be {@literal null}.\n    */\n+\n+\n   public SliceImpl(final List<T> content) {\n     this(content, Pageable.unpaged(), false);\n   }\n@@ -61,6 +69,7 @@ public class SliceImpl<T> extends Chunk<T> {\n    *\n    * @see org.springframework.data.domain.Slice#hasNext()\n    */\n+\n   @Override\n   public boolean hasNext() {\n     return this.hasNext;\n@@ -73,6 +82,7 @@ public class SliceImpl<T> extends Chunk<T> {\n    * org.springframework.data.domain.Slice#transform(org.springframework.core.convert.converter.\n    * Converter)\n    */\n+\n   @Override\n   public <U> Slice<U> map(final Function<? super T, ? extends U> converter) {\n     return new SliceImpl<>(this.getConvertedContent(converter), this.pageable, this.hasNext);\n@@ -83,17 +93,16 @@ public class SliceImpl<T> extends Chunk<T> {\n    *\n    * @see java.lang.Object#toString()\n    */\n+\n   @Override\n   public String toString() {\n-\n     String contentType = \"UNKNOWN\";\n     final List<T> content = getContent();\n-\n     if (content.size() > 0) {\n       contentType = content.get(0).getClass().getName();\n     }\n-\n-    return \"Slice \" + getNumber() + \" containing \" + contentType + \" instances\";\n+    return \"Slice \" + getNumber()\n+    + \" containing \" + contentType + \" instances\";\n   }\n \n   /*\n@@ -101,19 +110,16 @@ public class SliceImpl<T> extends Chunk<T> {\n    *\n    * @see java.lang.Object#equals(java.lang.Object)\n    */\n+\n   @Override\n   public boolean equals(@Nullable final Object obj) {\n-\n     if (this == obj) {\n       return true;\n     }\n-\n     if (!(obj instanceof SliceImpl<?>)) {\n       return false;\n     }\n-\n     final SliceImpl<?> that = (SliceImpl<?>) obj;\n-\n     return this.hasNext == that.hasNext && super.equals(obj);\n   }\n \n@@ -122,14 +128,12 @@ public class SliceImpl<T> extends Chunk<T> {\n    *\n    * @see java.lang.Object#hashCode()\n    */\n+\n   @Override\n   public int hashCode() {\n-\n     int result = 17;\n-\n     result += 31 * (this.hasNext ? 1 : 0);\n     result += 31 * super.hashCode();\n-\n     return result;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler_random/16/SliceImpl.java\nindex 271bfb8ddca..6b5a851201c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler_random/16/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler_three_grams/16/SliceImpl.java\nindex 271bfb8ddca..6b5a851201c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/16/SliceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler_three_grams/16/SliceImpl.java\n@@ -11,6 +11,7 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\n  * the License.\n  */\n+\n package org.springframework.data.domain;\n \n import org.springframework.lang.Nullable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
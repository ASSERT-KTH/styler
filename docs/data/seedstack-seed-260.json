{
    "project_name": "seedstack-seed",
    "error_id": "260",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.seed.crypto;\n\n/**\n * Support for creating a hash and validating passwords.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler/260/HashingService.java\nindex 504fb269f99..26aeb8ba06e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler/260/HashingService.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.crypto;\n \n /**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/intellij/260/HashingService.java\nindex 504fb269f99..26aeb8ba06e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/intellij/260/HashingService.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.crypto;\n \n /**\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "14",
                    "column": "35",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 21.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "44",
                    "column": "67",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/codebuff/260/HashingService.java\nindex 504fb269f99..cb56f98bc31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/codebuff/260/HashingService.java\n@@ -11,24 +11,21 @@ package org.seedstack.seed.crypto;\n  * Support for creating a hash and validating passwords.\n  * When creating a hash from a string or char[], a random salt will be generated and\n  * given with the hash through a {@link Hash} object.\n- */\n-public interface HashingService {\n+ */public interface HashingService{\n \n     /**\n      * Creates a hash from a string.\n      *\n      * @param toHash the String to hash.\n      * @return a {@link Hash} giving the hash of the String and the Salt used.\n-     */\n-    Hash createHash(String toHash);\n+     */Hash createHash(String toHash);\n \n     /**\n      * Creates a hash from a char[]. This method can be convenient as passwords are often represented in java as char[].\n      *\n      * @param toHash the char[] to hash.\n      * @return a {@link Hash} giving the hash of the char[] and the Salt used.\n-     */\n-    Hash createHash(char[] toHash);\n+     */Hash createHash(char[ ]toHash);\n \n     /**\n      * Validates a password using a hash.\n@@ -36,8 +33,7 @@ public interface HashingService {\n      * @param password    the password to check.\n      * @param correctHash the hash of the valid password.\n      * @return true if the password is correct, false if not.\n-     */\n-    boolean validatePassword(char[] password, Hash correctHash);\n+     */boolean validatePassword(char[ ]password,Hash correctHash);\n \n     /**\n      * Validates a password using a hash.\n@@ -45,6 +41,4 @@ public interface HashingService {\n      * @param password    the password to check.\n      * @param correctHash the hash of the valid password.\n      * @return true if the password is correct, false if not.\n-     */\n-    boolean validatePassword(String password, Hash correctHash);\n-}\n\\ No newline at end of file\n+     */boolean validatePassword(String password,Hash correctHash);}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "'INTERFACE_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler_random/260/HashingService.java\nindex 504fb269f99..1020c74d2dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler_random/260/HashingService.java\n@@ -5,9 +5,8 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.seed.crypto;\n \n-/**\n+package org.seedstack.seed.crypto;/**\n  * Support for creating a hash and validating passwords.\n  * When creating a hash from a string or char[], a random salt will be generated and\n  * given with the hash through a {@link Hash} object.\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler_three_grams/260/HashingService.java\nindex 504fb269f99..26aeb8ba06e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/260/HashingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler_three_grams/260/HashingService.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.crypto;\n \n /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
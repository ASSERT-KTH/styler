{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "51",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "              System.out.println(\n                  String.format(\n                      \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                      data.getEntityDescriptor(),\n                      data.getAttributeDescriptor(),\n                      data.getKey(),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/37/StdoutStorage.java\nindex 0d1420d1b77..d3ccafd1d25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/37/StdoutStorage.java\n@@ -48,7 +48,7 @@ public class StdoutStorage implements DataAccessorFactory {\n             public void write(StreamElement data, CommitCallback callback) {\n               System.out.println(\n                   String.format(\n-                      \"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                  \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                       data.getEntityDescriptor(),\n                       data.getAttributeDescriptor(),\n                       data.getKey(),\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/37/StdoutStorage.java\nindex 0d1420d1b77..e497c634e96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/37/StdoutStorage.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.core;\n \n import cz.o2.proxima.annotations.Stable;\n@@ -33,7 +34,8 @@ public class StdoutStorage implements DataAccessorFactory {\n \n     private static final long serialVersionUID = 1L;\n     private final EntityDescriptor entity;\n-    @Getter private final URI uri;\n+    @Getter\n+    private final URI uri;\n \n     public StdoutDataAccessor(EntityDescriptor entity, URI uri) {\n       this.entity = entity;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/37/StdoutStorage.java\nindex 0d1420d1b77..d5c86f37133 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/37/StdoutStorage.java\n@@ -44,7 +44,8 @@ public class StdoutStorage implements DataAccessorFactory {\n     public Optional<AttributeWriterBase> getWriter(Context context) {\n       return Optional.of(\n           new AbstractOnlineAttributeWriter(entity, uri) {\n-            @Override\n+\n+  @Override\n             public void write(StreamElement data, CommitCallback callback) {\n               System.out.println(\n                   String.format(\n@@ -53,7 +54,7 @@ public class StdoutStorage implements DataAccessorFactory {\n                       data.getAttributeDescriptor(),\n                       data.getKey(),\n                       data.getValue().length));\n-              callback.commit(true, null);\n+callback.commit(true, null);\n             }\n \n             @Override\n@@ -75,4 +76,4 @@ public class StdoutStorage implements DataAccessorFactory {\n \n     return new StdoutDataAccessor(entity, uri);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "44",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "column": "59",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/37/StdoutStorage.java\nindex 0d1420d1b77..851ee7f142b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/37/StdoutStorage.java\n@@ -24,15 +24,17 @@ import java.util.Optional;\n import lombok.Getter;\n \n /** Dummy storage printing data to stdout. */\n+\n+\n @Stable\n public class StdoutStorage implements DataAccessorFactory {\n \n   private static final long serialVersionUID = 1L;\n-\n   private static class StdoutDataAccessor implements DataAccessor {\n \n     private static final long serialVersionUID = 1L;\n     private final EntityDescriptor entity;\n+\n     @Getter private final URI uri;\n \n     public StdoutDataAccessor(EntityDescriptor entity, URI uri) {\n@@ -42,37 +44,35 @@ public class StdoutStorage implements DataAccessorFactory {\n \n     @Override\n     public Optional<AttributeWriterBase> getWriter(Context context) {\n-      return Optional.of(\n-          new AbstractOnlineAttributeWriter(entity, uri) {\n-            @Override\n-            public void write(StreamElement data, CommitCallback callback) {\n-              System.out.println(\n-                  String.format(\n-                      \"Writing entity %s to attribute %s with key %s and value of size %d\",\n-                      data.getEntityDescriptor(),\n-                      data.getAttributeDescriptor(),\n-                      data.getKey(),\n-                      data.getValue().length));\n-              callback.commit(true, null);\n-            }\n+      return Optional.of(new AbstractOnlineAttributeWriter(entity, uri) {\n+\n+                           @Override\n+                           public void write(StreamElement data, CommitCallback callback) {\n+                             System.out.println(String.format(\"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                                                              data.getEntityDescriptor(),\n+                                                              data.getAttributeDescriptor(),\n+                                                              data.getKey(),\n+                                                              data.getValue().length));\n+                             callback.commit(true, null);\n+                           }\n \n-            @Override\n-            public OnlineAttributeWriter.Factory<?> asFactory() {\n-              return repo -> StdoutDataAccessor.this.getWriter(context).get().online();\n-            }\n-          });\n+                           @Override\n+                           public OnlineAttributeWriter.Factory<?> asFactory() {\n+                             return repo -> StdoutDataAccessor.this.getWriter(context)\n+                                                                   .get()\n+                                                                   .online();\n+                           }\n+                         });\n     }\n   }\n \n   @Override\n   public Accept accepts(URI uri) {\n-    return uri.getScheme().equals(\"stdout\") ? Accept.ACCEPT : Accept.REJECT;\n+    return uri.getScheme().equals(\"stdout\")? Accept.ACCEPT: Accept.REJECT;\n   }\n \n   @Override\n-  public DataAccessor createAccessor(\n-      DirectDataOperator op, EntityDescriptor entity, URI uri, Map<String, Object> cfg) {\n-\n+  public DataAccessor createAccessor(DirectDataOperator op, EntityDescriptor entity, URI uri, Map<String, Object> cfg) {\n     return new StdoutDataAccessor(entity, uri);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/37/StdoutStorage.java\nindex 0d1420d1b77..d3ccafd1d25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/37/StdoutStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/37/StdoutStorage.java\n@@ -48,7 +48,7 @@ public class StdoutStorage implements DataAccessorFactory {\n             public void write(StreamElement data, CommitCallback callback) {\n               System.out.println(\n                   String.format(\n-                      \"Writing entity %s to attribute %s with key %s and value of size %d\",\n+                  \"Writing entity %s to attribute %s with key %s and value of size %d\",\n                       data.getEntityDescriptor(),\n                       data.getAttributeDescriptor(),\n                       data.getKey(),\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
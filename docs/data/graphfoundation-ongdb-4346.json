{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4346",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4346/CustomStatusType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4346/CustomStatusType.java\nindex f69df7508df..7329a9f7692 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4346/CustomStatusType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4346/CustomStatusType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.web;\n \n import javax.ws.rs.core.Response;\n@@ -25,54 +26,54 @@ import static javax.ws.rs.core.Response.Status.Family;\n \n public class CustomStatusType implements Response.StatusType\n {\n-    public static final Response.StatusType UNPROCESSABLE = new CustomStatusType( 422, \"Unprocessable Entity\" );\n+  public static final Response.StatusType UNPROCESSABLE = new CustomStatusType(422, \"Unprocessable Entity\");\n \n-    private final int code;\n-    private final String reason;\n-    private final Family family;\n+  private final int code;\n+  private final String reason;\n+  private final Family family;\n \n-    public CustomStatusType( int code, String reason )\n+  public CustomStatusType(int code, String reason)\n+  {\n+    this.code = code;\n+    this.reason = reason;\n+    switch (code / 100)\n     {\n-        this.code = code;\n-        this.reason = reason;\n-        switch ( code / 100 )\n-        {\n-        case 1:\n-            this.family = Family.INFORMATIONAL;\n-            break;\n-        case 2:\n-            this.family = Family.SUCCESSFUL;\n-            break;\n-        case 3:\n-            this.family = Family.REDIRECTION;\n-            break;\n-        case 4:\n-            this.family = Family.CLIENT_ERROR;\n-            break;\n-        case 5:\n-            this.family = Family.SERVER_ERROR;\n-            break;\n-        default:\n-            this.family = Family.OTHER;\n-            break;\n-        }\n+      case 1:\n+        this.family = Family.INFORMATIONAL;\n+        break;\n+      case 2:\n+        this.family = Family.SUCCESSFUL;\n+        break;\n+      case 3:\n+        this.family = Family.REDIRECTION;\n+        break;\n+      case 4:\n+        this.family = Family.CLIENT_ERROR;\n+        break;\n+      case 5:\n+        this.family = Family.SERVER_ERROR;\n+        break;\n+      default:\n+        this.family = Family.OTHER;\n+        break;\n     }\n+  }\n \n-    @Override\n-    public int getStatusCode()\n-    {\n-        return code;\n-    }\n+  @Override\n+  public int getStatusCode()\n+  {\n+    return code;\n+  }\n \n-    @Override\n-    public Family getFamily()\n-    {\n-        return family;\n-    }\n+  @Override\n+  public Family getFamily()\n+  {\n+    return family;\n+  }\n \n-    @Override\n-    public String getReasonPhrase()\n-    {\n-        return reason;\n-    }\n+  @Override\n+  public String getReasonPhrase()\n+  {\n+    return reason;\n+  }\n }\n",
            "diff_size": 49
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4346/CustomStatusType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4346/CustomStatusType.java\nindex f69df7508df..623a15ebfee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4346/CustomStatusType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4346/CustomStatusType.java\n@@ -75,4 +75,4 @@ public class CustomStatusType implements Response.StatusType\n     {\n         return reason;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
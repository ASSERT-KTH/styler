{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "561",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.adapter.deferred.queue;\n\nimport java.io.Serializable;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/561/DeferredQueueException.java\nindex f13e782179b..313636dfbcd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/561/DeferredQueueException.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapter.deferred.queue;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/561/DeferredQueueException.java\nindex f13e782179b..c6e886e48f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/561/DeferredQueueException.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapter.deferred.queue;\n \n import java.io.Serializable;\n@@ -35,40 +36,40 @@ import java.io.Serializable;\n  */\n public class DeferredQueueException extends Exception implements Serializable {\n \n-    private static final long serialVersionUID = -1029384875629102934L;\n+  private static final long serialVersionUID = -1029384875629102934L;\n \n-    /**\n-     * Default constructor.\n-     */\n-    public DeferredQueueException() {\n-        super();\n-    }\n+  /**\n+   * Default constructor.\n+   */\n+  public DeferredQueueException() {\n+    super();\n+  }\n \n-    /**\n-     * Constructor with an envloping exception.\n-     *\n-     * @param e The exception that caused this one.\n-     */\n-    public DeferredQueueException(Exception e) {\n-        super(e);\n-    }\n+  /**\n+   * Constructor with an envloping exception.\n+   *\n+   * @param e The exception that caused this one.\n+   */\n+  public DeferredQueueException(Exception e) {\n+    super(e);\n+  }\n \n-    /**\n-     * Constructor with the given exception and message.\n-     *\n-     * @param sMessage The message to place in the exception.\n-     * @param e The exception that triggered this one.\n-     */\n-    public DeferredQueueException(String sMessage, Exception e) {\n-        super(sMessage, e);\n-    }\n+  /**\n+   * Constructor with the given exception and message.\n+   *\n+   * @param sMessage The message to place in the exception.\n+   * @param e        The exception that triggered this one.\n+   */\n+  public DeferredQueueException(String sMessage, Exception e) {\n+    super(sMessage, e);\n+  }\n \n-    /**\n-     * Constructor with a given message.\n-     *\n-     * @param sMessage The message for the exception.\n-     */\n-    public DeferredQueueException(String sMessage) {\n-        super(sMessage);\n-    }\n+  /**\n+   * Constructor with a given message.\n+   *\n+   * @param sMessage The message for the exception.\n+   */\n+  public DeferredQueueException(String sMessage) {\n+    super(sMessage);\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/561/DeferredQueueException.java\nindex f13e782179b..0508a8421a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/561/DeferredQueueException.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapter.deferred.queue;\n \n import java.io.Serializable;\n@@ -71,4 +72,4 @@ public class DeferredQueueException extends Exception implements Serializable {\n     public DeferredQueueException(String sMessage) {\n         super(sMessage);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/561/DeferredQueueException.java\nindex f13e782179b..7be1a600b37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/561/DeferredQueueException.java\n@@ -33,15 +33,20 @@ import java.io.Serializable;\n  *\n  * @author richard.ettema\n  */\n-public class DeferredQueueException extends Exception implements Serializable {\n \n-    private static final long serialVersionUID = -1029384875629102934L;\n+\n+public class DeferredQueueException extends\n+    Exception implements Serializable {\n+\n+    private static final long serialVersionUID = -\n+                                                     1029384875629102934L;\n \n     /**\n      * Default constructor.\n      */\n+\n     public DeferredQueueException() {\n-        super();\n+                                    super();\n     }\n \n     /**\n@@ -49,8 +54,10 @@ public class DeferredQueueException extends Exception implements Serializable {\n      *\n      * @param e The exception that caused this one.\n      */\n+\n+\n     public DeferredQueueException(Exception e) {\n-        super(e);\n+                                               super(e);\n     }\n \n     /**\n@@ -59,8 +66,10 @@ public class DeferredQueueException extends Exception implements Serializable {\n      * @param sMessage The message to place in the exception.\n      * @param e The exception that triggered this one.\n      */\n+\n+\n     public DeferredQueueException(String sMessage, Exception e) {\n-        super(sMessage, e);\n+                                                                super(sMessage, e);\n     }\n \n     /**\n@@ -68,7 +77,10 @@ public class DeferredQueueException extends Exception implements Serializable {\n      *\n      * @param sMessage The message for the exception.\n      */\n+\n+\n     public DeferredQueueException(String sMessage) {\n-        super(sMessage);\n+                                                   super(sMessage);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/561/DeferredQueueException.java\nindex f13e782179b..313636dfbcd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/561/DeferredQueueException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/561/DeferredQueueException.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapter.deferred.queue;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
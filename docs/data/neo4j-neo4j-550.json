{
    "project_name": "neo4j-neo4j",
    "error_id": "550",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/550/GraphDatabaseInternalSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/550/GraphDatabaseInternalSettings.java\nindex 0a06dc99492..6ec0a28be4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/550/GraphDatabaseInternalSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/550/GraphDatabaseInternalSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import java.nio.file.Path;\n@@ -53,34 +54,34 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n {\n     @Internal\n     public static final Setting<Path> databases_root_path =\n-            newBuilder( \"unsupported.dbms.directories.databases.root\", PATH, Path.of( GraphDatabaseSettings.DEFAULT_DATABASES_ROOT_DIR_NAME ) )\n-                    .setDependency( GraphDatabaseSettings.data_directory ).immutable().build();\n+      newBuilder(\"unsupported.dbms.directories.databases.root\", PATH, Path.of(GraphDatabaseSettings.DEFAULT_DATABASES_ROOT_DIR_NAME))\n+        .setDependency(GraphDatabaseSettings.data_directory).immutable().build();\n \n     @Deprecated\n     @Internal\n-    @Description( \"Location where Neo4j keeps the logical transaction logs.\" )\n+    @Description(\"Location where Neo4j keeps the logical transaction logs.\")\n     public static final Setting<Path> logical_logs_location =\n-            newBuilder( \"dbms.directories.tx_log\", PATH, Path.of( GraphDatabaseSettings.DEFAULT_DATABASE_NAME ) ).setDependency( databases_root_path ).build();\n+      newBuilder(\"dbms.directories.tx_log\", PATH, Path.of(GraphDatabaseSettings.DEFAULT_DATABASE_NAME)).setDependency(databases_root_path).build();\n \n     @Internal\n-    @Description( \"Configure lucene to be in memory only, for test environment. This is set in code and should never be configured explicitly.\" )\n-    public static final Setting<Boolean> ephemeral_lucene = newBuilder( \"unsupported.dbms.lucene.ephemeral\", BOOL, false ).build();\n+    @Description(\"Configure lucene to be in memory only, for test environment. This is set in code and should never be configured explicitly.\")\n+    public static final Setting<Boolean> ephemeral_lucene = newBuilder(\"unsupported.dbms.lucene.ephemeral\", BOOL, false).build();\n \n     @Internal\n-    public static final Setting<String> lock_manager = newBuilder( \"unsupported.dbms.lock_manager\", STRING, \"\" ).build();\n+    public static final Setting<String> lock_manager = newBuilder(\"unsupported.dbms.lock_manager\", STRING, \"\").build();\n \n     @Internal\n-    public static final Setting<String> tracer = newBuilder( \"unsupported.dbms.tracer\", STRING, null ).build();\n+    public static final Setting<String> tracer = newBuilder(\"unsupported.dbms.tracer\", STRING, null).build();\n \n     @Internal\n-    @Description( \"Print out the effective Neo4j configuration after startup.\" )\n-    public static final Setting<Boolean> dump_configuration = newBuilder( \"unsupported.dbms.report_configuration\", BOOL, false ).build();\n+    @Description(\"Print out the effective Neo4j configuration after startup.\")\n+    public static final Setting<Boolean> dump_configuration = newBuilder(\"unsupported.dbms.report_configuration\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Specifies if the consistency checker should stop when number of observed inconsistencies exceed the threshold. \" +\n-            \"If the value is zero, all inconsistencies will be reported\" )\n+    @Description(\"Specifies if the consistency checker should stop when number of observed inconsistencies exceed the threshold. \" +\n+      \"If the value is zero, all inconsistencies will be reported\")\n     public static final Setting<Integer> consistency_checker_fail_fast_threshold =\n-            newBuilder( \"unsupported.consistency_checker.fail_fast_threshold\", INT, 0 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.consistency_checker.fail_fast_threshold\", INT, 0).addConstraint(min(0)).build();\n \n     public enum CypherRuntime\n     {\n@@ -88,9 +89,9 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n     }\n \n     @Internal\n-    @Description( \"Set this to specify the default runtime for the default language version.\" )\n+    @Description(\"Set this to specify the default runtime for the default language version.\")\n     public static final Setting<CypherRuntime> cypher_runtime =\n-            newBuilder( \"unsupported.cypher.runtime\", ofEnum( CypherRuntime.class ), CypherRuntime.DEFAULT ).build();\n+      newBuilder(\"unsupported.cypher.runtime\", ofEnum(CypherRuntime.class), CypherRuntime.DEFAULT).build();\n \n     public enum CypherExpressionEngine\n     {\n@@ -98,63 +99,63 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n     }\n \n     @Internal\n-    @Description( \"Choose the expression engine. The default is to only compile expressions that are hot, if 'COMPILED' \" +\n-            \"is chosen all expressions will be compiled directly and if 'INTERPRETED' is chosen expressions will \" +\n-            \"never be compiled.\" )\n+    @Description(\"Choose the expression engine. The default is to only compile expressions that are hot, if 'COMPILED' \" +\n+      \"is chosen all expressions will be compiled directly and if 'INTERPRETED' is chosen expressions will \" +\n+      \"never be compiled.\")\n     public static final Setting<CypherExpressionEngine> cypher_expression_engine =\n-            newBuilder( \"unsupported.cypher.expression_engine\", ofEnum( CypherExpressionEngine.class ), CypherExpressionEngine.DEFAULT ).build();\n+      newBuilder(\"unsupported.cypher.expression_engine\", ofEnum(CypherExpressionEngine.class), CypherExpressionEngine.DEFAULT).build();\n \n     @Internal\n-    @Description( \"Number of uses before an expression is considered for compilation\" )\n-    public static final Setting<Integer> cypher_expression_recompilation_limit = newBuilder( \"unsupported.cypher.expression_recompilation_limit\", INT, 10 )\n-            .addConstraint( min( 0 ) )\n-            .build();\n+    @Description(\"Number of uses before an expression is considered for compilation\")\n+    public static final Setting<Integer> cypher_expression_recompilation_limit = newBuilder(\"unsupported.cypher.expression_recompilation_limit\", INT, 10)\n+      .addConstraint(min(0))\n+      .build();\n \n     @Internal\n-    @Description( \"Enable tracing of compilation in cypher.\" )\n-    public static final Setting<Boolean> cypher_compiler_tracing = newBuilder( \"unsupported.cypher.compiler_tracing\", BOOL, false ).build();\n+    @Description(\"Enable tracing of compilation in cypher.\")\n+    public static final Setting<Boolean> cypher_compiler_tracing = newBuilder(\"unsupported.cypher.compiler_tracing\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Large databases might change slowly, and so to prevent queries from never being replanned \" +\n-            \"the divergence threshold set by cypher.statistics_divergence_threshold is configured to \" +\n-            \"shrink over time. \" +\n-            \"The algorithm used to manage this change is set by unsupported.cypher.replan_algorithm \" +\n-            \"and will cause the threshold to reach the value set here once the time since the previous \" +\n-            \"replanning has reached unsupported.cypher.target_replan_interval. \" +\n-            \"Setting this value to higher than the cypher.statistics_divergence_threshold will cause the \" +\n-            \"threshold to not decay over time.\" )\n+    @Description(\"Large databases might change slowly, and so to prevent queries from never being replanned \" +\n+      \"the divergence threshold set by cypher.statistics_divergence_threshold is configured to \" +\n+      \"shrink over time. \" +\n+      \"The algorithm used to manage this change is set by unsupported.cypher.replan_algorithm \" +\n+      \"and will cause the threshold to reach the value set here once the time since the previous \" +\n+      \"replanning has reached unsupported.cypher.target_replan_interval. \" +\n+      \"Setting this value to higher than the cypher.statistics_divergence_threshold will cause the \" +\n+      \"threshold to not decay over time.\")\n     public static final Setting<Double> query_statistics_divergence_target =\n-            newBuilder( \"unsupported.cypher.statistics_divergence_target\", DOUBLE, 0.10 ).addConstraint( range( 0.0, 1.0 ) ).build();\n+      newBuilder(\"unsupported.cypher.statistics_divergence_target\", DOUBLE, 0.10).addConstraint(range(0.0, 1.0)).build();\n \n     @Internal\n-    @Description( \"The threshold when a warning is generated if a label scan is done after a load csv where the label has no index\" )\n+    @Description(\"The threshold when a warning is generated if a label scan is done after a load csv where the label has no index\")\n     public static final Setting<Long> query_non_indexed_label_warning_threshold =\n-            newBuilder( \"unsupported.cypher.non_indexed_label_warning_threshold\", LONG, 10000L ).build();\n+      newBuilder(\"unsupported.cypher.non_indexed_label_warning_threshold\", LONG, 10000L).build();\n \n     @Internal\n-    @Description( \"To improve IDP query planning time, we can restrict the internal planning table size, \" +\n-            \"triggering compaction of candidate plans. The smaller the threshold the faster the planning, \" +\n-            \"but the higher the risk of sub-optimal plans.\" )\n+    @Description(\"To improve IDP query planning time, we can restrict the internal planning table size, \" +\n+      \"triggering compaction of candidate plans. The smaller the threshold the faster the planning, \" +\n+      \"but the higher the risk of sub-optimal plans.\")\n     public static final Setting<Integer> cypher_idp_solver_table_threshold =\n-            newBuilder( \"unsupported.cypher.idp_solver_table_threshold\", INT, 128 ).addConstraint( min( 16 ) ).build();\n+      newBuilder(\"unsupported.cypher.idp_solver_table_threshold\", INT, 128).addConstraint(min(16)).build();\n \n     @Internal\n-    @Description( \"To improve IDP query planning time, we can restrict the internal planning loop duration, \" +\n-            \"triggering more frequent compaction of candidate plans. The smaller the threshold the \" +\n-            \"faster the planning, but the higher the risk of sub-optimal plans.\" )\n+    @Description(\"To improve IDP query planning time, we can restrict the internal planning loop duration, \" +\n+      \"triggering more frequent compaction of candidate plans. The smaller the threshold the \" +\n+      \"faster the planning, but the higher the risk of sub-optimal plans.\")\n     public static final Setting<Long> cypher_idp_solver_duration_threshold =\n-            newBuilder( \"unsupported.cypher.idp_solver_duration_threshold\", LONG, 1000L ).addConstraint( min( 10L ) ).build();\n+      newBuilder(\"unsupported.cypher.idp_solver_duration_threshold\", LONG, 1000L).addConstraint(min(10L)).build();\n \n     @Internal\n-    @Description( \"Large databases might change slowly, and to prevent queries from never being replanned \" +\n-            \"the divergence threshold set by cypher.statistics_divergence_threshold is configured to \" +\n-            \"shrink over time. The algorithm used to manage this change is set by \" +\n-            \"unsupported.cypher.replan_algorithm and will cause the threshold to reach \" +\n-            \"the value set by unsupported.cypher.statistics_divergence_target once the time since the \" +\n-            \"previous replanning has reached the value set here. Setting this value to less than the \" +\n-            \"value of cypher.min_replan_interval will cause the threshold to not decay over time.\" )\n+    @Description(\"Large databases might change slowly, and to prevent queries from never being replanned \" +\n+      \"the divergence threshold set by cypher.statistics_divergence_threshold is configured to \" +\n+      \"shrink over time. The algorithm used to manage this change is set by \" +\n+      \"unsupported.cypher.replan_algorithm and will cause the threshold to reach \" +\n+      \"the value set by unsupported.cypher.statistics_divergence_target once the time since the \" +\n+      \"previous replanning has reached the value set here. Setting this value to less than the \" +\n+      \"value of cypher.min_replan_interval will cause the threshold to not decay over time.\")\n     public static final Setting<Duration> cypher_replan_interval_target =\n-            newBuilder( \"unsupported.cypher.target_replan_interval\", DURATION, Duration.ofHours( 7 ) ).build();\n+      newBuilder(\"unsupported.cypher.target_replan_interval\", DURATION, Duration.ofHours(7)).build();\n \n     public enum CypherReplanAlgorithm\n     {\n@@ -162,47 +163,47 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n     }\n \n     @Internal\n-    @Description( \"Large databases might change slowly, and to prevent queries from never being replanned \" +\n-            \"the divergence threshold set by cypher.statistics_divergence_threshold is configured to \" +\n-            \"shrink over time using the algorithm set here. This will cause the threshold to reach \" +\n-            \"the value set by unsupported.cypher.statistics_divergence_target once the time since the \" +\n-            \"previous replanning has reached the value set in unsupported.cypher.target_replan_interval. \" +\n-            \"Setting the algorithm to 'none' will cause the threshold to not decay over time.\" )\n+    @Description(\"Large databases might change slowly, and to prevent queries from never being replanned \" +\n+      \"the divergence threshold set by cypher.statistics_divergence_threshold is configured to \" +\n+      \"shrink over time using the algorithm set here. This will cause the threshold to reach \" +\n+      \"the value set by unsupported.cypher.statistics_divergence_target once the time since the \" +\n+      \"previous replanning has reached the value set in unsupported.cypher.target_replan_interval. \" +\n+      \"Setting the algorithm to 'none' will cause the threshold to not decay over time.\")\n     public static final Setting<CypherReplanAlgorithm> cypher_replan_algorithm =\n-            newBuilder( \"unsupported.cypher.replan_algorithm\", ofEnum( CypherReplanAlgorithm.class ), CypherReplanAlgorithm.DEFAULT ).build();\n+      newBuilder(\"unsupported.cypher.replan_algorithm\", ofEnum(CypherReplanAlgorithm.class), CypherReplanAlgorithm.DEFAULT).build();\n \n     @Internal\n-    @Description( \"Set this to enable monitors in the Cypher runtime.\" )\n+    @Description(\"Set this to enable monitors in the Cypher runtime.\")\n     public static final Setting<Boolean> cypher_enable_runtime_monitors =\n-            newBuilder( \"unsupported.cypher.enable_runtime_monitors\", BOOL, false ).build();\n+      newBuilder(\"unsupported.cypher.enable_runtime_monitors\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Enable tracing of pipelined runtime scheduler.\" )\n+    @Description(\"Enable tracing of pipelined runtime scheduler.\")\n     public static final Setting<Boolean> enable_pipelined_runtime_trace =\n-            newBuilder( \"unsupported.cypher.pipelined.enable_runtime_trace\", BOOL, false ).build();\n+      newBuilder(\"unsupported.cypher.pipelined.enable_runtime_trace\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Path to the pipelined runtime scheduler trace. If 'stdOut' and tracing is on, will print to std out.\" )\n+    @Description(\"Path to the pipelined runtime scheduler trace. If 'stdOut' and tracing is on, will print to std out.\")\n     public static final Setting<Path> pipelined_scheduler_trace_filename =\n-            newBuilder( \"unsupported.cypher.pipelined.runtime_trace_path\", PATH, Path.of( \"stdOut\" ) )\n-                    .setDependency( GraphDatabaseSettings.neo4j_home )\n-                    .immutable()\n-                    .build();\n+      newBuilder(\"unsupported.cypher.pipelined.runtime_trace_path\", PATH, Path.of(\"stdOut\"))\n+        .setDependency(GraphDatabaseSettings.neo4j_home)\n+        .immutable()\n+        .build();\n \n     @Internal\n-    @Description( \"The size of batches in the pipelined runtime for queries which work with few rows.\" )\n+    @Description(\"The size of batches in the pipelined runtime for queries which work with few rows.\")\n     public static final Setting<Integer> cypher_pipelined_batch_size_small =\n-            newBuilder( \"unsupported.cypher.pipelined.batch_size_small\", INT, 128 ).addConstraint( min( 1 ) ).build();\n+      newBuilder(\"unsupported.cypher.pipelined.batch_size_small\", INT, 128).addConstraint(min(1)).build();\n \n     @Internal\n-    @Description( \"The size of batches in the pipelined runtime for queries which work with many rows.\" )\n+    @Description(\"The size of batches in the pipelined runtime for queries which work with many rows.\")\n     public static final Setting<Integer> cypher_pipelined_batch_size_big =\n-            newBuilder( \"unsupported.cypher.pipelined.batch_size_big\", INT, 1024 ).addConstraint( min( 1 ) ).build();\n+      newBuilder(\"unsupported.cypher.pipelined.batch_size_big\", INT, 1024).addConstraint(min(1)).build();\n \n     @Internal\n-    @Description( \"Number of threads to allocate to Cypher worker threads for the parallel runtime. If set to 0, two workers will be started\" +\n-                  \" for every physical core in the system. If set to -1, no workers will be started and the parallel runtime cannot be used.\" )\n-    public static final Setting<Integer> cypher_worker_count = newBuilder( \"unsupported.cypher.number_of_workers\", INT, 0 ).build();\n+    @Description(\"Number of threads to allocate to Cypher worker threads for the parallel runtime. If set to 0, two workers will be started\" +\n+      \" for every physical core in the system. If set to -1, no workers will be started and the parallel runtime cannot be used.\")\n+    public static final Setting<Integer> cypher_worker_count = newBuilder(\"unsupported.cypher.number_of_workers\", INT, 0).build();\n \n     public enum CypherOperatorEngine\n     {\n@@ -210,14 +211,14 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n     }\n \n     @Internal\n-    @Description( \"For compiled execution, specialized code is generated and then executed. \" +\n-                  \"More optimizations such as operator fusion may apply. \" +\n-                  \"Operator fusion means that multiple operators such as for example \" +\n-                  \"AllNodesScan -> Filter -> ProduceResult can be compiled into a single specialized operator. \" +\n-                  \"This setting only applies to the pipelined and parallel runtime. \" +\n-                  \"Allowed values are \\\"default\\\" (the default, use compiled when applicable), \\\"compiled\\\" and \\\"interpreted\\\".\" )\n+    @Description(\"For compiled execution, specialized code is generated and then executed. \" +\n+      \"More optimizations such as operator fusion may apply. \" +\n+      \"Operator fusion means that multiple operators such as for example \" +\n+      \"AllNodesScan -> Filter -> ProduceResult can be compiled into a single specialized operator. \" +\n+      \"This setting only applies to the pipelined and parallel runtime. \" +\n+      \"Allowed values are \\\"default\\\" (the default, use compiled when applicable), \\\"compiled\\\" and \\\"interpreted\\\".\")\n     public static final Setting<CypherOperatorEngine> cypher_operator_engine =\n-            newBuilder( \"unsupported.cypher.pipelined.operator_engine\", ofEnum( CypherOperatorEngine.class ), CypherOperatorEngine.DEFAULT ).build();\n+      newBuilder(\"unsupported.cypher.pipelined.operator_engine\", ofEnum(CypherOperatorEngine.class), CypherOperatorEngine.DEFAULT).build();\n \n     public enum CypherPipelinedInterpretedPipesFallback\n     {\n@@ -225,125 +226,126 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n     }\n \n     @Internal\n-    @Description( \"Use interpreted pipes as a fallback for operators that do not have a specialized implementation in the pipelined runtime. \" +\n-                  \"Allowed values are \\\"disabled\\\", \\\"default\\\" (the default, use whitelisted_plans_only when applicable), \\\"whitelisted_plans_only\\\" \" +\n-                  \"and \\\"all\\\" (experimental). \" +\n-                  \"The default is to enable the use of a subset of whitelisted operators that are known to be supported, whereas \\\"all\\\" is an \" +\n-                  \"experimental option that enables the fallback to be used for all possible operators that are not known to be unsupported.\" )\n+    @Description(\"Use interpreted pipes as a fallback for operators that do not have a specialized implementation in the pipelined runtime. \" +\n+      \"Allowed values are \\\"disabled\\\", \\\"default\\\" (the default, use whitelisted_plans_only when applicable), \\\"whitelisted_plans_only\\\" \" +\n+      \"and \\\"all\\\" (experimental). \" +\n+      \"The default is to enable the use of a subset of whitelisted operators that are known to be supported, whereas \\\"all\\\" is an \" +\n+      \"experimental option that enables the fallback to be used for all possible operators that are not known to be unsupported.\")\n     public static final Setting<CypherPipelinedInterpretedPipesFallback> cypher_pipelined_interpreted_pipes_fallback =\n-            newBuilder( \"unsupported.cypher.pipelined_interpreted_pipes_fallback\", ofEnum( CypherPipelinedInterpretedPipesFallback.class ),\n-                    CypherPipelinedInterpretedPipesFallback.DEFAULT ).build();\n+      newBuilder(\"unsupported.cypher.pipelined_interpreted_pipes_fallback\", ofEnum(CypherPipelinedInterpretedPipesFallback.class),\n+        CypherPipelinedInterpretedPipesFallback.DEFAULT).build();\n \n     @Internal\n-    @Description( \"The maximum number of operator fusions over pipelines (i.e. where an operator that would normally be considered pipeline-breaking, \" +\n-                  \"e.g. expand), that is considered before a pipeline break is forced.\" )\n+    @Description(\"The maximum number of operator fusions over pipelines (i.e. where an operator that would normally be considered pipeline-breaking, \" +\n+      \"e.g. expand), that is considered before a pipeline break is forced.\")\n     public static final Setting<Integer> cypher_pipelined_operator_fusion_over_pipeline_limit =\n-            newBuilder( \"unsupported.cypher.pipelined.operator_fusion_over_pipeline_limit\", INT, 8 ).build();\n+      newBuilder(\"unsupported.cypher.pipelined.operator_fusion_over_pipeline_limit\", INT, 8).build();\n \n     public enum CypherParser\n     {\n         DEFAULT, PARBOILED, JAVACC\n     }\n+\n     @Internal\n-    @Description( \"The parser implementation to use for parsing cypher queries.\" )\n+    @Description(\"The parser implementation to use for parsing cypher queries.\")\n     public static final Setting<CypherParser> cypher_parser =\n-            newBuilder( \"unsupported.cypher.parser\", ofEnum( CypherParser.class ), CypherParser.DEFAULT ).build();\n+      newBuilder(\"unsupported.cypher.parser\", ofEnum(CypherParser.class), CypherParser.DEFAULT).build();\n \n     @Internal\n-    @Description( \"Max number of recent queries to collect in the data collector module. Will round down to the\" +\n-            \" nearest power of two. The default number (8192 query invocations) \" +\n-            \" was chosen as a trade-off between getting a useful amount of queries, and not\" +\n-            \" wasting too much heap. Even with a buffer full of unique queries, the estimated\" +\n-            \" footprint lies in tens of MBs. If the buffer is full of cached queries, the\" +\n-            \" retained size was measured to 265 kB. Setting this to 0 will disable data collection\" +\n-            \" of queries completely.\" )\n+    @Description(\"Max number of recent queries to collect in the data collector module. Will round down to the\" +\n+      \" nearest power of two. The default number (8192 query invocations) \" +\n+      \" was chosen as a trade-off between getting a useful amount of queries, and not\" +\n+      \" wasting too much heap. Even with a buffer full of unique queries, the estimated\" +\n+      \" footprint lies in tens of MBs. If the buffer is full of cached queries, the\" +\n+      \" retained size was measured to 265 kB. Setting this to 0 will disable data collection\" +\n+      \" of queries completely.\")\n     public static final Setting<Integer> data_collector_max_recent_query_count =\n-            newBuilder( \"unsupported.datacollector.max_recent_query_count\", INT, 8192 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.datacollector.max_recent_query_count\", INT, 8192).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"Sets the upper limit for how much of the query text that will be retained by the query collector.\" +\n-            \" For queries longer than the limit, only a prefix of size limit will be retained by the collector.\" +\n-            \" Lowering this value will reduce the memory footprint of collected query invocations under loads with\" +\n-            \" many queries with long query texts, which could occur for generated queries. The downside is that\" +\n-            \" on retrieving queries by `db.stats.retrieve`, queries longer than this max size would be returned\" +\n-            \" incomplete. Setting this to 0 will completely drop query texts from the collected queries.\" )\n+    @Description(\"Sets the upper limit for how much of the query text that will be retained by the query collector.\" +\n+      \" For queries longer than the limit, only a prefix of size limit will be retained by the collector.\" +\n+      \" Lowering this value will reduce the memory footprint of collected query invocations under loads with\" +\n+      \" many queries with long query texts, which could occur for generated queries. The downside is that\" +\n+      \" on retrieving queries by `db.stats.retrieve`, queries longer than this max size would be returned\" +\n+      \" incomplete. Setting this to 0 will completely drop query texts from the collected queries.\")\n     public static final Setting<Integer> data_collector_max_query_text_size =\n-            newBuilder( \"unsupported.datacollector.max_query_text_size\", INT, 10000 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.datacollector.max_query_text_size\", INT, 10000).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"Enable or disable the ability to create and drop databases.\" )\n+    @Description(\"Enable or disable the ability to create and drop databases.\")\n     public static final Setting<Boolean> block_create_drop_database =\n-            newBuilder( \"unsupported.dbms.block_create_drop_database\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.block_create_drop_database\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Enable or disable the ability to start and stop databases.\" )\n+    @Description(\"Enable or disable the ability to start and stop databases.\")\n     public static final Setting<Boolean> block_start_stop_database =\n-            newBuilder( \"unsupported.dbms.block_start_stop_database\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.block_start_stop_database\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"The maximum amount of time to wait for the database to become available, when starting a new transaction.\" )\n+    @Description(\"The maximum amount of time to wait for the database to become available, when starting a new transaction.\")\n     public static final Setting<Duration> transaction_start_timeout =\n-            newBuilder( \"unsupported.dbms.transaction_start_timeout\", DURATION, ofSeconds( 1 ) ).build();\n+      newBuilder(\"unsupported.dbms.transaction_start_timeout\", DURATION, ofSeconds(1)).build();\n \n     @Internal\n-    @Description( \"Location of the database scripts directory.\" )\n-    public static final Setting<Path> scripts_dir = newBuilder( \"unsupported.dbms.directories.scripts\", PATH, Path.of(\"scripts\" ) )\n-            .setDependency( GraphDatabaseSettings.neo4j_home )\n-            .immutable()\n-            .build();\n+    @Description(\"Location of the database scripts directory.\")\n+    public static final Setting<Path> scripts_dir = newBuilder(\"unsupported.dbms.directories.scripts\", PATH, Path.of(\"scripts\"))\n+      .setDependency(GraphDatabaseSettings.neo4j_home)\n+      .immutable()\n+      .build();\n \n     @Internal\n-    @Description( \"Name of file containing commands to be run during initialization of the system database. \" +\n-                  \"The file should exists in the scripts directory in neo4j home directory.\" )\n+    @Description(\"Name of file containing commands to be run during initialization of the system database. \" +\n+      \"The file should exists in the scripts directory in neo4j home directory.\")\n     public static final Setting<Path> system_init_file =\n-            newBuilder( \"dbms.init_file\", PATH, null ).immutable().setDependency( scripts_dir ).build();\n+      newBuilder(\"dbms.init_file\", PATH, null).immutable().setDependency(scripts_dir).build();\n \n     @Internal\n-    @Description( \"Maximum time to wait for active transaction completion when rotating counts store\" )\n+    @Description(\"Maximum time to wait for active transaction completion when rotating counts store\")\n     public static final Setting<Duration> counts_store_rotation_timeout =\n-            newBuilder( \"unsupported.dbms.counts_store_rotation_timeout\", DURATION, ofMinutes( 10 ) ).build();\n+      newBuilder(\"unsupported.dbms.counts_store_rotation_timeout\", DURATION, ofMinutes(10)).build();\n \n     @Internal\n-    @Description( \"Set the maximum number of threads that can concurrently be used to sample indexes. Zero means unrestricted.\" )\n+    @Description(\"Set the maximum number of threads that can concurrently be used to sample indexes. Zero means unrestricted.\")\n     public static final Setting<Integer> index_sampling_parallelism =\n-            newBuilder( \"unsupported.dbms.index_sampling.parallelism\", INT, 4 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.dbms.index_sampling.parallelism\", INT, 4).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"Set the maximum number of concurrent index populations across system. \" +\n-            \"This also limit the number of threads used to scan store. \" +\n-            \"Note that multiple indexes can be populated by a single index population if they were created in the same transaction. \" +\n-            \"Zero means unrestricted. \" )\n+    @Description(\"Set the maximum number of concurrent index populations across system. \" +\n+      \"This also limit the number of threads used to scan store. \" +\n+      \"Note that multiple indexes can be populated by a single index population if they were created in the same transaction. \" +\n+      \"Zero means unrestricted. \")\n     public static final Setting<Integer> index_population_parallelism =\n-            newBuilder( \"unsupported.dbms.index_population.parallelism\", INT, 4 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.dbms.index_population.parallelism\", INT, 4).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"Set the number of threads used for index population work. \" +\n-            \"Those threads execute individual subtasks provided by index population main threads, see unsupported.dbms.index_population.parallelism.\" +\n-            \"Zero means one thread per cpu core.\" )\n+    @Description(\"Set the number of threads used for index population work. \" +\n+      \"Those threads execute individual subtasks provided by index population main threads, see unsupported.dbms.index_population.parallelism.\" +\n+      \"Zero means one thread per cpu core.\")\n     public static final Setting<Integer> index_population_workers =\n-            newBuilder( \"unsupported.dbms.index_population.workers\", INT, 8 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.dbms.index_population.workers\", INT, 8).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"The default index provider used for managing full-text indexes. Only 'fulltext-1.0' is supported.\" )\n+    @Description(\"The default index provider used for managing full-text indexes. Only 'fulltext-1.0' is supported.\")\n     public static final Setting<String> default_fulltext_provider =\n-            newBuilder( \"unsupported.dbms.index.default_fulltext_provider\", STRING, \"fulltext-1.0\" ).build();\n+      newBuilder(\"unsupported.dbms.index.default_fulltext_provider\", STRING, \"fulltext-1.0\").build();\n \n     @Internal\n-    @Description( \"If `true`, Neo4j will abort recovery if any errors are encountered in the logical log. Setting \" +\n-            \"this to `false` will allow Neo4j to restore as much as possible from the corrupted log files and ignore \" +\n-            \"the rest, but, the integrity of the database might be compromised.\" )\n+    @Description(\"If `true`, Neo4j will abort recovery if any errors are encountered in the logical log. Setting \" +\n+      \"this to `false` will allow Neo4j to restore as much as possible from the corrupted log files and ignore \" +\n+      \"the rest, but, the integrity of the database might be compromised.\")\n     public static final Setting<Boolean> fail_on_corrupted_log_files =\n-            newBuilder(\"unsupported.dbms.tx_log.fail_on_corrupted_log_files\", BOOL, true ).build();\n+      newBuilder(\"unsupported.dbms.tx_log.fail_on_corrupted_log_files\", BOOL, true).build();\n \n     @Internal\n-    @Description( \"Specifies if engine should run cypher query based on a snapshot of accessed data. \" +\n-            \"Query will be restarted in case if concurrent modification of data will be detected.\" )\n-    public static final Setting<Boolean> snapshot_query = newBuilder( \"unsupported.dbms.query.snapshot\", BOOL, false ).build();\n+    @Description(\"Specifies if engine should run cypher query based on a snapshot of accessed data. \" +\n+      \"Query will be restarted in case if concurrent modification of data will be detected.\")\n+    public static final Setting<Boolean> snapshot_query = newBuilder(\"unsupported.dbms.query.snapshot\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Specifies number or retries that query engine will do to execute query based on stable accessed data snapshot before giving up.\" )\n+    @Description(\"Specifies number or retries that query engine will do to execute query based on stable accessed data snapshot before giving up.\")\n     public static final Setting<Integer> snapshot_query_retries =\n-            newBuilder( \"unsupported.dbms.query.snapshot.retries\", INT, 5 ).addConstraint( range( 1, Integer.MAX_VALUE ) ).build();\n+      newBuilder(\"unsupported.dbms.query.snapshot.retries\", INT, 5).addConstraint(range(1, Integer.MAX_VALUE)).build();\n \n     /**\n      * Block size properties values depends from selected record format.\n@@ -352,237 +354,237 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n      * defined value.\n      */\n     @Internal\n-    @Description( \"Specifies the block size for storing strings. This parameter is only honored when the store is \" +\n-            \"created, otherwise it is ignored. \" +\n-            \"Note that each character in a string occupies two bytes, meaning that e.g a block size of 120 will hold \" +\n-            \"a 60 character long string before overflowing into a second block. \" +\n-            \"Also note that each block carries a ~10B of overhead so record size on disk will be slightly larger \" +\n-            \"than the configured block size\" )\n+    @Description(\"Specifies the block size for storing strings. This parameter is only honored when the store is \" +\n+      \"created, otherwise it is ignored. \" +\n+      \"Note that each character in a string occupies two bytes, meaning that e.g a block size of 120 will hold \" +\n+      \"a 60 character long string before overflowing into a second block. \" +\n+      \"Also note that each block carries a ~10B of overhead so record size on disk will be slightly larger \" +\n+      \"than the configured block size\")\n     public static final Setting<Integer> string_block_size =\n-            newBuilder( \"unsupported.dbms.block_size.strings\", INT, 0 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.dbms.block_size.strings\", INT, 0).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"Specifies the block size for storing arrays. This parameter is only honored when the store is \" +\n-            \"created, otherwise it is ignored. \" +\n-            \"Also note that each block carries a ~10B of overhead so record size on disk will be slightly larger \" +\n-            \"than the configured block size\" )\n+    @Description(\"Specifies the block size for storing arrays. This parameter is only honored when the store is \" +\n+      \"created, otherwise it is ignored. \" +\n+      \"Also note that each block carries a ~10B of overhead so record size on disk will be slightly larger \" +\n+      \"than the configured block size\")\n     public static final Setting<Integer> array_block_size =\n-            newBuilder( \"unsupported.dbms.block_size.array_properties\", INT, 0 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.dbms.block_size.array_properties\", INT, 0).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"Specifies the block size for storing labels exceeding in-lined space in node record. \" +\n-            \"This parameter is only honored when the store is created, otherwise it is ignored. \" +\n-            \"Also note that each block carries a ~10B of overhead so record size on disk will be slightly larger \" +\n-            \"than the configured block size\" )\n+    @Description(\"Specifies the block size for storing labels exceeding in-lined space in node record. \" +\n+      \"This parameter is only honored when the store is created, otherwise it is ignored. \" +\n+      \"Also note that each block carries a ~10B of overhead so record size on disk will be slightly larger \" +\n+      \"than the configured block size\")\n     public static final Setting<Integer> label_block_size =\n-            newBuilder( \"unsupported.dbms.block_size.labels\", INT, 0 ).addConstraint( min( 0 ) ).build();\n+      newBuilder(\"unsupported.dbms.block_size.labels\", INT, 0).addConstraint(min(0)).build();\n \n     @Internal\n-    @Description( \"An identifier that uniquely identifies this graph database instance within this JVM. \" +\n-            \"Defaults to an auto-generated number depending on how many instance are started in this JVM.\" )\n-    public static final Setting<String> forced_kernel_id = newBuilder( \"unsupported.dbms.kernel_id\", STRING, null )\n-            .addConstraint( SettingConstraints.matches( \"[a-zA-Z0-9]*\", \"has to be a valid kernel identifier\" ) )\n-            .build();\n+    @Description(\"An identifier that uniquely identifies this graph database instance within this JVM. \" +\n+      \"Defaults to an auto-generated number depending on how many instance are started in this JVM.\")\n+    public static final Setting<String> forced_kernel_id = newBuilder(\"unsupported.dbms.kernel_id\", STRING, null)\n+      .addConstraint(SettingConstraints.matches(\"[a-zA-Z0-9]*\", \"has to be a valid kernel identifier\"))\n+      .build();\n \n     @Internal\n     public static final Setting<Duration> vm_pause_monitor_measurement_duration =\n-            newBuilder( \"unsupported.vm_pause_monitor.measurement_duration\", DURATION, ofMillis( 100 ) ).build();\n+      newBuilder(\"unsupported.vm_pause_monitor.measurement_duration\", DURATION, ofMillis(100)).build();\n \n     @Internal\n     public static final Setting<Duration> vm_pause_monitor_stall_alert_threshold =\n-            newBuilder( \"unsupported.vm_pause_monitor.stall_alert_threshold\", DURATION, ofMillis( 100 ) ).build();\n+      newBuilder(\"unsupported.vm_pause_monitor.stall_alert_threshold\", DURATION, ofMillis(100)).build();\n \n     @Internal\n-    @Description( \"Log format to use.\" )\n+    @Description(\"Log format to use.\")\n     public static final Setting<FormattedLogFormat> log_format =\n-            newBuilder( \"unsupported.dbms.logs.format\", ofEnum( FormattedLogFormat.class ), FormattedLogFormat.STANDARD_FORMAT ).build();\n+      newBuilder(\"unsupported.dbms.logs.format\", ofEnum(FormattedLogFormat.class), FormattedLogFormat.STANDARD_FORMAT).build();\n \n     @Internal\n-    @Description( \"Create a heap dump just before the end of each query execution. \" +\n-            \"The heap dump will be placed in log directory and the file name will contain the query id, to be correlated with an entry in the query log. \" +\n-            \"Only live objects will be included to minimize the file size. \" )\n+    @Description(\"Create a heap dump just before the end of each query execution. \" +\n+      \"The heap dump will be placed in log directory and the file name will contain the query id, to be correlated with an entry in the query log. \" +\n+      \"Only live objects will be included to minimize the file size. \")\n     public static final Setting<Boolean> log_queries_heap_dump_enabled =\n-            newBuilder( \"unsupported.dbms.logs.query.heap_dump_enabled\", BOOL, false ).dynamic().build();\n+      newBuilder(\"unsupported.dbms.logs.query.heap_dump_enabled\", BOOL, false).dynamic().build();\n \n     @Internal\n-    @Description( \"Specifies number of operations that batch inserter will try to group into one batch before \" +\n-            \"flushing data into underlying storage.\" )\n+    @Description(\"Specifies number of operations that batch inserter will try to group into one batch before \" +\n+      \"flushing data into underlying storage.\")\n     public static final Setting<Integer> batch_inserter_batch_size =\n-            newBuilder( \"unsupported.tools.batch_inserter.batch_size\", INT, 10000 ).build();\n+      newBuilder(\"unsupported.tools.batch_inserter.batch_size\", INT, 10000).build();\n \n     @Internal\n     public static final Setting<Path> auth_store =\n-            newBuilder( \"unsupported.dbms.security.auth_store.location\", PATH, null )\n-                    .setDependency( GraphDatabaseSettings.neo4j_home )\n-                    .immutable()\n-                    .build();\n+      newBuilder(\"unsupported.dbms.security.auth_store.location\", PATH, null)\n+        .setDependency(GraphDatabaseSettings.neo4j_home)\n+        .immutable()\n+        .build();\n \n     @Internal\n-    @Description( \"Whether to apply network level outbound network buffer based throttling\" )\n+    @Description(\"Whether to apply network level outbound network buffer based throttling\")\n     public static final Setting<Boolean> bolt_outbound_buffer_throttle =\n-            newBuilder( \"unsupported.dbms.bolt.outbound_buffer_throttle\", BOOL, true ).build();\n+      newBuilder(\"unsupported.dbms.bolt.outbound_buffer_throttle\", BOOL, true).build();\n \n     @Internal\n-    @Description( \"When the size (in bytes) of outbound network buffers, used by bolt's network layer, \" +\n-            \"grows beyond this value bolt channel will advertise itself as unwritable and will block \" +\n-            \"related processing thread until it becomes writable again.\" )\n+    @Description(\"When the size (in bytes) of outbound network buffers, used by bolt's network layer, \" +\n+      \"grows beyond this value bolt channel will advertise itself as unwritable and will block \" +\n+      \"related processing thread until it becomes writable again.\")\n     public static final Setting<Integer> bolt_outbound_buffer_throttle_high_water_mark =\n-            newBuilder( \"unsupported.dbms.bolt.outbound_buffer_throttle.high_watermark\", INT, (int) kibiBytes( 512 ) )\n-                    .addConstraint( range( (int) kibiBytes( 64 ), Integer.MAX_VALUE ) )\n-                    .build();\n+      newBuilder(\"unsupported.dbms.bolt.outbound_buffer_throttle.high_watermark\", INT, (int) kibiBytes(512))\n+        .addConstraint(range((int) kibiBytes(64), Integer.MAX_VALUE))\n+        .build();\n \n     @Internal\n-    @Description( \"When the size (in bytes) of outbound network buffers, previously advertised as unwritable, \" +\n-            \"gets below this value bolt channel will re-advertise itself as writable and blocked processing \" +\n-            \"thread will resume execution.\" )\n+    @Description(\"When the size (in bytes) of outbound network buffers, previously advertised as unwritable, \" +\n+      \"gets below this value bolt channel will re-advertise itself as writable and blocked processing \" +\n+      \"thread will resume execution.\")\n     public static final Setting<Integer> bolt_outbound_buffer_throttle_low_water_mark =\n-            newBuilder( \"unsupported.dbms.bolt.outbound_buffer_throttle.low_watermark\", INT, (int) kibiBytes( 128 ))\n-                    .addConstraint( range( (int) kibiBytes( 16 ), Integer.MAX_VALUE ) ).build();\n+      newBuilder(\"unsupported.dbms.bolt.outbound_buffer_throttle.low_watermark\", INT, (int) kibiBytes(128))\n+        .addConstraint(range((int) kibiBytes(16), Integer.MAX_VALUE)).build();\n \n     @Internal\n-    @Description( \"When the total time outbound network buffer based throttle lock is held exceeds this value, \" +\n-            \"the corresponding bolt channel will be aborted. Setting \" +\n-            \"this to 0 will disable this behaviour.\" )\n+    @Description(\"When the total time outbound network buffer based throttle lock is held exceeds this value, \" +\n+      \"the corresponding bolt channel will be aborted. Setting \" +\n+      \"this to 0 will disable this behaviour.\")\n     public static final Setting<Duration> bolt_outbound_buffer_throttle_max_duration =\n-            newBuilder( \"unsupported.dbms.bolt.outbound_buffer_throttle.max_duration\", DURATION, ofMinutes( 15 )  )\n-                    .addConstraint( any( min( ofSeconds( 30 ) ), is( Duration.ZERO )  ) )\n-                    .build();\n+      newBuilder(\"unsupported.dbms.bolt.outbound_buffer_throttle.max_duration\", DURATION, ofMinutes(15))\n+        .addConstraint(any(min(ofSeconds(30)), is(Duration.ZERO)))\n+        .build();\n \n     @Internal\n-    @Description( \"When the number of queued inbound messages grows beyond this value, reading from underlying \" +\n-            \"channel will be paused (no more inbound messages will be available) until queued number of \" +\n-            \"messages drops below the configured low watermark value.\" )\n+    @Description(\"When the number of queued inbound messages grows beyond this value, reading from underlying \" +\n+      \"channel will be paused (no more inbound messages will be available) until queued number of \" +\n+      \"messages drops below the configured low watermark value.\")\n     public static final Setting<Integer> bolt_inbound_message_throttle_high_water_mark =\n-            newBuilder( \"unsupported.dbms.bolt.inbound_message_throttle.high_watermark\", INT, 300 )\n-                    .addConstraint( range( 1, Integer.MAX_VALUE ) ).build();\n+      newBuilder(\"unsupported.dbms.bolt.inbound_message_throttle.high_watermark\", INT, 300)\n+        .addConstraint(range(1, Integer.MAX_VALUE)).build();\n \n     @Internal\n-    @Description( \"When the number of queued inbound messages, previously reached configured high watermark value, \" +\n-            \"drops below this value, reading from underlying channel will be enabled and any pending messages \" +\n-            \"will start queuing again.\" )\n+    @Description(\"When the number of queued inbound messages, previously reached configured high watermark value, \" +\n+      \"drops below this value, reading from underlying channel will be enabled and any pending messages \" +\n+      \"will start queuing again.\")\n     public static final Setting<Integer> bolt_inbound_message_throttle_low_water_mark =\n-            newBuilder( \"unsupported.dbms.bolt.inbound_message_throttle.low_watermark\", INT, 100 )\n-                    .addConstraint( range( 1, Integer.MAX_VALUE ) )\n-                    .build();\n+      newBuilder(\"unsupported.dbms.bolt.inbound_message_throttle.low_watermark\", INT, 100)\n+        .addConstraint(range(1, Integer.MAX_VALUE))\n+        .build();\n \n     @Internal\n-    public static final Setting<Boolean> netty_server_use_epoll = newBuilder( \"unsupported.dbms.bolt.netty_server_use_epoll\", BOOL, true ).build();\n+    public static final Setting<Boolean> netty_server_use_epoll = newBuilder(\"unsupported.dbms.bolt.netty_server_use_epoll\", BOOL, true).build();\n \n     @Internal\n     public static final Setting<Integer> netty_server_shutdown_quiet_period =\n-            newBuilder( \"unsupported.dbms.bolt.netty_server_shutdown_quiet_period\", INT, 5 ).build();\n+      newBuilder(\"unsupported.dbms.bolt.netty_server_shutdown_quiet_period\", INT, 5).build();\n \n     @Internal\n     public static final Setting<Duration> netty_server_shutdown_timeout =\n-            newBuilder( \"unsupported.dbms.bolt.netty_server_shutdown_timeout\", DURATION, ofSeconds( 15 ) ).build();\n+      newBuilder(\"unsupported.dbms.bolt.netty_server_shutdown_timeout\", DURATION, ofSeconds(15)).build();\n \n     @Internal\n     public static final Setting<Boolean> netty_message_merge_cumulator =\n-            newBuilder( \"unsupported.dbms.bolt.netty_message_merge_cumulator\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.bolt.netty_message_merge_cumulator\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Create an archive of an index before re-creating it if failing to load on startup.\" )\n+    @Description(\"Create an archive of an index before re-creating it if failing to load on startup.\")\n     public static final Setting<Boolean> archive_failed_index =\n-            newBuilder( \"unsupported.dbms.index.archive_failed\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.index.archive_failed\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Forces smaller ID cache, in order to preserve memory.\" )\n-    public static final Setting<Boolean> force_small_id_cache = newBuilder( \"unsupported.dbms.force_small_id_cache\", BOOL, Boolean.FALSE ).build();\n+    @Description(\"Forces smaller ID cache, in order to preserve memory.\")\n+    public static final Setting<Boolean> force_small_id_cache = newBuilder(\"unsupported.dbms.force_small_id_cache\", BOOL, Boolean.FALSE).build();\n \n     @Internal\n     public static final Setting<Boolean> consistency_check_on_apply =\n-            newBuilder( \"unsupported.dbms.storage.consistency_check_on_apply\", BOOL, Boolean.FALSE ).build();\n+      newBuilder(\"unsupported.dbms.storage.consistency_check_on_apply\", BOOL, Boolean.FALSE).build();\n \n     @Internal\n-    @Description( \"Time interval of inactivity after which a driver will be closed.\" )\n+    @Description(\"Time interval of inactivity after which a driver will be closed.\")\n     public static final Setting<Duration> routing_driver_idle_timeout =\n-            newBuilder( \"dbms.routing.driver.timeout\", DURATION, ofMinutes( 1 ) ).build();\n+      newBuilder(\"dbms.routing.driver.timeout\", DURATION, ofMinutes(1)).build();\n \n     @Internal\n-    @Description( \"Time interval between driver idleness check.\" )\n+    @Description(\"Time interval between driver idleness check.\")\n     public static final Setting<Duration> routing_driver_idle_check_interval =\n-            newBuilder( \"dbms.routing.driver.idle_check_interval\", DURATION, ofMinutes( 1 ) ).build();\n+      newBuilder(\"dbms.routing.driver.idle_check_interval\", DURATION, ofMinutes(1)).build();\n \n     @Internal\n-    @Description( \"Number of event loops used by drivers. Event loops are shard between drivers, so this is the total number of event loops created.\" )\n-    @DocumentedDefaultValue( \"Number of available processors\" )\n+    @Description(\"Number of event loops used by drivers. Event loops are shard between drivers, so this is the total number of event loops created.\")\n+    @DocumentedDefaultValue(\"Number of available processors\")\n     public static final Setting<Integer> routing_driver_event_loop_count =\n-            newBuilder( \"dbms.routing.driver.event_loop_count\", INT, Runtime.getRuntime().availableProcessors() ).build();\n+      newBuilder(\"dbms.routing.driver.event_loop_count\", INT, Runtime.getRuntime().availableProcessors()).build();\n \n     @Internal\n-    @Description( \"Enables logging of leaked driver session\" )\n+    @Description(\"Enables logging of leaked driver session\")\n     public static final Setting<Boolean> routing_driver_log_leaked_sessions =\n-            newBuilder( \"dbms.routing.driver.logging.leaked_sessions\", BOOL, false ).build();\n+      newBuilder(\"dbms.routing.driver.logging.leaked_sessions\", BOOL, false).build();\n \n     @Internal\n-    @Description( \"Setting this to true will limit who execute the `dbms.upgrade` procedure. \" +\n-                  \"A user and role with the name specified by unsupported.dbms.upgrade_procedure_username will be created on startup/upgrade. \" +\n-                  \"This user will only be able to execute the `dbms.upgrade` procedure and nothing else. \" +\n-                  \"The only administration command that will be executable on this user is `ALTER CURRENT USER SET PASSWORD FROM old_password TO password`.\" +\n-                  \"No administration commands will be executable on the role.\" )\n+    @Description(\"Setting this to true will limit who execute the `dbms.upgrade` procedure. \" +\n+      \"A user and role with the name specified by unsupported.dbms.upgrade_procedure_username will be created on startup/upgrade. \" +\n+      \"This user will only be able to execute the `dbms.upgrade` procedure and nothing else. \" +\n+      \"The only administration command that will be executable on this user is `ALTER CURRENT USER SET PASSWORD FROM old_password TO password`.\" +\n+      \"No administration commands will be executable on the role.\")\n     public static final Setting<Boolean> restrict_upgrade =\n-            newBuilder( \"unsupported.dbms.upgrade_restriction_enabled\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.upgrade_restriction_enabled\", BOOL, false).build();\n \n-    @Description( \"Specifies at which file size the checkpoint log will auto-rotate. Minimum accepted value is 1 KiB. \" )\n+    @Description(\"Specifies at which file size the checkpoint log will auto-rotate. Minimum accepted value is 1 KiB. \")\n     public static final Setting<Long> checkpoint_logical_log_rotation_threshold =\n-            newBuilder( \"unsupported.dbms.checkpoint_log.rotation.size\", BYTES, mebiBytes( 1 ) ).addConstraint( min( kibiBytes( 1 ) ) ).build();\n+      newBuilder(\"unsupported.dbms.checkpoint_log.rotation.size\", BYTES, mebiBytes(1)).addConstraint(min(kibiBytes(1))).build();\n \n-    @Description( \"Number of checkpoint logs files to keep.\" )\n+    @Description(\"Number of checkpoint logs files to keep.\")\n     public static final Setting<Integer> checkpoint_logical_log_keep_threshold =\n-            newBuilder( \"unsupported.dbms.checkpoint_log.rotation.keep.files\", INT, 3 ).addConstraint( range( 2, 100 ) ).build();\n+      newBuilder(\"unsupported.dbms.checkpoint_log.rotation.keep.files\", INT, 3).addConstraint(range(2, 100)).build();\n \n     @Internal\n-    @Description( \"The name of the user that should be allowed to call dbms.upgrade when `unsupported.dbms.upgrade_restriction_enabled` is enabled\" )\n+    @Description(\"The name of the user that should be allowed to call dbms.upgrade when `unsupported.dbms.upgrade_restriction_enabled` is enabled\")\n     public static final Setting<String> upgrade_username =\n-            newBuilder( \"unsupported.dbms.upgrade_procedure_username\", STRING, \"upgrade_user\" ).build();\n+      newBuilder(\"unsupported.dbms.upgrade_procedure_username\", STRING, \"upgrade_user\").build();\n \n     @Internal\n-    @Description( \"Whether or not to dump system and database diagnostics. This takes a non-negligible amount of time to do and therefore \" +\n-            \"test databases can disable this to reduce startup times\" )\n-    public static final Setting<Boolean> dump_diagnostics = newBuilder( \"unsupported.dbms.dump_diagnostics\", BOOL, Boolean.TRUE ).build();\n+    @Description(\"Whether or not to dump system and database diagnostics. This takes a non-negligible amount of time to do and therefore \" +\n+      \"test databases can disable this to reduce startup times\")\n+    public static final Setting<Boolean> dump_diagnostics = newBuilder(\"unsupported.dbms.dump_diagnostics\", BOOL, Boolean.TRUE).build();\n \n     // === SETTINGS FROM FEATURE TOGGLES ===\n \n     @Internal\n-    public static final Setting<Boolean> track_tx_statement_close = newBuilder( \"unsupported.dbms.debug.track_tx_statement_close\", BOOL, false ).build();\n+    public static final Setting<Boolean> track_tx_statement_close = newBuilder(\"unsupported.dbms.debug.track_tx_statement_close\", BOOL, false).build();\n \n     @Internal\n-    public static final Setting<Boolean> trace_tx_statements = newBuilder( \"unsupported.dbms.debug.trace_tx_statement\", BOOL, false ).build();\n+    public static final Setting<Boolean> trace_tx_statements = newBuilder(\"unsupported.dbms.debug.trace_tx_statement\", BOOL, false).build();\n \n     @Internal\n-    public static final Setting<Boolean> track_cursor_close = newBuilder( \"unsupported.dbms.debug.track_cursor_close\", BOOL, false ).build();\n+    public static final Setting<Boolean> track_cursor_close = newBuilder(\"unsupported.dbms.debug.track_cursor_close\", BOOL, false).build();\n \n     @Internal\n-    public static final Setting<Boolean> trace_cursors = newBuilder( \"unsupported.dbms.debug.trace_cursors\", BOOL, false ).build();\n+    public static final Setting<Boolean> trace_cursors = newBuilder(\"unsupported.dbms.debug.trace_cursors\", BOOL, false).build();\n \n     @Internal\n     public static final Setting<Duration> page_cache_tracer_speed_reporting_threshold =\n-            newBuilder( \"unsupported.dbms.debug.page_cache_tracer_speed_reporting_threshold\", DURATION, ofSeconds( 10 ) ).build();\n+      newBuilder(\"unsupported.dbms.debug.page_cache_tracer_speed_reporting_threshold\", DURATION, ofSeconds(10)).build();\n \n     @Internal\n-    public static final Setting<Boolean> log_recover_index_samples = newBuilder( \"unsupported.dbms.index.sampling.log_recovered_samples\", BOOL, false ).build();\n+    public static final Setting<Boolean> log_recover_index_samples = newBuilder(\"unsupported.dbms.index.sampling.log_recovered_samples\", BOOL, false).build();\n \n     @Internal\n-    public static final Setting<Boolean> async_recover_index_samples = newBuilder( \"unsupported.dbms.index.sampling.async_recovery\", BOOL, true )\n-            .immutable().build();\n+    public static final Setting<Boolean> async_recover_index_samples = newBuilder(\"unsupported.dbms.index.sampling.async_recovery\", BOOL, true)\n+      .immutable().build();\n \n     @Internal\n     public static final Setting<Boolean> async_recover_index_samples_wait =\n-            newBuilder( \"unsupported.dbms.index.sampling.async_recovery_wait\", BOOL, null )\n-                    .setDependency( async_recover_index_samples )\n-                    .build();\n+      newBuilder(\"unsupported.dbms.index.sampling.async_recovery_wait\", BOOL, null)\n+        .setDependency(async_recover_index_samples)\n+        .build();\n \n     @Internal\n     public static Setting<Boolean> recovery_ignore_store_id_validation =\n-            newBuilder( \"unsupported.dbms.recovery.ignore_store_id_validation\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.recovery.ignore_store_id_validation\", BOOL, false).build();\n \n     @Internal\n     public static Setting<Boolean> enable_transaction_heap_allocation_tracking =\n-            newBuilder( \"unsupported.dbms.enable_transaction_heap_allocation_tracking\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.enable_transaction_heap_allocation_tracking\", BOOL, false).build();\n \n     @Internal\n     public static Setting<Long> initial_transaction_heap_grab_size =\n-            newBuilder( \"unsupported.dbms.initial_transaction_heap_grab_size\", BYTES, mebiBytes( 2 ) ).build();\n+      newBuilder(\"unsupported.dbms.initial_transaction_heap_grab_size\", BYTES, mebiBytes(2)).build();\n \n     /**\n      * Default value whether or not to strictly prioritize ids from freelist, as opposed to allocating from high id.\n@@ -595,66 +597,66 @@ public class GraphDatabaseInternalSettings implements SettingsDeclaration\n      * </ul>\n      */\n     @Internal\n-    public static Setting<Boolean> strictly_prioritize_id_freelist = newBuilder( \"unsupported.dbms.strictly_prioritize_id_freelist\", BOOL, false ).build();\n+    public static Setting<Boolean> strictly_prioritize_id_freelist = newBuilder(\"unsupported.dbms.strictly_prioritize_id_freelist\", BOOL, false).build();\n \n     @Internal\n-    public static Setting<Long> index_populator_block_size = newBuilder( \"unsupported.dbms.index.populator_block_size\", BYTES, mebiBytes( 1 ) )\n-            .addConstraint( min( 20L ) )\n-            .addConstraint( max( (long) Integer.MAX_VALUE ) )\n-            .build();\n+    public static Setting<Long> index_populator_block_size = newBuilder(\"unsupported.dbms.index.populator_block_size\", BYTES, mebiBytes(1))\n+      .addConstraint(min(20L))\n+      .addConstraint(max((long) Integer.MAX_VALUE))\n+      .build();\n \n     @Internal\n-    public static Setting<Integer> index_populator_merge_factor = newBuilder( \"unsupported.dbms.index.populator_merge_factor\", INT, 8 ).build();\n+    public static Setting<Integer> index_populator_merge_factor = newBuilder(\"unsupported.dbms.index.populator_merge_factor\", INT, 8).build();\n \n     @Internal\n-    public static Setting<Boolean> id_generator_log_enabled = newBuilder( \"unsupported.dbms.idgenerator.log.enabled\", BOOL, false ).build();\n+    public static Setting<Boolean> id_generator_log_enabled = newBuilder(\"unsupported.dbms.idgenerator.log.enabled\", BOOL, false).build();\n \n     @Internal\n     public static Setting<Long> id_generator_log_rotation_threshold =\n-            newBuilder( \"unsupported.dbms.idgenerator.log.rotation_threshold\", BYTES, mebiBytes( 200 ) ).build();\n+      newBuilder(\"unsupported.dbms.idgenerator.log.rotation_threshold\", BYTES, mebiBytes(200)).build();\n \n     @Internal\n     public static Setting<Duration> id_generator_log_prune_threshold =\n-            newBuilder( \"unsupported.dbms.idgenerator.log.prune_threshold\", DURATION, ofDays( 2 ) ).build();\n+      newBuilder(\"unsupported.dbms.idgenerator.log.prune_threshold\", DURATION, ofDays(2)).build();\n \n     @Internal\n-    public static Setting<Boolean> token_scan_write_log_enabled = newBuilder( \"unsupported.dbms.tokenscan.log.enabled\", BOOL, false ).build();\n+    public static Setting<Boolean> token_scan_write_log_enabled = newBuilder(\"unsupported.dbms.tokenscan.log.enabled\", BOOL, false).build();\n \n     @Internal\n     public static Setting<Long> token_scan_write_log_rotation_threshold =\n-            newBuilder( \"unsupported.dbms.tokenscan.log.rotation_threshold\", BYTES, mebiBytes( 200 ) ).build();\n+      newBuilder(\"unsupported.dbms.tokenscan.log.rotation_threshold\", BYTES, mebiBytes(200)).build();\n \n     @Internal\n     public static Setting<Duration> token_scan_write_log_prune_threshold =\n-            newBuilder( \"unsupported.dbms.tokenscan.log.prune_threshold\", DURATION, ofDays( 2 ) ).build();\n+      newBuilder(\"unsupported.dbms.tokenscan.log.prune_threshold\", DURATION, ofDays(2)).build();\n \n     @Internal\n     public static Setting<Boolean> print_page_buffer_allocation_trace =\n-            newBuilder( \"unsupported.dbms.debug.print_page_buffer_allocation_trace\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.debug.print_page_buffer_allocation_trace\", BOOL, false).build();\n \n     @Internal\n     public static Setting<Boolean> index_population_print_debug =\n-            newBuilder( \"unsupported.dbms.index.population_print_debug\", BOOL, false ).build();\n+      newBuilder(\"unsupported.dbms.index.population_print_debug\", BOOL, false).build();\n \n     @Internal\n     public static Setting<Integer> index_population_queue_threshold =\n-            newBuilder( \"unsupported.dbms.index.population_queue_threshold\", INT, 20_000 ).build();\n+      newBuilder(\"unsupported.dbms.index.population_queue_threshold\", INT, 20_000).build();\n \n     @Internal\n     public static Setting<Integer> index_population_scan_batch_size =\n-            newBuilder( \"unsupported.dbms.index.population_scan_batch_size\", INT, 10_000 ).build();\n+      newBuilder(\"unsupported.dbms.index.population_scan_batch_size\", INT, 10_000).build();\n \n     @Internal\n     public static Setting<Long> index_population_batch_max_byte_size =\n-            newBuilder( \"unsupported.dbms.index.population_batch_max_byte_size\", BYTES, mebiBytes( 10 ) )\n-                    .addConstraint( max( (long) Integer.MAX_VALUE ) )\n-                    .build();\n+      newBuilder(\"unsupported.dbms.index.population_batch_max_byte_size\", BYTES, mebiBytes(10))\n+        .addConstraint(max((long) Integer.MAX_VALUE))\n+        .build();\n \n     @Internal\n     public static Setting<Duration> index_population_await_timeout =\n-            newBuilder( \"unsupported.dbms.index.population_await_timeout\", DURATION, ofMinutes( 30 ) ).build();\n+      newBuilder(\"unsupported.dbms.index.population_await_timeout\", DURATION, ofMinutes(30)).build();\n \n     @Internal\n     public static Setting<Duration> config_command_evaluation_timeout =\n-            newBuilder( \"unsupported.dbms.config.command_evaluation_timeout\", DURATION, ofSeconds( 30 ) ).build();\n+      newBuilder(\"unsupported.dbms.config.command_evaluation_timeout\", DURATION, ofSeconds(30)).build();\n }\n",
            "diff_size": 284
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
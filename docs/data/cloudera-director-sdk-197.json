{
    "project_name": "cloudera-director-sdk",
    "error_id": "197",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/197/Cluster.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/197/Cluster.java\nindex 37df5ccfeb5..8103ef726a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/197/Cluster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/197/Cluster.java\n@@ -28,7 +28,9 @@ public class Cluster {\n   private String name;\n   /* The services that belong to this cluster */\n   private List<Service> services;\n-  public Cluster() { }\n+\n+  public Cluster() {\n+  }\n \n   private Cluster(List<Instance> instances, String name, List<Service> services) {\n     this.instances = instances;\n@@ -73,14 +75,16 @@ public class Cluster {\n \n   public ClusterBuilder toBuilder() {\n     return builder()\n-      .instances(instances)\n-      .name(name)\n-      .services(services)\n-      ;\n+        .instances(instances)\n+        .name(name)\n+        .services(services)\n+        ;\n   }\n+\n   public List<Instance> getInstances() {\n     return instances;\n   }\n+\n   public void setInstances(List<Instance> instances) {\n     this.instances = instances;\n   }\n@@ -88,6 +92,7 @@ public class Cluster {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -95,26 +100,37 @@ public class Cluster {\n   public List<Service> getServices() {\n     return services;\n   }\n+\n   public void setServices(List<Service> services) {\n     this.services = services;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     Cluster other = (Cluster) o; // NOPMD\n \n     if (instances != null ?\n         !instances.equals(other.instances) :\n-        other.instances != null) return false;\n+        other.instances != null) {\n+      return false;\n+    }\n     if (name != null ?\n         !name.equals(other.name) :\n-        other.name != null) return false;\n+        other.name != null) {\n+      return false;\n+    }\n     if (services != null ?\n         !services.equals(other.services) :\n-        other.services != null) return false;\n+        other.services != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -128,7 +144,7 @@ public class Cluster {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Cluster {\" + newLine);\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "101",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/197/Cluster.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/197/Cluster.java\nindex 37df5ccfeb5..3e1bb7c626e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/197/Cluster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/197/Cluster.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v2.model;\n@@ -28,7 +13,8 @@ public class Cluster {\n   private String name;\n   /* The services that belong to this cluster */\n   private List<Service> services;\n-  public Cluster() { }\n+\n+public Cluster() { }\n \n   private Cluster(List<Instance> instances, String name, List<Service> services) {\n     this.instances = instances;\n@@ -47,7 +33,8 @@ public class Cluster {\n   }\n \n   public static class ClusterBuilder {\n-    private List<Instance> instances = new ArrayList<Instance>();\n+\n+  private List<Instance> instances = new ArrayList<Instance>();\n     private String name = null;\n     private List<Service> services = new ArrayList<Service>();\n \n@@ -72,11 +59,9 @@ public class Cluster {\n   }\n \n   public ClusterBuilder toBuilder() {\n-    return builder()\n-      .instances(instances)\n+    return builder().instances(instances)\n       .name(name)\n-      .services(services)\n-      ;\n+      .services(services);\n   }\n   public List<Instance> getInstances() {\n     return instances;\n@@ -102,19 +87,18 @@ public class Cluster {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Cluster other = (Cluster) o; // NOPMD\n-\n-    if (instances != null ?\n-        !instances.equals(other.instances) :\n-        other.instances != null) return false;\n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (services != null ?\n-        !services.equals(other.services) :\n-        other.services != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    Cluster other = (Cluster) o;\n+\n+// NOPMD\n+\n+    if (instances != null ?!instances.equals(other.instances) : other.instances != null) return false;\n+\n+if (name != null ?!name.equals(other.name) : other.name != null) return false;\n+\n+if (services != null ?!services.equals(other.services) : other.services != null) return false;\n     return true;\n   }\n \n@@ -128,7 +112,7 @@ public class Cluster {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Cluster {\" + newLine);\n@@ -138,5 +122,4 @@ public class Cluster {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "37",
                    "column": "20",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "119",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "124",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "125",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "58",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "135",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/197/Cluster.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/197/Cluster.java\nindex 37df5ccfeb5..377f5aa45bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/197/Cluster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/197/Cluster.java\n@@ -21,34 +21,44 @@ package com.cloudera.director.client.v2.model;\n import java.util.ArrayList;\n import java.util.List;\n \n+\n public class Cluster {\n   /* All instances making this cluster */\n+\n   private List<Instance> instances;\n   /* Cluster name */\n+\n   private String name;\n   /* The services that belong to this cluster */\n+\n   private List<Service> services;\n-  public Cluster() { }\n+\n+\n+  public Cluster() {}\n+\n \n   private Cluster(List<Instance> instances, String name, List<Service> services) {\n-    this.instances = instances;\n-    this.name = name;\n-    this.services = services;\n-  }\n+                                                                                 this.instances = instances;\n+                                                                                 this.name = name;\n+                                                                                 this.services = services;\n+                     }\n \n   private Cluster(ClusterBuilder builder) {\n-    this.instances = builder.instances;\n-    this.name = builder.name;\n-    this.services = builder.services;\n-  }\n+                                          this.instances = builder.instances;\n+                                          this.name = builder.name;\n+                                          this.services = builder.services;\n+                     }\n \n   public static ClusterBuilder builder() {\n     return new ClusterBuilder();\n   }\n \n   public static class ClusterBuilder {\n+\n     private List<Instance> instances = new ArrayList<Instance>();\n+\n     private String name = null;\n+\n     private List<Service> services = new ArrayList<Service>();\n \n     public ClusterBuilder instances(List<Instance> instances) {\n@@ -75,12 +85,13 @@ public class Cluster {\n     return builder()\n       .instances(instances)\n       .name(name)\n-      .services(services)\n-      ;\n+      .services(services);\n   }\n+\n   public List<Instance> getInstances() {\n     return instances;\n   }\n+\n   public void setInstances(List<Instance> instances) {\n     this.instances = instances;\n   }\n@@ -88,6 +99,7 @@ public class Cluster {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -95,48 +107,50 @@ public class Cluster {\n   public List<Service> getServices() {\n     return services;\n   }\n+\n   public void setServices(List<Service> services) {\n     this.services = services;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Cluster other = (Cluster) o; // NOPMD\n-\n-    if (instances != null ?\n-        !instances.equals(other.instances) :\n-        other.instances != null) return false;\n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (services != null ?\n-        !services.equals(other.services) :\n-        other.services != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    Cluster other = (Cluster)o; // NOPMD\n+\n+    if (instances != null?!instances.equals(other.instances): other.instances != null) return false;\n+    if (name != null?!name.equals(other.name): other.name != null) return false;\n+    if (services != null?!services.equals(other.services): other.services != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (instances != null ? instances.hashCode() : 0);\n-    result = 31 * result + (name != null ? name.hashCode() : 0);\n-    result = 31 * result + (services != null ? services.hashCode() : 0);\n+    result = 31*result + (instances != null? instances.hashCode():0);\n+    result = 31*result + (name != null? name.hashCode():0);\n+    result = 31*result + (services != null? services.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Cluster {\" + newLine);\n-    sb.append(\"  instances: \").append(instances).append(newLine);\n-    sb.append(\"  name: \").append(name).append(newLine);\n-    sb.append(\"  services: \").append(services).append(newLine);\n+    sb.append(\"  instances: \")\n+      .append(instances).append(newLine);\n+    sb.append(\"  name: \")\n+      .append(name).append(newLine);\n+    sb.append(\"  services: \")\n+      .append(services).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
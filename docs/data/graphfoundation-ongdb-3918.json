{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3918",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3918/TransactionCommitment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3918/TransactionCommitment.java\nindex 804d626702d..1ea5296515e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3918/TransactionCommitment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3918/TransactionCommitment.java\n@@ -17,56 +17,57 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n class TransactionCommitment implements Commitment\n {\n-    private final boolean hasExplicitIndexChanges;\n-    private final long transactionId;\n-    private final long transactionChecksum;\n-    private final long transactionCommitTimestamp;\n-    private final LogPosition logPosition;\n-    private final TransactionIdStore transactionIdStore;\n-    private boolean markedAsCommitted;\n+  private final boolean hasExplicitIndexChanges;\n+  private final long transactionId;\n+  private final long transactionChecksum;\n+  private final long transactionCommitTimestamp;\n+  private final LogPosition logPosition;\n+  private final TransactionIdStore transactionIdStore;\n+  private boolean markedAsCommitted;\n \n-    TransactionCommitment( boolean hasExplicitIndexChanges, long transactionId, long transactionChecksum,\n-            long transactionCommitTimestamp, LogPosition logPosition, TransactionIdStore transactionIdStore )\n-    {\n-        this.hasExplicitIndexChanges = hasExplicitIndexChanges;\n-        this.transactionId = transactionId;\n-        this.transactionChecksum = transactionChecksum;\n-        this.transactionCommitTimestamp = transactionCommitTimestamp;\n-        this.logPosition = logPosition;\n-        this.transactionIdStore = transactionIdStore;\n-    }\n+  TransactionCommitment(boolean hasExplicitIndexChanges, long transactionId, long transactionChecksum,\n+                        long transactionCommitTimestamp, LogPosition logPosition, TransactionIdStore transactionIdStore)\n+  {\n+    this.hasExplicitIndexChanges = hasExplicitIndexChanges;\n+    this.transactionId = transactionId;\n+    this.transactionChecksum = transactionChecksum;\n+    this.transactionCommitTimestamp = transactionCommitTimestamp;\n+    this.logPosition = logPosition;\n+    this.transactionIdStore = transactionIdStore;\n+  }\n \n-    public LogPosition logPosition()\n-    {\n-        return logPosition;\n-    }\n+  public LogPosition logPosition()\n+  {\n+    return logPosition;\n+  }\n \n-    @Override\n-    public void publishAsCommitted()\n-    {\n-        markedAsCommitted = true;\n-        transactionIdStore.transactionCommitted( transactionId, transactionChecksum, transactionCommitTimestamp );\n-    }\n+  @Override\n+  public void publishAsCommitted()\n+  {\n+    markedAsCommitted = true;\n+    transactionIdStore.transactionCommitted(transactionId, transactionChecksum, transactionCommitTimestamp);\n+  }\n \n-    @Override\n-    public void publishAsClosed()\n-    {\n-        transactionIdStore.transactionClosed( transactionId, logPosition.getLogVersion(), logPosition.getByteOffset() );\n-    }\n+  @Override\n+  public void publishAsClosed()\n+  {\n+    transactionIdStore.transactionClosed(transactionId, logPosition.getLogVersion(), logPosition.getByteOffset());\n+  }\n \n-    @Override\n-    public boolean markedAsCommitted()\n-    {\n-        return markedAsCommitted;\n-    }\n+  @Override\n+  public boolean markedAsCommitted()\n+  {\n+    return markedAsCommitted;\n+  }\n \n-    @Override\n-    public boolean hasExplicitIndexChanges()\n-    {\n-        return hasExplicitIndexChanges;\n-    }\n+  @Override\n+  public boolean hasExplicitIndexChanges()\n+  {\n+    return hasExplicitIndexChanges;\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3918/TransactionCommitment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3918/TransactionCommitment.java\nindex 804d626702d..ee9a45a5fdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3918/TransactionCommitment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3918/TransactionCommitment.java\n@@ -69,4 +69,4 @@ class TransactionCommitment implements Commitment\n     {\n         return hasExplicitIndexChanges;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "906",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/906/RagManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/906/RagManager.java\nindex 6f73448afc6..1f888fe48da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/906/RagManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/906/RagManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking.community;\n \n import java.util.ArrayDeque;\n@@ -67,73 +68,72 @@ public class RagManager\n     // o When the transaction wakes up from waiting on a resource the\n     // stopWaitOn( resource ) method must be invoked\n \n-    private final Map<Object,List<Object>> resourceMap = new HashMap<>();\n+    private final Map<Object, List<Object>> resourceMap = new HashMap<>();\n     private final Map<Object, Object> waitingTxMap = new HashMap<>();\n \n-    synchronized void lockAcquired( Object resource, Object tx )\n+    synchronized void lockAcquired(Object resource, Object tx)\n     {\n-        List<Object> lockingTxList = resourceMap.get( resource );\n-        if ( lockingTxList != null )\n+        List<Object> lockingTxList = resourceMap.get(resource);\n+        if (lockingTxList != null)\n         {\n-            assert !lockingTxList.contains( tx );\n-            lockingTxList.add( tx );\n-        }\n-        else\n+            assert !lockingTxList.contains(tx);\n+            lockingTxList.add(tx);\n+        } else\n         {\n             lockingTxList = new LinkedList<>();\n-            lockingTxList.add( tx );\n-            resourceMap.put( resource, lockingTxList );\n+            lockingTxList.add(tx);\n+            resourceMap.put(resource, lockingTxList);\n         }\n     }\n \n-    synchronized void lockReleased( Object resource, Object tx )\n+    synchronized void lockReleased(Object resource, Object tx)\n     {\n-        List<Object> lockingTxList = resourceMap.get( resource );\n-        if ( lockingTxList == null )\n+        List<Object> lockingTxList = resourceMap.get(resource);\n+        if (lockingTxList == null)\n         {\n-            throw new LockException( resource + \" not found in resource map\" );\n+            throw new LockException(resource + \" not found in resource map\");\n         }\n \n-        if ( !lockingTxList.remove( tx ) )\n+        if (!lockingTxList.remove(tx))\n         {\n-            throw new LockException( tx + \"not found in locking tx list\" );\n+            throw new LockException(tx + \"not found in locking tx list\");\n         }\n-        if ( lockingTxList.isEmpty() )\n+        if (lockingTxList.isEmpty())\n         {\n-            resourceMap.remove( resource );\n+            resourceMap.remove(resource);\n         }\n     }\n \n-    synchronized void stopWaitOn( Object resource, Object tx )\n+    synchronized void stopWaitOn(Object resource, Object tx)\n     {\n-        if ( waitingTxMap.remove( tx ) == null )\n+        if (waitingTxMap.remove(tx) == null)\n         {\n-            throw new LockException( tx + \" not waiting on \" + resource );\n+            throw new LockException(tx + \" not waiting on \" + resource);\n         }\n     }\n \n     // after invoke the transaction must wait on the resource\n-    synchronized void checkWaitOn( Object resource, Object tx )\n-            throws DeadlockDetectedException\n+    synchronized void checkWaitOn(Object resource, Object tx)\n+      throws DeadlockDetectedException\n     {\n-        List<Object> lockingTxList = resourceMap.get( resource );\n-        if ( lockingTxList == null )\n+        List<Object> lockingTxList = resourceMap.get(resource);\n+        if (lockingTxList == null)\n         {\n-            throw new LockException( \"Illegal resource[\" + resource\n-                                     + \"], not found in map\" );\n+            throw new LockException(\"Illegal resource[\" + resource\n+              + \"], not found in map\");\n         }\n \n-        if ( waitingTxMap.get( tx ) != null )\n+        if (waitingTxMap.get(tx) != null)\n         {\n-            throw new LockException( tx + \" already waiting for resource\" );\n+            throw new LockException(tx + \" already waiting for resource\");\n         }\n \n         Iterator<Object> itr = lockingTxList.iterator();\n         List<Object> checkedTransactions = new LinkedList<>();\n         final Deque<Object> graphStack = new ArrayDeque<>();\n         // has resource,transaction interleaved\n-        graphStack.push( resource );\n-        while ( itr.hasNext() )\n+        graphStack.push(resource);\n+        while (itr.hasNext())\n         {\n             Object lockingTx = itr.next();\n             // the if statement bellow is valid because:\n@@ -155,24 +155,24 @@ public class RagManager\n             // circular reference to exist (t1->r1->t1) otherwise we may\n             // traverse t1->r1->t2->r1->t2->r1->t2... until SOE\n             // ... KISS to you too\n-            if ( lockingTx.equals( tx ) )\n+            if (lockingTx.equals(tx))\n             {\n                 continue;\n             }\n-            graphStack.push( lockingTx );\n-            checkWaitOnRecursive( lockingTx, tx, checkedTransactions, graphStack );\n+            graphStack.push(lockingTx);\n+            checkWaitOnRecursive(lockingTx, tx, checkedTransactions, graphStack);\n             graphStack.pop();\n         }\n \n         // ok no deadlock, we can wait on resource\n-        waitingTxMap.put( tx, resource );\n+        waitingTxMap.put(tx, resource);\n     }\n \n-    private synchronized void checkWaitOnRecursive( Object lockingTx,\n-                                                    Object waitingTx, List<Object> checkedTransactions,\n-                                                    Deque<Object> graphStack ) throws DeadlockDetectedException\n+    private synchronized void checkWaitOnRecursive(Object lockingTx,\n+                                                   Object waitingTx, List<Object> checkedTransactions,\n+                                                   Deque<Object> graphStack) throws DeadlockDetectedException\n     {\n-        if ( lockingTx.equals( waitingTx ) )\n+        if (lockingTx.equals(waitingTx))\n         {\n             StringBuilder circle = null;\n             Object resource;\n@@ -180,26 +180,25 @@ public class RagManager\n             {\n                 lockingTx = graphStack.pop();\n                 resource = graphStack.pop();\n-                if ( circle == null )\n+                if (circle == null)\n                 {\n                     circle = new StringBuilder();\n-                    circle.append( lockingTx ).append( \" <-[:HELD_BY]- \" ).append( resource );\n-                }\n-                else\n+                    circle.append(lockingTx).append(\" <-[:HELD_BY]- \").append(resource);\n+                } else\n                 {\n-                    circle.append( \" <-[:WAITING_FOR]- \" ).append( lockingTx ).append( \" <-[:HELD_BY]- \" )\n-                          .append( resource );\n+                    circle.append(\" <-[:WAITING_FOR]- \").append(lockingTx).append(\" <-[:HELD_BY]- \")\n+                      .append(resource);\n                 }\n             }\n-            while ( !graphStack.isEmpty() );\n+            while (!graphStack.isEmpty());\n             throw new DeadlockDetectedException(\n-                    waitingTx + \" can't wait on resource \" + resource + \" since => \" + circle );\n+              waitingTx + \" can't wait on resource \" + resource + \" since => \" + circle);\n         }\n-        checkedTransactions.add( lockingTx );\n-        Object resource = waitingTxMap.get( lockingTx );\n-        if ( resource != null )\n+        checkedTransactions.add(lockingTx);\n+        Object resource = waitingTxMap.get(lockingTx);\n+        if (resource != null)\n         {\n-            graphStack.push( resource );\n+            graphStack.push(resource);\n             // if the resource doesn't exist in resourceMap that means all the\n             // locks on the resource has been released\n             // it is possible when this tx was in RWLock.acquire and\n@@ -209,18 +208,18 @@ public class RagManager\n             // this is ok since current tx or any other tx will wake\n             // in the synchronized block and will be forced to do the deadlock\n             // check once more if lock cannot be acquired\n-            List<Object> lockingTxList = resourceMap.get( resource );\n-            if ( lockingTxList != null )\n+            List<Object> lockingTxList = resourceMap.get(resource);\n+            if (lockingTxList != null)\n             {\n-                for ( Object aLockingTxList : lockingTxList )\n+                for (Object aLockingTxList : lockingTxList)\n                 {\n                     lockingTx = aLockingTxList;\n                     // so we don't\n-                    if ( !checkedTransactions.contains( lockingTx ) )\n+                    if (!checkedTransactions.contains(lockingTx))\n                     {\n-                        graphStack.push( lockingTx );\n-                        checkWaitOnRecursive( lockingTx, waitingTx,\n-                                checkedTransactions, graphStack );\n+                        graphStack.push(lockingTx);\n+                        checkWaitOnRecursive(lockingTx, waitingTx,\n+                          checkedTransactions, graphStack);\n                         graphStack.pop();\n                     }\n                 }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1261",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1261/AsyncLogEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1261/AsyncLogEvent.java\nindex c7c40be9e38..fdc766b9d67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1261/AsyncLogEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1261/AsyncLogEvent.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging.async;\n \n import java.text.DateFormat;\n@@ -36,136 +37,133 @@ import static java.util.Objects.requireNonNull;\n \n public final class AsyncLogEvent extends AsyncEvent\n {\n-    static AsyncLogEvent logEvent( @Nonnull Logger logger, @Nonnull String message )\n+  static AsyncLogEvent logEvent(@Nonnull Logger logger, @Nonnull String message)\n+  {\n+    return new AsyncLogEvent(requireNonNull(logger, \"logger\"), requireNonNull(message, \"message\"), null);\n+  }\n+\n+  static AsyncLogEvent logEvent(@Nonnull Logger logger, @Nonnull String message, @Nonnull Throwable throwable)\n+  {\n+    return new AsyncLogEvent(requireNonNull(logger, \"logger\"), requireNonNull(message, \"message\"),\n+        requireNonNull(throwable, \"Throwable\"));\n+  }\n+\n+  static AsyncLogEvent logEvent(@Nonnull Logger logger, @Nonnull String format, @Nullable Object... arguments)\n+  {\n+    return new AsyncLogEvent(requireNonNull(logger, \"logger\"), requireNonNull(format, \"format\"),\n+        arguments == null ? new Object[0] : arguments);\n+  }\n+\n+  static AsyncLogEvent bulkLogEvent(@Nonnull Log log, @Nonnull final Consumer<Log> consumer)\n+  {\n+    requireNonNull(consumer, \"Consumer<Log>\");\n+    return new AsyncLogEvent(requireNonNull(log, \"log\"), new BulkLogger()\n     {\n-        return new AsyncLogEvent( requireNonNull( logger, \"logger\" ), requireNonNull( message, \"message\" ), null );\n-    }\n-\n-    static AsyncLogEvent logEvent( @Nonnull Logger logger, @Nonnull String message, @Nonnull Throwable throwable )\n-    {\n-        return new AsyncLogEvent( requireNonNull( logger, \"logger\" ), requireNonNull( message, \"message\" ),\n-                requireNonNull( throwable, \"Throwable\" ) );\n-    }\n-\n-    static AsyncLogEvent logEvent( @Nonnull Logger logger, @Nonnull String format, @Nullable Object... arguments )\n+      @Override\n+      void process(long timestamp, Object target)\n+      {\n+        consumer.accept((Log) target); // TODO: include timestamp!\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return \"Log.bulkLog( \" + consumer + \" )\";\n+      }\n+    });\n+  }\n+\n+  static AsyncLogEvent bulkLogEvent(@Nonnull Logger logger, @Nonnull final Consumer<Logger> consumer)\n+  {\n+    requireNonNull(consumer, \"Consumer<Logger>\");\n+    return new AsyncLogEvent(requireNonNull(logger, \"logger\"), new BulkLogger()\n     {\n-        return new AsyncLogEvent( requireNonNull( logger, \"logger\" ), requireNonNull( format, \"format\" ),\n-                arguments == null ? new Object[0] : arguments );\n-    }\n-\n-    static AsyncLogEvent bulkLogEvent( @Nonnull Log log, @Nonnull final Consumer<Log> consumer )\n+      @Override\n+      void process(long timestamp, Object target)\n+      {\n+        consumer.accept((Logger) target); // TODO: include timestamp!\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return \"Logger.bulkLog( \" + consumer + \" )\";\n+      }\n+    });\n+  }\n+\n+  public void process()\n+  {\n+    if (parameter == null)\n     {\n-        requireNonNull( consumer, \"Consumer<Log>\" );\n-        return new AsyncLogEvent( requireNonNull( log, \"log\" ), new BulkLogger()\n-        {\n-            @Override\n-            void process( long timestamp, Object target )\n-            {\n-                consumer.accept( (Log) target ); // TODO: include timestamp!\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return \"Log.bulkLog( \" + consumer + \" )\";\n-            }\n-        } );\n-    }\n-\n-    static AsyncLogEvent bulkLogEvent( @Nonnull Logger logger, @Nonnull final Consumer<Logger> consumer )\n+      ((Logger) target).log(\"[AsyncLog @ \" + timestamp() + \"]  \" + message);\n+    } else if (parameter instanceof Throwable)\n     {\n-        requireNonNull( consumer, \"Consumer<Logger>\" );\n-        return new AsyncLogEvent( requireNonNull( logger, \"logger\" ), new BulkLogger()\n-        {\n-            @Override\n-            void process( long timestamp, Object target )\n-            {\n-                consumer.accept( (Logger) target ); // TODO: include timestamp!\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return \"Logger.bulkLog( \" + consumer + \" )\";\n-            }\n-        } );\n-    }\n-\n-    public void process()\n+      ((Logger) target).log(\"[AsyncLog @ \" + timestamp() + \"]  \" + message, (Throwable) parameter);\n+    } else if (parameter instanceof Object[])\n     {\n-        if ( parameter == null )\n-        {\n-            ((Logger) target).log( \"[AsyncLog @ \" + timestamp() + \"]  \" + message );\n-        }\n-        else if ( parameter instanceof Throwable )\n-        {\n-            ((Logger) target).log( \"[AsyncLog @ \" + timestamp() + \"]  \" + message, (Throwable) parameter );\n-        }\n-        else if ( parameter instanceof Object[] )\n-        {\n-            ((Logger) target).log( \"[AsyncLog @ \" + timestamp() + \"]  \" + message, (Object[]) parameter );\n-        }\n-        else if ( parameter instanceof BulkLogger )\n-        {\n-            ((BulkLogger) parameter).process( timestamp, target );\n-        }\n-    }\n-\n-    private final long timestamp;\n-    private final Object target;\n-    private final String message;\n-    private final Object parameter;\n-\n-    private AsyncLogEvent( @Nonnull Object target, @Nullable Object parameter )\n+      ((Logger) target).log(\"[AsyncLog @ \" + timestamp() + \"]  \" + message, (Object[]) parameter);\n+    } else if (parameter instanceof BulkLogger)\n     {\n-        this( target, \"\", parameter );\n+      ((BulkLogger) parameter).process(timestamp, target);\n     }\n-\n-    private AsyncLogEvent( @Nonnull Object target, @Nonnull String message, @Nullable Object parameter )\n+  }\n+\n+  private final long timestamp;\n+  private final Object target;\n+  private final String message;\n+  private final Object parameter;\n+\n+  private AsyncLogEvent(@Nonnull Object target, @Nullable Object parameter)\n+  {\n+    this(target, \"\", parameter);\n+  }\n+\n+  private AsyncLogEvent(@Nonnull Object target, @Nonnull String message, @Nullable Object parameter)\n+  {\n+    this.target = target;\n+    this.message = message;\n+    this.parameter = parameter;\n+    this.timestamp = System.currentTimeMillis();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    if (parameter == null)\n     {\n-        this.target = target;\n-        this.message = message;\n-        this.parameter = parameter;\n-        this.timestamp = System.currentTimeMillis();\n+      return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\" )\";\n     }\n-\n-    @Override\n-    public String toString()\n+    if (parameter instanceof Throwable)\n     {\n-        if ( parameter == null )\n-        {\n-            return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\" )\";\n-        }\n-        if ( parameter instanceof Throwable )\n-        {\n-            return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" + parameter + \" )\";\n-        }\n-        if ( parameter instanceof Object[] )\n-        {\n-            return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" +\n-                   Arrays.toString( (Object[]) parameter ) + \" )\";\n-        }\n-        if ( parameter instanceof BulkLogger )\n-        {\n-            return parameter.toString();\n-        }\n-        return super.toString();\n+      return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" + parameter + \" )\";\n     }\n-\n-    private abstract static class BulkLogger\n+    if (parameter instanceof Object[])\n     {\n-        abstract void process( long timestamp, Object target );\n+      return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" +\n+          Arrays.toString((Object[]) parameter) + \" )\";\n     }\n-\n-    private String timestamp()\n+    if (parameter instanceof BulkLogger)\n     {\n-        return DATE_FORMAT_THREAD_LOCAL.get().format( new Date( timestamp ) );\n+      return parameter.toString();\n     }\n-\n-    private static final ThreadLocal<DateFormat> DATE_FORMAT_THREAD_LOCAL = ThreadLocal.withInitial( () -> {\n-        SimpleDateFormat format = new SimpleDateFormat( \"yyyy-MM-dd HH:mm:ss.SSSZ\" );\n-        format.setTimeZone( TimeZone.getTimeZone( \"UTC\" ) );\n-        return format;\n-    } );\n+    return super.toString();\n+  }\n+\n+  private abstract static class BulkLogger\n+  {\n+    abstract void process(long timestamp, Object target);\n+  }\n+\n+  private String timestamp()\n+  {\n+    return DATE_FORMAT_THREAD_LOCAL.get().format(new Date(timestamp));\n+  }\n+\n+  private static final ThreadLocal<DateFormat> DATE_FORMAT_THREAD_LOCAL = ThreadLocal.withInitial(() -> {\n+    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSSZ\");\n+    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n+    return format;\n+  });\n }\n \n",
            "diff_size": 192
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1261/AsyncLogEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1261/AsyncLogEvent.java\nindex c7c40be9e38..34ddb21fc96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1261/AsyncLogEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1261/AsyncLogEvent.java\n@@ -43,8 +43,7 @@ public final class AsyncLogEvent extends AsyncEvent\n \n     static AsyncLogEvent logEvent( @Nonnull Logger logger, @Nonnull String message, @Nonnull Throwable throwable )\n     {\n-        return new AsyncLogEvent( requireNonNull( logger, \"logger\" ), requireNonNull( message, \"message\" ),\n-                requireNonNull( throwable, \"Throwable\" ) );\n+        return new AsyncLogEvent( requireNonNull( logger, \"logger\" ), requireNonNull( message, \"message\" ), requireNonNull( throwable, \"Throwable\" ) );\n     }\n \n     static AsyncLogEvent logEvent( @Nonnull Logger logger, @Nonnull String format, @Nullable Object... arguments )\n@@ -136,15 +135,16 @@ public final class AsyncLogEvent extends AsyncEvent\n         {\n             return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\" )\";\n         }\n-        if ( parameter instanceof Throwable )\n+\n+if ( parameter instanceof Throwable )\n         {\n             return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" + parameter + \" )\";\n         }\n-        if ( parameter instanceof Object[] )\n+\n+if ( parameter instanceof Object[] )\n         {\n-            return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" +\n-                   Arrays.toString( (Object[]) parameter ) + \" )\";\n-        }\n+            return \"log( @ \" + timestamp() + \": \\\"\" + message + \"\\\", \" + Arrays.toString( (Object[]) parameter ) + \" )\";\n+    }\n         if ( parameter instanceof BulkLogger )\n         {\n             return parameter.toString();\n@@ -162,10 +162,10 @@ public final class AsyncLogEvent extends AsyncEvent\n         return DATE_FORMAT_THREAD_LOCAL.get().format( new Date( timestamp ) );\n     }\n \n-    private static final ThreadLocal<DateFormat> DATE_FORMAT_THREAD_LOCAL = ThreadLocal.withInitial( () -> {\n+    private static final ThreadLocal<DateFormat> DATE_FORMAT_THREAD_LOCAL = ThreadLocal.withInitial( () ->\n+{\n         SimpleDateFormat format = new SimpleDateFormat( \"yyyy-MM-dd HH:mm:ss.SSSZ\" );\n         format.setTimeZone( TimeZone.getTimeZone( \"UTC\" ) );\n         return format;\n     } );\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2353",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2353/IOUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2353/IOUtils.java\nindex f4e5848e909..b88cf538225 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2353/IOUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2353/IOUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io;\n \n import java.io.IOException;\n@@ -38,31 +39,30 @@ public final class IOUtils\n      * Closes given {@link Collection collection} of {@link AutoCloseable closeables}.\n      *\n      * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n+     * @param <T>        the type of closeable\n      * @throws IOException if an exception was thrown by one of the close methods.\n      * @see #closeAll(AutoCloseable[])\n      */\n-    public static <T extends AutoCloseable> void closeAll( Collection<T> closeables ) throws IOException\n+    public static <T extends AutoCloseable> void closeAll(Collection<T> closeables) throws IOException\n     {\n-        close( IOException::new, closeables );\n+        close(IOException::new, closeables);\n     }\n \n     /**\n      * Close all the provided {@link AutoCloseable closeables}, chaining exceptions, if any, into a single {@link UncheckedIOException}.\n      *\n      * @param closeables to call close on.\n-     * @param <T> the type of closeable.\n+     * @param <T>        the type of closeable.\n      * @throws UncheckedIOException if any exception is thrown from any of the {@code closeables}.\n      */\n-    public static <T extends AutoCloseable> void closeAllUnchecked( Collection<T> closeables )\n+    public static <T extends AutoCloseable> void closeAllUnchecked(Collection<T> closeables)\n     {\n         try\n         {\n-            closeAll( closeables );\n-        }\n-        catch ( IOException e )\n+            closeAll(closeables);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -70,25 +70,25 @@ public final class IOUtils\n      * Close all the provided {@link AutoCloseable closeables}, chaining exceptions, if any, into a single {@link UncheckedIOException}.\n      *\n      * @param closeables to call close on.\n-     * @param <T> the type of closeable.\n+     * @param <T>        the type of closeable.\n      * @throws UncheckedIOException if any exception is thrown from any of the {@code closeables}.\n      */\n     @SafeVarargs\n-    public static <T extends AutoCloseable> void closeAllUnchecked( T... closeables )\n+    public static <T extends AutoCloseable> void closeAllUnchecked(T... closeables)\n     {\n-        closeAllUnchecked( Arrays.asList( closeables ) );\n+        closeAllUnchecked(Arrays.asList(closeables));\n     }\n \n     /**\n      * Closes given {@link Collection collection} of {@link AutoCloseable closeables} ignoring all exceptions.\n      *\n      * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n+     * @param <T>        the type of closeable\n      * @see #closeAll(AutoCloseable[])\n      */\n-    public static <T extends AutoCloseable> void closeAllSilently( Collection<T> closeables )\n+    public static <T extends AutoCloseable> void closeAllSilently(Collection<T> closeables)\n     {\n-        close( ( msg, cause ) -> null, closeables );\n+        close((msg, cause) -> null, closeables);\n     }\n \n     /**\n@@ -98,25 +98,25 @@ public final class IOUtils\n      * have suppressed exceptions. See {@link Exception#addSuppressed(Throwable)}\n      *\n      * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n+     * @param <T>        the type of closeable\n      * @throws IOException if an exception was thrown by one of the close methods.\n      */\n     @SafeVarargs\n-    public static <T extends AutoCloseable> void closeAll( T... closeables ) throws IOException\n+    public static <T extends AutoCloseable> void closeAll(T... closeables) throws IOException\n     {\n-        close( IOException::new, closeables );\n+        close(IOException::new, closeables);\n     }\n \n     /**\n      * Closes given array of {@link AutoCloseable closeables} ignoring all exceptions.\n      *\n      * @param closeables the closeables to close\n-     * @param <T> the type of closeable\n+     * @param <T>        the type of closeable\n      */\n     @SafeVarargs\n-    public static <T extends AutoCloseable> void closeAllSilently( T... closeables )\n+    public static <T extends AutoCloseable> void closeAllSilently(T... closeables)\n     {\n-        close( ( msg, cause ) -> null, closeables );\n+        close((msg, cause) -> null, closeables);\n     }\n \n     /**\n@@ -125,37 +125,35 @@ public final class IOUtils\n      * suppressed exceptions.\n      *\n      * @param constructor The function used to construct the parent throwable that will have the first thrown exception attached as a cause, and any\n-     * remaining exceptions attached as suppressed exceptions. If this function returns {@code null}, then the exception is ignored.\n-     * @param closeables an iterator of all the things to close, in order.\n-     * @param <T> the type of things to close.\n-     * @param <E> the type of the parent exception.\n+     *                    remaining exceptions attached as suppressed exceptions. If this function returns {@code null}, then the exception is ignored.\n+     * @param closeables  an iterator of all the things to close, in order.\n+     * @param <T>         the type of things to close.\n+     * @param <E>         the type of the parent exception.\n      * @throws E when any {@link AutoCloseable#close()} throws exception\n      */\n-    public static <T extends AutoCloseable, E extends Throwable> void close( BiFunction<String,Throwable,E> constructor, Collection<T> closeables ) throws E\n+    public static <T extends AutoCloseable, E extends Throwable> void close(BiFunction<String, Throwable, E> constructor, Collection<T> closeables) throws E\n     {\n         E closeThrowable = null;\n-        for ( T closeable : closeables )\n+        for (T closeable : closeables)\n         {\n             try\n             {\n-                if ( closeable != null )\n+                if (closeable != null)\n                 {\n                     closeable.close();\n                 }\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                if ( closeThrowable == null )\n+                if (closeThrowable == null)\n                 {\n-                    closeThrowable = constructor.apply( \"Exception closing multiple resources.\", e );\n-                }\n-                else\n+                    closeThrowable = constructor.apply(\"Exception closing multiple resources.\", e);\n+                } else\n                 {\n-                    closeThrowable.addSuppressed( e );\n+                    closeThrowable.addSuppressed(e);\n                 }\n             }\n         }\n-        if ( closeThrowable != null )\n+        if (closeThrowable != null)\n         {\n             throw closeThrowable;\n         }\n@@ -167,57 +165,55 @@ public final class IOUtils\n      * suppressed exceptions.\n      *\n      * @param constructor The function used to construct the parent throwable that will have the first thrown exception attached as a cause, and any\n-     * remaining exceptions attached as suppressed exceptions. If this function returns {@code null}, then the exception is ignored.\n-     * @param closeables all the things to close, in order.\n-     * @param <T> the type of things to close.\n-     * @param <E> the type of the parent exception.\n+     *                    remaining exceptions attached as suppressed exceptions. If this function returns {@code null}, then the exception is ignored.\n+     * @param closeables  all the things to close, in order.\n+     * @param <T>         the type of things to close.\n+     * @param <E>         the type of the parent exception.\n      * @throws E when any {@link AutoCloseable#close()} throws exception\n      */\n     @SafeVarargs\n-    public static <T extends AutoCloseable, E extends Throwable> void close( BiFunction<String,Throwable,E> constructor, T... closeables ) throws E\n+    public static <T extends AutoCloseable, E extends Throwable> void close(BiFunction<String, Throwable, E> constructor, T... closeables) throws E\n     {\n-        close( constructor, Arrays.asList( closeables ) );\n+        close(constructor, Arrays.asList(closeables));\n     }\n \n     /**\n      * Closes the first given number of {@link AutoCloseable closeables} in the given array\n-     *\n+     * <p>\n      * If any {@link AutoCloseable#close()} call throws\n      * {@link IOException} than it will be rethrown to the caller after calling {@link AutoCloseable#close()}\n      * on other given resources. If more than one {@link AutoCloseable#close()} throw than resulting exception will\n      * have suppressed exceptions. See {@link Exception#addSuppressed(Throwable)}\n      *\n      * @param closeables the closeables to close.\n-     * @param count the maximum number of closeables to close within the array, ranging from 0 until count.\n-     * @param <T> the type of closeable\n+     * @param count      the maximum number of closeables to close within the array, ranging from 0 until count.\n+     * @param <T>        the type of closeable\n      * @throws IOException if an exception was thrown by one of the close methods.\n      */\n-    public static <T extends AutoCloseable> void closeFirst( T[] closeables, int count ) throws IOException\n+    public static <T extends AutoCloseable> void closeFirst(T[] closeables, int count) throws IOException\n     {\n         IOException closeThrowable = null;\n-        for ( int i = 0; i < count; i++ )\n+        for (int i = 0; i < count; i++)\n         {\n             try\n             {\n                 T closeable = closeables[i];\n-                if ( closeable != null )\n+                if (closeable != null)\n                 {\n                     closeable.close();\n                 }\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                if ( closeThrowable == null )\n+                if (closeThrowable == null)\n                 {\n-                    closeThrowable = new IOException( \"Exception closing multiple resources.\", e );\n-                }\n-                else\n+                    closeThrowable = new IOException(\"Exception closing multiple resources.\", e);\n+                } else\n                 {\n-                    closeThrowable.addSuppressed( e );\n+                    closeThrowable.addSuppressed(e);\n                 }\n             }\n         }\n-        if ( closeThrowable != null )\n+        if (closeThrowable != null)\n         {\n             throw closeThrowable;\n         }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
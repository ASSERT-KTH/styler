{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1498",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1498/RecoveryCleanupWorkCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1498/RecoveryCleanupWorkCollector.java\nindex 717951b0704..ebb609dfd5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1498/RecoveryCleanupWorkCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1498/RecoveryCleanupWorkCollector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.List;\n@@ -38,100 +39,99 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n  */\n public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n {\n-    private static ImmediateRecoveryCleanupWorkCollector immediateInstance;\n-    private static IgnoringRecoveryCleanupWorkCollector ignoringInstance;\n+  private static ImmediateRecoveryCleanupWorkCollector immediateInstance;\n+  private static IgnoringRecoveryCleanupWorkCollector ignoringInstance;\n \n-    /**\n-     * Adds {@link CleanupJob} to this collector.\n-     *\n-     * @param job cleanup job to perform, now or at some point in the future.\n-     */\n-    abstract void add( CleanupJob job );\n+  /**\n+   * Adds {@link CleanupJob} to this collector.\n+   *\n+   * @param job cleanup job to perform, now or at some point in the future.\n+   */\n+  abstract void add(CleanupJob job);\n \n-    void executeWithExecutor( CleanupJobGroupAction action )\n+  void executeWithExecutor(CleanupJobGroupAction action)\n+  {\n+    ExecutorService executor = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors());\n+    try\n     {\n-        ExecutorService executor = Executors.newFixedThreadPool( Runtime.getRuntime().availableProcessors() );\n-        try\n-        {\n-            action.execute( executor );\n-        }\n-        finally\n-        {\n-            shutdownExecutorAndVerifyNoLeaks( executor );\n-        }\n-    }\n-    private void shutdownExecutorAndVerifyNoLeaks( ExecutorService executor )\n+      action.execute(executor);\n+    } finally\n     {\n-        List<Runnable> leakedTasks = executor.shutdownNow();\n-        if ( leakedTasks.size() != 0 )\n-        {\n-            throw new IllegalStateException( \"Tasks leaked from CleanupJob. Tasks where \" + leakedTasks.toString() );\n-        }\n+      shutdownExecutorAndVerifyNoLeaks(executor);\n     }\n+  }\n \n-    /**\n-     * {@link CleanupJob#run( ExecutorService ) Runs} {@link #add(CleanupJob) added} cleanup jobs right away in the thread\n-     * calling {@link #add(CleanupJob)}.\n-     */\n-    public static RecoveryCleanupWorkCollector immediate()\n+  private void shutdownExecutorAndVerifyNoLeaks(ExecutorService executor)\n+  {\n+    List<Runnable> leakedTasks = executor.shutdownNow();\n+    if (leakedTasks.size() != 0)\n     {\n-        if ( immediateInstance == null )\n-        {\n-            immediateInstance = new ImmediateRecoveryCleanupWorkCollector();\n-        }\n-        return immediateInstance;\n+      throw new IllegalStateException(\"Tasks leaked from CleanupJob. Tasks where \" + leakedTasks.toString());\n     }\n+  }\n \n-    /**\n-     * Ignore all clean jobs.\n-     */\n-    public static RecoveryCleanupWorkCollector ignore()\n+  /**\n+   * {@link CleanupJob#run(ExecutorService) Runs} {@link #add(CleanupJob) added} cleanup jobs right away in the thread\n+   * calling {@link #add(CleanupJob)}.\n+   */\n+  public static RecoveryCleanupWorkCollector immediate()\n+  {\n+    if (immediateInstance == null)\n     {\n-        if ( ignoringInstance == null )\n-        {\n-            ignoringInstance = new IgnoringRecoveryCleanupWorkCollector();\n-        }\n-        return ignoringInstance;\n+      immediateInstance = new ImmediateRecoveryCleanupWorkCollector();\n     }\n+    return immediateInstance;\n+  }\n \n-    /**\n-     * {@link RecoveryCleanupWorkCollector} which runs added {@link CleanupJob} as part of the {@link #add(CleanupJob)}\n-     * call in the caller thread.\n-     */\n-    static class ImmediateRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n+  /**\n+   * Ignore all clean jobs.\n+   */\n+  public static RecoveryCleanupWorkCollector ignore()\n+  {\n+    if (ignoringInstance == null)\n     {\n-        @Override\n-        public void add( CleanupJob job )\n-        {\n-            executeWithExecutor( executor ->\n-            {\n-                try\n-                {\n-                    job.run( executor );\n-                }\n-                finally\n-                {\n-                    job.close();\n-                }\n-            } );\n-        }\n+      ignoringInstance = new IgnoringRecoveryCleanupWorkCollector();\n     }\n+    return ignoringInstance;\n+  }\n \n-    /**\n-     * {@link RecoveryCleanupWorkCollector} ignoring all {@link CleanupJob} added to it.\n-     */\n-    static class IgnoringRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n+  /**\n+   * {@link RecoveryCleanupWorkCollector} which runs added {@link CleanupJob} as part of the {@link #add(CleanupJob)}\n+   * call in the caller thread.\n+   */\n+  static class ImmediateRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n+  {\n+    @Override\n+    public void add(CleanupJob job)\n     {\n-        @Override\n-        public void add( CleanupJob job )\n+      executeWithExecutor(executor ->\n+      {\n+        try\n         {\n-            job.close();\n+          job.run(executor);\n+        } finally\n+        {\n+          job.close();\n         }\n+      });\n     }\n+  }\n \n-    @FunctionalInterface\n-    interface CleanupJobGroupAction\n+  /**\n+   * {@link RecoveryCleanupWorkCollector} ignoring all {@link CleanupJob} added to it.\n+   */\n+  static class IgnoringRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n+  {\n+    @Override\n+    public void add(CleanupJob job)\n     {\n-        void execute( ExecutorService executor );\n+      job.close();\n     }\n+  }\n+\n+  @FunctionalInterface\n+  interface CleanupJobGroupAction\n+  {\n+    void execute(ExecutorService executor);\n+  }\n }\n",
            "diff_size": 110
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1498/RecoveryCleanupWorkCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1498/RecoveryCleanupWorkCollector.java\nindex 717951b0704..19911729254 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1498/RecoveryCleanupWorkCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1498/RecoveryCleanupWorkCollector.java\n@@ -79,7 +79,8 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n         {\n             immediateInstance = new ImmediateRecoveryCleanupWorkCollector();\n         }\n-        return immediateInstance;\n+\n+return immediateInstance;\n     }\n \n     /**\n@@ -91,7 +92,8 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n         {\n             ignoringInstance = new IgnoringRecoveryCleanupWorkCollector();\n         }\n-        return ignoringInstance;\n+\n+return ignoringInstance;\n     }\n \n     /**\n@@ -134,4 +136,4 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n     {\n         void execute( ExecutorService executor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Annotation 'FunctionalInterface' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "143",
                    "column": "10",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1498/RecoveryCleanupWorkCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1498/RecoveryCleanupWorkCollector.java\nindex 717951b0704..de5e4db4a2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1498/RecoveryCleanupWorkCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1498/RecoveryCleanupWorkCollector.java\n@@ -22,7 +22,6 @@ package org.neo4j.index.internal.gbptree;\n import java.util.List;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n-\n import org.neo4j.kernel.lifecycle.Lifecycle;\n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n \n@@ -36,6 +35,7 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n  * <p>\n  * Take full responsibility for closing added {@link CleanupJob CleanupJobs} as soon as possible after run.\n  */\n+\n public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n {\n     private static ImmediateRecoveryCleanupWorkCollector immediateInstance;\n@@ -46,7 +46,8 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n      *\n      * @param job cleanup job to perform, now or at some point in the future.\n      */\n-    abstract void add( CleanupJob job );\n+    abstract void add( CleanupJob job )\n+    ;\n \n     void executeWithExecutor( CleanupJobGroupAction action )\n     {\n@@ -60,6 +61,7 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n             shutdownExecutorAndVerifyNoLeaks( executor );\n         }\n     }\n+\n     private void shutdownExecutorAndVerifyNoLeaks( ExecutorService executor )\n     {\n         List<Runnable> leakedTasks = executor.shutdownNow();\n@@ -73,24 +75,28 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n      * {@link CleanupJob#run( ExecutorService ) Runs} {@link #add(CleanupJob) added} cleanup jobs right away in the thread\n      * calling {@link #add(CleanupJob)}.\n      */\n+\n     public static RecoveryCleanupWorkCollector immediate()\n     {\n         if ( immediateInstance == null )\n         {\n             immediateInstance = new ImmediateRecoveryCleanupWorkCollector();\n         }\n+\n         return immediateInstance;\n     }\n \n     /**\n      * Ignore all clean jobs.\n      */\n+\n     public static RecoveryCleanupWorkCollector ignore()\n     {\n         if ( ignoringInstance == null )\n         {\n             ignoringInstance = new IgnoringRecoveryCleanupWorkCollector();\n         }\n+\n         return ignoringInstance;\n     }\n \n@@ -98,28 +104,30 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n      * {@link RecoveryCleanupWorkCollector} which runs added {@link CleanupJob} as part of the {@link #add(CleanupJob)}\n      * call in the caller thread.\n      */\n+\n     static class ImmediateRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n     {\n         @Override\n         public void add( CleanupJob job )\n         {\n             executeWithExecutor( executor ->\n-            {\n-                try\n-                {\n-                    job.run( executor );\n-                }\n-                finally\n-                {\n-                    job.close();\n-                }\n-            } );\n+                                 {\n+                                     try\n+                                     {\n+                                         job.run( executor );\n+                                     }\n+                                     finally\n+                                     {\n+                                         job.close();\n+                                     }\n+                                 } );\n         }\n     }\n \n     /**\n      * {@link RecoveryCleanupWorkCollector} ignoring all {@link CleanupJob} added to it.\n      */\n+\n     static class IgnoringRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCollector\n     {\n         @Override\n@@ -129,9 +137,8 @@ public abstract class RecoveryCleanupWorkCollector extends LifecycleAdapter\n         }\n     }\n \n-    @FunctionalInterface\n-    interface CleanupJobGroupAction\n+    @FunctionalInterface interface CleanupJobGroupAction\n     {\n-        void execute( ExecutorService executor );\n-    }\n-}\n+        void execute( ExecutorService executor )\n+        ;}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
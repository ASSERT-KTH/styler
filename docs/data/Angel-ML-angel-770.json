{
    "project_name": "Angel-ML-angel",
    "error_id": "770",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/770/ServerComplexTypeRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/770/ServerComplexTypeRow.java\nindex 3d958bde055..74442e15a4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/770/ServerComplexTypeRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/770/ServerComplexTypeRow.java\n@@ -32,8 +32,8 @@ public abstract class ServerComplexTypeRow extends ServerRow {\n   protected Class<? extends IElement> valueType;\n \n   public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n-      long startCol, long endCol, long estElemNum,\n-      ObjectTypeStorage storage) {\n+                              long startCol, long endCol, long estElemNum,\n+                              ObjectTypeStorage storage) {\n     super(rowId, rowType, startCol, endCol, estElemNum, storage);\n     this.valueType = valueType;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/770/ServerComplexTypeRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/770/ServerComplexTypeRow.java\nindex 3d958bde055..e52265fd586 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/770/ServerComplexTypeRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/770/ServerComplexTypeRow.java\n@@ -32,15 +32,14 @@ public abstract class ServerComplexTypeRow extends ServerRow {\n   protected Class<? extends IElement> valueType;\n \n   public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n-      long startCol, long endCol, long estElemNum,\n+long startCol, long endCol, long estElemNum,\n       ObjectTypeStorage storage) {\n     super(rowId, rowType, startCol, endCol, estElemNum, storage);\n     this.valueType = valueType;\n   }\n \n   protected void initStorage() {\n-    storage = ServerRowStorageFactory\n-        .getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage,\n+    storage = ServerRowStorageFactory.getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage,\n             sparseToDenseFactor);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/770/ServerComplexTypeRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/770/ServerComplexTypeRow.java\nindex 3d958bde055..5ce884212e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/770/ServerComplexTypeRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/770/ServerComplexTypeRow.java\n@@ -24,23 +24,26 @@ import com.tencent.angel.ps.storage.vector.storage.ObjectTypeStorage;\n /**\n  * Base class for basic type row\n  */\n+\n public abstract class ServerComplexTypeRow extends ServerRow {\n \n   /**\n    * Value type class\n    */\n+\n   protected Class<? extends IElement> valueType;\n \n-  public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId, RowType rowType,\n-      long startCol, long endCol, long estElemNum,\n-      ObjectTypeStorage storage) {\n+  public ServerComplexTypeRow(Class<? extends IElement> valueType, int rowId,\n+                              RowType rowType,\n+                              long startCol,\n+                              long endCol,\n+                              long estElemNum, ObjectTypeStorage storage) {\n     super(rowId, rowType, startCol, endCol, estElemNum, storage);\n     this.valueType = valueType;\n   }\n \n   protected void initStorage() {\n-    storage = ServerRowStorageFactory\n-        .getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage,\n-            sparseToDenseFactor);\n+    storage = ServerRowStorageFactory.getComplexTypeStorage(valueType, rowType, startCol, endCol, estElemNum, useAdaptiveStorage, sparseToDenseFactor);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3927",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "249",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3927/NodeField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3927/NodeField.java\nindex 3469ad2c5eb..a26d93976dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3927/NodeField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3927/NodeField.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking;\n \n import org.neo4j.consistency.checking.cache.CacheAccess;\n@@ -35,238 +36,231 @@ import static org.neo4j.consistency.checking.cache.CacheSlots.RelationshipLink.S\n import static org.neo4j.consistency.checking.cache.CacheSlots.RelationshipLink.SLOT_SOURCE_OR_TARGET;\n \n enum NodeField implements\n-        RecordField<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport>,\n-        ComparativeRecordChecker<RelationshipRecord, NodeRecord, ConsistencyReport.RelationshipConsistencyReport>\n+    RecordField<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport>,\n+    ComparativeRecordChecker<RelationshipRecord, NodeRecord, ConsistencyReport.RelationshipConsistencyReport>\n {\n-    SOURCE\n-    {\n+  SOURCE\n+      {\n         @Override\n-        public long valueFrom( RelationshipRecord relationship )\n+        public long valueFrom(RelationshipRecord relationship)\n         {\n-            return relationship.getFirstNode();\n+          return relationship.getFirstNode();\n         }\n \n         @Override\n-        public long prev( RelationshipRecord relationship )\n+        public long prev(RelationshipRecord relationship)\n         {\n-            return relationship.getFirstPrevRel();\n+          return relationship.getFirstPrevRel();\n         }\n \n         @Override\n-        public long next( RelationshipRecord relationship )\n+        public long next(RelationshipRecord relationship)\n         {\n-            return relationship.getFirstNextRel();\n+          return relationship.getFirstNextRel();\n         }\n \n         @Override\n-        public boolean isFirst( RelationshipRecord relationship )\n+        public boolean isFirst(RelationshipRecord relationship)\n         {\n-            return relationship.isFirstInFirstChain();\n+          return relationship.isFirstInFirstChain();\n         }\n \n         @Override\n-        void illegalNode( ConsistencyReport.RelationshipConsistencyReport report )\n+        void illegalNode(ConsistencyReport.RelationshipConsistencyReport report)\n         {\n-            report.illegalSourceNode();\n+          report.illegalSourceNode();\n         }\n \n         @Override\n-        void nodeNotInUse( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node )\n+        void nodeNotInUse(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node)\n         {\n-            report.sourceNodeNotInUse( node );\n+          report.sourceNodeNotInUse(node);\n         }\n \n         @Override\n-        void noBackReference( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node )\n+        void noBackReference(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node)\n         {\n-            report.sourceNodeDoesNotReferenceBack( node );\n+          report.sourceNodeDoesNotReferenceBack(node);\n         }\n \n         @Override\n-        void noChain( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node )\n+        void noChain(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node)\n         {\n-            report.sourceNodeHasNoRelationships( node );\n+          report.sourceNodeHasNoRelationships(node);\n         }\n \n         @Override\n-        void notFirstInChain( ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship )\n+        void notFirstInChain(ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship)\n         {\n-            report.relationshipNotFirstInSourceChain( relationship );\n+          report.relationshipNotFirstInSourceChain(relationship);\n         }\n-    },\n-    TARGET\n-    {\n+      },\n+  TARGET\n+      {\n         @Override\n-        public long valueFrom( RelationshipRecord relationship )\n+        public long valueFrom(RelationshipRecord relationship)\n         {\n-            return relationship.getSecondNode();\n+          return relationship.getSecondNode();\n         }\n \n         @Override\n-        public long prev( RelationshipRecord relationship )\n+        public long prev(RelationshipRecord relationship)\n         {\n-            return relationship.getSecondPrevRel();\n+          return relationship.getSecondPrevRel();\n         }\n \n         @Override\n-        public long next( RelationshipRecord relationship )\n+        public long next(RelationshipRecord relationship)\n         {\n-            return relationship.getSecondNextRel();\n+          return relationship.getSecondNextRel();\n         }\n \n         @Override\n-        public boolean isFirst( RelationshipRecord relationship )\n+        public boolean isFirst(RelationshipRecord relationship)\n         {\n-            return relationship.isFirstInSecondChain();\n+          return relationship.isFirstInSecondChain();\n         }\n \n         @Override\n-        void illegalNode( ConsistencyReport.RelationshipConsistencyReport report )\n+        void illegalNode(ConsistencyReport.RelationshipConsistencyReport report)\n         {\n-            report.illegalTargetNode();\n+          report.illegalTargetNode();\n         }\n \n         @Override\n-        void nodeNotInUse( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node )\n+        void nodeNotInUse(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node)\n         {\n-            report.targetNodeNotInUse( node );\n+          report.targetNodeNotInUse(node);\n         }\n \n         @Override\n-        void noBackReference( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node )\n+        void noBackReference(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node)\n         {\n-            report.targetNodeDoesNotReferenceBack( node );\n+          report.targetNodeDoesNotReferenceBack(node);\n         }\n \n         @Override\n-        void noChain( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node )\n+        void noChain(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node)\n         {\n-            report.targetNodeHasNoRelationships( node );\n+          report.targetNodeHasNoRelationships(node);\n         }\n \n         @Override\n-        void notFirstInChain( ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship )\n+        void notFirstInChain(ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship)\n         {\n-            report.relationshipNotFirstInTargetChain( relationship );\n+          report.relationshipNotFirstInTargetChain(relationship);\n         }\n-    };\n+      };\n \n-    @Override\n-    public abstract long valueFrom( RelationshipRecord relationship );\n+  @Override\n+  public abstract long valueFrom(RelationshipRecord relationship);\n \n-    public static NodeField select( RelationshipRecord relationship, NodeRecord node )\n-    {\n-        return select( relationship, node.getId() );\n-    }\n+  public static NodeField select(RelationshipRecord relationship, NodeRecord node)\n+  {\n+    return select(relationship, node.getId());\n+  }\n \n-    public static NodeField select( RelationshipRecord relationship, long nodeId )\n+  public static NodeField select(RelationshipRecord relationship, long nodeId)\n+  {\n+    if (relationship.getFirstNode() == nodeId)\n     {\n-        if ( relationship.getFirstNode() == nodeId )\n-        {\n-            return SOURCE;\n-        }\n-        else if ( relationship.getSecondNode() == nodeId )\n-        {\n-            return TARGET;\n-        }\n-        else\n-        {\n-            return null;\n-        }\n+      return SOURCE;\n+    } else if (relationship.getSecondNode() == nodeId)\n+    {\n+      return TARGET;\n+    } else\n+    {\n+      return null;\n     }\n+  }\n \n-    public abstract long prev( RelationshipRecord relationship );\n+  public abstract long prev(RelationshipRecord relationship);\n \n-    public abstract long next( RelationshipRecord relationship );\n+  public abstract long next(RelationshipRecord relationship);\n \n-    public abstract boolean isFirst( RelationshipRecord relationship );\n+  public abstract boolean isFirst(RelationshipRecord relationship);\n \n-    public boolean hasRelationship( NodeRecord node )\n-    {\n-        return node.getNextRel() != Record.NO_NEXT_RELATIONSHIP.intValue();\n-    }\n+  public boolean hasRelationship(NodeRecord node)\n+  {\n+    return node.getNextRel() != Record.NO_NEXT_RELATIONSHIP.intValue();\n+  }\n \n-    @Override\n-    public void checkConsistency( RelationshipRecord relationship,\n-                                  CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n-                                  RecordAccess records )\n+  @Override\n+  public void checkConsistency(RelationshipRecord relationship,\n+                               CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n+                               RecordAccess records)\n+  {\n+    if (valueFrom(relationship) < 0)\n     {\n-        if ( valueFrom( relationship ) < 0 )\n-        {\n-            illegalNode( engine.report() );\n-        }\n-        else\n-        {\n-            // build the node record from cached values with only valid fields as id, inUse, and nextRel.\n-            NodeRecord node = new NodeRecord( valueFrom( relationship ) );\n-            CacheAccess.Client client = records.cacheAccess().client();\n-            node.setInUse( client.getFromCache( node.getId(), SLOT_SOURCE_OR_TARGET ) != RelationshipLink.SOURCE );\n-            node.setNextRel( client.getFromCache( node.getId(), SLOT_RELATIONSHIP_ID ) );\n-\n-            // We use \"created\" flag here. Consistency checking code revolves around records and so\n-            // even in scenarios where records are built from other sources, f.ex half-and-purpose-built from cache,\n-            // this flag is used to signal that the real record needs to be read in order to be used as a general\n-            // purpose record.\n-            node.setCreated();\n-            if ( records.shouldCheck( node.getId(), MultiPassStore.NODES ) )\n-            {\n-                engine.comparativeCheck( new DirectRecordReference<>( node, records ), this );\n-            }\n-        }\n+      illegalNode(engine.report());\n+    } else\n+    {\n+      // build the node record from cached values with only valid fields as id, inUse, and nextRel.\n+      NodeRecord node = new NodeRecord(valueFrom(relationship));\n+      CacheAccess.Client client = records.cacheAccess().client();\n+      node.setInUse(client.getFromCache(node.getId(), SLOT_SOURCE_OR_TARGET) != RelationshipLink.SOURCE);\n+      node.setNextRel(client.getFromCache(node.getId(), SLOT_RELATIONSHIP_ID));\n+\n+      // We use \"created\" flag here. Consistency checking code revolves around records and so\n+      // even in scenarios where records are built from other sources, f.ex half-and-purpose-built from cache,\n+      // this flag is used to signal that the real record needs to be read in order to be used as a general\n+      // purpose record.\n+      node.setCreated();\n+      if (records.shouldCheck(node.getId(), MultiPassStore.NODES))\n+      {\n+        engine.comparativeCheck(new DirectRecordReference<>(node, records), this);\n+      }\n     }\n-\n-    @Override\n-    public void checkReference( RelationshipRecord relationship, NodeRecord node,\n-                                CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n-                                RecordAccess records )\n+  }\n+\n+  @Override\n+  public void checkReference(RelationshipRecord relationship, NodeRecord node,\n+                             CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n+                             RecordAccess records)\n+  {\n+    if (!node.inUse())\n     {\n-        if ( !node.inUse() )\n+      nodeNotInUse(engine.report(), node);\n+    } else\n+    {\n+      if (isFirst(relationship))\n+      {\n+        CacheAccess.Client cacheAccess = records.cacheAccess().client();\n+        if (node.getNextRel() != relationship.getId())\n+        {\n+          node = ((DirectRecordReference<NodeRecord>) records.node(node.getId())).record();\n+\n+          if (node.isDense())\n+          {\n+            // TODO verify that the appropriate group refers back to the relationship\n+          } else\n+          {\n+            noBackReference(engine.report(), node);\n+          }\n+        } else\n         {\n-            nodeNotInUse( engine.report(), node );\n+          if (relationship.getFirstNode() != relationship.getSecondNode())\n+          {\n+            cacheAccess.putToCacheSingle(node.getId(), SLOT_PREV_OR_NEXT, NEXT);\n+          }\n         }\n-        else\n+      } else\n+      {\n+        if (!hasRelationship(node))\n         {\n-            if ( isFirst( relationship ) )\n-            {\n-                CacheAccess.Client cacheAccess = records.cacheAccess().client();\n-                if ( node.getNextRel() != relationship.getId() )\n-                {\n-                    node = ((DirectRecordReference<NodeRecord>)records.node( node.getId())).record();\n-\n-                    if ( node.isDense() )\n-                    {\n-                        // TODO verify that the appropriate group refers back to the relationship\n-                    }\n-                    else\n-                    {\n-                        noBackReference( engine.report(), node );\n-                    }\n-                }\n-                else\n-                {\n-                    if ( relationship.getFirstNode() != relationship.getSecondNode() )\n-                    {\n-                        cacheAccess.putToCacheSingle( node.getId(), SLOT_PREV_OR_NEXT, NEXT );\n-                    }\n-                }\n-            }\n-            else\n-            {\n-                if ( !hasRelationship( node ) )\n-                {\n-                    noChain( engine.report(), node );\n-                }\n-            }\n+          noChain(engine.report(), node);\n         }\n+      }\n     }\n+  }\n \n-    abstract void illegalNode( ConsistencyReport.RelationshipConsistencyReport report );\n+  abstract void illegalNode(ConsistencyReport.RelationshipConsistencyReport report);\n \n-    abstract void nodeNotInUse( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node );\n+  abstract void nodeNotInUse(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node);\n \n-    abstract void noBackReference( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node );\n+  abstract void noBackReference(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node);\n \n-    abstract void noChain( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node );\n+  abstract void noChain(ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node);\n \n-    abstract void notFirstInChain( ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship );\n+  abstract void notFirstInChain(ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship);\n }\n",
            "diff_size": 173
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "215",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3927/NodeField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3927/NodeField.java\nindex 3469ad2c5eb..cfeb605ebed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3927/NodeField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3927/NodeField.java\n@@ -34,9 +34,7 @@ import static org.neo4j.consistency.checking.cache.CacheSlots.RelationshipLink.S\n import static org.neo4j.consistency.checking.cache.CacheSlots.RelationshipLink.SLOT_RELATIONSHIP_ID;\n import static org.neo4j.consistency.checking.cache.CacheSlots.RelationshipLink.SLOT_SOURCE_OR_TARGET;\n \n-enum NodeField implements\n-        RecordField<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport>,\n-        ComparativeRecordChecker<RelationshipRecord, NodeRecord, ConsistencyReport.RelationshipConsistencyReport>\n+enum NodeField implements RecordField<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport>, ComparativeRecordChecker<RelationshipRecord, NodeRecord, ConsistencyReport.RelationshipConsistencyReport>\n {\n     SOURCE\n     {\n@@ -93,8 +91,7 @@ enum NodeField implements\n         {\n             report.relationshipNotFirstInSourceChain( relationship );\n         }\n-    },\n-    TARGET\n+    }, TARGET\n     {\n         @Override\n         public long valueFrom( RelationshipRecord relationship )\n@@ -187,10 +184,9 @@ enum NodeField implements\n     }\n \n     @Override\n-    public void checkConsistency( RelationshipRecord relationship,\n-                                  CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n+    public void checkConsistency( RelationshipRecord relationship, CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n                                   RecordAccess records )\n-    {\n+{\n         if ( valueFrom( relationship ) < 0 )\n         {\n             illegalNode( engine.report() );\n@@ -216,10 +212,9 @@ enum NodeField implements\n     }\n \n     @Override\n-    public void checkReference( RelationshipRecord relationship, NodeRecord node,\n-                                CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n+    public void checkReference( RelationshipRecord relationship, NodeRecord node, CheckerEngine<RelationshipRecord, ConsistencyReport.RelationshipConsistencyReport> engine,\n                                 RecordAccess records )\n-    {\n+{\n         if ( !node.inUse() )\n         {\n             nodeNotInUse( engine.report(), node );\n@@ -231,9 +226,8 @@ enum NodeField implements\n                 CacheAccess.Client cacheAccess = records.cacheAccess().client();\n                 if ( node.getNextRel() != relationship.getId() )\n                 {\n-                    node = ((DirectRecordReference<NodeRecord>)records.node( node.getId())).record();\n-\n-                    if ( node.isDense() )\n+                    node = ((DirectRecordReference<NodeRecord>)records.node( node.getId() )).record();\n+if ( node.isDense() )\n                     {\n                         // TODO verify that the appropriate group refers back to the relationship\n                     }\n@@ -269,4 +263,4 @@ enum NodeField implements\n     abstract void noChain( ConsistencyReport.RelationshipConsistencyReport report, NodeRecord node );\n \n     abstract void notFirstInChain( ConsistencyReport.NodeConsistencyReport report, RelationshipRecord relationship );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
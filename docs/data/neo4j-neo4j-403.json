{
    "project_name": "neo4j-neo4j",
    "error_id": "403",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/403/LuceneSchemaIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/403/LuceneSchemaIndex.java\nindex c4d16b4b159..434e2501308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/403/LuceneSchemaIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/403/LuceneSchemaIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema;\n \n import java.io.IOException;\n@@ -49,48 +50,48 @@ class LuceneSchemaIndex extends AbstractLuceneIndex<IndexReader>\n \n     private final TaskCoordinator taskCoordinator = new TaskCoordinator();\n \n-    LuceneSchemaIndex( PartitionedIndexStorage indexStorage, IndexDescriptor descriptor,\n-            IndexSamplingConfig samplingConfig, IndexPartitionFactory partitionFactory )\n+    LuceneSchemaIndex(PartitionedIndexStorage indexStorage, IndexDescriptor descriptor,\n+                      IndexSamplingConfig samplingConfig, IndexPartitionFactory partitionFactory)\n     {\n-        super( indexStorage, partitionFactory, descriptor );\n+        super(indexStorage, partitionFactory, descriptor);\n         this.samplingConfig = samplingConfig;\n     }\n \n     /**\n      * Verifies uniqueness of property values present in this index.\n      *\n-     * @param accessor the accessor to retrieve actual property values from the store.\n+     * @param accessor       the accessor to retrieve actual property values from the store.\n      * @param propertyKeyIds the ids of the properties to verify.\n      * @throws IndexEntryConflictException if there are duplicates.\n      * @throws IOException\n      * @see UniquenessVerifier#verify(NodePropertyAccessor, int[])\n      */\n-    public void verifyUniqueness( NodePropertyAccessor accessor, int[] propertyKeyIds )\n-            throws IOException, IndexEntryConflictException\n+    public void verifyUniqueness(NodePropertyAccessor accessor, int[] propertyKeyIds)\n+      throws IOException, IndexEntryConflictException\n     {\n-        flush( true );\n-        try ( UniquenessVerifier verifier = createUniquenessVerifier() )\n+        flush(true);\n+        try (UniquenessVerifier verifier = createUniquenessVerifier())\n         {\n-            verifier.verify( accessor, propertyKeyIds );\n+            verifier.verify(accessor, propertyKeyIds);\n         }\n     }\n \n     /**\n      * Verifies uniqueness of updated property values.\n      *\n-     * @param accessor the accessor to retrieve actual property values from the store.\n-     * @param propertyKeyIds the ids of the properties to verify.\n+     * @param accessor           the accessor to retrieve actual property values from the store.\n+     * @param propertyKeyIds     the ids of the properties to verify.\n      * @param updatedValueTuples the values to check uniqueness for.\n      * @throws IndexEntryConflictException if there are duplicates.\n      * @throws IOException\n      * @see UniquenessVerifier#verify(NodePropertyAccessor, int[], List)\n      */\n-    public void verifyUniqueness( NodePropertyAccessor accessor, int[] propertyKeyIds, List<Value[]> updatedValueTuples )\n-            throws IOException, IndexEntryConflictException\n+    public void verifyUniqueness(NodePropertyAccessor accessor, int[] propertyKeyIds, List<Value[]> updatedValueTuples)\n+      throws IOException, IndexEntryConflictException\n     {\n-        try ( UniquenessVerifier verifier = createUniquenessVerifier() )\n+        try (UniquenessVerifier verifier = createUniquenessVerifier())\n         {\n-            verifier.verify( accessor, propertyKeyIds, updatedValueTuples );\n+            verifier.verify(accessor, propertyKeyIds, updatedValueTuples);\n         }\n     }\n \n@@ -101,10 +102,9 @@ class LuceneSchemaIndex extends AbstractLuceneIndex<IndexReader>\n         try\n         {\n             taskCoordinator.awaitCompletion();\n-        }\n-        catch ( InterruptedException e )\n+        } catch (InterruptedException e)\n         {\n-            throw new RuntimeException( \"Interrupted while waiting for concurrent tasks to complete.\", e );\n+            throw new RuntimeException(\"Interrupted while waiting for concurrent tasks to complete.\", e);\n         }\n         super.drop();\n     }\n@@ -114,35 +114,35 @@ class LuceneSchemaIndex extends AbstractLuceneIndex<IndexReader>\n         ensureOpen();\n         maybeRefreshBlocking();\n         List<AbstractIndexPartition> partitions = getPartitions();\n-        return hasSinglePartition( partitions ) ? createSimpleUniquenessVerifier( partitions )\n-                                                : createPartitionedUniquenessVerifier( partitions );\n+        return hasSinglePartition(partitions) ? createSimpleUniquenessVerifier(partitions)\n+          : createPartitionedUniquenessVerifier(partitions);\n     }\n \n-    private UniquenessVerifier createSimpleUniquenessVerifier( List<AbstractIndexPartition> partitions ) throws IOException\n+    private UniquenessVerifier createSimpleUniquenessVerifier(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        AbstractIndexPartition singlePartition = getFirstPartition( partitions );\n+        AbstractIndexPartition singlePartition = getFirstPartition(partitions);\n         SearcherReference partitionSearcher = singlePartition.acquireSearcher();\n-        return new SimpleUniquenessVerifier( partitionSearcher );\n+        return new SimpleUniquenessVerifier(partitionSearcher);\n     }\n \n-    private UniquenessVerifier createPartitionedUniquenessVerifier( List<AbstractIndexPartition> partitions ) throws IOException\n+    private UniquenessVerifier createPartitionedUniquenessVerifier(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        List<SearcherReference> searchers = acquireSearchers( partitions );\n-        return new PartitionedUniquenessVerifier( searchers );\n+        List<SearcherReference> searchers = acquireSearchers(partitions);\n+        return new PartitionedUniquenessVerifier(searchers);\n     }\n \n     @Override\n-    protected SimpleIndexReader createSimpleReader( List<AbstractIndexPartition> partitions ) throws IOException\n+    protected SimpleIndexReader createSimpleReader(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        AbstractIndexPartition searcher = getFirstPartition( partitions );\n-        return new SimpleIndexReader( searcher.acquireSearcher(), descriptor, samplingConfig, taskCoordinator );\n+        AbstractIndexPartition searcher = getFirstPartition(partitions);\n+        return new SimpleIndexReader(searcher.acquireSearcher(), descriptor, samplingConfig, taskCoordinator);\n     }\n \n     @Override\n-    protected PartitionedIndexReader createPartitionedReader( List<AbstractIndexPartition> partitions ) throws IOException\n+    protected PartitionedIndexReader createPartitionedReader(List<AbstractIndexPartition> partitions) throws IOException\n     {\n-        List<SearcherReference> searchers = acquireSearchers( partitions );\n-        return new PartitionedIndexReader( searchers, descriptor, samplingConfig, taskCoordinator );\n+        List<SearcherReference> searchers = acquireSearchers(partitions);\n+        return new PartitionedIndexReader(searchers, descriptor, samplingConfig, taskCoordinator);\n     }\n \n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/403/LuceneSchemaIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/403/LuceneSchemaIndex.java\nindex c4d16b4b159..8a986c883e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/403/LuceneSchemaIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/403/LuceneSchemaIndex.java\n@@ -145,4 +145,4 @@ class LuceneSchemaIndex extends AbstractLuceneIndex<IndexReader>\n         return new PartitionedIndexReader( searchers, descriptor, samplingConfig, taskCoordinator );\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4313",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4313/JvmChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4313/JvmChecker.java\nindex 17bcf2fb44e..9f1d57d9629 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4313/JvmChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4313/JvmChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.info;\n \n import java.util.stream.Stream;\n@@ -24,58 +25,56 @@ import org.neo4j.logging.Log;\n \n public class JvmChecker\n {\n-    public static final String INCOMPATIBLE_JVM_WARNING = \"You are using an unsupported Java runtime. Please\" +\n-            \" use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n-    public static final String INCOMPATIBLE_JVM_VERSION_WARNING = \"You are using an unsupported version of \" +\n-            \"the Java runtime. Please use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n-    public static final String NO_SERIALIZATION_FILTER_WARNING = \"The version of the Java runtime you are using \" +\n-            \" does not include some important security features. Please use a JRE of version 8u121 or higher.\";\n+  public static final String INCOMPATIBLE_JVM_WARNING = \"You are using an unsupported Java runtime. Please\" +\n+      \" use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n+  public static final String INCOMPATIBLE_JVM_VERSION_WARNING = \"You are using an unsupported version of \" +\n+      \"the Java runtime. Please use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n+  public static final String NO_SERIALIZATION_FILTER_WARNING = \"The version of the Java runtime you are using \" +\n+      \" does not include some important security features. Please use a JRE of version 8u121 or higher.\";\n+\n+  private final Log log;\n+  private final JvmMetadataRepository jvmMetadataRepository;\n \n-    private final Log log;\n-    private final JvmMetadataRepository jvmMetadataRepository;\n+  public JvmChecker(Log log, JvmMetadataRepository jvmMetadataRepository)\n+  {\n+    this.log = log;\n+    this.jvmMetadataRepository = jvmMetadataRepository;\n+  }\n \n-    public JvmChecker( Log log, JvmMetadataRepository jvmMetadataRepository )\n+  public void checkJvmCompatibilityAndIssueWarning()\n+  {\n+    String javaVmName = jvmMetadataRepository.getJavaVmName();\n+    String javaVersion = jvmMetadataRepository.getJavaVersion();\n+\n+    if (!javaVmName.matches(\"(Java HotSpot\\\\(TM\\\\)|OpenJDK|IBM) (64-Bit Server|Server|Client|J9) VM\"))\n+    {\n+      log.warn(INCOMPATIBLE_JVM_WARNING);\n+    } else if (!javaVersion.matches(\"^1\\\\.[8].*\"))\n     {\n-        this.log = log;\n-        this.jvmMetadataRepository = jvmMetadataRepository;\n+      log.warn(INCOMPATIBLE_JVM_VERSION_WARNING);\n     }\n \n-    public void checkJvmCompatibilityAndIssueWarning()\n+    if (!serializationFilterIsAvailable())\n     {\n-        String javaVmName = jvmMetadataRepository.getJavaVmName();\n-        String javaVersion = jvmMetadataRepository.getJavaVersion();\n-\n-        if ( !javaVmName.matches( \"(Java HotSpot\\\\(TM\\\\)|OpenJDK|IBM) (64-Bit Server|Server|Client|J9) VM\" ) )\n-        {\n-            log.warn( INCOMPATIBLE_JVM_WARNING );\n-        }\n-        else if ( !javaVersion.matches( \"^1\\\\.[8].*\" ) )\n-        {\n-            log.warn( INCOMPATIBLE_JVM_VERSION_WARNING );\n-        }\n-\n-        if ( !serializationFilterIsAvailable() )\n-        {\n-            log.warn( NO_SERIALIZATION_FILTER_WARNING );\n-        }\n+      log.warn(NO_SERIALIZATION_FILTER_WARNING);\n     }\n+  }\n \n-    public boolean serializationFilterIsAvailable()\n+  public boolean serializationFilterIsAvailable()\n+  {\n+    //As part of JEP290 ObjectInputFilter was backported to JDK 8 in version 121, but under a different package.\n+    Stream<String> classNames = Stream.of(\"sun.misc.ObjectInputFilter\", \"java.io.ObjectInputFilter\");\n+    return classNames.anyMatch(className ->\n     {\n-        //As part of JEP290 ObjectInputFilter was backported to JDK 8 in version 121, but under a different package.\n-        Stream<String> classNames = Stream.of( \"sun.misc.ObjectInputFilter\", \"java.io.ObjectInputFilter\" );\n-        return classNames.anyMatch( className ->\n-        {\n-            try\n-            {\n-                Class.forName( className );\n-            }\n-            catch ( ClassNotFoundException e )\n-            {\n-                return false;\n-            }\n-            return true;\n-        } );\n+      try\n+      {\n+        Class.forName(className);\n+      } catch (ClassNotFoundException e)\n+      {\n+        return false;\n+      }\n+      return true;\n+    });\n \n-    }\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4313/JvmChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4313/JvmChecker.java\nindex 17bcf2fb44e..ba12a248db5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4313/JvmChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4313/JvmChecker.java\n@@ -24,14 +24,12 @@ import org.neo4j.logging.Log;\n \n public class JvmChecker\n {\n-    public static final String INCOMPATIBLE_JVM_WARNING = \"You are using an unsupported Java runtime. Please\" +\n-            \" use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n-    public static final String INCOMPATIBLE_JVM_VERSION_WARNING = \"You are using an unsupported version of \" +\n-            \"the Java runtime. Please use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n-    public static final String NO_SERIALIZATION_FILTER_WARNING = \"The version of the Java runtime you are using \" +\n-            \" does not include some important security features. Please use a JRE of version 8u121 or higher.\";\n+    public static final String INCOMPATIBLE_JVM_WARNING = \"You are using an unsupported Java runtime. Please\" + \" use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n \n-    private final Log log;\n+public static final String INCOMPATIBLE_JVM_VERSION_WARNING = \"You are using an unsupported version of \" + \"the Java runtime. Please use Oracle(R) Java(TM) Runtime Environment 8, OpenJDK(TM) 8 or IBM J9.\";\n+\n+public static final String NO_SERIALIZATION_FILTER_WARNING = \"The version of the Java runtime you are using \" + \" does not include some important security features. Please use a JRE of version 8u121 or higher.\";\n+private final Log log;\n     private final JvmMetadataRepository jvmMetadataRepository;\n \n     public JvmChecker( Log log, JvmMetadataRepository jvmMetadataRepository )\n@@ -44,8 +42,7 @@ public class JvmChecker\n     {\n         String javaVmName = jvmMetadataRepository.getJavaVmName();\n         String javaVersion = jvmMetadataRepository.getJavaVersion();\n-\n-        if ( !javaVmName.matches( \"(Java HotSpot\\\\(TM\\\\)|OpenJDK|IBM) (64-Bit Server|Server|Client|J9) VM\" ) )\n+if ( !javaVmName.matches( \"(Java HotSpot\\\\(TM\\\\)|OpenJDK|IBM) (64-Bit Server|Server|Client|J9) VM\" ) )\n         {\n             log.warn( INCOMPATIBLE_JVM_WARNING );\n         }\n@@ -76,6 +73,5 @@ public class JvmChecker\n             }\n             return true;\n         } );\n-\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
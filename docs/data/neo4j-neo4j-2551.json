{
    "project_name": "neo4j-neo4j",
    "error_id": "2551",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2551/EntityTokenUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2551/EntityTokenUpdate.java\nindex 946ccd0fbda..2afa55cd1b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2551/EntityTokenUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2551/EntityTokenUpdate.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.util.Arrays;\n@@ -25,14 +26,14 @@ import java.util.Comparator;\n public class EntityTokenUpdate\n {\n     public static final Comparator<? super EntityTokenUpdate> SORT_BY_ENTITY_ID =\n-            Comparator.comparingLong( EntityTokenUpdate::getEntityId );\n+      Comparator.comparingLong(EntityTokenUpdate::getEntityId);\n \n     private final long entityId;\n     private final long[] tokensBefore;\n     private final long[] tokensAfter;\n     private final long txId;\n \n-    private EntityTokenUpdate( long entityId, long[] tokensBefore, long[] tokensAfter, long txId )\n+    private EntityTokenUpdate(long entityId, long[] tokensBefore, long[] tokensAfter, long txId)\n     {\n         this.entityId = entityId;\n         this.tokensBefore = tokensBefore;\n@@ -63,51 +64,51 @@ public class EntityTokenUpdate\n     @Override\n     public String toString()\n     {\n-        return getClass().getSimpleName() + \"[entity:\" + entityId + \", tokensBefore:\" + Arrays.toString( tokensBefore ) +\n-                \", tokensAfter:\" + Arrays.toString( tokensAfter ) + \"]\";\n+        return getClass().getSimpleName() + \"[entity:\" + entityId + \", tokensBefore:\" + Arrays.toString(tokensBefore) +\n+          \", tokensAfter:\" + Arrays.toString(tokensAfter) + \"]\";\n     }\n \n-    public static EntityTokenUpdate tokenChanges( long entityId, long[] tokensBeforeChange, long[] tokensAfterChange )\n+    public static EntityTokenUpdate tokenChanges(long entityId, long[] tokensBeforeChange, long[] tokensAfterChange)\n     {\n-        return tokenChanges( entityId, tokensBeforeChange, tokensAfterChange, -1 );\n+        return tokenChanges(entityId, tokensBeforeChange, tokensAfterChange, -1);\n     }\n \n-    public static EntityTokenUpdate tokenChanges( long entityId, long[] tokensBeforeChange, long[] tokensAfterChange, long txId )\n+    public static EntityTokenUpdate tokenChanges(long entityId, long[] tokensBeforeChange, long[] tokensAfterChange, long txId)\n     {\n-        return new EntityTokenUpdate( entityId, tokensBeforeChange, tokensAfterChange, txId );\n+        return new EntityTokenUpdate(entityId, tokensBeforeChange, tokensAfterChange, txId);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n \n         EntityTokenUpdate that = (EntityTokenUpdate) o;\n \n-        if ( entityId != that.entityId )\n+        if (entityId != that.entityId)\n         {\n             return false;\n         }\n-        if ( !Arrays.equals( tokensAfter, that.tokensAfter ) )\n+        if (!Arrays.equals(tokensAfter, that.tokensAfter))\n         {\n             return false;\n         }\n-        return Arrays.equals( tokensBefore, that.tokensBefore );\n+        return Arrays.equals(tokensBefore, that.tokensBefore);\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = (int) (entityId ^ (entityId >>> 32));\n-        result = 31 * result + (tokensBefore != null ? Arrays.hashCode( tokensBefore ) : 0);\n-        result = 31 * result + (tokensAfter != null ? Arrays.hashCode( tokensAfter ) : 0);\n+        result = 31 * result + (tokensBefore != null ? Arrays.hashCode(tokensBefore) : 0);\n+        result = 31 * result + (tokensAfter != null ? Arrays.hashCode(tokensAfter) : 0);\n         return result;\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
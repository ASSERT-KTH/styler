{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3611",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3611/LabelScanValueIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3611/LabelScanValueIndexProgressor.java\nindex dc6df5f7557..472e4dae5be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3611/LabelScanValueIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3611/LabelScanValueIndexProgressor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.labelscan;\n \n import java.io.IOException;\n@@ -31,61 +32,60 @@ import org.neo4j.storageengine.api.schema.IndexProgressor;\n /**\n  * {@link IndexProgressor} which steps over multiple {@link LabelScanValue} and for each\n  * iterate over each set bit, returning actual node ids, i.e. {@code nodeIdRange+bitOffset}.\n- *\n  */\n public class LabelScanValueIndexProgressor extends LabelScanValueIndexAccessor implements IndexProgressor, Resource\n {\n \n-    private final NodeLabelClient client;\n+  private final NodeLabelClient client;\n \n-    LabelScanValueIndexProgressor( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor,\n-            Collection<RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException>> toRemoveFromWhenClosed,\n-            NodeLabelClient client )\n-    {\n-        super( toRemoveFromWhenClosed, cursor );\n-        this.client = client;\n-    }\n+  LabelScanValueIndexProgressor(RawCursor<Hit<LabelScanKey, LabelScanValue>, IOException> cursor,\n+                                Collection<RawCursor<Hit<LabelScanKey, LabelScanValue>, IOException>> toRemoveFromWhenClosed,\n+                                NodeLabelClient client)\n+  {\n+    super(toRemoveFromWhenClosed, cursor);\n+    this.client = client;\n+  }\n \n-    /**\n-     *  Progress through the index until the next accepted entry.\n-     *\n-     *  Progress the cursor to the current {@link LabelScanValue}, if this is not accepted by the client or if current\n-     *  value is exhausted it continues to the next {@link LabelScanValue}  from {@link RawCursor}.\n-     * @return <code>true</code> if an accepted entry was found, <code>false</code> otherwise\n-     */\n-    @Override\n-    public boolean next()\n+  /**\n+   * Progress through the index until the next accepted entry.\n+   * <p>\n+   * Progress the cursor to the current {@link LabelScanValue}, if this is not accepted by the client or if current\n+   * value is exhausted it continues to the next {@link LabelScanValue}  from {@link RawCursor}.\n+   *\n+   * @return <code>true</code> if an accepted entry was found, <code>false</code> otherwise\n+   */\n+  @Override\n+  public boolean next()\n+  {\n+    for (; ; )\n     {\n-        for ( ; ; )\n+      while (bits != 0)\n+      {\n+        int delta = Long.numberOfTrailingZeros(bits);\n+        bits &= bits - 1;\n+        if (client.acceptNode(baseNodeId + delta, null))\n         {\n-            while ( bits != 0 )\n-            {\n-                int delta = Long.numberOfTrailingZeros( bits );\n-                bits &= bits - 1;\n-                if ( client.acceptNode( baseNodeId + delta, null ) )\n-                {\n-                    return true;\n-                }\n-            }\n-            try\n-            {\n-                if ( !cursor.next() )\n-                {\n-                    close();\n-                    return false;\n-                }\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new UncheckedIOException( e );\n-            }\n+          return true;\n+        }\n+      }\n+      try\n+      {\n+        if (!cursor.next())\n+        {\n+          close();\n+          return false;\n+        }\n+      } catch (IOException e)\n+      {\n+        throw new UncheckedIOException(e);\n+      }\n \n-            Hit<LabelScanKey,LabelScanValue> hit = cursor.get();\n-            baseNodeId = hit.key().idRange * LabelScanValue.RANGE_SIZE;\n-            bits = hit.value().bits;\n+      Hit<LabelScanKey, LabelScanValue> hit = cursor.get();\n+      baseNodeId = hit.key().idRange * LabelScanValue.RANGE_SIZE;\n+      bits = hit.value().bits;\n \n-            //noinspection AssertWithSideEffects\n-            assert keysInOrder( hit.key() );\n-        }\n+      //noinspection AssertWithSideEffects\n+      assert keysInOrder(hit.key());\n     }\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3611/LabelScanValueIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3611/LabelScanValueIndexProgressor.java\nindex dc6df5f7557..64aebb1fe07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3611/LabelScanValueIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3611/LabelScanValueIndexProgressor.java\n@@ -35,11 +35,9 @@ import org.neo4j.storageengine.api.schema.IndexProgressor;\n  */\n public class LabelScanValueIndexProgressor extends LabelScanValueIndexAccessor implements IndexProgressor, Resource\n {\n-\n     private final NodeLabelClient client;\n \n-    LabelScanValueIndexProgressor( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor,\n-            Collection<RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException>> toRemoveFromWhenClosed,\n+    LabelScanValueIndexProgressor( RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException> cursor, Collection<RawCursor<Hit<LabelScanKey,LabelScanValue>,IOException>> toRemoveFromWhenClosed,\n             NodeLabelClient client )\n     {\n         super( toRemoveFromWhenClosed, cursor );\n@@ -88,4 +86,4 @@ public class LabelScanValueIndexProgressor extends LabelScanValueIndexAccessor i\n             assert keysInOrder( hit.key() );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
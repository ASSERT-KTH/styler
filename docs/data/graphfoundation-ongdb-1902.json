{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1902",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1902/SessionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1902/SessionTracker.java\nindex 5420b9f6c6a..24acb155951 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1902/SessionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1902/SessionTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering;\n \n import java.io.IOException;\n@@ -28,54 +29,54 @@ import org.neo4j.causalclustering.core.state.storage.StateStorage;\n \n public class SessionTracker\n {\n-    private final StateStorage<GlobalSessionTrackerState> sessionTrackerStorage;\n-    private GlobalSessionTrackerState sessionState;\n+  private final StateStorage<GlobalSessionTrackerState> sessionTrackerStorage;\n+  private GlobalSessionTrackerState sessionState;\n \n-    public SessionTracker( StateStorage<GlobalSessionTrackerState> sessionTrackerStorage )\n-    {\n-        this.sessionTrackerStorage = sessionTrackerStorage;\n-    }\n+  public SessionTracker(StateStorage<GlobalSessionTrackerState> sessionTrackerStorage)\n+  {\n+    this.sessionTrackerStorage = sessionTrackerStorage;\n+  }\n \n-    public void start()\n+  public void start()\n+  {\n+    if (sessionState == null)\n     {\n-        if ( sessionState == null )\n-        {\n-            sessionState = sessionTrackerStorage.getInitialState();\n-        }\n+      sessionState = sessionTrackerStorage.getInitialState();\n     }\n+  }\n \n-    public long getLastAppliedIndex()\n-    {\n-        return sessionState.logIndex();\n-    }\n+  public long getLastAppliedIndex()\n+  {\n+    return sessionState.logIndex();\n+  }\n \n-    public void flush() throws IOException\n-    {\n-        sessionTrackerStorage.persistStoreData( sessionState );\n-    }\n+  public void flush() throws IOException\n+  {\n+    sessionTrackerStorage.persistStoreData(sessionState);\n+  }\n \n-    public GlobalSessionTrackerState snapshot()\n-    {\n-        return sessionState.newInstance();\n-    }\n+  public GlobalSessionTrackerState snapshot()\n+  {\n+    return sessionState.newInstance();\n+  }\n \n-    public void installSnapshot( GlobalSessionTrackerState sessionState )\n-    {\n-        this.sessionState = sessionState;\n-    }\n+  public void installSnapshot(GlobalSessionTrackerState sessionState)\n+  {\n+    this.sessionState = sessionState;\n+  }\n \n-    public boolean validateOperation( GlobalSession globalSession, LocalOperationId localOperationId )\n-    {\n-        return sessionState.validateOperation( globalSession, localOperationId );\n-    }\n+  public boolean validateOperation(GlobalSession globalSession, LocalOperationId localOperationId)\n+  {\n+    return sessionState.validateOperation(globalSession, localOperationId);\n+  }\n \n-    public void update( GlobalSession globalSession, LocalOperationId localOperationId, long logIndex )\n-    {\n-        sessionState.update( globalSession, localOperationId, logIndex );\n-    }\n+  public void update(GlobalSession globalSession, LocalOperationId localOperationId, long logIndex)\n+  {\n+    sessionState.update(globalSession, localOperationId, logIndex);\n+  }\n \n-    public GlobalSessionTrackerState newInstance()\n-    {\n-        return sessionState.newInstance();\n-    }\n+  public GlobalSessionTrackerState newInstance()\n+  {\n+    return sessionState.newInstance();\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1902/SessionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1902/SessionTracker.java\nindex 5420b9f6c6a..2b68b00c424 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1902/SessionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1902/SessionTracker.java\n@@ -78,4 +78,4 @@ public class SessionTracker\n     {\n         return sessionState.newInstance();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
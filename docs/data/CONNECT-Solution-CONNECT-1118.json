{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1118",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docsubmission.adapter.deferred.response.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\nindex 63cd2d303e0..162e9c4f538 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.deferred.response.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\nindex 63cd2d303e0..08112c423d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.deferred.response.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -38,24 +39,23 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author patlollav\n  */\n public class AdapterDocSubmissionDeferredResponseProxyNoOpImpl implements AdapterDocSubmissionDeferredResponseProxy {\n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterDocSubmissionDeferredResponseProxyNoOpImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterDocSubmissionDeferredResponseProxyNoOpImpl.class);\n \n-    @AdapterDelegationEvent(beforeBuilder = DeferredResponseDescriptionBuilder.class,\n-            afterReturningBuilder = DocSubmissionArgTransformerBuilder.class,\n-            serviceType = \"Document Submission Deferred Response\", version = \"\")\n-    @Override\n-    public XDRAcknowledgementType provideAndRegisterDocumentSetBResponse(RegistryResponseType regResponse,\n-            AssertionType assertion) {\n-        LOG.trace(\"Begin AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n-        XDRAcknowledgementType ack = new XDRAcknowledgementType();\n-        RegistryResponseType regResp = new RegistryResponseType();\n-        regResp.setStatus(NhincConstants.XDR_ACK_STATUS_MSG);\n-        ack.setMessage(regResp);\n-        LOG.trace(\"End AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n-        return ack;\n-    }\n+  @AdapterDelegationEvent(beforeBuilder = DeferredResponseDescriptionBuilder.class,\n+      afterReturningBuilder = DocSubmissionArgTransformerBuilder.class,\n+      serviceType = \"Document Submission Deferred Response\", version = \"\")\n+  @Override\n+  public XDRAcknowledgementType provideAndRegisterDocumentSetBResponse(RegistryResponseType regResponse,\n+                                                                       AssertionType assertion) {\n+    LOG.trace(\"Begin AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n+    XDRAcknowledgementType ack = new XDRAcknowledgementType();\n+    RegistryResponseType regResp = new RegistryResponseType();\n+    regResp.setStatus(NhincConstants.XDR_ACK_STATUS_MSG);\n+    ack.setMessage(regResp);\n+    LOG.trace(\"End AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n+    return ack;\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\nindex 63cd2d303e0..6a3fbce0789 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.deferred.response.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -44,18 +45,16 @@ import org.slf4j.LoggerFactory;\n public class AdapterDocSubmissionDeferredResponseProxyNoOpImpl implements AdapterDocSubmissionDeferredResponseProxy {\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterDocSubmissionDeferredResponseProxyNoOpImpl.class);\n \n-    @AdapterDelegationEvent(beforeBuilder = DeferredResponseDescriptionBuilder.class,\n-            afterReturningBuilder = DocSubmissionArgTransformerBuilder.class,\n-            serviceType = \"Document Submission Deferred Response\", version = \"\")\n-    @Override\n-    public XDRAcknowledgementType provideAndRegisterDocumentSetBResponse(RegistryResponseType regResponse,\n-            AssertionType assertion) {\n+    @AdapterDelegationEvent(beforeBuilder = DeferredResponseDescriptionBuilder.class, afterReturningBuilder = DocSubmissionArgTransformerBuilder.class, serviceType = \"Document Submission Deferred Response\", version = \"\")\n+@Override\n+    public XDRAcknowledgementType provideAndRegisterDocumentSetBResponse(RegistryResponseType regResponse, AssertionType assertion) {\n         LOG.trace(\"Begin AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n         XDRAcknowledgementType ack = new XDRAcknowledgementType();\n         RegistryResponseType regResp = new RegistryResponseType();\n         regResp.setStatus(NhincConstants.XDR_ACK_STATUS_MSG);\n         ack.setMessage(regResp);\n         LOG.trace(\"End AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n-        return ack;\n+\n+return ack;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\nindex 63cd2d303e0..5331524d790 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n@@ -33,7 +33,6 @@ import gov.hhs.fha.nhinc.docsubmission.aspect.DocSubmissionArgTransformerBuilder\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.healthit.nhin.XDRAcknowledgementType;\n import oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryResponseType;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -41,15 +40,16 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author patlollav\n  */\n+\n+\n public class AdapterDocSubmissionDeferredResponseProxyNoOpImpl implements AdapterDocSubmissionDeferredResponseProxy {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterDocSubmissionDeferredResponseProxyNoOpImpl.class);\n \n-    @AdapterDelegationEvent(beforeBuilder = DeferredResponseDescriptionBuilder.class,\n-            afterReturningBuilder = DocSubmissionArgTransformerBuilder.class,\n-            serviceType = \"Document Submission Deferred Response\", version = \"\")\n+\n+    @AdapterDelegationEvent(beforeBuilder = DeferredResponseDescriptionBuilder.class, afterReturningBuilder = DocSubmissionArgTransformerBuilder.class, serviceType = \"Document Submission Deferred Response\", version = \"\")\n     @Override\n-    public XDRAcknowledgementType provideAndRegisterDocumentSetBResponse(RegistryResponseType regResponse,\n-            AssertionType assertion) {\n+    public XDRAcknowledgementType provideAndRegisterDocumentSetBResponse(RegistryResponseType regResponse, AssertionType assertion) {\n         LOG.trace(\"Begin AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n         XDRAcknowledgementType ack = new XDRAcknowledgementType();\n         RegistryResponseType regResp = new RegistryResponseType();\n@@ -58,4 +58,5 @@ public class AdapterDocSubmissionDeferredResponseProxyNoOpImpl implements Adapte\n         LOG.trace(\"End AdapterDocSubmissionDeferredResponseProxyNoOpImpl.provideAndRegisterDocumentSetBResponse\");\n         return ack;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\nindex 63cd2d303e0..a3437367767 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n@@ -24,7 +24,8 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.docsubmission.adapter.deferred.response.proxy;\n+package gov.hhs.fha.nhinc.docsubmission.adapter.deferred.\n+response .proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\nindex 63cd2d303e0..162e9c4f538 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1118/AdapterDocSubmissionDeferredResponseProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.deferred.response.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2043",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2043/ServerStartupErrors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2043/ServerStartupErrors.java\nindex fa5d671f34f..d5cde75da73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2043/ServerStartupErrors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2043/ServerStartupErrors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.exception;\n \n import java.util.function.Function;\n@@ -33,39 +34,39 @@ import static java.lang.String.format;\n  */\n public class ServerStartupErrors\n {\n-    private ServerStartupErrors()\n-    {\n-    }\n-\n-    /**\n-     * Each function in this array handles translating one case. If it doesn't know how to translate a given\n-     * throwable, it simply returns null.\n-     */\n-    private static final Function<Throwable, ServerStartupException>[] translators = new Function[] {\n-        // Handle upgrade errors\n-            (Function<Throwable,ServerStartupException>) o ->\n-            {\n-                Throwable rootCause = Exceptions.rootCause( o );\n-                if ( rootCause instanceof UpgradeNotAllowedException )\n-                {\n-                    return new UpgradeDisallowedStartupException( (UpgradeNotAllowedException)rootCause );\n-                }\n-                return null;\n-            }\n-    };\n+  private ServerStartupErrors()\n+  {\n+  }\n \n-    public static ServerStartupException translateToServerStartupError( Throwable cause )\n-    {\n-        for ( Function<Throwable,ServerStartupException> translator : translators )\n+  /**\n+   * Each function in this array handles translating one case. If it doesn't know how to translate a given\n+   * throwable, it simply returns null.\n+   */\n+  private static final Function<Throwable, ServerStartupException>[] translators = new Function[] {\n+      // Handle upgrade errors\n+      (Function<Throwable, ServerStartupException>) o ->\n+      {\n+        Throwable rootCause = Exceptions.rootCause(o);\n+        if (rootCause instanceof UpgradeNotAllowedException)\n         {\n-            ServerStartupException r = translator.apply( cause );\n-            if ( r != null )\n-            {\n-                return r;\n-            }\n+          return new UpgradeDisallowedStartupException((UpgradeNotAllowedException) rootCause);\n         }\n+        return null;\n+      }\n+  };\n \n-        return new ServerStartupException( format( \"Starting Neo4j failed: %s\", cause.getMessage() ), cause );\n+  public static ServerStartupException translateToServerStartupError(Throwable cause)\n+  {\n+    for (Function<Throwable, ServerStartupException> translator : translators)\n+    {\n+      ServerStartupException r = translator.apply(cause);\n+      if (r != null)\n+      {\n+        return r;\n+      }\n     }\n \n+    return new ServerStartupException(format(\"Starting Neo4j failed: %s\", cause.getMessage()), cause);\n+  }\n+\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2043/ServerStartupErrors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2043/ServerStartupErrors.java\nindex fa5d671f34f..194fa21f6a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2043/ServerStartupErrors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2043/ServerStartupErrors.java\n@@ -48,7 +48,7 @@ public class ServerStartupErrors\n                 Throwable rootCause = Exceptions.rootCause( o );\n                 if ( rootCause instanceof UpgradeNotAllowedException )\n                 {\n-                    return new UpgradeDisallowedStartupException( (UpgradeNotAllowedException)rootCause );\n+                    return new UpgradeDisallowedStartupException( (UpgradeNotAllowedException) rootCause );\n                 }\n                 return null;\n             }\n@@ -67,5 +67,4 @@ public class ServerStartupErrors\n \n         return new ServerStartupException( format( \"Starting Neo4j failed: %s\", cause.getMessage() ), cause );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
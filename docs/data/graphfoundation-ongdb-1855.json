{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1855",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1855/PageCacheWarmerKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1855/PageCacheWarmerKernelExtension.java\nindex 543f59fa4f7..a8ab5189202 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1855/PageCacheWarmerKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1855/PageCacheWarmerKernelExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.pagecache;\n \n import java.util.function.Supplier;\n@@ -33,45 +34,45 @@ import org.neo4j.scheduler.JobScheduler;\n \n class PageCacheWarmerKernelExtension extends LifecycleAdapter\n {\n-    private final AvailabilityGuard availabilityGuard;\n-    private final Supplier<NeoStoreFileListing> fileListing;\n-    private final Config config;\n-    private final PageCacheWarmer pageCacheWarmer;\n-    private final WarmupAvailabilityListener availabilityListener;\n-    private volatile boolean started;\n+  private final AvailabilityGuard availabilityGuard;\n+  private final Supplier<NeoStoreFileListing> fileListing;\n+  private final Config config;\n+  private final PageCacheWarmer pageCacheWarmer;\n+  private final WarmupAvailabilityListener availabilityListener;\n+  private volatile boolean started;\n \n-    PageCacheWarmerKernelExtension(\n-            JobScheduler scheduler, AvailabilityGuard availabilityGuard, PageCache pageCache, FileSystemAbstraction fs,\n-            Supplier<NeoStoreFileListing> fileListing, Log log, PageCacheWarmerMonitor monitor, Config config )\n-    {\n-        this.availabilityGuard = availabilityGuard;\n-        this.fileListing = fileListing;\n-        this.config = config;\n-        pageCacheWarmer = new PageCacheWarmer( fs, pageCache, scheduler );\n-        availabilityListener = new WarmupAvailabilityListener( scheduler, pageCacheWarmer, config, log, monitor );\n-    }\n+  PageCacheWarmerKernelExtension(\n+      JobScheduler scheduler, AvailabilityGuard availabilityGuard, PageCache pageCache, FileSystemAbstraction fs,\n+      Supplier<NeoStoreFileListing> fileListing, Log log, PageCacheWarmerMonitor monitor, Config config)\n+  {\n+    this.availabilityGuard = availabilityGuard;\n+    this.fileListing = fileListing;\n+    this.config = config;\n+    pageCacheWarmer = new PageCacheWarmer(fs, pageCache, scheduler);\n+    availabilityListener = new WarmupAvailabilityListener(scheduler, pageCacheWarmer, config, log, monitor);\n+  }\n \n-    @Override\n-    public void start()\n+  @Override\n+  public void start()\n+  {\n+    if (config.get(GraphDatabaseSettings.pagecache_warmup_enabled))\n     {\n-        if ( config.get( GraphDatabaseSettings.pagecache_warmup_enabled ) )\n-        {\n-            pageCacheWarmer.start();\n-            availabilityGuard.addListener( availabilityListener );\n-            fileListing.get().registerStoreFileProvider( pageCacheWarmer );\n-            started = true;\n-        }\n+      pageCacheWarmer.start();\n+      availabilityGuard.addListener(availabilityListener);\n+      fileListing.get().registerStoreFileProvider(pageCacheWarmer);\n+      started = true;\n     }\n+  }\n \n-    @Override\n-    public void stop() throws Throwable\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    if (started)\n     {\n-        if ( started )\n-        {\n-            availabilityGuard.removeListener( availabilityListener );\n-            availabilityListener.unavailable(); // Make sure scheduled jobs get cancelled.\n-            pageCacheWarmer.stop();\n-            started = false;\n-        }\n+      availabilityGuard.removeListener(availabilityListener);\n+      availabilityListener.unavailable(); // Make sure scheduled jobs get cancelled.\n+      pageCacheWarmer.stop();\n+      started = false;\n     }\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1855/PageCacheWarmerKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1855/PageCacheWarmerKernelExtension.java\nindex 543f59fa4f7..4106be55343 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1855/PageCacheWarmerKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1855/PageCacheWarmerKernelExtension.java\n@@ -40,9 +40,7 @@ class PageCacheWarmerKernelExtension extends LifecycleAdapter\n     private final WarmupAvailabilityListener availabilityListener;\n     private volatile boolean started;\n \n-    PageCacheWarmerKernelExtension(\n-            JobScheduler scheduler, AvailabilityGuard availabilityGuard, PageCache pageCache, FileSystemAbstraction fs,\n-            Supplier<NeoStoreFileListing> fileListing, Log log, PageCacheWarmerMonitor monitor, Config config )\n+    PageCacheWarmerKernelExtension( JobScheduler scheduler, AvailabilityGuard availabilityGuard, PageCache pageCache, FileSystemAbstraction fs, Supplier<NeoStoreFileListing> fileListing, Log log, PageCacheWarmerMonitor monitor, Config config )\n     {\n         this.availabilityGuard = availabilityGuard;\n         this.fileListing = fileListing;\n@@ -74,4 +72,4 @@ class PageCacheWarmerKernelExtension extends LifecycleAdapter\n             started = false;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
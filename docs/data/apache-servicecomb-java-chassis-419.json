{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "419",
    "information": {
        "errors": [
            {
                "line": "77",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException {\n    // After jackson 2.10.*, will by pass the following check when convert value. But this is useful\n    // for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n    // not necessary and will cause some trouble in some user applications that depend on this)\n    if (fromValue == null) {\n      return null;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/419/RestObjectMapper.java\nindex 4fd41fcb94f..9ce5608f37d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/419/RestObjectMapper.java\n@@ -74,7 +74,7 @@ public class RestObjectMapper extends AbstractRestObjectMapper {\n   @SuppressWarnings(\"unchecked\")\n   public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException {\n     // After jackson 2.10.*, will by pass the following check when convert value. But this is useful\n-    // for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n+// for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n     // not necessary and will cause some trouble in some user applications that depend on this)\n     if (fromValue == null) {\n       return null;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/419/RestObjectMapper.java\nindex 4fd41fcb94f..0220e9d6816 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/419/RestObjectMapper.java\n@@ -82,11 +82,11 @@ public class RestObjectMapper extends AbstractRestObjectMapper {\n       Class<?> targetType = toValueType.getRawClass();\n       if (targetType != Object.class\n           && !toValueType.hasGenericTypes()\n-          && targetType.isAssignableFrom(fromValue.getClass())) {\n-        return (T) fromValue;\n+    && targetType.isAssignableFrom(fromValue.getClass())) {\n+  return (T) fromValue;\n       }\n     }\n \n     return super.convertValue(fromValue, toValueType);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/419/RestObjectMapper.java\nindex 4fd41fcb94f..9ce5608f37d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/419/RestObjectMapper.java\n@@ -74,7 +74,7 @@ public class RestObjectMapper extends AbstractRestObjectMapper {\n   @SuppressWarnings(\"unchecked\")\n   public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException {\n     // After jackson 2.10.*, will by pass the following check when convert value. But this is useful\n-    // for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n+// for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n     // not necessary and will cause some trouble in some user applications that depend on this)\n     if (fromValue == null) {\n       return null;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/419/RestObjectMapper.java\nindex 4fd41fcb94f..8c3c96f3911 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/419/RestObjectMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/419/RestObjectMapper.java\n@@ -74,7 +74,8 @@ public class RestObjectMapper extends AbstractRestObjectMapper {\n   @SuppressWarnings(\"unchecked\")\n   public <T> T convertValue(Object fromValue, JavaType toValueType) throws IllegalArgumentException {\n     // After jackson 2.10.*, will by pass the following check when convert value. But this is useful\n-    // for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n+\n+// for java chassis applications and do not need to convert to keep performance. So add the check here.(conversion is\n     // not necessary and will cause some trouble in some user applications that depend on this)\n     if (fromValue == null) {\n       return null;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
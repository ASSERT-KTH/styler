{
    "project_name": "Activiti-Activiti",
    "error_id": "715",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.runtime.model.impl;\n\nimport java.util.Objects;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/715/BPMNActivityImpl.java\nindex e44130d8432..8922d059d3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/715/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/715/BPMNActivityImpl.java\nindex e44130d8432..42e32f146b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/715/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n@@ -76,8 +77,8 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n         }\n         BPMNActivityImpl other = (BPMNActivityImpl) obj;\n         return Objects.equals(activityName, other.activityName) &&\n-               Objects.equals(activityType, other.activityType) &&\n-               Objects.equals(executionId, other.executionId);\n+                Objects.equals(activityType, other.activityType) &&\n+                Objects.equals(executionId, other.executionId);\n     }\n \n     @Override\n@@ -92,14 +93,14 @@ public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n     public String toString() {\n         StringBuilder builder = new StringBuilder();\n         builder.append(\"BPMNActivityImpl [activityName=\")\n-               .append(activityName)\n-               .append(\", activityType=\")\n-               .append(activityType)\n-               .append(\", executionId=\")\n-               .append(executionId)\n-               .append(\", toString()=\")\n-               .append(super.toString())\n-               .append(\"]\");\n+                .append(activityName)\n+                .append(\", activityType=\")\n+                .append(activityType)\n+                .append(\", executionId=\")\n+                .append(executionId)\n+                .append(\", toString()=\")\n+                .append(super.toString())\n+                .append(\"]\");\n         return builder.toString();\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/715/BPMNActivityImpl.java\nindex e44130d8432..ebd3a723708 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/715/BPMNActivityImpl.java\n@@ -16,90 +16,81 @@\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n-\n import org.activiti.api.process.model.BPMNActivity;\n \n+\n public class BPMNActivityImpl extends BPMNElementImpl implements BPMNActivity {\n \n-    private String activityName;\n-    private String activityType;\n-    private String executionId;\n+  private String activityName;\n \n-    public BPMNActivityImpl() {\n-    }\n+  private String activityType;\n \n-    public BPMNActivityImpl(String elementId,\n-                            String activityName,\n-                            String activityType) {\n-        this.setElementId(elementId);\n-        this.activityName = activityName;\n-        this.activityType = activityType;\n-    }\n+  private String executionId;\n \n-    @Override\n-    public String getActivityName() {\n-        return activityName;\n-    }\n+  public BPMNActivityImpl() {\n+  }\n \n-    public void setActivityName(String activityName) {\n-        this.activityName = activityName;\n-    }\n+  public BPMNActivityImpl(String elementId, String activityName, String activityType) {\n+    this.setElementId(elementId);\n+    this.activityName = activityName;\n+    this.activityType = activityType;\n+  }\n \n-    @Override\n-    public String getActivityType() {\n-        return activityType;\n-    }\n+  @Override\n+  public String getActivityName() {\n+    return activityName;\n+  }\n \n-    public void setActivityType(String activityType) {\n-        this.activityType = activityType;\n-    }\n+  public void setActivityName(String activityName) {\n+    this.activityName = activityName;\n+  }\n \n-    @Override\n-    public String getExecutionId() {\n-        return this.executionId;\n-    }\n+  @Override\n+  public String getActivityType() {\n+    return activityType;\n+  }\n \n-    public void setExecutionId(String executionId) {\n-        this.executionId = executionId;\n-    }\n+  public void setActivityType(String activityType) {\n+    this.activityType = activityType;\n+  }\n \n-    @Override\n-    public boolean equals(Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (!super.equals(obj)) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        BPMNActivityImpl other = (BPMNActivityImpl) obj;\n-        return Objects.equals(activityName, other.activityName) &&\n-               Objects.equals(activityType, other.activityType) &&\n-               Objects.equals(executionId, other.executionId);\n-    }\n+  @Override\n+  public String getExecutionId() {\n+    return this.executionId;\n+  }\n \n-    @Override\n-    public int hashCode() {\n-        final int prime = 31;\n-        int result = super.hashCode();\n-        result = prime * result + Objects.hash(activityName, activityType, executionId);\n-        return result;\n-    }\n+  public void setExecutionId(String executionId) {\n+    this.executionId = executionId;\n+  }\n \n-    @Override\n-    public String toString() {\n-        StringBuilder builder = new StringBuilder();\n-        builder.append(\"BPMNActivityImpl [activityName=\")\n-               .append(activityName)\n-               .append(\", activityType=\")\n-               .append(activityType)\n-               .append(\", executionId=\")\n-               .append(executionId)\n-               .append(\", toString()=\")\n-               .append(super.toString())\n-               .append(\"]\");\n-        return builder.toString();\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+    if (!super.equals(obj)) {\n+      return false;\n     }\n-}\n+    if (getClass() != obj.getClass()) {\n+      return false;\n+    }\n+\n+    BPMNActivityImpl other = (BPMNActivityImpl) obj;\n+    return Objects.equals(activityName, other.activityName) && Objects.equals(activityType, other.activityType) && Objects.equals(executionId, other.executionId);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    final int prime = 31;\n+    int result = super.hashCode();\n+    result = prime * result + Objects.hash(activityName, activityType, executionId);\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"BPMNActivityImpl [activityName=\").append(activityName).append(\", activityType=\").append(activityType).append(\", executionId=\").append(executionId).append(\", toString()=\").append(super.toString()).append(\"]\");\n+    return builder.toString();\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 96
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/715/BPMNActivityImpl.java\nindex e44130d8432..8922d059d3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/715/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/715/BPMNActivityImpl.java\nindex e44130d8432..8922d059d3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/715/BPMNActivityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/715/BPMNActivityImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
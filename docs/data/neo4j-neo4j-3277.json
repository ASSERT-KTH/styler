{
    "project_name": "neo4j-neo4j",
    "error_id": "3277",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3277/TransactionAppender.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3277/TransactionAppender.java\nindex 4a9e8b686d6..74ce61f2afe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3277/TransactionAppender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3277/TransactionAppender.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.IOException;\n@@ -42,9 +43,9 @@ public interface TransactionAppender\n      * Callers must make sure that successfully appended\n      * transactions exiting this method are {@link Commitment#publishAsClosed(PageCursorTracer)}.\n      *\n-     * @param batch transactions to append to the log. These transaction instances provide both input arguments\n-     * as well as a place to provide output data, namely {@link TransactionToApply#commitment(Commitment, long)} and\n-     * {@link TransactionToApply#transactionId()}.\n+     * @param batch          transactions to append to the log. These transaction instances provide both input arguments\n+     *                       as well as a place to provide output data, namely {@link TransactionToApply#commitment(Commitment, long)} and\n+     *                       {@link TransactionToApply#transactionId()}.\n      * @param logAppendEvent A trace event for the given log append operation.\n      * @return last committed transaction in this batch. The appended (i.e. committed) transactions\n      * will have had their {@link TransactionToApply#commitment(Commitment, long)} available and caller is expected to\n@@ -52,7 +53,7 @@ public interface TransactionAppender\n      * Note that {@link Commitment commitments} must be {@link Commitment#publishAsCommitted(PageCursorTracer)}  marked as committed}\n      * by this method.\n      * @throws IOException if there was a problem appending the transaction. See method javadoc body for\n-     * how to handle exceptions in general thrown from this method.\n+     *                     how to handle exceptions in general thrown from this method.\n      */\n-    long append( TransactionToApply batch, LogAppendEvent logAppendEvent ) throws IOException;\n+    long append(TransactionToApply batch, LogAppendEvent logAppendEvent) throws IOException;\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4171",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "192",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "225",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4171/CoreStateDownloader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4171/CoreStateDownloader.java\nindex 75c59116bff..b04a365e662 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4171/CoreStateDownloader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4171/CoreStateDownloader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.snapshot;\n \n import java.io.IOException;\n@@ -50,186 +51,180 @@ import static org.neo4j.causalclustering.catchup.CatchupResult.SUCCESS_END_OF_ST\n \n public class CoreStateDownloader\n {\n-    private final LocalDatabase localDatabase;\n-    private final Suspendable suspendOnStoreCopy;\n-    private final RemoteStore remoteStore;\n-    private final CatchUpClient catchUpClient;\n-    private final Log log;\n-    private final StoreCopyProcess storeCopyProcess;\n-    private final CoreStateMachines coreStateMachines;\n-    private final CoreSnapshotService snapshotService;\n-    private CommitStateHelper commitStateHelper;\n-\n-    public CoreStateDownloader( LocalDatabase localDatabase, Suspendable suspendOnStoreCopy, RemoteStore remoteStore,\n-                                CatchUpClient catchUpClient, LogProvider logProvider, StoreCopyProcess storeCopyProcess,\n-                                CoreStateMachines coreStateMachines, CoreSnapshotService snapshotService,\n-                                CommitStateHelper commitStateHelper )\n+  private final LocalDatabase localDatabase;\n+  private final Suspendable suspendOnStoreCopy;\n+  private final RemoteStore remoteStore;\n+  private final CatchUpClient catchUpClient;\n+  private final Log log;\n+  private final StoreCopyProcess storeCopyProcess;\n+  private final CoreStateMachines coreStateMachines;\n+  private final CoreSnapshotService snapshotService;\n+  private CommitStateHelper commitStateHelper;\n+\n+  public CoreStateDownloader(LocalDatabase localDatabase, Suspendable suspendOnStoreCopy, RemoteStore remoteStore,\n+                             CatchUpClient catchUpClient, LogProvider logProvider, StoreCopyProcess storeCopyProcess,\n+                             CoreStateMachines coreStateMachines, CoreSnapshotService snapshotService,\n+                             CommitStateHelper commitStateHelper)\n+  {\n+    this.localDatabase = localDatabase;\n+    this.suspendOnStoreCopy = suspendOnStoreCopy;\n+    this.remoteStore = remoteStore;\n+    this.catchUpClient = catchUpClient;\n+    this.log = logProvider.getLog(getClass());\n+    this.storeCopyProcess = storeCopyProcess;\n+    this.coreStateMachines = coreStateMachines;\n+    this.snapshotService = snapshotService;\n+    this.commitStateHelper = commitStateHelper;\n+  }\n+\n+  /**\n+   * Tries to catchup this instance by downloading a snapshot. A snapshot consists of both the\n+   * comparatively small state of the cluster state machines as well as the database store. The\n+   * store is however caught up using two different approach. If it is possible to catchup by\n+   * pulling transactions, then this will be sufficient, but if the store is lagging too far\n+   * behind then a complete store copy will be attempted.\n+   *\n+   * @param addressProvider Provider of addresses to catchup from.\n+   * @return True if the operation succeeded, and false otherwise.\n+   * @throws LifecycleException        A major database component failed to start or stop.\n+   * @throws IOException               An issue with I/O.\n+   * @throws DatabaseShutdownException The database is shutting down.\n+   */\n+  boolean downloadSnapshot(CatchupAddressProvider addressProvider)\n+      throws LifecycleException, IOException, DatabaseShutdownException\n+  {\n+    /* Extract some key properties before shutting it down. */\n+    boolean isEmptyStore = localDatabase.isEmpty();\n+\n+    /*\n+     *  There is no reason to try to recover if there are no transaction logs and in fact it is\n+     *  also problematic for the initial transaction pull during the snapshot download because the\n+     *  kernel will create a transaction log with a header where previous index points to the same\n+     *  index as that written down into the metadata store. This is problematic because we have no\n+     *  guarantee that there are later transactions and we need at least one transaction in\n+     *  the log to figure out the Raft log index (see {@link RecoverConsensusLogIndex}).\n+     */\n+    if (commitStateHelper.hasTxLogs(localDatabase.storeDir()))\n     {\n-        this.localDatabase = localDatabase;\n-        this.suspendOnStoreCopy = suspendOnStoreCopy;\n-        this.remoteStore = remoteStore;\n-        this.catchUpClient = catchUpClient;\n-        this.log = logProvider.getLog( getClass() );\n-        this.storeCopyProcess = storeCopyProcess;\n-        this.coreStateMachines = coreStateMachines;\n-        this.snapshotService = snapshotService;\n-        this.commitStateHelper = commitStateHelper;\n+      log.info(\"Recovering local database\");\n+      ensure(localDatabase::start, \"start local database\");\n+      ensure(localDatabase::stop, \"stop local database\");\n     }\n \n-    /**\n-     * Tries to catchup this instance by downloading a snapshot. A snapshot consists of both the\n-     * comparatively small state of the cluster state machines as well as the database store. The\n-     * store is however caught up using two different approach. If it is possible to catchup by\n-     * pulling transactions, then this will be sufficient, but if the store is lagging too far\n-     * behind then a complete store copy will be attempted.\n-     *\n-     * @param addressProvider Provider of addresses to catchup from.\n-     * @return True if the operation succeeded, and false otherwise.\n-     * @throws LifecycleException A major database component failed to start or stop.\n-     * @throws IOException An issue with I/O.\n-     * @throws DatabaseShutdownException The database is shutting down.\n-     */\n-    boolean downloadSnapshot( CatchupAddressProvider addressProvider )\n-            throws LifecycleException, IOException, DatabaseShutdownException\n+    AdvertisedSocketAddress primary;\n+    StoreId remoteStoreId;\n+    try\n     {\n-        /* Extract some key properties before shutting it down. */\n-        boolean isEmptyStore = localDatabase.isEmpty();\n-\n-        /*\n-         *  There is no reason to try to recover if there are no transaction logs and in fact it is\n-         *  also problematic for the initial transaction pull during the snapshot download because the\n-         *  kernel will create a transaction log with a header where previous index points to the same\n-         *  index as that written down into the metadata store. This is problematic because we have no\n-         *  guarantee that there are later transactions and we need at least one transaction in\n-         *  the log to figure out the Raft log index (see {@link RecoverConsensusLogIndex}).\n-         */\n-        if ( commitStateHelper.hasTxLogs( localDatabase.storeDir() ) )\n-        {\n-            log.info( \"Recovering local database\" );\n-            ensure( localDatabase::start, \"start local database\" );\n-            ensure( localDatabase::stop, \"stop local database\" );\n-        }\n-\n-        AdvertisedSocketAddress primary;\n-        StoreId remoteStoreId;\n-        try\n-        {\n-            primary = addressProvider.primary();\n-            remoteStoreId = remoteStore.getStoreId( primary );\n-        }\n-        catch ( CatchupAddressResolutionException | StoreIdDownloadFailedException e )\n-        {\n-            log.warn( \"Store copy failed\", e );\n-            return false;\n-        }\n-\n-        if ( !isEmptyStore && !remoteStoreId.equals( localDatabase.storeId() ) )\n-        {\n-            log.error( \"Store copy failed due to store ID mismatch\" );\n-            return false;\n-        }\n-\n-        ensure( suspendOnStoreCopy::disable, \"disable auxiliary services before store copy\" );\n-        ensure( localDatabase::stopForStoreCopy, \"stop local database for store copy\" );\n-\n-        log.info( \"Downloading snapshot from core server at %s\", primary );\n-\n-        /* The core snapshot must be copied before the store, because the store has a dependency on\n-         * the state of the state machines. The store will thus be at or ahead of the state machines,\n-         * in consensus log index, and application of commands will bring them in sync. Any such commands\n-         * that carry transactions will thus be ignored by the transaction/token state machines, since they\n-         * are ahead, and the correct decisions for their applicability have already been taken as encapsulated\n-         * in the copied store. */\n-\n-        CoreSnapshot coreSnapshot;\n-        try\n-        {\n-            coreSnapshot = catchUpClient.makeBlockingRequest( primary, new CoreSnapshotRequest(),\n-                    new CatchUpResponseAdaptor<CoreSnapshot>()\n-                    {\n-                        @Override\n-                        public void onCoreSnapshot( CompletableFuture<CoreSnapshot> signal, CoreSnapshot response )\n-                        {\n-                            signal.complete( response );\n-                        }\n-                    } );\n-        }\n-        catch ( CatchUpClientException e )\n-        {\n-            log.warn( \"Store copy failed\", e );\n-            return false;\n-        }\n-\n-        if ( !isEmptyStore )\n-        {\n-            StoreId localStoreId = localDatabase.storeId();\n-            CatchupResult catchupResult;\n-            try\n-            {\n-                catchupResult = remoteStore.tryCatchingUp( primary, localStoreId, localDatabase.storeDir(), false );\n-            }\n-            catch ( StoreCopyFailedException e )\n-            {\n-                log.warn( \"Failed to catch up\", e );\n-                return false;\n-            }\n+      primary = addressProvider.primary();\n+      remoteStoreId = remoteStore.getStoreId(primary);\n+    } catch (CatchupAddressResolutionException | StoreIdDownloadFailedException e)\n+    {\n+      log.warn(\"Store copy failed\", e);\n+      return false;\n+    }\n \n-            if ( catchupResult == E_TRANSACTION_PRUNED )\n-            {\n-                log.warn( format( \"Failed to pull transactions from (%s). They may have been pruned away\", primary ) );\n-                localDatabase.delete();\n-                isEmptyStore = true;\n-            }\n-            else if ( catchupResult != SUCCESS_END_OF_STREAM )\n-            {\n-                log.warn( format( \"Unexpected catchup operation result %s from %s\", catchupResult, primary ) );\n-                return false;\n-            }\n-        }\n+    if (!isEmptyStore && !remoteStoreId.equals(localDatabase.storeId()))\n+    {\n+      log.error(\"Store copy failed due to store ID mismatch\");\n+      return false;\n+    }\n \n-        if ( isEmptyStore )\n-        {\n-            try\n-            {\n-                storeCopyProcess.replaceWithStoreFrom( addressProvider, remoteStoreId );\n-            }\n-            catch ( StoreCopyFailedException e )\n-            {\n-                log.warn( \"Failed to copy and replace store\", e );\n-                return false;\n-            }\n-        }\n+    ensure(suspendOnStoreCopy::disable, \"disable auxiliary services before store copy\");\n+    ensure(localDatabase::stopForStoreCopy, \"stop local database for store copy\");\n \n-        /* We install the snapshot after the store has been downloaded,\n-         * so that we are not left with a state ahead of the store. */\n-        snapshotService.installSnapshot( coreSnapshot );\n-        log.info( \"Core snapshot installed: \" + coreSnapshot );\n+    log.info(\"Downloading snapshot from core server at %s\", primary);\n \n-        /* Starting the database will invoke the commit process factory in\n-         * the EnterpriseCoreEditionModule, which has important side-effects. */\n-        log.info( \"Starting local database\" );\n-        ensure( localDatabase::start, \"start local database after store copy\" );\n+    /* The core snapshot must be copied before the store, because the store has a dependency on\n+     * the state of the state machines. The store will thus be at or ahead of the state machines,\n+     * in consensus log index, and application of commands will bring them in sync. Any such commands\n+     * that carry transactions will thus be ignored by the transaction/token state machines, since they\n+     * are ahead, and the correct decisions for their applicability have already been taken as encapsulated\n+     * in the copied store. */\n \n-        coreStateMachines.installCommitProcess( localDatabase.getCommitProcess() );\n-        ensure( suspendOnStoreCopy::enable, \"enable auxiliary services after store copy\" );\n+    CoreSnapshot coreSnapshot;\n+    try\n+    {\n+      coreSnapshot = catchUpClient.makeBlockingRequest(primary, new CoreSnapshotRequest(),\n+          new CatchUpResponseAdaptor<CoreSnapshot>()\n+          {\n+            @Override\n+            public void onCoreSnapshot(CompletableFuture<CoreSnapshot> signal, CoreSnapshot response)\n+            {\n+              signal.complete(response);\n+            }\n+          });\n+    } catch (CatchUpClientException e)\n+    {\n+      log.warn(\"Store copy failed\", e);\n+      return false;\n+    }\n \n-        return true;\n+    if (!isEmptyStore)\n+    {\n+      StoreId localStoreId = localDatabase.storeId();\n+      CatchupResult catchupResult;\n+      try\n+      {\n+        catchupResult = remoteStore.tryCatchingUp(primary, localStoreId, localDatabase.storeDir(), false);\n+      } catch (StoreCopyFailedException e)\n+      {\n+        log.warn(\"Failed to catch up\", e);\n+        return false;\n+      }\n+\n+      if (catchupResult == E_TRANSACTION_PRUNED)\n+      {\n+        log.warn(format(\"Failed to pull transactions from (%s). They may have been pruned away\", primary));\n+        localDatabase.delete();\n+        isEmptyStore = true;\n+      } else if (catchupResult != SUCCESS_END_OF_STREAM)\n+      {\n+        log.warn(format(\"Unexpected catchup operation result %s from %s\", catchupResult, primary));\n+        return false;\n+      }\n     }\n \n-    public interface LifecycleAction\n+    if (isEmptyStore)\n     {\n-        void perform() throws Throwable;\n+      try\n+      {\n+        storeCopyProcess.replaceWithStoreFrom(addressProvider, remoteStoreId);\n+      } catch (StoreCopyFailedException e)\n+      {\n+        log.warn(\"Failed to copy and replace store\", e);\n+        return false;\n+      }\n     }\n \n-    private static void ensure( LifecycleAction action, String operation )\n+    /* We install the snapshot after the store has been downloaded,\n+     * so that we are not left with a state ahead of the store. */\n+    snapshotService.installSnapshot(coreSnapshot);\n+    log.info(\"Core snapshot installed: \" + coreSnapshot);\n+\n+    /* Starting the database will invoke the commit process factory in\n+     * the EnterpriseCoreEditionModule, which has important side-effects. */\n+    log.info(\"Starting local database\");\n+    ensure(localDatabase::start, \"start local database after store copy\");\n+\n+    coreStateMachines.installCommitProcess(localDatabase.getCommitProcess());\n+    ensure(suspendOnStoreCopy::enable, \"enable auxiliary services after store copy\");\n+\n+    return true;\n+  }\n+\n+  public interface LifecycleAction\n+  {\n+    void perform() throws Throwable;\n+  }\n+\n+  private static void ensure(LifecycleAction action, String operation)\n+  {\n+    try\n+    {\n+      action.perform();\n+    } catch (Throwable cause)\n     {\n-        try\n-        {\n-            action.perform();\n-        }\n-        catch ( Throwable cause )\n-        {\n-            throw new LifecycleException( \"Failed to \" + operation, cause );\n-        }\n+      throw new LifecycleException(\"Failed to \" + operation, cause);\n     }\n+  }\n }\n",
            "diff_size": 279
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4171/CoreStateDownloader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4171/CoreStateDownloader.java\nindex 75c59116bff..ffe13166c77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4171/CoreStateDownloader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4171/CoreStateDownloader.java\n@@ -60,11 +60,10 @@ public class CoreStateDownloader\n     private final CoreSnapshotService snapshotService;\n     private CommitStateHelper commitStateHelper;\n \n-    public CoreStateDownloader( LocalDatabase localDatabase, Suspendable suspendOnStoreCopy, RemoteStore remoteStore,\n-                                CatchUpClient catchUpClient, LogProvider logProvider, StoreCopyProcess storeCopyProcess,\n+    public CoreStateDownloader( LocalDatabase localDatabase, Suspendable suspendOnStoreCopy, RemoteStore remoteStore, CatchUpClient catchUpClient, LogProvider logProvider, StoreCopyProcess storeCopyProcess,\n                                 CoreStateMachines coreStateMachines, CoreSnapshotService snapshotService,\n                                 CommitStateHelper commitStateHelper )\n-    {\n+{\n         this.localDatabase = localDatabase;\n         this.suspendOnStoreCopy = suspendOnStoreCopy;\n         this.remoteStore = remoteStore;\n@@ -89,9 +88,8 @@ public class CoreStateDownloader\n      * @throws IOException An issue with I/O.\n      * @throws DatabaseShutdownException The database is shutting down.\n      */\n-    boolean downloadSnapshot( CatchupAddressProvider addressProvider )\n-            throws LifecycleException, IOException, DatabaseShutdownException\n-    {\n+    boolean downloadSnapshot( CatchupAddressProvider addressProvider ) throws LifecycleException, IOException, DatabaseShutdownException\n+{\n         /* Extract some key properties before shutting it down. */\n         boolean isEmptyStore = localDatabase.isEmpty();\n \n@@ -131,8 +129,7 @@ public class CoreStateDownloader\n \n         ensure( suspendOnStoreCopy::disable, \"disable auxiliary services before store copy\" );\n         ensure( localDatabase::stopForStoreCopy, \"stop local database for store copy\" );\n-\n-        log.info( \"Downloading snapshot from core server at %s\", primary );\n+log.info( \"Downloading snapshot from core server at %s\", primary );\n \n         /* The core snapshot must be copied before the store, because the store has a dependency on\n          * the state of the state machines. The store will thus be at or ahead of the state machines,\n@@ -144,8 +141,7 @@ public class CoreStateDownloader\n         CoreSnapshot coreSnapshot;\n         try\n         {\n-            coreSnapshot = catchUpClient.makeBlockingRequest( primary, new CoreSnapshotRequest(),\n-                    new CatchUpResponseAdaptor<CoreSnapshot>()\n+            coreSnapshot = catchUpClient.makeBlockingRequest( primary, new CoreSnapshotRequest(), new CatchUpResponseAdaptor<CoreSnapshot>()\n                     {\n                         @Override\n                         public void onCoreSnapshot( CompletableFuture<CoreSnapshot> signal, CoreSnapshot response )\n@@ -153,7 +149,7 @@ public class CoreStateDownloader\n                             signal.complete( response );\n                         }\n                     } );\n-        }\n+    }\n         catch ( CatchUpClientException e )\n         {\n             log.warn( \"Store copy failed\", e );\n@@ -209,11 +205,9 @@ public class CoreStateDownloader\n          * the EnterpriseCoreEditionModule, which has important side-effects. */\n         log.info( \"Starting local database\" );\n         ensure( localDatabase::start, \"start local database after store copy\" );\n-\n-        coreStateMachines.installCommitProcess( localDatabase.getCommitProcess() );\n+coreStateMachines.installCommitProcess( localDatabase.getCommitProcess() );\n         ensure( suspendOnStoreCopy::enable, \"enable auxiliary services after store copy\" );\n-\n-        return true;\n+return true;\n     }\n \n     public interface LifecycleAction\n@@ -232,4 +226,4 @@ public class CoreStateDownloader\n             throw new LifecycleException( \"Failed to \" + operation, cause );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1688",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1688/HighAvailabilityLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1688/HighAvailabilityLogger.java\nindex 3833cce1d88..e04af5ea83e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1688/HighAvailabilityLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1688/HighAvailabilityLogger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import java.net.URI;\n@@ -35,166 +36,166 @@ import org.neo4j.logging.LogProvider;\n  * are issued.\n  */\n public class HighAvailabilityLogger\n-        implements ClusterMemberListener, ClusterListener, AvailabilityGuard.AvailabilityListener\n+    implements ClusterMemberListener, ClusterListener, AvailabilityGuard.AvailabilityListener\n {\n-    private final Log log;\n-    private final InstanceId myId;\n-    private URI myUri;\n-\n-    public HighAvailabilityLogger( LogProvider logProvider, InstanceId myId )\n-    {\n-        this.log = logProvider.getLog( getClass() );\n-        this.myId = myId;\n-    }\n-\n-    // Cluster events\n-\n-    /**\n-     * Logged when the instance itself joins or rejoins a cluster\n-     *\n-     * @param clusterConfiguration\n-     */\n-    @Override\n-    public void enteredCluster( ClusterConfiguration clusterConfiguration )\n-    {\n-        myUri = clusterConfiguration.getUriForId( myId );\n-        log.info( \"Instance %s entered the cluster\", printId( myId, myUri ) );\n-    }\n-\n-    /**\n-     * Logged when the instance itself leaves the cluster\n-     */\n-    @Override\n-    public void leftCluster()\n-    {\n-        log.info( \"Instance %s left the cluster\", printId( myId, myUri ) );\n-    }\n-\n-    /**\n-     * Logged when another instance joins the cluster\n-     *\n-     * @param instanceId\n-     * @param member\n-     */\n-    @Override\n-    public void joinedCluster( InstanceId instanceId, URI member )\n-    {\n-        log.info( \"Instance %s joined the cluster\", printId( instanceId, member ) );\n-    }\n-\n-    /**\n-     * Logged when another instance leaves the cluster\n-     *\n-     * @param instanceId\n-     */\n-    @Override\n-    public void leftCluster( InstanceId instanceId, URI member )\n-    {\n-        log.info( \"Instance %s has left the cluster\", printId( instanceId, member ) );\n-    }\n-\n-    /**\n-     * Logged when an instance is elected for a role, such as coordinator of a cluster.\n-     *\n-     * @param role\n-     * @param instanceId\n-     * @param electedMember\n-     */\n-    @Override\n-    public void elected( String role, InstanceId instanceId, URI electedMember )\n-    {\n-        log.info( \"Instance %s was elected as %s\", printId( instanceId, electedMember ), role );\n-    }\n-\n-    /**\n-     * Logged when an instance is demoted from a role.\n-     *\n-     * @param role\n-     * @param instanceId\n-     * @param electedMember\n-     */\n-    @Override\n-    public void unelected( String role, InstanceId instanceId, URI electedMember )\n-    {\n-        log.info( \"Instance %s was demoted as %s\", printId( instanceId, electedMember ), role );\n-    }\n-\n-    // HA events\n-    @Override\n-    public void coordinatorIsElected( InstanceId coordinatorId )\n-    {\n-    }\n-\n-    /**\n-     * Logged when a member becomes available as a role, such as MASTER or SLAVE.\n-     *\n-     * @param role\n-     * @param availableId the role connection information for the new role holder\n-     * @param atUri       the URI at which the instance is available at\n-     */\n-    @Override\n-    public void memberIsAvailable( String role, InstanceId availableId, URI atUri, StoreId storeId )\n-    {\n-        log.info( \"Instance %s is available as %s at %s with %s\", printId( availableId, atUri ), role, atUri.toASCIIString(), storeId );\n-    }\n-\n-    /**\n-     * Logged when a member becomes unavailable as a role, such as MASTER or SLAVE.\n-     *\n-     * @param role          The role for which the member is unavailable\n-     * @param unavailableId The id of the member which became unavailable for that role\n-     */\n-    @Override\n-    public void memberIsUnavailable( String role, InstanceId unavailableId )\n-    {\n-        log.info( \"Instance %s is unavailable as %s\", printId( unavailableId, null ), role );\n-    }\n-\n-    /**\n-     * Logged when another instance is detected as being failed.\n-     *\n-     * @param instanceId\n-     */\n-    @Override\n-    public void memberIsFailed( InstanceId instanceId )\n-    {\n-        log.info( \"Instance %s has failed\", printId( instanceId, null ) );\n-    }\n-\n-    /**\n-     * Logged when another instance is detected as being alive again.\n-     *\n-     * @param instanceId\n-     */\n-    @Override\n-    public void memberIsAlive( InstanceId instanceId )\n-    {\n-        log.info( \"Instance %s is alive\", printId( instanceId, null ) );\n-    }\n-\n-    // InstanceAccessGuard events\n-\n-    /**\n-     * Logged when users are allowed to access the database for transactions.\n-     */\n-    @Override\n-    public void available()\n-    {\n-        log.info( \"Database available for write transactions\" );\n-    }\n-\n-    /**\n-     * Logged when users are not allowed to access the database for transactions.\n-     */\n-    @Override\n-    public void unavailable()\n-    {\n-        log.info( \"Write transactions to database disabled\" );\n-    }\n-\n-    private String printId( InstanceId id, URI member )\n-    {\n-        String name = id.instanceNameFromURI( member );\n-        return name + (id.equals( myId ) ? \" (this server) \" : \" \");\n-    }\n+  private final Log log;\n+  private final InstanceId myId;\n+  private URI myUri;\n+\n+  public HighAvailabilityLogger(LogProvider logProvider, InstanceId myId)\n+  {\n+    this.log = logProvider.getLog(getClass());\n+    this.myId = myId;\n+  }\n+\n+  // Cluster events\n+\n+  /**\n+   * Logged when the instance itself joins or rejoins a cluster\n+   *\n+   * @param clusterConfiguration\n+   */\n+  @Override\n+  public void enteredCluster(ClusterConfiguration clusterConfiguration)\n+  {\n+    myUri = clusterConfiguration.getUriForId(myId);\n+    log.info(\"Instance %s entered the cluster\", printId(myId, myUri));\n+  }\n+\n+  /**\n+   * Logged when the instance itself leaves the cluster\n+   */\n+  @Override\n+  public void leftCluster()\n+  {\n+    log.info(\"Instance %s left the cluster\", printId(myId, myUri));\n+  }\n+\n+  /**\n+   * Logged when another instance joins the cluster\n+   *\n+   * @param instanceId\n+   * @param member\n+   */\n+  @Override\n+  public void joinedCluster(InstanceId instanceId, URI member)\n+  {\n+    log.info(\"Instance %s joined the cluster\", printId(instanceId, member));\n+  }\n+\n+  /**\n+   * Logged when another instance leaves the cluster\n+   *\n+   * @param instanceId\n+   */\n+  @Override\n+  public void leftCluster(InstanceId instanceId, URI member)\n+  {\n+    log.info(\"Instance %s has left the cluster\", printId(instanceId, member));\n+  }\n+\n+  /**\n+   * Logged when an instance is elected for a role, such as coordinator of a cluster.\n+   *\n+   * @param role\n+   * @param instanceId\n+   * @param electedMember\n+   */\n+  @Override\n+  public void elected(String role, InstanceId instanceId, URI electedMember)\n+  {\n+    log.info(\"Instance %s was elected as %s\", printId(instanceId, electedMember), role);\n+  }\n+\n+  /**\n+   * Logged when an instance is demoted from a role.\n+   *\n+   * @param role\n+   * @param instanceId\n+   * @param electedMember\n+   */\n+  @Override\n+  public void unelected(String role, InstanceId instanceId, URI electedMember)\n+  {\n+    log.info(\"Instance %s was demoted as %s\", printId(instanceId, electedMember), role);\n+  }\n+\n+  // HA events\n+  @Override\n+  public void coordinatorIsElected(InstanceId coordinatorId)\n+  {\n+  }\n+\n+  /**\n+   * Logged when a member becomes available as a role, such as MASTER or SLAVE.\n+   *\n+   * @param role\n+   * @param availableId the role connection information for the new role holder\n+   * @param atUri       the URI at which the instance is available at\n+   */\n+  @Override\n+  public void memberIsAvailable(String role, InstanceId availableId, URI atUri, StoreId storeId)\n+  {\n+    log.info(\"Instance %s is available as %s at %s with %s\", printId(availableId, atUri), role, atUri.toASCIIString(), storeId);\n+  }\n+\n+  /**\n+   * Logged when a member becomes unavailable as a role, such as MASTER or SLAVE.\n+   *\n+   * @param role          The role for which the member is unavailable\n+   * @param unavailableId The id of the member which became unavailable for that role\n+   */\n+  @Override\n+  public void memberIsUnavailable(String role, InstanceId unavailableId)\n+  {\n+    log.info(\"Instance %s is unavailable as %s\", printId(unavailableId, null), role);\n+  }\n+\n+  /**\n+   * Logged when another instance is detected as being failed.\n+   *\n+   * @param instanceId\n+   */\n+  @Override\n+  public void memberIsFailed(InstanceId instanceId)\n+  {\n+    log.info(\"Instance %s has failed\", printId(instanceId, null));\n+  }\n+\n+  /**\n+   * Logged when another instance is detected as being alive again.\n+   *\n+   * @param instanceId\n+   */\n+  @Override\n+  public void memberIsAlive(InstanceId instanceId)\n+  {\n+    log.info(\"Instance %s is alive\", printId(instanceId, null));\n+  }\n+\n+  // InstanceAccessGuard events\n+\n+  /**\n+   * Logged when users are allowed to access the database for transactions.\n+   */\n+  @Override\n+  public void available()\n+  {\n+    log.info(\"Database available for write transactions\");\n+  }\n+\n+  /**\n+   * Logged when users are not allowed to access the database for transactions.\n+   */\n+  @Override\n+  public void unavailable()\n+  {\n+    log.info(\"Write transactions to database disabled\");\n+  }\n+\n+  private String printId(InstanceId id, URI member)\n+  {\n+    String name = id.instanceNameFromURI(member);\n+    return name + (id.equals(myId) ? \" (this server) \" : \" \");\n+  }\n }\n",
            "diff_size": 162
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "decorators-squad-eo-yaml",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "83",
                "column": "15",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            final List<YamlLine> docsStart = new ArrayList<>();\n            final YamlLine first = iterator.next();\n            if(\"---\".equals(first.trimmed())) {\n                docsStart.add(first);\n            } else {\n                docsStart.add(new YamlLine.NullYamlLine());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler/37/StartMarkers.java\nindex 6495abae7d4..e234ba3031e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler/37/StartMarkers.java\n@@ -80,7 +80,7 @@ final class StartMarkers implements YamlLines {\n         if (iterator.hasNext()) {\n             final List<YamlLine> docsStart = new ArrayList<>();\n             final YamlLine first = iterator.next();\n-            if(\"---\".equals(first.trimmed())) {\n+            if (\"---\".equals(first.trimmed())) {\n                 docsStart.add(first);\n             } else {\n                 docsStart.add(new YamlLine.NullYamlLine());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/37/StartMarkers.java\nindex 6495abae7d4..2594485d497 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/37/StartMarkers.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2016-2020, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.eoyaml;\n \n import java.util.ArrayList;\n@@ -51,7 +52,7 @@ final class StartMarkers implements YamlLines {\n      * Constructor.\n      * @param yamlLines The YAML Lines.\n      */\n-    StartMarkers(final YamlLines yamlLines){\n+    StartMarkers(final YamlLines yamlLines) {\n         this.yamlLines = yamlLines;\n     }\n \n@@ -80,7 +81,7 @@ final class StartMarkers implements YamlLines {\n         if (iterator.hasNext()) {\n             final List<YamlLine> docsStart = new ArrayList<>();\n             final YamlLine first = iterator.next();\n-            if(\"---\".equals(first.trimmed())) {\n+            if (\"---\".equals(first.trimmed())) {\n                 docsStart.add(first);\n             } else {\n                 docsStart.add(new YamlLine.NullYamlLine());\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/37/StartMarkers.java\nindex 6495abae7d4..09440dfe03a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/37/StartMarkers.java\n@@ -51,7 +51,7 @@ final class StartMarkers implements YamlLines {\n      * Constructor.\n      * @param yamlLines The YAML Lines.\n      */\n-    StartMarkers(final YamlLines yamlLines){\n+    StartMarkers(final YamlLines yamlLines) {\n         this.yamlLines = yamlLines;\n     }\n \n@@ -80,7 +80,7 @@ final class StartMarkers implements YamlLines {\n         if (iterator.hasNext()) {\n             final List<YamlLine> docsStart = new ArrayList<>();\n             final YamlLine first = iterator.next();\n-            if(\"---\".equals(first.trimmed())) {\n+            if (\"---\".equals(first.trimmed())) {\n                 docsStart.add(first);\n             } else {\n                 docsStart.add(new YamlLine.NullYamlLine());\n@@ -106,4 +106,4 @@ final class StartMarkers implements YamlLines {\n     public YamlNode toYamlNode(final YamlLine prev) {\n         return this.yamlLines.toYamlNode(prev);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "93",
                    "column": "44",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "95",
                    "column": "18",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/37/StartMarkers.java\nindex 6495abae7d4..b63679d54aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/37/StartMarkers.java\n@@ -40,18 +40,24 @@ import java.util.List;\n  * @version $Id: 386e4cbed745d3413612360e6ad9b78fe26b6fec $\n  * @since 3.1.4\n  */\n+\n+\n final class StartMarkers implements YamlLines {\n \n     /**\n      * Yaml lines.\n      */\n+\n+\n     private YamlLines yamlLines;\n \n     /**\n      * Constructor.\n      * @param yamlLines The YAML Lines.\n      */\n-    StartMarkers(final YamlLines yamlLines){\n+\n+\n+    StartMarkers(final YamlLines yamlLines) {\n         this.yamlLines = yamlLines;\n     }\n \n@@ -74,18 +80,19 @@ final class StartMarkers implements YamlLines {\n      * </pre>\n      * @return Iterator over these yaml lines.\n      */\n+\n     @Override\n     public Iterator<YamlLine> iterator() {\n         Iterator<YamlLine> iterator = this.yamlLines.iterator();\n         if (iterator.hasNext()) {\n             final List<YamlLine> docsStart = new ArrayList<>();\n             final YamlLine first = iterator.next();\n-            if(\"---\".equals(first.trimmed())) {\n+            if (\"---\".equals(first.trimmed())) {\n                 docsStart.add(first);\n             } else {\n-                docsStart.add(new YamlLine.NullYamlLine());\n+                docsStart.add(new YamlLine. NullYamlLine());\n             }\n-            while (iterator.hasNext()) {\n+            while(iterator.hasNext()) {\n                 final YamlLine current = iterator.next();\n                 final String currentLine = current.trimmed();\n                 if (\"---\".equals(currentLine)) {\n@@ -106,4 +113,5 @@ final class StartMarkers implements YamlLines {\n     public YamlNode toYamlNode(final YamlLine prev) {\n         return this.yamlLines.toYamlNode(prev);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_random/37/StartMarkers.java\nindex 6495abae7d4..e234ba3031e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_random/37/StartMarkers.java\n@@ -80,7 +80,7 @@ final class StartMarkers implements YamlLines {\n         if (iterator.hasNext()) {\n             final List<YamlLine> docsStart = new ArrayList<>();\n             final YamlLine first = iterator.next();\n-            if(\"---\".equals(first.trimmed())) {\n+            if (\"---\".equals(first.trimmed())) {\n                 docsStart.add(first);\n             } else {\n                 docsStart.add(new YamlLine.NullYamlLine());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/37/StartMarkers.java\nindex 6495abae7d4..e234ba3031e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/37/StartMarkers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/37/StartMarkers.java\n@@ -80,7 +80,7 @@ final class StartMarkers implements YamlLines {\n         if (iterator.hasNext()) {\n             final List<YamlLine> docsStart = new ArrayList<>();\n             final YamlLine first = iterator.next();\n-            if(\"---\".equals(first.trimmed())) {\n+            if (\"---\".equals(first.trimmed())) {\n                 docsStart.add(first);\n             } else {\n                 docsStart.add(new YamlLine.NullYamlLine());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1443",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "651",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "651",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "694",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "694",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "769",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "784",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "784",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "793",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "793",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "815",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "815",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "843",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "843",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "847",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "847",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "868",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "868",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "870",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "870",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "874",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "874",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "880",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "881",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "884",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "889",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "891",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "892",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "897",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "899",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "900",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "921",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "921",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "980",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "980",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "987",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "987",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1017",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1017",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1023",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1023",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1035",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1035",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1047",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1053",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1053",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1078",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1078",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1090",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1090",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1097",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1103",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1103",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1109",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1109",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1121",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1121",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1443/ReadOnlyGraphDatabaseProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1443/ReadOnlyGraphDatabaseProxy.java\nindex e6b1e85459e..c5918b6310e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1443/ReadOnlyGraphDatabaseProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1443/ReadOnlyGraphDatabaseProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel;\n \n import java.io.File;\n@@ -68,1057 +69,1057 @@ import org.neo4j.kernel.internal.GraphDatabaseAPI;\n \n public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDatabaseAPI, IndexManager\n {\n-    private final GraphDatabaseAPI actual;\n+  private final GraphDatabaseAPI actual;\n+\n+  public ReadOnlyGraphDatabaseProxy(GraphDatabaseAPI graphDb)\n+  {\n+    this.actual = graphDb;\n+  }\n+\n+  public Node readOnly(Node actual)\n+  {\n+    return new ReadOnlyNodeProxy(actual);\n+  }\n+\n+  public Relationship readOnly(Relationship actual)\n+  {\n+    return new ReadOnlyRelationshipProxy(actual);\n+  }\n+\n+  private static <T> T readOnly()\n+  {\n+    throw readOnlyException();\n+  }\n+\n+  private static UnsupportedOperationException readOnlyException()\n+  {\n+    return new UnsupportedOperationException(\"Read only Graph Database!\");\n+  }\n+\n+  @Override\n+  public InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext)\n+  {\n+    return actual.beginTransaction(type, loginContext);\n+  }\n+\n+  @Override\n+  public InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, long timeout,\n+                                              TimeUnit unit)\n+  {\n+    return actual.beginTransaction(type, loginContext, timeout, unit);\n+  }\n+\n+  @Override\n+  public Transaction beginTx()\n+  {\n+    return actual.beginTx();\n+  }\n+\n+  @Override\n+  public Transaction beginTx(long timeout, TimeUnit unit)\n+  {\n+    return actual.beginTx(timeout, unit);\n+  }\n+\n+  @Override\n+  public Result execute(String query)\n+  {\n+    return execute(query, Collections.emptyMap());\n+  }\n+\n+  @Override\n+  public Result execute(String query, long timeout, TimeUnit unit) throws QueryExecutionException\n+  {\n+    return execute(query, Collections.emptyMap(), timeout, unit);\n+  }\n+\n+  @Override\n+  public Result execute(String query, Map<String, Object> parameters)\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public Result execute(String query, Map<String, Object> parameters, long timeout, TimeUnit unit) throws\n+      QueryExecutionException\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public Node createNode()\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public Long createNodeId()\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public Node createNode(Label... labels)\n+  {\n+    return readOnly();\n+  }\n+\n+  public boolean enableRemoteShell()\n+  {\n+    throw new UnsupportedOperationException(\"Cannot enable Remote Shell from Remote Shell\");\n+  }\n+\n+  public boolean enableRemoteShell(Map<String, Serializable> initialProperties)\n+  {\n+    return enableRemoteShell();\n+  }\n+\n+  @Override\n+  public ResourceIterable<Node> getAllNodes()\n+  {\n+    return nodes(actual.getAllNodes());\n+  }\n+\n+  @Override\n+  public Node getNodeById(long id)\n+  {\n+    return new ReadOnlyNodeProxy(actual.getNodeById(id));\n+  }\n+\n+  @Override\n+  public Relationship getRelationshipById(long id)\n+  {\n+    return new ReadOnlyRelationshipProxy(actual.getRelationshipById(id));\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getAllRelationships()\n+  {\n+    return () ->\n+    {\n+      final ResourceIterator<Relationship> iterator = actual.getAllRelationships().iterator();\n+      return new PrefetchingResourceIterator<Relationship>()\n+      {\n+        @Override\n+        protected Relationship fetchNextOrNull()\n+        {\n+          return new ReadOnlyRelationshipProxy(iterator.next());\n+        }\n \n-    public ReadOnlyGraphDatabaseProxy( GraphDatabaseAPI graphDb )\n-    {\n-        this.actual = graphDb;\n+        @Override\n+        public void close()\n+        {\n+          iterator.close();\n+        }\n+      };\n+    };\n+  }\n+\n+  @Override\n+  public ResourceIterable<Label> getAllLabelsInUse()\n+  {\n+    return actual.getAllLabelsInUse();\n+  }\n+\n+  @Override\n+  public ResourceIterable<RelationshipType> getAllRelationshipTypesInUse()\n+  {\n+    return actual.getAllRelationshipTypesInUse();\n+  }\n+\n+  @Override\n+  public ResourceIterable<Label> getAllLabels()\n+  {\n+    return actual.getAllLabels();\n+  }\n+\n+  @Override\n+  public ResourceIterable<RelationshipType> getAllRelationshipTypes()\n+  {\n+    return actual.getAllRelationshipTypes();\n+  }\n+\n+  @Override\n+  public ResourceIterable<String> getAllPropertyKeys()\n+  {\n+    return actual.getAllPropertyKeys();\n+  }\n+\n+  @Override\n+  public KernelEventHandler registerKernelEventHandler(KernelEventHandler handler)\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n+      TransactionEventHandler<T> handler)\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public boolean isAvailable(long timeout)\n+  {\n+    return actual.isAvailable(timeout);\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    actual.shutdown();\n+  }\n+\n+  @Override\n+  public KernelEventHandler unregisterKernelEventHandler(KernelEventHandler handler)\n+  {\n+    return readOnly();\n+  }\n+\n+  @Override\n+  public Schema schema()\n+  {\n+    return new ReadOnlySchemaProxy(actual.schema());\n+  }\n+\n+  @Override\n+  public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n+      TransactionEventHandler<T> handler)\n+  {\n+    return readOnly();\n+  }\n+\n+  private class ReadOnlyNodeProxy implements Node\n+  {\n+    private final Node actual;\n+\n+    ReadOnlyNodeProxy(Node actual)\n+    {\n+      this.actual = actual;\n     }\n \n-    public Node readOnly( Node actual )\n+    @Override\n+    public int hashCode()\n     {\n-        return new ReadOnlyNodeProxy( actual );\n+      return actual.hashCode();\n     }\n \n-    public Relationship readOnly( Relationship actual )\n+    @Override\n+    public boolean equals(Object obj)\n     {\n-        return new ReadOnlyRelationshipProxy( actual );\n+      return (obj instanceof Node) && ((Node) obj).getId() == getId();\n     }\n \n-    private static <T> T readOnly()\n+    @Override\n+    public String toString()\n     {\n-        throw readOnlyException();\n+      return actual.toString();\n     }\n \n-    private static UnsupportedOperationException readOnlyException()\n+    @Override\n+    public long getId()\n     {\n-        return new UnsupportedOperationException( \"Read only Graph Database!\" );\n+      return actual.getId();\n     }\n \n     @Override\n-    public InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext )\n+    public Relationship createRelationshipTo(Node otherNode, RelationshipType type)\n     {\n-        return actual.beginTransaction( type, loginContext );\n+      return readOnly();\n     }\n \n     @Override\n-    public InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout,\n-            TimeUnit unit )\n+    public void delete()\n     {\n-        return actual.beginTransaction( type, loginContext, timeout, unit );\n+      readOnly();\n     }\n \n     @Override\n-    public Transaction beginTx()\n+    public Iterable<Relationship> getRelationships()\n     {\n-        return actual.beginTx();\n+      return relationships(actual.getRelationships());\n     }\n \n     @Override\n-    public Transaction beginTx( long timeout, TimeUnit unit )\n+    public Iterable<Relationship> getRelationships(RelationshipType... types)\n     {\n-        return actual.beginTx( timeout, unit );\n+      return relationships(actual.getRelationships(types));\n     }\n \n     @Override\n-    public Result execute( String query )\n+    public Iterable<Relationship> getRelationships(Direction direction,\n+                                                   RelationshipType... types)\n     {\n-        return execute( query, Collections.emptyMap() );\n+      return relationships(actual.getRelationships(direction, types));\n     }\n \n     @Override\n-    public Result execute( String query, long timeout, TimeUnit unit ) throws QueryExecutionException\n+    public Iterable<Relationship> getRelationships(Direction dir)\n     {\n-        return execute( query, Collections.emptyMap(), timeout, unit );\n+      return relationships(actual.getRelationships(dir));\n     }\n \n     @Override\n-    public Result execute( String query, Map<String, Object> parameters )\n+    public Iterable<Relationship> getRelationships(RelationshipType type, Direction dir)\n     {\n-        return readOnly();\n+      return relationships(actual.getRelationships(type, dir));\n     }\n \n     @Override\n-    public Result execute( String query, Map<String,Object> parameters, long timeout, TimeUnit unit ) throws\n-            QueryExecutionException\n+    public Relationship getSingleRelationship(RelationshipType type, Direction dir)\n     {\n-        return readOnly();\n+      return new ReadOnlyRelationshipProxy(actual.getSingleRelationship(type, dir));\n     }\n \n     @Override\n-    public Node createNode()\n+    public boolean hasRelationship()\n     {\n-        return readOnly();\n+      return actual.hasRelationship();\n     }\n \n     @Override\n-    public Long createNodeId()\n+    public boolean hasRelationship(RelationshipType... types)\n     {\n-        return readOnly();\n+      return actual.hasRelationship(types);\n     }\n \n     @Override\n-    public Node createNode( Label... labels )\n+    public boolean hasRelationship(Direction direction, RelationshipType... types)\n     {\n-        return readOnly();\n+      return actual.hasRelationship(direction, types);\n     }\n \n-    public boolean enableRemoteShell()\n+    @Override\n+    public boolean hasRelationship(Direction dir)\n     {\n-        throw new UnsupportedOperationException( \"Cannot enable Remote Shell from Remote Shell\" );\n+      return actual.hasRelationship(dir);\n     }\n \n-    public boolean enableRemoteShell( Map<String, Serializable> initialProperties )\n+    @Override\n+    public boolean hasRelationship(RelationshipType type, Direction dir)\n     {\n-        return enableRemoteShell();\n+      return actual.hasRelationship(type, dir);\n     }\n \n     @Override\n-    public ResourceIterable<Node> getAllNodes()\n+    public void addLabel(Label label)\n     {\n-        return nodes( actual.getAllNodes() );\n+      readOnly();\n     }\n \n     @Override\n-    public Node getNodeById( long id )\n+    public void removeLabel(Label label)\n     {\n-        return new ReadOnlyNodeProxy( actual.getNodeById( id ) );\n+      readOnly();\n     }\n \n     @Override\n-    public Relationship getRelationshipById( long id )\n+    public boolean hasLabel(Label label)\n     {\n-        return new ReadOnlyRelationshipProxy( actual.getRelationshipById( id ) );\n+      return actual.hasLabel(label);\n     }\n \n     @Override\n-    public ResourceIterable<Relationship> getAllRelationships()\n+    public Iterable<Label> getLabels()\n     {\n-        return () ->\n-        {\n-            final ResourceIterator<Relationship> iterator = actual.getAllRelationships().iterator();\n-            return new PrefetchingResourceIterator<Relationship>()\n-            {\n-                @Override\n-                protected Relationship fetchNextOrNull()\n-                {\n-                    return new ReadOnlyRelationshipProxy( iterator.next() );\n-                }\n-\n-                @Override\n-                public void close()\n-                {\n-                    iterator.close();\n-                }\n-            };\n-        };\n+      return actual.getLabels();\n     }\n \n     @Override\n-    public ResourceIterable<Label> getAllLabelsInUse()\n+    public GraphDatabaseService getGraphDatabase()\n     {\n-        return actual.getAllLabelsInUse();\n+      return ReadOnlyGraphDatabaseProxy.this;\n     }\n \n     @Override\n-    public ResourceIterable<RelationshipType> getAllRelationshipTypesInUse()\n+    public Object getProperty(String key)\n     {\n-        return actual.getAllRelationshipTypesInUse();\n+      return actual.getProperty(key);\n     }\n \n     @Override\n-    public ResourceIterable<Label> getAllLabels()\n+    public Object getProperty(String key, Object defaultValue)\n     {\n-        return actual.getAllLabels();\n+      return actual.getProperty(key, defaultValue);\n     }\n \n     @Override\n-    public ResourceIterable<RelationshipType> getAllRelationshipTypes()\n+    public Iterable<String> getPropertyKeys()\n     {\n-        return actual.getAllRelationshipTypes();\n+      return actual.getPropertyKeys();\n     }\n \n     @Override\n-    public ResourceIterable<String> getAllPropertyKeys()\n+    public Map<String, Object> getProperties(String... names)\n     {\n-        return actual.getAllPropertyKeys();\n+      return actual.getProperties(names);\n     }\n \n     @Override\n-    public KernelEventHandler registerKernelEventHandler( KernelEventHandler handler )\n+    public Map<String, Object> getAllProperties()\n     {\n-        return readOnly();\n+      return actual.getAllProperties();\n     }\n \n     @Override\n-    public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    public boolean hasProperty(String key)\n     {\n-        return readOnly();\n+      return actual.hasProperty(key);\n     }\n \n     @Override\n-    public boolean isAvailable( long timeout )\n+    public Object removeProperty(String key)\n     {\n-        return actual.isAvailable( timeout );\n+      return readOnly();\n     }\n \n     @Override\n-    public void shutdown()\n+    public void setProperty(String key, Object value)\n     {\n-        actual.shutdown();\n+      readOnly();\n     }\n \n     @Override\n-    public KernelEventHandler unregisterKernelEventHandler( KernelEventHandler handler )\n+    public Iterable<RelationshipType> getRelationshipTypes()\n     {\n-        return readOnly();\n+      // TODO Auto-generated method stub\n+      return null;\n     }\n \n     @Override\n-    public Schema schema()\n+    public int getDegree()\n     {\n-        return new ReadOnlySchemaProxy( actual.schema() );\n+      return actual.getDegree();\n     }\n \n     @Override\n-    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    public int getDegree(RelationshipType type)\n     {\n-        return readOnly();\n+      return actual.getDegree(type);\n     }\n \n-    private class ReadOnlyNodeProxy implements Node\n+    @Override\n+    public int getDegree(Direction direction)\n     {\n-        private final Node actual;\n-\n-        ReadOnlyNodeProxy( Node actual )\n-        {\n-            this.actual = actual;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return actual.hashCode();\n-        }\n-\n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            return (obj instanceof Node) && ((Node) obj).getId() == getId();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return actual.toString();\n-        }\n-\n-        @Override\n-        public long getId()\n-        {\n-            return actual.getId();\n-        }\n-\n-        @Override\n-        public Relationship createRelationshipTo( Node otherNode, RelationshipType type )\n-        {\n-            return readOnly();\n-        }\n-\n-        @Override\n-        public void delete()\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships()\n-        {\n-            return relationships( actual.getRelationships() );\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships( RelationshipType... types )\n-        {\n-            return relationships( actual.getRelationships( types ) );\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships( Direction direction,\n-                                                        RelationshipType... types )\n-        {\n-            return relationships( actual.getRelationships( direction, types ) );\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships( Direction dir )\n-        {\n-            return relationships( actual.getRelationships( dir ) );\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> getRelationships( RelationshipType type, Direction dir )\n-        {\n-            return relationships( actual.getRelationships( type, dir ) );\n-        }\n-\n-        @Override\n-        public Relationship getSingleRelationship( RelationshipType type, Direction dir )\n-        {\n-            return new ReadOnlyRelationshipProxy( actual.getSingleRelationship( type, dir ) );\n-        }\n-\n-        @Override\n-        public boolean hasRelationship()\n-        {\n-            return actual.hasRelationship();\n-        }\n-\n-        @Override\n-        public boolean hasRelationship( RelationshipType... types )\n-        {\n-            return actual.hasRelationship( types );\n-        }\n-\n-        @Override\n-        public boolean hasRelationship( Direction direction, RelationshipType... types )\n-        {\n-            return actual.hasRelationship( direction, types );\n-        }\n-\n-        @Override\n-        public boolean hasRelationship( Direction dir )\n-        {\n-            return actual.hasRelationship( dir );\n-        }\n-\n-        @Override\n-        public boolean hasRelationship( RelationshipType type, Direction dir )\n-        {\n-            return actual.hasRelationship( type, dir );\n-        }\n-\n-        @Override\n-        public void addLabel( Label label )\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public void removeLabel( Label label )\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public boolean hasLabel( Label label )\n-        {\n-            return actual.hasLabel( label );\n-        }\n-\n-        @Override\n-        public Iterable<Label> getLabels()\n-        {\n-            return actual.getLabels();\n-        }\n-\n-        @Override\n-        public GraphDatabaseService getGraphDatabase()\n-        {\n-            return ReadOnlyGraphDatabaseProxy.this;\n-        }\n-\n-        @Override\n-        public Object getProperty( String key )\n-        {\n-            return actual.getProperty( key );\n-        }\n-\n-        @Override\n-        public Object getProperty( String key, Object defaultValue )\n-        {\n-            return actual.getProperty( key, defaultValue );\n-        }\n-\n-        @Override\n-        public Iterable<String> getPropertyKeys()\n-        {\n-            return actual.getPropertyKeys();\n-        }\n-\n-        @Override\n-        public Map<String, Object> getProperties( String... names )\n-        {\n-            return actual.getProperties( names );\n-        }\n-\n-        @Override\n-        public Map<String, Object> getAllProperties()\n-        {\n-            return actual.getAllProperties();\n-        }\n-\n-        @Override\n-        public boolean hasProperty( String key )\n-        {\n-            return actual.hasProperty( key );\n-        }\n-\n-        @Override\n-        public Object removeProperty( String key )\n-        {\n-            return readOnly();\n-        }\n-\n-        @Override\n-        public void setProperty( String key, Object value )\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public Iterable<RelationshipType> getRelationshipTypes()\n-        {\n-            // TODO Auto-generated method stub\n-            return null;\n-        }\n-\n-        @Override\n-        public int getDegree()\n-        {\n-            return actual.getDegree();\n-        }\n-\n-        @Override\n-        public int getDegree( RelationshipType type )\n-        {\n-            return actual.getDegree( type );\n-        }\n-\n-        @Override\n-        public int getDegree( Direction direction )\n-        {\n-            return actual.getDegree( direction );\n-        }\n-\n-        @Override\n-        public int getDegree( RelationshipType type, Direction direction )\n-        {\n-            return actual.getDegree( type, direction );\n-        }\n+      return actual.getDegree(direction);\n     }\n \n-    private class ReadOnlyRelationshipProxy implements Relationship\n+    @Override\n+    public int getDegree(RelationshipType type, Direction direction)\n     {\n-        private final Relationship actual;\n-\n-        ReadOnlyRelationshipProxy( Relationship actual )\n-        {\n-            this.actual = actual;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return actual.hashCode();\n-        }\n-\n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            return (obj instanceof Relationship) && ((Relationship) obj).getId() == getId();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return actual.toString();\n-        }\n-\n-        @Override\n-        public long getId()\n-        {\n-            return actual.getId();\n-        }\n-\n-        @Override\n-        public void delete()\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public Node getEndNode()\n-        {\n-            return new ReadOnlyNodeProxy( actual.getEndNode() );\n-        }\n-\n-        @Override\n-        public Node[] getNodes()\n-        {\n-            return new Node[]{getStartNode(), getEndNode()};\n-        }\n-\n-        @Override\n-        public Node getOtherNode( Node node )\n-        {\n-            return new ReadOnlyNodeProxy( actual.getOtherNode( node ) );\n-        }\n-\n-        @Override\n-        public Node getStartNode()\n-        {\n-            return new ReadOnlyNodeProxy( actual.getStartNode() );\n-        }\n-\n-        @Override\n-        public RelationshipType getType()\n-        {\n-            return actual.getType();\n-        }\n-\n-        @Override\n-        public boolean isType( RelationshipType type )\n-        {\n-            return actual.isType( type );\n-        }\n-\n-        @Override\n-        public GraphDatabaseService getGraphDatabase()\n-        {\n-            return ReadOnlyGraphDatabaseProxy.this;\n-        }\n-\n-        @Override\n-        public Object getProperty( String key )\n-        {\n-            return actual.getProperty( key );\n-        }\n-\n-        @Override\n-        public Object getProperty( String key, Object defaultValue )\n-        {\n-            return actual.getProperty( key, defaultValue );\n-        }\n-\n-        @Override\n-        public Iterable<String> getPropertyKeys()\n-        {\n-            return actual.getPropertyKeys();\n-        }\n-\n-        @Override\n-        public Map<String, Object> getProperties( String... names )\n-        {\n-            return actual.getProperties( names );\n-        }\n-\n-        @Override\n-        public Map<String, Object> getAllProperties()\n-        {\n-            return actual.getAllProperties();\n-        }\n-\n-        @Override\n-        public boolean hasProperty( String key )\n-        {\n-            return actual.hasProperty( key );\n-        }\n+      return actual.getDegree(type, direction);\n+    }\n+  }\n \n-        @Override\n-        public Object removeProperty( String key )\n-        {\n-            return readOnly();\n-        }\n+  private class ReadOnlyRelationshipProxy implements Relationship\n+  {\n+    private final Relationship actual;\n \n-        @Override\n-        public void setProperty( String key, Object value )\n-        {\n-            readOnly();\n-        }\n+    ReadOnlyRelationshipProxy(Relationship actual)\n+    {\n+      this.actual = actual;\n     }\n \n-    public ResourceIterable<Node> nodes( ResourceIterable<Node> nodes )\n+    @Override\n+    public int hashCode()\n     {\n-        return () -> nodes.iterator().map( ReadOnlyNodeProxy::new );\n+      return actual.hashCode();\n     }\n \n-    public ResourceIterable<Relationship> relationships( Iterable<Relationship> relationships )\n+    @Override\n+    public boolean equals(Object obj)\n     {\n-        return new ResourceIterableWrapper<Relationship,Relationship>( Iterables.asResourceIterable( relationships ) )\n-        {\n-            @Override\n-            protected Relationship map( Relationship relationship )\n-            {\n-                return new ReadOnlyRelationshipProxy( relationship );\n-            }\n-        };\n+      return (obj instanceof Relationship) && ((Relationship) obj).getId() == getId();\n     }\n \n     @Override\n-    public boolean existsForNodes( String indexName )\n+    public String toString()\n     {\n-        return actual.index().existsForNodes( indexName );\n+      return actual.toString();\n     }\n \n     @Override\n-    public Index<Node> forNodes( String indexName )\n+    public long getId()\n     {\n-        return new ReadOnlyNodeIndexProxy( actual.index().forNodes( indexName, null ) );\n+      return actual.getId();\n     }\n \n     @Override\n-    public Index<Node> forNodes( String indexName, Map<String, String> customConfiguration )\n+    public void delete()\n     {\n-        return new ReadOnlyNodeIndexProxy( actual.index().forNodes( indexName, customConfiguration ) );\n+      readOnly();\n     }\n \n     @Override\n-    public String[] nodeIndexNames()\n+    public Node getEndNode()\n     {\n-        return actual.index().nodeIndexNames();\n+      return new ReadOnlyNodeProxy(actual.getEndNode());\n     }\n \n     @Override\n-    public boolean existsForRelationships( String indexName )\n+    public Node[] getNodes()\n     {\n-        return actual.index().existsForRelationships( indexName );\n+      return new Node[] {getStartNode(), getEndNode()};\n     }\n \n     @Override\n-    public RelationshipIndex forRelationships( String indexName )\n+    public Node getOtherNode(Node node)\n     {\n-        return new ReadOnlyRelationshipIndexProxy( actual.index().forRelationships( indexName, null ) );\n+      return new ReadOnlyNodeProxy(actual.getOtherNode(node));\n     }\n \n     @Override\n-    public RelationshipIndex forRelationships( String indexName,\n-                                               Map<String, String> customConfiguration )\n+    public Node getStartNode()\n     {\n-        return new ReadOnlyRelationshipIndexProxy( actual.index().forRelationships( indexName, customConfiguration ) );\n+      return new ReadOnlyNodeProxy(actual.getStartNode());\n     }\n \n     @Override\n-    public String[] relationshipIndexNames()\n+    public RelationshipType getType()\n     {\n-        return actual.index().relationshipIndexNames();\n+      return actual.getType();\n     }\n \n     @Override\n-    public IndexManager index()\n+    public boolean isType(RelationshipType type)\n     {\n-        return this;\n+      return actual.isType(type);\n     }\n \n     @Override\n-    public TraversalDescription traversalDescription()\n+    public GraphDatabaseService getGraphDatabase()\n     {\n-        return actual.traversalDescription();\n+      return ReadOnlyGraphDatabaseProxy.this;\n     }\n \n     @Override\n-    public BidirectionalTraversalDescription bidirectionalTraversalDescription()\n+    public Object getProperty(String key)\n     {\n-        return actual.bidirectionalTraversalDescription();\n+      return actual.getProperty(key);\n     }\n \n     @Override\n-    public Map<String, String> getConfiguration( Index<? extends PropertyContainer> index )\n+    public Object getProperty(String key, Object defaultValue)\n     {\n-        return actual.index().getConfiguration( index );\n+      return actual.getProperty(key, defaultValue);\n     }\n \n     @Override\n-    public String setConfiguration( Index<? extends PropertyContainer> index, String key,\n-                                    String value )\n+    public Iterable<String> getPropertyKeys()\n     {\n-        throw new IllegalStateException( \"Database is in read-only mode\" );\n+      return actual.getPropertyKeys();\n     }\n \n     @Override\n-    public String removeConfiguration( Index<? extends PropertyContainer> index, String key )\n+    public Map<String, Object> getProperties(String... names)\n     {\n-        throw new IllegalStateException( \"Database is in read-only mode\" );\n+      return actual.getProperties(names);\n     }\n \n     @Override\n-    public AutoIndexer<Node> getNodeAutoIndexer()\n+    public Map<String, Object> getAllProperties()\n     {\n-        return actual.index().getNodeAutoIndexer();\n+      return actual.getAllProperties();\n     }\n \n     @Override\n-    public RelationshipAutoIndexer getRelationshipAutoIndexer()\n+    public boolean hasProperty(String key)\n     {\n-        return actual.index().getRelationshipAutoIndexer();\n+      return actual.hasProperty(key);\n     }\n \n-    abstract class ReadOnlyIndexProxy<T extends PropertyContainer, I extends Index<T>> implements\n-            Index<T>\n+    @Override\n+    public Object removeProperty(String key)\n     {\n-        final I actual;\n-\n-        ReadOnlyIndexProxy( I actual )\n-        {\n-            this.actual = actual;\n-        }\n-\n-        abstract T wrap( T actual );\n-\n-        @Override\n-        public void delete()\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public void add( T entity, String key, Object value )\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public T putIfAbsent( T entity, String key, Object value )\n-        {\n-            readOnly();\n-            return null;\n-        }\n-\n-        @Override\n-        public IndexHits<T> get( String key, Object value )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.get( key, value ) );\n-        }\n-\n-        @Override\n-        public IndexHits<T> query( String key, Object queryOrQueryObject )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.query( key, queryOrQueryObject ) );\n-        }\n-\n-        @Override\n-        public IndexHits<T> query( Object queryOrQueryObject )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.query( queryOrQueryObject ) );\n-        }\n-\n-        @Override\n-        public void remove( T entity, String key, Object value )\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public void remove( T entity, String key )\n-        {\n-            readOnly();\n-        }\n-\n-        @Override\n-        public void remove( T entity )\n-        {\n-            readOnly();\n-        }\n+      return readOnly();\n+    }\n \n-        @Override\n-        public boolean isWriteable()\n-        {\n-            return false;\n-        }\n+    @Override\n+    public void setProperty(String key, Object value)\n+    {\n+      readOnly();\n+    }\n+  }\n+\n+  public ResourceIterable<Node> nodes(ResourceIterable<Node> nodes)\n+  {\n+    return () -> nodes.iterator().map(ReadOnlyNodeProxy::new);\n+  }\n+\n+  public ResourceIterable<Relationship> relationships(Iterable<Relationship> relationships)\n+  {\n+    return new ResourceIterableWrapper<Relationship, Relationship>(Iterables.asResourceIterable(relationships))\n+    {\n+      @Override\n+      protected Relationship map(Relationship relationship)\n+      {\n+        return new ReadOnlyRelationshipProxy(relationship);\n+      }\n+    };\n+  }\n+\n+  @Override\n+  public boolean existsForNodes(String indexName)\n+  {\n+    return actual.index().existsForNodes(indexName);\n+  }\n+\n+  @Override\n+  public Index<Node> forNodes(String indexName)\n+  {\n+    return new ReadOnlyNodeIndexProxy(actual.index().forNodes(indexName, null));\n+  }\n+\n+  @Override\n+  public Index<Node> forNodes(String indexName, Map<String, String> customConfiguration)\n+  {\n+    return new ReadOnlyNodeIndexProxy(actual.index().forNodes(indexName, customConfiguration));\n+  }\n+\n+  @Override\n+  public String[] nodeIndexNames()\n+  {\n+    return actual.index().nodeIndexNames();\n+  }\n+\n+  @Override\n+  public boolean existsForRelationships(String indexName)\n+  {\n+    return actual.index().existsForRelationships(indexName);\n+  }\n+\n+  @Override\n+  public RelationshipIndex forRelationships(String indexName)\n+  {\n+    return new ReadOnlyRelationshipIndexProxy(actual.index().forRelationships(indexName, null));\n+  }\n+\n+  @Override\n+  public RelationshipIndex forRelationships(String indexName,\n+                                            Map<String, String> customConfiguration)\n+  {\n+    return new ReadOnlyRelationshipIndexProxy(actual.index().forRelationships(indexName, customConfiguration));\n+  }\n+\n+  @Override\n+  public String[] relationshipIndexNames()\n+  {\n+    return actual.index().relationshipIndexNames();\n+  }\n+\n+  @Override\n+  public IndexManager index()\n+  {\n+    return this;\n+  }\n+\n+  @Override\n+  public TraversalDescription traversalDescription()\n+  {\n+    return actual.traversalDescription();\n+  }\n+\n+  @Override\n+  public BidirectionalTraversalDescription bidirectionalTraversalDescription()\n+  {\n+    return actual.bidirectionalTraversalDescription();\n+  }\n+\n+  @Override\n+  public Map<String, String> getConfiguration(Index<? extends PropertyContainer> index)\n+  {\n+    return actual.index().getConfiguration(index);\n+  }\n+\n+  @Override\n+  public String setConfiguration(Index<? extends PropertyContainer> index, String key,\n+                                 String value)\n+  {\n+    throw new IllegalStateException(\"Database is in read-only mode\");\n+  }\n+\n+  @Override\n+  public String removeConfiguration(Index<? extends PropertyContainer> index, String key)\n+  {\n+    throw new IllegalStateException(\"Database is in read-only mode\");\n+  }\n+\n+  @Override\n+  public AutoIndexer<Node> getNodeAutoIndexer()\n+  {\n+    return actual.index().getNodeAutoIndexer();\n+  }\n+\n+  @Override\n+  public RelationshipAutoIndexer getRelationshipAutoIndexer()\n+  {\n+    return actual.index().getRelationshipAutoIndexer();\n+  }\n+\n+  abstract class ReadOnlyIndexProxy<T extends PropertyContainer, I extends Index<T>> implements\n+      Index<T>\n+  {\n+    final I actual;\n+\n+    ReadOnlyIndexProxy(I actual)\n+    {\n+      this.actual = actual;\n+    }\n+\n+    abstract T wrap(T actual);\n \n-        @Override\n-        public GraphDatabaseService getGraphDatabase()\n-        {\n-            return actual.getGraphDatabase();\n-        }\n+    @Override\n+    public void delete()\n+    {\n+      readOnly();\n     }\n \n-    class ReadOnlyNodeIndexProxy extends ReadOnlyIndexProxy<Node, Index<Node>>\n+    @Override\n+    public void add(T entity, String key, Object value)\n     {\n-        ReadOnlyNodeIndexProxy( Index<Node> actual )\n-        {\n-            super( actual );\n-        }\n-\n-        @Override\n-        Node wrap( Node actual )\n-        {\n-            return readOnly( actual );\n-        }\n-\n-        @Override\n-        public String getName()\n-        {\n-            return actual.getName();\n-        }\n+      readOnly();\n+    }\n \n-        @Override\n-        public Class<Node> getEntityType()\n-        {\n-            return Node.class;\n-        }\n+    @Override\n+    public T putIfAbsent(T entity, String key, Object value)\n+    {\n+      readOnly();\n+      return null;\n     }\n \n-    class ReadOnlyRelationshipIndexProxy extends\n-            ReadOnlyIndexProxy<Relationship, RelationshipIndex> implements RelationshipIndex\n+    @Override\n+    public IndexHits<T> get(String key, Object value)\n     {\n-        ReadOnlyRelationshipIndexProxy( RelationshipIndex actual )\n-        {\n-            super( actual );\n-        }\n+      return new ReadOnlyIndexHitsProxy<>(this, actual.get(key, value));\n+    }\n \n-        @Override\n-        Relationship wrap( Relationship actual )\n-        {\n-            return readOnly( actual );\n-        }\n+    @Override\n+    public IndexHits<T> query(String key, Object queryOrQueryObject)\n+    {\n+      return new ReadOnlyIndexHitsProxy<>(this, actual.query(key, queryOrQueryObject));\n+    }\n \n-        @Override\n-        public IndexHits<Relationship> get( String key, Object valueOrNull, Node startNodeOrNull,\n-                                            Node endNodeOrNull )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.get( key, valueOrNull,\n-                    startNodeOrNull, endNodeOrNull ) );\n-        }\n+    @Override\n+    public IndexHits<T> query(Object queryOrQueryObject)\n+    {\n+      return new ReadOnlyIndexHitsProxy<>(this, actual.query(queryOrQueryObject));\n+    }\n \n-        @Override\n-        public IndexHits<Relationship> query( String key, Object queryOrQueryObjectOrNull,\n-                                              Node startNodeOrNull, Node endNodeOrNull )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.query( key,\n-                    queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull ) );\n-        }\n+    @Override\n+    public void remove(T entity, String key, Object value)\n+    {\n+      readOnly();\n+    }\n \n-        @Override\n-        public IndexHits<Relationship> query( Object queryOrQueryObjectOrNull,\n-                                              Node startNodeOrNull, Node endNodeOrNull )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.query(\n-                    queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull ) );\n-        }\n+    @Override\n+    public void remove(T entity, String key)\n+    {\n+      readOnly();\n+    }\n \n-        @Override\n-        public String getName()\n-        {\n-            return actual.getName();\n-        }\n+    @Override\n+    public void remove(T entity)\n+    {\n+      readOnly();\n+    }\n \n-        @Override\n-        public Class<Relationship> getEntityType()\n-        {\n-            return Relationship.class;\n-        }\n+    @Override\n+    public boolean isWriteable()\n+    {\n+      return false;\n     }\n \n-    private static class ReadOnlyIndexHitsProxy<T extends PropertyContainer> implements IndexHits<T>\n+    @Override\n+    public GraphDatabaseService getGraphDatabase()\n     {\n-        private final ReadOnlyIndexProxy<T, ?> index;\n-        private final IndexHits<T> actual;\n+      return actual.getGraphDatabase();\n+    }\n+  }\n \n-        ReadOnlyIndexHitsProxy( ReadOnlyIndexProxy<T, ?> index, IndexHits<T> actual )\n-        {\n-            this.index = index;\n-            this.actual = actual;\n-        }\n+  class ReadOnlyNodeIndexProxy extends ReadOnlyIndexProxy<Node, Index<Node>>\n+  {\n+    ReadOnlyNodeIndexProxy(Index<Node> actual)\n+    {\n+      super(actual);\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-            actual.close();\n-        }\n+    @Override\n+    Node wrap(Node actual)\n+    {\n+      return readOnly(actual);\n+    }\n \n-        @Override\n-        public T getSingle()\n-        {\n-            return index.wrap( actual.getSingle() );\n-        }\n+    @Override\n+    public String getName()\n+    {\n+      return actual.getName();\n+    }\n \n-        @Override\n-        public int size()\n-        {\n-            return actual.size();\n-        }\n+    @Override\n+    public Class<Node> getEntityType()\n+    {\n+      return Node.class;\n+    }\n+  }\n \n-        @Override\n-        public boolean hasNext()\n-        {\n-            return actual.hasNext();\n-        }\n+  class ReadOnlyRelationshipIndexProxy extends\n+      ReadOnlyIndexProxy<Relationship, RelationshipIndex> implements RelationshipIndex\n+  {\n+    ReadOnlyRelationshipIndexProxy(RelationshipIndex actual)\n+    {\n+      super(actual);\n+    }\n \n-        @Override\n-        public T next()\n-        {\n-            return index.wrap( actual.next() );\n-        }\n+    @Override\n+    Relationship wrap(Relationship actual)\n+    {\n+      return readOnly(actual);\n+    }\n \n-        @Override\n-        public void remove()\n-        {\n-            readOnly();\n-        }\n+    @Override\n+    public IndexHits<Relationship> get(String key, Object valueOrNull, Node startNodeOrNull,\n+                                       Node endNodeOrNull)\n+    {\n+      return new ReadOnlyIndexHitsProxy<>(this, actual.get(key, valueOrNull,\n+          startNodeOrNull, endNodeOrNull));\n+    }\n \n-        @Override\n-        public ResourceIterator<T> iterator()\n-        {\n-            return this;\n-        }\n+    @Override\n+    public IndexHits<Relationship> query(String key, Object queryOrQueryObjectOrNull,\n+                                         Node startNodeOrNull, Node endNodeOrNull)\n+    {\n+      return new ReadOnlyIndexHitsProxy<>(this, actual.query(key,\n+          queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull));\n+    }\n \n-        @Override\n-        public float currentScore()\n-        {\n-            return actual.currentScore();\n-        }\n+    @Override\n+    public IndexHits<Relationship> query(Object queryOrQueryObjectOrNull,\n+                                         Node startNodeOrNull, Node endNodeOrNull)\n+    {\n+      return new ReadOnlyIndexHitsProxy<>(this, actual.query(\n+          queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull));\n     }\n \n-    private class ReadOnlySchemaProxy implements Schema\n+    @Override\n+    public String getName()\n     {\n-        private final Schema actual;\n+      return actual.getName();\n+    }\n \n-        ReadOnlySchemaProxy( Schema actual )\n-        {\n+    @Override\n+    public Class<Relationship> getEntityType()\n+    {\n+      return Relationship.class;\n+    }\n+  }\n \n-            this.actual = actual;\n-        }\n+  private static class ReadOnlyIndexHitsProxy<T extends PropertyContainer> implements IndexHits<T>\n+  {\n+    private final ReadOnlyIndexProxy<T, ?> index;\n+    private final IndexHits<T> actual;\n \n-        @Override\n-        public IndexCreator indexFor( Label label )\n-        {\n-            throw readOnlyException();\n-        }\n+    ReadOnlyIndexHitsProxy(ReadOnlyIndexProxy<T, ?> index, IndexHits<T> actual)\n+    {\n+      this.index = index;\n+      this.actual = actual;\n+    }\n \n-        @Override\n-        public Iterable<IndexDefinition> getIndexes( Label label )\n-        {\n-            return actual.getIndexes( label );\n-        }\n+    @Override\n+    public void close()\n+    {\n+      actual.close();\n+    }\n \n-        @Override\n-        public Iterable<IndexDefinition> getIndexes()\n-        {\n-            return actual.getIndexes();\n-        }\n+    @Override\n+    public T getSingle()\n+    {\n+      return index.wrap(actual.getSingle());\n+    }\n \n-        @Override\n-        public IndexState getIndexState( IndexDefinition index )\n-        {\n-            return actual.getIndexState( index );\n-        }\n+    @Override\n+    public int size()\n+    {\n+      return actual.size();\n+    }\n \n-        @Override\n-        public IndexPopulationProgress getIndexPopulationProgress( IndexDefinition index )\n-        {\n-            return actual.getIndexPopulationProgress( index );\n-        }\n+    @Override\n+    public boolean hasNext()\n+    {\n+      return actual.hasNext();\n+    }\n \n-        @Override\n-        public String getIndexFailure( IndexDefinition index )\n-        {\n-            return actual.getIndexFailure( index );\n-        }\n+    @Override\n+    public T next()\n+    {\n+      return index.wrap(actual.next());\n+    }\n \n-        @Override\n-        public void awaitIndexOnline( IndexDefinition index, long duration, TimeUnit unit )\n-        {\n-            actual.awaitIndexOnline( index, duration, unit );\n-        }\n+    @Override\n+    public void remove()\n+    {\n+      readOnly();\n+    }\n \n-        @Override\n-        public void awaitIndexesOnline( long duration, TimeUnit unit )\n-        {\n-            actual.awaitIndexesOnline( duration, unit );\n-        }\n+    @Override\n+    public ResourceIterator<T> iterator()\n+    {\n+      return this;\n+    }\n \n-        @Override\n-        public ConstraintCreator constraintFor( Label label )\n-        {\n-            throw readOnlyException();\n-        }\n+    @Override\n+    public float currentScore()\n+    {\n+      return actual.currentScore();\n+    }\n+  }\n \n-        @Override\n-        public Iterable<ConstraintDefinition> getConstraints()\n-        {\n-            return actual.getConstraints();\n-        }\n+  private class ReadOnlySchemaProxy implements Schema\n+  {\n+    private final Schema actual;\n \n-        @Override\n-        public Iterable<ConstraintDefinition> getConstraints( Label label )\n-        {\n-            return actual.getConstraints( label );\n-        }\n+    ReadOnlySchemaProxy(Schema actual)\n+    {\n \n-        @Override\n-        public Iterable<ConstraintDefinition> getConstraints( RelationshipType type )\n-        {\n-            return actual.getConstraints( type );\n-        }\n+      this.actual = actual;\n     }\n \n     @Override\n-    public DependencyResolver getDependencyResolver()\n+    public IndexCreator indexFor(Label label)\n     {\n-        return actual.getDependencyResolver();\n+      throw readOnlyException();\n     }\n \n     @Override\n-    public File getStoreDir()\n+    public Iterable<IndexDefinition> getIndexes(Label label)\n     {\n-        return actual.getStoreDir();\n+      return actual.getIndexes(label);\n     }\n \n     @Override\n-    public StoreId storeId()\n+    public Iterable<IndexDefinition> getIndexes()\n     {\n-        return actual.storeId();\n+      return actual.getIndexes();\n     }\n \n     @Override\n-    public URL validateURLAccess( URL url ) throws URLAccessValidationError\n+    public IndexState getIndexState(IndexDefinition index)\n     {\n-        return actual.validateURLAccess( url );\n+      return actual.getIndexState(index);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key, Object value )\n+    public IndexPopulationProgress getIndexPopulationProgress(IndexDefinition index)\n     {\n-        return actual.findNodes( label, key, value );\n+      return actual.getIndexPopulationProgress(index);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2 )\n+    public String getIndexFailure(IndexDefinition index)\n     {\n-        return actual.findNodes( label, key1, value1, key2, value2 );\n+      return actual.getIndexFailure(index);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2,\n-            String key3, Object value3 )\n+    public void awaitIndexOnline(IndexDefinition index, long duration, TimeUnit unit)\n     {\n-        return actual.findNodes( label, key1, value1, key2, value2, key3, value3 );\n+      actual.awaitIndexOnline(index, duration, unit);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, Map<String,Object> propertyValues )\n+    public void awaitIndexesOnline(long duration, TimeUnit unit)\n     {\n-        return actual.findNodes( label, propertyValues );\n+      actual.awaitIndexesOnline(duration, unit);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key, String template, StringSearchMode searchMode )\n+    public ConstraintCreator constraintFor(Label label)\n     {\n-        return actual.findNodes( label, key, template, searchMode );\n+      throw readOnlyException();\n     }\n \n     @Override\n-    public Node findNode( Label label, String key, Object value )\n+    public Iterable<ConstraintDefinition> getConstraints()\n     {\n-        return actual.findNode( label, key, value );\n+      return actual.getConstraints();\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label )\n+    public Iterable<ConstraintDefinition> getConstraints(Label label)\n     {\n-        return actual.findNodes( label );\n+      return actual.getConstraints(label);\n     }\n+\n+    @Override\n+    public Iterable<ConstraintDefinition> getConstraints(RelationshipType type)\n+    {\n+      return actual.getConstraints(type);\n+    }\n+  }\n+\n+  @Override\n+  public DependencyResolver getDependencyResolver()\n+  {\n+    return actual.getDependencyResolver();\n+  }\n+\n+  @Override\n+  public File getStoreDir()\n+  {\n+    return actual.getStoreDir();\n+  }\n+\n+  @Override\n+  public StoreId storeId()\n+  {\n+    return actual.storeId();\n+  }\n+\n+  @Override\n+  public URL validateURLAccess(URL url) throws URLAccessValidationError\n+  {\n+    return actual.validateURLAccess(url);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, String key, Object value)\n+  {\n+    return actual.findNodes(label, key, value);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2)\n+  {\n+    return actual.findNodes(label, key1, value1, key2, value2);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2,\n+                                          String key3, Object value3)\n+  {\n+    return actual.findNodes(label, key1, value1, key2, value2, key3, value3);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, Map<String, Object> propertyValues)\n+  {\n+    return actual.findNodes(label, propertyValues);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, String key, String template, StringSearchMode searchMode)\n+  {\n+    return actual.findNodes(label, key, template, searchMode);\n+  }\n+\n+  @Override\n+  public Node findNode(Label label, String key, Object value)\n+  {\n+    return actual.findNode(label, key, value);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label)\n+  {\n+    return actual.findNodes(label);\n+  }\n }\n",
            "diff_size": 1214
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1443/ReadOnlyGraphDatabaseProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1443/ReadOnlyGraphDatabaseProxy.java\nindex e6b1e85459e..2fe52097185 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1443/ReadOnlyGraphDatabaseProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1443/ReadOnlyGraphDatabaseProxy.java\n@@ -133,15 +133,14 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     }\n \n     @Override\n-    public Result execute( String query, Map<String, Object> parameters )\n+    public Result execute( String query, Map<String,Object> parameters )\n     {\n         return readOnly();\n     }\n \n     @Override\n-    public Result execute( String query, Map<String,Object> parameters, long timeout, TimeUnit unit ) throws\n-            QueryExecutionException\n-    {\n+    public Result execute( String query, Map<String,Object> parameters, long timeout, TimeUnit unit ) throws QueryExecutionException\n+{\n         return readOnly();\n     }\n \n@@ -168,7 +167,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         throw new UnsupportedOperationException( \"Cannot enable Remote Shell from Remote Shell\" );\n     }\n \n-    public boolean enableRemoteShell( Map<String, Serializable> initialProperties )\n+    public boolean enableRemoteShell( Map<String,Serializable> initialProperties )\n     {\n         return enableRemoteShell();\n     }\n@@ -251,8 +250,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     }\n \n     @Override\n-    public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    public <T> TransactionEventHandler<T> registerTransactionEventHandler( TransactionEventHandler<T> handler )\n     {\n         return readOnly();\n     }\n@@ -282,8 +280,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     }\n \n     @Override\n-    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler( TransactionEventHandler<T> handler )\n     {\n         return readOnly();\n     }\n@@ -306,7 +303,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         @Override\n         public boolean equals( Object obj )\n         {\n-            return (obj instanceof Node) && ((Node) obj).getId() == getId();\n+            return ( obj instanceof Node) && ((Node) obj).getId() == getId();\n         }\n \n         @Override\n@@ -346,9 +343,8 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         }\n \n         @Override\n-        public Iterable<Relationship> getRelationships( Direction direction,\n-                                                        RelationshipType... types )\n-        {\n+        public Iterable<Relationship> getRelationships( Direction direction, RelationshipType... types )\n+{\n             return relationships( actual.getRelationships( direction, types ) );\n         }\n \n@@ -449,13 +445,13 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         }\n \n         @Override\n-        public Map<String, Object> getProperties( String... names )\n+        public Map<String,Object> getProperties( String... names )\n         {\n             return actual.getProperties( names );\n         }\n \n         @Override\n-        public Map<String, Object> getAllProperties()\n+        public Map<String,Object> getAllProperties()\n         {\n             return actual.getAllProperties();\n         }\n@@ -528,7 +524,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         @Override\n         public boolean equals( Object obj )\n         {\n-            return (obj instanceof Relationship) && ((Relationship) obj).getId() == getId();\n+            return ( obj instanceof Relationship) && ((Relationship) obj).getId() == getId();\n         }\n \n         @Override\n@@ -610,13 +606,13 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         }\n \n         @Override\n-        public Map<String, Object> getProperties( String... names )\n+        public Map<String,Object> getProperties( String... names )\n         {\n             return actual.getProperties( names );\n         }\n \n         @Override\n-        public Map<String, Object> getAllProperties()\n+        public Map<String,Object> getAllProperties()\n         {\n             return actual.getAllProperties();\n         }\n@@ -670,7 +666,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     }\n \n     @Override\n-    public Index<Node> forNodes( String indexName, Map<String, String> customConfiguration )\n+    public Index<Node> forNodes( String indexName, Map<String,String> customConfiguration )\n     {\n         return new ReadOnlyNodeIndexProxy( actual.index().forNodes( indexName, customConfiguration ) );\n     }\n@@ -694,9 +690,8 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     }\n \n     @Override\n-    public RelationshipIndex forRelationships( String indexName,\n-                                               Map<String, String> customConfiguration )\n-    {\n+    public RelationshipIndex forRelationships( String indexName, Map<String,String> customConfiguration )\n+{\n         return new ReadOnlyRelationshipIndexProxy( actual.index().forRelationships( indexName, customConfiguration ) );\n     }\n \n@@ -725,15 +720,14 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     }\n \n     @Override\n-    public Map<String, String> getConfiguration( Index<? extends PropertyContainer> index )\n+    public Map<String,String> getConfiguration( Index<? extends PropertyContainer> index )\n     {\n         return actual.index().getConfiguration( index );\n     }\n \n     @Override\n-    public String setConfiguration( Index<? extends PropertyContainer> index, String key,\n-                                    String value )\n-    {\n+    public String setConfiguration( Index<? extends PropertyContainer> index, String key, String value )\n+{\n         throw new IllegalStateException( \"Database is in read-only mode\" );\n     }\n \n@@ -755,8 +749,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         return actual.index().getRelationshipAutoIndexer();\n     }\n \n-    abstract class ReadOnlyIndexProxy<T extends PropertyContainer, I extends Index<T>> implements\n-            Index<T>\n+    abstract class ReadOnlyIndexProxy<T extends PropertyContainer, I extends Index<T>> implements Index<T>\n     {\n         final I actual;\n \n@@ -861,9 +854,8 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         }\n     }\n \n-    class ReadOnlyRelationshipIndexProxy extends\n-            ReadOnlyIndexProxy<Relationship, RelationshipIndex> implements RelationshipIndex\n-    {\n+    class ReadOnlyRelationshipIndexProxy extends ReadOnlyIndexProxy<Relationship,RelationshipIndex> implements RelationshipIndex\n+{\n         ReadOnlyRelationshipIndexProxy( RelationshipIndex actual )\n         {\n             super( actual );\n@@ -876,27 +868,23 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n         }\n \n         @Override\n-        public IndexHits<Relationship> get( String key, Object valueOrNull, Node startNodeOrNull,\n-                                            Node endNodeOrNull )\n-        {\n+        public IndexHits<Relationship> get( String key, Object valueOrNull, Node startNodeOrNull, Node endNodeOrNull )\n+{\n             return new ReadOnlyIndexHitsProxy<>( this, actual.get( key, valueOrNull,\n                     startNodeOrNull, endNodeOrNull ) );\n         }\n \n         @Override\n-        public IndexHits<Relationship> query( String key, Object queryOrQueryObjectOrNull,\n-                                              Node startNodeOrNull, Node endNodeOrNull )\n-        {\n+        public IndexHits<Relationship> query( String key, Object queryOrQueryObjectOrNull, Node startNodeOrNull, Node endNodeOrNull )\n+{\n             return new ReadOnlyIndexHitsProxy<>( this, actual.query( key,\n                     queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull ) );\n         }\n \n         @Override\n-        public IndexHits<Relationship> query( Object queryOrQueryObjectOrNull,\n-                                              Node startNodeOrNull, Node endNodeOrNull )\n-        {\n-            return new ReadOnlyIndexHitsProxy<>( this, actual.query(\n-                    queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull ) );\n+        public IndexHits<Relationship> query( Object queryOrQueryObjectOrNull, Node startNodeOrNull, Node endNodeOrNull )\n+{\n+            return new ReadOnlyIndexHitsProxy<>( this, actual.query( queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull ) );\n         }\n \n         @Override\n@@ -978,8 +966,7 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n \n         ReadOnlySchemaProxy( Schema actual )\n         {\n-\n-            this.actual = actual;\n+    this.actual = actual;\n         }\n \n         @Override\n@@ -1121,4 +1108,4 @@ public class ReadOnlyGraphDatabaseProxy implements GraphDatabaseService, GraphDa\n     {\n         return actual.findNodes( label );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
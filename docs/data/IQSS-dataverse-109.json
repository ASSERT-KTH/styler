{
    "project_name": "IQSS-dataverse",
    "error_id": "109",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Entity\n@Table(indexes = {@Index(columnList=\"dataverse_id\")\n\t\t, @Index(columnList=\"contactemail\")\n\t\t, @Index(columnList=\"displayorder\")})\npublic class DataverseContact implements Serializable {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/109/DataverseContact.java\nindex d19f20d5ebd..bde6b2cc99e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/109/DataverseContact.java\n@@ -25,7 +25,7 @@ import org.hibernate.validator.constraints.NotBlank;\n  */\n @Entity\n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"contactemail\")\n+                      , @Index(columnList=\"contactemail\")\n \t\t, @Index(columnList=\"displayorder\")})\n public class DataverseContact implements Serializable {\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/109/DataverseContact.java\nindex d19f20d5ebd..adfdc75e6e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/109/DataverseContact.java\n@@ -3,6 +3,7 @@\n  * To change this template file, choose Tools | Templates\n  * and open the template in the editor.\n  */\n+\n package edu.harvard.iq.dataverse;\n \n import java.io.Serializable;\n@@ -20,94 +21,93 @@ import org.hibernate.validator.constraints.Email;\n import org.hibernate.validator.constraints.NotBlank;\n \n /**\n- *\n  * @author gdurand\n  */\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"contactemail\")\n-\t\t, @Index(columnList=\"displayorder\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\")\n+  , @Index(columnList = \"contactemail\")\n+  , @Index(columnList = \"displayorder\")})\n public class DataverseContact implements Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-\n-    public DataverseContact() {\n-    }      \n-    \n-    public DataverseContact(Dataverse dv) {\n-        this.dataverse = dv; \n-    }\n-    \n-    public DataverseContact(Dataverse dv, String contactEmail) {\n-        this.dataverse = dv;        \n-        this.contactEmail = contactEmail;\n-    }      \n-    \n-    @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;\n-\n-    public Long getId() {\n-        return this.id;\n-    }\n-\n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n-    @ManyToOne\n-    @JoinColumn(name = \"dataverse_id\")\n-    private Dataverse dataverse;\n-\n-    @NotBlank(message = \"{user.invalidEmail}\")\n-    @ValidateEmail(message = \"{user.invalidEmail}\")\n-    @Column( nullable = false )\n-    private String contactEmail;\n-    private int displayOrder;\n-\n-    public Dataverse getDataverse() {\n-        return dataverse;\n-    }\n-\n-    public void setDataverse(Dataverse dataverse) {\n-        this.dataverse = dataverse;\n-    }\n-\n-    public String getContactEmail() {\n-        return contactEmail;\n-    }\n-\n-    public void setContactEmail(String contactEmail) {\n-        this.contactEmail = contactEmail;\n-    }\n-\n-    public int getDisplayOrder() {\n-        return displayOrder;\n-    }\n-\n-    public void setDisplayOrder(int displayOrder) {\n-        this.displayOrder = displayOrder;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (this.id != null ? this.id.hashCode() : 0);\n-        return hash;\n-    }\n-\n-    @Override\n-    public boolean equals(Object object) {\n-        if (!(object instanceof DatasetFieldType)) {\n-            return false;\n-        }\n-        DataverseContact other = (DataverseContact) object;\n-        return !(!Objects.equals(this.id, other.id) && (this.id == null || !this.id.equals(other.id)));\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"edu.harvard.iq.dataverse.DataverseContact[ id=\" + id + \" ]\";\n+  private static final long serialVersionUID = 1L;\n+\n+  public DataverseContact() {\n+  }\n+\n+  public DataverseContact(Dataverse dv) {\n+    this.dataverse = dv;\n+  }\n+\n+  public DataverseContact(Dataverse dv, String contactEmail) {\n+    this.dataverse = dv;\n+    this.contactEmail = contactEmail;\n+  }\n+\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  private Long id;\n+\n+  public Long getId() {\n+    return this.id;\n+  }\n+\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n+\n+  @ManyToOne\n+  @JoinColumn(name = \"dataverse_id\")\n+  private Dataverse dataverse;\n+\n+  @NotBlank(message = \"{user.invalidEmail}\")\n+  @ValidateEmail(message = \"{user.invalidEmail}\")\n+  @Column(nullable = false)\n+  private String contactEmail;\n+  private int displayOrder;\n+\n+  public Dataverse getDataverse() {\n+    return dataverse;\n+  }\n+\n+  public void setDataverse(Dataverse dataverse) {\n+    this.dataverse = dataverse;\n+  }\n+\n+  public String getContactEmail() {\n+    return contactEmail;\n+  }\n+\n+  public void setContactEmail(String contactEmail) {\n+    this.contactEmail = contactEmail;\n+  }\n+\n+  public int getDisplayOrder() {\n+    return displayOrder;\n+  }\n+\n+  public void setDisplayOrder(int displayOrder) {\n+    this.displayOrder = displayOrder;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (this.id != null ? this.id.hashCode() : 0);\n+    return hash;\n+  }\n+\n+  @Override\n+  public boolean equals(Object object) {\n+    if (!(object instanceof DatasetFieldType)) {\n+      return false;\n     }\n+    DataverseContact other = (DataverseContact) object;\n+    return !(!Objects.equals(this.id, other.id) && (this.id == null || !this.id.equals(other.id)));\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"edu.harvard.iq.dataverse.DataverseContact[ id=\" + id + \" ]\";\n+  }\n \n }\n",
            "diff_size": 92
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/109/DataverseContact.java\nindex d19f20d5ebd..5fe96fcf537 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/109/DataverseContact.java\n@@ -24,27 +24,25 @@ import org.hibernate.validator.constraints.NotBlank;\n  * @author gdurand\n  */\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"contactemail\")\n-\t\t, @Index(columnList=\"displayorder\")})\n+@Table(indexes = {@Index(columnList=\"dataverse_id\"), @Index(columnList=\"contactemail\"), @Index(columnList=\"displayorder\")})\n public class DataverseContact implements Serializable {\n \n     private static final long serialVersionUID = 1L;\n \n     public DataverseContact() {\n-    }      \n-    \n-    public DataverseContact(Dataverse dv) {\n-        this.dataverse = dv; \n+    }\n+\n+public DataverseContact(Dataverse dv) {\n+    this.dataverse = dv; \n     }\n     \n     public DataverseContact(Dataverse dv, String contactEmail) {\n-        this.dataverse = dv;        \n-        this.contactEmail = contactEmail;\n-    }      \n-    \n-    @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+        this.dataverse = dv;\n+this.contactEmail = contactEmail;\n+    }\n+\n+@Id\n+@GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n \n     public Long getId() {\n@@ -110,4 +108,4 @@ public class DataverseContact implements Serializable {\n         return \"edu.harvard.iq.dataverse.DataverseContact[ id=\" + id + \" ]\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/109/DataverseContact.java\nindex d19f20d5ebd..8e724b521c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/109/DataverseContact.java\n@@ -23,26 +23,25 @@ import org.hibernate.validator.constraints.NotBlank;\n  *\n  * @author gdurand\n  */\n+\n+\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"contactemail\")\n-\t\t, @Index(columnList=\"displayorder\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\"), @Index(columnList = \"contactemail\"), @Index(columnList = \"displayorder\")})\n public class DataverseContact implements Serializable {\n \n     private static final long serialVersionUID = 1L;\n \n-    public DataverseContact() {\n-    }      \n-    \n+    public DataverseContact() {}\n+\n     public DataverseContact(Dataverse dv) {\n-        this.dataverse = dv; \n+        this.dataverse = dv;\n     }\n-    \n+\n     public DataverseContact(Dataverse dv, String contactEmail) {\n-        this.dataverse = dv;        \n+        this.dataverse = dv;\n         this.contactEmail = contactEmail;\n-    }      \n-    \n+    }\n+\n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n@@ -61,7 +60,7 @@ public class DataverseContact implements Serializable {\n \n     @NotBlank(message = \"{user.invalidEmail}\")\n     @ValidateEmail(message = \"{user.invalidEmail}\")\n-    @Column( nullable = false )\n+    @Column(nullable = false)\n     private String contactEmail;\n     private int displayOrder;\n \n@@ -101,6 +100,7 @@ public class DataverseContact implements Serializable {\n         if (!(object instanceof DatasetFieldType)) {\n             return false;\n         }\n+\n         DataverseContact other = (DataverseContact) object;\n         return !(!Objects.equals(this.id, other.id) && (this.id == null || !this.id.equals(other.id)));\n     }\n@@ -110,4 +110,4 @@ public class DataverseContact implements Serializable {\n         return \"edu.harvard.iq.dataverse.DataverseContact[ id=\" + id + \" ]\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/109/DataverseContact.java\nindex d19f20d5ebd..bde6b2cc99e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/109/DataverseContact.java\n@@ -25,7 +25,7 @@ import org.hibernate.validator.constraints.NotBlank;\n  */\n @Entity\n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"contactemail\")\n+                      , @Index(columnList=\"contactemail\")\n \t\t, @Index(columnList=\"displayorder\")})\n public class DataverseContact implements Serializable {\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/109/DataverseContact.java\nindex d19f20d5ebd..091d018aea8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/109/DataverseContact.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/109/DataverseContact.java\n@@ -25,7 +25,7 @@ import org.hibernate.validator.constraints.NotBlank;\n  */\n @Entity\n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"contactemail\")\n+        , @Index(columnList=\"contactemail\")\n \t\t, @Index(columnList=\"displayorder\")})\n public class DataverseContact implements Serializable {\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
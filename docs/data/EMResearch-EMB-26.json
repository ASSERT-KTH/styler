{
    "project_name": "EMResearch-EMB",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 174).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                .findFirst()\n                .orElse(Role.limited_user);\n        rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n    }\n\n    public String getName() {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "102",
                    "severity": "warning",
                    "message": "'>=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "102",
                    "severity": "warning",
                    "message": "'>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler/26/UserProfileView.java\nindex 6def8bc1d1c..00182109a20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler/26/UserProfileView.java\n@@ -26,7 +26,8 @@ public class UserProfileView {\n                 .filter(role -> role.getLevel() <= user.getAuthorizationLevel())\n                 .findFirst()\n                 .orElse(Role.limited_user);\n-        rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n+                rolePermissions = Stream.of(Permission.values()).filter(permission-> role .getLevel()>=permission.\n+                getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n     }\n \n     public String getName() {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/26/UserProfileView.java\nindex 6def8bc1d1c..47295c7454f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/26/UserProfileView.java\n@@ -22,11 +22,12 @@ public class UserProfileView {\n     public UserProfileView(User user) {\n         name = user.getName();\n         role = Stream.of(Role.values())\n-                .sorted((o1, o2) -> Integer.compare(o2.getLevel(), o1.getLevel()))\n-                .filter(role -> role.getLevel() <= user.getAuthorizationLevel())\n-                .findFirst()\n-                .orElse(Role.limited_user);\n-        rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n+            .sorted((o1, o2) -> Integer.compare(o2.getLevel(), o1.getLevel()))\n+            .filter(role -> role.getLevel() <= user.getAuthorizationLevel())\n+            .findFirst()\n+            .orElse(Role.limited_user);\n+        rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel())\n+            .map(Enum::name).sorted().collect(Collectors.toList());\n     }\n \n     public String getName() {\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/26/UserProfileView.java\nindex 6def8bc1d1c..70da604bd35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/26/UserProfileView.java\n@@ -40,4 +40,4 @@ public class UserProfileView {\n     public List<String> getRolePermissions() {\n         return rolePermissions;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/26/UserProfileView.java\nindex 6def8bc1d1c..5b6aa6f0c09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/26/UserProfileView.java\n@@ -5,27 +5,25 @@ import com.fasterxml.jackson.databind.annotation.JsonNaming;\n import se.devscout.scoutapi.auth.Permission;\n import se.devscout.scoutapi.auth.Role;\n import se.devscout.scoutapi.model.User;\n-\n import java.util.List;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n+\n @JsonNaming(value = PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy.class)\n public class UserProfileView {\n+\n     private List<String> rolePermissions;\n     private String name;\n     private Role role;\n \n     public UserProfileView() {\n+\n     }\n \n     public UserProfileView(User user) {\n         name = user.getName();\n-        role = Stream.of(Role.values())\n-                .sorted((o1, o2) -> Integer.compare(o2.getLevel(), o1.getLevel()))\n-                .filter(role -> role.getLevel() <= user.getAuthorizationLevel())\n-                .findFirst()\n-                .orElse(Role.limited_user);\n+        role = Stream.of(Role.values()).sorted((o1, o2) -> Integer.compare(o2.getLevel(), o1.getLevel())).filter(role -> role.getLevel() <= user.getAuthorizationLevel()).findFirst().orElse(Role.limited_user);\n         rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n     }\n \n@@ -40,4 +38,4 @@ public class UserProfileView {\n     public List<String> getRolePermissions() {\n         return rolePermissions;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "102",
                    "severity": "warning",
                    "message": "'>=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "102",
                    "severity": "warning",
                    "message": "'>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_random/26/UserProfileView.java\nindex 6def8bc1d1c..00182109a20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_random/26/UserProfileView.java\n@@ -26,7 +26,8 @@ public class UserProfileView {\n                 .filter(role -> role.getLevel() <= user.getAuthorizationLevel())\n                 .findFirst()\n                 .orElse(Role.limited_user);\n-        rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n+                rolePermissions = Stream.of(Permission.values()).filter(permission-> role .getLevel()>=permission.\n+                getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n     }\n \n     public String getName() {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "column": "58",
                    "severity": "warning",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "29",
                    "column": "67",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "67",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "29",
                    "column": "96",
                    "severity": "warning",
                    "message": "'>=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "96",
                    "severity": "warning",
                    "message": "'>=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "121",
                    "severity": "warning",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_three_grams/26/UserProfileView.java\nindex 6def8bc1d1c..6bd0603c08b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/26/UserProfileView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_three_grams/26/UserProfileView.java\n@@ -26,7 +26,10 @@ public class UserProfileView {\n                 .filter(role -> role.getLevel() <= user.getAuthorizationLevel())\n                 .findFirst()\n                 .orElse(Role.limited_user);\n-        rolePermissions = Stream.of(Permission.values()).filter(permission -> role.getLevel() >= permission.getLevel()).map(Enum::name).sorted().collect(Collectors.toList());\n+        rolePermissions = Stream.of(Permission.values()) . filter ( permission->role.getLevel()>=permission.getLevel()) . map(Enum\n+    ::\n+\n+        name).sorted().collect(Collectors.toList());\n     }\n \n     public String getName() {\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1640",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1640/LockWaitStrategies.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1640/LockWaitStrategies.java\nindex 87450c12015..60d616bae30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1640/LockWaitStrategies.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1640/LockWaitStrategies.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.lock;\n \n import org.neo4j.kernel.api.exceptions.Status;\n@@ -26,67 +27,65 @@ import static org.neo4j.kernel.api.exceptions.Status.Transaction.Interrupted;\n public enum LockWaitStrategies implements WaitStrategy\n {\n     SPIN\n-    {\n-        @Override\n-        public void apply( long iteration ) throws AcquireLockTimeoutException\n-        {\n-            // TODO We can experiment with introducing branch mispredictions here, to create\n-            // TODO bubbles in the pipeline that'll allow hyper-threaded threads on the\n-            // TODO same core to make progress. We can do that by generating a random number,\n-            // TODO e.g. with XorShift, and based on that, randomly branch to do a volatile\n-            // TODO write to one of two fields. The volatile fields would be there to give\n-            // TODO side-effect to the operation, preventing dead-code elimination.\n-        }\n-    },\n+      {\n+          @Override\n+          public void apply(long iteration) throws AcquireLockTimeoutException\n+          {\n+              // TODO We can experiment with introducing branch mispredictions here, to create\n+              // TODO bubbles in the pipeline that'll allow hyper-threaded threads on the\n+              // TODO same core to make progress. We can do that by generating a random number,\n+              // TODO e.g. with XorShift, and based on that, randomly branch to do a volatile\n+              // TODO write to one of two fields. The volatile fields would be there to give\n+              // TODO side-effect to the operation, preventing dead-code elimination.\n+          }\n+      },\n     YIELD\n-    {\n-        @Override\n-        public void apply( long iteration ) throws AcquireLockTimeoutException\n-        {\n-            Thread.yield();\n-        }\n-    },\n+      {\n+          @Override\n+          public void apply(long iteration) throws AcquireLockTimeoutException\n+          {\n+              Thread.yield();\n+          }\n+      },\n     INCREMENTAL_BACKOFF\n-    {\n-        private static final int spinIterations = 1000;\n-        private static final long multiplyUntilIteration = spinIterations + 2;\n+      {\n+          private static final int spinIterations = 1000;\n+          private static final long multiplyUntilIteration = spinIterations + 2;\n \n-        @Override\n-        public void apply( long iteration ) throws AcquireLockTimeoutException\n-        {\n-            if ( iteration < spinIterations )\n-            {\n-                SPIN.apply( iteration );\n-                return;\n-            }\n+          @Override\n+          public void apply(long iteration) throws AcquireLockTimeoutException\n+          {\n+              if (iteration < spinIterations)\n+              {\n+                  SPIN.apply(iteration);\n+                  return;\n+              }\n \n-            try\n-            {\n-                if ( iteration < multiplyUntilIteration )\n-                {\n-                    Thread.sleep( 0, 1 << (iteration - spinIterations) );\n-                }\n-                else\n-                {\n-                    Thread.sleep( 0, 500 );\n-                }\n-            }\n-            catch ( InterruptedException e )\n-            {\n-                Thread.interrupted();\n-                throw new AcquireLockTimeoutException( \"Interrupted while waiting.\", e, Interrupted );\n-            }\n-        }\n-    },\n+              try\n+              {\n+                  if (iteration < multiplyUntilIteration)\n+                  {\n+                      Thread.sleep(0, 1 << (iteration - spinIterations));\n+                  } else\n+                  {\n+                      Thread.sleep(0, 500);\n+                  }\n+              } catch (InterruptedException e)\n+              {\n+                  Thread.interrupted();\n+                  throw new AcquireLockTimeoutException(\"Interrupted while waiting.\", e, Interrupted);\n+              }\n+          }\n+      },\n     NO_WAIT\n-    {\n-        @Override\n-        public void apply( long iteration )\n-                throws AcquireLockTimeoutException\n-        {\n-            // The NO_WAIT bail-out is a mix of deadlock and lock acquire timeout.\n-            throw new AcquireLockTimeoutException( \"Cannot acquire lock, and refusing to wait.\",\n-                    Status.Transaction.DeadlockDetected );\n-        }\n-    }\n+      {\n+          @Override\n+          public void apply(long iteration)\n+            throws AcquireLockTimeoutException\n+          {\n+              // The NO_WAIT bail-out is a mix of deadlock and lock acquire timeout.\n+              throw new AcquireLockTimeoutException(\"Cannot acquire lock, and refusing to wait.\",\n+                Status.Transaction.DeadlockDetected);\n+          }\n+      }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1640/LockWaitStrategies.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1640/LockWaitStrategies.java\nindex 87450c12015..d132f0ee10f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1640/LockWaitStrategies.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1640/LockWaitStrategies.java\n@@ -89,4 +89,4 @@ public enum LockWaitStrategies implements WaitStrategy\n                     Status.Transaction.DeadlockDetected );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2851",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "353",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "393",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "444",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "471",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "471",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2851/SettingMigrators.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2851/SettingMigrators.java\nindex c61e295427a..c2af8ad1fca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2851/SettingMigrators.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2851/SettingMigrators.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import java.util.ArrayList;\n@@ -69,9 +70,9 @@ public final class SettingMigrators\n     public static class ActiveDatabaseMigrator implements SettingMigrator\n     {\n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingNameChange( values, log, \"dbms.active_database\", default_database );\n+            migrateSettingNameChange(values, log, \"dbms.active_database\", default_database);\n         }\n     }\n \n@@ -81,36 +82,36 @@ public final class SettingMigrators\n         private static final String INDEX_PROVIDER_SETTING = \"dbms.index.default_schema_provider\";\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            String oldSchemaProvider = values.remove( INDEX_PROVIDER_SETTING );\n-            if ( isBlank( oldSchemaProvider ) )\n+            String oldSchemaProvider = values.remove(INDEX_PROVIDER_SETTING);\n+            if (isBlank(oldSchemaProvider))\n             {\n                 return;\n             }\n             String newSchemaProvider = oldSchemaProvider;\n             boolean migratedValue = false;\n-            switch ( oldSchemaProvider )\n+            switch (oldSchemaProvider)\n             {\n-            case \"lucene-1.0\":\n-            case \"lucene+native-1.0\":\n-                newSchemaProvider = \"lucene+native-3.0\";\n-                migratedValue = true;\n-                break;\n-            case \"lucene+native-2.0\":\n-                newSchemaProvider = \"native-btree-1.0\";\n-                migratedValue = true;\n-                break;\n-            default:\n+                case \"lucene-1.0\":\n+                case \"lucene+native-1.0\":\n+                    newSchemaProvider = \"lucene+native-3.0\";\n+                    migratedValue = true;\n+                    break;\n+                case \"lucene+native-2.0\":\n+                    newSchemaProvider = \"native-btree-1.0\";\n+                    migratedValue = true;\n+                    break;\n+                default:\n             }\n \n             String warning = \"Use of deprecated setting \" + INDEX_PROVIDER_SETTING + \".\";\n-            if ( migratedValue )\n+            if (migratedValue)\n             {\n                 warning += \" Value migrated from \" + oldSchemaProvider + \" to \" + newSchemaProvider + \".\";\n             }\n-            log.warn( warning );\n-            values.put( INDEX_PROVIDER_SETTING, newSchemaProvider );\n+            log.warn(warning);\n+            values.put(INDEX_PROVIDER_SETTING, newSchemaProvider);\n         }\n     }\n \n@@ -118,90 +119,89 @@ public final class SettingMigrators\n     public static class CrsConfigMigrator implements SettingMigrator\n     {\n         private static final String PREFIX = \"unsupported.dbms.db.spatial.crs\";\n-        private static final Pattern oldConnector = Pattern.compile( \"^unsupported\\\\.dbms\\\\.db\\\\.spatial\\\\.crs\\\\.([^.]+)\\\\.(min|max)\\\\.([xyz])$\");\n+        private static final Pattern oldConnector = Pattern.compile(\"^unsupported\\\\.dbms\\\\.db\\\\.spatial\\\\.crs\\\\.([^.]+)\\\\.(min|max)\\\\.([xyz])$\");\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n             List<String> oldCrs = new ArrayList<>();\n             Map<String, List<String>> crsValues = new HashMap<>();\n-            values.forEach( ( setting, value ) ->\n+            values.forEach((setting, value) ->\n             {\n-                Matcher matcher = oldConnector.matcher( setting );\n-                if ( matcher.find() )\n+                Matcher matcher = oldConnector.matcher(setting);\n+                if (matcher.find())\n                 {\n-                    String crsName = matcher.group( 1 );\n-                    String crsPlusSetting = format( \"%s.%s\", crsName, matcher.group( 2 ) );\n-                    CoordinateReferenceSystem crs = CoordinateReferenceSystem.byName( crsName );\n-                    List<String> valueList = crsValues.computeIfAbsent( crsPlusSetting,\n-                            s -> new ArrayList<>( Collections.nCopies( crs.getDimension(), Double.toString( Double.NaN ) ) ) );\n-                    valueList.set( matcher.group( 3 ).charAt( 0 ) - 'x' , value );\n-                    oldCrs.add( setting );\n+                    String crsName = matcher.group(1);\n+                    String crsPlusSetting = format(\"%s.%s\", crsName, matcher.group(2));\n+                    CoordinateReferenceSystem crs = CoordinateReferenceSystem.byName(crsName);\n+                    List<String> valueList = crsValues.computeIfAbsent(crsPlusSetting,\n+                      s -> new ArrayList<>(Collections.nCopies(crs.getDimension(), Double.toString(Double.NaN))));\n+                    valueList.set(matcher.group(3).charAt(0) - 'x', value);\n+                    oldCrs.add(setting);\n                 }\n-            } );\n-\n-            oldCrs.forEach( setting -> {\n-                values.remove( setting );\n-                log.warn( \"Use of deprecated setting %s.\", setting );\n-            } );\n-            crsValues.forEach( ( name, valueList ) -> {\n-                String setting = format( \"%s.%s\", PREFIX, name );\n-                String value = String.join( LIST_SEPARATOR, valueList );\n-                values.putIfAbsent( setting, value );\n-                log.warn( \"Settings migrated to %s = %s\", setting, value );\n-            } );\n+            });\n+\n+            oldCrs.forEach(setting -> {\n+                values.remove(setting);\n+                log.warn(\"Use of deprecated setting %s.\", setting);\n+            });\n+            crsValues.forEach((name, valueList) -> {\n+                String setting = format(\"%s.%s\", PREFIX, name);\n+                String value = String.join(LIST_SEPARATOR, valueList);\n+                values.putIfAbsent(setting, value);\n+                log.warn(\"Settings migrated to %s = %s\", setting, value);\n+            });\n         }\n     }\n \n     @ServiceProvider\n     public static class ConnectorMigrator implements SettingMigrator\n     {\n-        private static final Pattern oldConnector = Pattern.compile( \"^dbms\\\\.connector\\\\.([^.]+)\\\\.([^.]+)$\");\n+        private static final Pattern oldConnector = Pattern.compile(\"^dbms\\\\.connector\\\\.([^.]+)\\\\.([^.]+)$\");\n         private static final String ANY_CONNECTOR = \"bolt|http|https\";\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateOldConnectors( values, log );\n-            migrateConnectorAddresses( values, defaultValues, log );\n+            migrateOldConnectors(values, log);\n+            migrateConnectorAddresses(values, defaultValues, log);\n         }\n \n-        private static void migrateOldConnectors( Map<String,String> values, Log log )\n+        private static void migrateOldConnectors(Map<String, String> values, Log log)\n         {\n             Map<String, Matcher> oldConnectors = new HashMap<>();\n-            values.forEach( ( setting, value ) ->\n+            values.forEach((setting, value) ->\n             {\n-                Matcher matcher = oldConnector.matcher( setting );\n-                if ( matcher.find() )\n+                Matcher matcher = oldConnector.matcher(setting);\n+                if (matcher.find())\n                 {\n-                    oldConnectors.put( setting, matcher );\n+                    oldConnectors.put(setting, matcher);\n                 }\n-            } );\n+            });\n \n-            oldConnectors.forEach( ( setting, matcher ) -> {\n-                String settingName = matcher.group( 2 );\n-                String id = matcher.group( 1 );\n-                if ( id.matches( ANY_CONNECTOR ) )\n+            oldConnectors.forEach((setting, matcher) -> {\n+                String settingName = matcher.group(2);\n+                String id = matcher.group(1);\n+                if (id.matches(ANY_CONNECTOR))\n                 {\n-                    if ( Objects.equals( \"type\", settingName ) )\n+                    if (Objects.equals(\"type\", settingName))\n                     {\n-                        values.remove( setting );\n-                        log.warn( \"Use of deprecated setting %s. Type is no longer required\", setting );\n+                        values.remove(setting);\n+                        log.warn(\"Use of deprecated setting %s. Type is no longer required\", setting);\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    values.remove( setting );\n-                    log.warn( \"Use of deprecated setting %s. No longer supports multiple connectors. Setting discarded.\", setting );\n+                    values.remove(setting);\n+                    log.warn(\"Use of deprecated setting %s. No longer supports multiple connectors. Setting discarded.\", setting);\n                 }\n-            } );\n+            });\n         }\n \n-        private static void migrateConnectorAddresses( Map<String,String> values, Map<String,String> defValues,  Log log )\n+        private static void migrateConnectorAddresses(Map<String, String> values, Map<String, String> defValues, Log log)\n         {\n-            migrateAdvertisedAddressInheritanceChange( values, defValues, log, BoltConnector.listen_address.name(), BoltConnector.advertised_address.name() );\n-            migrateAdvertisedAddressInheritanceChange( values, defValues, log, HttpConnector.listen_address.name(), HttpConnector.advertised_address.name() );\n-            migrateAdvertisedAddressInheritanceChange( values, defValues, log, HttpsConnector.listen_address.name(), HttpsConnector.advertised_address.name() );\n+            migrateAdvertisedAddressInheritanceChange(values, defValues, log, BoltConnector.listen_address.name(), BoltConnector.advertised_address.name());\n+            migrateAdvertisedAddressInheritanceChange(values, defValues, log, HttpConnector.listen_address.name(), HttpConnector.advertised_address.name());\n+            migrateAdvertisedAddressInheritanceChange(values, defValues, log, HttpsConnector.listen_address.name(), HttpsConnector.advertised_address.name());\n         }\n     }\n \n@@ -209,79 +209,79 @@ public final class SettingMigrators\n     public static class DefaultAddressMigrator implements SettingMigrator\n     {\n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingNameChange( values, log, \"dbms.connectors.default_listen_address\", default_listen_address );\n-            migrateSettingNameChange( values, log, \"dbms.connectors.default_advertised_address\", default_advertised_address );\n+            migrateSettingNameChange(values, log, \"dbms.connectors.default_listen_address\", default_listen_address);\n+            migrateSettingNameChange(values, log, \"dbms.connectors.default_advertised_address\", default_advertised_address);\n         }\n     }\n \n     @ServiceProvider\n     public static class SslPolicyMigrator implements SettingMigrator\n     {\n-        private static final Pattern pattern = Pattern.compile( \"^(dbms\\\\.ssl\\\\.policy\\\\.)([^.]+)(\\\\.[^.]+)$\" );\n-        private static final Map<String,SslPolicyScope> settingScopeMap = Map.of(\n-                \"bolt.ssl_policy\", SslPolicyScope.BOLT,\n-                \"https.ssl_policy\", SslPolicyScope.HTTPS,\n-                \"dbms.backup.ssl_policy\", SslPolicyScope.BACKUP,\n-                \"causal_clustering.ssl_policy\", SslPolicyScope.CLUSTER\n+        private static final Pattern pattern = Pattern.compile(\"^(dbms\\\\.ssl\\\\.policy\\\\.)([^.]+)(\\\\.[^.]+)$\");\n+        private static final Map<String, SslPolicyScope> settingScopeMap = Map.of(\n+          \"bolt.ssl_policy\", SslPolicyScope.BOLT,\n+          \"https.ssl_policy\", SslPolicyScope.HTTPS,\n+          \"dbms.backup.ssl_policy\", SslPolicyScope.BACKUP,\n+          \"causal_clustering.ssl_policy\", SslPolicyScope.CLUSTER\n         );\n \n         private static final List<String> legacySettings =\n-                List.of( \"dbms.directories.certificates\", \"unsupported.dbms.security.tls_certificate_file\", \"unsupported.dbms.security.tls_key_file\" );\n+          List.of(\"dbms.directories.certificates\", \"unsupported.dbms.security.tls_certificate_file\", \"unsupported.dbms.security.tls_key_file\");\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migratePolicies( values, log );\n-            warnUseOfLegacyPolicy( values, log );\n+            migratePolicies(values, log);\n+            warnUseOfLegacyPolicy(values, log);\n         }\n \n-        private static void migratePolicies( Map<String,String> values, Log log )\n+        private static void migratePolicies(Map<String, String> values, Log log)\n         {\n-            Map<String,String> valueCopy = new HashMap<>( values );\n-            Map<String,SslPolicyScope> oldNameToScope = new HashMap<>();\n-            valueCopy.forEach( ( setting, value ) -> {\n-                if ( settingScopeMap.containsKey( setting ) )\n+            Map<String, String> valueCopy = new HashMap<>(values);\n+            Map<String, SslPolicyScope> oldNameToScope = new HashMap<>();\n+            valueCopy.forEach((setting, value) -> {\n+                if (settingScopeMap.containsKey(setting))\n                 {\n-                    log.warn( \"Use of deprecated setting %s.\", setting );\n-                    SslPolicyScope scope = settingScopeMap.get( setting );\n-                    oldNameToScope.put( value, scope );\n-                    values.put( SslPolicyConfig.forScope( scope ).enabled.name(), Boolean.TRUE.toString() );\n-                    values.remove( setting );\n+                    log.warn(\"Use of deprecated setting %s.\", setting);\n+                    SslPolicyScope scope = settingScopeMap.get(setting);\n+                    oldNameToScope.put(value, scope);\n+                    values.put(SslPolicyConfig.forScope(scope).enabled.name(), Boolean.TRUE.toString());\n+                    values.remove(setting);\n                 }\n-            } );\n+            });\n \n-            valueCopy.forEach( ( setting, value ) -> {\n-                var matcher = pattern.matcher( setting );\n-                if ( matcher.find() )\n+            valueCopy.forEach((setting, value) -> {\n+                var matcher = pattern.matcher(setting);\n+                if (matcher.find())\n                 {\n-                    String groupName = matcher.group( 2 );\n-                    if ( oldNameToScope.containsKey( groupName ) )\n+                    String groupName = matcher.group(2);\n+                    if (oldNameToScope.containsKey(groupName))\n                     {\n-                        String newGroupName = oldNameToScope.get( groupName ).name().toLowerCase();\n-                        if ( !Objects.equals( groupName, newGroupName ) )\n+                        String newGroupName = oldNameToScope.get(groupName).name().toLowerCase();\n+                        if (!Objects.equals(groupName, newGroupName))\n                         {\n-                            String prefix = matcher.group( 1 );\n-                            String suffix = matcher.group( 3 );\n+                            String prefix = matcher.group(1);\n+                            String suffix = matcher.group(3);\n                             String newSetting = prefix + newGroupName + suffix;\n \n-                            log.warn( \"Use of deprecated setting %s. It is replaced by %s\", setting, newSetting );\n-                            values.remove( setting );\n-                            values.put( newSetting, value );\n+                            log.warn(\"Use of deprecated setting %s. It is replaced by %s\", setting, newSetting);\n+                            values.remove(setting);\n+                            values.put(newSetting, value);\n                         }\n                     }\n                 }\n-            } );\n+            });\n         }\n \n-        private static void warnUseOfLegacyPolicy( Map<String,String> values, Log log )\n+        private static void warnUseOfLegacyPolicy(Map<String, String> values, Log log)\n         {\n-            for ( String legacySetting : legacySettings )\n+            for (String legacySetting : legacySettings)\n             {\n-                if ( values.remove( legacySetting ) != null )\n+                if (values.remove(legacySetting) != null)\n                 {\n-                    log.warn( \"Use of deprecated setting %s. Legacy ssl policy is no longer supported.\", legacySetting );\n+                    log.warn(\"Use of deprecated setting %s. Legacy ssl policy is no longer supported.\", legacySetting);\n                 }\n             }\n         }\n@@ -290,25 +290,25 @@ public final class SettingMigrators\n     @ServiceProvider\n     public static class AllowKeyGenerationMigrator implements SettingMigrator\n     {\n-        private static final Pattern pattern = Pattern.compile( \"^dbms\\\\.ssl\\\\.policy\\\\.([^.]+)\\\\.allow_key_generation$\" );\n+        private static final Pattern pattern = Pattern.compile(\"^dbms\\\\.ssl\\\\.policy\\\\.([^.]+)\\\\.allow_key_generation$\");\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n             var toRemove = new HashSet<String>();\n \n-            for ( var setting : values.keySet() )\n+            for (var setting : values.keySet())\n             {\n-                var matcher = pattern.matcher( setting );\n-                if ( matcher.find() )\n+                var matcher = pattern.matcher(setting);\n+                if (matcher.find())\n                 {\n-                    log.warn( \"Setting %s is removed. A valid key and certificate are required\" +\n-                            \" to be present in the key and certificate path configured in this ssl policy.\", setting );\n-                    toRemove.add( setting );\n+                    log.warn(\"Setting %s is removed. A valid key and certificate are required\" +\n+                      \" to be present in the key and certificate path configured in this ssl policy.\", setting);\n+                    toRemove.add(setting);\n                 }\n             }\n \n-            values.keySet().removeAll( toRemove );\n+            values.keySet().removeAll(toRemove);\n         }\n     }\n \n@@ -318,9 +318,9 @@ public final class SettingMigrators\n         private static final String settingName = \"dbms.procedures.kill_query_verbose\";\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingRemoval( values, log, settingName, \"It's no longer possible to disable verbose kill query logging\" );\n+            migrateSettingRemoval(values, log, settingName, \"It's no longer possible to disable verbose kill query logging\");\n         }\n     }\n \n@@ -330,9 +330,9 @@ public final class SettingMigrators\n         private static final String settingName = \"unsupported.dbms.multi_threaded_schema_index_population_enabled\";\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingRemoval( values, log, settingName, \"It's no longer possible to disable multi-threaded index population\" );\n+            migrateSettingRemoval(values, log, settingName, \"It's no longer possible to disable multi-threaded index population\");\n         }\n     }\n \n@@ -343,18 +343,17 @@ public final class SettingMigrators\n         private static final String settingName = GraphDatabaseSettings.log_queries.name();\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            String value = values.get( settingName );\n-            if ( SettingValueParsers.TRUE.equalsIgnoreCase( value ) )\n+            String value = values.get(settingName);\n+            if (SettingValueParsers.TRUE.equalsIgnoreCase(value))\n             {\n-                log.warn( deprecationMessage, settingName, value, settingName, LogQueryLevel.INFO.name() );\n-                values.put( settingName, LogQueryLevel.INFO.name() );\n-            }\n-            else if ( SettingValueParsers.FALSE.equalsIgnoreCase( value ) )\n+                log.warn(deprecationMessage, settingName, value, settingName, LogQueryLevel.INFO.name());\n+                values.put(settingName, LogQueryLevel.INFO.name());\n+            } else if (SettingValueParsers.FALSE.equalsIgnoreCase(value))\n             {\n-                log.warn( deprecationMessage, settingName, value, settingName, LogQueryLevel.OFF.name() );\n-                values.put( settingName, LogQueryLevel.OFF.name() );\n+                log.warn(deprecationMessage, settingName, value, settingName, LogQueryLevel.OFF.name());\n+                values.put(settingName, LogQueryLevel.OFF.name());\n             }\n         }\n     }\n@@ -363,26 +362,25 @@ public final class SettingMigrators\n     public static class DatabaseMemoryMigrator implements SettingMigrator\n     {\n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingNameChange( values, log, \"dbms.tx_state.max_off_heap_memory\", tx_state_max_off_heap_memory );\n-            migrateSettingNameChange( values, log, \"dbms.tx_state.off_heap.max_cacheable_block_size\", tx_state_off_heap_max_cacheable_block_size );\n-            migrateSettingNameChange( values, log, \"dbms.tx_state.off_heap.block_cache_size\", tx_state_off_heap_block_cache_size );\n+            migrateSettingNameChange(values, log, \"dbms.tx_state.max_off_heap_memory\", tx_state_max_off_heap_memory);\n+            migrateSettingNameChange(values, log, \"dbms.tx_state.off_heap.max_cacheable_block_size\", tx_state_off_heap_max_cacheable_block_size);\n+            migrateSettingNameChange(values, log, \"dbms.tx_state.off_heap.block_cache_size\", tx_state_off_heap_block_cache_size);\n \n             // Migrate cypher.query_max_allocations to new setting, if new settings is not configured\n-            String maxAllocations = values.remove( \"cypher.query_max_allocations\" );\n-            if ( isNotBlank( maxAllocations ) )\n+            String maxAllocations = values.remove(\"cypher.query_max_allocations\");\n+            if (isNotBlank(maxAllocations))\n             {\n-                if ( !values.containsKey( memory_transaction_max_size.name() ) )\n+                if (!values.containsKey(memory_transaction_max_size.name()))\n                 {\n-                    log.warn( \"The setting cypher.query_max_allocations is removed and replaced by %s.\", memory_transaction_max_size.name() );\n-                    values.put( memory_transaction_max_size.name(), maxAllocations );\n-                }\n-                else\n+                    log.warn(\"The setting cypher.query_max_allocations is removed and replaced by %s.\", memory_transaction_max_size.name());\n+                    values.put(memory_transaction_max_size.name(), maxAllocations);\n+                } else\n                 {\n-                    log.warn( \"The setting cypher.query_max_allocations is removed and replaced by %s. Since both are set, %s will take \" +\n-                                    \"precedence and the value of cypher.query_max_allocations, %s, will be ignored.\",\n-                            memory_transaction_max_size.name(), memory_transaction_max_size.name(), maxAllocations );\n+                    log.warn(\"The setting cypher.query_max_allocations is removed and replaced by %s. Since both are set, %s will take \" +\n+                        \"precedence and the value of cypher.query_max_allocations, %s, will be ignored.\",\n+                      memory_transaction_max_size.name(), memory_transaction_max_size.name(), maxAllocations);\n                 }\n             }\n         }\n@@ -392,10 +390,10 @@ public final class SettingMigrators\n     public static class WhitelistSettingsMigrator implements SettingMigrator\n     {\n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingNameChange( values, log, \"dbms.memory.pagecache.warmup.preload.whitelist\", pagecache_warmup_prefetch_allowlist );\n-            migrateSettingNameChange( values, log, \"dbms.security.procedures.whitelist\", procedure_allowlist );\n+            migrateSettingNameChange(values, log, \"dbms.memory.pagecache.warmup.preload.whitelist\", pagecache_warmup_prefetch_allowlist);\n+            migrateSettingNameChange(values, log, \"dbms.security.procedures.whitelist\", procedure_allowlist);\n         }\n     }\n \n@@ -406,9 +404,9 @@ public final class SettingMigrators\n     public static class DatababaseMigrator implements SettingMigrator\n     {\n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingNameChange( values, log, \"dbms.memory.transaction.datababase_max_size\", memory_transaction_database_max_size );\n+            migrateSettingNameChange(values, log, \"dbms.memory.transaction.datababase_max_size\", memory_transaction_database_max_size);\n         }\n     }\n \n@@ -417,63 +415,60 @@ public final class SettingMigrators\n     {\n \n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n             final var refuseToBeLeader = \"causal_clustering.refuse_to_be_leader\";\n-            final var refuseToBeLeaderValue = values.get( refuseToBeLeader );\n-            if ( isNotBlank( refuseToBeLeaderValue ) )\n+            final var refuseToBeLeaderValue = values.get(refuseToBeLeader);\n+            if (isNotBlank(refuseToBeLeaderValue))\n             {\n-                log.warn( \"The setting \" + refuseToBeLeader + \" is deprecated. Use please %s as a replacement\", read_only_database_default.name() );\n+                log.warn(\"The setting \" + refuseToBeLeader + \" is deprecated. Use please %s as a replacement\", read_only_database_default.name());\n             }\n-            migrateSettingNameChange( values, log, refuseToBeLeader, read_only_database_default );\n+            migrateSettingNameChange(values, log, refuseToBeLeader, read_only_database_default);\n         }\n     }\n \n-    public static void migrateAdvertisedAddressInheritanceChange( Map<String,String> values, Map<String,String> defaultValues,\n-            Log log, String listenAddress, String advertisedAddress )\n+    public static void migrateAdvertisedAddressInheritanceChange(Map<String, String> values, Map<String, String> defaultValues,\n+                                                                 Log log, String listenAddress, String advertisedAddress)\n     {\n-        String listenValue = values.get( listenAddress );\n-        if ( isNotBlank( listenValue ) )\n+        String listenValue = values.get(listenAddress);\n+        if (isNotBlank(listenValue))\n         {\n-            String advertisedValue = values.get( advertisedAddress );\n+            String advertisedValue = values.get(advertisedAddress);\n             boolean advertisedAlreadyHasPort = false;\n             try\n             {\n-                if ( isNotBlank( advertisedValue ) )\n+                if (isNotBlank(advertisedValue))\n                 {\n-                    advertisedAlreadyHasPort = SOCKET_ADDRESS.parse( advertisedValue ).getPort() >= 0;\n+                    advertisedAlreadyHasPort = SOCKET_ADDRESS.parse(advertisedValue).getPort() >= 0;\n                 }\n-            }\n-            catch ( RuntimeException e )\n+            } catch (RuntimeException e)\n             {\n                 // If we cant parse the advertised address we act as if it has no port specified\n                 // If invalid hostname config will report the error\n             }\n \n-            if ( !advertisedAlreadyHasPort )\n+            if (!advertisedAlreadyHasPort)\n             {\n                 try\n                 {\n-                    int port = SOCKET_ADDRESS.parse( listenValue ).getPort();\n-                    if ( port >= 0 ) //valid port on listen, and none on advertised, migrate!\n+                    int port = SOCKET_ADDRESS.parse(listenValue).getPort();\n+                    if (port >= 0) //valid port on listen, and none on advertised, migrate!\n                     {\n-                        SocketAddress newAdvertised = new SocketAddress( advertisedValue, port );\n+                        SocketAddress newAdvertised = new SocketAddress(advertisedValue, port);\n                         String msg = \"Note that since you did not explicitly set the port in %s Neo4j automatically set it to %s to match %s.\" +\n-                                \" This behavior may change in the future and we recommend you to explicitly set it.\";\n-                        if ( isNotBlank( advertisedValue ) )\n+                          \" This behavior may change in the future and we recommend you to explicitly set it.\";\n+                        if (isNotBlank(advertisedValue))\n                         {\n                             //If advertised has an address set (not inherited or default value we treat this as a warning, since is is likely to be used.\n-                            log.warn( msg, advertisedAddress, port, listenAddress );\n-                        }\n-                        else\n+                            log.warn(msg, advertisedAddress, port, listenAddress);\n+                        } else\n                         {\n                             //No value was set, likely the user does not care or won't use this. Just provide the info\n-                            log.info( msg, advertisedAddress, port, listenAddress );\n+                            log.info(msg, advertisedAddress, port, listenAddress);\n                         }\n-                        defaultValues.put( advertisedAddress, newAdvertised.toString() );\n+                        defaultValues.put(advertisedAddress, newAdvertised.toString());\n                     }\n-                }\n-                catch ( RuntimeException e )\n+                } catch (RuntimeException e)\n                 {\n                     //If we cant parse the listen address we have no information on how to proceed with the migration\n                     // The config will handle the error later\n@@ -486,30 +481,30 @@ public final class SettingMigrators\n     public static class ConsistencyCheckerSettingsMigrator implements SettingMigrator\n     {\n         @Override\n-        public void migrate( Map<String,String> values, Map<String,String> defaultValues, Log log )\n+        public void migrate(Map<String, String> values, Map<String, String> defaultValues, Log log)\n         {\n-            migrateSettingRemoval( values, log, \"unsupported.consistency_checker.experimental\",\n-                    \"There is no longer multiple different consistency checkers to choose from\" );\n-            migrateSettingNameChange( values, log, \"unsupported.consistency_checker.experimental.fail_fast\", consistency_checker_fail_fast_threshold );\n+            migrateSettingRemoval(values, log, \"unsupported.consistency_checker.experimental\",\n+              \"There is no longer multiple different consistency checkers to choose from\");\n+            migrateSettingNameChange(values, log, \"unsupported.consistency_checker.experimental.fail_fast\", consistency_checker_fail_fast_threshold);\n         }\n     }\n \n-    public static void migrateSettingNameChange( Map<String,String> values, Log log, String oldSetting, Setting<?> newSetting )\n+    public static void migrateSettingNameChange(Map<String, String> values, Log log, String oldSetting, Setting<?> newSetting)\n     {\n-        String value = values.remove( oldSetting );\n-        if ( isNotBlank( value ) )\n+        String value = values.remove(oldSetting);\n+        if (isNotBlank(value))\n         {\n-            log.warn( \"Use of deprecated setting %s. It is replaced by %s\", oldSetting, newSetting.name() );\n-            values.putIfAbsent( newSetting.name(), value );\n+            log.warn(\"Use of deprecated setting %s. It is replaced by %s\", oldSetting, newSetting.name());\n+            values.putIfAbsent(newSetting.name(), value);\n         }\n     }\n \n-    public static void migrateSettingRemoval( Map<String,String> values, Log log, String name, String additionalDescription )\n+    public static void migrateSettingRemoval(Map<String, String> values, Log log, String name, String additionalDescription)\n     {\n-        if ( values.containsKey( name ) )\n+        if (values.containsKey(name))\n         {\n-            log.warn( \"Setting %s is removed. %s.\", name, additionalDescription );\n-            values.remove( name );\n+            log.warn(\"Setting %s is removed. %s.\", name, additionalDescription);\n+            values.remove(name);\n         }\n     }\n }\n",
            "diff_size": 192
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3356",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3356/AdminCommandSection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3356/AdminCommandSection.java\nindex 6e0e3258db7..9277f46e519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3356/AdminCommandSection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3356/AdminCommandSection.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.util.Comparator;\n@@ -26,44 +27,44 @@ import javax.annotation.Nonnull;\n \n public abstract class AdminCommandSection\n {\n-    private static final AdminCommandSection GENERAL = new GeneralSection();\n+  private static final AdminCommandSection GENERAL = new GeneralSection();\n \n-    @Nonnull\n-    public abstract String printable();\n+  @Nonnull\n+  public abstract String printable();\n \n-    public static AdminCommandSection general()\n-    {\n-        return GENERAL;\n-    }\n+  public static AdminCommandSection general()\n+  {\n+    return GENERAL;\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return this.printable().hashCode();\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return this.printable().hashCode();\n+  }\n \n-    @Override\n-    public boolean equals( Object other )\n-    {\n-        return other instanceof AdminCommandSection &&\n-                this.printable().equals( ((AdminCommandSection) other).printable() );\n-    }\n+  @Override\n+  public boolean equals(Object other)\n+  {\n+    return other instanceof AdminCommandSection &&\n+        this.printable().equals(((AdminCommandSection) other).printable());\n+  }\n \n-    public final void printAllCommandsUnderSection( Consumer<String> output, List<AdminCommand.Provider> providers )\n-    {\n-        output.accept( \"\" );\n-        output.accept( printable() );\n-        providers.sort( Comparator.comparing( AdminCommand.Provider::name ) );\n-        providers.forEach( provider -> provider.printSummary( s -> output.accept( \"    \" + s ) ) );\n-    }\n+  public final void printAllCommandsUnderSection(Consumer<String> output, List<AdminCommand.Provider> providers)\n+  {\n+    output.accept(\"\");\n+    output.accept(printable());\n+    providers.sort(Comparator.comparing(AdminCommand.Provider::name));\n+    providers.forEach(provider -> provider.printSummary(s -> output.accept(\"    \" + s)));\n+  }\n \n-    static class GeneralSection extends AdminCommandSection\n+  static class GeneralSection extends AdminCommandSection\n+  {\n+    @Override\n+    @Nonnull\n+    public String printable()\n     {\n-        @Override\n-        @Nonnull\n-        public String printable()\n-        {\n-            return \"General\";\n-        }\n+      return \"General\";\n     }\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3356/AdminCommandSection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3356/AdminCommandSection.java\nindex 6e0e3258db7..b0b884fbb64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3356/AdminCommandSection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3356/AdminCommandSection.java\n@@ -45,8 +45,7 @@ public abstract class AdminCommandSection\n     @Override\n     public boolean equals( Object other )\n     {\n-        return other instanceof AdminCommandSection &&\n-                this.printable().equals( ((AdminCommandSection) other).printable() );\n+        return other instanceof AdminCommandSection && this.printable().equals( ((AdminCommandSection) other).printable() );\n     }\n \n     public final void printAllCommandsUnderSection( Consumer<String> output, List<AdminCommand.Provider> providers )\n@@ -66,4 +65,4 @@ public abstract class AdminCommandSection\n             return \"General\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
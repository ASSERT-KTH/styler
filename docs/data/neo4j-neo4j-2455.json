{
    "project_name": "neo4j-neo4j",
    "error_id": "2455",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2455/Neo4jJsonLogLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2455/Neo4jJsonLogLayout.java\nindex eec1b86327a..e65ae3cff3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2455/Neo4jJsonLogLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2455/Neo4jJsonLogLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging.log4j;\n \n import org.apache.logging.log4j.core.Layout;\n@@ -34,7 +35,7 @@ import org.apache.logging.log4j.util.StringBuilderFormattable;\n \n import static org.apache.logging.log4j.util.StringBuilders.escapeJson;\n \n-@Plugin( name = \"Neo4jJsonLogLayout\", category = Node.CATEGORY, elementType = Layout.ELEMENT_TYPE, printObject = true )\n+@Plugin(name = \"Neo4jJsonLogLayout\", category = Node.CATEGORY, elementType = Layout.ELEMENT_TYPE, printObject = true)\n public class Neo4jJsonLogLayout extends Neo4jLogLayout\n {\n     private final DatePatternConverter datePatternConverter;\n@@ -42,71 +43,69 @@ public class Neo4jJsonLogLayout extends Neo4jLogLayout\n     private final NameAbbreviator abbreviator;\n     private final boolean includeCategory;\n \n-    protected Neo4jJsonLogLayout( String datePattern, String timeZone, boolean includeCategory, DefaultConfiguration config )\n+    protected Neo4jJsonLogLayout(String datePattern, String timeZone, boolean includeCategory, DefaultConfiguration config)\n     {\n-        super( \"\", config );\n+        super(\"\", config);\n         this.includeCategory = includeCategory;\n-        datePatternConverter = DatePatternConverter.newInstance( new String[]{datePattern, timeZone} );\n-        throwablePatternConverter = ThrowablePatternConverter.newInstance( config, null );\n-        abbreviator = NameAbbreviator.getAbbreviator( \"1.\" );\n+        datePatternConverter = DatePatternConverter.newInstance(new String[] {datePattern, timeZone});\n+        throwablePatternConverter = ThrowablePatternConverter.newInstance(config, null);\n+        abbreviator = NameAbbreviator.getAbbreviator(\"1.\");\n     }\n \n     @PluginFactory\n     public static Neo4jJsonLogLayout createLayout(\n-            @PluginAttribute( \"datePattern\" ) String datePattern,\n-            @PluginAttribute( \"timeZone\" ) String timeZone,\n-            @PluginAttribute( value = \"includeCategory\", defaultBoolean = true ) boolean includeCategory )\n+      @PluginAttribute(\"datePattern\") String datePattern,\n+      @PluginAttribute(\"timeZone\") String timeZone,\n+      @PluginAttribute(value = \"includeCategory\", defaultBoolean = true) boolean includeCategory)\n     {\n-        return new Neo4jJsonLogLayout( datePattern, timeZone, includeCategory, new DefaultConfiguration() );\n+        return new Neo4jJsonLogLayout(datePattern, timeZone, includeCategory, new DefaultConfiguration());\n     }\n \n     @Override\n-    public String toSerializable( LogEvent event )\n+    public String toSerializable(LogEvent event)\n     {\n-        StringBuilder buffer = new StringBuilder( 128 );\n-        buffer.append( \"{\\\"time\\\":\\\"\" );\n-        datePatternConverter.format( event, buffer );\n-        buffer.append( \"\\\",\\\"level\\\":\\\"\" );\n-        buffer.append( event.getLevel().toString() );\n-        buffer.append( '\"' );\n-        if ( includeCategory )\n+        StringBuilder buffer = new StringBuilder(128);\n+        buffer.append(\"{\\\"time\\\":\\\"\");\n+        datePatternConverter.format(event, buffer);\n+        buffer.append(\"\\\",\\\"level\\\":\\\"\");\n+        buffer.append(event.getLevel().toString());\n+        buffer.append('\"');\n+        if (includeCategory)\n         {\n-            buffer.append( \",\\\"category\\\":\\\"\" );\n-            abbreviator.abbreviate( event.getLoggerName(), buffer );\n-            buffer.append( '\"' );\n+            buffer.append(\",\\\"category\\\":\\\"\");\n+            abbreviator.abbreviate(event.getLoggerName(), buffer);\n+            buffer.append('\"');\n         }\n \n         Message message = event.getMessage();\n-        if ( message instanceof StructureAwareMessage )\n+        if (message instanceof StructureAwareMessage)\n         {\n             StructureAwareMessage msg = (StructureAwareMessage) message;\n-            msg.asStructure( new JsonFieldConsumer( buffer ) );\n-        }\n-        else  // Normal message\n+            msg.asStructure(new JsonFieldConsumer(buffer));\n+        } else  // Normal message\n         {\n-            buffer.append( \",\\\"message\\\":\\\"\" );\n+            buffer.append(\",\\\"message\\\":\\\"\");\n             final int start = buffer.length();\n-            if ( message instanceof StringBuilderFormattable )\n+            if (message instanceof StringBuilderFormattable)\n             {\n-                ((StringBuilderFormattable) message).formatTo( buffer ); // Garbage-free optimized message\n-            }\n-            else\n+                ((StringBuilderFormattable) message).formatTo(buffer); // Garbage-free optimized message\n+            } else\n             {\n-                buffer.append( message.getFormattedMessage() );\n+                buffer.append(message.getFormattedMessage());\n             }\n-            escapeJson( buffer, start );\n-            buffer.append( '\"' );\n+            escapeJson(buffer, start);\n+            buffer.append('\"');\n         }\n \n-        if ( event.getThrown() != null )\n+        if (event.getThrown() != null)\n         {\n-            buffer.append( \",\\\"stacktrace\\\":\\\"\" );\n+            buffer.append(\",\\\"stacktrace\\\":\\\"\");\n             int start = buffer.length();\n-            throwablePatternConverter.format( event, buffer );\n-            escapeJson( buffer, start );\n-            buffer.append( '\"' );\n+            throwablePatternConverter.format(event, buffer);\n+            escapeJson(buffer, start);\n+            buffer.append('\"');\n         }\n-        buffer.append( '}' ).append( System.lineSeparator() );\n+        buffer.append('}').append(System.lineSeparator());\n         return buffer.toString();\n     }\n \n@@ -114,37 +113,37 @@ public class Neo4jJsonLogLayout extends Neo4jLogLayout\n     {\n         private final StringBuilder buffer;\n \n-        private JsonFieldConsumer( StringBuilder buffer )\n+        private JsonFieldConsumer(StringBuilder buffer)\n         {\n             this.buffer = buffer;\n         }\n \n         @Override\n-        public void add( String field, String value )\n+        public void add(String field, String value)\n         {\n-            addField( buffer, field );\n-            formatString( buffer, value );\n+            addField(buffer, field);\n+            formatString(buffer, value);\n         }\n \n         @Override\n-        public void add( String field, long value )\n+        public void add(String field, long value)\n         {\n-            addField( buffer, field );\n-            buffer.append( value );\n+            addField(buffer, field);\n+            buffer.append(value);\n         }\n \n-        private static void addField( StringBuilder buffer, String field )\n+        private static void addField(StringBuilder buffer, String field)\n         {\n-            buffer.append( \",\\\"\" ).append( field ).append( \"\\\":\" );\n+            buffer.append(\",\\\"\").append(field).append(\"\\\":\");\n         }\n \n-        private static void formatString( StringBuilder buffer, Object value )\n+        private static void formatString(StringBuilder buffer, Object value)\n         {\n-            buffer.append( '\"' );\n+            buffer.append('\"');\n             int startIndex = buffer.length();\n-            buffer.append( value );\n-            escapeJson( buffer, startIndex );\n-            buffer.append( '\"' );\n+            buffer.append(value);\n+            escapeJson(buffer, startIndex);\n+            buffer.append('\"');\n         }\n     }\n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2455/Neo4jJsonLogLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2455/Neo4jJsonLogLayout.java\nindex eec1b86327a..ff0ba9d96c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2455/Neo4jJsonLogLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2455/Neo4jJsonLogLayout.java\n@@ -147,4 +147,4 @@ public class Neo4jJsonLogLayout extends Neo4jLogLayout\n             buffer.append( '\"' );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
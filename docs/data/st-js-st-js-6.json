{
    "project_name": "st-js-st-js",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "31",
                "column": "122",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\tprivate final List<ClassWithJavascript> dependencies;\n\n\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n\t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n\t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n\t\tstjsClass = classResolver.resolve(testClass.getName());",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/6/TestClassAttributes.java\nindex 27a188c36e0..e0a4719ee8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/6/TestClassAttributes.java\n@@ -28,7 +28,7 @@ public class TestClassAttributes {\n \tprivate final ClassWithJavascript stjsClass;\n \tprivate final List<ClassWithJavascript> dependencies;\n \n-\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n+\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector) {\n \t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n \t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n \t\tstjsClass = classResolver.resolve(testClass.getName());\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/6/TestClassAttributes.java\nindex 27a188c36e0..089466b3bf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/6/TestClassAttributes.java\n@@ -16,61 +16,61 @@ import org.stjs.testing.annotation.ScriptsBefore;\n \n public class TestClassAttributes {\n \n-\tprivate final List<FrameworkMethod> beforeMethods;\n-\tprivate final List<FrameworkMethod> afterMethods;\n+    private final List<FrameworkMethod> beforeMethods;\n+    private final List<FrameworkMethod> afterMethods;\n \n-\tprivate final HTMLFixture htmlFixture;\n+    private final HTMLFixture htmlFixture;\n \n-\tprivate final Scripts scripts;\n-\tprivate final ScriptsBefore scriptsBefore;\n-\tprivate final ScriptsAfter scriptsAfter;\n+    private final Scripts scripts;\n+    private final ScriptsBefore scriptsBefore;\n+    private final ScriptsAfter scriptsAfter;\n \n-\tprivate final ClassWithJavascript stjsClass;\n-\tprivate final List<ClassWithJavascript> dependencies;\n+    private final ClassWithJavascript stjsClass;\n+    private final List<ClassWithJavascript> dependencies;\n \n-\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n-\t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n-\t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n-\t\tstjsClass = classResolver.resolve(testClass.getName());\n+    public TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector) {\n+        beforeMethods = testClass.getAnnotatedMethods(Before.class);\n+        afterMethods = testClass.getAnnotatedMethods(After.class);\n+        stjsClass = classResolver.resolve(testClass.getName());\n \n-\t\thtmlFixture = testClass.getJavaClass().getAnnotation(HTMLFixture.class);\n+        htmlFixture = testClass.getJavaClass().getAnnotation(HTMLFixture.class);\n \n-\t\tscripts = testClass.getJavaClass().getAnnotation(Scripts.class);\n-\t\tscriptsBefore = testClass.getJavaClass().getAnnotation(ScriptsBefore.class);\n-\t\tscriptsAfter = testClass.getJavaClass().getAnnotation(ScriptsAfter.class);\n+        scripts = testClass.getJavaClass().getAnnotation(Scripts.class);\n+        scriptsBefore = testClass.getJavaClass().getAnnotation(ScriptsBefore.class);\n+        scriptsAfter = testClass.getJavaClass().getAnnotation(ScriptsAfter.class);\n \n-\t\tdependencies = dependencyCollector.orderAllDependencies(stjsClass);\n-\t}\n+        dependencies = dependencyCollector.orderAllDependencies(stjsClass);\n+    }\n \n-\tpublic Scripts getScripts() {\n-\t\treturn scripts;\n-\t}\n+    public Scripts getScripts() {\n+        return scripts;\n+    }\n \n-\tpublic ScriptsAfter getScriptsAfter() {\n-\t\treturn scriptsAfter;\n-\t}\n+    public ScriptsAfter getScriptsAfter() {\n+        return scriptsAfter;\n+    }\n \n-\tpublic ScriptsBefore getScriptsBefore() {\n-\t\treturn scriptsBefore;\n-\t}\n+    public ScriptsBefore getScriptsBefore() {\n+        return scriptsBefore;\n+    }\n \n-\tpublic List<FrameworkMethod> getAfterMethods() {\n-\t\treturn afterMethods;\n-\t}\n+    public List<FrameworkMethod> getAfterMethods() {\n+        return afterMethods;\n+    }\n \n-\tpublic List<FrameworkMethod> getBeforeMethods() {\n-\t\treturn beforeMethods;\n-\t}\n+    public List<FrameworkMethod> getBeforeMethods() {\n+        return beforeMethods;\n+    }\n \n-\tpublic List<ClassWithJavascript> getDependencies() {\n-\t\treturn dependencies;\n-\t}\n+    public List<ClassWithJavascript> getDependencies() {\n+        return dependencies;\n+    }\n \n-\tpublic HTMLFixture getHtmlFixture() {\n-\t\treturn htmlFixture;\n-\t}\n+    public HTMLFixture getHtmlFixture() {\n+        return htmlFixture;\n+    }\n \n-\tpublic ClassWithJavascript getStjsClass() {\n-\t\treturn stjsClass;\n-\t}\n+    public ClassWithJavascript getStjsClass() {\n+        return stjsClass;\n+    }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/6/TestClassAttributes.java\nindex 27a188c36e0..69a8fef4ac0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/6/TestClassAttributes.java\n@@ -28,7 +28,7 @@ public class TestClassAttributes {\n \tprivate final ClassWithJavascript stjsClass;\n \tprivate final List<ClassWithJavascript> dependencies;\n \n-\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n+\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector) {\n \t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n \t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n \t\tstjsClass = classResolver.resolve(testClass.getName());\n@@ -73,4 +73,4 @@ public class TestClassAttributes {\n \tpublic ClassWithJavascript getStjsClass() {\n \t\treturn stjsClass;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/6/TestClassAttributes.java\nindex 27a188c36e0..882c23ef3ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/6/TestClassAttributes.java\n@@ -1,7 +1,6 @@\n package org.stjs.testing.driver;\n \n import java.util.List;\n-\n import org.junit.After;\n import org.junit.Before;\n import org.junit.runners.model.FrameworkMethod;\n@@ -14,63 +13,57 @@ import org.stjs.testing.annotation.Scripts;\n import org.stjs.testing.annotation.ScriptsAfter;\n import org.stjs.testing.annotation.ScriptsBefore;\n \n-public class TestClassAttributes {\n-\n-\tprivate final List<FrameworkMethod> beforeMethods;\n-\tprivate final List<FrameworkMethod> afterMethods;\n-\n-\tprivate final HTMLFixture htmlFixture;\n-\n-\tprivate final Scripts scripts;\n-\tprivate final ScriptsBefore scriptsBefore;\n-\tprivate final ScriptsAfter scriptsAfter;\n-\n-\tprivate final ClassWithJavascript stjsClass;\n-\tprivate final List<ClassWithJavascript> dependencies;\n-\n-\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n-\t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n-\t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n-\t\tstjsClass = classResolver.resolve(testClass.getName());\n-\n-\t\thtmlFixture = testClass.getJavaClass().getAnnotation(HTMLFixture.class);\n-\n-\t\tscripts = testClass.getJavaClass().getAnnotation(Scripts.class);\n-\t\tscriptsBefore = testClass.getJavaClass().getAnnotation(ScriptsBefore.class);\n-\t\tscriptsAfter = testClass.getJavaClass().getAnnotation(ScriptsAfter.class);\n \n-\t\tdependencies = dependencyCollector.orderAllDependencies(stjsClass);\n-\t}\n-\n-\tpublic Scripts getScripts() {\n-\t\treturn scripts;\n-\t}\n-\n-\tpublic ScriptsAfter getScriptsAfter() {\n-\t\treturn scriptsAfter;\n-\t}\n-\n-\tpublic ScriptsBefore getScriptsBefore() {\n-\t\treturn scriptsBefore;\n-\t}\n-\n-\tpublic List<FrameworkMethod> getAfterMethods() {\n-\t\treturn afterMethods;\n-\t}\n-\n-\tpublic List<FrameworkMethod> getBeforeMethods() {\n-\t\treturn beforeMethods;\n-\t}\n-\n-\tpublic List<ClassWithJavascript> getDependencies() {\n-\t\treturn dependencies;\n-\t}\n-\n-\tpublic HTMLFixture getHtmlFixture() {\n-\t\treturn htmlFixture;\n-\t}\n-\n-\tpublic ClassWithJavascript getStjsClass() {\n-\t\treturn stjsClass;\n-\t}\n-}\n+public class TestClassAttributes {\n+ private final List<FrameworkMethod> beforeMethods;\n+ private final List<FrameworkMethod> afterMethods;\n+ private final HTMLFixture htmlFixture;\n+ private final Scripts scripts;\n+ private final ScriptsBefore scriptsBefore;\n+ private final ScriptsAfter scriptsAfter;\n+ private final ClassWithJavascript stjsClass;\n+ private final List<ClassWithJavascript> dependencies;\n+\n+ public TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector) {\n+  beforeMethods = testClass.getAnnotatedMethods(Before.class);\n+  afterMethods = testClass.getAnnotatedMethods(After.class);\n+  stjsClass = classResolver.resolve(testClass.getName());\n+  htmlFixture = testClass.getJavaClass().getAnnotation(HTMLFixture.class);\n+  scripts = testClass.getJavaClass().getAnnotation(Scripts.class);\n+  scriptsBefore = testClass.getJavaClass().getAnnotation(ScriptsBefore.class);\n+  scriptsAfter = testClass.getJavaClass().getAnnotation(ScriptsAfter.class);\n+  dependencies = dependencyCollector.orderAllDependencies(stjsClass);\n+ }\n+\n+ public Scripts getScripts() {\n+  return scripts;\n+ }\n+\n+ public ScriptsAfter getScriptsAfter() {\n+  return scriptsAfter;\n+ }\n+\n+ public ScriptsBefore getScriptsBefore() {\n+  return scriptsBefore;\n+ }\n+\n+ public List<FrameworkMethod> getAfterMethods() {\n+  return afterMethods;\n+ }\n+\n+ public List<FrameworkMethod> getBeforeMethods() {\n+  return beforeMethods;\n+ }\n+\n+ public List<ClassWithJavascript> getDependencies() {\n+  return dependencies;\n+ }\n+\n+ public HTMLFixture getHtmlFixture() {\n+  return htmlFixture;\n+ }\n+\n+ public ClassWithJavascript getStjsClass() {\n+  return stjsClass;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 78
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/6/TestClassAttributes.java\nindex 27a188c36e0..e0a4719ee8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/6/TestClassAttributes.java\n@@ -28,7 +28,7 @@ public class TestClassAttributes {\n \tprivate final ClassWithJavascript stjsClass;\n \tprivate final List<ClassWithJavascript> dependencies;\n \n-\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n+\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector) {\n \t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n \t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n \t\tstjsClass = classResolver.resolve(testClass.getName());\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/6/TestClassAttributes.java\nindex 27a188c36e0..e0a4719ee8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/6/TestClassAttributes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/6/TestClassAttributes.java\n@@ -28,7 +28,7 @@ public class TestClassAttributes {\n \tprivate final ClassWithJavascript stjsClass;\n \tprivate final List<ClassWithJavascript> dependencies;\n \n-\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector){\n+\tpublic TestClassAttributes(TestClass testClass, ClassResolver classResolver, DependencyCollector dependencyCollector) {\n \t\tbeforeMethods = testClass.getAnnotatedMethods(Before.class);\n \t\tafterMethods = testClass.getAnnotatedMethods(After.class);\n \t\tstjsClass = classResolver.resolve(testClass.getName());\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
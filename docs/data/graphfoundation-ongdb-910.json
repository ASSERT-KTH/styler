{
    "project_name": "graphfoundation-ongdb",
    "error_id": "910",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/910/MultiPaxosContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/910/MultiPaxosContext.java\nindex b6e6738c860..e2491c8997e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/910/MultiPaxosContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/910/MultiPaxosContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context;\n \n import java.util.concurrent.Executor;\n@@ -48,196 +49,198 @@ import org.neo4j.logging.LogProvider;\n  */\n public class MultiPaxosContext\n {\n-    private final ClusterContextImpl clusterContext;\n-    private final ProposerContextImpl proposerContext;\n-    private final AcceptorContextImpl acceptorContext;\n-    private final LearnerContextImpl learnerContext;\n-    private final HeartbeatContextImpl heartbeatContext;\n-    private final ElectionContextImpl electionContext;\n-    private final AtomicBroadcastContextImpl atomicBroadcastContext;\n-    private final CommonContextState commonState;\n-    private final PaxosInstanceStore paxosInstances;\n-\n-    public MultiPaxosContext( InstanceId me,\n-                              Iterable<ElectionRole> roles,\n-                              ClusterConfiguration configuration,\n-                              Executor executor,\n-                              LogProvider logging,\n-                              ObjectInputStreamFactory objectInputStreamFactory,\n-                              ObjectOutputStreamFactory objectOutputStreamFactory,\n-                              AcceptorInstanceStore instanceStore,\n-                              Timeouts timeouts,\n-                              ElectionCredentialsProvider electionCredentialsProvider,\n-                              Config config )\n+  private final ClusterContextImpl clusterContext;\n+  private final ProposerContextImpl proposerContext;\n+  private final AcceptorContextImpl acceptorContext;\n+  private final LearnerContextImpl learnerContext;\n+  private final HeartbeatContextImpl heartbeatContext;\n+  private final ElectionContextImpl electionContext;\n+  private final AtomicBroadcastContextImpl atomicBroadcastContext;\n+  private final CommonContextState commonState;\n+  private final PaxosInstanceStore paxosInstances;\n+\n+  public MultiPaxosContext(InstanceId me,\n+                           Iterable<ElectionRole> roles,\n+                           ClusterConfiguration configuration,\n+                           Executor executor,\n+                           LogProvider logging,\n+                           ObjectInputStreamFactory objectInputStreamFactory,\n+                           ObjectOutputStreamFactory objectOutputStreamFactory,\n+                           AcceptorInstanceStore instanceStore,\n+                           Timeouts timeouts,\n+                           ElectionCredentialsProvider electionCredentialsProvider,\n+                           Config config)\n+  {\n+    commonState = new CommonContextState(configuration, config.get(ClusterSettings.max_acceptors));\n+    paxosInstances = new PaxosInstanceStore();\n+\n+    heartbeatContext = new HeartbeatContextImpl(me, commonState, logging, timeouts, executor);\n+    learnerContext = new LearnerContextImpl(me, commonState, logging, timeouts, paxosInstances, instanceStore,\n+        objectInputStreamFactory, objectOutputStreamFactory, heartbeatContext);\n+    clusterContext = new ClusterContextImpl(me, commonState, logging, timeouts, executor, objectOutputStreamFactory,\n+        objectInputStreamFactory, learnerContext, heartbeatContext, config);\n+    electionContext = new ElectionContextImpl(me, commonState, logging, timeouts, roles, clusterContext, heartbeatContext,\n+        electionCredentialsProvider);\n+    proposerContext = new ProposerContextImpl(me, commonState, logging, timeouts, paxosInstances, heartbeatContext);\n+    acceptorContext = new AcceptorContextImpl(me, commonState, logging, timeouts, instanceStore);\n+    atomicBroadcastContext = new AtomicBroadcastContextImpl(me, commonState, logging, timeouts, executor, heartbeatContext);\n+\n+    heartbeatContext.setCircularDependencies(clusterContext, learnerContext);\n+  }\n+\n+  private MultiPaxosContext(ProposerContextImpl proposerContext, AcceptorContextImpl acceptorContext,\n+                            LearnerContextImpl learnerContext, HeartbeatContextImpl heartbeatContext,\n+                            ElectionContextImpl electionContext, AtomicBroadcastContextImpl atomicBroadcastContext,\n+                            CommonContextState commonState, PaxosInstanceStore paxosInstances,\n+                            ClusterContextImpl clusterContext)\n+  {\n+    this.clusterContext = clusterContext;\n+    this.proposerContext = proposerContext;\n+    this.acceptorContext = acceptorContext;\n+    this.learnerContext = learnerContext;\n+    this.heartbeatContext = heartbeatContext;\n+    this.electionContext = electionContext;\n+    this.atomicBroadcastContext = atomicBroadcastContext;\n+    this.commonState = commonState;\n+    this.paxosInstances = paxosInstances;\n+  }\n+\n+  public ClusterContext getClusterContext()\n+  {\n+    return clusterContext;\n+  }\n+\n+  public ProposerContext getProposerContext()\n+  {\n+    return proposerContext;\n+  }\n+\n+  public AcceptorContext getAcceptorContext()\n+  {\n+    return acceptorContext;\n+  }\n+\n+  public LearnerContext getLearnerContext()\n+  {\n+    return learnerContext;\n+  }\n+\n+  public HeartbeatContext getHeartbeatContext()\n+  {\n+    return heartbeatContext;\n+  }\n+\n+  public ElectionContext getElectionContext()\n+  {\n+    return electionContext;\n+  }\n+\n+  public AtomicBroadcastContextImpl getAtomicBroadcastContext()\n+  {\n+    return atomicBroadcastContext;\n+  }\n+\n+  /**\n+   * Create a state snapshot. The snapshot will not duplicate services, and expects the caller to duplicate\n+   * {@link AcceptorInstanceStore}, since that is externally provided.\n+   */\n+  public MultiPaxosContext snapshot(LogProvider logging, Timeouts timeouts, Executor executor,\n+                                    AcceptorInstanceStore instanceStore,\n+                                    ObjectInputStreamFactory objectInputStreamFactory,\n+                                    ObjectOutputStreamFactory objectOutputStreamFactory,\n+                                    ElectionCredentialsProvider electionCredentialsProvider)\n+  {\n+    CommonContextState commonStateSnapshot = commonState.snapshot(logging.getLog(ClusterConfiguration.class));\n+    PaxosInstanceStore paxosInstancesSnapshot = paxosInstances.snapshot();\n+\n+    HeartbeatContextImpl snapshotHeartbeatContext =\n+        heartbeatContext.snapshot(commonStateSnapshot, logging, timeouts, executor);\n+    LearnerContextImpl snapshotLearnerContext =\n+        learnerContext.snapshot(commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, instanceStore,\n+            objectInputStreamFactory, objectOutputStreamFactory, snapshotHeartbeatContext);\n+    ClusterContextImpl snapshotClusterContext =\n+        clusterContext.snapshot(commonStateSnapshot, logging, timeouts, executor, objectOutputStreamFactory,\n+            objectInputStreamFactory, snapshotLearnerContext, snapshotHeartbeatContext);\n+    ElectionContextImpl snapshotElectionContext =\n+        electionContext.snapshot(commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n+            snapshotHeartbeatContext, electionCredentialsProvider);\n+    ProposerContextImpl snapshotProposerContext =\n+        proposerContext.snapshot(commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, heartbeatContext);\n+    AcceptorContextImpl snapshotAcceptorContext =\n+        acceptorContext.snapshot(commonStateSnapshot, logging, timeouts, instanceStore);\n+    AtomicBroadcastContextImpl snapshotAtomicBroadcastContext =\n+        atomicBroadcastContext.snapshot(commonStateSnapshot, logging, timeouts, executor, snapshotHeartbeatContext);\n+\n+    snapshotHeartbeatContext.setCircularDependencies(snapshotClusterContext, snapshotLearnerContext);\n+\n+    return new MultiPaxosContext(snapshotProposerContext, snapshotAcceptorContext, snapshotLearnerContext,\n+        snapshotHeartbeatContext, snapshotElectionContext, snapshotAtomicBroadcastContext, commonStateSnapshot,\n+        paxosInstancesSnapshot, snapshotClusterContext\n+\n+    );\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        commonState = new CommonContextState( configuration, config.get( ClusterSettings.max_acceptors ) );\n-        paxosInstances = new PaxosInstanceStore();\n-\n-        heartbeatContext = new HeartbeatContextImpl( me, commonState, logging, timeouts, executor );\n-        learnerContext = new LearnerContextImpl( me, commonState, logging, timeouts, paxosInstances, instanceStore,\n-                objectInputStreamFactory, objectOutputStreamFactory, heartbeatContext );\n-        clusterContext = new ClusterContextImpl( me, commonState, logging, timeouts, executor, objectOutputStreamFactory,\n-                        objectInputStreamFactory, learnerContext, heartbeatContext, config );\n-        electionContext = new ElectionContextImpl( me, commonState, logging, timeouts, roles, clusterContext, heartbeatContext,\n-                        electionCredentialsProvider );\n-        proposerContext = new ProposerContextImpl( me, commonState, logging, timeouts, paxosInstances, heartbeatContext );\n-        acceptorContext = new AcceptorContextImpl( me, commonState, logging, timeouts, instanceStore );\n-        atomicBroadcastContext = new AtomicBroadcastContextImpl( me, commonState, logging, timeouts, executor, heartbeatContext );\n-\n-        heartbeatContext.setCircularDependencies( clusterContext, learnerContext );\n+      return true;\n     }\n-\n-    private MultiPaxosContext( ProposerContextImpl proposerContext, AcceptorContextImpl acceptorContext,\n-                               LearnerContextImpl learnerContext, HeartbeatContextImpl heartbeatContext,\n-                               ElectionContextImpl electionContext, AtomicBroadcastContextImpl atomicBroadcastContext,\n-                               CommonContextState commonState, PaxosInstanceStore paxosInstances,\n-                               ClusterContextImpl clusterContext )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        this.clusterContext = clusterContext;\n-        this.proposerContext = proposerContext;\n-        this.acceptorContext = acceptorContext;\n-        this.learnerContext = learnerContext;\n-        this.heartbeatContext = heartbeatContext;\n-        this.electionContext = electionContext;\n-        this.atomicBroadcastContext = atomicBroadcastContext;\n-        this.commonState = commonState;\n-        this.paxosInstances = paxosInstances;\n+      return false;\n     }\n \n-    public ClusterContext getClusterContext()\n-    {\n-        return clusterContext;\n-    }\n-\n-    public ProposerContext getProposerContext()\n-    {\n-        return proposerContext;\n-    }\n+    MultiPaxosContext that = (MultiPaxosContext) o;\n \n-    public AcceptorContext getAcceptorContext()\n+    if (!acceptorContext.equals(that.acceptorContext))\n     {\n-        return acceptorContext;\n+      return false;\n     }\n-\n-    public LearnerContext getLearnerContext()\n+    if (!atomicBroadcastContext.equals(that.atomicBroadcastContext))\n     {\n-        return learnerContext;\n+      return false;\n     }\n-\n-    public HeartbeatContext getHeartbeatContext()\n+    if (!clusterContext.equals(that.clusterContext))\n     {\n-        return heartbeatContext;\n+      return false;\n     }\n-\n-    public ElectionContext getElectionContext()\n+    if (!commonState.equals(that.commonState))\n     {\n-        return electionContext;\n+      return false;\n     }\n-\n-    public AtomicBroadcastContextImpl getAtomicBroadcastContext()\n+    if (!electionContext.equals(that.electionContext))\n     {\n-        return atomicBroadcastContext;\n+      return false;\n     }\n-\n-    /** Create a state snapshot. The snapshot will not duplicate services, and expects the caller to duplicate\n-     * {@link AcceptorInstanceStore}, since that is externally provided.  */\n-    public MultiPaxosContext snapshot( LogProvider logging, Timeouts timeouts, Executor executor,\n-                                      AcceptorInstanceStore instanceStore,\n-                                      ObjectInputStreamFactory objectInputStreamFactory,\n-                                      ObjectOutputStreamFactory objectOutputStreamFactory,\n-                                      ElectionCredentialsProvider electionCredentialsProvider )\n+    if (!heartbeatContext.equals(that.heartbeatContext))\n     {\n-        CommonContextState commonStateSnapshot = commonState.snapshot( logging.getLog( ClusterConfiguration.class ) );\n-        PaxosInstanceStore paxosInstancesSnapshot = paxosInstances.snapshot();\n-\n-        HeartbeatContextImpl snapshotHeartbeatContext =\n-                heartbeatContext.snapshot( commonStateSnapshot, logging, timeouts, executor );\n-        LearnerContextImpl snapshotLearnerContext =\n-                learnerContext.snapshot( commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, instanceStore,\n-                        objectInputStreamFactory, objectOutputStreamFactory, snapshotHeartbeatContext );\n-        ClusterContextImpl snapshotClusterContext =\n-                clusterContext.snapshot( commonStateSnapshot, logging, timeouts, executor, objectOutputStreamFactory,\n-                        objectInputStreamFactory, snapshotLearnerContext, snapshotHeartbeatContext );\n-        ElectionContextImpl snapshotElectionContext =\n-                electionContext.snapshot( commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n-                        snapshotHeartbeatContext, electionCredentialsProvider );\n-        ProposerContextImpl snapshotProposerContext =\n-                proposerContext.snapshot( commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, heartbeatContext );\n-        AcceptorContextImpl snapshotAcceptorContext =\n-                acceptorContext.snapshot( commonStateSnapshot, logging, timeouts, instanceStore );\n-        AtomicBroadcastContextImpl snapshotAtomicBroadcastContext =\n-                atomicBroadcastContext.snapshot( commonStateSnapshot, logging, timeouts, executor, snapshotHeartbeatContext );\n-\n-        snapshotHeartbeatContext.setCircularDependencies( snapshotClusterContext, snapshotLearnerContext );\n-\n-        return new MultiPaxosContext( snapshotProposerContext, snapshotAcceptorContext, snapshotLearnerContext,\n-                snapshotHeartbeatContext, snapshotElectionContext, snapshotAtomicBroadcastContext, commonStateSnapshot,\n-                paxosInstancesSnapshot, snapshotClusterContext\n-\n-        );\n+      return false;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (!learnerContext.equals(that.learnerContext))\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        MultiPaxosContext that = (MultiPaxosContext) o;\n-\n-        if ( !acceptorContext.equals( that.acceptorContext ) )\n-        {\n-            return false;\n-        }\n-        if ( !atomicBroadcastContext.equals( that.atomicBroadcastContext ) )\n-        {\n-            return false;\n-        }\n-        if ( !clusterContext.equals( that.clusterContext ) )\n-        {\n-            return false;\n-        }\n-        if ( !commonState.equals( that.commonState ) )\n-        {\n-            return false;\n-        }\n-        if ( !electionContext.equals( that.electionContext ) )\n-        {\n-            return false;\n-        }\n-        if ( !heartbeatContext.equals( that.heartbeatContext ) )\n-        {\n-            return false;\n-        }\n-        if ( !learnerContext.equals( that.learnerContext ) )\n-        {\n-            return false;\n-        }\n-        if ( !paxosInstances.equals( that.paxosInstances ) )\n-        {\n-            return false;\n-        }\n-        return proposerContext.equals( that.proposerContext );\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (!paxosInstances.equals(that.paxosInstances))\n     {\n-        int result = clusterContext.hashCode();\n-        result = 31 * result + proposerContext.hashCode();\n-        result = 31 * result + acceptorContext.hashCode();\n-        result = 31 * result + learnerContext.hashCode();\n-        result = 31 * result + heartbeatContext.hashCode();\n-        result = 31 * result + electionContext.hashCode();\n-        result = 31 * result + atomicBroadcastContext.hashCode();\n-        result = 31 * result + commonState.hashCode();\n-        result = 31 * result + paxosInstances.hashCode();\n-        return result;\n+      return false;\n     }\n+    return proposerContext.equals(that.proposerContext);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = clusterContext.hashCode();\n+    result = 31 * result + proposerContext.hashCode();\n+    result = 31 * result + acceptorContext.hashCode();\n+    result = 31 * result + learnerContext.hashCode();\n+    result = 31 * result + heartbeatContext.hashCode();\n+    result = 31 * result + electionContext.hashCode();\n+    result = 31 * result + atomicBroadcastContext.hashCode();\n+    result = 31 * result + commonState.hashCode();\n+    result = 31 * result + paxosInstances.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 302
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/910/MultiPaxosContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/910/MultiPaxosContext.java\nindex b6e6738c860..519491fb658 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/910/MultiPaxosContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/910/MultiPaxosContext.java\n@@ -58,8 +58,7 @@ public class MultiPaxosContext\n     private final CommonContextState commonState;\n     private final PaxosInstanceStore paxosInstances;\n \n-    public MultiPaxosContext( InstanceId me,\n-                              Iterable<ElectionRole> roles,\n+    public MultiPaxosContext( InstanceId me, Iterable<ElectionRole> roles,\n                               ClusterConfiguration configuration,\n                               Executor executor,\n                               LogProvider logging,\n@@ -69,30 +68,26 @@ public class MultiPaxosContext\n                               Timeouts timeouts,\n                               ElectionCredentialsProvider electionCredentialsProvider,\n                               Config config )\n-    {\n+{\n         commonState = new CommonContextState( configuration, config.get( ClusterSettings.max_acceptors ) );\n         paxosInstances = new PaxosInstanceStore();\n \n         heartbeatContext = new HeartbeatContextImpl( me, commonState, logging, timeouts, executor );\n         learnerContext = new LearnerContextImpl( me, commonState, logging, timeouts, paxosInstances, instanceStore,\n                 objectInputStreamFactory, objectOutputStreamFactory, heartbeatContext );\n-        clusterContext = new ClusterContextImpl( me, commonState, logging, timeouts, executor, objectOutputStreamFactory,\n-                        objectInputStreamFactory, learnerContext, heartbeatContext, config );\n-        electionContext = new ElectionContextImpl( me, commonState, logging, timeouts, roles, clusterContext, heartbeatContext,\n-                        electionCredentialsProvider );\n-        proposerContext = new ProposerContextImpl( me, commonState, logging, timeouts, paxosInstances, heartbeatContext );\n+clusterContext = new ClusterContextImpl( me, commonState, logging, timeouts, executor, objectOutputStreamFactory, objectInputStreamFactory, learnerContext, heartbeatContext, config );\n+electionContext = new ElectionContextImpl( me, commonState, logging, timeouts, roles, clusterContext, heartbeatContext, electionCredentialsProvider );\n+proposerContext = new ProposerContextImpl( me, commonState, logging, timeouts, paxosInstances, heartbeatContext );\n         acceptorContext = new AcceptorContextImpl( me, commonState, logging, timeouts, instanceStore );\n         atomicBroadcastContext = new AtomicBroadcastContextImpl( me, commonState, logging, timeouts, executor, heartbeatContext );\n-\n-        heartbeatContext.setCircularDependencies( clusterContext, learnerContext );\n+heartbeatContext.setCircularDependencies( clusterContext, learnerContext );\n     }\n \n-    private MultiPaxosContext( ProposerContextImpl proposerContext, AcceptorContextImpl acceptorContext,\n-                               LearnerContextImpl learnerContext, HeartbeatContextImpl heartbeatContext,\n+    private MultiPaxosContext( ProposerContextImpl proposerContext, AcceptorContextImpl acceptorContext, LearnerContextImpl learnerContext, HeartbeatContextImpl heartbeatContext,\n                                ElectionContextImpl electionContext, AtomicBroadcastContextImpl atomicBroadcastContext,\n                                CommonContextState commonState, PaxosInstanceStore paxosInstances,\n                                ClusterContextImpl clusterContext )\n-    {\n+{\n         this.clusterContext = clusterContext;\n         this.proposerContext = proposerContext;\n         this.acceptorContext = acceptorContext;\n@@ -141,40 +136,26 @@ public class MultiPaxosContext\n \n     /** Create a state snapshot. The snapshot will not duplicate services, and expects the caller to duplicate\n      * {@link AcceptorInstanceStore}, since that is externally provided.  */\n-    public MultiPaxosContext snapshot( LogProvider logging, Timeouts timeouts, Executor executor,\n-                                      AcceptorInstanceStore instanceStore,\n+    public MultiPaxosContext snapshot( LogProvider logging, Timeouts timeouts, Executor executor, AcceptorInstanceStore instanceStore,\n                                       ObjectInputStreamFactory objectInputStreamFactory,\n                                       ObjectOutputStreamFactory objectOutputStreamFactory,\n                                       ElectionCredentialsProvider electionCredentialsProvider )\n-    {\n+{\n         CommonContextState commonStateSnapshot = commonState.snapshot( logging.getLog( ClusterConfiguration.class ) );\n         PaxosInstanceStore paxosInstancesSnapshot = paxosInstances.snapshot();\n-\n-        HeartbeatContextImpl snapshotHeartbeatContext =\n-                heartbeatContext.snapshot( commonStateSnapshot, logging, timeouts, executor );\n-        LearnerContextImpl snapshotLearnerContext =\n-                learnerContext.snapshot( commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, instanceStore,\n+HeartbeatContextImpl snapshotHeartbeatContext = heartbeatContext.snapshot( commonStateSnapshot, logging, timeouts, executor );\n+LearnerContextImpl snapshotLearnerContext = learnerContext.snapshot( commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, instanceStore,\n                         objectInputStreamFactory, objectOutputStreamFactory, snapshotHeartbeatContext );\n-        ClusterContextImpl snapshotClusterContext =\n-                clusterContext.snapshot( commonStateSnapshot, logging, timeouts, executor, objectOutputStreamFactory,\n+ClusterContextImpl snapshotClusterContext = clusterContext.snapshot( commonStateSnapshot, logging, timeouts, executor, objectOutputStreamFactory,\n                         objectInputStreamFactory, snapshotLearnerContext, snapshotHeartbeatContext );\n-        ElectionContextImpl snapshotElectionContext =\n-                electionContext.snapshot( commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n+ElectionContextImpl snapshotElectionContext = electionContext.snapshot( commonStateSnapshot, logging, timeouts, snapshotClusterContext,\n                         snapshotHeartbeatContext, electionCredentialsProvider );\n-        ProposerContextImpl snapshotProposerContext =\n-                proposerContext.snapshot( commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, heartbeatContext );\n-        AcceptorContextImpl snapshotAcceptorContext =\n-                acceptorContext.snapshot( commonStateSnapshot, logging, timeouts, instanceStore );\n-        AtomicBroadcastContextImpl snapshotAtomicBroadcastContext =\n-                atomicBroadcastContext.snapshot( commonStateSnapshot, logging, timeouts, executor, snapshotHeartbeatContext );\n-\n-        snapshotHeartbeatContext.setCircularDependencies( snapshotClusterContext, snapshotLearnerContext );\n-\n-        return new MultiPaxosContext( snapshotProposerContext, snapshotAcceptorContext, snapshotLearnerContext,\n-                snapshotHeartbeatContext, snapshotElectionContext, snapshotAtomicBroadcastContext, commonStateSnapshot,\n-                paxosInstancesSnapshot, snapshotClusterContext\n-\n-        );\n+ProposerContextImpl snapshotProposerContext = proposerContext.snapshot( commonStateSnapshot, logging, timeouts, paxosInstancesSnapshot, heartbeatContext );\n+AcceptorContextImpl snapshotAcceptorContext = acceptorContext.snapshot( commonStateSnapshot, logging, timeouts, instanceStore );\n+AtomicBroadcastContextImpl snapshotAtomicBroadcastContext = atomicBroadcastContext.snapshot( commonStateSnapshot, logging, timeouts, executor, snapshotHeartbeatContext );\n+snapshotHeartbeatContext.setCircularDependencies( snapshotClusterContext, snapshotLearnerContext );\n+return new MultiPaxosContext( snapshotProposerContext, snapshotAcceptorContext, snapshotLearnerContext,\n+                snapshotHeartbeatContext, snapshotElectionContext, snapshotAtomicBroadcastContext, commonStateSnapshot, paxosInstancesSnapshot, snapshotClusterContext );\n     }\n \n     @Override\n@@ -184,7 +165,8 @@ public class MultiPaxosContext\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -195,35 +177,43 @@ public class MultiPaxosContext\n         {\n             return false;\n         }\n-        if ( !atomicBroadcastContext.equals( that.atomicBroadcastContext ) )\n+\n+if ( !atomicBroadcastContext.equals( that.atomicBroadcastContext ) )\n         {\n             return false;\n         }\n-        if ( !clusterContext.equals( that.clusterContext ) )\n+\n+if ( !clusterContext.equals( that.clusterContext ) )\n         {\n             return false;\n         }\n-        if ( !commonState.equals( that.commonState ) )\n+\n+if ( !commonState.equals( that.commonState ) )\n         {\n             return false;\n         }\n-        if ( !electionContext.equals( that.electionContext ) )\n+\n+if ( !electionContext.equals( that.electionContext ) )\n         {\n             return false;\n         }\n-        if ( !heartbeatContext.equals( that.heartbeatContext ) )\n+\n+if ( !heartbeatContext.equals( that.heartbeatContext ) )\n         {\n             return false;\n         }\n-        if ( !learnerContext.equals( that.learnerContext ) )\n+\n+if ( !learnerContext.equals( that.learnerContext ) )\n         {\n             return false;\n         }\n-        if ( !paxosInstances.equals( that.paxosInstances ) )\n+\n+if ( !paxosInstances.equals( that.paxosInstances ) )\n         {\n             return false;\n         }\n-        return proposerContext.equals( that.proposerContext );\n+\n+return proposerContext.equals( that.proposerContext );\n     }\n \n     @Override\n@@ -240,4 +230,4 @@ public class MultiPaxosContext\n         result = 31 * result + paxosInstances.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "842",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/842/IndexUpdaterMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/842/IndexUpdaterMap.java\nindex 619c6326161..d82ef3c9f73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/842/IndexUpdaterMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/842/IndexUpdaterMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.UncheckedIOException;\n@@ -36,9 +37,9 @@ import org.neo4j.kernel.impl.store.MultipleUnderlyingStorageExceptions;\n /**\n  * Holds currently open index updaters that are created dynamically when requested for any existing index in\n  * the given indexMap.\n- *\n+ * <p>\n  * Also provides a close method for closing and removing any remaining open index updaters.\n- *\n+ * <p>\n  * All updaters retrieved from this map must be either closed manually or handle duplicate calls to close\n  * or must all be closed indirectly by calling close on this updater map.\n  */\n@@ -46,25 +47,25 @@ class IndexUpdaterMap implements AutoCloseable\n {\n     private final IndexUpdateMode indexUpdateMode;\n     private final IndexMap indexMap;\n-    private final Map<IndexDescriptor,IndexUpdater> updaterMap;\n+    private final Map<IndexDescriptor, IndexUpdater> updaterMap;\n \n-    IndexUpdaterMap( IndexMap indexMap, IndexUpdateMode indexUpdateMode )\n+    IndexUpdaterMap(IndexMap indexMap, IndexUpdateMode indexUpdateMode)\n     {\n         this.indexUpdateMode = indexUpdateMode;\n         this.indexMap = indexMap;\n         this.updaterMap = new HashMap<>();\n     }\n \n-    IndexUpdater getUpdater( IndexDescriptor descriptor, PageCursorTracer cursorTracer )\n+    IndexUpdater getUpdater(IndexDescriptor descriptor, PageCursorTracer cursorTracer)\n     {\n-        IndexUpdater updater = updaterMap.get( descriptor );\n-        if ( null == updater )\n+        IndexUpdater updater = updaterMap.get(descriptor);\n+        if (null == updater)\n         {\n-            IndexProxy indexProxy = indexMap.getIndexProxy( descriptor );\n-            if ( null != indexProxy )\n+            IndexProxy indexProxy = indexMap.getIndexProxy(descriptor);\n+            if (null != indexProxy)\n             {\n-                updater = indexProxy.newUpdater( indexUpdateMode, cursorTracer );\n-                updaterMap.put( descriptor, updater );\n+                updater = indexProxy.newUpdater(indexUpdateMode, cursorTracer);\n+                updaterMap.put(descriptor, updater);\n             }\n         }\n         return updater;\n@@ -73,30 +74,29 @@ class IndexUpdaterMap implements AutoCloseable\n     @Override\n     public void close() throws UnderlyingStorageException\n     {\n-        Set<Pair<IndexDescriptor,UnderlyingStorageException>> exceptions = null;\n+        Set<Pair<IndexDescriptor, UnderlyingStorageException>> exceptions = null;\n \n-        for ( Map.Entry<IndexDescriptor,IndexUpdater> updaterEntry : updaterMap.entrySet() )\n+        for (Map.Entry<IndexDescriptor, IndexUpdater> updaterEntry : updaterMap.entrySet())\n         {\n             IndexUpdater updater = updaterEntry.getValue();\n             try\n             {\n                 updater.close();\n-            }\n-            catch ( UncheckedIOException | IndexEntryConflictException e )\n+            } catch (UncheckedIOException | IndexEntryConflictException e)\n             {\n-                if ( null == exceptions )\n+                if (null == exceptions)\n                 {\n                     exceptions = new HashSet<>();\n                 }\n-                exceptions.add( Pair.of( updaterEntry.getKey(), new UnderlyingStorageException( e ) ) );\n+                exceptions.add(Pair.of(updaterEntry.getKey(), new UnderlyingStorageException(e)));\n             }\n         }\n \n         clear();\n \n-        if ( null != exceptions )\n+        if (null != exceptions)\n         {\n-            throw new MultipleUnderlyingStorageExceptions( exceptions );\n+            throw new MultipleUnderlyingStorageExceptions(exceptions);\n         }\n     }\n \n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "67",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "59",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "\n  public boolean containDimension(String dimensionKey, String dimensionValue) {\n    return this.getDimensions().containsKey(dimensionKey) &&\n        dimensionValue.equals(this.getDimensions().get(dimensionKey));\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/67/MetricValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/67/MetricValue.java\nindex f1f95e366e2..abee8b94986 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/67/MetricValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/67/MetricValue.java\n@@ -64,7 +64,7 @@ public class MetricValue<T extends Number> {\n   }\n \n   public boolean containDimension(String dimensionKey, String dimensionValue) {\n-    return this.getDimensions().containsKey(dimensionKey) &&\n-        dimensionValue.equals(this.getDimensions().get(dimensionKey));\n+    return this.getDimensions().containsKey(dimensionKey)\n+        && dimensionValue.equals(this.getDimensions().get(dimensionKey));\n   }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "67",
                    "column": "59",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/67/MetricValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/67/MetricValue.java\nindex f1f95e366e2..14a0a021a59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/67/MetricValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/67/MetricValue.java\n@@ -64,7 +64,6 @@ public class MetricValue<T extends Number> {\n   }\n \n   public boolean containDimension(String dimensionKey, String dimensionValue) {\n-    return this.getDimensions().containsKey(dimensionKey) &&\n-        dimensionValue.equals(this.getDimensions().get(dimensionKey));\n+    return this.getDimensions().containsKey(dimensionKey) && dimensionValue.equals(this.getDimensions().get(dimensionKey));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "column": "59",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/67/MetricValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/67/MetricValue.java\nindex f1f95e366e2..abee8b94986 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/67/MetricValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/67/MetricValue.java\n@@ -64,7 +64,7 @@ public class MetricValue<T extends Number> {\n   }\n \n   public boolean containDimension(String dimensionKey, String dimensionValue) {\n-    return this.getDimensions().containsKey(dimensionKey) &&\n-        dimensionValue.equals(this.getDimensions().get(dimensionKey));\n+    return this.getDimensions().containsKey(dimensionKey)\n+        && dimensionValue.equals(this.getDimensions().get(dimensionKey));\n   }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
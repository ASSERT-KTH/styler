{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3119",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3119/TransactionHooks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3119/TransactionHooks.java\nindex b9658c06640..bc6d6d1504e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3119/TransactionHooks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3119/TransactionHooks.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.ArrayList;\n@@ -34,90 +35,90 @@ import org.neo4j.storageengine.api.txstate.ReadableTransactionState;\n \n public class TransactionHooks\n {\n-    protected final Set<TransactionHook> hooks = new CopyOnWriteArraySet<>();\n+  protected final Set<TransactionHook> hooks = new CopyOnWriteArraySet<>();\n+\n+  public void register(TransactionHook hook)\n+  {\n+    hooks.add(hook);\n+  }\n \n-    public void register( TransactionHook hook )\n+  public void unregister(TransactionHook hook)\n+  {\n+    hooks.remove(hook);\n+  }\n+\n+  public TransactionHooksState beforeCommit(ReadableTransactionState state, KernelTransaction tx,\n+                                            StoreReadLayer storeReadLayer, StorageStatement storageStatement)\n+  {\n+    if (hooks.size() == 0)\n     {\n-        hooks.add( hook );\n+      return null;\n     }\n \n-    public void unregister( TransactionHook hook )\n+    TransactionHooksState hookState = new TransactionHooksState();\n+    for (TransactionHook hook : hooks)\n     {\n-        hooks.remove( hook );\n+      Outcome outcome = hook.beforeCommit(state, tx, storeReadLayer, storageStatement);\n+      hookState.add(hook, outcome);\n     }\n+    return hookState;\n+  }\n \n-    public TransactionHooksState beforeCommit( ReadableTransactionState state, KernelTransaction tx,\n-            StoreReadLayer storeReadLayer, StorageStatement storageStatement )\n+  @SuppressWarnings(\"unchecked\")\n+  public void afterCommit(ReadableTransactionState state, KernelTransaction tx, TransactionHooksState hooksState)\n+  {\n+    if (hooksState == null)\n     {\n-        if ( hooks.size() == 0 )\n-        {\n-            return null;\n-        }\n-\n-        TransactionHooksState hookState = new TransactionHooksState();\n-        for ( TransactionHook hook : hooks )\n-        {\n-            Outcome outcome = hook.beforeCommit( state, tx, storeReadLayer, storageStatement );\n-            hookState.add( hook, outcome );\n-        }\n-        return hookState;\n+      return;\n     }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    public void afterCommit( ReadableTransactionState state, KernelTransaction tx, TransactionHooksState hooksState )\n+    for (Pair<TransactionHook, Outcome> hookAndOutcome : hooksState.hooksWithOutcome())\n     {\n-        if ( hooksState == null )\n-        {\n-            return;\n-        }\n-        for ( Pair<TransactionHook, Outcome> hookAndOutcome : hooksState.hooksWithOutcome() )\n-        {\n-            TransactionHook hook = hookAndOutcome.first();\n-            Outcome outcome = hookAndOutcome.other();\n-            hook.afterCommit( state, tx, outcome );\n-        }\n+      TransactionHook hook = hookAndOutcome.first();\n+      Outcome outcome = hookAndOutcome.other();\n+      hook.afterCommit(state, tx, outcome);\n     }\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public void afterRollback( ReadableTransactionState state, KernelTransaction tx, TransactionHooksState hooksState )\n+  @SuppressWarnings(\"unchecked\")\n+  public void afterRollback(ReadableTransactionState state, KernelTransaction tx, TransactionHooksState hooksState)\n+  {\n+    if (hooksState == null)\n     {\n-        if ( hooksState == null )\n-        {\n-            return;\n-        }\n-        for ( Pair<TransactionHook, Outcome> hookAndOutcome : hooksState.hooksWithOutcome() )\n-        {\n-            hookAndOutcome.first().afterRollback( state, tx, hookAndOutcome.other() );\n-        }\n+      return;\n     }\n-\n-    public static class TransactionHooksState\n+    for (Pair<TransactionHook, Outcome> hookAndOutcome : hooksState.hooksWithOutcome())\n     {\n-        private final List<Pair<TransactionHook, Outcome>> hooksWithAttachment = new ArrayList<>();\n-        private Throwable failure;\n+      hookAndOutcome.first().afterRollback(state, tx, hookAndOutcome.other());\n+    }\n+  }\n \n-        public void add( TransactionHook hook, Outcome outcome )\n-        {\n-            hooksWithAttachment.add( Pair.of( hook, outcome ) );\n-            if ( outcome != null && !outcome.isSuccessful() )\n-            {\n-                failure = outcome.failure();\n-            }\n-        }\n+  public static class TransactionHooksState\n+  {\n+    private final List<Pair<TransactionHook, Outcome>> hooksWithAttachment = new ArrayList<>();\n+    private Throwable failure;\n \n-        Iterable<Pair<TransactionHook, Outcome>> hooksWithOutcome()\n-        {\n-            return hooksWithAttachment;\n-        }\n+    public void add(TransactionHook hook, Outcome outcome)\n+    {\n+      hooksWithAttachment.add(Pair.of(hook, outcome));\n+      if (outcome != null && !outcome.isSuccessful())\n+      {\n+        failure = outcome.failure();\n+      }\n+    }\n \n-        public boolean failed()\n-        {\n-            return failure != null;\n-        }\n+    Iterable<Pair<TransactionHook, Outcome>> hooksWithOutcome()\n+    {\n+      return hooksWithAttachment;\n+    }\n \n-        public Throwable failure()\n-        {\n-            return failure;\n-        }\n+    public boolean failed()\n+    {\n+      return failure != null;\n+    }\n+\n+    public Throwable failure()\n+    {\n+      return failure;\n     }\n+  }\n }\n",
            "diff_size": 99
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3119/TransactionHooks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3119/TransactionHooks.java\nindex b9658c06640..a2b3c991dbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3119/TransactionHooks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3119/TransactionHooks.java\n@@ -60,7 +60,8 @@ public class TransactionHooks\n             Outcome outcome = hook.beforeCommit( state, tx, storeReadLayer, storageStatement );\n             hookState.add( hook, outcome );\n         }\n-        return hookState;\n+\n+return hookState;\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n@@ -70,7 +71,7 @@ public class TransactionHooks\n         {\n             return;\n         }\n-        for ( Pair<TransactionHook, Outcome> hookAndOutcome : hooksState.hooksWithOutcome() )\n+        for ( Pair<TransactionHook,Outcome> hookAndOutcome : hooksState.hooksWithOutcome() )\n         {\n             TransactionHook hook = hookAndOutcome.first();\n             Outcome outcome = hookAndOutcome.other();\n@@ -85,7 +86,7 @@ public class TransactionHooks\n         {\n             return;\n         }\n-        for ( Pair<TransactionHook, Outcome> hookAndOutcome : hooksState.hooksWithOutcome() )\n+        for ( Pair<TransactionHook,Outcome> hookAndOutcome : hooksState.hooksWithOutcome() )\n         {\n             hookAndOutcome.first().afterRollback( state, tx, hookAndOutcome.other() );\n         }\n@@ -120,4 +121,4 @@ public class TransactionHooks\n             return failure;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "intuit-Tank",
    "error_id": "191",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "3",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class WrappedSyntaxView2 {//extends CompositeView {\n\n//\tprivate Rectangle tempRect;\n//\tprivate int[] cachedOffsets;\n//\tprivate int[] cachedSpans;\n//\tprivate boolean sizeRequirementsValid;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/191/WrappedSyntaxView2.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/191/WrappedSyntaxView2.java\nindex c50b8f98969..f62a545ced1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/191/WrappedSyntaxView2.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/191/WrappedSyntaxView2.java\n@@ -5,6 +5,7 @@ package org.fife.ui.rsyntaxtextarea;\n //import java.awt.Shape;\n \n //import javax.swing.text.CompositeView;\n+\n import javax.swing.text.Element;\n //import javax.swing.text.View;\n \n@@ -14,7 +15,7 @@ import javax.swing.text.Element;\n  * be faster with large wrapped documents.  Heavily based off of\n  * <code>BoxView</code>, but streamlined to only care about the y-axis, and\n  * takes code folding into account.<p>\n- *\n+ * <p>\n  * This class is not currently used.\n  *\n  * @author Robert Futrell\n@@ -28,13 +29,13 @@ public class WrappedSyntaxView2 {//extends CompositeView {\n //\tprivate boolean sizeRequirementsValid;\n \n \n-\tpublic WrappedSyntaxView2(Element root) {\n-\t\t//super(root);\n+  public WrappedSyntaxView2(Element root) {\n+    //super(root);\n //\t\ttempRect = new Rectangle();\n //\t\tcachedOffsets = new int[0];\n //\t\tcachedSpans = new int[0];\n //\t\tsizeRequirementsValid = false;\n-\t}\n+  }\n \n \n //\tprotected void childAllocation(int index, Rectangle alloc) {\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/191/WrappedSyntaxView2.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/191/WrappedSyntaxView2.java\nindex c50b8f98969..dd03d88a205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/191/WrappedSyntaxView2.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/191/WrappedSyntaxView2.java\n@@ -5,6 +5,9 @@ package org.fife.ui.rsyntaxtextarea;\n //import java.awt.Shape;\n \n //import javax.swing.text.CompositeView;\n+\n+\n+\n import javax.swing.text.Element;\n //import javax.swing.text.View;\n \n@@ -20,138 +23,139 @@ import javax.swing.text.Element;\n  * @author Robert Futrell\n  * @version 1.0\n  */\n-public class WrappedSyntaxView2 {//extends CompositeView {\n \n-//\tprivate Rectangle tempRect;\n-//\tprivate int[] cachedOffsets;\n-//\tprivate int[] cachedSpans;\n-//\tprivate boolean sizeRequirementsValid;\n \n+public class WrappedSyntaxView2 {//extends CompositeView {\n+\n+//  private Rectangle tempRect;\n+//  private int[] cachedOffsets;\n+//  private int[] cachedSpans;\n+//  private boolean sizeRequirementsValid;\n \n-\tpublic WrappedSyntaxView2(Element root) {\n-\t\t//super(root);\n-//\t\ttempRect = new Rectangle();\n-//\t\tcachedOffsets = new int[0];\n-//\t\tcachedSpans = new int[0];\n-//\t\tsizeRequirementsValid = false;\n-\t}\n+    public WrappedSyntaxView2(Element root) {\n+        //super(root);\n+//      tempRect = new Rectangle();\n+//      cachedOffsets = new int[0];\n+//      cachedSpans = new int[0];\n+//      sizeRequirementsValid = false;\n+    }\n \n \n-//\tprotected void childAllocation(int index, Rectangle alloc) {\n-//\t\talloc.y += getOffset(index);\n-//\t\talloc.height = getHeight(index);\n-//\t}\n+//  protected void childAllocation(int index, Rectangle alloc) {\n+//      alloc.y += getOffset(index);\n+//      alloc.height = getHeight(index);\n+//  }\n //\n //\n-//\tprivate int getHeight(int childIndex) {\n-//\t\treturn cachedSpans[childIndex];\n-//\t}\n+//  private int getHeight(int childIndex) {\n+//      return cachedSpans[childIndex];\n+//  }\n //\n //\n-//\tprivate int getOffset(int childIndex) {\n-//\t\treturn cachedOffsets[childIndex];\n-//\t}\n+//  private int getOffset(int childIndex) {\n+//      return cachedOffsets[childIndex];\n+//  }\n //\n //\n-//\tprotected View getViewAtPoint(int x, int y, Rectangle alloc) {\n-//\t\t// TODO Auto-generated method stub\n-//\t\treturn null;\n-//\t}\n+//  protected View getViewAtPoint(int x, int y, Rectangle alloc) {\n+//      // TODO Auto-generated method stub\n+//      return null;\n+//  }\n //\n //\n-//\t/**\n-//\t * @param alloc The allocated region; this is the area inside of the insets\n-//\t * @return Whether the point lies after the region.\n-//\t */\n-//\tprotected boolean isAfter(int x, int y, Rectangle alloc) {\n-//\t\treturn y > (alloc.y + alloc.height);\n-//\t}\n+//  /**\n+//   * @param alloc The allocated region; this is the area inside of the insets\n+//   * @return Whether the point lies after the region.\n+//   */\n+//  protected boolean isAfter(int x, int y, Rectangle alloc) {\n+//      return y > (alloc.y + alloc.height);\n+//  }\n //\n //\n-//\t/**\n-//\t * @param alloc The allocated region; this is the area inside of the insets\n-//\t * @return Whether the point lies before the region.\n-//\t */\n-//\tprotected boolean isBefore(int x, int y, Rectangle alloc) {\n-//\t\treturn y < alloc.y;\n-//\t}\n+//  /**\n+//   * @param alloc The allocated region; this is the area inside of the insets\n+//   * @return Whether the point lies before the region.\n+//   */\n+//  protected boolean isBefore(int x, int y, Rectangle alloc) {\n+//      return y < alloc.y;\n+//  }\n //\n //\n-//\tpublic float getPreferredSpan(int axis) {\n-//\t\tif (axis==X_AXIS) {\n-//\t\t\treturn preferredWidth + getLeftInset() + getRightInset();\n-//\t\t}\n-//\t\telse {\n-//\t\t\treturn preferredHeight + getTopInset() + getBottomInset();\n-//\t\t}\n-//\t}\n+//  public float getPreferredSpan(int axis) {\n+//      if (axis==X_AXIS) {\n+//          return preferredWidth + getLeftInset() + getRightInset();\n+//      }\n+//      else {\n+//          return preferredHeight + getTopInset() + getBottomInset();\n+//      }\n+//  }\n //\n //\n-//\tpublic void paint(Graphics g, Shape allocation) {\n+//  public void paint(Graphics g, Shape allocation) {\n //\n-//\t\tRectangle alloc = (allocation instanceof Rectangle) ?\n-//\t\t\t\t(Rectangle)allocation : allocation.getBounds();\n-//\t\tint n = getViewCount();\n+//      Rectangle alloc = (allocation instanceof Rectangle) ?\n+//              (Rectangle)allocation : allocation.getBounds();\n+//      int n = getViewCount();\n //\n-//\t\tint x = alloc.x + getLeftInset();\n-//\t\tint y = alloc.y + getTopInset();\n-//\t\tRectangle clip = g.getClipBounds();\n-//\t\tint preferredWidth = (int)getPreferredSpan(X_AXIS);\n+//      int x = alloc.x + getLeftInset();\n+//      int y = alloc.y + getTopInset();\n+//      Rectangle clip = g.getClipBounds();\n+//      int preferredWidth = (int)getPreferredSpan(X_AXIS);\n //\n-//\t\tfor (int i = 0; i < n; i++) {\n-//\t\t\ttempRect.x = x;\n-//\t\t\ttempRect.y = y + getOffset(i);\n-//\t\t\ttempRect.width = preferredWidth;\n-//\t\t\ttempRect.height = getHeight(i);\n-//\t\t\tif (tempRect.intersects(clip)) {\n-//\t\t\t\tpaintChild(g, tempRect, i);\n-//\t\t\t}\n-//\t\t}\n+//      for (int i = 0; i < n; i++) {\n+//          tempRect.x = x;\n+//          tempRect.y = y + getOffset(i);\n+//          tempRect.width = preferredWidth;\n+//          tempRect.height = getHeight(i);\n+//          if (tempRect.intersects(clip)) {\n+//              paintChild(g, tempRect, i);\n+//          }\n+//      }\n //\n-//\t}\n+//  }\n //\n //\n-//\t/**\n-//\t * Called when a child view's preferred span changes.  This invalidates\n-//\t * our layout cache and calls the super implementation.\n-//\t */\n-//\tpublic void preferenceChanged(View child, boolean widthPreferenceChanged,\n-//\t\t\t\t\t\t\t\tboolean heightPreferenceChanged) {\n+//  /**\n+//   * Called when a child view's preferred span changes.  This invalidates\n+//   * our layout cache and calls the super implementation.\n+//   */\n+//  public void preferenceChanged(View child, boolean widthPreferenceChanged,\n+//                              boolean heightPreferenceChanged) {\n //\n-//\t\tif (heightPreferenceChanged) {\n-//\t\t\tsizeRequirementsValid = false;\n-////\t\t\tmajorAllocValid = false;\n-//\t\t}\n-////\t\tif (width) {\n-////\t\t\tminorReqValid = false;\n-////\t\t\tminorAllocValid = false;\n-////\t\t}\n+//      if (heightPreferenceChanged) {\n+//          sizeRequirementsValid = false;\n+////            majorAllocValid = false;\n+//      }\n+////        if (width) {\n+////            minorReqValid = false;\n+////            minorAllocValid = false;\n+////        }\n //\n-//\t\tsuper.preferenceChanged(child, widthPreferenceChanged, heightPreferenceChanged);\n+//      super.preferenceChanged(child, widthPreferenceChanged, heightPreferenceChanged);\n //\n-//\t}\n+//  }\n //\n-//\tpublic void replace(int index, int length, View[] elems) {\n+//  public void replace(int index, int length, View[] elems) {\n //\n-//\t\tsuper.replace(index, length, elems);\n+//      super.replace(index, length, elems);\n //\n-//\t\t// Invalidate cache\n-//\t\tint insertCount = elems==null ? 0 : elems.length;\n-//\t\tcachedOffsets = updateLayoutArray(cachedOffsets, index, insertCount);\n-//\t\tmajorReqValid = false;\n-//\t\tmajorAllocValid = false;\n+//      // Invalidate cache\n+//      int insertCount = elems==null ? 0 : elems.length;\n+//      cachedOffsets = updateLayoutArray(cachedOffsets, index, insertCount);\n+//      majorReqValid = false;\n+//      majorAllocValid = false;\n //\n-//\t}\n+//  }\n //\n //\n-//\tprivate int[] updateLayoutArray(int[] oldArray, int offset, int nInserted) {\n-//\t\tint n = getViewCount(); // Called after super.replace() so this is accurate\n-//\t\tint[] newArray = new int[n];\n-//\t\tSystem.arraycopy(oldArray, 0, newArray, 0, offset);\n-//\t\tSystem.arraycopy(oldArray, offset,\n-//\t\t\t\tnewArray, offset + nInserted, n - nInserted - offset);\n-//\t\treturn newArray;\n-//\t}\n+//  private int[] updateLayoutArray(int[] oldArray, int offset, int nInserted) {\n+//      int n = getViewCount(); // Called after super.replace() so this is accurate\n+//      int[] newArray = new int[n];\n+//      System.arraycopy(oldArray, 0, newArray, 0, offset);\n+//      System.arraycopy(oldArray, offset,\n+//              newArray, offset + nInserted, n - nInserted - offset);\n+//      return newArray;\n+//  }\n //\n \n }\n\\ No newline at end of file\n",
            "diff_size": 107
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "25",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
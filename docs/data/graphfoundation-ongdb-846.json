{
    "project_name": "graphfoundation-ongdb",
    "error_id": "846",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/846/Chunker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/846/Chunker.java\nindex 2e14ffbaad6..99149b37d84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/846/Chunker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/846/Chunker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.Closeable;\n@@ -32,26 +33,26 @@ import org.neo4j.csv.reader.Source.Chunk;\n  */\n public interface Chunker extends Closeable\n {\n-    /**\n-     * @return a new allocated {@link Chunk} which is to be later passed into {@link #nextChunk(Chunk)}\n-     * to fill it with data. When a {@link Chunk} has been fully processed then it can be passed into\n-     * {@link #nextChunk(Chunk)} again to get more data.\n-     */\n-    Chunk newChunk();\n+  /**\n+   * @return a new allocated {@link Chunk} which is to be later passed into {@link #nextChunk(Chunk)}\n+   * to fill it with data. When a {@link Chunk} has been fully processed then it can be passed into\n+   * {@link #nextChunk(Chunk)} again to get more data.\n+   */\n+  Chunk newChunk();\n \n-    /**\n-     * Fills a previously {@link #newChunk() allocated chunk} with data to be processed after completion\n-     * of this call.\n-     *\n-     * @param chunk {@link Chunk} to fill with data.\n-     * @return {@code true} if at least some amount of data was passed into the given {@link Chunk},\n-     * otherwise {@code false} denoting the end of the stream.\n-     * @throws IOException on I/O error.\n-     */\n-    boolean nextChunk( Chunk chunk ) throws IOException;\n+  /**\n+   * Fills a previously {@link #newChunk() allocated chunk} with data to be processed after completion\n+   * of this call.\n+   *\n+   * @param chunk {@link Chunk} to fill with data.\n+   * @return {@code true} if at least some amount of data was passed into the given {@link Chunk},\n+   * otherwise {@code false} denoting the end of the stream.\n+   * @throws IOException on I/O error.\n+   */\n+  boolean nextChunk(Chunk chunk) throws IOException;\n \n-    /**\n-     * @return byte position of how much data has been returned from {@link #nextChunk(Chunk)}.\n-     */\n-    long position();\n+  /**\n+   * @return byte position of how much data has been returned from {@link #nextChunk(Chunk)}.\n+   */\n+  long position();\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/846/Chunker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/846/Chunker.java\nindex 2e14ffbaad6..56003b9695c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/846/Chunker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/846/Chunker.java\n@@ -54,4 +54,4 @@ public interface Chunker extends Closeable\n      * @return byte position of how much data has been returned from {@link #nextChunk(Chunk)}.\n      */\n     long position();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CESNET-perun",
    "error_id": "184",
    "information": {
        "errors": [
            {
                "line": "297",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\t *\n\t * @param sess\n\t * @param user \n\t * @throws InternalErrorException\n\t */\n\tvoid removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/184/AuthzResolverImplApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/184/AuthzResolverImplApi.java\nindex 6c6e37ae707..15258018a3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/184/AuthzResolverImplApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/184/AuthzResolverImplApi.java\n@@ -17,325 +17,325 @@ import java.util.List;\n \n public interface AuthzResolverImplApi {\n \n-\t/**\n-\t * Returns all user's roles.\n-\t *\n-\t * @param user\n-\t * @return AuthzRoles object which contains all roles with perunbeans\n-\t */\n-\tAuthzRoles getRoles(User user) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the sponsoredUser.\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllSponsoredUserAuthz(PerunSession sess, User sponsoredUser) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the user.\n-\t *\n-\t * @param sess\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllUserAuthz(PerunSession sess, User user) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the vo\n-\t *\n-\t * @param sess\n-\t * @param vo\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForVo(PerunSession sess, Vo vo) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForGroup(PerunSession sess, Group group) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForFacility(PerunSession sess, Facility facility) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForResource(PerunSession sess, Resource resource) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the service\n-\t *\n-\t * @param sess\n-\t * @param service\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForService(PerunSession sess, Service service) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the securityTeam\n-\t *\n-\t * @param sess\n-\t * @param securityTeam\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForSecurityTeam(PerunSession sess, SecurityTeam securityTeam) throws InternalErrorException;\n-\n-\t/**\n-\t * Add user role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Add user role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Add user role admin for the sponsored user\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the sponsored user\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the sponsoredUser\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the sponsoredUser\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Add user role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param authorizedGroup\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param authorizedGroup\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, GroupNotAdminException;\n-\n-\tvoid addAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws AlreadyAdminException, InternalErrorException;\n-\n-\tvoid addAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws AlreadyAdminException, InternalErrorException;\n-\n-\tvoid removeAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws UserNotAdminException, InternalErrorException;\n-\n-\tvoid removeAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Make user to be perunAdmin\n-\t *\n-\t * @param sess\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid makeUserPerunAdmin(PerunSession sess, User user) throws InternalErrorException;\n-\n-\t/**\n-\t * Remove role perunAdmin for user.\n-\t *\n-\t * @param sess\n-\t * @param user \n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Adds role for user in a VO.\n-\t */\n-\tvoid addVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Adds role for group in a VO.\n-\t */\n-\tvoid addVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Removes role from user in a VO.\n-\t */\n-\tvoid removeVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Removes role from group in a VO.\n-\t */\n-\tvoid removeVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Checks whether the user is in role for Vo.\n-\t */\n-\tboolean isUserInRoleForVo(PerunSession session, User user, Role role, Vo vo);\n-\n-\t/**\n-\t * Checks whether the group is in role for Vo.\n-\t */\n-\tboolean isGroupInRoleForVo(PerunSession session, Group group, Role role, Vo vo);\n-\n-\t/**\n-\t * Gets list fo VOs for which the group has the role.\n-\t */\n-\tList<Integer> getVoIdsForGroupInRole(PerunSession sess, Group group, Role role) throws InternalErrorException;\n-\n-\t/**\n-\t * Gets list fo VOs for which the user has the role.\n-\t */\n-\tList<Integer> getVoIdsForUserInRole(PerunSession sess, User user, Role role) throws InternalErrorException;\n+    /**\n+     * Returns all user's roles.\n+     *\n+     * @param user\n+     * @return AuthzRoles object which contains all roles with perunbeans\n+     */\n+    AuthzRoles getRoles(User user) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the sponsoredUser.\n+     *\n+     * @param sess\n+     * @param sponsoredUser\n+     * @throws InternalErrorException\n+     */\n+    void removeAllSponsoredUserAuthz(PerunSession sess, User sponsoredUser) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the user.\n+     *\n+     * @param sess\n+     * @param user\n+     * @throws InternalErrorException\n+     */\n+    void removeAllUserAuthz(PerunSession sess, User user) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the vo\n+     *\n+     * @param sess\n+     * @param vo\n+     * @throws InternalErrorException\n+     */\n+    void removeAllAuthzForVo(PerunSession sess, Vo vo) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the group\n+     *\n+     * @param sess\n+     * @param group\n+     * @throws InternalErrorException\n+     */\n+    void removeAllAuthzForGroup(PerunSession sess, Group group) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the facility\n+     *\n+     * @param sess\n+     * @param facility\n+     * @throws InternalErrorException\n+     */\n+    void removeAllAuthzForFacility(PerunSession sess, Facility facility) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the resource\n+     *\n+     * @param sess\n+     * @param resource\n+     * @throws InternalErrorException\n+     */\n+    void removeAllAuthzForResource(PerunSession sess, Resource resource) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the service\n+     *\n+     * @param sess\n+     * @param service\n+     * @throws InternalErrorException\n+     */\n+    void removeAllAuthzForService(PerunSession sess, Service service) throws InternalErrorException;\n+\n+    /**\n+     * Removes all authz entries for the securityTeam\n+     *\n+     * @param sess\n+     * @param securityTeam\n+     * @throws InternalErrorException\n+     */\n+    void removeAllAuthzForSecurityTeam(PerunSession sess, SecurityTeam securityTeam) throws InternalErrorException;\n+\n+    /**\n+     * Add user role admin for the facility\n+     *\n+     * @param sess\n+     * @param facility\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Add group of users role admin for the facility\n+     *\n+     * @param sess\n+     * @param facility\n+     * @param group\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Remove user role admin for the facility\n+     *\n+     * @param sess\n+     * @param facility\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws UserNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, UserNotAdminException;\n+\n+    /**\n+     * Remove group of users role admin for the facility\n+     *\n+     * @param sess\n+     * @param facility\n+     * @param group\n+     * @throws InternalErrorException\n+     * @throws GroupNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+    /**\n+     * Add user role admin for the resource\n+     *\n+     * @param sess\n+     * @param resource\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Add group of users role admin for the resource\n+     *\n+     * @param sess\n+     * @param resource\n+     * @param group\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Remove user role admin for the resource\n+     *\n+     * @param sess\n+     * @param resource\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws UserNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, UserNotAdminException;\n+\n+    /**\n+     * Remove group of users role admin for the resource\n+     *\n+     * @param sess\n+     * @param resource\n+     * @param group\n+     * @throws InternalErrorException\n+     * @throws GroupNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+    /**\n+     * Add user role admin for the sponsored user\n+     *\n+     * @param sess\n+     * @param sponsoredUser\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Add group of users role admin for the sponsored user\n+     *\n+     * @param sess\n+     * @param sponsoredUser\n+     * @param group\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Remove user role admin for the sponsoredUser\n+     *\n+     * @param sess\n+     * @param sponsoredUser\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws UserNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, UserNotAdminException;\n+\n+    /**\n+     * Remove group of users role admin for the sponsoredUser\n+     *\n+     * @param sess\n+     * @param sponsoredUser\n+     * @param group\n+     * @throws InternalErrorException\n+     * @throws GroupNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+    /**\n+     * Add user role admin for the group\n+     *\n+     * @param sess\n+     * @param group\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Add group of users role admin for the group\n+     *\n+     * @param sess\n+     * @param group\n+     * @param authorizedGroup\n+     * @throws InternalErrorException\n+     * @throws AlreadyAdminException\n+     */\n+    void addAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Remove user role admin for the group\n+     *\n+     * @param sess\n+     * @param group\n+     * @param user\n+     * @throws InternalErrorException\n+     * @throws UserNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, UserNotAdminException;\n+\n+    /**\n+     * Remove group of users role admin for the group\n+     *\n+     * @param sess\n+     * @param group\n+     * @param authorizedGroup\n+     * @throws InternalErrorException\n+     * @throws GroupNotAdminException\n+     */\n+    void removeAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, GroupNotAdminException;\n+\n+    void addAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws AlreadyAdminException, InternalErrorException;\n+\n+    void addAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws AlreadyAdminException, InternalErrorException;\n+\n+    void removeAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws UserNotAdminException, InternalErrorException;\n+\n+    void removeAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+    /**\n+     * Make user to be perunAdmin\n+     *\n+     * @param sess\n+     * @param user\n+     * @throws InternalErrorException\n+     */\n+    void makeUserPerunAdmin(PerunSession sess, User user) throws InternalErrorException;\n+\n+    /**\n+     * Remove role perunAdmin for user.\n+     *\n+     * @param sess\n+     * @param user\n+     * @throws InternalErrorException\n+     */\n+    void removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n+\n+    /**\n+     * Adds role for user in a VO.\n+     */\n+    void addVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Adds role for group in a VO.\n+     */\n+    void addVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+    /**\n+     * Removes role from user in a VO.\n+     */\n+    void removeVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, UserNotAdminException;\n+\n+    /**\n+     * Removes role from group in a VO.\n+     */\n+    void removeVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+    /**\n+     * Checks whether the user is in role for Vo.\n+     */\n+    boolean isUserInRoleForVo(PerunSession session, User user, Role role, Vo vo);\n+\n+    /**\n+     * Checks whether the group is in role for Vo.\n+     */\n+    boolean isGroupInRoleForVo(PerunSession session, Group group, Role role, Vo vo);\n+\n+    /**\n+     * Gets list fo VOs for which the group has the role.\n+     */\n+    List<Integer> getVoIdsForGroupInRole(PerunSession sess, Group group, Role role) throws InternalErrorException;\n+\n+    /**\n+     * Gets list fo VOs for which the user has the role.\n+     */\n+    List<Integer> getVoIdsForUserInRole(PerunSession sess, User user, Role role) throws InternalErrorException;\n }\n",
            "diff_size": 321
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/184/AuthzResolverImplApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/184/AuthzResolverImplApi.java\nindex 6c6e37ae707..10461524a77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/184/AuthzResolverImplApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/184/AuthzResolverImplApi.java\n@@ -6,7 +6,6 @@ import cz.metacentrum.perun.core.api.exceptions.GroupNotAdminException;\n import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n import cz.metacentrum.perun.core.api.exceptions.UserNotAdminException;\n import cz.metacentrum.perun.core.impl.AuthzRoles;\n-\n import java.util.List;\n \n /**\n@@ -15,327 +14,403 @@ import java.util.List;\n  * @author Michal Prochazka\n  */\n \n+\n public interface AuthzResolverImplApi {\n \n-\t/**\n-\t * Returns all user's roles.\n-\t *\n-\t * @param user\n-\t * @return AuthzRoles object which contains all roles with perunbeans\n-\t */\n-\tAuthzRoles getRoles(User user) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the sponsoredUser.\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllSponsoredUserAuthz(PerunSession sess, User sponsoredUser) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the user.\n-\t *\n-\t * @param sess\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllUserAuthz(PerunSession sess, User user) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the vo\n-\t *\n-\t * @param sess\n-\t * @param vo\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForVo(PerunSession sess, Vo vo) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForGroup(PerunSession sess, Group group) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForFacility(PerunSession sess, Facility facility) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForResource(PerunSession sess, Resource resource) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the service\n-\t *\n-\t * @param sess\n-\t * @param service\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForService(PerunSession sess, Service service) throws InternalErrorException;\n-\n-\t/**\n-\t * Removes all authz entries for the securityTeam\n-\t *\n-\t * @param sess\n-\t * @param securityTeam\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removeAllAuthzForSecurityTeam(PerunSession sess, SecurityTeam securityTeam) throws InternalErrorException;\n-\n-\t/**\n-\t * Add user role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the facility\n-\t *\n-\t * @param sess\n-\t * @param facility\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Add user role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the resource\n-\t *\n-\t * @param sess\n-\t * @param resource\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Add user role admin for the sponsored user\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the sponsored user\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the sponsoredUser\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the sponsoredUser\n-\t *\n-\t * @param sess\n-\t * @param sponsoredUser\n-\t * @param group\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Add user role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Add group of users role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param authorizedGroup\n-\t * @throws InternalErrorException\n-\t * @throws AlreadyAdminException\n-\t */\n-\tvoid addAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Remove user role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t * @throws UserNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Remove group of users role admin for the group\n-\t *\n-\t * @param sess\n-\t * @param group\n-\t * @param authorizedGroup\n-\t * @throws InternalErrorException\n-\t * @throws GroupNotAdminException\n-\t */\n-\tvoid removeAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, GroupNotAdminException;\n-\n-\tvoid addAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws AlreadyAdminException, InternalErrorException;\n-\n-\tvoid addAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws AlreadyAdminException, InternalErrorException;\n-\n-\tvoid removeAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws UserNotAdminException, InternalErrorException;\n-\n-\tvoid removeAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Make user to be perunAdmin\n-\t *\n-\t * @param sess\n-\t * @param user\n-\t * @throws InternalErrorException\n-\t */\n-\tvoid makeUserPerunAdmin(PerunSession sess, User user) throws InternalErrorException;\n-\n-\t/**\n-\t * Remove role perunAdmin for user.\n-\t *\n-\t * @param sess\n-\t * @param user \n-\t * @throws InternalErrorException\n-\t */\n-\tvoid removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Adds role for user in a VO.\n-\t */\n-\tvoid addVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Adds role for group in a VO.\n-\t */\n-\tvoid addVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, AlreadyAdminException;\n-\n-\t/**\n-\t * Removes role from user in a VO.\n-\t */\n-\tvoid removeVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, UserNotAdminException;\n-\n-\t/**\n-\t * Removes role from group in a VO.\n-\t */\n-\tvoid removeVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, GroupNotAdminException;\n-\n-\t/**\n-\t * Checks whether the user is in role for Vo.\n-\t */\n-\tboolean isUserInRoleForVo(PerunSession session, User user, Role role, Vo vo);\n-\n-\t/**\n-\t * Checks whether the group is in role for Vo.\n-\t */\n-\tboolean isGroupInRoleForVo(PerunSession session, Group group, Role role, Vo vo);\n-\n-\t/**\n-\t * Gets list fo VOs for which the group has the role.\n-\t */\n-\tList<Integer> getVoIdsForGroupInRole(PerunSession sess, Group group, Role role) throws InternalErrorException;\n-\n-\t/**\n-\t * Gets list fo VOs for which the user has the role.\n-\t */\n-\tList<Integer> getVoIdsForUserInRole(PerunSession sess, User user, Role role) throws InternalErrorException;\n-}\n+ /**\n+  * Returns all user's roles.\n+  *\n+  * @param user\n+  * @return AuthzRoles object which contains all roles with perunbeans\n+  */\n+\n+\n+ AuthzRoles getRoles(User user) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the sponsoredUser.\n+  *\n+  * @param sess\n+  * @param sponsoredUser\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllSponsoredUserAuthz(PerunSession sess, User sponsoredUser) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the user.\n+  *\n+  * @param sess\n+  * @param user\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllUserAuthz(PerunSession sess, User user) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the vo\n+  *\n+  * @param sess\n+  * @param vo\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllAuthzForVo(PerunSession sess, Vo vo) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the group\n+  *\n+  * @param sess\n+  * @param group\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllAuthzForGroup(PerunSession sess, Group group) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the facility\n+  *\n+  * @param sess\n+  * @param facility\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllAuthzForFacility(PerunSession sess, Facility facility) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the resource\n+  *\n+  * @param sess\n+  * @param resource\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllAuthzForResource(PerunSession sess, Resource resource) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the service\n+  *\n+  * @param sess\n+  * @param service\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllAuthzForService(PerunSession sess, Service service) throws InternalErrorException;\n+\n+ /**\n+  * Removes all authz entries for the securityTeam\n+  *\n+  * @param sess\n+  * @param securityTeam\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removeAllAuthzForSecurityTeam(PerunSession sess, SecurityTeam securityTeam) throws InternalErrorException;\n+\n+ /**\n+  * Add user role admin for the facility\n+  *\n+  * @param sess\n+  * @param facility\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Add group of users role admin for the facility\n+  *\n+  * @param sess\n+  * @param facility\n+  * @param group\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Remove user role admin for the facility\n+  *\n+  * @param sess\n+  * @param facility\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws UserNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, Facility facility, User user) throws InternalErrorException, UserNotAdminException;\n+\n+ /**\n+  * Remove group of users role admin for the facility\n+  *\n+  * @param sess\n+  * @param facility\n+  * @param group\n+  * @throws InternalErrorException\n+  * @throws GroupNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, Facility facility, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+ /**\n+  * Add user role admin for the resource\n+  *\n+  * @param sess\n+  * @param resource\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Add group of users role admin for the resource\n+  *\n+  * @param sess\n+  * @param resource\n+  * @param group\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Remove user role admin for the resource\n+  *\n+  * @param sess\n+  * @param resource\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws UserNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, Resource resource, User user) throws InternalErrorException, UserNotAdminException;\n+\n+ /**\n+  * Remove group of users role admin for the resource\n+  *\n+  * @param sess\n+  * @param resource\n+  * @param group\n+  * @throws InternalErrorException\n+  * @throws GroupNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, Resource resource, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+ /**\n+  * Add user role admin for the sponsored user\n+  *\n+  * @param sess\n+  * @param sponsoredUser\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Add group of users role admin for the sponsored user\n+  *\n+  * @param sess\n+  * @param sponsoredUser\n+  * @param group\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Remove user role admin for the sponsoredUser\n+  *\n+  * @param sess\n+  * @param sponsoredUser\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws UserNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, User sponsoredUser, User user) throws InternalErrorException, UserNotAdminException;\n+\n+ /**\n+  * Remove group of users role admin for the sponsoredUser\n+  *\n+  * @param sess\n+  * @param sponsoredUser\n+  * @param group\n+  * @throws InternalErrorException\n+  * @throws GroupNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, User sponsoredUser, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+ /**\n+  * Add user role admin for the group\n+  *\n+  * @param sess\n+  * @param group\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Add group of users role admin for the group\n+  *\n+  * @param sess\n+  * @param group\n+  * @param authorizedGroup\n+  * @throws InternalErrorException\n+  * @throws AlreadyAdminException\n+  */\n+\n+\n+ void addAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Remove user role admin for the group\n+  *\n+  * @param sess\n+  * @param group\n+  * @param user\n+  * @throws InternalErrorException\n+  * @throws UserNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, Group group, User user) throws InternalErrorException, UserNotAdminException;\n+\n+ /**\n+  * Remove group of users role admin for the group\n+  *\n+  * @param sess\n+  * @param group\n+  * @param authorizedGroup\n+  * @throws InternalErrorException\n+  * @throws GroupNotAdminException\n+  */\n+\n+\n+ void removeAdmin(PerunSession sess, Group group, Group authorizedGroup) throws InternalErrorException, GroupNotAdminException;\n+\n+\n+ void addAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws AlreadyAdminException, InternalErrorException;\n+\n+\n+ void addAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws AlreadyAdminException, InternalErrorException;\n+\n+\n+ void removeAdmin(PerunSession sess, SecurityTeam securityTeam, User user) throws UserNotAdminException, InternalErrorException;\n+\n+\n+ void removeAdmin(PerunSession sess, SecurityTeam securityTeam, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+ /**\n+  * Make user to be perunAdmin\n+  *\n+  * @param sess\n+  * @param user\n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void makeUserPerunAdmin(PerunSession sess, User user) throws InternalErrorException;\n+\n+ /**\n+  * Remove role perunAdmin for user.\n+  *\n+  * @param sess\n+  * @param user \n+  * @throws InternalErrorException\n+  */\n+\n+\n+ void removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n+\n+ /**\n+  * Adds role for user in a VO.\n+  */\n+\n+\n+ void addVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Adds role for group in a VO.\n+  */\n+\n+\n+ void addVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, AlreadyAdminException;\n+\n+ /**\n+  * Removes role from user in a VO.\n+  */\n+\n+\n+ void removeVoRole(PerunSession sess, Role role, Vo vo, User user) throws InternalErrorException, UserNotAdminException;\n+\n+ /**\n+  * Removes role from group in a VO.\n+  */\n+\n+\n+ void removeVoRole(PerunSession sess, Role role, Vo vo, Group group) throws InternalErrorException, GroupNotAdminException;\n+\n+ /**\n+  * Checks whether the user is in role for Vo.\n+  */\n+\n+\n+ boolean isUserInRoleForVo(PerunSession session, User user, Role role, Vo vo);\n+\n+ /**\n+  * Checks whether the group is in role for Vo.\n+  */\n+\n+\n+ boolean isGroupInRoleForVo(PerunSession session, Group group, Role role, Vo vo);\n+\n+ /**\n+  * Gets list fo VOs for which the group has the role.\n+  */\n+\n+\n+ List<Integer> getVoIdsForGroupInRole(PerunSession sess, Group group, Role role) throws InternalErrorException;\n+\n+ /**\n+  * Gets list fo VOs for which the user has the role.\n+  */\n+\n+\n+ List<Integer> getVoIdsForUserInRole(PerunSession sess, User user, Role role) throws InternalErrorException;\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 399
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/184/AuthzResolverImplApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/184/AuthzResolverImplApi.java\nindex 6c6e37ae707..aec2b10daf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/184/AuthzResolverImplApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/184/AuthzResolverImplApi.java\n@@ -296,8 +296,8 @@ public interface AuthzResolverImplApi {\n \t * @param sess\n \t * @param user \n \t * @throws InternalErrorException\n-\t */\n-\tvoid removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n+\t */ void removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n+void removePerunAdmin(PerunSession sess, User user) throws InternalErrorException, UserNotAdminException;\n \n \t/**\n \t * Adds role for user in a VO.\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
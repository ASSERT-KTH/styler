{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3420",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "166",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "204",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3420/StreamingBatchOperationResults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3420/StreamingBatchOperationResults.java\nindex 01b3249bfb0..f4efa518d60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3420/StreamingBatchOperationResults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3420/StreamingBatchOperationResults.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.batch;\n \n import org.codehaus.jackson.JsonGenerator;\n@@ -41,175 +42,170 @@ import javax.ws.rs.core.Response;\n  */\n public class StreamingBatchOperationResults\n {\n-    public static final int HEAD_BUFFER = 10;\n-    public static final int IS_ERROR = -1;\n-    private final Map<Integer,String> locations = new HashMap<>();\n-    private final JsonGenerator g;\n-    private final ServletOutputStream output;\n-    private ByteArrayOutputStream errorStream;\n-    private int bytesWritten;\n-    private char[] head = new char[HEAD_BUFFER];\n-\n-    public StreamingBatchOperationResults( JsonGenerator g, ServletOutputStream output ) throws IOException\n+  public static final int HEAD_BUFFER = 10;\n+  public static final int IS_ERROR = -1;\n+  private final Map<Integer, String> locations = new HashMap<>();\n+  private final JsonGenerator g;\n+  private final ServletOutputStream output;\n+  private ByteArrayOutputStream errorStream;\n+  private int bytesWritten;\n+  private char[] head = new char[HEAD_BUFFER];\n+\n+  public StreamingBatchOperationResults(JsonGenerator g, ServletOutputStream output) throws IOException\n+  {\n+    this.g = g;\n+    this.output = output;\n+    g.writeStartArray();\n+  }\n+\n+  public void startOperation(String from, Integer id) throws IOException\n+  {\n+    bytesWritten = 0;\n+    g.writeStartObject();\n+    if (id != null)\n     {\n-        this.g = g;\n-        this.output = output;\n-        g.writeStartArray();\n+      g.writeNumberField(\"id\", id);\n     }\n-\n-    public void startOperation( String from, Integer id ) throws IOException\n+    g.writeStringField(\"from\", from);\n+    g.writeRaw(\",\\\"body\\\":\");\n+    g.flush();\n+  }\n+\n+  public void addOperationResult(int status, Integer id, String location) throws IOException\n+  {\n+    finishBody();\n+    if (location != null)\n     {\n-        bytesWritten = 0;\n-        g.writeStartObject();\n-        if ( id != null )\n-        {\n-            g.writeNumberField( \"id\", id );\n-        }\n-        g.writeStringField( \"from\", from );\n-        g.writeRaw( \",\\\"body\\\":\" );\n-        g.flush();\n+      locations.put(id, location);\n+      g.writeStringField(\"location\", location);\n     }\n+    g.writeNumberField(\"status\", status);\n+    g.writeEndObject();\n+  }\n \n-    public void addOperationResult( int status, Integer id, String location ) throws IOException\n+  private void finishBody() throws IOException\n+  {\n+    if (bytesWritten == 0)\n     {\n-        finishBody();\n-        if ( location != null )\n-        {\n-            locations.put( id, location );\n-            g.writeStringField( \"location\", location );\n-        }\n-        g.writeNumberField( \"status\", status );\n-        g.writeEndObject();\n-    }\n-\n-    private void finishBody() throws IOException\n+      g.writeRaw(\"null\");\n+    } else if (bytesWritten < HEAD_BUFFER)\n     {\n-        if ( bytesWritten == 0 )\n-        {\n-            g.writeRaw( \"null\" );\n-        }\n-        else if ( bytesWritten < HEAD_BUFFER )\n-        {\n-            g.writeRaw( head, 0, bytesWritten );\n-        }\n-    }\n-\n-    public ServletOutputStream getServletOutputStream()\n-    {\n-        return new ServletOutputStream()\n-        {\n-            @Override\n-            public void write( int i ) throws IOException\n-            {\n-                if ( redirectError( i ) )\n-                {\n-                    return;\n-                }\n-                writeChar( i );\n-                bytesWritten++;\n-                checkHead();\n-            }\n-\n-            @Override\n-            public boolean isReady()\n-            {\n-                return true;\n-            }\n-\n-            @Override\n-            public void setWriteListener( WriteListener writeListener )\n-            {\n-                try\n-                {\n-                    writeListener.onWritePossible();\n-                }\n-                catch ( IOException e )\n-                {\n-                    // Ignore\n-                }\n-            }\n-        };\n+      g.writeRaw(head, 0, bytesWritten);\n     }\n+  }\n \n-    private boolean redirectError( int i )\n+  public ServletOutputStream getServletOutputStream()\n+  {\n+    return new ServletOutputStream()\n     {\n-        if ( bytesWritten != IS_ERROR )\n+      @Override\n+      public void write(int i) throws IOException\n+      {\n+        if (redirectError(i))\n         {\n-            return false;\n+          return;\n         }\n-        errorStream.write( i );\n+        writeChar(i);\n+        bytesWritten++;\n+        checkHead();\n+      }\n+\n+      @Override\n+      public boolean isReady()\n+      {\n         return true;\n-    }\n+      }\n \n-    private void writeChar( int i ) throws IOException\n-    {\n-        if ( bytesWritten < HEAD_BUFFER )\n+      @Override\n+      public void setWriteListener(WriteListener writeListener)\n+      {\n+        try\n         {\n-            head[bytesWritten] = (char) i;\n-        }\n-        else\n+          writeListener.onWritePossible();\n+        } catch (IOException e)\n         {\n-            output.write( i );\n+          // Ignore\n         }\n-    }\n+      }\n+    };\n+  }\n \n-    private void checkHead() throws IOException\n+  private boolean redirectError(int i)\n+  {\n+    if (bytesWritten != IS_ERROR)\n     {\n-        if ( bytesWritten == HEAD_BUFFER )\n-        {\n-            if ( isJson( head ) )\n-            {\n-                for ( char c : head )\n-                {\n-                    output.write( c );\n-                }\n-            }\n-            else\n-            {\n-                errorStream = new ByteArrayOutputStream( 1024 );\n-                for ( char c : head )\n-                {\n-                    errorStream.write( c );\n-                }\n-                bytesWritten = IS_ERROR;\n-            }\n-        }\n+      return false;\n     }\n+    errorStream.write(i);\n+    return true;\n+  }\n \n-    private boolean isJson( char[] head )\n+  private void writeChar(int i) throws IOException\n+  {\n+    if (bytesWritten < HEAD_BUFFER)\n     {\n-        return String.valueOf( head ).matches( \"\\\\s*([\\\\[\\\"{]|true|false).*\" );\n-    }\n-\n-    public Map<Integer,String> getLocations()\n+      head[bytesWritten] = (char) i;\n+    } else\n     {\n-        return locations;\n+      output.write(i);\n     }\n+  }\n \n-    public void close() throws IOException\n+  private void checkHead() throws IOException\n+  {\n+    if (bytesWritten == HEAD_BUFFER)\n     {\n-        g.writeEndArray();\n-        g.close();\n-    }\n-\n-    public void writeError( int status, String message ) throws IOException\n-    {\n-        if ( bytesWritten == 0 || bytesWritten == IS_ERROR )\n-        {\n-            g.writeRaw( \"null\" );\n-        }\n-        g.writeNumberField( \"status\", status );\n-        if ( message != null && !message.trim().equals( Response.Status.fromStatusCode( status ).getReasonPhrase() ) )\n+      if (isJson(head))\n+      {\n+        for (char c : head)\n         {\n-            g.writeStringField( \"message\", message );\n+          output.write(c);\n         }\n-        else\n+      } else\n+      {\n+        errorStream = new ByteArrayOutputStream(1024);\n+        for (char c : head)\n         {\n-            if ( errorStream != null )\n-            {\n-                g.writeStringField( \"message\", errorStream.toString( StandardCharsets.UTF_8.name() ) );\n-            }\n+          errorStream.write(c);\n         }\n-        g.close();\n+        bytesWritten = IS_ERROR;\n+      }\n+    }\n+  }\n+\n+  private boolean isJson(char[] head)\n+  {\n+    return String.valueOf(head).matches(\"\\\\s*([\\\\[\\\"{]|true|false).*\");\n+  }\n+\n+  public Map<Integer, String> getLocations()\n+  {\n+    return locations;\n+  }\n+\n+  public void close() throws IOException\n+  {\n+    g.writeEndArray();\n+    g.close();\n+  }\n+\n+  public void writeError(int status, String message) throws IOException\n+  {\n+    if (bytesWritten == 0 || bytesWritten == IS_ERROR)\n+    {\n+      g.writeRaw(\"null\");\n+    }\n+    g.writeNumberField(\"status\", status);\n+    if (message != null && !message.trim().equals(Response.Status.fromStatusCode(status).getReasonPhrase()))\n+    {\n+      g.writeStringField(\"message\", message);\n+    } else\n+    {\n+      if (errorStream != null)\n+      {\n+        g.writeStringField(\"message\", errorStream.toString(StandardCharsets.UTF_8.name()));\n+      }\n     }\n+    g.close();\n+  }\n }\n",
            "diff_size": 231
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3420/StreamingBatchOperationResults.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3420/StreamingBatchOperationResults.java\nindex 01b3249bfb0..64d4718fbec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3420/StreamingBatchOperationResults.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3420/StreamingBatchOperationResults.java\n@@ -42,7 +42,8 @@ import javax.ws.rs.core.Response;\n public class StreamingBatchOperationResults\n {\n     public static final int HEAD_BUFFER = 10;\n-    public static final int IS_ERROR = -1;\n+\n+public static final int IS_ERROR = -1;\n     private final Map<Integer,String> locations = new HashMap<>();\n     private final JsonGenerator g;\n     private final ServletOutputStream output;\n@@ -105,7 +106,8 @@ public class StreamingBatchOperationResults\n                 {\n                     return;\n                 }\n-                writeChar( i );\n+\n+writeChar( i );\n                 bytesWritten++;\n                 checkHead();\n             }\n@@ -171,7 +173,8 @@ public class StreamingBatchOperationResults\n                 {\n                     errorStream.write( c );\n                 }\n-                bytesWritten = IS_ERROR;\n+\n+bytesWritten = IS_ERROR;\n             }\n         }\n     }\n@@ -212,4 +215,4 @@ public class StreamingBatchOperationResults\n         }\n         g.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
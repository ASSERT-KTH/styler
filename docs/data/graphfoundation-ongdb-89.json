{
    "project_name": "graphfoundation-ongdb",
    "error_id": "89",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/89/Stage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/89/Stage.java\nindex 2312c977d9f..623a4859bf9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/89/Stage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/89/Stage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n /**\n@@ -24,62 +25,62 @@ package org.neo4j.consistency.checking.full;\n  */\n public interface Stage\n {\n-    boolean isParallel();\n+  boolean isParallel();\n \n-    boolean isForward();\n+  boolean isForward();\n \n-    String getPurpose();\n+  String getPurpose();\n \n-    int ordinal();\n+  int ordinal();\n \n-    int[] getCacheSlotSizes();\n+  int[] getCacheSlotSizes();\n \n-    class Adapter implements Stage\n-    {\n-        private final boolean parallel;\n-        private final boolean forward;\n-        private final String purpose;\n-        private final int[] cacheSlotSizes;\n+  class Adapter implements Stage\n+  {\n+    private final boolean parallel;\n+    private final boolean forward;\n+    private final String purpose;\n+    private final int[] cacheSlotSizes;\n \n-        public Adapter( boolean parallel, boolean forward, String purpose, int... cacheSlotSizes )\n-        {\n-            this.parallel = parallel;\n-            this.forward = forward;\n-            this.purpose = purpose;\n-            this.cacheSlotSizes = cacheSlotSizes;\n-        }\n+    public Adapter(boolean parallel, boolean forward, String purpose, int... cacheSlotSizes)\n+    {\n+      this.parallel = parallel;\n+      this.forward = forward;\n+      this.purpose = purpose;\n+      this.cacheSlotSizes = cacheSlotSizes;\n+    }\n \n-        @Override\n-        public boolean isParallel()\n-        {\n-            return parallel;\n-        }\n+    @Override\n+    public boolean isParallel()\n+    {\n+      return parallel;\n+    }\n \n-        @Override\n-        public boolean isForward()\n-        {\n-            return forward;\n-        }\n+    @Override\n+    public boolean isForward()\n+    {\n+      return forward;\n+    }\n \n-        @Override\n-        public String getPurpose()\n-        {\n-            return purpose;\n-        }\n+    @Override\n+    public String getPurpose()\n+    {\n+      return purpose;\n+    }\n \n-        @Override\n-        public int ordinal()\n-        {\n-            return -1;\n-        }\n+    @Override\n+    public int ordinal()\n+    {\n+      return -1;\n+    }\n \n-        @Override\n-        public int[] getCacheSlotSizes()\n-        {\n-            return cacheSlotSizes;\n-        }\n+    @Override\n+    public int[] getCacheSlotSizes()\n+    {\n+      return cacheSlotSizes;\n     }\n+  }\n \n-    Stage SEQUENTIAL_FORWARD = new Adapter( false, true, \"General purpose\" );\n-    Stage PARALLEL_FORWARD = new Adapter( true, true, \"General purpose\" );\n+  Stage SEQUENTIAL_FORWARD = new Adapter(false, true, \"General purpose\");\n+  Stage PARALLEL_FORWARD = new Adapter(true, true, \"General purpose\");\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/89/Stage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/89/Stage.java\nindex 2312c977d9f..99af84f7233 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/89/Stage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/89/Stage.java\n@@ -82,4 +82,4 @@ public interface Stage\n \n     Stage SEQUENTIAL_FORWARD = new Adapter( false, true, \"General purpose\" );\n     Stage PARALLEL_FORWARD = new Adapter( true, true, \"General purpose\" );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
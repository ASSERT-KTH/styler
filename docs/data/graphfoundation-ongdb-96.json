{
    "project_name": "graphfoundation-ongdb",
    "error_id": "96",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/96/CausalClusteringSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/96/CausalClusteringSettings.java\nindex e4514f69eb2..8cc1a12de10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/96/CausalClusteringSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/96/CausalClusteringSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core;\n \n import java.io.File;\n@@ -70,446 +71,446 @@ import static org.neo4j.kernel.configuration.Settings.options;\n import static org.neo4j.kernel.configuration.Settings.prefixSetting;\n import static org.neo4j.kernel.configuration.Settings.setting;\n \n-@Description( \"Settings for Causal Clustering\" )\n+@Description(\"Settings for Causal Clustering\")\n public class CausalClusteringSettings implements LoadableConfig\n {\n-    @Description( \"Time out for a new member to catch up\" )\n-    public static final Setting<Duration> join_catch_up_timeout =\n-            setting( \"causal_clustering.join_catch_up_timeout\", DURATION, \"10m\" );\n-\n-    @Description( \"The time limit within which a new leader election will occur if no messages are received.\" )\n-    public static final Setting<Duration> leader_election_timeout =\n-            setting( \"causal_clustering.leader_election_timeout\", DURATION, \"7s\" );\n-\n-    @Description( \"Prevents the current instance from volunteering to become Raft leader. Defaults to false, and \" +\n-            \"should only be used in exceptional circumstances by expert users. Using this can result in reduced \" +\n-            \"availability for the cluster.\" )\n-    public static final Setting<Boolean> refuse_to_be_leader =\n-            setting( \"causal_clustering.refuse_to_be_leader\", BOOLEAN, FALSE );\n-\n-    @Description( \"The name of the database being hosted by this server instance. This configuration setting may be safely ignored \" +\n-            \"unless deploying a multicluster. Instances may be allocated to distinct sub-clusters by assigning them distinct database \" +\n-            \"names using this setting. For instance if you had 6 instances you could form 2 sub-clusters by assigning half \" +\n-            \"the database name \\\"foo\\\", half the name \\\"bar\\\". The setting value must match exactly between members of the same sub-cluster. \" +\n-            \"This setting is a one-off: once an instance is configured with a database name it may not be changed in future without using \" +\n-            \"neo4j-admin unbind.\" )\n-    public static final Setting<String> database =\n-            setting( \"causal_clustering.database\", STRING, \"default\" );\n-\n-    @Description( \"Enable pre-voting extension to the Raft protocol (this is breaking and must match between the core cluster members)\" )\n-    public static final Setting<Boolean> enable_pre_voting =\n-            setting( \"causal_clustering.enable_pre_voting\", BOOLEAN, FALSE );\n-\n-    @Description( \"The maximum batch size when catching up (in unit of entries)\" )\n-    public static final Setting<Integer> catchup_batch_size =\n-            setting( \"causal_clustering.catchup_batch_size\", INTEGER, \"64\" );\n-\n-    @Description( \"The maximum lag allowed before log shipping pauses (in unit of entries)\" )\n-    public static final Setting<Integer> log_shipping_max_lag =\n-            setting( \"causal_clustering.log_shipping_max_lag\", INTEGER, \"256\" );\n-\n-    @Description( \"Size of the RAFT in queue\" )\n-    @Internal\n-    public static final Setting<Integer> raft_in_queue_size =\n-            setting( \"causal_clustering.raft_in_queue_size\", INTEGER, \"64\" );\n-\n-    @Description( \"Largest batch processed by RAFT\" )\n-    @Internal\n-    public static final Setting<Integer> raft_in_queue_max_batch =\n-            setting( \"causal_clustering.raft_in_queue_max_batch\", INTEGER, \"64\" );\n-\n-    @Description( \"Expected number of Core machines in the cluster before startup\" )\n-    @Deprecated\n-    @ReplacedBy( \"causal_clustering.minimum_core_cluster_size_at_formation and causal_clustering.minimum_core_cluster_size_at_runtime\" )\n-    public static final Setting<Integer> expected_core_cluster_size =\n-            setting( \"causal_clustering.expected_core_cluster_size\", INTEGER, \"3\" );\n-\n-    @Description( \"Minimum number of Core machines in the cluster at formation. The expected_core_cluster size setting is used when bootstrapping the \" +\n-            \"cluster on first formation. A cluster will not form without the configured amount of cores and this should in general be configured to the\" +\n-            \" full and fixed amount. When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used \" +\n-            \"to define the minimum size of *each* sub-cluster at formation.\" )\n-    public static final Setting<Integer> minimum_core_cluster_size_at_formation =\n-            buildSetting( \"causal_clustering.minimum_core_cluster_size_at_formation\", INTEGER, expected_core_cluster_size.getDefaultValue() )\n-                    .constraint( min( 2 ) ).build();\n-\n-    @Description( \"Minimum number of Core machines required to be available at runtime. The consensus group size (core machines successfully voted into the \" +\n-            \"Raft) can shrink and grow dynamically but bounded on the lower end at this number. The intention is in almost all cases for users to leave this \" +\n-            \"setting alone. If you have 5 machines then you can survive failures down to 3 remaining, e.g. with 2 dead members. The three remaining can \" +\n-            \"still vote another replacement member in successfully up to a total of 6 (2 of which are still dead) and then after this, one of the \" +\n-            \"superfluous dead members will be immediately and automatically voted out (so you are left with 5 members in the consensus group, 1 of which \" +\n-            \"is currently dead). Operationally you can now bring the last machine up by bringing in another replacement or repairing the dead one. \" +\n-            \"When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used to define the minimum size \" +\n-            \"of *each* sub-cluster at runtime.\" )\n-    public static final Setting<Integer> minimum_core_cluster_size_at_runtime =\n-            buildSetting( \"causal_clustering.minimum_core_cluster_size_at_runtime\", INTEGER, \"3\" ).constraint( min( 2 ) ).build();\n-\n-    @Description( \"Network interface and port for the transaction shipping server to listen on. Please note that it is also possible to run the backup \" +\n-            \"client against this port so always limit access to it via the firewall and configure an ssl policy.\" )\n-    public static final Setting<ListenSocketAddress> transaction_listen_address =\n-            listenAddress( \"causal_clustering.transaction_listen_address\", 6000 );\n-\n-    @Description( \"Advertised hostname/IP address and port for the transaction shipping server.\" )\n-    public static final Setting<AdvertisedSocketAddress> transaction_advertised_address =\n-            advertisedAddress( \"causal_clustering.transaction_advertised_address\", transaction_listen_address );\n-\n-    @Description( \"Network interface and port for the RAFT server to listen on.\" )\n-    public static final Setting<ListenSocketAddress> raft_listen_address =\n-            listenAddress( \"causal_clustering.raft_listen_address\", 7000 );\n-\n-    @Description( \"Advertised hostname/IP address and port for the RAFT server.\" )\n-    public static final Setting<AdvertisedSocketAddress> raft_advertised_address =\n-            advertisedAddress( \"causal_clustering.raft_advertised_address\", raft_listen_address );\n-\n-    @Description( \"Host and port to bind the cluster member discovery management communication.\" )\n-    public static final Setting<ListenSocketAddress> discovery_listen_address =\n-            listenAddress( \"causal_clustering.discovery_listen_address\", 5000 );\n-\n-    @Description( \"Advertised cluster member discovery management communication.\" )\n-    public static final Setting<AdvertisedSocketAddress> discovery_advertised_address =\n-            advertisedAddress( \"causal_clustering.discovery_advertised_address\", discovery_listen_address );\n-\n-    @Description( \"A comma-separated list of other members of the cluster to join.\" )\n-    public static final Setting<List<AdvertisedSocketAddress>> initial_discovery_members =\n-            setting( \"causal_clustering.initial_discovery_members\", list( \",\", ADVERTISED_SOCKET_ADDRESS ),\n-                    NO_DEFAULT );\n-\n-    @Description( \"Type of in-flight cache.\" )\n-    public static final Setting<InFlightCacheFactory.Type> in_flight_cache_type =\n-            setting( \"causal_clustering.in_flight_cache.type\", options( InFlightCacheFactory.Type.class, true ),\n-                    InFlightCacheFactory.Type.CONSECUTIVE.name() );\n-\n-    @Description( \"The maximum number of entries in the in-flight cache.\" )\n-    public static final Setting<Integer> in_flight_cache_max_entries =\n-            setting( \"causal_clustering.in_flight_cache.max_entries\", INTEGER, \"1024\" );\n-\n-    @Description( \"The maximum number of bytes in the in-flight cache.\" )\n-    public static final Setting<Long> in_flight_cache_max_bytes =\n-            setting( \"causal_clustering.in_flight_cache.max_bytes\", BYTES, \"2G\" );\n-\n-    public enum DiscoveryType\n+  @Description(\"Time out for a new member to catch up\")\n+  public static final Setting<Duration> join_catch_up_timeout =\n+      setting(\"causal_clustering.join_catch_up_timeout\", DURATION, \"10m\");\n+\n+  @Description(\"The time limit within which a new leader election will occur if no messages are received.\")\n+  public static final Setting<Duration> leader_election_timeout =\n+      setting(\"causal_clustering.leader_election_timeout\", DURATION, \"7s\");\n+\n+  @Description(\"Prevents the current instance from volunteering to become Raft leader. Defaults to false, and \" +\n+      \"should only be used in exceptional circumstances by expert users. Using this can result in reduced \" +\n+      \"availability for the cluster.\")\n+  public static final Setting<Boolean> refuse_to_be_leader =\n+      setting(\"causal_clustering.refuse_to_be_leader\", BOOLEAN, FALSE);\n+\n+  @Description(\"The name of the database being hosted by this server instance. This configuration setting may be safely ignored \" +\n+      \"unless deploying a multicluster. Instances may be allocated to distinct sub-clusters by assigning them distinct database \" +\n+      \"names using this setting. For instance if you had 6 instances you could form 2 sub-clusters by assigning half \" +\n+      \"the database name \\\"foo\\\", half the name \\\"bar\\\". The setting value must match exactly between members of the same sub-cluster. \" +\n+      \"This setting is a one-off: once an instance is configured with a database name it may not be changed in future without using \" +\n+      \"neo4j-admin unbind.\")\n+  public static final Setting<String> database =\n+      setting(\"causal_clustering.database\", STRING, \"default\");\n+\n+  @Description(\"Enable pre-voting extension to the Raft protocol (this is breaking and must match between the core cluster members)\")\n+  public static final Setting<Boolean> enable_pre_voting =\n+      setting(\"causal_clustering.enable_pre_voting\", BOOLEAN, FALSE);\n+\n+  @Description(\"The maximum batch size when catching up (in unit of entries)\")\n+  public static final Setting<Integer> catchup_batch_size =\n+      setting(\"causal_clustering.catchup_batch_size\", INTEGER, \"64\");\n+\n+  @Description(\"The maximum lag allowed before log shipping pauses (in unit of entries)\")\n+  public static final Setting<Integer> log_shipping_max_lag =\n+      setting(\"causal_clustering.log_shipping_max_lag\", INTEGER, \"256\");\n+\n+  @Description(\"Size of the RAFT in queue\")\n+  @Internal\n+  public static final Setting<Integer> raft_in_queue_size =\n+      setting(\"causal_clustering.raft_in_queue_size\", INTEGER, \"64\");\n+\n+  @Description(\"Largest batch processed by RAFT\")\n+  @Internal\n+  public static final Setting<Integer> raft_in_queue_max_batch =\n+      setting(\"causal_clustering.raft_in_queue_max_batch\", INTEGER, \"64\");\n+\n+  @Description(\"Expected number of Core machines in the cluster before startup\")\n+  @Deprecated\n+  @ReplacedBy(\"causal_clustering.minimum_core_cluster_size_at_formation and causal_clustering.minimum_core_cluster_size_at_runtime\")\n+  public static final Setting<Integer> expected_core_cluster_size =\n+      setting(\"causal_clustering.expected_core_cluster_size\", INTEGER, \"3\");\n+\n+  @Description(\"Minimum number of Core machines in the cluster at formation. The expected_core_cluster size setting is used when bootstrapping the \" +\n+      \"cluster on first formation. A cluster will not form without the configured amount of cores and this should in general be configured to the\" +\n+      \" full and fixed amount. When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used \" +\n+      \"to define the minimum size of *each* sub-cluster at formation.\")\n+  public static final Setting<Integer> minimum_core_cluster_size_at_formation =\n+      buildSetting(\"causal_clustering.minimum_core_cluster_size_at_formation\", INTEGER, expected_core_cluster_size.getDefaultValue())\n+          .constraint(min(2)).build();\n+\n+  @Description(\"Minimum number of Core machines required to be available at runtime. The consensus group size (core machines successfully voted into the \" +\n+      \"Raft) can shrink and grow dynamically but bounded on the lower end at this number. The intention is in almost all cases for users to leave this \" +\n+      \"setting alone. If you have 5 machines then you can survive failures down to 3 remaining, e.g. with 2 dead members. The three remaining can \" +\n+      \"still vote another replacement member in successfully up to a total of 6 (2 of which are still dead) and then after this, one of the \" +\n+      \"superfluous dead members will be immediately and automatically voted out (so you are left with 5 members in the consensus group, 1 of which \" +\n+      \"is currently dead). Operationally you can now bring the last machine up by bringing in another replacement or repairing the dead one. \" +\n+      \"When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used to define the minimum size \" +\n+      \"of *each* sub-cluster at runtime.\")\n+  public static final Setting<Integer> minimum_core_cluster_size_at_runtime =\n+      buildSetting(\"causal_clustering.minimum_core_cluster_size_at_runtime\", INTEGER, \"3\").constraint(min(2)).build();\n+\n+  @Description(\"Network interface and port for the transaction shipping server to listen on. Please note that it is also possible to run the backup \" +\n+      \"client against this port so always limit access to it via the firewall and configure an ssl policy.\")\n+  public static final Setting<ListenSocketAddress> transaction_listen_address =\n+      listenAddress(\"causal_clustering.transaction_listen_address\", 6000);\n+\n+  @Description(\"Advertised hostname/IP address and port for the transaction shipping server.\")\n+  public static final Setting<AdvertisedSocketAddress> transaction_advertised_address =\n+      advertisedAddress(\"causal_clustering.transaction_advertised_address\", transaction_listen_address);\n+\n+  @Description(\"Network interface and port for the RAFT server to listen on.\")\n+  public static final Setting<ListenSocketAddress> raft_listen_address =\n+      listenAddress(\"causal_clustering.raft_listen_address\", 7000);\n+\n+  @Description(\"Advertised hostname/IP address and port for the RAFT server.\")\n+  public static final Setting<AdvertisedSocketAddress> raft_advertised_address =\n+      advertisedAddress(\"causal_clustering.raft_advertised_address\", raft_listen_address);\n+\n+  @Description(\"Host and port to bind the cluster member discovery management communication.\")\n+  public static final Setting<ListenSocketAddress> discovery_listen_address =\n+      listenAddress(\"causal_clustering.discovery_listen_address\", 5000);\n+\n+  @Description(\"Advertised cluster member discovery management communication.\")\n+  public static final Setting<AdvertisedSocketAddress> discovery_advertised_address =\n+      advertisedAddress(\"causal_clustering.discovery_advertised_address\", discovery_listen_address);\n+\n+  @Description(\"A comma-separated list of other members of the cluster to join.\")\n+  public static final Setting<List<AdvertisedSocketAddress>> initial_discovery_members =\n+      setting(\"causal_clustering.initial_discovery_members\", list(\",\", ADVERTISED_SOCKET_ADDRESS),\n+          NO_DEFAULT);\n+\n+  @Description(\"Type of in-flight cache.\")\n+  public static final Setting<InFlightCacheFactory.Type> in_flight_cache_type =\n+      setting(\"causal_clustering.in_flight_cache.type\", options(InFlightCacheFactory.Type.class, true),\n+          InFlightCacheFactory.Type.CONSECUTIVE.name());\n+\n+  @Description(\"The maximum number of entries in the in-flight cache.\")\n+  public static final Setting<Integer> in_flight_cache_max_entries =\n+      setting(\"causal_clustering.in_flight_cache.max_entries\", INTEGER, \"1024\");\n+\n+  @Description(\"The maximum number of bytes in the in-flight cache.\")\n+  public static final Setting<Long> in_flight_cache_max_bytes =\n+      setting(\"causal_clustering.in_flight_cache.max_bytes\", BYTES, \"2G\");\n+\n+  public enum DiscoveryType\n+  {\n+    DNS((logProvider, userLogProvider) -> new DnsHostnameResolver(logProvider, userLogProvider, new DomainNameResolverImpl())),\n+\n+    LIST((logProvider, userLogProvider) -> new NoOpHostnameResolver()),\n+\n+    SRV((logProvider, userLogProvider) -> new SrvHostnameResolver(logProvider, userLogProvider, new SrvRecordResolverImpl()));\n+\n+    private final BiFunction<LogProvider, LogProvider, HostnameResolver> resolverSupplier;\n+\n+    DiscoveryType(BiFunction<LogProvider, LogProvider, HostnameResolver> resolverSupplier)\n     {\n-        DNS( ( logProvider, userLogProvider ) -> new DnsHostnameResolver( logProvider, userLogProvider, new DomainNameResolverImpl() ) ),\n-\n-        LIST( ( logProvider, userLogProvider ) -> new NoOpHostnameResolver() ),\n-\n-        SRV( ( logProvider, userLogProvider ) -> new SrvHostnameResolver( logProvider, userLogProvider, new SrvRecordResolverImpl() ) );\n-\n-        private final BiFunction<LogProvider,LogProvider,HostnameResolver> resolverSupplier;\n-\n-        DiscoveryType( BiFunction<LogProvider,LogProvider,HostnameResolver> resolverSupplier )\n-        {\n-            this.resolverSupplier = resolverSupplier;\n-        }\n+      this.resolverSupplier = resolverSupplier;\n+    }\n \n-        public HostnameResolver getHostnameResolver( LogProvider logProvider, LogProvider userLogProvider )\n-        {\n-            return this.resolverSupplier.apply( logProvider, userLogProvider );\n-        }\n+    public HostnameResolver getHostnameResolver(LogProvider logProvider, LogProvider userLogProvider)\n+    {\n+      return this.resolverSupplier.apply(logProvider, userLogProvider);\n     }\n+  }\n \n-    @Description( \"Configure the discovery type used for cluster name resolution\" )\n-    public static final Setting<DiscoveryType> discovery_type =\n-            setting( \"causal_clustering.discovery_type\", options( DiscoveryType.class ), DiscoveryType.LIST.name() );\n+  @Description(\"Configure the discovery type used for cluster name resolution\")\n+  public static final Setting<DiscoveryType> discovery_type =\n+      setting(\"causal_clustering.discovery_type\", options(DiscoveryType.class), DiscoveryType.LIST.name());\n \n-    @Description( \"Prevents the network middleware from dumping its own logs. Defaults to true.\" )\n-    public static final Setting<Boolean> disable_middleware_logging =\n-            setting( \"causal_clustering.disable_middleware_logging\", BOOLEAN, TRUE );\n+  @Description(\"Prevents the network middleware from dumping its own logs. Defaults to true.\")\n+  public static final Setting<Boolean> disable_middleware_logging =\n+      setting(\"causal_clustering.disable_middleware_logging\", BOOLEAN, TRUE);\n \n-    @Description( \"The level of middleware logging\" )\n-    public static final Setting<Integer> middleware_logging_level =\n-            setting( \"causal_clustering.middleware_logging.level\", INTEGER, Integer.toString( Level.FINE.intValue() ) );\n-\n-    @Internal // not supported yet\n-    @Description( \"Hazelcast license key\" )\n-    public static final Setting<String> hazelcast_license_key =\n-            setting( \"hazelcast.license_key\", STRING, NO_DEFAULT );\n+  @Description(\"The level of middleware logging\")\n+  public static final Setting<Integer> middleware_logging_level =\n+      setting(\"causal_clustering.middleware_logging.level\", INTEGER, Integer.toString(Level.FINE.intValue()));\n+\n+  @Internal // not supported yet\n+  @Description(\"Hazelcast license key\")\n+  public static final Setting<String> hazelcast_license_key =\n+      setting(\"hazelcast.license_key\", STRING, NO_DEFAULT);\n \n-    @Description( \"The maximum file size before the storage file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> last_flushed_state_size =\n-            setting( \"causal_clustering.last_applied_state_size\", INTEGER, \"1000\" );\n+  @Description(\"The maximum file size before the storage file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> last_flushed_state_size =\n+      setting(\"causal_clustering.last_applied_state_size\", INTEGER, \"1000\");\n \n-    @Description( \"The maximum file size before the ID allocation file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> id_alloc_state_size =\n-            setting( \"causal_clustering.id_alloc_state_size\", INTEGER, \"1000\" );\n-\n-    @Description( \"The maximum file size before the membership state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> raft_membership_state_size =\n-            setting( \"causal_clustering.raft_membership_state_size\", INTEGER, \"1000\" );\n-\n-    @Description( \"The maximum file size before the vote state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> vote_state_size =\n-            setting( \"causal_clustering.raft_vote_state_size\", INTEGER, \"1000\" );\n-\n-    @Description( \"The maximum file size before the term state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> term_state_size =\n-            setting( \"causal_clustering.raft_term_state_size\", INTEGER, \"1000\" );\n-\n-    @Description( \"The maximum file size before the global session tracker state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> global_session_tracker_state_size =\n-            setting( \"causal_clustering.global_session_tracker_state_size\", INTEGER, \"1000\" );\n-\n-    @Description( \"The maximum file size before the replicated lock token state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> replicated_lock_token_state_size =\n-            setting( \"causal_clustering.replicated_lock_token_state_size\", INTEGER, \"1000\" );\n-\n-    @Description( \"The maximum amount of data which can be in the replication stage concurrently.\" )\n-    public static final Setting<Long> replication_total_size_limit =\n-            setting( \"causal_clustering.replication_total_size_limit\", BYTES, \"128M\" );\n-\n-    @Description( \"The initial timeout until replication is retried. The timeout will increase exponentially.\" )\n-    public static final Setting<Duration> replication_retry_timeout_base =\n-            setting( \"causal_clustering.replication_retry_timeout_base\", DURATION, \"10s\" );\n-\n-    @Description( \"The upper limit for the exponentially incremented retry timeout.\" )\n-    public static final Setting<Duration> replication_retry_timeout_limit =\n-            setting( \"causal_clustering.replication_retry_timeout_limit\", DURATION, \"60s\" );\n-\n-    @Description( \"The retry timeout for finding a leader for replication. Relevant during leader elections.\" )\n-    public static final Setting<Duration> replication_leader_retry_timeout =\n-            setting( \"causal_clustering.replication_leader\", DURATION, \"500ms\" );\n-\n-    @Description( \"The number of operations to be processed before the state machines flush to disk\" )\n-    public static final Setting<Integer> state_machine_flush_window_size =\n-            setting( \"causal_clustering.state_machine_flush_window_size\", INTEGER, \"4096\" );\n-\n-    @Description( \"The maximum number of operations to be batched during applications of operations in the state machines\" )\n-    public static final Setting<Integer> state_machine_apply_max_batch_size =\n-            setting( \"causal_clustering.state_machine_apply_max_batch_size\", INTEGER, \"16\" );\n-\n-    @Description( \"RAFT log pruning strategy\" )\n-    public static final Setting<String> raft_log_pruning_strategy =\n-            setting( \"causal_clustering.raft_log_prune_strategy\", STRING, \"1g size\" );\n-\n-    @Description( \"RAFT log implementation\" )\n-    public static final Setting<String> raft_log_implementation =\n-            setting( \"causal_clustering.raft_log_implementation\", STRING, \"SEGMENTED\" );\n-\n-    @Description( \"RAFT log rotation size\" )\n-    public static final Setting<Long> raft_log_rotation_size =\n-            buildSetting( \"causal_clustering.raft_log_rotation_size\", BYTES, \"250M\" ).constraint( min( 1024L ) ).build();\n-\n-    @Description( \"RAFT log reader pool size\" )\n-    public static final Setting<Integer> raft_log_reader_pool_size =\n-            setting( \"causal_clustering.raft_log_reader_pool_size\", INTEGER, \"8\" );\n-\n-    @Description( \"RAFT log pruning frequency\" )\n-    public static final Setting<Duration> raft_log_pruning_frequency =\n-            setting( \"causal_clustering.raft_log_pruning_frequency\", DURATION, \"10m\" );\n-\n-    @Description( \"Enable or disable the dump of all network messages pertaining to the RAFT protocol\" )\n-    @Internal\n-    public static final Setting<Boolean> raft_messages_log_enable =\n-            setting( \"causal_clustering.raft_messages_log_enable\", BOOLEAN, FALSE );\n-\n-    @Description( \"Path to RAFT messages log.\" )\n-    @Internal\n-    public static final Setting<File> raft_messages_log_path =\n-            derivedSetting( \"causal_clustering.raft_messages_log_path\", logs_directory,\n-                    logs -> new File( logs, \"raft-messages.log\" ), PATH );\n-\n-    @Description( \"Interval of pulling updates from cores.\" )\n-    public static final Setting<Duration> pull_interval = setting( \"causal_clustering.pull_interval\", DURATION, \"1s\" );\n-\n-    @Description( \"The catch up protocol times out if the given duration elapses with no network activity. \" +\n-            \"Every message received by the client from the server extends the time out duration.\" )\n-    public static final Setting<Duration> catch_up_client_inactivity_timeout =\n-            setting( \"causal_clustering.catch_up_client_inactivity_timeout\", DURATION, \"20s\" );\n-\n-    @Description( \"Maximum retry time per request during store copy. Regular store files and indexes are downloaded in separate requests during store copy.\" +\n-            \" This configures the maximum time failed requests are allowed to resend. \" )\n-    public static final Setting<Duration> store_copy_max_retry_time_per_request =\n-            setting( \"causal_clustering.store_copy_max_retry_time_per_request\", DURATION, \"20m\" );\n-\n-    @Description( \"Maximum backoff timeout for store copy requests\" )\n-    @Internal\n-    public static final Setting<Duration> store_copy_backoff_max_wait = setting( \"causal_clustering.store_copy_backoff_max_wait\", DURATION, \"5s\" );\n-\n-    @Description( \"Throttle limit for logging unknown cluster member address\" )\n-    public static final Setting<Duration> unknown_address_logging_throttle =\n-            setting( \"causal_clustering.unknown_address_logging_throttle\", DURATION, \"10000ms\" );\n-\n-    @Description( \"Maximum transaction batch size for read replicas when applying transactions pulled from core \" +\n-            \"servers.\" )\n-    @Internal\n-    public static final Setting<Integer> read_replica_transaction_applier_batch_size =\n-            setting( \"causal_clustering.read_replica_transaction_applier_batch_size\", INTEGER, \"64\" );\n-\n-    @Description( \"Time To Live before read replica is considered unavailable\" )\n-    public static final Setting<Duration> read_replica_time_to_live =\n-            buildSetting( \"causal_clustering.read_replica_time_to_live\", DURATION, \"1m\" ).constraint( min( Duration.ofSeconds( 60 ) ) ).build();\n-\n-    @Description( \"How long drivers should cache the data from the `dbms.cluster.routing.getServers()` procedure.\" )\n-    public static final Setting<Duration> cluster_routing_ttl =\n-            buildSetting( \"causal_clustering.cluster_routing_ttl\", DURATION, \"300s\" ).constraint( min( Duration.ofSeconds( 1 ) ) ).build();\n-\n-    @Description( \"Configure if the `dbms.cluster.routing.getServers()` procedure should include followers as read \" +\n-            \"endpoints or return only read replicas. Note: if there are no read replicas in the cluster, followers \" +\n-            \"are returned as read end points regardless the value of this setting. Defaults to true so that followers \" +\n-            \"are available for read-only queries in a typical heterogeneous setup.\" )\n-    public static final Setting<Boolean> cluster_allow_reads_on_followers =\n-            setting( \"causal_clustering.cluster_allow_reads_on_followers\", BOOLEAN, TRUE );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out of NODE IDs. \" +\n-            \"Larger values mean less frequent requests but also result in more unused IDs (and unused disk space) \" +\n-            \"in the event of a crash.\" )\n-    public static final Setting<Integer> node_id_allocation_size =\n-            setting( \"causal_clustering.node_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_id_allocation_size =\n-            setting( \"causal_clustering.relationship_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of PROPERTY IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> property_id_allocation_size =\n-            setting( \"causal_clustering.property_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of STRING_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> string_block_id_allocation_size =\n-            setting( \"causal_clustering.string_block_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of ARRAY_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> array_block_id_allocation_size =\n-            setting( \"causal_clustering.array_block_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of PROPERTY_KEY_TOKEN IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> property_key_token_id_allocation_size =\n-            setting( \"causal_clustering.property_key_token_id_allocation_size\", INTEGER, \"32\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of PROPERTY_KEY_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> property_key_token_name_id_allocation_size =\n-            setting( \"causal_clustering.property_key_token_name_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP_TYPE_TOKEN IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_type_token_id_allocation_size =\n-            setting( \"causal_clustering.relationship_type_token_id_allocation_size\", INTEGER, \"32\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP_TYPE_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_type_token_name_id_allocation_size =\n-            setting( \"causal_clustering.relationship_type_token_name_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of LABEL_TOKEN IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> label_token_id_allocation_size =\n-            setting( \"causal_clustering.label_token_id_allocation_size\", INTEGER, \"32\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of LABEL_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> label_token_name_id_allocation_size =\n-            setting( \"causal_clustering.label_token_name_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of NEOSTORE_BLOCK IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> neostore_block_id_allocation_size =\n-            setting( \"causal_clustering.neostore_block_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of SCHEMA IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> schema_id_allocation_size =\n-            setting( \"causal_clustering.schema_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of NODE_LABELS IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> node_labels_id_allocation_size =\n-            setting( \"causal_clustering.node_labels_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP_GROUP IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_group_id_allocation_size =\n-            setting( \"causal_clustering.relationship_group_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"Time between scanning the cluster to refresh current server's view of topology\" )\n-    public static final Setting<Duration> cluster_topology_refresh =\n-            buildSetting( \"causal_clustering.cluster_topology_refresh\", DURATION, \"5s\" ).constraint( min( Duration.ofSeconds( 1 ) ) ).build();\n-\n-    @Description( \"An ordered list in descending preference of the strategy which read replicas use to choose \" +\n-            \"the upstream server from which to pull transactional updates.\" )\n-    public static final Setting<List<String>> upstream_selection_strategy =\n-            setting( \"causal_clustering.upstream_selection_strategy\", list( \",\", STRING ), \"default\" );\n-\n-    @Description( \"Configuration of a user-defined upstream selection strategy. \" +\n-            \"The user-defined strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" +\n-            \"includes the value `user_defined`. \" )\n-    public static final Setting<String> user_defined_upstream_selection_strategy =\n-            setting( \"causal_clustering.user_defined_upstream_strategy\", STRING, \"\" );\n-\n-    @Description( \"Comma separated list of groups to be used by the connect-randomly-to-server-group selection strategy. \" +\n-            \"The connect-randomly-to-server-group strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" +\n-            \"includes the value `connect-randomly-to-server-group`. \" )\n-    public static final Setting<List<String>> connect_randomly_to_server_group_strategy =\n-            setting( \"causal_clustering.connect-randomly-to-server-group\", list( \",\", STRING ), \"\" );\n-\n-    @Description( \"A list of group names for the server used when configuring load balancing and replication policies.\" )\n-    public static final Setting<List<String>> server_groups =\n-            setting( \"causal_clustering.server_groups\", list( \",\", STRING ), \"\" );\n-\n-    @Description( \"The load balancing plugin to use.\" )\n-    public static final Setting<String> load_balancing_plugin =\n-            setting( \"causal_clustering.load_balancing.plugin\", STRING, \"server_policies\" );\n-\n-    @Description( \"Time out for protocol negotiation handshake\" )\n-    public static final Setting<Duration> handshake_timeout = setting( \"causal_clustering.handshake_timeout\", DURATION, \"20s\" );\n-\n-    @Description( \"The configuration must be valid for the configured plugin and usually exists\" +\n-            \"under matching subkeys, e.g. ..config.server_policies.*\" +\n-            \"This is just a top-level placeholder for the plugin-specific configuration.\" )\n-    public static final Setting<String> load_balancing_config =\n-            prefixSetting( \"causal_clustering.load_balancing.config\", STRING, \"\" );\n-\n-    @Description( \"Enables shuffling of the returned load balancing result.\" )\n-    public static final Setting<Boolean> load_balancing_shuffle =\n-            setting( \"causal_clustering.load_balancing.shuffle\", BOOLEAN, TRUE );\n-\n-    @Description( \"Require authorization for access to the Causal Clustering status endpoints.\" )\n-    public static final Setting<Boolean> status_auth_enabled =\n-            setting( \"dbms.security.causal_clustering_status_auth_enabled\", BOOLEAN, TRUE );\n-\n-    @Description( \"Enable multi-data center features. Requires appropriate licensing.\" )\n-    public static final Setting<Boolean> multi_dc_license =\n-            setting( \"causal_clustering.multi_dc_license\", BOOLEAN, FALSE );\n-\n-    @Description( \"Name of the SSL policy to be used by the clustering, as defined under the dbms.ssl.policy.* settings.\" +\n-                  \" If no policy is configured then the communication will not be secured.\" )\n-    public static final Setting<String> ssl_policy =\n-            prefixSetting( \"causal_clustering.ssl_policy\", STRING, NO_DEFAULT );\n-\n-    @Description( \"Raft protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" +\n-            \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\" )\n-    public static final Setting<List<Integer>> raft_implementations =\n-            setting( \"causal_clustering.protocol_implementations.raft\", list( \",\", INTEGER ), \"\" );\n-\n-    @Description( \"Catchup protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" +\n-            \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\" )\n-    public static final Setting<List<Integer>> catchup_implementations =\n-            setting( \"causal_clustering.protocol_implementations.catchup\", list( \",\", INTEGER ), \"\" );\n-\n-    @Description( \"Network compression algorithms that this instance will allow in negotiation as a comma-separated list.\" +\n-            \" Listed in descending order of preference for incoming connections. An empty list implies no compression.\" +\n-            \" For outgoing connections this merely specifies the allowed set of algorithms and the preference of the \" +\n-            \" remote peer will be used for making the decision.\" +\n-            \" Allowable values: [\" + GZIP + \",\" + SNAPPY + \",\" + SNAPPY_VALIDATING + \",\" +\n-            LZ4 + \",\" + LZ4_HIGH_COMPRESSION + \",\" + LZ_VALIDATING + \",\" + LZ4_HIGH_COMPRESSION_VALIDATING + \"]\" )\n-    public static final Setting<List<String>> compression_implementations =\n-            setting( \"causal_clustering.protocol_implementations.compression\", STRING_LIST, \"\");\n+  @Description(\"The maximum file size before the ID allocation file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> id_alloc_state_size =\n+      setting(\"causal_clustering.id_alloc_state_size\", INTEGER, \"1000\");\n+\n+  @Description(\"The maximum file size before the membership state file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> raft_membership_state_size =\n+      setting(\"causal_clustering.raft_membership_state_size\", INTEGER, \"1000\");\n+\n+  @Description(\"The maximum file size before the vote state file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> vote_state_size =\n+      setting(\"causal_clustering.raft_vote_state_size\", INTEGER, \"1000\");\n+\n+  @Description(\"The maximum file size before the term state file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> term_state_size =\n+      setting(\"causal_clustering.raft_term_state_size\", INTEGER, \"1000\");\n+\n+  @Description(\"The maximum file size before the global session tracker state file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> global_session_tracker_state_size =\n+      setting(\"causal_clustering.global_session_tracker_state_size\", INTEGER, \"1000\");\n+\n+  @Description(\"The maximum file size before the replicated lock token state file is rotated (in unit of entries)\")\n+  public static final Setting<Integer> replicated_lock_token_state_size =\n+      setting(\"causal_clustering.replicated_lock_token_state_size\", INTEGER, \"1000\");\n+\n+  @Description(\"The maximum amount of data which can be in the replication stage concurrently.\")\n+  public static final Setting<Long> replication_total_size_limit =\n+      setting(\"causal_clustering.replication_total_size_limit\", BYTES, \"128M\");\n+\n+  @Description(\"The initial timeout until replication is retried. The timeout will increase exponentially.\")\n+  public static final Setting<Duration> replication_retry_timeout_base =\n+      setting(\"causal_clustering.replication_retry_timeout_base\", DURATION, \"10s\");\n+\n+  @Description(\"The upper limit for the exponentially incremented retry timeout.\")\n+  public static final Setting<Duration> replication_retry_timeout_limit =\n+      setting(\"causal_clustering.replication_retry_timeout_limit\", DURATION, \"60s\");\n+\n+  @Description(\"The retry timeout for finding a leader for replication. Relevant during leader elections.\")\n+  public static final Setting<Duration> replication_leader_retry_timeout =\n+      setting(\"causal_clustering.replication_leader\", DURATION, \"500ms\");\n+\n+  @Description(\"The number of operations to be processed before the state machines flush to disk\")\n+  public static final Setting<Integer> state_machine_flush_window_size =\n+      setting(\"causal_clustering.state_machine_flush_window_size\", INTEGER, \"4096\");\n+\n+  @Description(\"The maximum number of operations to be batched during applications of operations in the state machines\")\n+  public static final Setting<Integer> state_machine_apply_max_batch_size =\n+      setting(\"causal_clustering.state_machine_apply_max_batch_size\", INTEGER, \"16\");\n+\n+  @Description(\"RAFT log pruning strategy\")\n+  public static final Setting<String> raft_log_pruning_strategy =\n+      setting(\"causal_clustering.raft_log_prune_strategy\", STRING, \"1g size\");\n+\n+  @Description(\"RAFT log implementation\")\n+  public static final Setting<String> raft_log_implementation =\n+      setting(\"causal_clustering.raft_log_implementation\", STRING, \"SEGMENTED\");\n+\n+  @Description(\"RAFT log rotation size\")\n+  public static final Setting<Long> raft_log_rotation_size =\n+      buildSetting(\"causal_clustering.raft_log_rotation_size\", BYTES, \"250M\").constraint(min(1024L)).build();\n+\n+  @Description(\"RAFT log reader pool size\")\n+  public static final Setting<Integer> raft_log_reader_pool_size =\n+      setting(\"causal_clustering.raft_log_reader_pool_size\", INTEGER, \"8\");\n+\n+  @Description(\"RAFT log pruning frequency\")\n+  public static final Setting<Duration> raft_log_pruning_frequency =\n+      setting(\"causal_clustering.raft_log_pruning_frequency\", DURATION, \"10m\");\n+\n+  @Description(\"Enable or disable the dump of all network messages pertaining to the RAFT protocol\")\n+  @Internal\n+  public static final Setting<Boolean> raft_messages_log_enable =\n+      setting(\"causal_clustering.raft_messages_log_enable\", BOOLEAN, FALSE);\n+\n+  @Description(\"Path to RAFT messages log.\")\n+  @Internal\n+  public static final Setting<File> raft_messages_log_path =\n+      derivedSetting(\"causal_clustering.raft_messages_log_path\", logs_directory,\n+          logs -> new File(logs, \"raft-messages.log\"), PATH);\n+\n+  @Description(\"Interval of pulling updates from cores.\")\n+  public static final Setting<Duration> pull_interval = setting(\"causal_clustering.pull_interval\", DURATION, \"1s\");\n+\n+  @Description(\"The catch up protocol times out if the given duration elapses with no network activity. \" +\n+      \"Every message received by the client from the server extends the time out duration.\")\n+  public static final Setting<Duration> catch_up_client_inactivity_timeout =\n+      setting(\"causal_clustering.catch_up_client_inactivity_timeout\", DURATION, \"20s\");\n+\n+  @Description(\"Maximum retry time per request during store copy. Regular store files and indexes are downloaded in separate requests during store copy.\" +\n+      \" This configures the maximum time failed requests are allowed to resend. \")\n+  public static final Setting<Duration> store_copy_max_retry_time_per_request =\n+      setting(\"causal_clustering.store_copy_max_retry_time_per_request\", DURATION, \"20m\");\n+\n+  @Description(\"Maximum backoff timeout for store copy requests\")\n+  @Internal\n+  public static final Setting<Duration> store_copy_backoff_max_wait = setting(\"causal_clustering.store_copy_backoff_max_wait\", DURATION, \"5s\");\n+\n+  @Description(\"Throttle limit for logging unknown cluster member address\")\n+  public static final Setting<Duration> unknown_address_logging_throttle =\n+      setting(\"causal_clustering.unknown_address_logging_throttle\", DURATION, \"10000ms\");\n+\n+  @Description(\"Maximum transaction batch size for read replicas when applying transactions pulled from core \" +\n+      \"servers.\")\n+  @Internal\n+  public static final Setting<Integer> read_replica_transaction_applier_batch_size =\n+      setting(\"causal_clustering.read_replica_transaction_applier_batch_size\", INTEGER, \"64\");\n+\n+  @Description(\"Time To Live before read replica is considered unavailable\")\n+  public static final Setting<Duration> read_replica_time_to_live =\n+      buildSetting(\"causal_clustering.read_replica_time_to_live\", DURATION, \"1m\").constraint(min(Duration.ofSeconds(60))).build();\n+\n+  @Description(\"How long drivers should cache the data from the `dbms.cluster.routing.getServers()` procedure.\")\n+  public static final Setting<Duration> cluster_routing_ttl =\n+      buildSetting(\"causal_clustering.cluster_routing_ttl\", DURATION, \"300s\").constraint(min(Duration.ofSeconds(1))).build();\n+\n+  @Description(\"Configure if the `dbms.cluster.routing.getServers()` procedure should include followers as read \" +\n+      \"endpoints or return only read replicas. Note: if there are no read replicas in the cluster, followers \" +\n+      \"are returned as read end points regardless the value of this setting. Defaults to true so that followers \" +\n+      \"are available for read-only queries in a typical heterogeneous setup.\")\n+  public static final Setting<Boolean> cluster_allow_reads_on_followers =\n+      setting(\"causal_clustering.cluster_allow_reads_on_followers\", BOOLEAN, TRUE);\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out of NODE IDs. \" +\n+      \"Larger values mean less frequent requests but also result in more unused IDs (and unused disk space) \" +\n+      \"in the event of a crash.\")\n+  public static final Setting<Integer> node_id_allocation_size =\n+      setting(\"causal_clustering.node_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of RELATIONSHIP IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n+      \"(and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> relationship_id_allocation_size =\n+      setting(\"causal_clustering.relationship_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of PROPERTY IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n+      \"(and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> property_id_allocation_size =\n+      setting(\"causal_clustering.property_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of STRING_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n+      \"(and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> string_block_id_allocation_size =\n+      setting(\"causal_clustering.string_block_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of ARRAY_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n+      \"(and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> array_block_id_allocation_size =\n+      setting(\"causal_clustering.array_block_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of PROPERTY_KEY_TOKEN IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n+      \"(and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> property_key_token_id_allocation_size =\n+      setting(\"causal_clustering.property_key_token_id_allocation_size\", INTEGER, \"32\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of PROPERTY_KEY_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> property_key_token_name_id_allocation_size =\n+      setting(\"causal_clustering.property_key_token_name_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of RELATIONSHIP_TYPE_TOKEN IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> relationship_type_token_id_allocation_size =\n+      setting(\"causal_clustering.relationship_type_token_id_allocation_size\", INTEGER, \"32\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of RELATIONSHIP_TYPE_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> relationship_type_token_name_id_allocation_size =\n+      setting(\"causal_clustering.relationship_type_token_name_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of LABEL_TOKEN IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> label_token_id_allocation_size =\n+      setting(\"causal_clustering.label_token_id_allocation_size\", INTEGER, \"32\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of LABEL_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> label_token_name_id_allocation_size =\n+      setting(\"causal_clustering.label_token_name_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of NEOSTORE_BLOCK IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> neostore_block_id_allocation_size =\n+      setting(\"causal_clustering.neostore_block_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of SCHEMA IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> schema_id_allocation_size =\n+      setting(\"causal_clustering.schema_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of NODE_LABELS IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> node_labels_id_allocation_size =\n+      setting(\"causal_clustering.node_labels_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"The size of the ID allocation requests Core servers will make when they run out \" +\n+      \"of RELATIONSHIP_GROUP IDs. Larger values mean less frequent requests but also result in more \" +\n+      \"unused IDs (and unused disk space) in the event of a crash.\")\n+  public static final Setting<Integer> relationship_group_id_allocation_size =\n+      setting(\"causal_clustering.relationship_group_id_allocation_size\", INTEGER, \"1024\");\n+\n+  @Description(\"Time between scanning the cluster to refresh current server's view of topology\")\n+  public static final Setting<Duration> cluster_topology_refresh =\n+      buildSetting(\"causal_clustering.cluster_topology_refresh\", DURATION, \"5s\").constraint(min(Duration.ofSeconds(1))).build();\n+\n+  @Description(\"An ordered list in descending preference of the strategy which read replicas use to choose \" +\n+      \"the upstream server from which to pull transactional updates.\")\n+  public static final Setting<List<String>> upstream_selection_strategy =\n+      setting(\"causal_clustering.upstream_selection_strategy\", list(\",\", STRING), \"default\");\n+\n+  @Description(\"Configuration of a user-defined upstream selection strategy. \" +\n+      \"The user-defined strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" +\n+      \"includes the value `user_defined`. \")\n+  public static final Setting<String> user_defined_upstream_selection_strategy =\n+      setting(\"causal_clustering.user_defined_upstream_strategy\", STRING, \"\");\n+\n+  @Description(\"Comma separated list of groups to be used by the connect-randomly-to-server-group selection strategy. \" +\n+      \"The connect-randomly-to-server-group strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" +\n+      \"includes the value `connect-randomly-to-server-group`. \")\n+  public static final Setting<List<String>> connect_randomly_to_server_group_strategy =\n+      setting(\"causal_clustering.connect-randomly-to-server-group\", list(\",\", STRING), \"\");\n+\n+  @Description(\"A list of group names for the server used when configuring load balancing and replication policies.\")\n+  public static final Setting<List<String>> server_groups =\n+      setting(\"causal_clustering.server_groups\", list(\",\", STRING), \"\");\n+\n+  @Description(\"The load balancing plugin to use.\")\n+  public static final Setting<String> load_balancing_plugin =\n+      setting(\"causal_clustering.load_balancing.plugin\", STRING, \"server_policies\");\n+\n+  @Description(\"Time out for protocol negotiation handshake\")\n+  public static final Setting<Duration> handshake_timeout = setting(\"causal_clustering.handshake_timeout\", DURATION, \"20s\");\n+\n+  @Description(\"The configuration must be valid for the configured plugin and usually exists\" +\n+      \"under matching subkeys, e.g. ..config.server_policies.*\" +\n+      \"This is just a top-level placeholder for the plugin-specific configuration.\")\n+  public static final Setting<String> load_balancing_config =\n+      prefixSetting(\"causal_clustering.load_balancing.config\", STRING, \"\");\n+\n+  @Description(\"Enables shuffling of the returned load balancing result.\")\n+  public static final Setting<Boolean> load_balancing_shuffle =\n+      setting(\"causal_clustering.load_balancing.shuffle\", BOOLEAN, TRUE);\n+\n+  @Description(\"Require authorization for access to the Causal Clustering status endpoints.\")\n+  public static final Setting<Boolean> status_auth_enabled =\n+      setting(\"dbms.security.causal_clustering_status_auth_enabled\", BOOLEAN, TRUE);\n+\n+  @Description(\"Enable multi-data center features. Requires appropriate licensing.\")\n+  public static final Setting<Boolean> multi_dc_license =\n+      setting(\"causal_clustering.multi_dc_license\", BOOLEAN, FALSE);\n+\n+  @Description(\"Name of the SSL policy to be used by the clustering, as defined under the dbms.ssl.policy.* settings.\" +\n+      \" If no policy is configured then the communication will not be secured.\")\n+  public static final Setting<String> ssl_policy =\n+      prefixSetting(\"causal_clustering.ssl_policy\", STRING, NO_DEFAULT);\n+\n+  @Description(\"Raft protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" +\n+      \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\")\n+  public static final Setting<List<Integer>> raft_implementations =\n+      setting(\"causal_clustering.protocol_implementations.raft\", list(\",\", INTEGER), \"\");\n+\n+  @Description(\"Catchup protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" +\n+      \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\")\n+  public static final Setting<List<Integer>> catchup_implementations =\n+      setting(\"causal_clustering.protocol_implementations.catchup\", list(\",\", INTEGER), \"\");\n+\n+  @Description(\"Network compression algorithms that this instance will allow in negotiation as a comma-separated list.\" +\n+      \" Listed in descending order of preference for incoming connections. An empty list implies no compression.\" +\n+      \" For outgoing connections this merely specifies the allowed set of algorithms and the preference of the \" +\n+      \" remote peer will be used for making the decision.\" +\n+      \" Allowable values: [\" + GZIP + \",\" + SNAPPY + \",\" + SNAPPY_VALIDATING + \",\" +\n+      LZ4 + \",\" + LZ4_HIGH_COMPRESSION + \",\" + LZ_VALIDATING + \",\" + LZ4_HIGH_COMPRESSION_VALIDATING + \"]\")\n+  public static final Setting<List<String>> compression_implementations =\n+      setting(\"causal_clustering.protocol_implementations.compression\", STRING_LIST, \"\");\n }\n",
            "diff_size": 444
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 658).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Annotation 'Deprecated' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Annotation 'ReplacedBy' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 503).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 1,055).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 338).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Annotation 'Description' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "243",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 232).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "Annotation 'Internal' have incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 405).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "269",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "275",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "290",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 270).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "296",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 258).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "302",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 256).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 248).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "308",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "311",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "312",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "315",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "317",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "320",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 234).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "323",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 315).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "324",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "335",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "347",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "350",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 241).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "354",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "356",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 576).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/96/CausalClusteringSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/96/CausalClusteringSettings.java\nindex e4514f69eb2..f83ccd05fe0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/96/CausalClusteringSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/96/CausalClusteringSettings.java\n@@ -74,125 +74,79 @@ import static org.neo4j.kernel.configuration.Settings.setting;\n public class CausalClusteringSettings implements LoadableConfig\n {\n     @Description( \"Time out for a new member to catch up\" )\n-    public static final Setting<Duration> join_catch_up_timeout =\n-            setting( \"causal_clustering.join_catch_up_timeout\", DURATION, \"10m\" );\n-\n-    @Description( \"The time limit within which a new leader election will occur if no messages are received.\" )\n-    public static final Setting<Duration> leader_election_timeout =\n-            setting( \"causal_clustering.leader_election_timeout\", DURATION, \"7s\" );\n-\n-    @Description( \"Prevents the current instance from volunteering to become Raft leader. Defaults to false, and \" +\n-            \"should only be used in exceptional circumstances by expert users. Using this can result in reduced \" +\n-            \"availability for the cluster.\" )\n-    public static final Setting<Boolean> refuse_to_be_leader =\n-            setting( \"causal_clustering.refuse_to_be_leader\", BOOLEAN, FALSE );\n-\n-    @Description( \"The name of the database being hosted by this server instance. This configuration setting may be safely ignored \" +\n-            \"unless deploying a multicluster. Instances may be allocated to distinct sub-clusters by assigning them distinct database \" +\n-            \"names using this setting. For instance if you had 6 instances you could form 2 sub-clusters by assigning half \" +\n-            \"the database name \\\"foo\\\", half the name \\\"bar\\\". The setting value must match exactly between members of the same sub-cluster. \" +\n-            \"This setting is a one-off: once an instance is configured with a database name it may not be changed in future without using \" +\n-            \"neo4j-admin unbind.\" )\n-    public static final Setting<String> database =\n-            setting( \"causal_clustering.database\", STRING, \"default\" );\n-\n-    @Description( \"Enable pre-voting extension to the Raft protocol (this is breaking and must match between the core cluster members)\" )\n-    public static final Setting<Boolean> enable_pre_voting =\n-            setting( \"causal_clustering.enable_pre_voting\", BOOLEAN, FALSE );\n-\n-    @Description( \"The maximum batch size when catching up (in unit of entries)\" )\n-    public static final Setting<Integer> catchup_batch_size =\n-            setting( \"causal_clustering.catchup_batch_size\", INTEGER, \"64\" );\n-\n-    @Description( \"The maximum lag allowed before log shipping pauses (in unit of entries)\" )\n-    public static final Setting<Integer> log_shipping_max_lag =\n-            setting( \"causal_clustering.log_shipping_max_lag\", INTEGER, \"256\" );\n-\n-    @Description( \"Size of the RAFT in queue\" )\n+    public static final Setting<Duration> join_catch_up_timeout = setting( \"causal_clustering.join_catch_up_timeout\", DURATION, \"10m\" );\n+\n+@Description( \"The time limit within which a new leader election will occur if no messages are received.\" )\n+    public static final Setting<Duration> leader_election_timeout = setting( \"causal_clustering.leader_election_timeout\", DURATION, \"7s\" );\n+\n+@Description( \"Prevents the current instance from volunteering to become Raft leader. Defaults to false, and \" + \"should only be used in exceptional circumstances by expert users. Using this can result in reduced \" + \"availability for the cluster.\" )\n+    public static final Setting<Boolean> refuse_to_be_leader = setting( \"causal_clustering.refuse_to_be_leader\", BOOLEAN, FALSE );\n+\n+@Description( \"The name of the database being hosted by this server instance. This configuration setting may be safely ignored \" + \"unless deploying a multicluster. Instances may be allocated to distinct sub-clusters by assigning them distinct database \" + \"names using this setting. For instance if you had 6 instances you could form 2 sub-clusters by assigning half \" + \"the database name \\\"foo\\\", half the name \\\"bar\\\". The setting value must match exactly between members of the same sub-cluster. \" + \"This setting is a one-off: once an instance is configured with a database name it may not be changed in future without using \" + \"neo4j-admin unbind.\" )\n+    public static final Setting<String> database = setting( \"causal_clustering.database\", STRING, \"default\" );\n+\n+@Description( \"Enable pre-voting extension to the Raft protocol (this is breaking and must match between the core cluster members)\" )\n+    public static final Setting<Boolean> enable_pre_voting = setting( \"causal_clustering.enable_pre_voting\", BOOLEAN, FALSE );\n+\n+@Description( \"The maximum batch size when catching up (in unit of entries)\" )\n+    public static final Setting<Integer> catchup_batch_size = setting( \"causal_clustering.catchup_batch_size\", INTEGER, \"64\" );\n+\n+@Description( \"The maximum lag allowed before log shipping pauses (in unit of entries)\" )\n+    public static final Setting<Integer> log_shipping_max_lag = setting( \"causal_clustering.log_shipping_max_lag\", INTEGER, \"256\" );\n+\n+@Description( \"Size of the RAFT in queue\" )\n     @Internal\n-    public static final Setting<Integer> raft_in_queue_size =\n-            setting( \"causal_clustering.raft_in_queue_size\", INTEGER, \"64\" );\n+    public static final Setting<Integer> raft_in_queue_size = setting( \"causal_clustering.raft_in_queue_size\", INTEGER, \"64\" );\n \n-    @Description( \"Largest batch processed by RAFT\" )\n+@Description( \"Largest batch processed by RAFT\" )\n     @Internal\n-    public static final Setting<Integer> raft_in_queue_max_batch =\n-            setting( \"causal_clustering.raft_in_queue_max_batch\", INTEGER, \"64\" );\n+    public static final Setting<Integer> raft_in_queue_max_batch = setting( \"causal_clustering.raft_in_queue_max_batch\", INTEGER, \"64\" );\n \n-    @Description( \"Expected number of Core machines in the cluster before startup\" )\n+@Description( \"Expected number of Core machines in the cluster before startup\" )\n     @Deprecated\n     @ReplacedBy( \"causal_clustering.minimum_core_cluster_size_at_formation and causal_clustering.minimum_core_cluster_size_at_runtime\" )\n-    public static final Setting<Integer> expected_core_cluster_size =\n-            setting( \"causal_clustering.expected_core_cluster_size\", INTEGER, \"3\" );\n-\n-    @Description( \"Minimum number of Core machines in the cluster at formation. The expected_core_cluster size setting is used when bootstrapping the \" +\n-            \"cluster on first formation. A cluster will not form without the configured amount of cores and this should in general be configured to the\" +\n-            \" full and fixed amount. When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used \" +\n-            \"to define the minimum size of *each* sub-cluster at formation.\" )\n-    public static final Setting<Integer> minimum_core_cluster_size_at_formation =\n-            buildSetting( \"causal_clustering.minimum_core_cluster_size_at_formation\", INTEGER, expected_core_cluster_size.getDefaultValue() )\n-                    .constraint( min( 2 ) ).build();\n-\n-    @Description( \"Minimum number of Core machines required to be available at runtime. The consensus group size (core machines successfully voted into the \" +\n-            \"Raft) can shrink and grow dynamically but bounded on the lower end at this number. The intention is in almost all cases for users to leave this \" +\n-            \"setting alone. If you have 5 machines then you can survive failures down to 3 remaining, e.g. with 2 dead members. The three remaining can \" +\n-            \"still vote another replacement member in successfully up to a total of 6 (2 of which are still dead) and then after this, one of the \" +\n-            \"superfluous dead members will be immediately and automatically voted out (so you are left with 5 members in the consensus group, 1 of which \" +\n-            \"is currently dead). Operationally you can now bring the last machine up by bringing in another replacement or repairing the dead one. \" +\n-            \"When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used to define the minimum size \" +\n-            \"of *each* sub-cluster at runtime.\" )\n-    public static final Setting<Integer> minimum_core_cluster_size_at_runtime =\n-            buildSetting( \"causal_clustering.minimum_core_cluster_size_at_runtime\", INTEGER, \"3\" ).constraint( min( 2 ) ).build();\n-\n-    @Description( \"Network interface and port for the transaction shipping server to listen on. Please note that it is also possible to run the backup \" +\n-            \"client against this port so always limit access to it via the firewall and configure an ssl policy.\" )\n-    public static final Setting<ListenSocketAddress> transaction_listen_address =\n-            listenAddress( \"causal_clustering.transaction_listen_address\", 6000 );\n-\n-    @Description( \"Advertised hostname/IP address and port for the transaction shipping server.\" )\n-    public static final Setting<AdvertisedSocketAddress> transaction_advertised_address =\n-            advertisedAddress( \"causal_clustering.transaction_advertised_address\", transaction_listen_address );\n-\n-    @Description( \"Network interface and port for the RAFT server to listen on.\" )\n-    public static final Setting<ListenSocketAddress> raft_listen_address =\n-            listenAddress( \"causal_clustering.raft_listen_address\", 7000 );\n-\n-    @Description( \"Advertised hostname/IP address and port for the RAFT server.\" )\n-    public static final Setting<AdvertisedSocketAddress> raft_advertised_address =\n-            advertisedAddress( \"causal_clustering.raft_advertised_address\", raft_listen_address );\n-\n-    @Description( \"Host and port to bind the cluster member discovery management communication.\" )\n-    public static final Setting<ListenSocketAddress> discovery_listen_address =\n-            listenAddress( \"causal_clustering.discovery_listen_address\", 5000 );\n-\n-    @Description( \"Advertised cluster member discovery management communication.\" )\n-    public static final Setting<AdvertisedSocketAddress> discovery_advertised_address =\n-            advertisedAddress( \"causal_clustering.discovery_advertised_address\", discovery_listen_address );\n-\n-    @Description( \"A comma-separated list of other members of the cluster to join.\" )\n-    public static final Setting<List<AdvertisedSocketAddress>> initial_discovery_members =\n-            setting( \"causal_clustering.initial_discovery_members\", list( \",\", ADVERTISED_SOCKET_ADDRESS ),\n-                    NO_DEFAULT );\n+    public static final Setting<Integer> expected_core_cluster_size = setting( \"causal_clustering.expected_core_cluster_size\", INTEGER, \"3\" );\n \n-    @Description( \"Type of in-flight cache.\" )\n-    public static final Setting<InFlightCacheFactory.Type> in_flight_cache_type =\n-            setting( \"causal_clustering.in_flight_cache.type\", options( InFlightCacheFactory.Type.class, true ),\n-                    InFlightCacheFactory.Type.CONSECUTIVE.name() );\n+@Description( \"Minimum number of Core machines in the cluster at formation. The expected_core_cluster size setting is used when bootstrapping the \" + \"cluster on first formation. A cluster will not form without the configured amount of cores and this should in general be configured to the\" + \" full and fixed amount. When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used \" + \"to define the minimum size of *each* sub-cluster at formation.\" )\n+    public static final Setting<Integer> minimum_core_cluster_size_at_formation = buildSetting( \"causal_clustering.minimum_core_cluster_size_at_formation\", INTEGER, expected_core_cluster_size.getDefaultValue() ).constraint( min( 2 ) ).build();\n \n-    @Description( \"The maximum number of entries in the in-flight cache.\" )\n-    public static final Setting<Integer> in_flight_cache_max_entries =\n-            setting( \"causal_clustering.in_flight_cache.max_entries\", INTEGER, \"1024\" );\n+@Description( \"Minimum number of Core machines required to be available at runtime. The consensus group size (core machines successfully voted into the \" + \"Raft) can shrink and grow dynamically but bounded on the lower end at this number. The intention is in almost all cases for users to leave this \" + \"setting alone. If you have 5 machines then you can survive failures down to 3 remaining, e.g. with 2 dead members. The three remaining can \" + \"still vote another replacement member in successfully up to a total of 6 (2 of which are still dead) and then after this, one of the \" + \"superfluous dead members will be immediately and automatically voted out (so you are left with 5 members in the consensus group, 1 of which \" + \"is currently dead). Operationally you can now bring the last machine up by bringing in another replacement or repairing the dead one. \" + \"When using multi-clustering (configuring multiple distinct database names across core hosts), this setting is used to define the minimum size \" + \"of *each* sub-cluster at runtime.\" )\n+    public static final Setting<Integer> minimum_core_cluster_size_at_runtime = buildSetting( \"causal_clustering.minimum_core_cluster_size_at_runtime\", INTEGER, \"3\" ).constraint( min( 2 ) ).build();\n \n-    @Description( \"The maximum number of bytes in the in-flight cache.\" )\n-    public static final Setting<Long> in_flight_cache_max_bytes =\n-            setting( \"causal_clustering.in_flight_cache.max_bytes\", BYTES, \"2G\" );\n+@Description( \"Network interface and port for the transaction shipping server to listen on. Please note that it is also possible to run the backup \" + \"client against this port so always limit access to it via the firewall and configure an ssl policy.\" )\n+    public static final Setting<ListenSocketAddress> transaction_listen_address = listenAddress( \"causal_clustering.transaction_listen_address\", 6000 );\n \n-    public enum DiscoveryType\n-    {\n-        DNS( ( logProvider, userLogProvider ) -> new DnsHostnameResolver( logProvider, userLogProvider, new DomainNameResolverImpl() ) ),\n+@Description( \"Advertised hostname/IP address and port for the transaction shipping server.\" )\n+    public static final Setting<AdvertisedSocketAddress> transaction_advertised_address = advertisedAddress( \"causal_clustering.transaction_advertised_address\", transaction_listen_address );\n+\n+@Description( \"Network interface and port for the RAFT server to listen on.\" )\n+    public static final Setting<ListenSocketAddress> raft_listen_address = listenAddress( \"causal_clustering.raft_listen_address\", 7000 );\n \n-        LIST( ( logProvider, userLogProvider ) -> new NoOpHostnameResolver() ),\n+@Description( \"Advertised hostname/IP address and port for the RAFT server.\" )\n+    public static final Setting<AdvertisedSocketAddress> raft_advertised_address = advertisedAddress( \"causal_clustering.raft_advertised_address\", raft_listen_address );\n \n-        SRV( ( logProvider, userLogProvider ) -> new SrvHostnameResolver( logProvider, userLogProvider, new SrvRecordResolverImpl() ) );\n+@Description( \"Host and port to bind the cluster member discovery management communication.\" )\n+    public static final Setting<ListenSocketAddress> discovery_listen_address = listenAddress( \"causal_clustering.discovery_listen_address\", 5000 );\n+\n+@Description( \"Advertised cluster member discovery management communication.\" )\n+    public static final Setting<AdvertisedSocketAddress> discovery_advertised_address = advertisedAddress( \"causal_clustering.discovery_advertised_address\", discovery_listen_address );\n+\n+@Description( \"A comma-separated list of other members of the cluster to join.\" )\n+    public static final Setting<List<AdvertisedSocketAddress>> initial_discovery_members = setting( \"causal_clustering.initial_discovery_members\", list( \",\", ADVERTISED_SOCKET_ADDRESS ),\n+                    NO_DEFAULT );\n+\n+@Description( \"Type of in-flight cache.\" )\n+    public static final Setting<InFlightCacheFactory.Type> in_flight_cache_type = setting( \"causal_clustering.in_flight_cache.type\", options( InFlightCacheFactory.Type.class, true ), InFlightCacheFactory.Type.CONSECUTIVE.name() );\n+\n+@Description( \"The maximum number of entries in the in-flight cache.\" )\n+    public static final Setting<Integer> in_flight_cache_max_entries = setting( \"causal_clustering.in_flight_cache.max_entries\", INTEGER, \"1024\" );\n+\n+@Description( \"The maximum number of bytes in the in-flight cache.\" )\n+    public static final Setting<Long> in_flight_cache_max_bytes = setting( \"causal_clustering.in_flight_cache.max_bytes\", BYTES, \"2G\" );\n+\n+public enum DiscoveryType\n+    {\n+        DNS( ( logProvider, userLogProvider ) -> new DnsHostnameResolver( logProvider, userLogProvider, new DomainNameResolverImpl() ) ), LIST( ( logProvider, userLogProvider ) -> new NoOpHostnameResolver() ), SRV( ( logProvider, userLogProvider ) -> new SrvHostnameResolver( logProvider, userLogProvider, new SrvRecordResolverImpl() ) );\n \n         private final BiFunction<LogProvider,LogProvider,HostnameResolver> resolverSupplier;\n \n@@ -208,308 +162,197 @@ public class CausalClusteringSettings implements LoadableConfig\n     }\n \n     @Description( \"Configure the discovery type used for cluster name resolution\" )\n-    public static final Setting<DiscoveryType> discovery_type =\n-            setting( \"causal_clustering.discovery_type\", options( DiscoveryType.class ), DiscoveryType.LIST.name() );\n+    public static final Setting<DiscoveryType> discovery_type = setting( \"causal_clustering.discovery_type\", options( DiscoveryType.class ), DiscoveryType.LIST.name() );\n \n-    @Description( \"Prevents the network middleware from dumping its own logs. Defaults to true.\" )\n-    public static final Setting<Boolean> disable_middleware_logging =\n-            setting( \"causal_clustering.disable_middleware_logging\", BOOLEAN, TRUE );\n+@Description( \"Prevents the network middleware from dumping its own logs. Defaults to true.\" )\n+    public static final Setting<Boolean> disable_middleware_logging = setting( \"causal_clustering.disable_middleware_logging\", BOOLEAN, TRUE );\n \n-    @Description( \"The level of middleware logging\" )\n-    public static final Setting<Integer> middleware_logging_level =\n-            setting( \"causal_clustering.middleware_logging.level\", INTEGER, Integer.toString( Level.FINE.intValue() ) );\n+@Description( \"The level of middleware logging\" )\n+    public static final Setting<Integer> middleware_logging_level = setting( \"causal_clustering.middleware_logging.level\", INTEGER, Integer.toString( Level.FINE.intValue() ) );\n \n-    @Internal // not supported yet\n+@Internal // not supported yet\n     @Description( \"Hazelcast license key\" )\n-    public static final Setting<String> hazelcast_license_key =\n-            setting( \"hazelcast.license_key\", STRING, NO_DEFAULT );\n+    public static final Setting<String> hazelcast_license_key = setting( \"hazelcast.license_key\", STRING, NO_DEFAULT );\n \n-    @Description( \"The maximum file size before the storage file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> last_flushed_state_size =\n-            setting( \"causal_clustering.last_applied_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the storage file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> last_flushed_state_size = setting( \"causal_clustering.last_applied_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum file size before the ID allocation file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> id_alloc_state_size =\n-            setting( \"causal_clustering.id_alloc_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the ID allocation file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> id_alloc_state_size = setting( \"causal_clustering.id_alloc_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum file size before the membership state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> raft_membership_state_size =\n-            setting( \"causal_clustering.raft_membership_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the membership state file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> raft_membership_state_size = setting( \"causal_clustering.raft_membership_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum file size before the vote state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> vote_state_size =\n-            setting( \"causal_clustering.raft_vote_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the vote state file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> vote_state_size = setting( \"causal_clustering.raft_vote_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum file size before the term state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> term_state_size =\n-            setting( \"causal_clustering.raft_term_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the term state file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> term_state_size = setting( \"causal_clustering.raft_term_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum file size before the global session tracker state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> global_session_tracker_state_size =\n-            setting( \"causal_clustering.global_session_tracker_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the global session tracker state file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> global_session_tracker_state_size = setting( \"causal_clustering.global_session_tracker_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum file size before the replicated lock token state file is rotated (in unit of entries)\" )\n-    public static final Setting<Integer> replicated_lock_token_state_size =\n-            setting( \"causal_clustering.replicated_lock_token_state_size\", INTEGER, \"1000\" );\n+@Description( \"The maximum file size before the replicated lock token state file is rotated (in unit of entries)\" )\n+    public static final Setting<Integer> replicated_lock_token_state_size = setting( \"causal_clustering.replicated_lock_token_state_size\", INTEGER, \"1000\" );\n \n-    @Description( \"The maximum amount of data which can be in the replication stage concurrently.\" )\n-    public static final Setting<Long> replication_total_size_limit =\n-            setting( \"causal_clustering.replication_total_size_limit\", BYTES, \"128M\" );\n+@Description( \"The maximum amount of data which can be in the replication stage concurrently.\" )\n+    public static final Setting<Long> replication_total_size_limit = setting( \"causal_clustering.replication_total_size_limit\", BYTES, \"128M\" );\n \n-    @Description( \"The initial timeout until replication is retried. The timeout will increase exponentially.\" )\n-    public static final Setting<Duration> replication_retry_timeout_base =\n-            setting( \"causal_clustering.replication_retry_timeout_base\", DURATION, \"10s\" );\n+@Description( \"The initial timeout until replication is retried. The timeout will increase exponentially.\" )\n+    public static final Setting<Duration> replication_retry_timeout_base = setting( \"causal_clustering.replication_retry_timeout_base\", DURATION, \"10s\" );\n \n-    @Description( \"The upper limit for the exponentially incremented retry timeout.\" )\n-    public static final Setting<Duration> replication_retry_timeout_limit =\n-            setting( \"causal_clustering.replication_retry_timeout_limit\", DURATION, \"60s\" );\n+@Description( \"The upper limit for the exponentially incremented retry timeout.\" )\n+    public static final Setting<Duration> replication_retry_timeout_limit = setting( \"causal_clustering.replication_retry_timeout_limit\", DURATION, \"60s\" );\n \n-    @Description( \"The retry timeout for finding a leader for replication. Relevant during leader elections.\" )\n-    public static final Setting<Duration> replication_leader_retry_timeout =\n-            setting( \"causal_clustering.replication_leader\", DURATION, \"500ms\" );\n+@Description( \"The retry timeout for finding a leader for replication. Relevant during leader elections.\" )\n+    public static final Setting<Duration> replication_leader_retry_timeout = setting( \"causal_clustering.replication_leader\", DURATION, \"500ms\" );\n \n-    @Description( \"The number of operations to be processed before the state machines flush to disk\" )\n-    public static final Setting<Integer> state_machine_flush_window_size =\n-            setting( \"causal_clustering.state_machine_flush_window_size\", INTEGER, \"4096\" );\n+@Description( \"The number of operations to be processed before the state machines flush to disk\" )\n+    public static final Setting<Integer> state_machine_flush_window_size = setting( \"causal_clustering.state_machine_flush_window_size\", INTEGER, \"4096\" );\n \n-    @Description( \"The maximum number of operations to be batched during applications of operations in the state machines\" )\n-    public static final Setting<Integer> state_machine_apply_max_batch_size =\n-            setting( \"causal_clustering.state_machine_apply_max_batch_size\", INTEGER, \"16\" );\n+@Description( \"The maximum number of operations to be batched during applications of operations in the state machines\" )\n+    public static final Setting<Integer> state_machine_apply_max_batch_size = setting( \"causal_clustering.state_machine_apply_max_batch_size\", INTEGER, \"16\" );\n \n-    @Description( \"RAFT log pruning strategy\" )\n-    public static final Setting<String> raft_log_pruning_strategy =\n-            setting( \"causal_clustering.raft_log_prune_strategy\", STRING, \"1g size\" );\n+@Description( \"RAFT log pruning strategy\" )\n+    public static final Setting<String> raft_log_pruning_strategy = setting( \"causal_clustering.raft_log_prune_strategy\", STRING, \"1g size\" );\n \n-    @Description( \"RAFT log implementation\" )\n-    public static final Setting<String> raft_log_implementation =\n-            setting( \"causal_clustering.raft_log_implementation\", STRING, \"SEGMENTED\" );\n+@Description( \"RAFT log implementation\" )\n+    public static final Setting<String> raft_log_implementation = setting( \"causal_clustering.raft_log_implementation\", STRING, \"SEGMENTED\" );\n \n-    @Description( \"RAFT log rotation size\" )\n-    public static final Setting<Long> raft_log_rotation_size =\n-            buildSetting( \"causal_clustering.raft_log_rotation_size\", BYTES, \"250M\" ).constraint( min( 1024L ) ).build();\n+@Description( \"RAFT log rotation size\" )\n+    public static final Setting<Long> raft_log_rotation_size = buildSetting( \"causal_clustering.raft_log_rotation_size\", BYTES, \"250M\" ).constraint( min( 1024L ) ).build();\n \n-    @Description( \"RAFT log reader pool size\" )\n-    public static final Setting<Integer> raft_log_reader_pool_size =\n-            setting( \"causal_clustering.raft_log_reader_pool_size\", INTEGER, \"8\" );\n+@Description( \"RAFT log reader pool size\" )\n+    public static final Setting<Integer> raft_log_reader_pool_size = setting( \"causal_clustering.raft_log_reader_pool_size\", INTEGER, \"8\" );\n \n-    @Description( \"RAFT log pruning frequency\" )\n-    public static final Setting<Duration> raft_log_pruning_frequency =\n-            setting( \"causal_clustering.raft_log_pruning_frequency\", DURATION, \"10m\" );\n+@Description( \"RAFT log pruning frequency\" )\n+    public static final Setting<Duration> raft_log_pruning_frequency = setting( \"causal_clustering.raft_log_pruning_frequency\", DURATION, \"10m\" );\n \n-    @Description( \"Enable or disable the dump of all network messages pertaining to the RAFT protocol\" )\n+@Description( \"Enable or disable the dump of all network messages pertaining to the RAFT protocol\" )\n     @Internal\n-    public static final Setting<Boolean> raft_messages_log_enable =\n-            setting( \"causal_clustering.raft_messages_log_enable\", BOOLEAN, FALSE );\n+    public static final Setting<Boolean> raft_messages_log_enable = setting( \"causal_clustering.raft_messages_log_enable\", BOOLEAN, FALSE );\n \n-    @Description( \"Path to RAFT messages log.\" )\n+@Description( \"Path to RAFT messages log.\" )\n     @Internal\n-    public static final Setting<File> raft_messages_log_path =\n-            derivedSetting( \"causal_clustering.raft_messages_log_path\", logs_directory,\n+    public static final Setting<File> raft_messages_log_path = derivedSetting( \"causal_clustering.raft_messages_log_path\", logs_directory,\n                     logs -> new File( logs, \"raft-messages.log\" ), PATH );\n \n-    @Description( \"Interval of pulling updates from cores.\" )\n+@Description( \"Interval of pulling updates from cores.\" )\n     public static final Setting<Duration> pull_interval = setting( \"causal_clustering.pull_interval\", DURATION, \"1s\" );\n \n-    @Description( \"The catch up protocol times out if the given duration elapses with no network activity. \" +\n-            \"Every message received by the client from the server extends the time out duration.\" )\n-    public static final Setting<Duration> catch_up_client_inactivity_timeout =\n-            setting( \"causal_clustering.catch_up_client_inactivity_timeout\", DURATION, \"20s\" );\n+    @Description( \"The catch up protocol times out if the given duration elapses with no network activity. \" + \"Every message received by the client from the server extends the time out duration.\" )\n+    public static final Setting<Duration> catch_up_client_inactivity_timeout = setting( \"causal_clustering.catch_up_client_inactivity_timeout\", DURATION, \"20s\" );\n \n-    @Description( \"Maximum retry time per request during store copy. Regular store files and indexes are downloaded in separate requests during store copy.\" +\n-            \" This configures the maximum time failed requests are allowed to resend. \" )\n-    public static final Setting<Duration> store_copy_max_retry_time_per_request =\n-            setting( \"causal_clustering.store_copy_max_retry_time_per_request\", DURATION, \"20m\" );\n+@Description( \"Maximum retry time per request during store copy. Regular store files and indexes are downloaded in separate requests during store copy.\" + \" This configures the maximum time failed requests are allowed to resend. \" )\n+    public static final Setting<Duration> store_copy_max_retry_time_per_request = setting( \"causal_clustering.store_copy_max_retry_time_per_request\", DURATION, \"20m\" );\n \n-    @Description( \"Maximum backoff timeout for store copy requests\" )\n+@Description( \"Maximum backoff timeout for store copy requests\" )\n     @Internal\n     public static final Setting<Duration> store_copy_backoff_max_wait = setting( \"causal_clustering.store_copy_backoff_max_wait\", DURATION, \"5s\" );\n \n     @Description( \"Throttle limit for logging unknown cluster member address\" )\n-    public static final Setting<Duration> unknown_address_logging_throttle =\n-            setting( \"causal_clustering.unknown_address_logging_throttle\", DURATION, \"10000ms\" );\n+    public static final Setting<Duration> unknown_address_logging_throttle = setting( \"causal_clustering.unknown_address_logging_throttle\", DURATION, \"10000ms\" );\n \n-    @Description( \"Maximum transaction batch size for read replicas when applying transactions pulled from core \" +\n-            \"servers.\" )\n+@Description( \"Maximum transaction batch size for read replicas when applying transactions pulled from core \" + \"servers.\" )\n     @Internal\n-    public static final Setting<Integer> read_replica_transaction_applier_batch_size =\n-            setting( \"causal_clustering.read_replica_transaction_applier_batch_size\", INTEGER, \"64\" );\n-\n-    @Description( \"Time To Live before read replica is considered unavailable\" )\n-    public static final Setting<Duration> read_replica_time_to_live =\n-            buildSetting( \"causal_clustering.read_replica_time_to_live\", DURATION, \"1m\" ).constraint( min( Duration.ofSeconds( 60 ) ) ).build();\n-\n-    @Description( \"How long drivers should cache the data from the `dbms.cluster.routing.getServers()` procedure.\" )\n-    public static final Setting<Duration> cluster_routing_ttl =\n-            buildSetting( \"causal_clustering.cluster_routing_ttl\", DURATION, \"300s\" ).constraint( min( Duration.ofSeconds( 1 ) ) ).build();\n-\n-    @Description( \"Configure if the `dbms.cluster.routing.getServers()` procedure should include followers as read \" +\n-            \"endpoints or return only read replicas. Note: if there are no read replicas in the cluster, followers \" +\n-            \"are returned as read end points regardless the value of this setting. Defaults to true so that followers \" +\n-            \"are available for read-only queries in a typical heterogeneous setup.\" )\n-    public static final Setting<Boolean> cluster_allow_reads_on_followers =\n-            setting( \"causal_clustering.cluster_allow_reads_on_followers\", BOOLEAN, TRUE );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out of NODE IDs. \" +\n-            \"Larger values mean less frequent requests but also result in more unused IDs (and unused disk space) \" +\n-            \"in the event of a crash.\" )\n-    public static final Setting<Integer> node_id_allocation_size =\n-            setting( \"causal_clustering.node_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_id_allocation_size =\n-            setting( \"causal_clustering.relationship_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of PROPERTY IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> property_id_allocation_size =\n-            setting( \"causal_clustering.property_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of STRING_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> string_block_id_allocation_size =\n-            setting( \"causal_clustering.string_block_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of ARRAY_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> array_block_id_allocation_size =\n-            setting( \"causal_clustering.array_block_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of PROPERTY_KEY_TOKEN IDs. Larger values mean less frequent requests but also result in more unused IDs \" +\n-            \"(and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> property_key_token_id_allocation_size =\n-            setting( \"causal_clustering.property_key_token_id_allocation_size\", INTEGER, \"32\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of PROPERTY_KEY_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> property_key_token_name_id_allocation_size =\n-            setting( \"causal_clustering.property_key_token_name_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP_TYPE_TOKEN IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_type_token_id_allocation_size =\n-            setting( \"causal_clustering.relationship_type_token_id_allocation_size\", INTEGER, \"32\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP_TYPE_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_type_token_name_id_allocation_size =\n-            setting( \"causal_clustering.relationship_type_token_name_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of LABEL_TOKEN IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> label_token_id_allocation_size =\n-            setting( \"causal_clustering.label_token_id_allocation_size\", INTEGER, \"32\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of LABEL_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> label_token_name_id_allocation_size =\n-            setting( \"causal_clustering.label_token_name_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of NEOSTORE_BLOCK IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> neostore_block_id_allocation_size =\n-            setting( \"causal_clustering.neostore_block_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of SCHEMA IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> schema_id_allocation_size =\n-            setting( \"causal_clustering.schema_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of NODE_LABELS IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> node_labels_id_allocation_size =\n-            setting( \"causal_clustering.node_labels_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"The size of the ID allocation requests Core servers will make when they run out \" +\n-            \"of RELATIONSHIP_GROUP IDs. Larger values mean less frequent requests but also result in more \" +\n-            \"unused IDs (and unused disk space) in the event of a crash.\" )\n-    public static final Setting<Integer> relationship_group_id_allocation_size =\n-            setting( \"causal_clustering.relationship_group_id_allocation_size\", INTEGER, \"1024\" );\n-\n-    @Description( \"Time between scanning the cluster to refresh current server's view of topology\" )\n-    public static final Setting<Duration> cluster_topology_refresh =\n-            buildSetting( \"causal_clustering.cluster_topology_refresh\", DURATION, \"5s\" ).constraint( min( Duration.ofSeconds( 1 ) ) ).build();\n-\n-    @Description( \"An ordered list in descending preference of the strategy which read replicas use to choose \" +\n-            \"the upstream server from which to pull transactional updates.\" )\n-    public static final Setting<List<String>> upstream_selection_strategy =\n-            setting( \"causal_clustering.upstream_selection_strategy\", list( \",\", STRING ), \"default\" );\n-\n-    @Description( \"Configuration of a user-defined upstream selection strategy. \" +\n-            \"The user-defined strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" +\n-            \"includes the value `user_defined`. \" )\n-    public static final Setting<String> user_defined_upstream_selection_strategy =\n-            setting( \"causal_clustering.user_defined_upstream_strategy\", STRING, \"\" );\n-\n-    @Description( \"Comma separated list of groups to be used by the connect-randomly-to-server-group selection strategy. \" +\n-            \"The connect-randomly-to-server-group strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" +\n-            \"includes the value `connect-randomly-to-server-group`. \" )\n-    public static final Setting<List<String>> connect_randomly_to_server_group_strategy =\n-            setting( \"causal_clustering.connect-randomly-to-server-group\", list( \",\", STRING ), \"\" );\n-\n-    @Description( \"A list of group names for the server used when configuring load balancing and replication policies.\" )\n-    public static final Setting<List<String>> server_groups =\n-            setting( \"causal_clustering.server_groups\", list( \",\", STRING ), \"\" );\n-\n-    @Description( \"The load balancing plugin to use.\" )\n-    public static final Setting<String> load_balancing_plugin =\n-            setting( \"causal_clustering.load_balancing.plugin\", STRING, \"server_policies\" );\n-\n-    @Description( \"Time out for protocol negotiation handshake\" )\n+    public static final Setting<Integer> read_replica_transaction_applier_batch_size = setting( \"causal_clustering.read_replica_transaction_applier_batch_size\", INTEGER, \"64\" );\n+\n+@Description( \"Time To Live before read replica is considered unavailable\" )\n+    public static final Setting<Duration> read_replica_time_to_live = buildSetting( \"causal_clustering.read_replica_time_to_live\", DURATION, \"1m\" ).constraint( min( Duration.ofSeconds( 60 ) ) ).build();\n+\n+@Description( \"How long drivers should cache the data from the `dbms.cluster.routing.getServers()` procedure.\" )\n+    public static final Setting<Duration> cluster_routing_ttl = buildSetting( \"causal_clustering.cluster_routing_ttl\", DURATION, \"300s\" ).constraint( min( Duration.ofSeconds( 1 ) ) ).build();\n+\n+@Description( \"Configure if the `dbms.cluster.routing.getServers()` procedure should include followers as read \" + \"endpoints or return only read replicas. Note: if there are no read replicas in the cluster, followers \" + \"are returned as read end points regardless the value of this setting. Defaults to true so that followers \" + \"are available for read-only queries in a typical heterogeneous setup.\" )\n+    public static final Setting<Boolean> cluster_allow_reads_on_followers = setting( \"causal_clustering.cluster_allow_reads_on_followers\", BOOLEAN, TRUE );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out of NODE IDs. \" + \"Larger values mean less frequent requests but also result in more unused IDs (and unused disk space) \" + \"in the event of a crash.\" )\n+    public static final Setting<Integer> node_id_allocation_size = setting( \"causal_clustering.node_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of RELATIONSHIP IDs. Larger values mean less frequent requests but also result in more unused IDs \" + \"(and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> relationship_id_allocation_size = setting( \"causal_clustering.relationship_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of PROPERTY IDs. Larger values mean less frequent requests but also result in more unused IDs \" + \"(and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> property_id_allocation_size = setting( \"causal_clustering.property_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of STRING_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" + \"(and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> string_block_id_allocation_size = setting( \"causal_clustering.string_block_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of ARRAY_BLOCK IDs. Larger values mean less frequent requests but also result in more unused IDs \" + \"(and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> array_block_id_allocation_size = setting( \"causal_clustering.array_block_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of PROPERTY_KEY_TOKEN IDs. Larger values mean less frequent requests but also result in more unused IDs \" + \"(and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> property_key_token_id_allocation_size = setting( \"causal_clustering.property_key_token_id_allocation_size\", INTEGER, \"32\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of PROPERTY_KEY_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> property_key_token_name_id_allocation_size = setting( \"causal_clustering.property_key_token_name_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of RELATIONSHIP_TYPE_TOKEN IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> relationship_type_token_id_allocation_size = setting( \"causal_clustering.relationship_type_token_id_allocation_size\", INTEGER, \"32\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of RELATIONSHIP_TYPE_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> relationship_type_token_name_id_allocation_size = setting( \"causal_clustering.relationship_type_token_name_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of LABEL_TOKEN IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> label_token_id_allocation_size = setting( \"causal_clustering.label_token_id_allocation_size\", INTEGER, \"32\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of LABEL_TOKEN_NAME IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> label_token_name_id_allocation_size = setting( \"causal_clustering.label_token_name_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of NEOSTORE_BLOCK IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> neostore_block_id_allocation_size = setting( \"causal_clustering.neostore_block_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of SCHEMA IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> schema_id_allocation_size = setting( \"causal_clustering.schema_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of NODE_LABELS IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> node_labels_id_allocation_size = setting( \"causal_clustering.node_labels_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"The size of the ID allocation requests Core servers will make when they run out \" + \"of RELATIONSHIP_GROUP IDs. Larger values mean less frequent requests but also result in more \" + \"unused IDs (and unused disk space) in the event of a crash.\" )\n+    public static final Setting<Integer> relationship_group_id_allocation_size = setting( \"causal_clustering.relationship_group_id_allocation_size\", INTEGER, \"1024\" );\n+\n+@Description( \"Time between scanning the cluster to refresh current server's view of topology\" )\n+    public static final Setting<Duration> cluster_topology_refresh = buildSetting( \"causal_clustering.cluster_topology_refresh\", DURATION, \"5s\" ).constraint( min( Duration.ofSeconds( 1 ) ) ).build();\n+\n+@Description( \"An ordered list in descending preference of the strategy which read replicas use to choose \" + \"the upstream server from which to pull transactional updates.\" )\n+    public static final Setting<List<String>> upstream_selection_strategy = setting( \"causal_clustering.upstream_selection_strategy\", list( \",\", STRING ), \"default\" );\n+\n+@Description( \"Configuration of a user-defined upstream selection strategy. \" + \"The user-defined strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" + \"includes the value `user_defined`. \" )\n+    public static final Setting<String> user_defined_upstream_selection_strategy = setting( \"causal_clustering.user_defined_upstream_strategy\", STRING, \"\" );\n+\n+@Description( \"Comma separated list of groups to be used by the connect-randomly-to-server-group selection strategy. \" + \"The connect-randomly-to-server-group strategy is used if the list of strategies (`causal_clustering.upstream_selection_strategy`) \" + \"includes the value `connect-randomly-to-server-group`. \" )\n+    public static final Setting<List<String>> connect_randomly_to_server_group_strategy = setting( \"causal_clustering.connect-randomly-to-server-group\", list( \",\", STRING ), \"\" );\n+\n+@Description( \"A list of group names for the server used when configuring load balancing and replication policies.\" )\n+    public static final Setting<List<String>> server_groups = setting( \"causal_clustering.server_groups\", list( \",\", STRING ), \"\" );\n+\n+@Description( \"The load balancing plugin to use.\" )\n+    public static final Setting<String> load_balancing_plugin = setting( \"causal_clustering.load_balancing.plugin\", STRING, \"server_policies\" );\n+\n+@Description( \"Time out for protocol negotiation handshake\" )\n     public static final Setting<Duration> handshake_timeout = setting( \"causal_clustering.handshake_timeout\", DURATION, \"20s\" );\n \n-    @Description( \"The configuration must be valid for the configured plugin and usually exists\" +\n-            \"under matching subkeys, e.g. ..config.server_policies.*\" +\n-            \"This is just a top-level placeholder for the plugin-specific configuration.\" )\n-    public static final Setting<String> load_balancing_config =\n-            prefixSetting( \"causal_clustering.load_balancing.config\", STRING, \"\" );\n-\n-    @Description( \"Enables shuffling of the returned load balancing result.\" )\n-    public static final Setting<Boolean> load_balancing_shuffle =\n-            setting( \"causal_clustering.load_balancing.shuffle\", BOOLEAN, TRUE );\n-\n-    @Description( \"Require authorization for access to the Causal Clustering status endpoints.\" )\n-    public static final Setting<Boolean> status_auth_enabled =\n-            setting( \"dbms.security.causal_clustering_status_auth_enabled\", BOOLEAN, TRUE );\n-\n-    @Description( \"Enable multi-data center features. Requires appropriate licensing.\" )\n-    public static final Setting<Boolean> multi_dc_license =\n-            setting( \"causal_clustering.multi_dc_license\", BOOLEAN, FALSE );\n-\n-    @Description( \"Name of the SSL policy to be used by the clustering, as defined under the dbms.ssl.policy.* settings.\" +\n-                  \" If no policy is configured then the communication will not be secured.\" )\n-    public static final Setting<String> ssl_policy =\n-            prefixSetting( \"causal_clustering.ssl_policy\", STRING, NO_DEFAULT );\n-\n-    @Description( \"Raft protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" +\n-            \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\" )\n-    public static final Setting<List<Integer>> raft_implementations =\n-            setting( \"causal_clustering.protocol_implementations.raft\", list( \",\", INTEGER ), \"\" );\n-\n-    @Description( \"Catchup protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" +\n-            \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\" )\n-    public static final Setting<List<Integer>> catchup_implementations =\n-            setting( \"causal_clustering.protocol_implementations.catchup\", list( \",\", INTEGER ), \"\" );\n-\n-    @Description( \"Network compression algorithms that this instance will allow in negotiation as a comma-separated list.\" +\n-            \" Listed in descending order of preference for incoming connections. An empty list implies no compression.\" +\n-            \" For outgoing connections this merely specifies the allowed set of algorithms and the preference of the \" +\n-            \" remote peer will be used for making the decision.\" +\n-            \" Allowable values: [\" + GZIP + \",\" + SNAPPY + \",\" + SNAPPY_VALIDATING + \",\" +\n-            LZ4 + \",\" + LZ4_HIGH_COMPRESSION + \",\" + LZ_VALIDATING + \",\" + LZ4_HIGH_COMPRESSION_VALIDATING + \"]\" )\n-    public static final Setting<List<String>> compression_implementations =\n-            setting( \"causal_clustering.protocol_implementations.compression\", STRING_LIST, \"\");\n-}\n+    @Description( \"The configuration must be valid for the configured plugin and usually exists\" + \"under matching subkeys, e.g. ..config.server_policies.*\" + \"This is just a top-level placeholder for the plugin-specific configuration.\" )\n+    public static final Setting<String> load_balancing_config = prefixSetting( \"causal_clustering.load_balancing.config\", STRING, \"\" );\n+\n+@Description( \"Enables shuffling of the returned load balancing result.\" )\n+    public static final Setting<Boolean> load_balancing_shuffle = setting( \"causal_clustering.load_balancing.shuffle\", BOOLEAN, TRUE );\n+\n+@Description( \"Require authorization for access to the Causal Clustering status endpoints.\" )\n+    public static final Setting<Boolean> status_auth_enabled = setting( \"dbms.security.causal_clustering_status_auth_enabled\", BOOLEAN, TRUE );\n+\n+@Description( \"Enable multi-data center features. Requires appropriate licensing.\" )\n+    public static final Setting<Boolean> multi_dc_license = setting( \"causal_clustering.multi_dc_license\", BOOLEAN, FALSE );\n+\n+@Description( \"Name of the SSL policy to be used by the clustering, as defined under the dbms.ssl.policy.* settings.\" + \" If no policy is configured then the communication will not be secured.\" )\n+public static final Setting<String> ssl_policy = prefixSetting( \"causal_clustering.ssl_policy\", STRING, NO_DEFAULT );\n+\n+@Description( \"Raft protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" + \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\" )\n+    public static final Setting<List<Integer>> raft_implementations = setting( \"causal_clustering.protocol_implementations.raft\", list( \",\", INTEGER ), \"\" );\n+\n+@Description( \"Catchup protocol implementation versions that this instance will allow in negotiation as a comma-separated list.\" + \" Order is not relevant: the greatest value will be preferred. An empty list will allow all supported versions\" )\n+    public static final Setting<List<Integer>> catchup_implementations = setting( \"causal_clustering.protocol_implementations.catchup\", list( \",\", INTEGER ), \"\" );\n+\n+@Description( \"Network compression algorithms that this instance will allow in negotiation as a comma-separated list.\" + \" Listed in descending order of preference for incoming connections. An empty list implies no compression.\" + \" For outgoing connections this merely specifies the allowed set of algorithms and the preference of the \" + \" remote peer will be used for making the decision.\" + \" Allowable values: [\" + GZIP + \",\" + SNAPPY + \",\" + SNAPPY_VALIDATING + \",\" + LZ4 + \",\" + LZ4_HIGH_COMPRESSION + \",\" + LZ_VALIDATING + \",\" + LZ4_HIGH_COMPRESSION_VALIDATING + \"]\" )\n+public static final Setting<List<String>> compression_implementations = setting( \"causal_clustering.protocol_implementations.compression\", STRING_LIST, \"\" );\n+    }\n\\ No newline at end of file\n",
            "diff_size": 396
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3225",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3225/GroupedDaemonThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3225/GroupedDaemonThreadFactory.java\nindex 549b0f79cac..02b3e0fe4c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3225/GroupedDaemonThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3225/GroupedDaemonThreadFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.util.concurrent.ForkJoinPool;\n@@ -28,62 +29,61 @@ import org.neo4j.scheduler.JobScheduler;\n \n final class GroupedDaemonThreadFactory implements ThreadFactory, ForkJoinPool.ForkJoinWorkerThreadFactory\n {\n-    private final JobScheduler.Group group;\n-    private final ThreadGroup threadGroup;\n+  private final JobScheduler.Group group;\n+  private final ThreadGroup threadGroup;\n \n-    GroupedDaemonThreadFactory( JobScheduler.Group group, ThreadGroup parentThreadGroup )\n-    {\n-        this.group = group;\n-        threadGroup = new ThreadGroup( parentThreadGroup, group.name() );\n-    }\n+  GroupedDaemonThreadFactory(JobScheduler.Group group, ThreadGroup parentThreadGroup)\n+  {\n+    this.group = group;\n+    threadGroup = new ThreadGroup(parentThreadGroup, group.name());\n+  }\n \n-    @Override\n-    public Thread newThread( @SuppressWarnings( \"NullableProblems\" ) Runnable job )\n+  @Override\n+  public Thread newThread(@SuppressWarnings(\"NullableProblems\") Runnable job)\n+  {\n+    Thread thread = new Thread(threadGroup, job, group.threadName())\n     {\n-        Thread thread = new Thread( threadGroup, job, group.threadName() )\n+      @Override\n+      public String toString()\n+      {\n+        StringBuilder sb = new StringBuilder(\"Thread[\").append(getName());\n+        ThreadGroup group = getThreadGroup();\n+        String sep = \", in \";\n+        while (group != null)\n         {\n-            @Override\n-            public String toString()\n-            {\n-                StringBuilder sb = new StringBuilder( \"Thread[\" ).append( getName() );\n-                ThreadGroup group = getThreadGroup();\n-                String sep = \", in \";\n-                while ( group != null )\n-                {\n-                    sb.append( sep ).append( group.getName() );\n-                    group = group.getParent();\n-                    sep = \"/\";\n-                }\n-                return sb.append( ']' ).toString();\n-            }\n-        };\n-        thread.setDaemon( true );\n-        return thread;\n-    }\n+          sb.append(sep).append(group.getName());\n+          group = group.getParent();\n+          sep = \"/\";\n+        }\n+        return sb.append(']').toString();\n+      }\n+    };\n+    thread.setDaemon(true);\n+    return thread;\n+  }\n \n-    @Override\n-    public ForkJoinWorkerThread newThread( ForkJoinPool pool )\n+  @Override\n+  public ForkJoinWorkerThread newThread(ForkJoinPool pool)\n+  {\n+    // We do this complicated dance of allocating the ForkJoinThread in a separate thread,\n+    // because there is no way to give it a specific ThreadGroup, other than through inheritance\n+    // from the allocating thread.\n+    ForkJoinPool.ForkJoinWorkerThreadFactory factory = ForkJoinPool.defaultForkJoinWorkerThreadFactory;\n+    AtomicReference<ForkJoinWorkerThread> reference = new AtomicReference<>();\n+    Thread allocator = newThread(() -> reference.set(factory.newThread(pool)));\n+    allocator.start();\n+    do\n     {\n-        // We do this complicated dance of allocating the ForkJoinThread in a separate thread,\n-        // because there is no way to give it a specific ThreadGroup, other than through inheritance\n-        // from the allocating thread.\n-        ForkJoinPool.ForkJoinWorkerThreadFactory factory = ForkJoinPool.defaultForkJoinWorkerThreadFactory;\n-        AtomicReference<ForkJoinWorkerThread> reference = new AtomicReference<>();\n-        Thread allocator = newThread( () -> reference.set( factory.newThread( pool ) ) );\n-        allocator.start();\n-        do\n-        {\n-            try\n-            {\n-                allocator.join();\n-            }\n-            catch ( InterruptedException ignore )\n-            {\n-            }\n-        }\n-        while ( reference.get() == null );\n-        ForkJoinWorkerThread worker = reference.get();\n-        worker.setName( group.threadName() );\n-        return worker;\n+      try\n+      {\n+        allocator.join();\n+      } catch (InterruptedException ignore)\n+      {\n+      }\n     }\n+    while (reference.get() == null);\n+    ForkJoinWorkerThread worker = reference.get();\n+    worker.setName(group.threadName());\n+    return worker;\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3225/GroupedDaemonThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3225/GroupedDaemonThreadFactory.java\nindex 549b0f79cac..3da71d06301 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3225/GroupedDaemonThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3225/GroupedDaemonThreadFactory.java\n@@ -54,7 +54,8 @@ final class GroupedDaemonThreadFactory implements ThreadFactory, ForkJoinPool.Fo\n                     group = group.getParent();\n                     sep = \"/\";\n                 }\n-                return sb.append( ']' ).toString();\n+\n+return sb.append( ']' ).toString();\n             }\n         };\n         thread.setDaemon( true );\n@@ -86,4 +87,4 @@ final class GroupedDaemonThreadFactory implements ThreadFactory, ForkJoinPool.Fo\n         worker.setName( group.threadName() );\n         return worker;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
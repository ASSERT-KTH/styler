{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2483",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2483/ProtocolVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2483/ProtocolVersion.java\nindex fe6cdc31dd0..a91033e3f98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2483/ProtocolVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2483/ProtocolVersion.java\n@@ -17,64 +17,65 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n public final class ProtocolVersion implements Comparable<ProtocolVersion>\n {\n-    public static final byte INTERNAL_PROTOCOL_VERSION = 2;\n+  public static final byte INTERNAL_PROTOCOL_VERSION = 2;\n \n-    private final byte applicationProtocol;\n-    private final byte internalProtocol;\n+  private final byte applicationProtocol;\n+  private final byte internalProtocol;\n \n-    public ProtocolVersion( byte applicationProtocol, byte internalProtocol )\n-    {\n-        this.applicationProtocol = applicationProtocol;\n-        this.internalProtocol = internalProtocol;\n-    }\n+  public ProtocolVersion(byte applicationProtocol, byte internalProtocol)\n+  {\n+    this.applicationProtocol = applicationProtocol;\n+    this.internalProtocol = internalProtocol;\n+  }\n \n-    public byte getApplicationProtocol()\n-    {\n-        return applicationProtocol;\n-    }\n+  public byte getApplicationProtocol()\n+  {\n+    return applicationProtocol;\n+  }\n \n-    public byte getInternalProtocol()\n-    {\n-        return internalProtocol;\n-    }\n+  public byte getInternalProtocol()\n+  {\n+    return internalProtocol;\n+  }\n \n-    @Override\n-    public boolean equals( Object obj )\n+  @Override\n+  public boolean equals(Object obj)\n+  {\n+    if (obj == null)\n     {\n-        if ( obj == null )\n-        {\n-            return false;\n-        }\n-        if ( obj.getClass() != ProtocolVersion.class )\n-        {\n-            return false;\n-        }\n-        ProtocolVersion other = (ProtocolVersion) obj;\n-        return (other.applicationProtocol == applicationProtocol) && (other.internalProtocol == internalProtocol);\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (obj.getClass() != ProtocolVersion.class)\n     {\n-        return (31 * applicationProtocol) | internalProtocol;\n+      return false;\n     }\n+    ProtocolVersion other = (ProtocolVersion) obj;\n+    return (other.applicationProtocol == applicationProtocol) && (other.internalProtocol == internalProtocol);\n+  }\n \n-    @Override\n-    public int compareTo( ProtocolVersion that )\n-    {\n-        return Byte.compare( this.applicationProtocol, that.applicationProtocol );\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return (31 * applicationProtocol) | internalProtocol;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"ProtocolVersion{\" +\n-                \"applicationProtocol=\" + applicationProtocol +\n-                \", internalProtocol=\" + internalProtocol +\n-                '}';\n-    }\n+  @Override\n+  public int compareTo(ProtocolVersion that)\n+  {\n+    return Byte.compare(this.applicationProtocol, that.applicationProtocol);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"ProtocolVersion{\" +\n+        \"applicationProtocol=\" + applicationProtocol +\n+        \", internalProtocol=\" + internalProtocol +\n+        '}';\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2483/ProtocolVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2483/ProtocolVersion.java\nindex fe6cdc31dd0..7706b813619 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2483/ProtocolVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2483/ProtocolVersion.java\n@@ -22,8 +22,7 @@ package org.neo4j.com;\n public final class ProtocolVersion implements Comparable<ProtocolVersion>\n {\n     public static final byte INTERNAL_PROTOCOL_VERSION = 2;\n-\n-    private final byte applicationProtocol;\n+private final byte applicationProtocol;\n     private final byte internalProtocol;\n \n     public ProtocolVersion( byte applicationProtocol, byte internalProtocol )\n@@ -49,18 +48,20 @@ public final class ProtocolVersion implements Comparable<ProtocolVersion>\n         {\n             return false;\n         }\n-        if ( obj.getClass() != ProtocolVersion.class )\n+\n+if ( obj.getClass() != ProtocolVersion.class )\n         {\n             return false;\n         }\n-        ProtocolVersion other = (ProtocolVersion) obj;\n+\n+ProtocolVersion other = (ProtocolVersion) obj;\n         return (other.applicationProtocol == applicationProtocol) && (other.internalProtocol == internalProtocol);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return (31 * applicationProtocol) | internalProtocol;\n+        return ( 31 * applicationProtocol) | internalProtocol;\n     }\n \n     @Override\n@@ -72,9 +73,6 @@ public final class ProtocolVersion implements Comparable<ProtocolVersion>\n     @Override\n     public String toString()\n     {\n-        return \"ProtocolVersion{\" +\n-                \"applicationProtocol=\" + applicationProtocol +\n-                \", internalProtocol=\" + internalProtocol +\n-                '}';\n+        return \"ProtocolVersion{\" + \"applicationProtocol=\" + applicationProtocol + \", internalProtocol=\" + internalProtocol + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
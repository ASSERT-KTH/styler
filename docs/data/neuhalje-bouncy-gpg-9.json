{
    "project_name": "neuhalje-bouncy-gpg",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n\nimport java.util.Collection;\nimport name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.Feature;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/9/KeySpecBuilderInterface.java\nindex 7759b175c2b..425e6b99fc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler/9/KeySpecBuilderInterface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/9/KeySpecBuilderInterface.java\nindex 7759b175c2b..e843ce1c237 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/intellij/9/KeySpecBuilderInterface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import java.util.Collection;\n@@ -43,7 +44,6 @@ public interface KeySpecBuilderInterface {\n      * </ul>\n      *\n      * @return keyspec\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithmIds()\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithmIds()\n      * @see PGPHashAlgorithms#recommendedAlgorithmIds()\n@@ -88,7 +88,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms set of preferred algorithms\n-     *\n      * @return next builder step\n      */\n     WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n@@ -111,7 +110,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms set of preferred algorithms\n-     *\n      * @return next builder step\n      */\n     WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n@@ -136,7 +134,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredHashAlgorithms withDefaultSymmetricAlgorithms();\n@@ -166,7 +163,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithms()\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n@@ -193,9 +189,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n@@ -218,9 +212,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n@@ -243,7 +235,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n     WithPreferredCompressionAlgorithms withDefaultHashAlgorithms();\n@@ -271,9 +262,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n     WithFeatures withPreferredCompressionAlgorithms(PGPCompressionAlgorithms... algorithms);\n@@ -297,9 +286,7 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @param algorithms the algorithms to set\n-     *\n      * @return next builder step\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n     WithFeatures withPreferredCompressionAlgorithms(\n@@ -324,7 +311,6 @@ public interface KeySpecBuilderInterface {\n      * </blockquote>\n      *\n      * @return next builder step\n-     *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n     WithFeatures withDefaultCompressionAlgorithms();\n@@ -335,8 +321,8 @@ public interface KeySpecBuilderInterface {\n \n     /**\n      * Add features to the key.\n-     * \n-     * @param feature  the feature\n+     *\n+     * @param feature the feature\n      * @return next step\n      */\n     WithFeatures withFeature(Feature feature);\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/9/KeySpecBuilderInterface.java\nindex 7759b175c2b..6d62f3b6496 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/naturalize/9/KeySpecBuilderInterface.java\n@@ -344,4 +344,4 @@ public interface KeySpecBuilderInterface {\n     KeySpec done();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'INTERFACE_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "237",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "319",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/9/KeySpecBuilderInterface.java\nindex 7759b175c2b..4ac432edc91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/codebuff/9/KeySpecBuilderInterface.java\n@@ -22,14 +22,16 @@ import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.PGPHashAlg\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.PGPSymmetricEncryptionAlgorithms;\n import org.bouncycastle.bcpg.sig.Features;\n \n+\n public interface KeySpecBuilderInterface {\n \n   WithDetailedConfiguration withKeyFlags(KeyFlag... flags);\n \n+\n   WithDetailedConfiguration withDefaultKeyFlags();\n \n-  KeySpec withInheritedSubPackets();\n \n+  KeySpec withInheritedSubPackets();\n   interface WithDetailedConfiguration {\n \n     WithPreferredSymmetricAlgorithms withDetailedConfiguration();\n@@ -49,6 +51,8 @@ public interface KeySpecBuilderInterface {\n      * @see PGPHashAlgorithms#recommendedAlgorithmIds()\n      * @see Features#FEATURE_MODIFICATION_DETECTION\n      */\n+\n+\n     KeySpec withDefaultAlgorithms();\n   }\n \n@@ -69,6 +73,7 @@ public interface KeySpecBuilderInterface {\n    * signature.\n    * </blockquote>\n    */\n+\n   interface WithPreferredSymmetricAlgorithms {\n \n     /**\n@@ -91,8 +96,8 @@ public interface KeySpecBuilderInterface {\n      *\n      * @return next builder step\n      */\n-    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n-        PGPSymmetricEncryptionAlgorithms... algorithms);\n+\n+    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(PGPSymmetricEncryptionAlgorithms... algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -114,8 +119,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @return next builder step\n      */\n-    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(\n-        Collection<PGPSymmetricEncryptionAlgorithms> algorithms);\n+\n+\n+    WithPreferredHashAlgorithms withPreferredSymmetricAlgorithms(Collection<PGPSymmetricEncryptionAlgorithms> algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -139,6 +145,8 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPSymmetricEncryptionAlgorithms#recommendedAlgorithms()\n      */\n+\n+\n     WithPreferredHashAlgorithms withDefaultSymmetricAlgorithms();\n \n     /**\n@@ -171,8 +179,9 @@ public interface KeySpecBuilderInterface {\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithFeatures withDefaultAlgorithms();\n \n+\n+    WithFeatures withDefaultAlgorithms();\n   }\n \n   interface WithPreferredHashAlgorithms {\n@@ -198,8 +207,8 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n-        PGPHashAlgorithms... algorithms);\n+\n+    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(PGPHashAlgorithms... algorithms);\n \n \n     /**\n@@ -223,8 +232,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(\n-        Collection<PGPHashAlgorithms> algorithms);\n+\n+\n+    WithPreferredCompressionAlgorithms withPreferredHashAlgorithms(Collection<PGPHashAlgorithms> algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -246,8 +256,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPHashAlgorithms#recommendedAlgorithms()\n      */\n-    WithPreferredCompressionAlgorithms withDefaultHashAlgorithms();\n \n+\n+    WithPreferredCompressionAlgorithms withDefaultHashAlgorithms();\n   }\n \n   interface WithPreferredCompressionAlgorithms {\n@@ -276,6 +287,7 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n+\n     WithFeatures withPreferredCompressionAlgorithms(PGPCompressionAlgorithms... algorithms);\n \n     /**\n@@ -302,8 +314,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n-    WithFeatures withPreferredCompressionAlgorithms(\n-        Collection<PGPCompressionAlgorithms> algorithms);\n+\n+\n+    WithFeatures withPreferredCompressionAlgorithms(Collection<PGPCompressionAlgorithms> algorithms);\n \n     /**\n      * <p>Annotate the public key with the set of algorithms the key holder prefers to use. It is\n@@ -327,8 +340,9 @@ public interface KeySpecBuilderInterface {\n      *\n      * @see PGPCompressionAlgorithms#recommendedAlgorithms()\n      */\n-    WithFeatures withDefaultCompressionAlgorithms();\n \n+\n+    WithFeatures withDefaultCompressionAlgorithms();\n   }\n \n   interface WithFeatures {\n@@ -339,9 +353,10 @@ public interface KeySpecBuilderInterface {\n      * @param feature  the feature\n      * @return next step\n      */\n+\n     WithFeatures withFeature(Feature feature);\n \n+\n     KeySpec done();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/9/KeySpecBuilderInterface.java\nindex 7759b175c2b..425e6b99fc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_random/9/KeySpecBuilderInterface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n \n import java.util.Collection;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/9/KeySpecBuilderInterface.java\nindex 7759b175c2b..c62e956dfcd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/errored/1/9/KeySpecBuilderInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neuhalje-bouncy-gpg/styler_three_grams/9/KeySpecBuilderInterface.java\n@@ -13,7 +13,8 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package name.neuhalfen.projects.crypto.bouncycastle.openpgp.keys.generation;\n+\n+package name.neuhalfen.projects.crypto.bouncycastle.openpgp. keys. generation;\n \n import java.util.Collection;\n import name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms.Feature;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
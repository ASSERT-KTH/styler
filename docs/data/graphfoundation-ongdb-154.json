{
    "project_name": "graphfoundation-ongdb",
    "error_id": "154",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/154/RelationshipGroupGetter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/154/RelationshipGroupGetter.java\nindex fae41765990..8b1d64c26bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/154/RelationshipGroupGetter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/154/RelationshipGroupGetter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import org.neo4j.kernel.impl.store.id.IdSequence;\n@@ -27,101 +28,99 @@ import org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy;\n \n public class RelationshipGroupGetter\n {\n-    private final IdSequence idGenerator;\n+  private final IdSequence idGenerator;\n \n-    public RelationshipGroupGetter( IdSequence idGenerator )\n-    {\n-        this.idGenerator = idGenerator;\n-    }\n+  public RelationshipGroupGetter(IdSequence idGenerator)\n+  {\n+    this.idGenerator = idGenerator;\n+  }\n \n-    public RelationshipGroupPosition getRelationshipGroup( NodeRecord node, int type,\n-            RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords )\n+  public RelationshipGroupPosition getRelationshipGroup(NodeRecord node, int type,\n+                                                        RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords)\n+  {\n+    long groupId = node.getNextRel();\n+    long previousGroupId = Record.NO_NEXT_RELATIONSHIP.intValue();\n+    RecordProxy<RelationshipGroupRecord, Integer> previous = null;\n+    RecordProxy<RelationshipGroupRecord, Integer> current;\n+    while (groupId != Record.NO_NEXT_RELATIONSHIP.intValue())\n     {\n-        long groupId = node.getNextRel();\n-        long previousGroupId = Record.NO_NEXT_RELATIONSHIP.intValue();\n-        RecordProxy<RelationshipGroupRecord, Integer> previous = null;\n-        RecordProxy<RelationshipGroupRecord, Integer> current;\n-        while ( groupId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n-        {\n-            current = relGroupRecords.getOrLoad( groupId, null );\n-            RelationshipGroupRecord record = current.forReadingData();\n-            record.setPrev( previousGroupId ); // not persistent so not a \"change\"\n-            if ( record.getType() == type )\n-            {\n-                return new RelationshipGroupPosition( previous, current );\n-            }\n-            else if ( record.getType() > type )\n-            {   // The groups are sorted in the chain, so if we come too far we can return\n-                // empty handed right away\n-                return new RelationshipGroupPosition( previous, null );\n-            }\n-            previousGroupId = groupId;\n-            groupId = record.getNext();\n-            previous = current;\n-        }\n-        return new RelationshipGroupPosition( previous, null );\n+      current = relGroupRecords.getOrLoad(groupId, null);\n+      RelationshipGroupRecord record = current.forReadingData();\n+      record.setPrev(previousGroupId); // not persistent so not a \"change\"\n+      if (record.getType() == type)\n+      {\n+        return new RelationshipGroupPosition(previous, current);\n+      } else if (record.getType() > type)\n+      {   // The groups are sorted in the chain, so if we come too far we can return\n+        // empty handed right away\n+        return new RelationshipGroupPosition(previous, null);\n+      }\n+      previousGroupId = groupId;\n+      groupId = record.getNext();\n+      previous = current;\n     }\n+    return new RelationshipGroupPosition(previous, null);\n+  }\n \n-    public RecordProxy<RelationshipGroupRecord, Integer> getOrCreateRelationshipGroup(\n-            NodeRecord node, int type, RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords  )\n+  public RecordProxy<RelationshipGroupRecord, Integer> getOrCreateRelationshipGroup(\n+      NodeRecord node, int type, RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords)\n+  {\n+    RelationshipGroupPosition existingGroup = getRelationshipGroup(node, type, relGroupRecords);\n+    RecordProxy<RelationshipGroupRecord, Integer> change = existingGroup.group();\n+    if (change == null)\n     {\n-        RelationshipGroupPosition existingGroup = getRelationshipGroup( node, type, relGroupRecords );\n-        RecordProxy<RelationshipGroupRecord, Integer> change = existingGroup.group();\n-        if ( change == null )\n-        {\n-            assert node.isDense() : \"Node \" + node + \" should have been dense at this point\";\n-            long id = idGenerator.nextId();\n-            change = relGroupRecords.create( id, type );\n-            RelationshipGroupRecord record = change.forChangingData();\n-            record.setInUse( true );\n-            record.setCreated();\n-            record.setOwningNode( node.getId() );\n+      assert node.isDense() : \"Node \" + node + \" should have been dense at this point\";\n+      long id = idGenerator.nextId();\n+      change = relGroupRecords.create(id, type);\n+      RelationshipGroupRecord record = change.forChangingData();\n+      record.setInUse(true);\n+      record.setCreated();\n+      record.setOwningNode(node.getId());\n \n-            // Attach it...\n-            RecordProxy<RelationshipGroupRecord, Integer> closestPreviousChange = existingGroup.closestPrevious();\n-            if ( closestPreviousChange != null )\n-            {   // ...after the closest previous one\n-                RelationshipGroupRecord closestPrevious = closestPreviousChange.forChangingLinkage();\n-                record.setNext( closestPrevious.getNext() );\n-                record.setPrev( closestPrevious.getId() );\n-                closestPrevious.setNext( id );\n-            }\n-            else\n-            {   // ...first in the chain\n-                long firstGroupId = node.getNextRel();\n-                if ( firstGroupId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n-                {   // There are others, make way for this new group\n-                    RelationshipGroupRecord previousFirstRecord =\n-                            relGroupRecords.getOrLoad( firstGroupId, type ).forReadingData();\n-                    record.setNext( previousFirstRecord.getId() );\n-                    previousFirstRecord.setPrev( id );\n-                }\n-                node.setNextRel( id );\n-            }\n+      // Attach it...\n+      RecordProxy<RelationshipGroupRecord, Integer> closestPreviousChange = existingGroup.closestPrevious();\n+      if (closestPreviousChange != null)\n+      {   // ...after the closest previous one\n+        RelationshipGroupRecord closestPrevious = closestPreviousChange.forChangingLinkage();\n+        record.setNext(closestPrevious.getNext());\n+        record.setPrev(closestPrevious.getId());\n+        closestPrevious.setNext(id);\n+      } else\n+      {   // ...first in the chain\n+        long firstGroupId = node.getNextRel();\n+        if (firstGroupId != Record.NO_NEXT_RELATIONSHIP.intValue())\n+        {   // There are others, make way for this new group\n+          RelationshipGroupRecord previousFirstRecord =\n+              relGroupRecords.getOrLoad(firstGroupId, type).forReadingData();\n+          record.setNext(previousFirstRecord.getId());\n+          previousFirstRecord.setPrev(id);\n         }\n-        return change;\n+        node.setNextRel(id);\n+      }\n     }\n+    return change;\n+  }\n \n-    public static class RelationshipGroupPosition\n-    {\n-        private final RecordProxy<RelationshipGroupRecord, Integer> closestPrevious;\n-        private final RecordProxy<RelationshipGroupRecord, Integer> group;\n+  public static class RelationshipGroupPosition\n+  {\n+    private final RecordProxy<RelationshipGroupRecord, Integer> closestPrevious;\n+    private final RecordProxy<RelationshipGroupRecord, Integer> group;\n \n-        public RelationshipGroupPosition( RecordProxy<RelationshipGroupRecord, Integer> closestPrevious,\n-                RecordProxy<RelationshipGroupRecord, Integer> group )\n-        {\n-            this.closestPrevious = closestPrevious;\n-            this.group = group;\n-        }\n+    public RelationshipGroupPosition(RecordProxy<RelationshipGroupRecord, Integer> closestPrevious,\n+                                     RecordProxy<RelationshipGroupRecord, Integer> group)\n+    {\n+      this.closestPrevious = closestPrevious;\n+      this.group = group;\n+    }\n \n-        public RecordProxy<RelationshipGroupRecord, Integer> group()\n-        {\n-            return group;\n-        }\n+    public RecordProxy<RelationshipGroupRecord, Integer> group()\n+    {\n+      return group;\n+    }\n \n-        public RecordProxy<RelationshipGroupRecord, Integer> closestPrevious()\n-        {\n-            return closestPrevious;\n-        }\n+    public RecordProxy<RelationshipGroupRecord, Integer> closestPrevious()\n+    {\n+      return closestPrevious;\n     }\n+  }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/154/RelationshipGroupGetter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/154/RelationshipGroupGetter.java\nindex fae41765990..5e41f9aa089 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/154/RelationshipGroupGetter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/154/RelationshipGroupGetter.java\n@@ -34,13 +34,12 @@ public class RelationshipGroupGetter\n         this.idGenerator = idGenerator;\n     }\n \n-    public RelationshipGroupPosition getRelationshipGroup( NodeRecord node, int type,\n-            RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords )\n+    public RelationshipGroupPosition getRelationshipGroup( NodeRecord node, int type, RecordAccess<RelationshipGroupRecord,Integer> relGroupRecords )\n     {\n         long groupId = node.getNextRel();\n         long previousGroupId = Record.NO_NEXT_RELATIONSHIP.intValue();\n-        RecordProxy<RelationshipGroupRecord, Integer> previous = null;\n-        RecordProxy<RelationshipGroupRecord, Integer> current;\n+        RecordProxy<RelationshipGroupRecord,Integer> previous = null;\n+        RecordProxy<RelationshipGroupRecord,Integer> current;\n         while ( groupId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n         {\n             current = relGroupRecords.getOrLoad( groupId, null );\n@@ -51,22 +50,23 @@ public class RelationshipGroupGetter\n                 return new RelationshipGroupPosition( previous, current );\n             }\n             else if ( record.getType() > type )\n-            {   // The groups are sorted in the chain, so if we come too far we can return\n+            {\n+    // The groups are sorted in the chain, so if we come too far we can return\n                 // empty handed right away\n                 return new RelationshipGroupPosition( previous, null );\n             }\n-            previousGroupId = groupId;\n+\n+previousGroupId = groupId;\n             groupId = record.getNext();\n             previous = current;\n         }\n         return new RelationshipGroupPosition( previous, null );\n     }\n \n-    public RecordProxy<RelationshipGroupRecord, Integer> getOrCreateRelationshipGroup(\n-            NodeRecord node, int type, RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords  )\n+    public RecordProxy<RelationshipGroupRecord,Integer> getOrCreateRelationshipGroup( NodeRecord node, int type, RecordAccess<RelationshipGroupRecord,Integer> relGroupRecords )\n     {\n         RelationshipGroupPosition existingGroup = getRelationshipGroup( node, type, relGroupRecords );\n-        RecordProxy<RelationshipGroupRecord, Integer> change = existingGroup.group();\n+        RecordProxy<RelationshipGroupRecord,Integer> change = existingGroup.group();\n         if ( change == null )\n         {\n             assert node.isDense() : \"Node \" + node + \" should have been dense at this point\";\n@@ -78,22 +78,24 @@ public class RelationshipGroupGetter\n             record.setOwningNode( node.getId() );\n \n             // Attach it...\n-            RecordProxy<RelationshipGroupRecord, Integer> closestPreviousChange = existingGroup.closestPrevious();\n+            RecordProxy<RelationshipGroupRecord,Integer> closestPreviousChange = existingGroup.closestPrevious();\n             if ( closestPreviousChange != null )\n-            {   // ...after the closest previous one\n+            {\n+    // ...after the closest previous one\n                 RelationshipGroupRecord closestPrevious = closestPreviousChange.forChangingLinkage();\n                 record.setNext( closestPrevious.getNext() );\n                 record.setPrev( closestPrevious.getId() );\n                 closestPrevious.setNext( id );\n             }\n             else\n-            {   // ...first in the chain\n+            {\n+    // ...first in the chain\n                 long firstGroupId = node.getNextRel();\n                 if ( firstGroupId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n-                {   // There are others, make way for this new group\n-                    RelationshipGroupRecord previousFirstRecord =\n-                            relGroupRecords.getOrLoad( firstGroupId, type ).forReadingData();\n-                    record.setNext( previousFirstRecord.getId() );\n+                {\n+    // There are others, make way for this new group\n+                    RelationshipGroupRecord previousFirstRecord = relGroupRecords.getOrLoad( firstGroupId, type ).forReadingData();\n+record.setNext( previousFirstRecord.getId() );\n                     previousFirstRecord.setPrev( id );\n                 }\n                 node.setNextRel( id );\n@@ -104,24 +106,23 @@ public class RelationshipGroupGetter\n \n     public static class RelationshipGroupPosition\n     {\n-        private final RecordProxy<RelationshipGroupRecord, Integer> closestPrevious;\n-        private final RecordProxy<RelationshipGroupRecord, Integer> group;\n+        private final RecordProxy<RelationshipGroupRecord,Integer> closestPrevious;\n+        private final RecordProxy<RelationshipGroupRecord,Integer> group;\n \n-        public RelationshipGroupPosition( RecordProxy<RelationshipGroupRecord, Integer> closestPrevious,\n-                RecordProxy<RelationshipGroupRecord, Integer> group )\n+        public RelationshipGroupPosition( RecordProxy<RelationshipGroupRecord,Integer> closestPrevious, RecordProxy<RelationshipGroupRecord,Integer> group )\n         {\n             this.closestPrevious = closestPrevious;\n             this.group = group;\n         }\n \n-        public RecordProxy<RelationshipGroupRecord, Integer> group()\n+        public RecordProxy<RelationshipGroupRecord,Integer> group()\n         {\n             return group;\n         }\n \n-        public RecordProxy<RelationshipGroupRecord, Integer> closestPrevious()\n+        public RecordProxy<RelationshipGroupRecord,Integer> closestPrevious()\n         {\n             return closestPrevious;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
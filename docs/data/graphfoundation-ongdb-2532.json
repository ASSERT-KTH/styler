{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2532",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2532/IndexWriterConfigs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2532/IndexWriterConfigs.java\nindex 6eab0f51537..ab05405e9ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2532/IndexWriterConfigs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2532/IndexWriterConfigs.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -37,88 +38,88 @@ import org.neo4j.util.FeatureToggles;\n  */\n public final class IndexWriterConfigs\n {\n-    private static final int MAX_BUFFERED_DOCS =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"max_buffered_docs\", 100000 );\n-    private static final int POPULATION_MAX_BUFFERED_DOCS =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"population_max_buffered_docs\", IndexWriterConfig.DISABLE_AUTO_FLUSH );\n-    private static final int MAX_BUFFERED_DELETE_TERMS =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"max_buffered_delete_terms\", 15000 );\n-    private static final int MERGE_POLICY_MERGE_FACTOR =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"merge.factor\", 2 );\n-    private static final double MERGE_POLICY_NO_CFS_RATIO =\n-            FeatureToggles.getDouble( IndexWriterConfigs.class, \"nocfs.ratio\", 1.0 );\n-    private static final double MERGE_POLICY_MIN_MERGE_MB =\n-            FeatureToggles.getDouble( IndexWriterConfigs.class, \"min.merge\", 0.1 );\n-    private static final boolean CODEC_BLOCK_TREE_ORDS_POSTING_FORMAT =\n-            FeatureToggles.flag( IndexWriterConfigs.class, \"block.tree.ords.posting.format\", true );\n+  private static final int MAX_BUFFERED_DOCS =\n+      FeatureToggles.getInteger(IndexWriterConfigs.class, \"max_buffered_docs\", 100000);\n+  private static final int POPULATION_MAX_BUFFERED_DOCS =\n+      FeatureToggles.getInteger(IndexWriterConfigs.class, \"population_max_buffered_docs\", IndexWriterConfig.DISABLE_AUTO_FLUSH);\n+  private static final int MAX_BUFFERED_DELETE_TERMS =\n+      FeatureToggles.getInteger(IndexWriterConfigs.class, \"max_buffered_delete_terms\", 15000);\n+  private static final int MERGE_POLICY_MERGE_FACTOR =\n+      FeatureToggles.getInteger(IndexWriterConfigs.class, \"merge.factor\", 2);\n+  private static final double MERGE_POLICY_NO_CFS_RATIO =\n+      FeatureToggles.getDouble(IndexWriterConfigs.class, \"nocfs.ratio\", 1.0);\n+  private static final double MERGE_POLICY_MIN_MERGE_MB =\n+      FeatureToggles.getDouble(IndexWriterConfigs.class, \"min.merge\", 0.1);\n+  private static final boolean CODEC_BLOCK_TREE_ORDS_POSTING_FORMAT =\n+      FeatureToggles.flag(IndexWriterConfigs.class, \"block.tree.ords.posting.format\", true);\n \n-    private static final double STANDARD_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class,\n-            \"standard.ram.buffer.size\", IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB );\n-    private static final double POPULATION_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class,\n-            \"population.ram.buffer.size\", 50 );\n+  private static final double STANDARD_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble(IndexWriterConfigs.class,\n+      \"standard.ram.buffer.size\", IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n+  private static final double POPULATION_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble(IndexWriterConfigs.class,\n+      \"population.ram.buffer.size\", 50);\n \n-    private static final boolean CUSTOM_MERGE_SCHEDULER =\n-            FeatureToggles.flag( IndexWriterConfigs.class, \"custom.merge.scheduler\", true );\n+  private static final boolean CUSTOM_MERGE_SCHEDULER =\n+      FeatureToggles.flag(IndexWriterConfigs.class, \"custom.merge.scheduler\", true);\n \n-    /**\n-     * Default postings format for schema and label scan store indexes.\n-     */\n-    private static final BlockTreeOrdsPostingsFormat blockTreeOrdsPostingsFormat = new BlockTreeOrdsPostingsFormat();\n+  /**\n+   * Default postings format for schema and label scan store indexes.\n+   */\n+  private static final BlockTreeOrdsPostingsFormat blockTreeOrdsPostingsFormat = new BlockTreeOrdsPostingsFormat();\n \n-    private IndexWriterConfigs()\n-    {\n-        throw new AssertionError( \"Not for instantiation!\" );\n-    }\n+  private IndexWriterConfigs()\n+  {\n+    throw new AssertionError(\"Not for instantiation!\");\n+  }\n \n-    public static IndexWriterConfig standard()\n-    {\n-        Analyzer analyzer = LuceneDataSource.KEYWORD_ANALYZER;\n-        return standard( analyzer );\n-    }\n+  public static IndexWriterConfig standard()\n+  {\n+    Analyzer analyzer = LuceneDataSource.KEYWORD_ANALYZER;\n+    return standard(analyzer);\n+  }\n \n-    public static IndexWriterConfig standard( Analyzer analyzer )\n-    {\n-        IndexWriterConfig writerConfig = new IndexWriterConfig( analyzer );\n+  public static IndexWriterConfig standard(Analyzer analyzer)\n+  {\n+    IndexWriterConfig writerConfig = new IndexWriterConfig(analyzer);\n \n-        writerConfig.setMaxBufferedDocs( MAX_BUFFERED_DOCS );\n-        writerConfig.setMaxBufferedDeleteTerms( MAX_BUFFERED_DELETE_TERMS );\n-        writerConfig.setIndexDeletionPolicy( new SnapshotDeletionPolicy( new KeepOnlyLastCommitDeletionPolicy() ) );\n-        writerConfig.setUseCompoundFile( true );\n-        writerConfig.setRAMBufferSizeMB( STANDARD_RAM_BUFFER_SIZE_MB );\n-        writerConfig.setCodec(new Lucene54Codec()\n-        {\n-            @Override\n-            public PostingsFormat getPostingsFormatForField( String field )\n-            {\n-                PostingsFormat postingFormat = super.getPostingsFormatForField( field );\n-                return CODEC_BLOCK_TREE_ORDS_POSTING_FORMAT ? blockTreeOrdsPostingsFormat : postingFormat;\n-            }\n-        });\n-        if ( CUSTOM_MERGE_SCHEDULER )\n-        {\n-            writerConfig.setMergeScheduler( new PooledConcurrentMergeScheduler() );\n-        }\n+    writerConfig.setMaxBufferedDocs(MAX_BUFFERED_DOCS);\n+    writerConfig.setMaxBufferedDeleteTerms(MAX_BUFFERED_DELETE_TERMS);\n+    writerConfig.setIndexDeletionPolicy(new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()));\n+    writerConfig.setUseCompoundFile(true);\n+    writerConfig.setRAMBufferSizeMB(STANDARD_RAM_BUFFER_SIZE_MB);\n+    writerConfig.setCodec(new Lucene54Codec()\n+    {\n+      @Override\n+      public PostingsFormat getPostingsFormatForField(String field)\n+      {\n+        PostingsFormat postingFormat = super.getPostingsFormatForField(field);\n+        return CODEC_BLOCK_TREE_ORDS_POSTING_FORMAT ? blockTreeOrdsPostingsFormat : postingFormat;\n+      }\n+    });\n+    if (CUSTOM_MERGE_SCHEDULER)\n+    {\n+      writerConfig.setMergeScheduler(new PooledConcurrentMergeScheduler());\n+    }\n \n-        LogByteSizeMergePolicy mergePolicy = new LogByteSizeMergePolicy();\n-        mergePolicy.setNoCFSRatio( MERGE_POLICY_NO_CFS_RATIO );\n-        mergePolicy.setMinMergeMB( MERGE_POLICY_MIN_MERGE_MB );\n-        mergePolicy.setMergeFactor( MERGE_POLICY_MERGE_FACTOR );\n-        writerConfig.setMergePolicy( mergePolicy );\n+    LogByteSizeMergePolicy mergePolicy = new LogByteSizeMergePolicy();\n+    mergePolicy.setNoCFSRatio(MERGE_POLICY_NO_CFS_RATIO);\n+    mergePolicy.setMinMergeMB(MERGE_POLICY_MIN_MERGE_MB);\n+    mergePolicy.setMergeFactor(MERGE_POLICY_MERGE_FACTOR);\n+    writerConfig.setMergePolicy(mergePolicy);\n \n-        return writerConfig;\n-    }\n+    return writerConfig;\n+  }\n \n-    public static IndexWriterConfig population()\n-    {\n-        Analyzer analyzer = LuceneDataSource.KEYWORD_ANALYZER;\n-        return population( analyzer );\n-    }\n+  public static IndexWriterConfig population()\n+  {\n+    Analyzer analyzer = LuceneDataSource.KEYWORD_ANALYZER;\n+    return population(analyzer);\n+  }\n \n-    public static IndexWriterConfig population( Analyzer analyzer )\n-    {\n-        IndexWriterConfig writerConfig = standard( analyzer );\n-        writerConfig.setMaxBufferedDocs( POPULATION_MAX_BUFFERED_DOCS );\n-        writerConfig.setRAMBufferSizeMB( POPULATION_RAM_BUFFER_SIZE_MB );\n-        return writerConfig;\n-    }\n+  public static IndexWriterConfig population(Analyzer analyzer)\n+  {\n+    IndexWriterConfig writerConfig = standard(analyzer);\n+    writerConfig.setMaxBufferedDocs(POPULATION_MAX_BUFFERED_DOCS);\n+    writerConfig.setRAMBufferSizeMB(POPULATION_RAM_BUFFER_SIZE_MB);\n+    return writerConfig;\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2532/IndexWriterConfigs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2532/IndexWriterConfigs.java\nindex 6eab0f51537..6246926df8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2532/IndexWriterConfigs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2532/IndexWriterConfigs.java\n@@ -37,30 +37,27 @@ import org.neo4j.util.FeatureToggles;\n  */\n public final class IndexWriterConfigs\n {\n-    private static final int MAX_BUFFERED_DOCS =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"max_buffered_docs\", 100000 );\n-    private static final int POPULATION_MAX_BUFFERED_DOCS =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"population_max_buffered_docs\", IndexWriterConfig.DISABLE_AUTO_FLUSH );\n-    private static final int MAX_BUFFERED_DELETE_TERMS =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"max_buffered_delete_terms\", 15000 );\n-    private static final int MERGE_POLICY_MERGE_FACTOR =\n-            FeatureToggles.getInteger( IndexWriterConfigs.class, \"merge.factor\", 2 );\n-    private static final double MERGE_POLICY_NO_CFS_RATIO =\n-            FeatureToggles.getDouble( IndexWriterConfigs.class, \"nocfs.ratio\", 1.0 );\n-    private static final double MERGE_POLICY_MIN_MERGE_MB =\n-            FeatureToggles.getDouble( IndexWriterConfigs.class, \"min.merge\", 0.1 );\n-    private static final boolean CODEC_BLOCK_TREE_ORDS_POSTING_FORMAT =\n-            FeatureToggles.flag( IndexWriterConfigs.class, \"block.tree.ords.posting.format\", true );\n-\n-    private static final double STANDARD_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class,\n-            \"standard.ram.buffer.size\", IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB );\n-    private static final double POPULATION_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class,\n-            \"population.ram.buffer.size\", 50 );\n-\n-    private static final boolean CUSTOM_MERGE_SCHEDULER =\n-            FeatureToggles.flag( IndexWriterConfigs.class, \"custom.merge.scheduler\", true );\n-\n-    /**\n+    private static final int MAX_BUFFERED_DOCS = FeatureToggles.getInteger( IndexWriterConfigs.class, \"max_buffered_docs\", 100000 );\n+\n+private static final int POPULATION_MAX_BUFFERED_DOCS = FeatureToggles.getInteger( IndexWriterConfigs.class, \"population_max_buffered_docs\", IndexWriterConfig.DISABLE_AUTO_FLUSH );\n+\n+private static final int MAX_BUFFERED_DELETE_TERMS = FeatureToggles.getInteger( IndexWriterConfigs.class, \"max_buffered_delete_terms\", 15000 );\n+\n+private static final int MERGE_POLICY_MERGE_FACTOR = FeatureToggles.getInteger( IndexWriterConfigs.class, \"merge.factor\", 2 );\n+\n+private static final double MERGE_POLICY_NO_CFS_RATIO = FeatureToggles.getDouble( IndexWriterConfigs.class, \"nocfs.ratio\", 1.0 );\n+\n+private static final double MERGE_POLICY_MIN_MERGE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class, \"min.merge\", 0.1 );\n+\n+private static final boolean CODEC_BLOCK_TREE_ORDS_POSTING_FORMAT = FeatureToggles.flag( IndexWriterConfigs.class, \"block.tree.ords.posting.format\", true );\n+\n+private static final double STANDARD_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class, \"standard.ram.buffer.size\", IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB );\n+\n+private static final double POPULATION_RAM_BUFFER_SIZE_MB = FeatureToggles.getDouble( IndexWriterConfigs.class, \"population.ram.buffer.size\", 50 );\n+\n+private static final boolean CUSTOM_MERGE_SCHEDULER = FeatureToggles.flag( IndexWriterConfigs.class, \"custom.merge.scheduler\", true );\n+\n+/**\n      * Default postings format for schema and label scan store indexes.\n      */\n     private static final BlockTreeOrdsPostingsFormat blockTreeOrdsPostingsFormat = new BlockTreeOrdsPostingsFormat();\n@@ -79,8 +76,7 @@ public final class IndexWriterConfigs\n     public static IndexWriterConfig standard( Analyzer analyzer )\n     {\n         IndexWriterConfig writerConfig = new IndexWriterConfig( analyzer );\n-\n-        writerConfig.setMaxBufferedDocs( MAX_BUFFERED_DOCS );\n+writerConfig.setMaxBufferedDocs( MAX_BUFFERED_DOCS );\n         writerConfig.setMaxBufferedDeleteTerms( MAX_BUFFERED_DELETE_TERMS );\n         writerConfig.setIndexDeletionPolicy( new SnapshotDeletionPolicy( new KeepOnlyLastCommitDeletionPolicy() ) );\n         writerConfig.setUseCompoundFile( true );\n@@ -104,8 +100,7 @@ public final class IndexWriterConfigs\n         mergePolicy.setMinMergeMB( MERGE_POLICY_MIN_MERGE_MB );\n         mergePolicy.setMergeFactor( MERGE_POLICY_MERGE_FACTOR );\n         writerConfig.setMergePolicy( mergePolicy );\n-\n-        return writerConfig;\n+return writerConfig;\n     }\n \n     public static IndexWriterConfig population()\n@@ -121,4 +116,4 @@ public final class IndexWriterConfigs\n         writerConfig.setRAMBufferSizeMB( POPULATION_RAM_BUFFER_SIZE_MB );\n         return writerConfig;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
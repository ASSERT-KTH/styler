{
    "project_name": "Angel-ML-angel",
    "error_id": "884",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/884/LocationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/884/LocationManager.java\nindex 82d0c368632..8d44eff948d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/884/LocationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/884/LocationManager.java\n@@ -45,12 +45,12 @@ public class LocationManager {\n   /**\n    * All ps ids\n    */\n-  private volatile ParameterServerId [] psIds;\n+  private volatile ParameterServerId[] psIds;\n \n   /**\n    * Create a location manager\n    */\n-  public LocationManager(){\n+  public LocationManager() {\n     this.masterLocation = null;\n     this.psIdToLocMap = new ConcurrentHashMap<>();\n     this.workerIdToLocMap = new ConcurrentHashMap<>();\n@@ -58,6 +58,7 @@ public class LocationManager {\n \n   /**\n    * Get master location\n+   *\n    * @return master location\n    */\n   public Location getMasterLocation() {\n@@ -66,6 +67,7 @@ public class LocationManager {\n \n   /**\n    * Get a ps location\n+   *\n    * @param psId ps id\n    * @return ps location\n    */\n@@ -75,6 +77,7 @@ public class LocationManager {\n \n   /**\n    * Get a worker location\n+   *\n    * @param workerId worker id\n    * @return worker location\n    */\n@@ -84,6 +87,7 @@ public class LocationManager {\n \n   /**\n    * Set master location\n+   *\n    * @param masterLocation master location\n    */\n   public void setMasterLocation(Location masterLocation) {\n@@ -92,11 +96,12 @@ public class LocationManager {\n \n   /**\n    * Set a ps location\n+   *\n    * @param psId ps id\n-   * @param loc ps location\n+   * @param loc  ps location\n    */\n   public void setPsLocation(ParameterServerId psId, Location loc) {\n-    if(loc == null) {\n+    if (loc == null) {\n       psIdToLocMap.remove(psId);\n     } else {\n       psIdToLocMap.put(psId, loc);\n@@ -105,8 +110,9 @@ public class LocationManager {\n \n   /**\n    * Set worker location\n+   *\n    * @param workerId worker id\n-   * @param loc worker location\n+   * @param loc      worker location\n    */\n   public void setWorkerLocation(WorkerId workerId, Location loc) {\n     workerIdToLocMap.put(workerId, loc);\n@@ -114,6 +120,7 @@ public class LocationManager {\n \n   /**\n    * Set all ps ids\n+   *\n    * @param psIds all ps ids\n    */\n   public void setPsIds(ParameterServerId[] psIds) {\n@@ -122,6 +129,7 @@ public class LocationManager {\n \n   /**\n    * Get all ps ids\n+   *\n    * @return all ps ids\n    */\n   public ParameterServerId[] getPsIds() {\n@@ -133,6 +141,7 @@ public class LocationManager {\n \n   /**\n    * Are all pss registered\n+   *\n    * @return true mean all pss have registered to master\n    */\n   public boolean isAllPsRegisted() {\n@@ -141,6 +150,7 @@ public class LocationManager {\n \n   /**\n    * Get all ps locations\n+   *\n    * @return all ps locations\n    */\n   public Map<ParameterServerId, Location> getPsLocations() {\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/884/LocationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/884/LocationManager.java\nindex 82d0c368632..2293149674e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/884/LocationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/884/LocationManager.java\n@@ -45,12 +45,12 @@ public class LocationManager {\n   /**\n    * All ps ids\n    */\n-  private volatile ParameterServerId [] psIds;\n+  private volatile ParameterServerId[] psIds;\n \n   /**\n    * Create a location manager\n    */\n-  public LocationManager(){\n+  public LocationManager() {\n     this.masterLocation = null;\n     this.psIdToLocMap = new ConcurrentHashMap<>();\n     this.workerIdToLocMap = new ConcurrentHashMap<>();\n@@ -146,4 +146,4 @@ public class LocationManager {\n   public Map<ParameterServerId, Location> getPsLocations() {\n     return psIdToLocMap;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/884/LocationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/884/LocationManager.java\nindex 82d0c368632..0e99af71262 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/884/LocationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/884/LocationManager.java\n@@ -19,17 +19,18 @@ package com.tencent.angel.common.location;\n import com.tencent.angel.ps.ParameterServerId;\n import com.tencent.angel.psagent.PSAgentId;\n import com.tencent.angel.worker.WorkerId;\n-\n import java.util.*;\n import java.util.concurrent.ConcurrentHashMap;\n \n /**\n  * Location manager\n  */\n+\n public class LocationManager {\n   /**\n    * Master location\n    */\n+\n   private volatile Location masterLocation;\n \n   /**\n@@ -45,12 +46,13 @@ public class LocationManager {\n   /**\n    * All ps ids\n    */\n-  private volatile ParameterServerId [] psIds;\n+  private volatile ParameterServerId[] psIds;\n \n   /**\n    * Create a location manager\n    */\n-  public LocationManager(){\n+\n+  public LocationManager() {\n     this.masterLocation = null;\n     this.psIdToLocMap = new ConcurrentHashMap<>();\n     this.workerIdToLocMap = new ConcurrentHashMap<>();\n@@ -60,6 +62,7 @@ public class LocationManager {\n    * Get master location\n    * @return master location\n    */\n+\n   public Location getMasterLocation() {\n     return masterLocation;\n   }\n@@ -69,6 +72,7 @@ public class LocationManager {\n    * @param psId ps id\n    * @return ps location\n    */\n+\n   public Location getPsLocation(ParameterServerId psId) {\n     return psIdToLocMap.get(psId);\n   }\n@@ -78,6 +82,7 @@ public class LocationManager {\n    * @param workerId worker id\n    * @return worker location\n    */\n+\n   public Location getWorkerLocation(WorkerId workerId) {\n     return workerIdToLocMap.get(workerId);\n   }\n@@ -86,6 +91,7 @@ public class LocationManager {\n    * Set master location\n    * @param masterLocation master location\n    */\n+\n   public void setMasterLocation(Location masterLocation) {\n     this.masterLocation = masterLocation;\n   }\n@@ -95,8 +101,9 @@ public class LocationManager {\n    * @param psId ps id\n    * @param loc ps location\n    */\n+\n   public void setPsLocation(ParameterServerId psId, Location loc) {\n-    if(loc == null) {\n+    if (loc == null) {\n       psIdToLocMap.remove(psId);\n     } else {\n       psIdToLocMap.put(psId, loc);\n@@ -108,6 +115,7 @@ public class LocationManager {\n    * @param workerId worker id\n    * @param loc worker location\n    */\n+\n   public void setWorkerLocation(WorkerId workerId, Location loc) {\n     workerIdToLocMap.put(workerId, loc);\n   }\n@@ -116,6 +124,7 @@ public class LocationManager {\n    * Set all ps ids\n    * @param psIds all ps ids\n    */\n+\n   public void setPsIds(ParameterServerId[] psIds) {\n     this.psIds = psIds;\n   }\n@@ -124,17 +133,18 @@ public class LocationManager {\n    * Get all ps ids\n    * @return all ps ids\n    */\n+\n   public ParameterServerId[] getPsIds() {\n     return psIds;\n   }\n \n-  public void setPSAgentLocation(PSAgentId psAgentId, Location location) {\n-  }\n+  public void setPSAgentLocation(PSAgentId psAgentId, Location location) {}\n \n   /**\n    * Are all pss registered\n    * @return true mean all pss have registered to master\n    */\n+\n   public boolean isAllPsRegisted() {\n     return (psIds != null) && (psIds.length == psIdToLocMap.size());\n   }\n@@ -143,7 +153,9 @@ public class LocationManager {\n    * Get all ps locations\n    * @return all ps locations\n    */\n+\n   public Map<ParameterServerId, Location> getPsLocations() {\n     return psIdToLocMap;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
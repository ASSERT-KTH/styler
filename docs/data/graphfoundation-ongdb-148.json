{
    "project_name": "graphfoundation-ongdb",
    "error_id": "148",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/148/CatchupGoalTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/148/CatchupGoalTracker.java\nindex 87d6c95bfff..6e4f88a590f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/148/CatchupGoalTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/148/CatchupGoalTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.time.Clock;\n@@ -26,81 +27,78 @@ import org.neo4j.causalclustering.core.consensus.roles.follower.FollowerState;\n \n class CatchupGoalTracker\n {\n-    static final long MAX_ROUNDS = 10;\n+  static final long MAX_ROUNDS = 10;\n \n-    private final ReadableRaftLog raftLog;\n-    private final Clock clock;\n+  private final ReadableRaftLog raftLog;\n+  private final Clock clock;\n \n-    private long startTime;\n-    private  long roundStartTime;\n-    private final long roundTimeout;\n-    private long roundCount;\n-    private long catchupTimeout;\n+  private long startTime;\n+  private long roundStartTime;\n+  private final long roundTimeout;\n+  private long roundCount;\n+  private long catchupTimeout;\n \n-    private long targetIndex;\n-    private boolean finished;\n-    private boolean goalAchieved;\n+  private long targetIndex;\n+  private boolean finished;\n+  private boolean goalAchieved;\n \n-    CatchupGoalTracker( ReadableRaftLog raftLog, Clock clock, long roundTimeout, long catchupTimeout )\n-    {\n-        this.raftLog = raftLog;\n-        this.clock = clock;\n-        this.roundTimeout = roundTimeout;\n-        this.catchupTimeout = catchupTimeout;\n-        this.targetIndex = raftLog.appendIndex();\n-        this.startTime = clock.millis();\n-        this.roundStartTime = clock.millis();\n+  CatchupGoalTracker(ReadableRaftLog raftLog, Clock clock, long roundTimeout, long catchupTimeout)\n+  {\n+    this.raftLog = raftLog;\n+    this.clock = clock;\n+    this.roundTimeout = roundTimeout;\n+    this.catchupTimeout = catchupTimeout;\n+    this.targetIndex = raftLog.appendIndex();\n+    this.startTime = clock.millis();\n+    this.roundStartTime = clock.millis();\n \n-        this.roundCount = 1;\n-    }\n+    this.roundCount = 1;\n+  }\n \n-    void updateProgress( FollowerState followerState )\n+  void updateProgress(FollowerState followerState)\n+  {\n+    if (finished)\n     {\n-        if ( finished )\n-        {\n-            return;\n-        }\n-\n-        boolean achievedTarget = followerState.getMatchIndex() >= targetIndex;\n-        if ( achievedTarget && (clock.millis() - roundStartTime) <= roundTimeout )\n-        {\n-            goalAchieved = true;\n-            finished = true;\n-        }\n-        else if ( clock.millis() > (startTime + catchupTimeout) )\n-        {\n-            finished = true;\n-        }\n-        else if ( achievedTarget )\n-        {\n-            if ( roundCount < MAX_ROUNDS )\n-            {\n-                roundCount++;\n-                roundStartTime = clock.millis();\n-                targetIndex = raftLog.appendIndex();\n-            }\n-            else\n-            {\n-                finished = true;\n-            }\n-        }\n+      return;\n     }\n \n-    boolean isFinished()\n+    boolean achievedTarget = followerState.getMatchIndex() >= targetIndex;\n+    if (achievedTarget && (clock.millis() - roundStartTime) <= roundTimeout)\n     {\n-        return finished;\n-    }\n-\n-    boolean isGoalAchieved()\n+      goalAchieved = true;\n+      finished = true;\n+    } else if (clock.millis() > (startTime + catchupTimeout))\n     {\n-        return goalAchieved;\n-    }\n-\n-    @Override\n-    public String toString()\n+      finished = true;\n+    } else if (achievedTarget)\n     {\n-        return String.format( \"CatchupGoalTracker{startTime=%d, roundStartTime=%d, roundTimeout=%d, roundCount=%d, \" +\n-                \"catchupTimeout=%d, targetIndex=%d, finished=%s, goalAchieved=%s}\", startTime, roundStartTime,\n-                roundTimeout, roundCount, catchupTimeout, targetIndex, finished, goalAchieved );\n+      if (roundCount < MAX_ROUNDS)\n+      {\n+        roundCount++;\n+        roundStartTime = clock.millis();\n+        targetIndex = raftLog.appendIndex();\n+      } else\n+      {\n+        finished = true;\n+      }\n     }\n+  }\n+\n+  boolean isFinished()\n+  {\n+    return finished;\n+  }\n+\n+  boolean isGoalAchieved()\n+  {\n+    return goalAchieved;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"CatchupGoalTracker{startTime=%d, roundStartTime=%d, roundTimeout=%d, roundCount=%d, \" +\n+            \"catchupTimeout=%d, targetIndex=%d, finished=%s, goalAchieved=%s}\", startTime, roundStartTime,\n+        roundTimeout, roundCount, catchupTimeout, targetIndex, finished, goalAchieved);\n+  }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 294).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/148/CatchupGoalTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/148/CatchupGoalTracker.java\nindex 87d6c95bfff..82323051f8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/148/CatchupGoalTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/148/CatchupGoalTracker.java\n@@ -27,12 +27,11 @@ import org.neo4j.causalclustering.core.consensus.roles.follower.FollowerState;\n class CatchupGoalTracker\n {\n     static final long MAX_ROUNDS = 10;\n-\n-    private final ReadableRaftLog raftLog;\n+private final ReadableRaftLog raftLog;\n     private final Clock clock;\n \n     private long startTime;\n-    private  long roundStartTime;\n+    private long roundStartTime;\n     private final long roundTimeout;\n     private long roundCount;\n     private long catchupTimeout;\n@@ -50,8 +49,7 @@ class CatchupGoalTracker\n         this.targetIndex = raftLog.appendIndex();\n         this.startTime = clock.millis();\n         this.roundStartTime = clock.millis();\n-\n-        this.roundCount = 1;\n+this.roundCount = 1;\n     }\n \n     void updateProgress( FollowerState followerState )\n@@ -99,8 +97,6 @@ class CatchupGoalTracker\n     @Override\n     public String toString()\n     {\n-        return String.format( \"CatchupGoalTracker{startTime=%d, roundStartTime=%d, roundTimeout=%d, roundCount=%d, \" +\n-                \"catchupTimeout=%d, targetIndex=%d, finished=%s, goalAchieved=%s}\", startTime, roundStartTime,\n-                roundTimeout, roundCount, catchupTimeout, targetIndex, finished, goalAchieved );\n+        return String.format( \"CatchupGoalTracker{startTime=%d, roundStartTime=%d, roundTimeout=%d, roundCount=%d, \" + \"catchupTimeout=%d, targetIndex=%d, finished=%s, goalAchieved=%s}\", startTime, roundStartTime, roundTimeout, roundCount, catchupTimeout, targetIndex, finished, goalAchieved );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 294).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/148/CatchupGoalTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/148/CatchupGoalTracker.java\nindex 87d6c95bfff..5249b95a5de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/148/CatchupGoalTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/148/CatchupGoalTracker.java\n@@ -20,23 +20,19 @@\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.time.Clock;\n-\n import org.neo4j.causalclustering.core.consensus.log.ReadableRaftLog;\n import org.neo4j.causalclustering.core.consensus.roles.follower.FollowerState;\n \n class CatchupGoalTracker\n {\n     static final long MAX_ROUNDS = 10;\n-\n     private final ReadableRaftLog raftLog;\n     private final Clock clock;\n-\n     private long startTime;\n-    private  long roundStartTime;\n+    private long roundStartTime;\n     private final long roundTimeout;\n     private long roundCount;\n     private long catchupTimeout;\n-\n     private long targetIndex;\n     private boolean finished;\n     private boolean goalAchieved;\n@@ -50,7 +46,6 @@ class CatchupGoalTracker\n         this.targetIndex = raftLog.appendIndex();\n         this.startTime = clock.millis();\n         this.roundStartTime = clock.millis();\n-\n         this.roundCount = 1;\n     }\n \n@@ -62,28 +57,30 @@ class CatchupGoalTracker\n         }\n \n         boolean achievedTarget = followerState.getMatchIndex() >= targetIndex;\n-        if ( achievedTarget && (clock.millis() - roundStartTime) <= roundTimeout )\n+        if ( achievedTarget&& ( clock.millis() - roundStartTime) <= roundTimeout )\n         {\n             goalAchieved = true;\n             finished = true;\n         }\n-        else if ( clock.millis() > (startTime + catchupTimeout) )\n+        else\n+        if ( clock.millis() > ( startTime + catchupTimeout) )\n         {\n             finished = true;\n         }\n-        else if ( achievedTarget )\n-        {\n-            if ( roundCount < MAX_ROUNDS )\n-            {\n-                roundCount++;\n-                roundStartTime = clock.millis();\n-                targetIndex = raftLog.appendIndex();\n-            }\n-            else\n+        else\n+            if ( achievedTarget )\n             {\n-                finished = true;\n+                if ( roundCount < MAX_ROUNDS )\n+                {\n+                    roundCount++;\n+                    roundStartTime = clock.millis();\n+                    targetIndex = raftLog.appendIndex();\n+                }\n+                else\n+                {\n+                    finished = true;\n+                }\n             }\n-        }\n     }\n \n     boolean isFinished()\n@@ -99,8 +96,6 @@ class CatchupGoalTracker\n     @Override\n     public String toString()\n     {\n-        return String.format( \"CatchupGoalTracker{startTime=%d, roundStartTime=%d, roundTimeout=%d, roundCount=%d, \" +\n-                \"catchupTimeout=%d, targetIndex=%d, finished=%s, goalAchieved=%s}\", startTime, roundStartTime,\n-                roundTimeout, roundCount, catchupTimeout, targetIndex, finished, goalAchieved );\n+        return String.format( \"CatchupGoalTracker{startTime=%d, roundStartTime=%d, roundTimeout=%d, roundCount=%d, \" + \"catchupTimeout=%d, targetIndex=%d, finished=%s, goalAchieved=%s}\", startTime, roundStartTime, roundTimeout, roundCount, catchupTimeout, targetIndex, finished, goalAchieved );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
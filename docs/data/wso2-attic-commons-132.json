{
    "project_name": "wso2-attic-commons",
    "error_id": "132",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @hibernate.class table=\"BPEL_MESSAGE_EXCHANGE\" dynamic-update=\"true\"\n * @hibernate.query name=\"DELETE_MEX_BY_INSTANCE\" query=\"delete from HMessageExchange as m where m.instance = :instance\"\n * @hibernate.query name=\"SELECT_UNMATCHED_MEX_BY_INSTANCE\" query=\"from HMessageExchange as m where m in(select cm.messageExchange from HCorrelatorMessage as cm where cm.messageExchange.instance = :instance)\"\n * @hibernate.query name=\"DELETE_UNMATCHED_MEX\" query=\"delete from HMessageExchange as m where m in(:mex)\"\n * @hibernate.query name=\"DELETE_MEX_BY_PROCESS\" query=\"delete from HMessageExchange as m where m.process = :process\"\n */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/132/HMessageExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/132/HMessageExchange.java\nindex 221cfc082fc..63b3173c897 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/132/HMessageExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/132/HMessageExchange.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.daohib.bpel.hobj;\n \n import java.util.Date;\n@@ -24,7 +25,7 @@ import java.util.Map;\n \n /**\n  * Hibernate-managed table for keeping track of message exchanges.\n- * \n+ *\n  * @hibernate.class table=\"BPEL_MESSAGE_EXCHANGE\" dynamic-update=\"true\"\n  * @hibernate.query name=\"DELETE_MEX_BY_INSTANCE\" query=\"delete from HMessageExchange as m where m.instance = :instance\"\n  * @hibernate.query name=\"SELECT_UNMATCHED_MEX_BY_INSTANCE\" query=\"from HMessageExchange as m where m in(select cm.messageExchange from HCorrelatorMessage as cm where cm.messageExchange.instance = :instance)\"\n@@ -32,398 +33,397 @@ import java.util.Map;\n  * @hibernate.query name=\"DELETE_MEX_BY_PROCESS\" query=\"delete from HMessageExchange as m where m.process = :process\"\n  */\n public class HMessageExchange extends HObject {\n-    public final static String DELETE_MEX_BY_INSTANCE = \"DELETE_MEX_BY_INSTANCE\";\n-    public final static String SELECT_UNMATCHED_MEX_BY_INSTANCE = \"SELECT_UNMATCHED_MEX_BY_INSTANCE\";\n-    public final static String DELETE_UNMATCHED_MEX = \"DELETE_UNMATCHED_MEX\";\n-    public final static String DELETE_MEX_BY_PROCESS = \"DELETE_MEX_BY_PROCESS\";\n-\n-    private String _channelName;\n-\n-    private String _operationName;\n-\n-    private String _state;\n-\n-    private Date _insertTime;\n-\n-    private String _portType;\n-\n-    private HLargeData _endpoint;\n-\n-    private HLargeData _callbackEndpoint;\n-\n-    private HMessage _request;\n-\n-    private HMessage _response;\n-\n-    private HPartnerLink _partnerLink;\n-\n-    private String _clientKey;\n-\n-    private HProcessInstance _instance;\n-\n-    private HProcess _process;\n-\n-    private char _dir;\n-\n-    private int _plinkModelId;\n-\n-    private String _pattern;\n-\n-    private String _corrstatus;\n-\n-    private String _faultType;\n-\n-    private String _faultExplanation;\n-\n-    private String _callee;\n-\n-    private String _p2pPeer;\n-\n-    private Map<String, String> _properties = new HashMap<String, String>();\n-\n-    private long _timeout;\n-\n-    private String _istyle;\n-\n-    private String _failureType;\n-\n-    private String _mexId;\n-\n-    private String _ackType;\n-\n-    private String _pipedPid;\n-\n-    /**\n-     * \n-     */\n-    public HMessageExchange() {\n-        super();\n-    }\n-\n-    /**\n-     * \n-     * @hibernate.property\n-     * @hibernate.column name=\"MEXID\" not-null=\"true\" unique=\"true\"\n-     */\n-\n-    public String getMexId() {\n-        return _mexId;\n-    }\n-\n-    public void setMexId(String mexId) {\n-        _mexId = mexId;\n-    }\n-\n-    /**\n-     * @hibernate.property column=\"PORT_TYPE\"\n-     */\n-    public String getPortType() {\n-        return _portType;\n-    }\n-\n-    public void setPortType(String portType) {\n-        _portType = portType;\n-    }\n-\n-    /**\n-     * @hibernate.property column=\"CHANNEL_NAME\"\n-     */\n-    public String getChannelName() {\n-        return _channelName;\n-    }\n-\n-    public void setChannelName(String channelName) {\n-        _channelName = channelName;\n-    }\n-\n-    /**\n-     * @hibernate.property column=\"CLIENTKEY\"\n-     */\n-    public String getClientKey() {\n-        return _clientKey;\n-    }\n-\n-    public void setClientKey(String clientKey) {\n-        _clientKey = clientKey;\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one column=\"LDATA_EPR_ID\" cascade=\"delete\" foreign-key=\"none\"\n-     */\n-    public HLargeData getEndpoint() {\n-        return _endpoint;\n-    }\n-\n-    public void setEndpoint(HLargeData endpoint) {\n-        _endpoint = endpoint;\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one column=\"LDATA_CEPR_ID\" cascade=\"delete\" foreign-key=\"none\"\n-     */\n-    public HLargeData getCallbackEndpoint() {\n-        return _callbackEndpoint;\n-    }\n-\n-    public void setCallbackEndpoint(HLargeData endpoint) {\n-        _callbackEndpoint = endpoint;\n-    }\n+  public final static String DELETE_MEX_BY_INSTANCE = \"DELETE_MEX_BY_INSTANCE\";\n+  public final static String SELECT_UNMATCHED_MEX_BY_INSTANCE = \"SELECT_UNMATCHED_MEX_BY_INSTANCE\";\n+  public final static String DELETE_UNMATCHED_MEX = \"DELETE_UNMATCHED_MEX\";\n+  public final static String DELETE_MEX_BY_PROCESS = \"DELETE_MEX_BY_PROCESS\";\n \n-    /**\n-     * @hibernate.many-to-one column=\"REQUEST\" cascade=\"delete\" foreign-key=\"none\"\n-     */\n-    public HMessage getRequest() {\n-        return _request;\n-    }\n+  private String _channelName;\n \n-    public void setRequest(HMessage request) {\n-        _request = request;\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one column=\"RESPONSE\" cascade=\"delete\" foreign-key=\"none\"\n-     */\n-    public HMessage getResponse() {\n-        return _response;\n-    }\n+  private String _operationName;\n \n-    public void setResponse(HMessage response) {\n-        _response = response;\n-    }\n+  private String _state;\n \n-    /**\n-     * @hibernate.property column=\"INSERT_DT\"\n-     */\n-    public Date getInsertTime() {\n-        return _insertTime;\n-    }\n+  private Date _insertTime;\n \n-    public void setInsertTime(Date insertTime) {\n-        _insertTime = insertTime;\n-    }\n+  private String _portType;\n \n-    /**\n-     * @hibernate.property column=\"OPERATION\"\n-     */\n-    public String getOperationName() {\n-        return _operationName;\n-    }\n+  private HLargeData _endpoint;\n \n-    public void setOperationName(String operationName) {\n-        _operationName = operationName;\n-    }\n+  private HLargeData _callbackEndpoint;\n \n-    /**\n-     * @hibernate.property column=\"STATE\"\n-     */\n-    public String getState() {\n-        return _state;\n-    }\n+  private HMessage _request;\n \n-    public void setState(String state) {\n-        _state = state;\n-    }\n+  private HMessage _response;\n \n-    /**\n-     * @hibernate.many-to-one column=\"PROCESS\" foreign-key=\"none\"\n-     */\n-    public HProcess getProcess() {\n-        return _process;\n-    }\n-\n-    public void setProcess(HProcess process) {\n-        _process = process;\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one column=\"PIID\" foreign-key=\"none\"\n-     */\n-    public HProcessInstance getInstance() {\n-        return _instance;\n-    }\n-\n-    public void setInstance(HProcessInstance instance) {\n-        _instance = instance;\n-    }\n-\n-    public void setDirection(char dir) {\n-        _dir = dir;\n-    }\n-\n-    /**\n-     * @hibernate.property column=\"DIR\"\n-     */\n-    public char getDirection() {\n-        return _dir;\n-    }\n-\n-    /**\n-     * @hibernate.property column=\"PLINK_MODELID\"\n-     */\n-    public int getPartnerLinkModelId() {\n-        return _plinkModelId;\n-    }\n+  private HPartnerLink _partnerLink;\n \n-    public void setPartnerLinkModelId(int id) {\n-        _plinkModelId = id;\n-    }\n+  private String _clientKey;\n \n-    /**\n-     * @hibernate.property column=\"PATTERN\"\n-     */\n-    public String getPattern() {\n-        return _pattern;\n-    }\n+  private HProcessInstance _instance;\n \n-    public void setPattern(String pattern) {\n-        _pattern = pattern;\n+  private HProcess _process;\n \n-    }\n+  private char _dir;\n \n-    /**\n-     * @hibernate.property column=\"CORR_STATUS\"\n-     * @return\n-     */\n-    public String getCorrelationStatus() {\n-        return _corrstatus;\n-    }\n+  private int _plinkModelId;\n \n-    public void setCorrelationStatus(String cstatus) {\n-        _corrstatus = cstatus;\n+  private String _pattern;\n \n-    }\n+  private String _corrstatus;\n \n-    /**\n-     * @hibernate.property column=\"FAULT_TYPE\"\n-     * @return\n-     */\n-    public String getFault() {\n-        return _faultType;\n-    }\n+  private String _faultType;\n \n-    public void setFault(String faultType) {\n-        _faultType = faultType;\n+  private String _faultExplanation;\n \n-    }\n+  private String _callee;\n \n-    /**\n-     * @hibernate.property column=\"FAULT_EXPL\"\n-     * @return\n-     */\n-    public String getFaultExplanation() {\n-        return _faultExplanation;\n-    }\n+  private String _p2pPeer;\n \n-    public void setFaultExplanation(String faultExplanation) {\n-        if (faultExplanation != null && faultExplanation.length() > 255)\n-            faultExplanation = faultExplanation.substring(0, 254);\n-        _faultExplanation = faultExplanation;\n-    }\n+  private Map<String, String> _properties = new HashMap<String, String>();\n \n-    /**\n-     * @hibernate.property column=\"CALLEE\"\n-     */\n-    public String getCallee() {\n-        return _callee;\n-    }\n+  private long _timeout;\n \n-    public void setCallee(String callee) {\n-        _callee = callee;\n-    }\n+  private String _istyle;\n \n-    /**\n-     * @hibernate.map name=\"properties\" table=\"BPEL_MEX_PROPS\" lazy=\"true\" cascade=\"delete\"\n-     * @hibernate.collection-key name=\"mex\" column=\"MEX\" foreign-key=\"none\"\n-     * @hibernate.collection-index column=\"NAME\" type=\"string\"\n-     * @hibernate.collection-element column=\"VALUE\" type=\"string\" length=\"8000\"\n-     */\n-    public Map<String, String> getProperties() {\n-        return _properties;\n-    }\n+  private String _failureType;\n \n-    public void setProperties(Map<String, String> props) {\n-        _properties = props;\n-    }\n+  private String _mexId;\n \n-    public void setPartnerLink(HPartnerLink link) {\n-        _partnerLink = link;\n-    }\n+  private String _ackType;\n \n-    /**\n-     * @hibernate.many-to-one column=\"PARTNERLINK\" foreign-key=\"none\"\n-     */\n-    public HPartnerLink getPartnerLink() {\n-        return _partnerLink;\n-    }\n+  private String _pipedPid;\n \n-    /**\n-     * @hibernate.property column=\"TIMEOUT\"\n-     * \n-     */\n-    public long getTimeout() {\n-        return _timeout;\n-    }\n+  /**\n+   *\n+   */\n+  public HMessageExchange() {\n+    super();\n+  }\n \n-    public void setTimeout(long timeout) {\n-        _timeout = timeout;\n-    }\n+  /**\n+   * @hibernate.property\n+   * @hibernate.column name=\"MEXID\" not-null=\"true\" unique=\"true\"\n+   */\n \n-    /**\n-     * @hibernate.property column=\"ISTYLE\"\n-     */\n-    public String getInvocationStyle() {\n-        return _istyle;\n-    }\n+  public String getMexId() {\n+    return _mexId;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"P2P_PEER\"\n-     * @return\n-     */\n-    public String getPipedMessageExchange() {\n-        return _p2pPeer;\n-    }\n+  public void setMexId(String mexId) {\n+    _mexId = mexId;\n+  }\n \n-    public void setPipedMessageExchange(String p2ppeer) {\n-        _p2pPeer = p2ppeer;\n-    }\n+  /**\n+   * @hibernate.property column=\"PORT_TYPE\"\n+   */\n+  public String getPortType() {\n+    return _portType;\n+  }\n \n-    public void setFailureType(String failureType) {\n-        _failureType = failureType;\n-    }\n+  public void setPortType(String portType) {\n+    _portType = portType;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"FAILURE_TYPE\"\n-     * @return\n-     */\n-    public String getFailureType() {\n-        return _failureType;\n-    }\n+  /**\n+   * @hibernate.property column=\"CHANNEL_NAME\"\n+   */\n+  public String getChannelName() {\n+    return _channelName;\n+  }\n \n-    public void setInvocationStyle(String invocationStyle) {\n-        _istyle = invocationStyle;\n-    }\n+  public void setChannelName(String channelName) {\n+    _channelName = channelName;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"ACK_TYPE\"\n-     * @return\n-     */\n-    public String getAckType() {\n-        return _ackType;\n-    }\n+  /**\n+   * @hibernate.property column=\"CLIENTKEY\"\n+   */\n+  public String getClientKey() {\n+    return _clientKey;\n+  }\n \n-    public void setAckType(String ackType) {\n-        _ackType = ackType;\n-    }\n+  public void setClientKey(String clientKey) {\n+    _clientKey = clientKey;\n+  }\n \n-    /**\n-     * @hibernate.property column=\"PIPED_PID\"\n-     * @return\n-     */\n-    public String getPipedPID() {\n-        return _pipedPid;\n-    }\n+  /**\n+   * @hibernate.many-to-one column=\"LDATA_EPR_ID\" cascade=\"delete\" foreign-key=\"none\"\n+   */\n+  public HLargeData getEndpoint() {\n+    return _endpoint;\n+  }\n \n-    public void setPipedPID(String ppid) {\n-        _pipedPid = ppid;\n-    }\n+  public void setEndpoint(HLargeData endpoint) {\n+    _endpoint = endpoint;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"LDATA_CEPR_ID\" cascade=\"delete\" foreign-key=\"none\"\n+   */\n+  public HLargeData getCallbackEndpoint() {\n+    return _callbackEndpoint;\n+  }\n+\n+  public void setCallbackEndpoint(HLargeData endpoint) {\n+    _callbackEndpoint = endpoint;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"REQUEST\" cascade=\"delete\" foreign-key=\"none\"\n+   */\n+  public HMessage getRequest() {\n+    return _request;\n+  }\n+\n+  public void setRequest(HMessage request) {\n+    _request = request;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"RESPONSE\" cascade=\"delete\" foreign-key=\"none\"\n+   */\n+  public HMessage getResponse() {\n+    return _response;\n+  }\n+\n+  public void setResponse(HMessage response) {\n+    _response = response;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"INSERT_DT\"\n+   */\n+  public Date getInsertTime() {\n+    return _insertTime;\n+  }\n+\n+  public void setInsertTime(Date insertTime) {\n+    _insertTime = insertTime;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"OPERATION\"\n+   */\n+  public String getOperationName() {\n+    return _operationName;\n+  }\n+\n+  public void setOperationName(String operationName) {\n+    _operationName = operationName;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"STATE\"\n+   */\n+  public String getState() {\n+    return _state;\n+  }\n+\n+  public void setState(String state) {\n+    _state = state;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"PROCESS\" foreign-key=\"none\"\n+   */\n+  public HProcess getProcess() {\n+    return _process;\n+  }\n+\n+  public void setProcess(HProcess process) {\n+    _process = process;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"PIID\" foreign-key=\"none\"\n+   */\n+  public HProcessInstance getInstance() {\n+    return _instance;\n+  }\n+\n+  public void setInstance(HProcessInstance instance) {\n+    _instance = instance;\n+  }\n+\n+  public void setDirection(char dir) {\n+    _dir = dir;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"DIR\"\n+   */\n+  public char getDirection() {\n+    return _dir;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"PLINK_MODELID\"\n+   */\n+  public int getPartnerLinkModelId() {\n+    return _plinkModelId;\n+  }\n+\n+  public void setPartnerLinkModelId(int id) {\n+    _plinkModelId = id;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"PATTERN\"\n+   */\n+  public String getPattern() {\n+    return _pattern;\n+  }\n+\n+  public void setPattern(String pattern) {\n+    _pattern = pattern;\n+\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"CORR_STATUS\"\n+   */\n+  public String getCorrelationStatus() {\n+    return _corrstatus;\n+  }\n+\n+  public void setCorrelationStatus(String cstatus) {\n+    _corrstatus = cstatus;\n+\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"FAULT_TYPE\"\n+   */\n+  public String getFault() {\n+    return _faultType;\n+  }\n+\n+  public void setFault(String faultType) {\n+    _faultType = faultType;\n+\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"FAULT_EXPL\"\n+   */\n+  public String getFaultExplanation() {\n+    return _faultExplanation;\n+  }\n+\n+  public void setFaultExplanation(String faultExplanation) {\n+    if (faultExplanation != null && faultExplanation.length() > 255) {\n+      faultExplanation = faultExplanation.substring(0, 254);\n+    }\n+    _faultExplanation = faultExplanation;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"CALLEE\"\n+   */\n+  public String getCallee() {\n+    return _callee;\n+  }\n+\n+  public void setCallee(String callee) {\n+    _callee = callee;\n+  }\n+\n+  /**\n+   * @hibernate.map name=\"properties\" table=\"BPEL_MEX_PROPS\" lazy=\"true\" cascade=\"delete\"\n+   * @hibernate.collection-key name=\"mex\" column=\"MEX\" foreign-key=\"none\"\n+   * @hibernate.collection-index column=\"NAME\" type=\"string\"\n+   * @hibernate.collection-element column=\"VALUE\" type=\"string\" length=\"8000\"\n+   */\n+  public Map<String, String> getProperties() {\n+    return _properties;\n+  }\n+\n+  public void setProperties(Map<String, String> props) {\n+    _properties = props;\n+  }\n+\n+  public void setPartnerLink(HPartnerLink link) {\n+    _partnerLink = link;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"PARTNERLINK\" foreign-key=\"none\"\n+   */\n+  public HPartnerLink getPartnerLink() {\n+    return _partnerLink;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"TIMEOUT\"\n+   */\n+  public long getTimeout() {\n+    return _timeout;\n+  }\n+\n+  public void setTimeout(long timeout) {\n+    _timeout = timeout;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"ISTYLE\"\n+   */\n+  public String getInvocationStyle() {\n+    return _istyle;\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"P2P_PEER\"\n+   */\n+  public String getPipedMessageExchange() {\n+    return _p2pPeer;\n+  }\n+\n+  public void setPipedMessageExchange(String p2ppeer) {\n+    _p2pPeer = p2ppeer;\n+  }\n+\n+  public void setFailureType(String failureType) {\n+    _failureType = failureType;\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"FAILURE_TYPE\"\n+   */\n+  public String getFailureType() {\n+    return _failureType;\n+  }\n+\n+  public void setInvocationStyle(String invocationStyle) {\n+    _istyle = invocationStyle;\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"ACK_TYPE\"\n+   */\n+  public String getAckType() {\n+    return _ackType;\n+  }\n+\n+  public void setAckType(String ackType) {\n+    _ackType = ackType;\n+  }\n+\n+  /**\n+   * @return\n+   * @hibernate.property column=\"PIPED_PID\"\n+   */\n+  public String getPipedPID() {\n+    return _pipedPid;\n+  }\n+\n+  public void setPipedPID(String ppid) {\n+    _pipedPid = ppid;\n+  }\n }\n",
            "diff_size": 629
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/132/HMessageExchange.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/132/HMessageExchange.java\nindex 221cfc082fc..9a91bf74493 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/132/HMessageExchange.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/132/HMessageExchange.java\n@@ -105,8 +105,7 @@ public class HMessageExchange extends HObject {\n      * @hibernate.property\n      * @hibernate.column name=\"MEXID\" not-null=\"true\" unique=\"true\"\n      */\n-\n-    public String getMexId() {\n+public String getMexId() {\n         return _mexId;\n     }\n \n@@ -426,4 +425,4 @@ public class HMessageExchange extends HObject {\n     public void setPipedPID(String ppid) {\n         _pipedPid = ppid;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
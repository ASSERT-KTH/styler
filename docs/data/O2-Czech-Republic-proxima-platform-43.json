{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "43",
    "information": {
        "errors": [
            {
                "line": "40",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public boolean isCancelled() {\n    return cancelled || runningThread == Thread.currentThread() && runningThread.isInterrupted();\n  }\n\n  /** Force cancellation of the observe. */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/43/TerminationContext.java\nindex f3449efc2fb..583a7af448e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/43/TerminationContext.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.batch;\n \n import cz.o2.proxima.annotations.Internal;\n@@ -37,7 +38,8 @@ public class TerminationContext {\n   }\n \n   public boolean isCancelled() {\n-    return cancelled || runningThread == Thread.currentThread() && runningThread.isInterrupted();\n+    return cancelled ||\n+        runningThread == Thread.currentThread() && runningThread.isInterrupted();\n   }\n \n   /** Force cancellation of the observe. */\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/43/TerminationContext.java\nindex f3449efc2fb..f12848b5ef4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/43/TerminationContext.java\n@@ -90,4 +90,4 @@ public class TerminationContext {\n   private void setCancelled() {\n     this.cancelled = true;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/43/TerminationContext.java\nindex f3449efc2fb..e1c18fe0e5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/43/TerminationContext.java\n@@ -23,6 +23,8 @@ import java.util.concurrent.TimeUnit;\n import lombok.extern.slf4j.Slf4j;\n \n /** A context that guards correct termination of batch observation process. */\n+\n+\n @Internal\n @Slf4j\n public class TerminationContext {\n@@ -41,6 +43,7 @@ public class TerminationContext {\n   }\n \n   /** Force cancellation of the observe. */\n+\n   public void cancel() {\n     setCancelled();\n     while (!Thread.currentThread().isInterrupted()) {\n@@ -53,6 +56,7 @@ public class TerminationContext {\n   }\n \n   /** Set the thread running the task to be terminated to the calling thread. */\n+\n   public void setRunningThread() {\n     runningThread = Thread.currentThread();\n   }\n@@ -68,9 +72,9 @@ public class TerminationContext {\n \n   public ObserveHandle asObserveHandle() {\n     return () -> {\n-      cancel();\n-      ExceptionUtils.ignoringInterrupted(terminateLatch::await);\n-    };\n+             cancel();\n+             ExceptionUtils.ignoringInterrupted(terminateLatch::await);\n+           };\n   }\n \n   public void handleErrorCaught(Throwable err, Runnable retry) {\n@@ -90,4 +94,4 @@ public class TerminationContext {\n   private void setCancelled() {\n     this.cancelled = true;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "column": "67",
                    "severity": "error",
                    "message": "WhitespaceAround: '&&' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/43/TerminationContext.java\nindex f3449efc2fb..efd5c35b888 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/43/TerminationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/43/TerminationContext.java\n@@ -37,10 +37,8 @@ public class TerminationContext {\n   }\n \n   public boolean isCancelled() {\n-    return cancelled || runningThread == Thread.currentThread() && runningThread.isInterrupted();\n-  }\n-\n-  /** Force cancellation of the observe. */\n+    return cancelled || runningThread == Thread.currentThread() &&runningThread.isInterrupted();\n+  } /** Force cancellation of the observe. */\n   public void cancel() {\n     setCancelled();\n     while (!Thread.currentThread().isInterrupted()) {\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
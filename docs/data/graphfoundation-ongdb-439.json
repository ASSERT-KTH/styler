{
    "project_name": "graphfoundation-ongdb",
    "error_id": "439",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/439/UTF8.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/439/UTF8.java\nindex cb343086f49..15fb904b85d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/439/UTF8.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/439/UTF8.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.string;\n \n import java.nio.ByteBuffer;\n@@ -27,58 +28,58 @@ import java.nio.charset.StandardCharsets;\n  */\n public class UTF8\n {\n-    public static final int MINIMUM_SERIALISED_LENGTH_BYTES = Integer.BYTES;\n+  public static final int MINIMUM_SERIALISED_LENGTH_BYTES = Integer.BYTES;\n \n-    public static byte[] encode( String string )\n-    {\n-        return string.getBytes( StandardCharsets.UTF_8 );\n-    }\n+  public static byte[] encode(String string)\n+  {\n+    return string.getBytes(StandardCharsets.UTF_8);\n+  }\n \n-    public static String decode( byte[] bytes )\n-    {\n-        return new String( bytes, StandardCharsets.UTF_8 );\n-    }\n+  public static String decode(byte[] bytes)\n+  {\n+    return new String(bytes, StandardCharsets.UTF_8);\n+  }\n \n-    public static String decode( byte[] bytes, int offset, int length )\n-    {\n-        return new String( bytes, offset, length, StandardCharsets.UTF_8 );\n-    }\n+  public static String decode(byte[] bytes, int offset, int length)\n+  {\n+    return new String(bytes, offset, length, StandardCharsets.UTF_8);\n+  }\n \n-    public static String getDecodedStringFrom( ByteBuffer source )\n+  public static String getDecodedStringFrom(ByteBuffer source)\n+  {\n+    // Currently only one key is supported although the data format supports multiple\n+    int count = source.getInt();\n+    int remaining = source.remaining();\n+    if (count > remaining)\n     {\n-        // Currently only one key is supported although the data format supports multiple\n-        int count = source.getInt();\n-        int remaining = source.remaining();\n-        if ( count > remaining )\n-        {\n-            throw badStringFormatException( count, remaining );\n-        }\n-        byte[] data = new byte[count];\n-        source.get( data );\n-        return UTF8.decode( data );\n+      throw badStringFormatException(count, remaining);\n     }\n+    byte[] data = new byte[count];\n+    source.get(data);\n+    return UTF8.decode(data);\n+  }\n \n-    private static IllegalArgumentException badStringFormatException( int count, int remaining )\n-    {\n-        return new IllegalArgumentException(\n-                \"Bad string format; claims string is \" + count + \" bytes long, \" +\n-                \"but only \" + remaining + \" bytes remain in buffer\" );\n-    }\n+  private static IllegalArgumentException badStringFormatException(int count, int remaining)\n+  {\n+    return new IllegalArgumentException(\n+        \"Bad string format; claims string is \" + count + \" bytes long, \" +\n+            \"but only \" + remaining + \" bytes remain in buffer\");\n+  }\n \n-    public static void putEncodedStringInto( String text, ByteBuffer target )\n-    {\n-        byte[] data = encode( text );\n-        target.putInt( data.length );\n-        target.put( data );\n-    }\n+  public static void putEncodedStringInto(String text, ByteBuffer target)\n+  {\n+    byte[] data = encode(text);\n+    target.putInt(data.length);\n+    target.put(data);\n+  }\n \n-    public static int computeRequiredByteBufferSize( String text )\n-    {\n-        return encode( text ).length + 4;\n-    }\n+  public static int computeRequiredByteBufferSize(String text)\n+  {\n+    return encode(text).length + 4;\n+  }\n \n-    private UTF8()\n-    {\n-        throw new AssertionError( \"no instance\" );\n-    }\n+  private UTF8()\n+  {\n+    throw new AssertionError(\"no instance\");\n+  }\n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "19",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/439/UTF8.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/439/UTF8.java\nindex cb343086f49..d968456d82c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/439/UTF8.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/439/UTF8.java\n@@ -49,7 +49,7 @@ public class UTF8\n         // Currently only one key is supported although the data format supports multiple\n         int count = source.getInt();\n         int remaining = source.remaining();\n-        if ( count > remaining )\n+        if ( count> remaining )\n         {\n             throw badStringFormatException( count, remaining );\n         }\n@@ -60,9 +60,7 @@ public class UTF8\n \n     private static IllegalArgumentException badStringFormatException( int count, int remaining )\n     {\n-        return new IllegalArgumentException(\n-                \"Bad string format; claims string is \" + count + \" bytes long, \" +\n-                \"but only \" + remaining + \" bytes remain in buffer\" );\n+        return new IllegalArgumentException( \"Bad string format; claims string is \" + count + \" bytes long, \" + \"but only \" + remaining + \" bytes remain in buffer\" );\n     }\n \n     public static void putEncodedStringInto( String text, ByteBuffer target )\n@@ -81,4 +79,4 @@ public class UTF8\n     {\n         throw new AssertionError( \"no instance\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "column": "92",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/439/UTF8.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/439/UTF8.java\nindex cb343086f49..48f6260cf2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/439/UTF8.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/439/UTF8.java\n@@ -25,6 +25,7 @@ import java.nio.charset.StandardCharsets;\n /**\n  * Utilities for working with UTF8 encoding and decoding.\n  */\n+\n public class UTF8\n {\n     public static final int MINIMUM_SERIALISED_LENGTH_BYTES = Integer.BYTES;\n@@ -53,6 +54,7 @@ public class UTF8\n         {\n             throw badStringFormatException( count, remaining );\n         }\n+\n         byte[] data = new byte[count];\n         source.get( data );\n         return UTF8.decode( data );\n@@ -60,9 +62,7 @@ public class UTF8\n \n     private static IllegalArgumentException badStringFormatException( int count, int remaining )\n     {\n-        return new IllegalArgumentException(\n-                \"Bad string format; claims string is \" + count + \" bytes long, \" +\n-                \"but only \" + remaining + \" bytes remain in buffer\" );\n+        return new IllegalArgumentException( \"Bad string format; claims string is \" + count+ \" bytes long, \" + \"but only \" + remaining + \" bytes remain in buffer\" );\n     }\n \n     public static void putEncodedStringInto( String text, ByteBuffer target )\n@@ -81,4 +81,4 @@ public class UTF8\n     {\n         throw new AssertionError( \"no instance\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
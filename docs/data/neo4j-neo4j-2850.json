{
    "project_name": "neo4j-neo4j",
    "error_id": "2850",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2850/NativeAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2850/NativeAccess.java\nindex aff49e90c2f..196e4552fe2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2850/NativeAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2850/NativeAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.nativeimpl;\n \n public interface NativeAccess\n@@ -33,6 +34,7 @@ public interface NativeAccess\n \n     /**\n      * Check if native access is available\n+     *\n      * @return true if available, false otherwise\n      */\n     boolean isAvailable();\n@@ -40,37 +42,42 @@ public interface NativeAccess\n     /**\n      * Try to evict cached pages of file referenced by provided file descriptor.\n      * Useful for files that we do not need to access ever again. For example: log files, WAL files, etc.\n+     *\n      * @param fd file descriptor\n      * @return returns zero on success, or an error number on failure\n      */\n-    NativeCallResult tryEvictFromCache( int fd );\n+    NativeCallResult tryEvictFromCache(int fd);\n \n     /**\n      * Try to advice that file referenced by provided file descriptor will be accessed in a sequential fashion.\n      * Useful for files that we will read from start to the end sequentially. For example: WAL files.\n+     *\n      * @param fd file descriptor\n      * @return returns zero on success, or an error number on failure\n      */\n-    NativeCallResult tryAdviseSequentialAccess( int fd );\n+    NativeCallResult tryAdviseSequentialAccess(int fd);\n \n     /**\n      * Try to advice that file referenced by provided file descriptor will be accessed again in the near future and we will need those pages again.\n      * Useful for files that we will read from start to the end sequentially. For example: WAL files.\n+     *\n      * @param fd file descriptor\n      * @return returns zero on success, or an error number on failure\n      */\n-    NativeCallResult tryAdviseToKeepInCache( int fd );\n+    NativeCallResult tryAdviseToKeepInCache(int fd);\n \n     /**\n      * Try to preallocate disk space for file referenced by provided file descriptor.\n-     * @param fd file descriptor\n+     *\n+     * @param fd    file descriptor\n      * @param bytes number of bytes to preallocate\n      * @return returns zero on success, or an error number on failure\n      */\n-    NativeCallResult tryPreallocateSpace( int fd, long bytes );\n+    NativeCallResult tryPreallocateSpace(int fd, long bytes);\n \n     /**\n      * Details about native access provider\n+     *\n      * @return details about native access\n      */\n     String describe();\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2850/NativeAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2850/NativeAccess.java\nindex aff49e90c2f..9d45adbe243 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2850/NativeAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2850/NativeAccess.java\n@@ -74,4 +74,4 @@ public interface NativeAccess\n      * @return details about native access\n      */\n     String describe();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2868",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2868/SingleSourceShortestPathDijkstra.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2868/SingleSourceShortestPathDijkstra.java\nindex 6e3d3baccca..123d2bbc6d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2868/SingleSourceShortestPathDijkstra.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2868/SingleSourceShortestPathDijkstra.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.shortestpath;\n \n import java.util.Comparator;\n@@ -36,284 +37,285 @@ import org.neo4j.graphdb.RelationshipType;\n /**\n  * Dijkstra implementation to solve the single source shortest path problem for\n  * weighted networks.\n- * @complexity The {@link CostEvaluator}, the {@link CostAccumulator} and the\n- *             cost comparator will all be called once for every relationship\n- *             traversed. Assuming they run in constant time, the time\n- *             complexity for this algorithm is O(m + n * log(n)).\n+ *\n+ * @param <CostType> The datatype the edge weights are represented by.\n  * @author Patrik Larsson\n- * @param <CostType>\n- *            The datatype the edge weights are represented by.\n+ * @complexity The {@link CostEvaluator}, the {@link CostAccumulator} and the\n+ * cost comparator will all be called once for every relationship\n+ * traversed. Assuming they run in constant time, the time\n+ * complexity for this algorithm is O(m + n * log(n)).\n  */\n public class SingleSourceShortestPathDijkstra<CostType> extends\n     Dijkstra<CostType> implements SingleSourceShortestPath<CostType>\n {\n-    DijstraIterator dijstraIterator;\n+  DijstraIterator dijstraIterator;\n \n-    /**\n-     * @see Dijkstra\n-     */\n-    public SingleSourceShortestPathDijkstra( CostType startCost,\n-        Node startNode, CostEvaluator<CostType> costEvaluator,\n-        CostAccumulator<CostType> costAccumulator,\n-        Comparator<CostType> costComparator, Direction relationDirection,\n-        RelationshipType... costRelationTypes )\n-    {\n-        super( startCost, startNode, null, costEvaluator, costAccumulator,\n-            costComparator, relationDirection, costRelationTypes );\n-        reset();\n-    }\n+  /**\n+   * @see Dijkstra\n+   */\n+  public SingleSourceShortestPathDijkstra(CostType startCost,\n+                                          Node startNode, CostEvaluator<CostType> costEvaluator,\n+                                          CostAccumulator<CostType> costAccumulator,\n+                                          Comparator<CostType> costComparator, Direction relationDirection,\n+                                          RelationshipType... costRelationTypes)\n+  {\n+    super(startCost, startNode, null, costEvaluator, costAccumulator,\n+        costComparator, relationDirection, costRelationTypes);\n+    reset();\n+  }\n \n-    protected HashMap<Node,CostType> distances = new HashMap<>();\n+  protected HashMap<Node, CostType> distances = new HashMap<>();\n \n-    @Override\n-    public void reset()\n-    {\n-        super.reset();\n-        distances = new HashMap<>();\n-        HashMap<Node,CostType> seen1 = new HashMap<>();\n-        HashMap<Node,CostType> seen2 = new HashMap<>();\n-        HashMap<Node,CostType> dists2 = new HashMap<>();\n-        dijstraIterator = new DijstraIterator( startNode, predecessors1, seen1,\n-            seen2, distances, dists2, false );\n-    }\n+  @Override\n+  public void reset()\n+  {\n+    super.reset();\n+    distances = new HashMap<>();\n+    HashMap<Node, CostType> seen1 = new HashMap<>();\n+    HashMap<Node, CostType> seen2 = new HashMap<>();\n+    HashMap<Node, CostType> dists2 = new HashMap<>();\n+    dijstraIterator = new DijstraIterator(startNode, predecessors1, seen1,\n+        seen2, distances, dists2, false);\n+  }\n \n-    /**\n-     * Same as calculate(), but will set the flag to calculate all shortest\n-     * paths. It sets the flag and then calls calculate.\n-     * @return\n-     */\n-    public boolean calculateMultiple( Node targetNode )\n+  /**\n+   * Same as calculate(), but will set the flag to calculate all shortest\n+   * paths. It sets the flag and then calls calculate.\n+   *\n+   * @return\n+   */\n+  public boolean calculateMultiple(Node targetNode)\n+  {\n+    if (!calculateAllShortestPaths)\n     {\n-        if ( !calculateAllShortestPaths )\n-        {\n-            reset();\n-            calculateAllShortestPaths = true;\n-        }\n-        return calculate( targetNode );\n+      reset();\n+      calculateAllShortestPaths = true;\n     }\n+    return calculate(targetNode);\n+  }\n \n-    @Override\n-    public boolean calculate()\n-    {\n-        return calculate( null );\n-    }\n+  @Override\n+  public boolean calculate()\n+  {\n+    return calculate(null);\n+  }\n \n-    /**\n-     * Internal calculate method that will run the calculation until either the\n-     * limit is reached or a result has been generated for a given node.\n-     */\n-    public boolean calculate( Node targetNode )\n+  /**\n+   * Internal calculate method that will run the calculation until either the\n+   * limit is reached or a result has been generated for a given node.\n+   */\n+  public boolean calculate(Node targetNode)\n+  {\n+    while ((targetNode == null || !distances.containsKey(targetNode))\n+        && dijstraIterator.hasNext() && !limitReached())\n     {\n-        while ( (targetNode == null || !distances.containsKey( targetNode ))\n-            && dijstraIterator.hasNext() && !limitReached() )\n-        {\n-            dijstraIterator.next();\n-        }\n-        return true;\n+      dijstraIterator.next();\n     }\n+    return true;\n+  }\n \n-    // We dont need to reset the calculation, so we just override this.\n-    @Override\n-    public void setEndNode( Node endNode )\n-    {\n-        this.endNode = endNode;\n-    }\n+  // We dont need to reset the calculation, so we just override this.\n+  @Override\n+  public void setEndNode(Node endNode)\n+  {\n+    this.endNode = endNode;\n+  }\n \n-    /**\n-     * @see Dijkstra\n-     */\n-    @Override\n-    public CostType getCost( Node targetNode )\n+  /**\n+   * @see Dijkstra\n+   */\n+  @Override\n+  public CostType getCost(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculate( targetNode );\n-        return distances.get( targetNode );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n+    calculate(targetNode);\n+    return distances.get(targetNode);\n+  }\n \n-    @Override\n-    public List<List<PropertyContainer>> getPaths( Node targetNode )\n+  @Override\n+  public List<List<PropertyContainer>> getPaths(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculateMultiple( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n-        {\n-            return null;\n-        }\n-        return new LinkedList<>( Util.constructAllPathsToNode( targetNode, predecessors1, true, false ) );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n-\n-    @Override\n-    public List<List<Node>> getPathsAsNodes( Node targetNode )\n+    calculateMultiple(targetNode);\n+    if (!distances.containsKey(targetNode))\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculateMultiple( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n-        {\n-            return null;\n-        }\n-        return new LinkedList<>( Util.constructAllPathsToNodeAsNodes( targetNode, predecessors1, true, false ) );\n+      return null;\n     }\n+    return new LinkedList<>(Util.constructAllPathsToNode(targetNode, predecessors1, true, false));\n+  }\n \n-    @Override\n-    public List<List<Relationship>> getPathsAsRelationships( Node targetNode )\n+  @Override\n+  public List<List<Node>> getPathsAsNodes(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculateMultiple( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n-        {\n-            return null;\n-        }\n-        return new LinkedList<>( Util.constructAllPathsToNodeAsRelationships( targetNode, predecessors1, false ) );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n-\n-    @Override\n-    public List<PropertyContainer> getPath( Node targetNode )\n+    calculateMultiple(targetNode);\n+    if (!distances.containsKey(targetNode))\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n-        {\n-            return null;\n-        }\n-        return Util.constructSinglePathToNode( targetNode, predecessors1, true,\n-            false );\n+      return null;\n     }\n+    return new LinkedList<>(Util.constructAllPathsToNodeAsNodes(targetNode, predecessors1, true, false));\n+  }\n \n-    @Override\n-    public List<Node> getPathAsNodes( Node targetNode )\n+  @Override\n+  public List<List<Relationship>> getPathsAsRelationships(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n-        {\n-            return null;\n-        }\n-        return Util.constructSinglePathToNodeAsNodes( targetNode,\n-            predecessors1, true, false );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n-\n-    @Override\n-    public List<Relationship> getPathAsRelationships( Node targetNode )\n+    calculateMultiple(targetNode);\n+    if (!distances.containsKey(targetNode))\n     {\n-        if ( targetNode == null )\n-        {\n-            throw new RuntimeException( \"No end node defined\" );\n-        }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n-        {\n-            return null;\n-        }\n-        return Util.constructSinglePathToNodeAsRelationships( targetNode,\n-            predecessors1, false );\n+      return null;\n     }\n+    return new LinkedList<>(Util.constructAllPathsToNodeAsRelationships(targetNode, predecessors1, false));\n+  }\n \n-    // Override all the result-getters\n-    @Override\n-    public CostType getCost()\n+  @Override\n+  public List<PropertyContainer> getPath(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        return getCost( endNode );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n-\n-    @Override\n-    public List<PropertyContainer> getPath()\n+    calculate(targetNode);\n+    if (!distances.containsKey(targetNode))\n     {\n-        return getPath( endNode );\n+      return null;\n     }\n+    return Util.constructSinglePathToNode(targetNode, predecessors1, true,\n+        false);\n+  }\n \n-    @Override\n-    public List<Node> getPathAsNodes()\n+  @Override\n+  public List<Node> getPathAsNodes(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        return getPathAsNodes( endNode );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n-\n-    @Override\n-    public List<Relationship> getPathAsRelationships()\n+    calculate(targetNode);\n+    if (!distances.containsKey(targetNode))\n     {\n-        return getPathAsRelationships( endNode );\n+      return null;\n     }\n+    return Util.constructSinglePathToNodeAsNodes(targetNode,\n+        predecessors1, true, false);\n+  }\n \n-    @Override\n-    public List<List<PropertyContainer>> getPaths()\n+  @Override\n+  public List<Relationship> getPathAsRelationships(Node targetNode)\n+  {\n+    if (targetNode == null)\n     {\n-        return getPaths( endNode );\n+      throw new RuntimeException(\"No end node defined\");\n     }\n-\n-    @Override\n-    public List<List<Node>> getPathsAsNodes()\n+    calculate(targetNode);\n+    if (!distances.containsKey(targetNode))\n     {\n-        return getPathsAsNodes( endNode );\n+      return null;\n     }\n+    return Util.constructSinglePathToNodeAsRelationships(targetNode,\n+        predecessors1, false);\n+  }\n \n-    @Override\n-    public List<List<Relationship>> getPathsAsRelationships()\n-    {\n-        return getPathsAsRelationships( endNode );\n-    }\n+  // Override all the result-getters\n+  @Override\n+  public CostType getCost()\n+  {\n+    return getCost(endNode);\n+  }\n \n-    /**\n-     * @see SingleSourceShortestPath\n-     */\n-    @Override\n-    public List<Node> getPredecessorNodes( Node node )\n-    {\n-        List<Node> result = new LinkedList<>();\n-        List<Relationship> predecessorRelationShips = predecessors1.get( node );\n-        if ( predecessorRelationShips == null\n-            || predecessorRelationShips.size() == 0 )\n-        {\n-            return null;\n-        }\n-        for ( Relationship relationship : predecessorRelationShips )\n-        {\n-            result.add( relationship.getOtherNode( node ) );\n-        }\n-        return result;\n-    }\n+  @Override\n+  public List<PropertyContainer> getPath()\n+  {\n+    return getPath(endNode);\n+  }\n \n-    /**\n-     * @see SingleSourceShortestPath\n-     */\n-    @Override\n-    public Map<Node,List<Relationship>> getPredecessors()\n-    {\n-        calculateMultiple();\n-        return predecessors1;\n-    }\n+  @Override\n+  public List<Node> getPathAsNodes()\n+  {\n+    return getPathAsNodes(endNode);\n+  }\n \n-    /**\n-     * @see SingleSourceShortestPath\n-     */\n-    @Override\n-    public Direction getDirection()\n+  @Override\n+  public List<Relationship> getPathAsRelationships()\n+  {\n+    return getPathAsRelationships(endNode);\n+  }\n+\n+  @Override\n+  public List<List<PropertyContainer>> getPaths()\n+  {\n+    return getPaths(endNode);\n+  }\n+\n+  @Override\n+  public List<List<Node>> getPathsAsNodes()\n+  {\n+    return getPathsAsNodes(endNode);\n+  }\n+\n+  @Override\n+  public List<List<Relationship>> getPathsAsRelationships()\n+  {\n+    return getPathsAsRelationships(endNode);\n+  }\n+\n+  /**\n+   * @see SingleSourceShortestPath\n+   */\n+  @Override\n+  public List<Node> getPredecessorNodes(Node node)\n+  {\n+    List<Node> result = new LinkedList<>();\n+    List<Relationship> predecessorRelationShips = predecessors1.get(node);\n+    if (predecessorRelationShips == null\n+        || predecessorRelationShips.size() == 0)\n     {\n-        return relationDirection;\n+      return null;\n     }\n-\n-    /**\n-     * @see SingleSourceShortestPath\n-     */\n-    @Override\n-    public RelationshipType[] getRelationshipTypes()\n+    for (Relationship relationship : predecessorRelationShips)\n     {\n-        return costRelationTypes;\n+      result.add(relationship.getOtherNode(node));\n     }\n+    return result;\n+  }\n+\n+  /**\n+   * @see SingleSourceShortestPath\n+   */\n+  @Override\n+  public Map<Node, List<Relationship>> getPredecessors()\n+  {\n+    calculateMultiple();\n+    return predecessors1;\n+  }\n+\n+  /**\n+   * @see SingleSourceShortestPath\n+   */\n+  @Override\n+  public Direction getDirection()\n+  {\n+    return relationDirection;\n+  }\n+\n+  /**\n+   * @see SingleSourceShortestPath\n+   */\n+  @Override\n+  public RelationshipType[] getRelationshipTypes()\n+  {\n+    return costRelationTypes;\n+  }\n }\n",
            "diff_size": 327
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
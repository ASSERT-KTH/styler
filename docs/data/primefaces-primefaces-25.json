{
    "project_name": "primefaces-primefaces",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "293",
                "severity": "error",
                "message": "Line is longer than 160 characters (found 193).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public void onEventResize(ScheduleEntryResizeEvent event) {\n        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event resized\", \"Start-Delta:\" + event.getDeltaStartAsDuration() + \", End-Delta: \" + event.getDeltaEndAsDuration());\n\n        addMessage(message);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "265",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/25/ScheduleJava8View.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/25/ScheduleJava8View.java\nindex a4b45873fa9..f324416b5b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/25/ScheduleJava8View.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/25/ScheduleJava8View.java\n@@ -21,6 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n+\n package org.primefaces.showcase.view.data;\n \n import org.primefaces.event.ScheduleEntryMoveEvent;\n@@ -103,65 +104,65 @@ public class ScheduleJava8View implements Serializable {\n         eventModel = new DefaultScheduleModel();\n \n         DefaultScheduleEvent<?> event = DefaultScheduleEvent.builder()\n-                .title(\"Champions League Match\")\n-                .startDate(previousDay8Pm())\n-                .endDate(previousDay11Pm())\n-                .description(\"Team A vs. Team B\")\n-                .url(\"https://www.uefa.com/uefachampionsleague/\")\n-                .borderColor(\"orange\")\n-                .build();\n+            .title(\"Champions League Match\")\n+            .startDate(previousDay8Pm())\n+            .endDate(previousDay11Pm())\n+            .description(\"Team A vs. Team B\")\n+            .url(\"https://www.uefa.com/uefachampionsleague/\")\n+            .borderColor(\"orange\")\n+            .build();\n         eventModel.addEvent(event);\n \n         event = DefaultScheduleEvent.builder()\n-                .startDate(LocalDateTime.now().minusDays(6))\n-                .endDate(LocalDateTime.now().minusDays(3))\n-                .overlapAllowed(true)\n-                .editable(false)\n-                .resizable(false)\n-                .display(ScheduleDisplayMode.BACKGROUND)\n-                .backgroundColor(\"lightgreen\")\n-                .build();\n+            .startDate(LocalDateTime.now().minusDays(6))\n+            .endDate(LocalDateTime.now().minusDays(3))\n+            .overlapAllowed(true)\n+            .editable(false)\n+            .resizable(false)\n+            .display(ScheduleDisplayMode.BACKGROUND)\n+            .backgroundColor(\"lightgreen\")\n+            .build();\n         eventModel.addEvent(event);\n \n         event = DefaultScheduleEvent.builder()\n-                .title(\"Birthday Party\")\n-                .startDate(today1Pm())\n-                .endDate(today6Pm())\n-                .description(\"Aragon\")\n-                .overlapAllowed(true)\n-                .borderColor(\"#CB4335\")\n-                .build();\n+            .title(\"Birthday Party\")\n+            .startDate(today1Pm())\n+            .endDate(today6Pm())\n+            .description(\"Aragon\")\n+            .overlapAllowed(true)\n+            .borderColor(\"#CB4335\")\n+            .build();\n         eventModel.addEvent(event);\n \n         event = DefaultScheduleEvent.builder()\n-                .title(\"Breakfast at Tiffanys (always resizable)\")\n-                .startDate(nextDay9Am())\n-                .endDate(nextDay11Am())\n-                .description(\"all you can eat\")\n-                .overlapAllowed(true)\n-                .resizable(true)\n-                .borderColor(\"#27AE60\")\n-                .build();\n+            .title(\"Breakfast at Tiffanys (always resizable)\")\n+            .startDate(nextDay9Am())\n+            .endDate(nextDay11Am())\n+            .description(\"all you can eat\")\n+            .overlapAllowed(true)\n+            .resizable(true)\n+            .borderColor(\"#27AE60\")\n+            .build();\n         eventModel.addEvent(event);\n \n         event = DefaultScheduleEvent.builder()\n-                .title(\"Plant the new garden stuff (always draggable)\")\n-                .startDate(theDayAfter3Pm())\n-                .endDate(fourDaysLater3pm())\n-                .description(\"Trees, flowers, ...\")\n-                .draggable(true)\n-                .borderColor(\"#27AE60\")\n-                .build();\n+            .title(\"Plant the new garden stuff (always draggable)\")\n+            .startDate(theDayAfter3Pm())\n+            .endDate(fourDaysLater3pm())\n+            .description(\"Trees, flowers, ...\")\n+            .draggable(true)\n+            .borderColor(\"#27AE60\")\n+            .build();\n         eventModel.addEvent(event);\n \n         DefaultScheduleEvent<?> scheduleEventAllDay = DefaultScheduleEvent.builder()\n-                .title(\"Holidays (AllDay)\")\n-                .startDate(sevenDaysLater0am())\n-                .endDate(eightDaysLater0am())\n-                .description(\"sleep as long as you want\")\n-                .borderColor(\"#27AE60\")\n-                .allDay(true)\n-                .build();\n+            .title(\"Holidays (AllDay)\")\n+            .startDate(sevenDaysLater0am())\n+            .endDate(eightDaysLater0am())\n+            .description(\"sleep as long as you want\")\n+            .borderColor(\"#27AE60\")\n+            .allDay(true)\n+            .build();\n         eventModel.addEvent(scheduleEventAllDay);\n \n         lazyEventModel = new LazyScheduleModel() {\n@@ -261,8 +262,7 @@ public class ScheduleJava8View implements Serializable {\n \n         if (event.getId() == null) {\n             eventModel.addEvent(event);\n-        }\n-        else {\n+        } else {\n             eventModel.updateEvent(event);\n         }\n \n@@ -290,7 +290,8 @@ public class ScheduleJava8View implements Serializable {\n     }\n \n     public void onEventResize(ScheduleEntryResizeEvent event) {\n-        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event resized\", \"Start-Delta:\" + event.getDeltaStartAsDuration() + \", End-Delta: \" + event.getDeltaEndAsDuration());\n+        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event resized\",\n+            \"Start-Delta:\" + event.getDeltaStartAsDuration() + \", End-Delta: \" + event.getDeltaEndAsDuration());\n \n         addMessage(message);\n     }\n@@ -580,8 +581,8 @@ public class ScheduleJava8View implements Serializable {\n \n     public List<SelectItem> getExtenderExamples() {\n         return extenderExamples.values().stream() //\n-                .sorted(Comparator.comparing(ExtenderExample::getName)) //\n-                .map(example -> new SelectItem(example.getKey(), example.getName())) //\n-                .collect(Collectors.toList());\n+            .sorted(Comparator.comparing(ExtenderExample::getName)) //\n+            .map(example -> new SelectItem(example.getKey(), example.getName())) //\n+            .collect(Collectors.toList());\n     }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "354",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/25/ScheduleJava8View.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/25/ScheduleJava8View.java\nindex a4b45873fa9..66c20f50b2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/25/ScheduleJava8View.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/25/ScheduleJava8View.java\n@@ -29,12 +29,10 @@ import org.primefaces.event.SelectEvent;\n import org.primefaces.model.*;\n import org.primefaces.showcase.service.ExtenderService;\n import org.primefaces.showcase.service.ExtenderService.ExtenderExample;\n-\n import java.util.Comparator;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n-\n import javax.annotation.PostConstruct;\n import javax.faces.application.FacesMessage;\n import javax.faces.context.FacesContext;\n@@ -61,39 +59,67 @@ public class ScheduleJava8View implements Serializable {\n     private ScheduleEvent<?> event = new DefaultScheduleEvent<>();\n \n     private boolean slotEventOverlap = true;\n+\n     private boolean showWeekNumbers = false;\n+\n     private boolean showHeader = true;\n+\n     private boolean draggable = true;\n+\n     private boolean resizable = true;\n+\n     private boolean showWeekends = true;\n+\n     private boolean tooltip = true;\n+\n     private boolean allDaySlot = true;\n+\n     private boolean rtl = false;\n \n     private double aspectRatio = Double.MIN_VALUE;\n \n     private String leftHeaderTemplate = \"prev,next today\";\n+\n     private String centerHeaderTemplate = \"title\";\n+\n     private String rightHeaderTemplate = \"dayGridMonth,timeGridWeek,timeGridDay,listYear\";\n+\n     private String nextDayThreshold = \"09:00:00\";\n+\n     private String weekNumberCalculation = \"local\";\n+\n     private String weekNumberCalculator = \"date.getTime()\";\n+\n     private String displayEventEnd;\n+\n     private String timeFormat;\n+\n     private String slotDuration = \"00:30:00\";\n+\n     private String slotLabelInterval;\n+\n     private String slotLabelFormat;\n+\n     private String scrollTime = \"06:00:00\";\n+\n     private String minTime = \"04:00:00\";\n+\n     private String maxTime = \"20:00:00\";\n+\n     private String locale = \"en\";\n+\n     private String timeZone = \"\";\n+\n     private String clientTimeZone = \"local\";\n+\n     private String columnHeaderFormat = \"\";\n+\n     private String view = \"timeGridWeek\";\n+\n     private String height = \"auto\";\n \n     private String extenderCode = \"// Write your code here or select an example from above\";\n+\n     private String selectedExtenderExample = \"\";\n \n     private Map<String, ExtenderExample> extenderExamples;\n@@ -102,79 +128,70 @@ public class ScheduleJava8View implements Serializable {\n     public void init() {\n         eventModel = new DefaultScheduleModel();\n \n-        DefaultScheduleEvent<?> event = DefaultScheduleEvent.builder()\n-                .title(\"Champions League Match\")\n-                .startDate(previousDay8Pm())\n-                .endDate(previousDay11Pm())\n-                .description(\"Team A vs. Team B\")\n-                .url(\"https://www.uefa.com/uefachampionsleague/\")\n-                .borderColor(\"orange\")\n-                .build();\n+        DefaultScheduleEvent<?> event = DefaultScheduleEvent.builder().title(\"Champions League Match\")\n+                                                                      .startDate(previousDay8Pm())\n+                                                                      .endDate(previousDay11Pm())\n+                                                                      .description(\"Team A vs. Team B\")\n+                                                                      .url(\"https://www.uefa.com/uefachampionsleague/\")\n+                                                                      .borderColor(\"orange\")\n+                                                                      .build();\n         eventModel.addEvent(event);\n-\n-        event = DefaultScheduleEvent.builder()\n-                .startDate(LocalDateTime.now().minusDays(6))\n-                .endDate(LocalDateTime.now().minusDays(3))\n-                .overlapAllowed(true)\n-                .editable(false)\n-                .resizable(false)\n-                .display(ScheduleDisplayMode.BACKGROUND)\n-                .backgroundColor(\"lightgreen\")\n-                .build();\n+        event = DefaultScheduleEvent.builder().startDate(LocalDateTime.now().minusDays(6))\n+                                              .endDate(LocalDateTime.now().minusDays(3))\n+                                              .overlapAllowed(true)\n+                                              .editable(false)\n+                                              .resizable(false)\n+                                              .display(ScheduleDisplayMode.BACKGROUND)\n+                                              .backgroundColor(\"lightgreen\")\n+                                              .build();\n         eventModel.addEvent(event);\n-\n-        event = DefaultScheduleEvent.builder()\n-                .title(\"Birthday Party\")\n-                .startDate(today1Pm())\n-                .endDate(today6Pm())\n-                .description(\"Aragon\")\n-                .overlapAllowed(true)\n-                .borderColor(\"#CB4335\")\n-                .build();\n+        event = DefaultScheduleEvent.builder().title(\"Birthday Party\")\n+                                              .startDate(today1Pm())\n+                                              .endDate(today6Pm())\n+                                              .description(\"Aragon\")\n+                                              .overlapAllowed(true)\n+                                              .borderColor(\"#CB4335\")\n+                                              .build();\n         eventModel.addEvent(event);\n-\n-        event = DefaultScheduleEvent.builder()\n-                .title(\"Breakfast at Tiffanys (always resizable)\")\n-                .startDate(nextDay9Am())\n-                .endDate(nextDay11Am())\n-                .description(\"all you can eat\")\n-                .overlapAllowed(true)\n-                .resizable(true)\n-                .borderColor(\"#27AE60\")\n-                .build();\n+        event = DefaultScheduleEvent.builder().title(\"Breakfast at Tiffanys (always resizable)\")\n+                                              .startDate(nextDay9Am())\n+                                              .endDate(nextDay11Am())\n+                                              .description(\"all you can eat\")\n+                                              .overlapAllowed(true)\n+                                              .resizable(true)\n+                                              .borderColor(\"#27AE60\")\n+                                              .build();\n         eventModel.addEvent(event);\n-\n-        event = DefaultScheduleEvent.builder()\n-                .title(\"Plant the new garden stuff (always draggable)\")\n-                .startDate(theDayAfter3Pm())\n-                .endDate(fourDaysLater3pm())\n-                .description(\"Trees, flowers, ...\")\n-                .draggable(true)\n-                .borderColor(\"#27AE60\")\n-                .build();\n+        event = DefaultScheduleEvent.builder().title(\"Plant the new garden stuff (always draggable)\")\n+                                              .startDate(theDayAfter3Pm())\n+                                              .endDate(fourDaysLater3pm())\n+                                              .description(\"Trees, flowers, ...\")\n+                                              .draggable(true)\n+                                              .borderColor(\"#27AE60\")\n+                                              .build();\n         eventModel.addEvent(event);\n \n-        DefaultScheduleEvent<?> scheduleEventAllDay = DefaultScheduleEvent.builder()\n-                .title(\"Holidays (AllDay)\")\n-                .startDate(sevenDaysLater0am())\n-                .endDate(eightDaysLater0am())\n-                .description(\"sleep as long as you want\")\n-                .borderColor(\"#27AE60\")\n-                .allDay(true)\n-                .build();\n+        DefaultScheduleEvent<?> scheduleEventAllDay = DefaultScheduleEvent.builder().title(\"Holidays (AllDay)\")\n+                                                                                    .startDate(sevenDaysLater0am())\n+                                                                                    .endDate(eightDaysLater0am())\n+                                                                                    .description(\"sleep as long as you want\")\n+                                                                                    .borderColor(\"#27AE60\")\n+                                                                                    .allDay(true)\n+                                                                                    .build();\n         eventModel.addEvent(scheduleEventAllDay);\n-\n         lazyEventModel = new LazyScheduleModel() {\n \n             @Override\n             public void loadEvents(LocalDateTime start, LocalDateTime end) {\n                 for (int i = 1; i <= 5; i++) {\n                     LocalDateTime random = getRandomDateTime(start);\n-                    addEvent(DefaultScheduleEvent.builder().title(\"Lazy Event \" + i).startDate(random).endDate(random.plusHours(3)).build());\n+                    addEvent(DefaultScheduleEvent.builder().title(\"Lazy Event \" + i)\n+                                                           .startDate(random)\n+                                                           .endDate(random.plusHours(3))\n+                                                           .build());\n                 }\n             }\n         };\n-\n         extenderExamples = extenderService.createExtenderExamples();\n     }\n \n@@ -187,7 +204,8 @@ public class ScheduleJava8View implements Serializable {\n     }\n \n     public LocalDateTime getRandomDateTime(LocalDateTime base) {\n-        LocalDateTime dateTime = base.withMinute(0).withSecond(0).withNano(0);\n+        LocalDateTime dateTime = base.withMinute(0).withSecond(0)\n+                                                   .withNano(0);\n         return dateTime.plusDays(((int) (Math.random() * 30)));\n     }\n \n@@ -200,43 +218,81 @@ public class ScheduleJava8View implements Serializable {\n     }\n \n     private LocalDateTime previousDay8Pm() {\n-        return LocalDateTime.now().minusDays(1).withHour(20).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().minusDays(1)\n+                                  .withHour(20)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime previousDay11Pm() {\n-        return LocalDateTime.now().minusDays(1).withHour(23).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().minusDays(1)\n+                                  .withHour(23)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime today1Pm() {\n-        return LocalDateTime.now().withHour(13).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().withHour(13)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime theDayAfter3Pm() {\n-        return LocalDateTime.now().plusDays(1).withHour(15).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().plusDays(1)\n+                                  .withHour(15)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime today6Pm() {\n-        return LocalDateTime.now().withHour(18).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().withHour(18)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime nextDay9Am() {\n-        return LocalDateTime.now().plusDays(1).withHour(9).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().plusDays(1)\n+                                  .withHour(9)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime nextDay11Am() {\n-        return LocalDateTime.now().plusDays(1).withHour(11).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().plusDays(1)\n+                                  .withHour(11)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime fourDaysLater3pm() {\n-        return LocalDateTime.now().plusDays(4).withHour(15).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().plusDays(4)\n+                                  .withHour(15)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime sevenDaysLater0am() {\n-        return LocalDateTime.now().plusDays(7).withHour(0).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().plusDays(7)\n+                                  .withHour(0)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     private LocalDateTime eightDaysLater0am() {\n-        return LocalDateTime.now().plusDays(7).withHour(0).withMinute(0).withSecond(0).withNano(0);\n+        return LocalDateTime.now().plusDays(7)\n+                                  .withHour(0)\n+                                  .withMinute(0)\n+                                  .withSecond(0)\n+                                  .withNano(0);\n     }\n \n     public LocalDate getInitialDate() {\n@@ -254,7 +310,8 @@ public class ScheduleJava8View implements Serializable {\n     public void addEvent() {\n         if (event.isAllDay()) {\n             // see https://github.com/primefaces/primefaces/issues/1164\n-            if (event.getStartDate().toLocalDate().equals(event.getEndDate().toLocalDate())) {\n+            if (event.getStartDate().toLocalDate()\n+                                    .equals(event.getEndDate().toLocalDate())) {\n                 event.setEndDate(event.getEndDate().plusDays(1));\n             }\n         }\n@@ -275,28 +332,33 @@ public class ScheduleJava8View implements Serializable {\n \n     public void onViewChange(SelectEvent<String> selectEvent) {\n         view = selectEvent.getObject();\n+\n         FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"View Changed\", \"View:\" + view);\n         addMessage(message);\n     }\n \n     public void onDateSelect(SelectEvent<LocalDateTime> selectEvent) {\n-        event = DefaultScheduleEvent.builder().startDate(selectEvent.getObject()).endDate(selectEvent.getObject().plusHours(1)).build();\n+        event = DefaultScheduleEvent.builder().startDate(selectEvent.getObject())\n+                                              .endDate(selectEvent.getObject().plusHours(1))\n+                                              .build();\n     }\n \n     public void onEventMove(ScheduleEntryMoveEvent event) {\n-        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event moved\", \"Delta:\" + event.getDeltaAsDuration());\n-\n+        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,\n+                                                \"Event moved\",\n+                                                \"Delta:\" + event.getDeltaAsDuration());\n         addMessage(message);\n     }\n \n     public void onEventResize(ScheduleEntryResizeEvent event) {\n         FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event resized\", \"Start-Delta:\" + event.getDeltaStartAsDuration() + \", End-Delta: \" + event.getDeltaEndAsDuration());\n-\n         addMessage(message);\n     }\n \n     public void onEventDelete() {\n-        String eventId = FacesContext.getCurrentInstance().getExternalContext().getRequestParameterMap().get(\"eventId\");\n+        String eventId = FacesContext.getCurrentInstance().getExternalContext()\n+                                                          .getRequestParameterMap()\n+                                                          .get(\"eventId\");\n         if (event != null) {\n             ScheduleEvent<?> event = eventModel.getEvent(eventId);\n             eventModel.deleteEvent(event);\n@@ -310,6 +372,7 @@ public class ScheduleJava8View implements Serializable {\n                 FacesMessage message = new FacesMessage(example.getName(), example.getDetails());\n                 FacesContext.getCurrentInstance().addMessage(event.getComponent().getClientId(), message);\n             }\n+\n             this.extenderCode = example.getValue();\n         }\n     }\n@@ -580,8 +643,8 @@ public class ScheduleJava8View implements Serializable {\n \n     public List<SelectItem> getExtenderExamples() {\n         return extenderExamples.values().stream() //\n-                .sorted(Comparator.comparing(ExtenderExample::getName)) //\n-                .map(example -> new SelectItem(example.getKey(), example.getName())) //\n-                .collect(Collectors.toList());\n+                                        .sorted(Comparator.comparing(ExtenderExample::getName)) //\n+                                        .map(example -> new SelectItem(example.getKey(), example.getName())) //\n+                                        .collect(Collectors.toList());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 158
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "293",
                    "column": "1",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "296",
                    "column": "10",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/25/ScheduleJava8View.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_three_grams/25/ScheduleJava8View.java\nindex a4b45873fa9..edce8f749d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/25/ScheduleJava8View.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_three_grams/25/ScheduleJava8View.java\n@@ -290,9 +290,10 @@ public class ScheduleJava8View implements Serializable {\n     }\n \n     public void onEventResize(ScheduleEntryResizeEvent event) {\n-        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event resized\", \"Start-Delta:\" + event.getDeltaStartAsDuration() + \", End-Delta: \" + event.getDeltaEndAsDuration());\n+FacesMessage\n+    message = new FacesMessage(FacesMessage.SEVERITY_INFO, \"Event resized\", \"Start-Delta:\" + event.getDeltaStartAsDuration() + \", End-Delta: \" + event.getDeltaEndAsDuration());\n \n-        addMessage(message);\n+         addMessage(message);\n     }\n \n     public void onEventDelete() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4546",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4546/StoreProcessorTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4546/StoreProcessorTask.java\nindex a007798d4bb..877f6ee1fcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4546/StoreProcessorTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4546/StoreProcessorTask.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import org.neo4j.consistency.checking.cache.CacheAccess;\n@@ -32,97 +33,92 @@ import static java.lang.String.format;\n \n public class StoreProcessorTask<R extends AbstractBaseRecord> extends ConsistencyCheckerTask\n {\n-    private final RecordStore<R> store;\n-    private final StoreProcessor processor;\n-    private final ProgressListener progressListener;\n-    private final StoreAccess storeAccess;\n-    private final CacheAccess cacheAccess;\n-    private final QueueDistribution distribution;\n+  private final RecordStore<R> store;\n+  private final StoreProcessor processor;\n+  private final ProgressListener progressListener;\n+  private final StoreAccess storeAccess;\n+  private final CacheAccess cacheAccess;\n+  private final QueueDistribution distribution;\n \n-    StoreProcessorTask( String name, Statistics statistics, int threads, RecordStore<R> store, StoreAccess storeAccess,\n-            String builderPrefix, ProgressMonitorFactory.MultiPartBuilder builder, CacheAccess cacheAccess,\n-            StoreProcessor processor, QueueDistribution distribution )\n-    {\n-        super( name, statistics, threads );\n-        this.store = store;\n-        this.storeAccess = storeAccess;\n-        this.cacheAccess = cacheAccess;\n-        this.processor = processor;\n-        this.distribution = distribution;\n-        this.progressListener = builder.progressForPart( name +\n-                indexedPartName( store.getStorageFileName().getName(), builderPrefix ), store.getHighId() );\n-    }\n+  StoreProcessorTask(String name, Statistics statistics, int threads, RecordStore<R> store, StoreAccess storeAccess,\n+                     String builderPrefix, ProgressMonitorFactory.MultiPartBuilder builder, CacheAccess cacheAccess,\n+                     StoreProcessor processor, QueueDistribution distribution)\n+  {\n+    super(name, statistics, threads);\n+    this.store = store;\n+    this.storeAccess = storeAccess;\n+    this.cacheAccess = cacheAccess;\n+    this.processor = processor;\n+    this.distribution = distribution;\n+    this.progressListener = builder.progressForPart(name +\n+        indexedPartName(store.getStorageFileName().getName(), builderPrefix), store.getHighId());\n+  }\n \n-    private String indexedPartName( String storeFileName, String prefix )\n-    {\n-        return prefix.length() != 0 ? \"_\" : format( \"%s_pass_%s\", storeFileName, prefix );\n-    }\n+  private String indexedPartName(String storeFileName, String prefix)\n+  {\n+    return prefix.length() != 0 ? \"_\" : format(\"%s_pass_%s\", storeFileName, prefix);\n+  }\n \n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public void run()\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public void run()\n+  {\n+    statistics.reset();\n+    beforeProcessing(processor);\n+    try\n     {\n-        statistics.reset();\n-        beforeProcessing( processor );\n-        try\n-        {\n-            if ( processor.getStage().getCacheSlotSizes().length > 0 )\n-            {\n-                cacheAccess.setCacheSlotSizes( processor.getStage().getCacheSlotSizes() );\n-            }\n-            cacheAccess.setForward( processor.getStage().isForward() );\n+      if (processor.getStage().getCacheSlotSizes().length > 0)\n+      {\n+        cacheAccess.setCacheSlotSizes(processor.getStage().getCacheSlotSizes());\n+      }\n+      cacheAccess.setForward(processor.getStage().isForward());\n \n-            if ( processor.getStage().isParallel() )\n-            {\n-                long highId;\n-                if ( processor.getStage() == CheckStage.Stage1_NS_PropsLabels )\n-                {\n-                    highId = storeAccess.getNodeStore().getHighId();\n-                }\n-                else if ( processor.getStage() == CheckStage.Stage8_PS_Props )\n-                {\n-                    highId = storeAccess.getPropertyStore().getHighId();\n-                }\n-                else\n-                {\n-                    highId = storeAccess.getNodeStore().getHighId();\n-                }\n-                long recordsPerCPU = RecordDistributor.calculateRecodsPerCpu( highId, numberOfThreads );\n-                QueueDistributor<R> distributor = distribution.distributor( recordsPerCPU, numberOfThreads );\n-                processor.applyFilteredParallel( store, progressListener, numberOfThreads, recordsPerCPU, distributor );\n-            }\n-            else\n-            {\n-                processor.applyFiltered( store, progressListener );\n-            }\n-            cacheAccess.setForward( true );\n-        }\n-        catch ( Throwable e )\n+      if (processor.getStage().isParallel())\n+      {\n+        long highId;\n+        if (processor.getStage() == CheckStage.Stage1_NS_PropsLabels)\n         {\n-            progressListener.failed( e );\n-            throw new RuntimeException( e );\n-        }\n-        finally\n+          highId = storeAccess.getNodeStore().getHighId();\n+        } else if (processor.getStage() == CheckStage.Stage8_PS_Props)\n+        {\n+          highId = storeAccess.getPropertyStore().getHighId();\n+        } else\n         {\n-            afterProcessing( processor );\n+          highId = storeAccess.getNodeStore().getHighId();\n         }\n-        statistics.print( name );\n-    }\n-\n-    protected void beforeProcessing( StoreProcessor processor )\n+        long recordsPerCPU = RecordDistributor.calculateRecodsPerCpu(highId, numberOfThreads);\n+        QueueDistributor<R> distributor = distribution.distributor(recordsPerCPU, numberOfThreads);\n+        processor.applyFilteredParallel(store, progressListener, numberOfThreads, recordsPerCPU, distributor);\n+      } else\n+      {\n+        processor.applyFiltered(store, progressListener);\n+      }\n+      cacheAccess.setForward(true);\n+    } catch (Throwable e)\n     {\n-        // intentionally empty\n-    }\n-\n-    protected void afterProcessing( StoreProcessor processor )\n+      progressListener.failed(e);\n+      throw new RuntimeException(e);\n+    } finally\n     {\n-        // intentionally empty\n+      afterProcessing(processor);\n     }\n+    statistics.print(name);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return getClass().getSimpleName() + \"[\" + name + \" @ \" + processor.getStage() + \", \" +\n-                store + \":\" + store.getHighId() + \"]\";\n-    }\n+  protected void beforeProcessing(StoreProcessor processor)\n+  {\n+    // intentionally empty\n+  }\n+\n+  protected void afterProcessing(StoreProcessor processor)\n+  {\n+    // intentionally empty\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"[\" + name + \" @ \" + processor.getStage() + \", \" +\n+        store + \":\" + store.getHighId() + \"]\";\n+  }\n }\n",
            "diff_size": 104
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "65",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4546/StoreProcessorTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4546/StoreProcessorTask.java\nindex a007798d4bb..8880d34576f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4546/StoreProcessorTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4546/StoreProcessorTask.java\n@@ -49,8 +49,7 @@ public class StoreProcessorTask<R extends AbstractBaseRecord> extends Consistenc\n         this.cacheAccess = cacheAccess;\n         this.processor = processor;\n         this.distribution = distribution;\n-        this.progressListener = builder.progressForPart( name +\n-                indexedPartName( store.getStorageFileName().getName(), builderPrefix ), store.getHighId() );\n+        this.progressListener = builder.progressForPart( name + indexedPartName( store.getStorageFileName().getName(), builderPrefix ), store.getHighId() );\n     }\n \n     private String indexedPartName( String storeFileName, String prefix )\n@@ -66,13 +65,12 @@ public class StoreProcessorTask<R extends AbstractBaseRecord> extends Consistenc\n         beforeProcessing( processor );\n         try\n         {\n-            if ( processor.getStage().getCacheSlotSizes().length > 0 )\n+            if ( processor.getStage().getCacheSlotSizes().length> 0 )\n             {\n                 cacheAccess.setCacheSlotSizes( processor.getStage().getCacheSlotSizes() );\n             }\n             cacheAccess.setForward( processor.getStage().isForward() );\n-\n-            if ( processor.getStage().isParallel() )\n+if ( processor.getStage().isParallel() )\n             {\n                 long highId;\n                 if ( processor.getStage() == CheckStage.Stage1_NS_PropsLabels )\n@@ -122,7 +120,6 @@ public class StoreProcessorTask<R extends AbstractBaseRecord> extends Consistenc\n     @Override\n     public String toString()\n     {\n-        return getClass().getSimpleName() + \"[\" + name + \" @ \" + processor.getStage() + \", \" +\n-                store + \":\" + store.getHighId() + \"]\";\n+        return getClass().getSimpleName() + \"[\" + name + \" @ \" + processor.getStage() + \", \" + store + \":\" + store.getHighId() + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1339",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1339/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1339/Configuration.java\nindex 133a53e96a4..42dc7abe5ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1339/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1339/Configuration.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input.csv;\n \n /**\n@@ -24,71 +25,71 @@ package org.neo4j.unsafe.impl.batchimport.input.csv;\n  */\n public interface Configuration extends org.neo4j.csv.reader.Configuration\n {\n-    /**\n-     * Delimiting character between each values in a CSV input line.\n-     * Typical character is '\\t' (TAB) or ',' (it is Comma Separated Values after all).\n-     */\n-    char delimiter();\n+  /**\n+   * Delimiting character between each values in a CSV input line.\n+   * Typical character is '\\t' (TAB) or ',' (it is Comma Separated Values after all).\n+   */\n+  char delimiter();\n+\n+  /**\n+   * Character separating array values from one another for values that represent arrays.\n+   */\n+  char arrayDelimiter();\n \n-    /**\n-     * Character separating array values from one another for values that represent arrays.\n-     */\n-    char arrayDelimiter();\n+  abstract class Default extends org.neo4j.csv.reader.Configuration.Default implements Configuration\n+  {\n+  }\n \n-    abstract class Default extends org.neo4j.csv.reader.Configuration.Default implements Configuration\n+  Configuration COMMAS = new Default()\n+  {\n+    @Override\n+    public char delimiter()\n     {\n+      return ',';\n     }\n \n-    Configuration COMMAS = new Default()\n+    @Override\n+    public char arrayDelimiter()\n     {\n-        @Override\n-        public char delimiter()\n-        {\n-            return ',';\n-        }\n+      return ';';\n+    }\n+  };\n \n-        @Override\n-        public char arrayDelimiter()\n-        {\n-            return ';';\n-        }\n-    };\n+  Configuration TABS = new Default()\n+  {\n+    @Override\n+    public char delimiter()\n+    {\n+      return '\\t';\n+    }\n \n-    Configuration TABS = new Default()\n+    @Override\n+    public char arrayDelimiter()\n     {\n-        @Override\n-        public char delimiter()\n-        {\n-            return '\\t';\n-        }\n+      return ',';\n+    }\n+  };\n \n-        @Override\n-        public char arrayDelimiter()\n-        {\n-            return ',';\n-        }\n-    };\n+  class Overridden extends org.neo4j.csv.reader.Configuration.Overridden implements Configuration\n+  {\n+    private final Configuration defaults;\n \n-    class Overridden extends org.neo4j.csv.reader.Configuration.Overridden implements Configuration\n+    public Overridden(Configuration defaults)\n     {\n-        private final Configuration defaults;\n-\n-        public Overridden( Configuration defaults )\n-        {\n-            super( defaults );\n-            this.defaults = defaults;\n-        }\n+      super(defaults);\n+      this.defaults = defaults;\n+    }\n \n-        @Override\n-        public char delimiter()\n-        {\n-            return defaults.delimiter();\n-        }\n+    @Override\n+    public char delimiter()\n+    {\n+      return defaults.delimiter();\n+    }\n \n-        @Override\n-        public char arrayDelimiter()\n-        {\n-            return defaults.arrayDelimiter();\n-        }\n+    @Override\n+    public char arrayDelimiter()\n+    {\n+      return defaults.arrayDelimiter();\n     }\n+  }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1339/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1339/Configuration.java\nindex 133a53e96a4..30cb28cbcd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1339/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1339/Configuration.java\n@@ -91,4 +91,4 @@ public interface Configuration extends org.neo4j.csv.reader.Configuration\n             return defaults.arrayDelimiter();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
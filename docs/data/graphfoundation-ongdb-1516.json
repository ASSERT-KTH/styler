{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1516",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1516/ReplicationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1516/ReplicationModule.java\nindex c8bc00c22d8..f4d29445d65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1516/ReplicationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1516/ReplicationModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering;\n \n import java.io.File;\n@@ -45,61 +46,61 @@ import org.neo4j.logging.LogProvider;\n \n public class ReplicationModule\n {\n-    public static final String SESSION_TRACKER_NAME = \"session-tracker\";\n+  public static final String SESSION_TRACKER_NAME = \"session-tracker\";\n \n-    private final RaftReplicator replicator;\n-    private final ProgressTrackerImpl progressTracker;\n-    private final SessionTracker sessionTracker;\n+  private final RaftReplicator replicator;\n+  private final ProgressTrackerImpl progressTracker;\n+  private final SessionTracker sessionTracker;\n \n-    public ReplicationModule( MemberId myself, PlatformModule platformModule, Config config,\n-            ConsensusModule consensusModule, Outbound<MemberId,RaftMessages.RaftMessage> outbound,\n-            File clusterStateDirectory, FileSystemAbstraction fileSystem, LogProvider logProvider )\n-    {\n-        LifeSupport life = platformModule.life;\n+  public ReplicationModule(MemberId myself, PlatformModule platformModule, Config config,\n+                           ConsensusModule consensusModule, Outbound<MemberId, RaftMessages.RaftMessage> outbound,\n+                           File clusterStateDirectory, FileSystemAbstraction fileSystem, LogProvider logProvider)\n+  {\n+    LifeSupport life = platformModule.life;\n \n-        DurableStateStorage<GlobalSessionTrackerState> sessionTrackerStorage;\n-        sessionTrackerStorage = life.add( new DurableStateStorage<>( fileSystem, clusterStateDirectory,\n-                SESSION_TRACKER_NAME, new GlobalSessionTrackerState.Marshal( new MemberId.Marshal() ),\n-                config.get( CausalClusteringSettings.global_session_tracker_state_size ), logProvider ) );\n+    DurableStateStorage<GlobalSessionTrackerState> sessionTrackerStorage;\n+    sessionTrackerStorage = life.add(new DurableStateStorage<>(fileSystem, clusterStateDirectory,\n+        SESSION_TRACKER_NAME, new GlobalSessionTrackerState.Marshal(new MemberId.Marshal()),\n+        config.get(CausalClusteringSettings.global_session_tracker_state_size), logProvider));\n \n-        sessionTracker = new SessionTracker( sessionTrackerStorage );\n+    sessionTracker = new SessionTracker(sessionTrackerStorage);\n \n-        GlobalSession myGlobalSession = new GlobalSession( UUID.randomUUID(), myself );\n-        LocalSessionPool sessionPool = new LocalSessionPool( myGlobalSession );\n-        progressTracker = new ProgressTrackerImpl( myGlobalSession );\n+    GlobalSession myGlobalSession = new GlobalSession(UUID.randomUUID(), myself);\n+    LocalSessionPool sessionPool = new LocalSessionPool(myGlobalSession);\n+    progressTracker = new ProgressTrackerImpl(myGlobalSession);\n \n-        long replicationLimit = config.get( CausalClusteringSettings.replication_total_size_limit );\n-        Duration initialBackoff = config.get( CausalClusteringSettings.replication_retry_timeout_base );\n-        Duration upperBoundBackoff = config.get( CausalClusteringSettings.replication_retry_timeout_limit );\n-        Duration leaderBackoff = config.get( CausalClusteringSettings.replication_leader_retry_timeout );\n+    long replicationLimit = config.get(CausalClusteringSettings.replication_total_size_limit);\n+    Duration initialBackoff = config.get(CausalClusteringSettings.replication_retry_timeout_base);\n+    Duration upperBoundBackoff = config.get(CausalClusteringSettings.replication_retry_timeout_limit);\n+    Duration leaderBackoff = config.get(CausalClusteringSettings.replication_leader_retry_timeout);\n \n-        TimeoutStrategy progressRetryStrategy = new ExponentialBackoffStrategy( initialBackoff, upperBoundBackoff );\n-        TimeoutStrategy leaderRetryStrategy = new ConstantTimeTimeoutStrategy( leaderBackoff );\n-        replicator = life.add( new RaftReplicator(\n-                consensusModule.raftMachine(),\n-                myself,\n-                outbound,\n-                sessionPool,\n-                progressTracker,\n-                progressRetryStrategy,\n-                leaderRetryStrategy,\n-                platformModule.availabilityGuard,\n-                logProvider,\n-                replicationLimit ) );\n-    }\n+    TimeoutStrategy progressRetryStrategy = new ExponentialBackoffStrategy(initialBackoff, upperBoundBackoff);\n+    TimeoutStrategy leaderRetryStrategy = new ConstantTimeTimeoutStrategy(leaderBackoff);\n+    replicator = life.add(new RaftReplicator(\n+        consensusModule.raftMachine(),\n+        myself,\n+        outbound,\n+        sessionPool,\n+        progressTracker,\n+        progressRetryStrategy,\n+        leaderRetryStrategy,\n+        platformModule.availabilityGuard,\n+        logProvider,\n+        replicationLimit));\n+  }\n \n-    public RaftReplicator getReplicator()\n-    {\n-        return replicator;\n-    }\n+  public RaftReplicator getReplicator()\n+  {\n+    return replicator;\n+  }\n \n-    public ProgressTrackerImpl getProgressTracker()\n-    {\n-        return progressTracker;\n-    }\n+  public ProgressTrackerImpl getProgressTracker()\n+  {\n+    return progressTracker;\n+  }\n \n-    public SessionTracker getSessionTracker()\n-    {\n-        return sessionTracker;\n-    }\n+  public SessionTracker getSessionTracker()\n+  {\n+    return sessionTracker;\n+  }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1516/ReplicationModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1516/ReplicationModule.java\nindex c8bc00c22d8..3dc0684166e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1516/ReplicationModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1516/ReplicationModule.java\n@@ -46,8 +46,7 @@ import org.neo4j.logging.LogProvider;\n public class ReplicationModule\n {\n     public static final String SESSION_TRACKER_NAME = \"session-tracker\";\n-\n-    private final RaftReplicator replicator;\n+private final RaftReplicator replicator;\n     private final ProgressTrackerImpl progressTracker;\n     private final SessionTracker sessionTracker;\n \n@@ -59,12 +58,9 @@ public class ReplicationModule\n \n         DurableStateStorage<GlobalSessionTrackerState> sessionTrackerStorage;\n         sessionTrackerStorage = life.add( new DurableStateStorage<>( fileSystem, clusterStateDirectory,\n-                SESSION_TRACKER_NAME, new GlobalSessionTrackerState.Marshal( new MemberId.Marshal() ),\n-                config.get( CausalClusteringSettings.global_session_tracker_state_size ), logProvider ) );\n-\n-        sessionTracker = new SessionTracker( sessionTrackerStorage );\n-\n-        GlobalSession myGlobalSession = new GlobalSession( UUID.randomUUID(), myself );\n+                SESSION_TRACKER_NAME, new GlobalSessionTrackerState.Marshal( new MemberId.Marshal() ), config.get( CausalClusteringSettings.global_session_tracker_state_size ), logProvider ) );\n+sessionTracker = new SessionTracker( sessionTrackerStorage );\n+GlobalSession myGlobalSession = new GlobalSession( UUID.randomUUID(), myself );\n         LocalSessionPool sessionPool = new LocalSessionPool( myGlobalSession );\n         progressTracker = new ProgressTrackerImpl( myGlobalSession );\n \n@@ -72,20 +68,10 @@ public class ReplicationModule\n         Duration initialBackoff = config.get( CausalClusteringSettings.replication_retry_timeout_base );\n         Duration upperBoundBackoff = config.get( CausalClusteringSettings.replication_retry_timeout_limit );\n         Duration leaderBackoff = config.get( CausalClusteringSettings.replication_leader_retry_timeout );\n-\n-        TimeoutStrategy progressRetryStrategy = new ExponentialBackoffStrategy( initialBackoff, upperBoundBackoff );\n+TimeoutStrategy progressRetryStrategy = new ExponentialBackoffStrategy( initialBackoff, upperBoundBackoff );\n         TimeoutStrategy leaderRetryStrategy = new ConstantTimeTimeoutStrategy( leaderBackoff );\n-        replicator = life.add( new RaftReplicator(\n-                consensusModule.raftMachine(),\n-                myself,\n-                outbound,\n-                sessionPool,\n-                progressTracker,\n-                progressRetryStrategy,\n-                leaderRetryStrategy,\n-                platformModule.availabilityGuard,\n-                logProvider,\n-                replicationLimit ) );\n+        replicator = life.add( new RaftReplicator( consensusModule.raftMachine(), myself, outbound, sessionPool, progressTracker, progressRetryStrategy, leaderRetryStrategy,\n+                platformModule.availabilityGuard, logProvider, replicationLimit ) );\n     }\n \n     public RaftReplicator getReplicator()\n@@ -102,4 +88,4 @@ public class ReplicationModule\n     {\n         return sessionTracker;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
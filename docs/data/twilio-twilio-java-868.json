{
    "project_name": "twilio-twilio-java",
    "error_id": "868",
    "information": {
        "errors": [
            {
                "line": "145",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/868/UserChannelReader.java\nindex c69627fb962..5bb4690c655 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/868/UserChannelReader.java\n@@ -142,7 +142,7 @@ public class UserChannelReader extends Reader<UserChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/868/UserChannelReader.java\nindex c69627fb962..10da6d47566 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/868/UserChannelReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.chat.v2.service.user;\n@@ -142,7 +142,7 @@ public class UserChannelReader extends Reader<UserChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/868/UserChannelReader.java\nindex c69627fb962..3cf112c1678 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/868/UserChannelReader.java\n@@ -30,6 +30,8 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param pathUserSid The SID of the User to fetch the User Channel resources\n      *                    from\n      */\n+\n+\n     public UserChannelReader(final String pathServiceSid,\n                              final String pathUserSid) {\n         this.pathServiceSid = pathServiceSid;\n@@ -42,6 +44,8 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UserChannel ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<UserChannel> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -53,14 +57,15 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UserChannel ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<UserChannel> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.CHAT.toString(),\n-            \"/v2/Services/\" + this.pathServiceSid + \"/Users/\" + this.pathUserSid + \"/Channels\",\n-            client.getRegion()\n+                              HttpMethod.GET,\n+                              Domains.CHAT.toString(),\n+                              \"/v2/Services/\" + this.pathServiceSid + \"/Users/\" + this.pathUserSid + \"/Channels\",\n+                              client.getRegion()\n         );\n \n         addQueryParams(request);\n@@ -74,14 +79,12 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return UserChannel ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<UserChannel> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<UserChannel> getPage(final String targetUrl,\n+                                     final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -92,15 +95,13 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<UserChannel> nextPage(final Page<UserChannel> page,\n                                       final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.CHAT.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getNextPageUrl(Domains.CHAT.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -112,15 +113,13 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<UserChannel> previousPage(final Page<UserChannel> page,\n                                           final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.CHAT.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getPreviousPageUrl(Domains.CHAT.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -132,9 +131,11 @@ public class UserChannelReader extends Reader<UserChannel> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<UserChannel> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<UserChannel> pageForRequest(final TwilioRestClient client,\n+                                             final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"UserChannel read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -142,15 +143,11 @@ public class UserChannelReader extends Reader<UserChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"channels\",\n-            response.getContent(),\n-            UserChannel.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"channels\", response.getContent(), UserChannel.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -158,6 +155,8 @@ public class UserChannelReader extends Reader<UserChannel> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/868/UserChannelReader.java\nindex c69627fb962..5bb4690c655 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/868/UserChannelReader.java\n@@ -142,7 +142,7 @@ public class UserChannelReader extends Reader<UserChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/868/UserChannelReader.java\nindex c69627fb962..3f2f20c2844 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/868/UserChannelReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/868/UserChannelReader.java\n@@ -142,7 +142,8 @@ public class UserChannelReader extends Reader<UserChannel> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2298",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2298/CheckPointThreshold.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2298/CheckPointThreshold.java\nindex c8b07e457aa..dfa2a78c0f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2298/CheckPointThreshold.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2298/CheckPointThreshold.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.checkpoint;\n \n import java.util.NoSuchElementException;\n@@ -37,24 +38,24 @@ import static org.neo4j.configuration.GraphDatabaseSettings.check_point_policy;\n  */\n public interface CheckPointThreshold\n {\n-    long DEFAULT_CHECKING_FREQUENCY_MILLIS = TimeUnit.SECONDS.toMillis( 10 );\n+    long DEFAULT_CHECKING_FREQUENCY_MILLIS = TimeUnit.SECONDS.toMillis(10);\n \n     /**\n      * This method initialize the threshold by providing the initial transaction id\n      *\n      * @param transactionId the latest transaction committed id\n      */\n-    void initialize( long transactionId );\n+    void initialize(long transactionId);\n \n     /**\n      * This method can be used for querying the threshold about the necessity of a check point.\n      *\n-     * @param lastCommittedTransactionId the latest transaction committed id\n+     * @param lastCommittedTransactionId         the latest transaction committed id\n      * @param lastCommittedTransactionLogVersion log version the latest committed transaction is in\n-     * @param consumer will be called with the description about this threshold only if the return value is true\n+     * @param consumer                           will be called with the description about this threshold only if the return value is true\n      * @return true is a check point is needed, false otherwise.\n      */\n-    boolean isCheckPointingNeeded( long lastCommittedTransactionId, long lastCommittedTransactionLogVersion, Consumer<String> consumer );\n+    boolean isCheckPointingNeeded(long lastCommittedTransactionId, long lastCommittedTransactionLogVersion, Consumer<String> consumer);\n \n     /**\n      * This method notifies the threshold that a check point has happened. This must be called every time a check point\n@@ -64,7 +65,7 @@ public interface CheckPointThreshold\n      *\n      * @param transactionId the latest transaction committed id used by the check point\n      */\n-    void checkPointHappened( long transactionId );\n+    void checkPointHappened(long transactionId);\n \n     /**\n      * Return a desired checking frequency, as a number of milliseconds between calls to\n@@ -78,46 +79,45 @@ public interface CheckPointThreshold\n      * Create and configure a {@link CheckPointThreshold} based on the given configurations.\n      */\n     static CheckPointThreshold createThreshold(\n-            Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider )\n+      Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider)\n     {\n-        String policyName = config.get( check_point_policy ).name().toLowerCase();\n+        String policyName = config.get(check_point_policy).name().toLowerCase();\n         CheckPointThresholdPolicy policy;\n         try\n         {\n-            policy = CheckPointThresholdPolicy.loadPolicy( policyName );\n-        }\n-        catch ( NoSuchElementException e )\n+            policy = CheckPointThresholdPolicy.loadPolicy(policyName);\n+        } catch (NoSuchElementException e)\n         {\n-            logProvider.getLog( CheckPointThreshold.class ).warn(\n-                    \"Could not load check point policy '\" + check_point_policy.name() + \"=\" + policyName + \"'. \" +\n-                    \"Using default policy instead.\", e );\n+            logProvider.getLog(CheckPointThreshold.class).warn(\n+              \"Could not load check point policy '\" + check_point_policy.name() + \"=\" + policyName + \"'. \" +\n+                \"Using default policy instead.\", e);\n             policy = new PeriodicThresholdPolicy();\n         }\n-        return policy.createThreshold( config, clock, logPruning, logProvider );\n+        return policy.createThreshold(config, clock, logPruning, logProvider);\n     }\n \n     /**\n      * Create a new {@link CheckPointThreshold} which will trigger if any of the given thresholds triggers.\n      */\n-    static CheckPointThreshold or( final CheckPointThreshold... thresholds )\n+    static CheckPointThreshold or(final CheckPointThreshold... thresholds)\n     {\n         return new CheckPointThreshold()\n         {\n             @Override\n-            public void initialize( long transactionId )\n+            public void initialize(long transactionId)\n             {\n-                for ( CheckPointThreshold threshold : thresholds )\n+                for (CheckPointThreshold threshold : thresholds)\n                 {\n-                    threshold.initialize( transactionId );\n+                    threshold.initialize(transactionId);\n                 }\n             }\n \n             @Override\n-            public boolean isCheckPointingNeeded( long transactionId, long transactionLogVersion, Consumer<String> consumer )\n+            public boolean isCheckPointingNeeded(long transactionId, long transactionLogVersion, Consumer<String> consumer)\n             {\n-                for ( CheckPointThreshold threshold : thresholds )\n+                for (CheckPointThreshold threshold : thresholds)\n                 {\n-                    if ( threshold.isCheckPointingNeeded( transactionId, transactionLogVersion, consumer ) )\n+                    if (threshold.isCheckPointingNeeded(transactionId, transactionLogVersion, consumer))\n                     {\n                         return true;\n                     }\n@@ -127,20 +127,20 @@ public interface CheckPointThreshold\n             }\n \n             @Override\n-            public void checkPointHappened( long transactionId )\n+            public void checkPointHappened(long transactionId)\n             {\n-                for ( CheckPointThreshold threshold : thresholds )\n+                for (CheckPointThreshold threshold : thresholds)\n                 {\n-                    threshold.checkPointHappened( transactionId );\n+                    threshold.checkPointHappened(transactionId);\n                 }\n             }\n \n             @Override\n             public long checkFrequencyMillis()\n             {\n-                return Stream.of( thresholds )\n-                             .mapToLong( CheckPointThreshold::checkFrequencyMillis )\n-                             .min().orElse( DEFAULT_CHECKING_FREQUENCY_MILLIS );\n+                return Stream.of(thresholds)\n+                  .mapToLong(CheckPointThreshold::checkFrequencyMillis)\n+                  .min().orElse(DEFAULT_CHECKING_FREQUENCY_MILLIS);\n             }\n         };\n     }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
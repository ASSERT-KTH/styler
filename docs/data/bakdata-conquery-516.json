{
    "project_name": "bakdata-conquery",
    "error_id": "516",
    "information": {
        "errors": [
            {
                "line": "85",
                "column": "17",
                "severity": "warning",
                "message": "'}' at column 5 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\t\tq.setShared(shared);\n\t\t\t\t\tnamespaces.getMetaStorage().updateExecution(q);\n\t\t\t\t} catch (JSONException e) {\n\t\t\t\t\tlog.error(\"Failed to set shared status for query \"+query, e);\n\t\t\t\t}\n\t\t\t});",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "85",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/516/StoredQueriesProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/516/StoredQueriesProcessor.java\nindex 19ebe0d001d..85fb45df4ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/516/StoredQueriesProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/516/StoredQueriesProcessor.java\n@@ -35,93 +35,91 @@ import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public class StoredQueriesProcessor {\n-\t@Getter\n-\tprivate final Namespaces namespaces;\n-\n-\tpublic StoredQueriesProcessor(Namespaces namespaces) {\n-\t\tthis.namespaces = namespaces;\n-\t}\n-\n-\tpublic Stream<ExecutionStatus> getAllQueries(Dataset dataset, HttpServletRequest req) {\n-\t\tCollection<ManagedExecution> allQueries = namespaces.getMetaStorage().getAllExecutions();\n-\n-\t\treturn allQueries\n-\t\t\t.stream()\n-\t\t\t//to exclude subtypes from somewhere else\n-\t\t\t.filter(q -> (q instanceof ManagedQuery) && ((ManagedQuery)q).getQuery().getClass().equals(ConceptQuery.class))\n-\t\t\t.filter(q -> q.getDataset().equals(dataset.getId()))\n-\t\t\t.flatMap(mq -> {\n-\t\t\t\ttry {\n-\t\t\t\t\treturn Stream.of(mq.buildStatus(URLBuilder.fromRequest(req)));\n-\t\t\t\t}\n-\t\t\t\tcatch(Exception e) {\n-\t\t\t\t\tlog.warn(\"Could not build status of \"+mq, e);\n-\t\t\t\t\treturn Stream.empty();\n-\t\t\t\t}\n-\t\t\t});\n-\t}\n-\n-\tpublic void deleteQuery(Dataset dataset, ManagedExecution query) {\n-\t\tMasterMetaStorage storage = namespaces.getMetaStorage();\n-\t\tstorage.removeExecution(query.getId());\n-\t}\n-\n-\tpublic void shareQuery(User user, ManagedQuery query, boolean shared) throws JSONException {\n-\t\tupdateQueryVersions(user, query, Ability.SHARE, q-> {\n-\t\t\tConqueryPermission queryPermission = QueryPermission.onInstance(AbilitySets.QUERY_EXECUTOR, q.getId());\n-\t\t\tList<Group> userGroups = namespaces.getMetaStorage().getAllGroups().stream().filter(group -> group.containsMember(user)).collect(Collectors.toList());\n-\t\t\tuserGroups.forEach(group -> {\n-\t\t\t\ttry {\n-\t\t\t\t\tif (shared) {\n-\t\t\t\t\t\taddPermission(group, queryPermission, namespaces.getMetaStorage());\n-\t\t\t\t\t\tlog.trace(\"User {} shares query {}. Adding permission {} to group {}.\", user, q.getId(), queryPermission, group);\n-\t\t\t\t\t}\n-\t\t\t\t\telse {\n-\t\t\t\t\t\tremovePermission(group, queryPermission, namespaces.getMetaStorage());\n-\t\t\t\t\t\tlog.trace(\"User {} shares query {}. Removing permission {} from group {}.\",user, q.getId(), queryPermission, group);\n-\t\t\t\t\t}\n-\t\t\t\t\tq.setShared(shared);\n-\t\t\t\t\tnamespaces.getMetaStorage().updateExecution(q);\n-\t\t\t\t} catch (JSONException e) {\n-\t\t\t\t\tlog.error(\"Failed to set shared status for query \"+query, e);\n-\t\t\t\t}\n-\t\t\t});\n-\t\t});\n-\t\t\n-\t}\n-\n-\tpublic void updateQueryLabel(User user, ManagedQuery query, String label) throws JSONException {\n-\t\tupdateQueryVersions(user, query, Ability.LABEL, q->q.setLabel(label));\n-\t}\n-\n-\tpublic void tagQuery(User user, ManagedQuery query, String[] newTags) throws JSONException {\n-\t\tupdateQueryVersions(user, query, Ability.TAG, q->q.setTags(newTags));\n-\t}\n-\t\n-\tpublic void updateQueryVersions(User user, ManagedQuery query, Ability requiredAbility, Consumer<ManagedQuery> updater) throws JSONException {\n-\t\tauthorize(user, query, requiredAbility);\n-\t\t\n-\t\tfor(Namespace ns : namespaces.getNamespaces()) {\n-\t\t\t\n-\t\t\tif(user.isPermitted(DatasetPermission.onInstance(Ability.READ.asSet(), ns.getDataset().getId()))) {\n-\t\t\t\tManagedExecutionId id = new ManagedExecutionId(ns.getDataset().getId(), query.getQueryId());\n-\t\t\t\tManagedQuery exec = (ManagedQuery)namespaces.getMetaStorage().getExecution(id);\n-\t\t\t\tif(exec != null) {\n-\t\t\t\t\tif(user.isPermitted(QueryPermission.onInstance(requiredAbility.asSet(), id))) {\n-\t\t\t\t\t\tupdater.accept(exec);\n-\t\t\t\t\t\tnamespaces.getMetaStorage().updateExecution(exec);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tpublic ExecutionStatus getQueryWithSource(Dataset dataset, ManagedExecutionId queryId) {\n-\t\tManagedExecution query = namespaces.getMetaStorage().getExecution(queryId);\n-\t\tif(query == null) {\n-\t\t\treturn null;\n-\t\t}\n-\t\treturn query.buildStatus();\n-\t}\n+    @Getter\n+    private final Namespaces namespaces;\n+\n+    public StoredQueriesProcessor(Namespaces namespaces) {\n+        this.namespaces = namespaces;\n+    }\n+\n+    public Stream<ExecutionStatus> getAllQueries(Dataset dataset, HttpServletRequest req) {\n+        Collection<ManagedExecution> allQueries = namespaces.getMetaStorage().getAllExecutions();\n+\n+        return allQueries\n+            .stream()\n+            //to exclude subtypes from somewhere else\n+            .filter(q -> (q instanceof ManagedQuery) && ((ManagedQuery) q).getQuery().getClass().equals(ConceptQuery.class))\n+            .filter(q -> q.getDataset().equals(dataset.getId()))\n+            .flatMap(mq -> {\n+                try {\n+                    return Stream.of(mq.buildStatus(URLBuilder.fromRequest(req)));\n+                } catch (Exception e) {\n+                    log.warn(\"Could not build status of \" + mq, e);\n+                    return Stream.empty();\n+                }\n+            });\n+    }\n+\n+    public void deleteQuery(Dataset dataset, ManagedExecution query) {\n+        MasterMetaStorage storage = namespaces.getMetaStorage();\n+        storage.removeExecution(query.getId());\n+    }\n+\n+    public void shareQuery(User user, ManagedQuery query, boolean shared) throws JSONException {\n+        updateQueryVersions(user, query, Ability.SHARE, q -> {\n+            ConqueryPermission queryPermission = QueryPermission.onInstance(AbilitySets.QUERY_EXECUTOR, q.getId());\n+            List<Group> userGroups = namespaces.getMetaStorage().getAllGroups().stream().filter(group -> group.containsMember(user)).collect(Collectors.toList());\n+            userGroups.forEach(group -> {\n+                try {\n+                    if (shared) {\n+                        addPermission(group, queryPermission, namespaces.getMetaStorage());\n+                        log.trace(\"User {} shares query {}. Adding permission {} to group {}.\", user, q.getId(), queryPermission, group);\n+                    } else {\n+                        removePermission(group, queryPermission, namespaces.getMetaStorage());\n+                        log.trace(\"User {} shares query {}. Removing permission {} from group {}.\", user, q.getId(), queryPermission, group);\n+                    }\n+                    q.setShared(shared);\n+                    namespaces.getMetaStorage().updateExecution(q);\n+                } catch (JSONException e) {\n+                    log.error(\"Failed to set shared status for query \" + query, e);\n+                }\n+            });\n+        });\n+\n+    }\n+\n+    public void updateQueryLabel(User user, ManagedQuery query, String label) throws JSONException {\n+        updateQueryVersions(user, query, Ability.LABEL, q -> q.setLabel(label));\n+    }\n+\n+    public void tagQuery(User user, ManagedQuery query, String[] newTags) throws JSONException {\n+        updateQueryVersions(user, query, Ability.TAG, q -> q.setTags(newTags));\n+    }\n+\n+    public void updateQueryVersions(User user, ManagedQuery query, Ability requiredAbility, Consumer<ManagedQuery> updater) throws JSONException {\n+        authorize(user, query, requiredAbility);\n+\n+        for (Namespace ns : namespaces.getNamespaces()) {\n+\n+            if (user.isPermitted(DatasetPermission.onInstance(Ability.READ.asSet(), ns.getDataset().getId()))) {\n+                ManagedExecutionId id = new ManagedExecutionId(ns.getDataset().getId(), query.getQueryId());\n+                ManagedQuery exec = (ManagedQuery) namespaces.getMetaStorage().getExecution(id);\n+                if (exec != null) {\n+                    if (user.isPermitted(QueryPermission.onInstance(requiredAbility.asSet(), id))) {\n+                        updater.accept(exec);\n+                        namespaces.getMetaStorage().updateExecution(exec);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    public ExecutionStatus getQueryWithSource(Dataset dataset, ManagedExecutionId queryId) {\n+        ManagedExecution query = namespaces.getMetaStorage().getExecution(queryId);\n+        if (query == null) {\n+            return null;\n+        }\n+        return query.buildStatus();\n+    }\n \n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "86",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 12, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/516/StoredQueriesProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/516/StoredQueriesProcessor.java\nindex 19ebe0d001d..72bf1dcc805 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/516/StoredQueriesProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/516/StoredQueriesProcessor.java\n@@ -82,7 +82,8 @@ public class StoredQueriesProcessor {\n \t\t\t\t\t}\n \t\t\t\t\tq.setShared(shared);\n \t\t\t\t\tnamespaces.getMetaStorage().updateExecution(q);\n-\t\t\t\t} catch (JSONException e) {\n+\t\t\t\t}\n+catch (JSONException e) {\n \t\t\t\t\tlog.error(\"Failed to set shared status for query \"+query, e);\n \t\t\t\t}\n \t\t\t});\n@@ -90,7 +91,7 @@ public class StoredQueriesProcessor {\n \t\t\n \t}\n \n-\tpublic void updateQueryLabel(User user, ManagedQuery query, String label) throws JSONException {\n+\t\t\tpublic void updateQueryLabel(User user, ManagedQuery query, String label) throws JSONException {\n \t\tupdateQueryVersions(user, query, Ability.LABEL, q->q.setLabel(label));\n \t}\n \n@@ -102,9 +103,8 @@ public class StoredQueriesProcessor {\n \t\tauthorize(user, query, requiredAbility);\n \t\t\n \t\tfor(Namespace ns : namespaces.getNamespaces()) {\n-\t\t\t\n-\t\t\tif(user.isPermitted(DatasetPermission.onInstance(Ability.READ.asSet(), ns.getDataset().getId()))) {\n-\t\t\t\tManagedExecutionId id = new ManagedExecutionId(ns.getDataset().getId(), query.getQueryId());\n+\tif(user.isPermitted(DatasetPermission.onInstance(Ability.READ.asSet(), ns.getDataset().getId()))) {\n+\tManagedExecutionId id = new ManagedExecutionId(ns.getDataset().getId(), query.getQueryId());\n \t\t\t\tManagedQuery exec = (ManagedQuery)namespaces.getMetaStorage().getExecution(id);\n \t\t\t\tif(exec != null) {\n \t\t\t\t\tif(user.isPermitted(QueryPermission.onInstance(requiredAbility.asSet(), id))) {\n@@ -124,4 +124,4 @@ public class StoredQueriesProcessor {\n \t\treturn query.buildStatus();\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "85",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "85",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
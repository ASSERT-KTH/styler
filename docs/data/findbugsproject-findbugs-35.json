{
    "project_name": "findbugsproject-findbugs",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "11",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\npublic class UseOfFooAnnotation {\n\t@Documented\n\t@TypeQualifier\n\t@Retention(RetentionPolicy.RUNTIME)\n\tpublic @interface Foo {\t",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/35/UseOfFooAnnotation.java\nindex 15cd35e1c47..41e48b2f403 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/35/UseOfFooAnnotation.java\n@@ -8,7 +8,7 @@ import javax.annotation.meta.TypeQualifier;\n import javax.annotation.meta.When;\n \n public class UseOfFooAnnotation {\n-\t@Documented\n+@Documented\n \t@TypeQualifier\n \t@Retention(RetentionPolicy.RUNTIME)\n \tpublic @interface Foo {\t\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/35/UseOfFooAnnotation.java\nindex 15cd35e1c47..6cc54cb2b19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/35/UseOfFooAnnotation.java\n@@ -8,30 +8,34 @@ import javax.annotation.meta.TypeQualifier;\n import javax.annotation.meta.When;\n \n public class UseOfFooAnnotation {\n-\t@Documented\n-\t@TypeQualifier\n-\t@Retention(RetentionPolicy.RUNTIME)\n-\tpublic @interface Foo {\t\n-\t\tWhen when() default When.ALWAYS;\n-\t}\n-\t\n-\tpublic static final @Foo int FOO1 = 1;\n-\tpublic static final @Foo int FOO2 = 2;\n-\t\n-\tpublic static void main(String args[]) {\n-\t\tint x1 = f(1); // error\n-\t\tint x2 = f(FOO1); // OK\n-\t\tint x3 = f2();\n-\t\tSystem.out.println(x1+x2+x3);\n-\t\t\n-\t}\n-\tpublic static int f(@Foo int y) { \n-\t\treturn y;\n-\t}\n-\n-\tpublic static @Foo int f2() {\n-\t\treturn 1; // error\n-\t}\n-\t\n+    @Documented\n+    @TypeQualifier\n+    @Retention(RetentionPolicy.RUNTIME)\n+    public @interface Foo {\n+        When when() default When.ALWAYS;\n+    }\n+\n+    public static final @Foo\n+    int FOO1 = 1;\n+    public static final @Foo\n+    int FOO2 = 2;\n+\n+    public static void main(String args[]) {\n+        int x1 = f(1); // error\n+        int x2 = f(FOO1); // OK\n+        int x3 = f2();\n+        System.out.println(x1 + x2 + x3);\n+\n+    }\n+\n+    public static int f(@Foo int y) {\n+        return y;\n+    }\n+\n+    public static @Foo\n+    int f2() {\n+        return 1; // error\n+    }\n+\n \n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/35/UseOfFooAnnotation.java\nindex 15cd35e1c47..cdf39392a65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/35/UseOfFooAnnotation.java\n@@ -3,35 +3,36 @@ package customQualifiers;\n import java.lang.annotation.Documented;\n import java.lang.annotation.Retention;\n import java.lang.annotation.RetentionPolicy;\n-\n import javax.annotation.meta.TypeQualifier;\n import javax.annotation.meta.When;\n \n public class UseOfFooAnnotation {\n-\t@Documented\n-\t@TypeQualifier\n-\t@Retention(RetentionPolicy.RUNTIME)\n-\tpublic @interface Foo {\t\n-\t\tWhen when() default When.ALWAYS;\n-\t}\n-\t\n-\tpublic static final @Foo int FOO1 = 1;\n-\tpublic static final @Foo int FOO2 = 2;\n-\t\n-\tpublic static void main(String args[]) {\n-\t\tint x1 = f(1); // error\n-\t\tint x2 = f(FOO1); // OK\n-\t\tint x3 = f2();\n-\t\tSystem.out.println(x1+x2+x3);\n-\t\t\n-\t}\n-\tpublic static int f(@Foo int y) { \n-\t\treturn y;\n-\t}\n+    @Documented\n+    @TypeQualifier\n+    @Retention(RetentionPolicy.RUNTIME)\n+    public @interface Foo {\n+        When when() default When.ALWAYS;\n+    }\n+\n+    public static final @Foo\n+    int FOO1 = 1;\n+\n+    public static final @Foo\n+    int FOO2 = 2;\n+\n+    public static void main(String args[]) {\n+        int x1 = f(1); // error\n+        int x2 = f(FOO1); // OK\n+        int x3 = f2();\n+        System.out.println(x1 + x2 + x3);\n+    }\n \n-\tpublic static @Foo int f2() {\n-\t\treturn 1; // error\n-\t}\n-\t\n+    public static int f(@Foo int y) {\n+        return y;\n+    }\n \n-}\n+    public static @Foo\n+    int f2() {\n+    return 1; // error\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/35/UseOfFooAnnotation.java\nindex 15cd35e1c47..41e48b2f403 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/35/UseOfFooAnnotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/35/UseOfFooAnnotation.java\n@@ -8,7 +8,7 @@ import javax.annotation.meta.TypeQualifier;\n import javax.annotation.meta.When;\n \n public class UseOfFooAnnotation {\n-\t@Documented\n+@Documented\n \t@TypeQualifier\n \t@Retention(RetentionPolicy.RUNTIME)\n \tpublic @interface Foo {\t\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
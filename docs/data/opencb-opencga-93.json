{
    "project_name": "opencb-opencga",
    "error_id": "93",
    "information": {
        "errors": [
            {
                "line": "63",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 141).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                new Variable(\"name\", \"\", \"\", Variable.VariableType.STRING, null, true, false, null, null, 0, null, null, null, null),\n                new Variable(\"age\", \"\", \"\", Variable.VariableType.INTEGER, null, true, false, null, null, 0, null, null, null, null),\n                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null, 0, null, null, null, null)),\n                Collections.singletonList(VariableSet.AnnotableDataModels.SAMPLE), sessionId);\n\n        catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "63",
                    "column": "113",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "64",
                    "column": "16",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "64",
                    "column": "18",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/93/VariantImportTest.java\nindex 454662f02d9..3ffe9b1eee5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/93/VariantImportTest.java\n@@ -60,7 +60,8 @@ public class VariantImportTest extends AbstractVariantOperationManagerTest {\n         catalogManager.getStudyManager().createVariableSet(studyFqn, \"vs1\", \"vs1\", false, false, \"\", null, Arrays.asList(\n                 new Variable(\"name\", \"\", \"\", Variable.VariableType.STRING, null, true, false, null, null, 0, null, null, null, null),\n                 new Variable(\"age\", \"\", \"\", Variable.VariableType.INTEGER, null, true, false, null, null, 0, null, null, null, null),\n-                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null, 0, null, null, null, null)),\n+                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null,0\n+                ,null, null, null, null)),\n                 Collections.singletonList(VariableSet.AnnotableDataModels.SAMPLE), sessionId);\n \n         catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/93/VariantImportTest.java\nindex 454662f02d9..ea65afe673f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/93/VariantImportTest.java\n@@ -47,63 +47,63 @@ import static org.opencb.opencga.storage.core.variant.io.VariantWriterFactory.Va\n  */\n public class VariantImportTest extends AbstractVariantOperationManagerTest {\n \n-    @Override\n-    protected Aggregation getAggregation() {\n-        return Aggregation.NONE;\n-    }\n+  @Override\n+  protected Aggregation getAggregation() {\n+    return Aggregation.NONE;\n+  }\n \n-    @Before\n-    public void setUp() throws Exception {\n+  @Before\n+  public void setUp() throws Exception {\n \n-        indexFile(getSmallFile(), new QueryOptions(VariantStorageOptions.STATS_CALCULATE.key(), true), outputId);\n+    indexFile(getSmallFile(), new QueryOptions(VariantStorageOptions.STATS_CALCULATE.key(), true), outputId);\n \n-        catalogManager.getStudyManager().createVariableSet(studyFqn, \"vs1\", \"vs1\", false, false, \"\", null, Arrays.asList(\n-                new Variable(\"name\", \"\", \"\", Variable.VariableType.STRING, null, true, false, null, null, 0, null, null, null, null),\n-                new Variable(\"age\", \"\", \"\", Variable.VariableType.INTEGER, null, true, false, null, null, 0, null, null, null, null),\n-                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null, 0, null, null, null, null)),\n-                Collections.singletonList(VariableSet.AnnotableDataModels.SAMPLE), sessionId);\n+    catalogManager.getStudyManager().createVariableSet(studyFqn, \"vs1\", \"vs1\", false, false, \"\", null, Arrays.asList(\n+        new Variable(\"name\", \"\", \"\", Variable.VariableType.STRING, null, true, false, null, null, 0, null, null, null, null),\n+        new Variable(\"age\", \"\", \"\", Variable.VariableType.INTEGER, null, true, false, null, null, 0, null, null, null, null),\n+        new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null, 0, null, null, null, null)),\n+        Collections.singletonList(VariableSet.AnnotableDataModels.SAMPLE), sessionId);\n \n-        catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()\n-                .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as1\", \"vs1\",\n-                                new ObjectMap(\"name\", \"NA19600\").append(\"age\", 30)))), QueryOptions.empty(), sessionId);\n-        catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n-                .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as1\", \"vs1\",\n-                                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"unknown\")))),\n-                QueryOptions.empty(), sessionId);\n-        catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n-                .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as2\", \"vs1\",\n-                                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"asdf\")))),\n-                QueryOptions.empty(), sessionId);\n-    }\n+    catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()\n+        .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as1\", \"vs1\",\n+            new ObjectMap(\"name\", \"NA19600\").append(\"age\", 30)))), QueryOptions.empty(), sessionId);\n+    catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n+            .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as1\", \"vs1\",\n+                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"unknown\")))),\n+        QueryOptions.empty(), sessionId);\n+    catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n+            .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as2\", \"vs1\",\n+                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"asdf\")))),\n+        QueryOptions.empty(), sessionId);\n+  }\n \n-    @Test\n-    public void testExportImport() throws Exception {\n+  @Test\n+  public void testExportImport() throws Exception {\n \n-        String export = Paths.get(opencga.createTmpOutdir(studyId, \"_EXPORT_\", sessionId)).resolve(\"export.json.gz\").toString();\n+    String export = Paths.get(opencga.createTmpOutdir(studyId, \"_EXPORT_\", sessionId)).resolve(\"export.json.gz\").toString();\n \n-        variantManager.exportData(export, VariantOutputFormat.JSON_GZ, studyId, sessionId);\n+    variantManager.exportData(export, VariantOutputFormat.JSON_GZ, studyId, sessionId);\n \n-        DummyVariantStorageMetadataDBAdaptorFactory.clear();\n+    DummyVariantStorageMetadataDBAdaptorFactory.clear();\n \n-        variantManager.importData(URI.create(export), studyId2, sessionId);\n+    variantManager.importData(URI.create(export), studyId2, sessionId);\n \n-    }\n+  }\n \n-    @Test\n-    public void testExportSomeSamplesImport() throws Exception {\n+  @Test\n+  public void testExportSomeSamplesImport() throws Exception {\n \n-        String export = Paths.get(opencga.createTmpOutdir(studyId, \"_EXPORT_\", sessionId)).resolve(\"export.avro\").toString();\n+    String export = Paths.get(opencga.createTmpOutdir(studyId, \"_EXPORT_\", sessionId)).resolve(\"export.avro\").toString();\n \n-        List<Sample> samples = catalogManager.getSampleManager().search(studyId, new Query(), new QueryOptions(), sessionId).getResults();\n-        List<String> someSamples = samples.stream().limit(samples.size() / 2).map(Sample::getId).collect(Collectors.toList());\n-        Query query = new Query(VariantQueryParam.INCLUDE_STUDY.key(), studyId)\n-                .append(VariantQueryParam.INCLUDE_SAMPLE.key(), someSamples);\n-        QueryOptions queryOptions = new QueryOptions();\n-        variantManager.exportData(export, VariantOutputFormat.AVRO, null, query, queryOptions, sessionId);\n+    List<Sample> samples = catalogManager.getSampleManager().search(studyId, new Query(), new QueryOptions(), sessionId).getResults();\n+    List<String> someSamples = samples.stream().limit(samples.size() / 2).map(Sample::getId).collect(Collectors.toList());\n+    Query query = new Query(VariantQueryParam.INCLUDE_STUDY.key(), studyId)\n+        .append(VariantQueryParam.INCLUDE_SAMPLE.key(), someSamples);\n+    QueryOptions queryOptions = new QueryOptions();\n+    variantManager.exportData(export, VariantOutputFormat.AVRO, null, query, queryOptions, sessionId);\n \n-        DummyVariantStorageMetadataDBAdaptorFactory.clear();\n+    DummyVariantStorageMetadataDBAdaptorFactory.clear();\n \n-        variantManager.importData(URI.create(export), studyId2, sessionId);\n+    variantManager.importData(URI.create(export), studyId2, sessionId);\n \n-    }\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/93/VariantImportTest.java\nindex 454662f02d9..2ccac066fcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/93/VariantImportTest.java\n@@ -66,14 +66,12 @@ public class VariantImportTest extends AbstractVariantOperationManagerTest {\n         catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()\n                 .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as1\", \"vs1\",\n                                 new ObjectMap(\"name\", \"NA19600\").append(\"age\", 30)))), QueryOptions.empty(), sessionId);\n-        catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n+catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n                 .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as1\", \"vs1\",\n-                                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"unknown\")))),\n-                QueryOptions.empty(), sessionId);\n+                                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"unknown\")))), QueryOptions.empty(), sessionId);\n         catalogManager.getSampleManager().update(studyId, \"NA19660\", new SampleUpdateParams()\n                 .setAnnotationSets(Collections.singletonList(new AnnotationSet(\"as2\", \"vs1\",\n-                                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"asdf\")))),\n-                QueryOptions.empty(), sessionId);\n+                                new ObjectMap(\"name\", \"NA19660\").append(\"age\", 35).append(\"other\", \"asdf\")))), QueryOptions.empty(), sessionId);\n     }\n \n     @Test\n@@ -106,4 +104,4 @@ public class VariantImportTest extends AbstractVariantOperationManagerTest {\n         variantManager.importData(URI.create(export), studyId2, sessionId);\n \n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "column": "113",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "64",
                    "column": "16",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "64",
                    "column": "18",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/93/VariantImportTest.java\nindex 454662f02d9..3ffe9b1eee5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/93/VariantImportTest.java\n@@ -60,7 +60,8 @@ public class VariantImportTest extends AbstractVariantOperationManagerTest {\n         catalogManager.getStudyManager().createVariableSet(studyFqn, \"vs1\", \"vs1\", false, false, \"\", null, Arrays.asList(\n                 new Variable(\"name\", \"\", \"\", Variable.VariableType.STRING, null, true, false, null, null, 0, null, null, null, null),\n                 new Variable(\"age\", \"\", \"\", Variable.VariableType.INTEGER, null, true, false, null, null, 0, null, null, null, null),\n-                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null, 0, null, null, null, null)),\n+                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null,0\n+                ,null, null, null, null)),\n                 Collections.singletonList(VariableSet.AnnotableDataModels.SAMPLE), sessionId);\n \n         catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "63",
                    "column": "57",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "63",
                    "column": "71",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "63",
                    "column": "90",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "64",
                    "column": "16",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "64",
                    "column": "18",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/93/VariantImportTest.java\nindex 454662f02d9..648f8415a31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/93/VariantImportTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/93/VariantImportTest.java\n@@ -60,7 +60,8 @@ public class VariantImportTest extends AbstractVariantOperationManagerTest {\n         catalogManager.getStudyManager().createVariableSet(studyFqn, \"vs1\", \"vs1\", false, false, \"\", null, Arrays.asList(\n                 new Variable(\"name\", \"\", \"\", Variable.VariableType.STRING, null, true, false, null, null, 0, null, null, null, null),\n                 new Variable(\"age\", \"\", \"\", Variable.VariableType.INTEGER, null, true, false, null, null, 0, null, null, null, null),\n-                new Variable(\"other\", \"\", \"\", Variable.VariableType.STRING, \"unknown\", false, false, null, null, 0, null, null, null, null)),\n+                new Variable (\"other\", \"\", \"\", Variable. VariableType. STRING, \"unknown\",false\n+                ,false, null, null, 0, null, null, null, null)),\n                 Collections.singletonList(VariableSet.AnnotableDataModels.SAMPLE), sessionId);\n \n         catalogManager.getSampleManager().update(studyId, \"NA19600\", new SampleUpdateParams()\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
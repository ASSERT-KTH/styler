{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3178",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3178/FileRepositorySerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3178/FileRepositorySerializer.java\nindex 7718e8b80c5..6de69d48a7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3178/FileRepositorySerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3178/FileRepositorySerializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import java.io.BufferedReader;\n@@ -40,102 +41,101 @@ import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;\n \n public abstract class FileRepositorySerializer<S>\n {\n-    private Random random = new SecureRandom();\n+  private Random random = new SecureRandom();\n \n-    public static void writeToFile( FileSystemAbstraction fs, File file, byte[] bytes ) throws IOException\n+  public static void writeToFile(FileSystemAbstraction fs, File file, byte[] bytes) throws IOException\n+  {\n+    try (OutputStream o = fs.openAsOutputStream(file, false))\n     {\n-        try ( OutputStream o = fs.openAsOutputStream( file, false ) )\n-        {\n-            o.write( bytes );\n-        }\n+      o.write(bytes);\n     }\n+  }\n \n-    public static List<String> readFromFile( FileSystemAbstraction fs, File file ) throws IOException\n-    {\n-        ArrayList<String> lines = new ArrayList<>();\n-\n-        try ( BufferedReader r = new BufferedReader( fs.openAsReader( file, Charset.forName( \"UTF-8\" ) ) ) )\n-        {\n-            while ( true )\n-            {\n-                String line = r.readLine();\n-                if ( line == null )\n-                {\n-                    break;\n-                }\n-                lines.add( line );\n-            }\n-        }\n-\n-        return lines;\n-    }\n+  public static List<String> readFromFile(FileSystemAbstraction fs, File file) throws IOException\n+  {\n+    ArrayList<String> lines = new ArrayList<>();\n \n-    public void saveRecordsToFile( FileSystemAbstraction fileSystem, File recordsFile, Collection<S> records ) throws\n-            IOException\n+    try (BufferedReader r = new BufferedReader(fs.openAsReader(file, Charset.forName(\"UTF-8\"))))\n     {\n-        File tempFile = getTempFile( fileSystem, recordsFile );\n-\n-        try\n-        {\n-            writeToFile( fileSystem, tempFile, serialize( records ) );\n-            fileSystem.renameFile( tempFile, recordsFile, ATOMIC_MOVE, REPLACE_EXISTING );\n-        }\n-        catch ( Throwable e )\n+      while (true)\n+      {\n+        String line = r.readLine();\n+        if (line == null)\n         {\n-            fileSystem.deleteFile( tempFile );\n-            throw e;\n+          break;\n         }\n+        lines.add(line);\n+      }\n     }\n \n-    protected File getTempFile( FileSystemAbstraction fileSystem, File recordsFile ) throws IOException\n-    {\n-        File directory = recordsFile.getParentFile();\n-        if ( !fileSystem.fileExists( directory ) )\n-        {\n-            fileSystem.mkdirs( directory );\n-        }\n+    return lines;\n+  }\n \n-        long n = random.nextLong();\n-        n = (n == Long.MIN_VALUE) ? 0 : Math.abs( n );\n-        return new File( directory, Long.toString( n ) + \"_\" + recordsFile.getName() + \".tmp\" );\n-    }\n+  public void saveRecordsToFile(FileSystemAbstraction fileSystem, File recordsFile, Collection<S> records) throws\n+      IOException\n+  {\n+    File tempFile = getTempFile(fileSystem, recordsFile);\n \n-    public List<S> loadRecordsFromFile( FileSystemAbstraction fileSystem, File recordsFile ) throws IOException, FormatException\n+    try\n+    {\n+      writeToFile(fileSystem, tempFile, serialize(records));\n+      fileSystem.renameFile(tempFile, recordsFile, ATOMIC_MOVE, REPLACE_EXISTING);\n+    } catch (Throwable e)\n     {\n-        return deserializeRecords( readFromFile( fileSystem, recordsFile ) );\n+      fileSystem.deleteFile(tempFile);\n+      throw e;\n     }\n+  }\n \n-    public byte[] serialize( Collection<S> records )\n+  protected File getTempFile(FileSystemAbstraction fileSystem, File recordsFile) throws IOException\n+  {\n+    File directory = recordsFile.getParentFile();\n+    if (!fileSystem.fileExists(directory))\n     {\n-        StringBuilder sb = new StringBuilder();\n-        for ( S record : records )\n-        {\n-            sb.append( serialize( record ) ).append( \"\\n\" );\n-        }\n-        return UTF8.encode( sb.toString() );\n+      fileSystem.mkdirs(directory);\n     }\n \n-    public List<S> deserializeRecords( byte[] bytes ) throws FormatException\n+    long n = random.nextLong();\n+    n = (n == Long.MIN_VALUE) ? 0 : Math.abs(n);\n+    return new File(directory, Long.toString(n) + \"_\" + recordsFile.getName() + \".tmp\");\n+  }\n+\n+  public List<S> loadRecordsFromFile(FileSystemAbstraction fileSystem, File recordsFile) throws IOException, FormatException\n+  {\n+    return deserializeRecords(readFromFile(fileSystem, recordsFile));\n+  }\n+\n+  public byte[] serialize(Collection<S> records)\n+  {\n+    StringBuilder sb = new StringBuilder();\n+    for (S record : records)\n     {\n-        return deserializeRecords( Arrays.asList( UTF8.decode( bytes ).split( \"\\n\" ) ) );\n+      sb.append(serialize(record)).append(\"\\n\");\n     }\n-\n-    public List<S> deserializeRecords( List<String> lines ) throws FormatException\n+    return UTF8.encode(sb.toString());\n+  }\n+\n+  public List<S> deserializeRecords(byte[] bytes) throws FormatException\n+  {\n+    return deserializeRecords(Arrays.asList(UTF8.decode(bytes).split(\"\\n\")));\n+  }\n+\n+  public List<S> deserializeRecords(List<String> lines) throws FormatException\n+  {\n+    List<S> out = new ArrayList<>();\n+    int lineNumber = 1;\n+    for (String line : lines)\n     {\n-        List<S> out = new ArrayList<>();\n-        int lineNumber = 1;\n-        for ( String line : lines )\n-        {\n-            if ( line.trim().length() > 0 )\n-            {\n-                out.add( deserializeRecord( line, lineNumber ) );\n-            }\n-            lineNumber++;\n-        }\n-        return out;\n+      if (line.trim().length() > 0)\n+      {\n+        out.add(deserializeRecord(line, lineNumber));\n+      }\n+      lineNumber++;\n     }\n+    return out;\n+  }\n \n-    protected abstract String serialize( S record );\n+  protected abstract String serialize(S record);\n \n-    protected abstract S deserializeRecord( String line, int lineNumber ) throws FormatException;\n+  protected abstract S deserializeRecord(String line, int lineNumber) throws FormatException;\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3178/FileRepositorySerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3178/FileRepositorySerializer.java\nindex 7718e8b80c5..4500d927968 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3178/FileRepositorySerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3178/FileRepositorySerializer.java\n@@ -70,9 +70,8 @@ public abstract class FileRepositorySerializer<S>\n         return lines;\n     }\n \n-    public void saveRecordsToFile( FileSystemAbstraction fileSystem, File recordsFile, Collection<S> records ) throws\n-            IOException\n-    {\n+    public void saveRecordsToFile( FileSystemAbstraction fileSystem, File recordsFile, Collection<S> records ) throws IOException\n+{\n         File tempFile = getTempFile( fileSystem, recordsFile );\n \n         try\n@@ -112,7 +111,8 @@ public abstract class FileRepositorySerializer<S>\n         {\n             sb.append( serialize( record ) ).append( \"\\n\" );\n         }\n-        return UTF8.encode( sb.toString() );\n+\n+return UTF8.encode( sb.toString() );\n     }\n \n     public List<S> deserializeRecords( byte[] bytes ) throws FormatException\n@@ -132,10 +132,11 @@ public abstract class FileRepositorySerializer<S>\n             }\n             lineNumber++;\n         }\n-        return out;\n+\n+return out;\n     }\n \n     protected abstract String serialize( S record );\n \n     protected abstract S deserializeRecord( String line, int lineNumber ) throws FormatException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
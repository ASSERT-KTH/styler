{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1905",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "157",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "248",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "261",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "281",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "287",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "290",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "293",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "482",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "518",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "542",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "620",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "668",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "677",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "720",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "751",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "775",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "789",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "789",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "792",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "842",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "842",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "845",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "845",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "847",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "847",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "850",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "876",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "876",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "967",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "967",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "973",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "973",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "979",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "979",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "981",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "981",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "985",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "985",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "990",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "990",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "990",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "992",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "992",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "997",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "997",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1023",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1025",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1025",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1041",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1041",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1043",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1046",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1054",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1054",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1063",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1063",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1066",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1066",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1068",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1068",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1070",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1070",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1072",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1072",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1075",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1075",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1079",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1096",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1098",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1098",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1109",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1109",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1111",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1117",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1117",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1120",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1128",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1128",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1144",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1144",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1154",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1154",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1164",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1164",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1186",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1186",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1191",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1191",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1905/GraphDatabaseFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1905/GraphDatabaseFacade.java\nindex 2ebc0ee38b3..694688d0021 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1905/GraphDatabaseFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1905/GraphDatabaseFacade.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.factory;\n \n import java.io.File;\n@@ -130,1072 +131,1063 @@ import static org.neo4j.kernel.impl.api.explicitindex.InternalAutoIndexing.RELAT\n  */\n public class GraphDatabaseFacade implements GraphDatabaseAPI, EmbeddedProxySPI\n {\n-    private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n-\n-    private Schema schema;\n-    private Supplier<IndexManager> indexManager;\n-    private ThreadToStatementContextBridge statementContext;\n-    protected EditionModule editionModule;\n-    private SPI spi;\n-    private TransactionalContextFactory contextFactory;\n-    private Config config;\n-    private RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n-\n+  private static final PropertyContainerLocker locker = new PropertyContainerLocker();\n+\n+  private Schema schema;\n+  private Supplier<IndexManager> indexManager;\n+  private ThreadToStatementContextBridge statementContext;\n+  protected EditionModule editionModule;\n+  private SPI spi;\n+  private TransactionalContextFactory contextFactory;\n+  private Config config;\n+  private RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+\n+  /**\n+   * This is what you need to implemenent to get your very own {@link GraphDatabaseFacade}. This SPI exists as a thin\n+   * layer to make it easy to provide\n+   * alternate {@link org.neo4j.graphdb.GraphDatabaseService} instances without having to re-implement this whole API\n+   * implementation.\n+   */\n+  public interface SPI\n+  {\n     /**\n-     * This is what you need to implemenent to get your very own {@link GraphDatabaseFacade}. This SPI exists as a thin\n-     * layer to make it easy to provide\n-     * alternate {@link org.neo4j.graphdb.GraphDatabaseService} instances without having to re-implement this whole API\n-     * implementation.\n+     * Check if database is available, waiting up to {@code timeout} if it isn't. If the timeout expires before\n+     * database available, this returns false\n      */\n-    public interface SPI\n-    {\n-        /**\n-         * Check if database is available, waiting up to {@code timeout} if it isn't. If the timeout expires before\n-         * database available, this returns false\n-         */\n-        boolean databaseIsAvailable( long timeout );\n-\n-        DependencyResolver resolver();\n-\n-        StoreId storeId();\n-\n-        File storeDir();\n-\n-        /** Eg. Neo4j Enterprise HA, Neo4j Community Standalone.. */\n-        String name();\n-\n-        void shutdown();\n-\n-        /**\n-         * Begin a new kernel transaction with specified timeout in milliseconds.\n-         *\n-         * @throws org.neo4j.graphdb.TransactionFailureException if unable to begin, or a transaction already exists.\n-         * @see GraphDatabaseAPI#beginTransaction(KernelTransaction.Type, LoginContext)\n-         */\n-        KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout );\n-\n-        /** Execute a cypher statement */\n-        Result executeQuery( String query, Map<String,Object> parameters, TransactionalContext context );\n-\n-        /** Execute a cypher statement */\n-        Result executeQuery( String query, MapValue parameters, TransactionalContext context );\n-\n-        AutoIndexing autoIndexing();\n+    boolean databaseIsAvailable(long timeout);\n \n-        void registerKernelEventHandler( KernelEventHandler handler );\n+    DependencyResolver resolver();\n \n-        void unregisterKernelEventHandler( KernelEventHandler handler );\n+    StoreId storeId();\n \n-        <T> void registerTransactionEventHandler( TransactionEventHandler<T> handler );\n-\n-        <T> void unregisterTransactionEventHandler( TransactionEventHandler<T> handler );\n-\n-        URL validateURLAccess( URL url ) throws URLAccessValidationError;\n-\n-        GraphDatabaseQueryService queryService();\n-\n-        Kernel kernel();\n-    }\n-\n-    public GraphDatabaseFacade()\n-    {\n-    }\n+    File storeDir();\n \n     /**\n-     * Create a new Core API facade, backed by the given SPI and using pre-resolved dependencies\n+     * Eg. Neo4j Enterprise HA, Neo4j Community Standalone..\n      */\n-    public void init( EditionModule editionModule, SPI spi, Guard guard, ThreadToStatementContextBridge txBridge, Config config,\n-            RelationshipTypeTokenHolder relationshipTypeTokenHolder )\n-    {\n-        this.editionModule = editionModule;\n-        this.spi = spi;\n-        this.config = config;\n-        this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n-        this.schema = new SchemaImpl( () -> txBridge.getKernelTransactionBoundToThisThread( true ) );\n-        this.statementContext = txBridge;\n-        this.indexManager = Suppliers.lazySingleton( () ->\n-        {\n-            IndexProviderImpl idxProvider = new IndexProviderImpl( this, () -> txBridge.getKernelTransactionBoundToThisThread( true ) );\n-            AutoIndexerFacade<Node> nodeAutoIndexer = new AutoIndexerFacade<>(\n-                    () -> new ReadOnlyIndexFacade<>( idxProvider.getOrCreateNodeIndex( NODE_AUTO_INDEX, null ) ),\n-                    spi.autoIndexing().nodes() );\n-            RelationshipAutoIndexerFacade relAutoIndexer = new RelationshipAutoIndexerFacade(\n-                    () -> new ReadOnlyRelationshipIndexFacade(\n-                            idxProvider.getOrCreateRelationshipIndex( RELATIONSHIP_AUTO_INDEX, null ) ),\n-                    spi.autoIndexing().relationships() );\n-\n-            return new IndexManagerImpl( () -> txBridge.getKernelTransactionBoundToThisThread( true ), idxProvider,\n-                    nodeAutoIndexer, relAutoIndexer );\n-        } );\n-\n-        this.contextFactory = Neo4jTransactionalContextFactory.create( spi, guard, txBridge, locker );\n-    }\n-\n-    @Override\n-    public Node createNode()\n-    {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            return newNodeProxy( transaction.dataWrite().nodeCreate() );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-    }\n-\n-    @Override\n-    public Long createNodeId()\n-    {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            return transaction.dataWrite().nodeCreate();\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-    }\n-\n-    @Override\n-    public Node createNode( Label... labels )\n-    {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        try ( Statement ignore = transaction.acquireStatement() )\n-        {\n-            Write write = transaction.dataWrite();\n-            long nodeId = write.nodeCreate();\n-            for ( Label label : labels )\n-            {\n-                int labelId = transaction.tokenWrite().labelGetOrCreateForName( label.name() );\n-                try\n-                {\n-                    write.nodeAddLabel( nodeId, labelId );\n-                }\n-                catch ( EntityNotFoundException e )\n-                {\n-                    throw new NotFoundException( \"No node with id \" + nodeId + \" found.\", e );\n-                }\n-            }\n-            return newNodeProxy( nodeId );\n-        }\n-        catch ( ConstraintValidationException e )\n-        {\n-            throw new ConstraintViolationException( \"Unable to add label.\", e );\n-        }\n-        catch ( SchemaKernelException e )\n-        {\n-            throw new IllegalArgumentException( e );\n-        }\n-        catch ( KernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-    }\n-\n-    @Override\n-    public Node getNodeById( long id )\n-    {\n-        if ( id < 0 )\n-        {\n-            throw new NotFoundException( format( \"Node %d not found\", id ),\n-                    new EntityNotFoundException( EntityType.NODE, id ) );\n-        }\n-\n-        KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread( true );\n-        assertTransactionOpen( ktx );\n-        try ( Statement ignore = ktx.acquireStatement() )\n-        {\n-            if ( !ktx.dataRead().nodeExists( id ) )\n-            {\n-                throw new NotFoundException( format( \"Node %d not found\", id ),\n-                        new EntityNotFoundException( EntityType.NODE, id ) );\n-            }\n-            return newNodeProxy( id );\n-        }\n-    }\n-\n-    @Override\n-    public Relationship getRelationshipById( long id )\n-    {\n-        if ( id < 0 )\n-        {\n-            throw new NotFoundException( format( \"Relationship %d not found\", id ),\n-                    new EntityNotFoundException( EntityType.RELATIONSHIP, id ) );\n-        }\n-\n-        KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread( true );\n-        assertTransactionOpen( ktx );\n-        try ( Statement ignore = statementContext.get() )\n-        {\n-            if ( !ktx.dataRead().relationshipExists( id ) )\n-            {\n-                throw new NotFoundException( format( \"Relationship %d not found\", id ),\n-                        new EntityNotFoundException( EntityType.RELATIONSHIP, id ) );\n-            }\n-            return newRelationshipProxy( id );\n-        }\n-    }\n-\n-    @Override\n-    public IndexManager index()\n-    {\n-        return indexManager.get();\n-    }\n-\n-    @Override\n-    public Schema schema()\n-    {\n-        assertTransactionOpen();\n-        return schema;\n-    }\n-\n-    @Override\n-    public boolean isAvailable( long timeoutMillis )\n-    {\n-        return spi.databaseIsAvailable( timeoutMillis );\n-    }\n-\n-    @Override\n-    public void shutdown()\n-    {\n-        spi.shutdown();\n-    }\n-\n-    @Override\n-    public Transaction beginTx()\n-    {\n-        return beginTransaction( KernelTransaction.Type.explicit, AUTH_DISABLED );\n-    }\n-\n-    @Override\n-    public Transaction beginTx( long timeout, TimeUnit unit )\n-    {\n-        return beginTransaction( KernelTransaction.Type.explicit, AUTH_DISABLED, timeout, unit );\n-    }\n+    String name();\n \n-    @Override\n-    public InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext )\n-    {\n-        return beginTransactionInternal( type, loginContext, config.get( transaction_timeout ).toMillis() );\n-    }\n+    void shutdown();\n \n-    @Override\n-    public InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext,\n-            long timeout, TimeUnit unit )\n-    {\n-        return beginTransactionInternal( type, loginContext, unit.toMillis( timeout ) );\n-    }\n+    /**\n+     * Begin a new kernel transaction with specified timeout in milliseconds.\n+     *\n+     * @throws org.neo4j.graphdb.TransactionFailureException if unable to begin, or a transaction already exists.\n+     * @see GraphDatabaseAPI#beginTransaction(KernelTransaction.Type, LoginContext)\n+     */\n+    KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, long timeout);\n \n-    @Override\n-    public Result execute( String query ) throws QueryExecutionException\n-    {\n-        return execute( query, Collections.emptyMap() );\n-    }\n+    /**\n+     * Execute a cypher statement\n+     */\n+    Result executeQuery(String query, Map<String, Object> parameters, TransactionalContext context);\n \n-    @Override\n-    public Result execute( String query, long timeout, TimeUnit unit ) throws QueryExecutionException\n-    {\n-        return execute( query, Collections.emptyMap(), timeout, unit );\n-    }\n+    /**\n+     * Execute a cypher statement\n+     */\n+    Result executeQuery(String query, MapValue parameters, TransactionalContext context);\n \n-    @Override\n-    public Result execute( String query, Map<String,Object> parameters ) throws QueryExecutionException\n-    {\n-        // ensure we have a tx and create a context (the tx is gonna get closed by the Cypher result)\n-        InternalTransaction transaction =\n-                beginTransaction( KernelTransaction.Type.implicit, AUTH_DISABLED );\n+    AutoIndexing autoIndexing();\n \n-        return execute( transaction, query, ValueUtils.asParameterMapValue( parameters ) );\n-    }\n+    void registerKernelEventHandler(KernelEventHandler handler);\n \n-    @Override\n-    public Result execute( String query, Map<String,Object> parameters, long timeout, TimeUnit unit ) throws\n-            QueryExecutionException\n-    {\n-        InternalTransaction transaction =\n-                beginTransaction( KernelTransaction.Type.implicit, AUTH_DISABLED, timeout, unit );\n-        return execute( transaction, query, ValueUtils.asParameterMapValue( parameters ) );\n-    }\n+    void unregisterKernelEventHandler(KernelEventHandler handler);\n \n-    public Result execute( InternalTransaction transaction, String query, MapValue parameters )\n-            throws QueryExecutionException\n-    {\n-        TransactionalContext context =\n-                contextFactory.newContext( ClientConnectionInfo.EMBEDDED_CONNECTION, transaction, query, parameters );\n-        return spi.executeQuery( query, parameters, context );\n-    }\n+    <T> void registerTransactionEventHandler(TransactionEventHandler<T> handler);\n \n-    @Override\n-    public ResourceIterable<Node> getAllNodes()\n-    {\n-        KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread( true );\n-        assertTransactionOpen( ktx );\n-        return () ->\n-        {\n-            Statement statement = ktx.acquireStatement();\n-            NodeCursor cursor = ktx.cursors().allocateNodeCursor();\n-            ktx.dataRead().allNodesScan( cursor );\n-            return new PrefetchingResourceIterator<Node>()\n-            {\n-                @Override\n-                protected Node fetchNextOrNull()\n-                {\n-                    if ( cursor.next() )\n-                    {\n-                        return newNodeProxy( cursor.nodeReference() );\n-                    }\n-                    else\n-                    {\n-                        close();\n-                        return null;\n-                    }\n-                }\n+    <T> void unregisterTransactionEventHandler(TransactionEventHandler<T> handler);\n \n-                @Override\n-                public void close()\n-                {\n-                    cursor.close();\n-                    statement.close();\n-                }\n-            };\n-        };\n-    }\n+    URL validateURLAccess(URL url) throws URLAccessValidationError;\n \n-    @Override\n-    public ResourceIterable<Relationship> getAllRelationships()\n-    {\n-        KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread( true );\n-        assertTransactionOpen( ktx );\n-        return () ->\n-        {\n-            Statement statement = ktx.acquireStatement();\n-            RelationshipScanCursor cursor = ktx.cursors().allocateRelationshipScanCursor();\n-            ktx.dataRead().allRelationshipsScan( cursor );\n-            return new PrefetchingResourceIterator<Relationship>()\n-            {\n-                @Override\n-                protected Relationship fetchNextOrNull()\n-                {\n-                    if ( cursor.next() )\n-                    {\n-                        return newRelationshipProxy(\n-                                cursor.relationshipReference(),\n-                                cursor.sourceNodeReference(),\n-                                cursor.type(),\n-                                cursor.targetNodeReference() );\n-                    }\n-                    else\n-                    {\n-                        close();\n-                        return null;\n-                    }\n-                }\n+    GraphDatabaseQueryService queryService();\n \n-                @Override\n-                public void close()\n-                {\n-                    cursor.close();\n-                    statement.close();\n-                }\n-            };\n-        };\n-    }\n+    Kernel kernel();\n+  }\n \n-    @Override\n-    public ResourceIterable<Label> getAllLabelsInUse()\n-    {\n-        return allInUse( TokenAccess.LABELS );\n-    }\n+  public GraphDatabaseFacade()\n+  {\n+  }\n \n-    @Override\n-    public ResourceIterable<RelationshipType> getAllRelationshipTypesInUse()\n+  /**\n+   * Create a new Core API facade, backed by the given SPI and using pre-resolved dependencies\n+   */\n+  public void init(EditionModule editionModule, SPI spi, Guard guard, ThreadToStatementContextBridge txBridge, Config config,\n+                   RelationshipTypeTokenHolder relationshipTypeTokenHolder)\n+  {\n+    this.editionModule = editionModule;\n+    this.spi = spi;\n+    this.config = config;\n+    this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n+    this.schema = new SchemaImpl(() -> txBridge.getKernelTransactionBoundToThisThread(true));\n+    this.statementContext = txBridge;\n+    this.indexManager = Suppliers.lazySingleton(() ->\n     {\n-        return allInUse( TokenAccess.RELATIONSHIP_TYPES );\n-    }\n-\n-    private <T> ResourceIterable<T> allInUse( final TokenAccess<T> tokens )\n-    {\n-        assertTransactionOpen();\n-        return () -> tokens.inUse( statementContext.getTopLevelTransactionBoundToThisThread( true ) );\n-    }\n+      IndexProviderImpl idxProvider = new IndexProviderImpl(this, () -> txBridge.getKernelTransactionBoundToThisThread(true));\n+      AutoIndexerFacade<Node> nodeAutoIndexer = new AutoIndexerFacade<>(\n+          () -> new ReadOnlyIndexFacade<>(idxProvider.getOrCreateNodeIndex(NODE_AUTO_INDEX, null)),\n+          spi.autoIndexing().nodes());\n+      RelationshipAutoIndexerFacade relAutoIndexer = new RelationshipAutoIndexerFacade(\n+          () -> new ReadOnlyRelationshipIndexFacade(\n+              idxProvider.getOrCreateRelationshipIndex(RELATIONSHIP_AUTO_INDEX, null)),\n+          spi.autoIndexing().relationships());\n \n-    @Override\n-    public ResourceIterable<Label> getAllLabels()\n-    {\n-        return all( TokenAccess.LABELS );\n-    }\n-\n-    @Override\n-    public ResourceIterable<RelationshipType> getAllRelationshipTypes()\n-    {\n-        return all( TokenAccess.RELATIONSHIP_TYPES );\n-    }\n-\n-    @Override\n-    public ResourceIterable<String> getAllPropertyKeys()\n-    {\n-        return all( TokenAccess.PROPERTY_KEYS );\n-    }\n-\n-    private <T> ResourceIterable<T> all( final TokenAccess<T> tokens )\n-    {\n-        assertTransactionOpen();\n-        return () ->\n-        {\n-            KernelTransaction transaction =\n-                    statementContext.getKernelTransactionBoundToThisThread( true );\n-            return tokens.all( transaction );\n-        };\n-    }\n-\n-    @Override\n-    public KernelEventHandler registerKernelEventHandler(\n-            KernelEventHandler handler )\n-    {\n-        spi.registerKernelEventHandler( handler );\n-        return handler;\n-    }\n-\n-    @Override\n-    public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n-    {\n-        spi.registerTransactionEventHandler( handler );\n-        return handler;\n-    }\n+      return new IndexManagerImpl(() -> txBridge.getKernelTransactionBoundToThisThread(true), idxProvider,\n+          nodeAutoIndexer, relAutoIndexer);\n+    });\n \n-    @Override\n-    public KernelEventHandler unregisterKernelEventHandler(\n-            KernelEventHandler handler )\n-    {\n-        spi.unregisterKernelEventHandler( handler );\n-        return handler;\n-    }\n+    this.contextFactory = Neo4jTransactionalContextFactory.create(spi, guard, txBridge, locker);\n+  }\n \n-    @Override\n-    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+  @Override\n+  public Node createNode()\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        spi.unregisterTransactionEventHandler( handler );\n-        return handler;\n-    }\n-\n-    @Override\n-    public ResourceIterator<Node> findNodes( final Label myLabel, final String key, final Object value )\n+      return newNodeProxy(transaction.dataWrite().nodeCreate());\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( myLabel.name() );\n-        int propertyId = tokenRead.propertyKey( key );\n-        return nodesByLabelAndProperty( transaction, labelId, IndexQuery.exact( propertyId, Values.of( value ) ) );\n+      throw new ConstraintViolationException(e.getMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2 )\n+  @Override\n+  public Long createNodeId()\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( label.name() );\n-        return nodesByLabelAndProperties( transaction, labelId,\n-                                          IndexQuery.exact( tokenRead.propertyKey( key1 ), Values.of( value1 ) ),\n-                                          IndexQuery.exact( tokenRead.propertyKey( key2 ), Values.of( value2 ) ) );\n-    }\n-\n-    @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2,\n-            String key3, Object value3 )\n+      return transaction.dataWrite().nodeCreate();\n+    } catch (InvalidTransactionTypeKernelException e)\n     {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( label.name() );\n-        return nodesByLabelAndProperties( transaction, labelId,\n-                                          IndexQuery.exact( tokenRead.propertyKey( key1 ), Values.of( value1 ) ),\n-                                          IndexQuery.exact( tokenRead.propertyKey( key2 ), Values.of( value2 ) ),\n-                                          IndexQuery.exact( tokenRead.propertyKey( key3 ), Values.of( value3 ) ) );\n+      throw new ConstraintViolationException(e.getMessage(), e);\n     }\n+  }\n \n-    @Override\n-    public ResourceIterator<Node> findNodes( Label label, Map<String,Object> propertyValues )\n+  @Override\n+  public Node createNode(Label... labels)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    try (Statement ignore = transaction.acquireStatement())\n     {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( label.name() );\n-        IndexQuery.ExactPredicate[] queries = new IndexQuery.ExactPredicate[propertyValues.size()];\n-        int i = 0;\n-        for ( Map.Entry<String,Object> entry : propertyValues.entrySet() )\n+      Write write = transaction.dataWrite();\n+      long nodeId = write.nodeCreate();\n+      for (Label label : labels)\n+      {\n+        int labelId = transaction.tokenWrite().labelGetOrCreateForName(label.name());\n+        try\n         {\n-            queries[i++] = IndexQuery.exact( tokenRead.propertyKey( entry.getKey() ), Values.of( entry.getValue() ) );\n-        }\n-        return nodesByLabelAndProperties( transaction, labelId, queries );\n-    }\n-\n-    @Override\n-    public ResourceIterator<Node> findNodes(\n-            final Label myLabel, final String key, final String value, final StringSearchMode searchMode )\n-    {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-        TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( myLabel.name() );\n-        int propertyId = tokenRead.propertyKey( key );\n-        IndexQuery query;\n-        switch ( searchMode )\n+          write.nodeAddLabel(nodeId, labelId);\n+        } catch (EntityNotFoundException e)\n         {\n-        case EXACT:\n-            query = IndexQuery.exact( propertyId, Values.stringValue( value ) );\n-            break;\n-        case PREFIX:\n-            query = IndexQuery.stringPrefix( propertyId, value );\n-            break;\n-        case SUFFIX:\n-            query = IndexQuery.stringSuffix( propertyId, value );\n-            break;\n-        case CONTAINS:\n-            query = IndexQuery.stringContains( propertyId, value );\n-            break;\n-        default:\n-            throw new IllegalStateException( \"Unknown string search mode: \" + searchMode );\n+          throw new NotFoundException(\"No node with id \" + nodeId + \" found.\", e);\n         }\n-        return nodesByLabelAndProperty( transaction, labelId, query );\n-    }\n-\n-    @Override\n-    public Node findNode( final Label myLabel, final String key, final Object value )\n-    {\n-        try ( ResourceIterator<Node> iterator = findNodes( myLabel, key, value ) )\n-        {\n-            if ( !iterator.hasNext() )\n-            {\n-                return null;\n-            }\n-            Node node = iterator.next();\n-            if ( iterator.hasNext() )\n-            {\n-                throw new MultipleFoundException(\n-                        format( \"Found multiple nodes with label: '%s', property name: '%s' and property \" +\n-                                \"value: '%s' while only one was expected.\", myLabel, key, value ) );\n-            }\n-            return node;\n-        }\n-    }\n-\n-    @Override\n-    public ResourceIterator<Node> findNodes( final Label myLabel )\n-    {\n-        return allNodesWithLabel( myLabel );\n-    }\n-\n-    private InternalTransaction beginTransactionInternal( KernelTransaction.Type type, LoginContext loginContext,\n-            long timeoutMillis )\n-    {\n-        if ( statementContext.hasTransaction() )\n+      }\n+      return newNodeProxy(nodeId);\n+    } catch (ConstraintValidationException e)\n+    {\n+      throw new ConstraintViolationException(\"Unable to add label.\", e);\n+    } catch (SchemaKernelException e)\n+    {\n+      throw new IllegalArgumentException(e);\n+    } catch (KernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    }\n+  }\n+\n+  @Override\n+  public Node getNodeById(long id)\n+  {\n+    if (id < 0)\n+    {\n+      throw new NotFoundException(format(\"Node %d not found\", id),\n+          new EntityNotFoundException(EntityType.NODE, id));\n+    }\n+\n+    KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread(true);\n+    assertTransactionOpen(ktx);\n+    try (Statement ignore = ktx.acquireStatement())\n+    {\n+      if (!ktx.dataRead().nodeExists(id))\n+      {\n+        throw new NotFoundException(format(\"Node %d not found\", id),\n+            new EntityNotFoundException(EntityType.NODE, id));\n+      }\n+      return newNodeProxy(id);\n+    }\n+  }\n+\n+  @Override\n+  public Relationship getRelationshipById(long id)\n+  {\n+    if (id < 0)\n+    {\n+      throw new NotFoundException(format(\"Relationship %d not found\", id),\n+          new EntityNotFoundException(EntityType.RELATIONSHIP, id));\n+    }\n+\n+    KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread(true);\n+    assertTransactionOpen(ktx);\n+    try (Statement ignore = statementContext.get())\n+    {\n+      if (!ktx.dataRead().relationshipExists(id))\n+      {\n+        throw new NotFoundException(format(\"Relationship %d not found\", id),\n+            new EntityNotFoundException(EntityType.RELATIONSHIP, id));\n+      }\n+      return newRelationshipProxy(id);\n+    }\n+  }\n+\n+  @Override\n+  public IndexManager index()\n+  {\n+    return indexManager.get();\n+  }\n+\n+  @Override\n+  public Schema schema()\n+  {\n+    assertTransactionOpen();\n+    return schema;\n+  }\n+\n+  @Override\n+  public boolean isAvailable(long timeoutMillis)\n+  {\n+    return spi.databaseIsAvailable(timeoutMillis);\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    spi.shutdown();\n+  }\n+\n+  @Override\n+  public Transaction beginTx()\n+  {\n+    return beginTransaction(KernelTransaction.Type.explicit, AUTH_DISABLED);\n+  }\n+\n+  @Override\n+  public Transaction beginTx(long timeout, TimeUnit unit)\n+  {\n+    return beginTransaction(KernelTransaction.Type.explicit, AUTH_DISABLED, timeout, unit);\n+  }\n+\n+  @Override\n+  public InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext)\n+  {\n+    return beginTransactionInternal(type, loginContext, config.get(transaction_timeout).toMillis());\n+  }\n+\n+  @Override\n+  public InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext,\n+                                              long timeout, TimeUnit unit)\n+  {\n+    return beginTransactionInternal(type, loginContext, unit.toMillis(timeout));\n+  }\n+\n+  @Override\n+  public Result execute(String query) throws QueryExecutionException\n+  {\n+    return execute(query, Collections.emptyMap());\n+  }\n+\n+  @Override\n+  public Result execute(String query, long timeout, TimeUnit unit) throws QueryExecutionException\n+  {\n+    return execute(query, Collections.emptyMap(), timeout, unit);\n+  }\n+\n+  @Override\n+  public Result execute(String query, Map<String, Object> parameters) throws QueryExecutionException\n+  {\n+    // ensure we have a tx and create a context (the tx is gonna get closed by the Cypher result)\n+    InternalTransaction transaction =\n+        beginTransaction(KernelTransaction.Type.implicit, AUTH_DISABLED);\n+\n+    return execute(transaction, query, ValueUtils.asParameterMapValue(parameters));\n+  }\n+\n+  @Override\n+  public Result execute(String query, Map<String, Object> parameters, long timeout, TimeUnit unit) throws\n+      QueryExecutionException\n+  {\n+    InternalTransaction transaction =\n+        beginTransaction(KernelTransaction.Type.implicit, AUTH_DISABLED, timeout, unit);\n+    return execute(transaction, query, ValueUtils.asParameterMapValue(parameters));\n+  }\n+\n+  public Result execute(InternalTransaction transaction, String query, MapValue parameters)\n+      throws QueryExecutionException\n+  {\n+    TransactionalContext context =\n+        contextFactory.newContext(ClientConnectionInfo.EMBEDDED_CONNECTION, transaction, query, parameters);\n+    return spi.executeQuery(query, parameters, context);\n+  }\n+\n+  @Override\n+  public ResourceIterable<Node> getAllNodes()\n+  {\n+    KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread(true);\n+    assertTransactionOpen(ktx);\n+    return () ->\n+    {\n+      Statement statement = ktx.acquireStatement();\n+      NodeCursor cursor = ktx.cursors().allocateNodeCursor();\n+      ktx.dataRead().allNodesScan(cursor);\n+      return new PrefetchingResourceIterator<Node>()\n+      {\n+        @Override\n+        protected Node fetchNextOrNull()\n         {\n-            // FIXME: perhaps we should check that the new type and access mode are compatible with the current tx\n-            return new PlaceboTransaction( statementContext.getKernelTransactionBoundToThisThread( true ) );\n+          if (cursor.next())\n+          {\n+            return newNodeProxy(cursor.nodeReference());\n+          } else\n+          {\n+            close();\n+            return null;\n+          }\n         }\n-        return new TopLevelTransaction( spi.beginTransaction( type, loginContext, timeoutMillis ), statementContext );\n-    }\n-\n-    private ResourceIterator<Node> nodesByLabelAndProperty( KernelTransaction transaction, int labelId, IndexQuery query )\n-    {\n-        Statement statement = transaction.acquireStatement();\n-        Read read = transaction.dataRead();\n \n-        if ( query.propertyKeyId() == TokenRead.NO_TOKEN || labelId == TokenRead.NO_TOKEN )\n+        @Override\n+        public void close()\n         {\n-            statement.close();\n-            return emptyResourceIterator();\n+          cursor.close();\n+          statement.close();\n         }\n-        CapableIndexReference index = transaction.schemaRead().index( labelId, query.propertyKeyId() );\n-        if ( index != CapableIndexReference.NO_INDEX )\n+      };\n+    };\n+  }\n+\n+  @Override\n+  public ResourceIterable<Relationship> getAllRelationships()\n+  {\n+    KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread(true);\n+    assertTransactionOpen(ktx);\n+    return () ->\n+    {\n+      Statement statement = ktx.acquireStatement();\n+      RelationshipScanCursor cursor = ktx.cursors().allocateRelationshipScanCursor();\n+      ktx.dataRead().allRelationshipsScan(cursor);\n+      return new PrefetchingResourceIterator<Relationship>()\n+      {\n+        @Override\n+        protected Relationship fetchNextOrNull()\n         {\n-            // Ha! We found an index - let's use it to find matching nodes\n-            try\n-            {\n-                NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor();\n-                read.nodeIndexSeek( index, cursor, IndexOrder.NONE, query );\n-\n-                return new NodeCursorResourceIterator<>( cursor, statement, this::newNodeProxy );\n-            }\n-            catch ( KernelException e )\n-            {\n-                // weird at this point but ignore and fallback to a label scan\n-            }\n+          if (cursor.next())\n+          {\n+            return newRelationshipProxy(\n+                cursor.relationshipReference(),\n+                cursor.sourceNodeReference(),\n+                cursor.type(),\n+                cursor.targetNodeReference());\n+          } else\n+          {\n+            close();\n+            return null;\n+          }\n         }\n \n-        return getNodesByLabelAndPropertyWithoutIndex( statement, labelId, query );\n-    }\n-\n-    private ResourceIterator<Node> nodesByLabelAndProperties(\n-            KernelTransaction transaction, int labelId, IndexQuery.ExactPredicate... queries )\n-    {\n-        Statement statement = transaction.acquireStatement();\n-        Read read = transaction.dataRead();\n-\n-        if ( isInvalidQuery( labelId, queries ) )\n+        @Override\n+        public void close()\n         {\n-            statement.close();\n-            return emptyResourceIterator();\n+          cursor.close();\n+          statement.close();\n         }\n+      };\n+    };\n+  }\n+\n+  @Override\n+  public ResourceIterable<Label> getAllLabelsInUse()\n+  {\n+    return allInUse(TokenAccess.LABELS);\n+  }\n+\n+  @Override\n+  public ResourceIterable<RelationshipType> getAllRelationshipTypesInUse()\n+  {\n+    return allInUse(TokenAccess.RELATIONSHIP_TYPES);\n+  }\n+\n+  private <T> ResourceIterable<T> allInUse(final TokenAccess<T> tokens)\n+  {\n+    assertTransactionOpen();\n+    return () -> tokens.inUse(statementContext.getTopLevelTransactionBoundToThisThread(true));\n+  }\n+\n+  @Override\n+  public ResourceIterable<Label> getAllLabels()\n+  {\n+    return all(TokenAccess.LABELS);\n+  }\n+\n+  @Override\n+  public ResourceIterable<RelationshipType> getAllRelationshipTypes()\n+  {\n+    return all(TokenAccess.RELATIONSHIP_TYPES);\n+  }\n+\n+  @Override\n+  public ResourceIterable<String> getAllPropertyKeys()\n+  {\n+    return all(TokenAccess.PROPERTY_KEYS);\n+  }\n+\n+  private <T> ResourceIterable<T> all(final TokenAccess<T> tokens)\n+  {\n+    assertTransactionOpen();\n+    return () ->\n+    {\n+      KernelTransaction transaction =\n+          statementContext.getKernelTransactionBoundToThisThread(true);\n+      return tokens.all(transaction);\n+    };\n+  }\n+\n+  @Override\n+  public KernelEventHandler registerKernelEventHandler(\n+      KernelEventHandler handler)\n+  {\n+    spi.registerKernelEventHandler(handler);\n+    return handler;\n+  }\n+\n+  @Override\n+  public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n+      TransactionEventHandler<T> handler)\n+  {\n+    spi.registerTransactionEventHandler(handler);\n+    return handler;\n+  }\n+\n+  @Override\n+  public KernelEventHandler unregisterKernelEventHandler(\n+      KernelEventHandler handler)\n+  {\n+    spi.unregisterKernelEventHandler(handler);\n+    return handler;\n+  }\n+\n+  @Override\n+  public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n+      TransactionEventHandler<T> handler)\n+  {\n+    spi.unregisterTransactionEventHandler(handler);\n+    return handler;\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(final Label myLabel, final String key, final Object value)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    TokenRead tokenRead = transaction.tokenRead();\n+    int labelId = tokenRead.nodeLabel(myLabel.name());\n+    int propertyId = tokenRead.propertyKey(key);\n+    return nodesByLabelAndProperty(transaction, labelId, IndexQuery.exact(propertyId, Values.of(value)));\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    TokenRead tokenRead = transaction.tokenRead();\n+    int labelId = tokenRead.nodeLabel(label.name());\n+    return nodesByLabelAndProperties(transaction, labelId,\n+        IndexQuery.exact(tokenRead.propertyKey(key1), Values.of(value1)),\n+        IndexQuery.exact(tokenRead.propertyKey(key2), Values.of(value2)));\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2,\n+                                          String key3, Object value3)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    TokenRead tokenRead = transaction.tokenRead();\n+    int labelId = tokenRead.nodeLabel(label.name());\n+    return nodesByLabelAndProperties(transaction, labelId,\n+        IndexQuery.exact(tokenRead.propertyKey(key1), Values.of(value1)),\n+        IndexQuery.exact(tokenRead.propertyKey(key2), Values.of(value2)),\n+        IndexQuery.exact(tokenRead.propertyKey(key3), Values.of(value3)));\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(Label label, Map<String, Object> propertyValues)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    TokenRead tokenRead = transaction.tokenRead();\n+    int labelId = tokenRead.nodeLabel(label.name());\n+    IndexQuery.ExactPredicate[] queries = new IndexQuery.ExactPredicate[propertyValues.size()];\n+    int i = 0;\n+    for (Map.Entry<String, Object> entry : propertyValues.entrySet())\n+    {\n+      queries[i++] = IndexQuery.exact(tokenRead.propertyKey(entry.getKey()), Values.of(entry.getValue()));\n+    }\n+    return nodesByLabelAndProperties(transaction, labelId, queries);\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(\n+      final Label myLabel, final String key, final String value, final StringSearchMode searchMode)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+    TokenRead tokenRead = transaction.tokenRead();\n+    int labelId = tokenRead.nodeLabel(myLabel.name());\n+    int propertyId = tokenRead.propertyKey(key);\n+    IndexQuery query;\n+    switch (searchMode)\n+    {\n+      case EXACT:\n+        query = IndexQuery.exact(propertyId, Values.stringValue(value));\n+        break;\n+      case PREFIX:\n+        query = IndexQuery.stringPrefix(propertyId, value);\n+        break;\n+      case SUFFIX:\n+        query = IndexQuery.stringSuffix(propertyId, value);\n+        break;\n+      case CONTAINS:\n+        query = IndexQuery.stringContains(propertyId, value);\n+        break;\n+      default:\n+        throw new IllegalStateException(\"Unknown string search mode: \" + searchMode);\n+    }\n+    return nodesByLabelAndProperty(transaction, labelId, query);\n+  }\n+\n+  @Override\n+  public Node findNode(final Label myLabel, final String key, final Object value)\n+  {\n+    try (ResourceIterator<Node> iterator = findNodes(myLabel, key, value))\n+    {\n+      if (!iterator.hasNext())\n+      {\n+        return null;\n+      }\n+      Node node = iterator.next();\n+      if (iterator.hasNext())\n+      {\n+        throw new MultipleFoundException(\n+            format(\"Found multiple nodes with label: '%s', property name: '%s' and property \" +\n+                \"value: '%s' while only one was expected.\", myLabel, key, value));\n+      }\n+      return node;\n+    }\n+  }\n+\n+  @Override\n+  public ResourceIterator<Node> findNodes(final Label myLabel)\n+  {\n+    return allNodesWithLabel(myLabel);\n+  }\n+\n+  private InternalTransaction beginTransactionInternal(KernelTransaction.Type type, LoginContext loginContext,\n+                                                       long timeoutMillis)\n+  {\n+    if (statementContext.hasTransaction())\n+    {\n+      // FIXME: perhaps we should check that the new type and access mode are compatible with the current tx\n+      return new PlaceboTransaction(statementContext.getKernelTransactionBoundToThisThread(true));\n+    }\n+    return new TopLevelTransaction(spi.beginTransaction(type, loginContext, timeoutMillis), statementContext);\n+  }\n+\n+  private ResourceIterator<Node> nodesByLabelAndProperty(KernelTransaction transaction, int labelId, IndexQuery query)\n+  {\n+    Statement statement = transaction.acquireStatement();\n+    Read read = transaction.dataRead();\n+\n+    if (query.propertyKeyId() == TokenRead.NO_TOKEN || labelId == TokenRead.NO_TOKEN)\n+    {\n+      statement.close();\n+      return emptyResourceIterator();\n+    }\n+    CapableIndexReference index = transaction.schemaRead().index(labelId, query.propertyKeyId());\n+    if (index != CapableIndexReference.NO_INDEX)\n+    {\n+      // Ha! We found an index - let's use it to find matching nodes\n+      try\n+      {\n+        NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor();\n+        read.nodeIndexSeek(index, cursor, IndexOrder.NONE, query);\n+\n+        return new NodeCursorResourceIterator<>(cursor, statement, this::newNodeProxy);\n+      } catch (KernelException e)\n+      {\n+        // weird at this point but ignore and fallback to a label scan\n+      }\n+    }\n+\n+    return getNodesByLabelAndPropertyWithoutIndex(statement, labelId, query);\n+  }\n+\n+  private ResourceIterator<Node> nodesByLabelAndProperties(\n+      KernelTransaction transaction, int labelId, IndexQuery.ExactPredicate... queries)\n+  {\n+    Statement statement = transaction.acquireStatement();\n+    Read read = transaction.dataRead();\n+\n+    if (isInvalidQuery(labelId, queries))\n+    {\n+      statement.close();\n+      return emptyResourceIterator();\n+    }\n+\n+    int[] propertyIds = getPropertyIds(queries);\n+    IndexReference index = findMatchingIndex(transaction, labelId, propertyIds);\n+\n+    if (index != CapableIndexReference.NO_INDEX)\n+    {\n+      try\n+      {\n+        NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor();\n+        read.nodeIndexSeek(index, cursor, IndexOrder.NONE, getReorderedIndexQueries(index.properties(), queries));\n+        return new NodeCursorResourceIterator<>(cursor, statement, this::newNodeProxy);\n+      } catch (KernelException e)\n+      {\n+        // weird at this point but ignore and fallback to a label scan\n+      }\n+    }\n+    return getNodesByLabelAndPropertyWithoutIndex(statement, labelId, queries);\n+  }\n+\n+  private IndexReference findMatchingIndex(KernelTransaction transaction, int labelId, int[] propertyIds)\n+  {\n+    IndexReference index = transaction.schemaRead().index(labelId, propertyIds);\n+    if (index != CapableIndexReference.NO_INDEX)\n+    {\n+      // index found with property order matching the query\n+      return index;\n+    } else\n+    {\n+      // attempt to find matching index with different property order\n+      Arrays.sort(propertyIds);\n+      assertNoDuplicates(propertyIds, transaction.tokenRead());\n+\n+      int[] workingCopy = new int[propertyIds.length];\n \n-        int[] propertyIds = getPropertyIds( queries );\n-        IndexReference index = findMatchingIndex( transaction, labelId, propertyIds );\n-\n-        if ( index != CapableIndexReference.NO_INDEX )\n+      Iterator<IndexReference> indexes = transaction.schemaRead().indexesGetForLabel(labelId);\n+      while (indexes.hasNext())\n+      {\n+        index = indexes.next();\n+        int[] original = index.properties();\n+        if (hasSamePropertyIds(original, workingCopy, propertyIds))\n         {\n-            try\n-            {\n-                NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor();\n-                read.nodeIndexSeek( index, cursor, IndexOrder.NONE, getReorderedIndexQueries( index.properties(), queries ) );\n-                return new NodeCursorResourceIterator<>( cursor, statement, this::newNodeProxy );\n-            }\n-            catch ( KernelException e )\n-            {\n-                // weird at this point but ignore and fallback to a label scan\n-            }\n+          // Ha! We found an index with the same properties in another order\n+          return index;\n         }\n-        return getNodesByLabelAndPropertyWithoutIndex( statement, labelId, queries );\n+      }\n+      return CapableIndexReference.NO_INDEX;\n     }\n+  }\n \n-    private IndexReference findMatchingIndex( KernelTransaction transaction, int labelId, int[] propertyIds )\n+  private IndexQuery[] getReorderedIndexQueries(int[] indexPropertyIds, IndexQuery[] queries)\n+  {\n+    IndexQuery[] orderedQueries = new IndexQuery[queries.length];\n+    for (int i = 0; i < indexPropertyIds.length; i++)\n     {\n-        IndexReference index = transaction.schemaRead().index( labelId, propertyIds );\n-        if ( index != CapableIndexReference.NO_INDEX )\n+      int propertyKeyId = indexPropertyIds[i];\n+      for (IndexQuery query : queries)\n+      {\n+        if (query.propertyKeyId() == propertyKeyId)\n         {\n-            // index found with property order matching the query\n-            return index;\n-        }\n-        else\n-        {\n-            // attempt to find matching index with different property order\n-            Arrays.sort( propertyIds );\n-            assertNoDuplicates( propertyIds, transaction.tokenRead() );\n-\n-            int[] workingCopy = new int[propertyIds.length];\n-\n-            Iterator<IndexReference> indexes = transaction.schemaRead().indexesGetForLabel( labelId );\n-            while ( indexes.hasNext() )\n-            {\n-                index = indexes.next();\n-                int[] original = index.properties();\n-                if ( hasSamePropertyIds( original, workingCopy, propertyIds ) )\n-                {\n-                    // Ha! We found an index with the same properties in another order\n-                    return index;\n-                }\n-            }\n-            return CapableIndexReference.NO_INDEX;\n+          orderedQueries[i] = query;\n+          break;\n         }\n+      }\n+    }\n+    return orderedQueries;\n+  }\n+\n+  private boolean hasSamePropertyIds(int[] original, int[] workingCopy, int[] propertyIds)\n+  {\n+    if (original.length == propertyIds.length)\n+    {\n+      System.arraycopy(original, 0, workingCopy, 0, original.length);\n+      Arrays.sort(workingCopy);\n+      return Arrays.equals(propertyIds, workingCopy);\n+    }\n+    return false;\n+  }\n+\n+  private int[] getPropertyIds(IndexQuery[] queries)\n+  {\n+    int[] propertyIds = new int[queries.length];\n+    for (int i = 0; i < queries.length; i++)\n+    {\n+      propertyIds[i] = queries[i].propertyKeyId();\n+    }\n+    return propertyIds;\n+  }\n+\n+  private boolean isInvalidQuery(int labelId, IndexQuery[] queries)\n+  {\n+    boolean invalidQuery = labelId == TokenRead.NO_TOKEN;\n+    for (IndexQuery query : queries)\n+    {\n+      int propertyKeyId = query.propertyKeyId();\n+      invalidQuery = invalidQuery || propertyKeyId == TokenRead.NO_TOKEN;\n+    }\n+    return invalidQuery;\n+  }\n+\n+  private void assertNoDuplicates(int[] propertyIds, TokenRead tokenRead)\n+  {\n+    int prev = propertyIds[0];\n+    for (int i = 1; i < propertyIds.length; i++)\n+    {\n+      int curr = propertyIds[i];\n+      if (curr == prev)\n+      {\n+        SilentTokenNameLookup tokenLookup = new SilentTokenNameLookup(tokenRead);\n+        throw new IllegalArgumentException(\n+            format(\"Provided two queries for property %s. Only one query per property key can be performed\",\n+                tokenLookup.propertyKeyGetName(curr)));\n+      }\n+      prev = curr;\n+    }\n+  }\n+\n+  private ResourceIterator<Node> getNodesByLabelAndPropertyWithoutIndex(\n+      Statement statement, int labelId, IndexQuery... queries)\n+  {\n+    KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread(true);\n+\n+    NodeLabelIndexCursor nodeLabelCursor = transaction.cursors().allocateNodeLabelIndexCursor();\n+    NodeCursor nodeCursor = transaction.cursors().allocateNodeCursor();\n+    PropertyCursor propertyCursor = transaction.cursors().allocatePropertyCursor();\n+\n+    transaction.dataRead().nodeLabelScan(labelId, nodeLabelCursor);\n+\n+    return new NodeLabelPropertyIterator(transaction.dataRead(),\n+        nodeLabelCursor,\n+        nodeCursor,\n+        propertyCursor,\n+        statement,\n+        this::newNodeProxy,\n+        queries);\n+  }\n+\n+  private ResourceIterator<Node> allNodesWithLabel(final Label myLabel)\n+  {\n+    KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread(true);\n+    Statement statement = ktx.acquireStatement();\n+\n+    int labelId = ktx.tokenRead().nodeLabel(myLabel.name());\n+    if (labelId == TokenRead.NO_TOKEN)\n+    {\n+      statement.close();\n+      return Iterators.emptyResourceIterator();\n+    }\n+\n+    NodeLabelIndexCursor cursor = ktx.cursors().allocateNodeLabelIndexCursor();\n+    ktx.dataRead().nodeLabelScan(labelId, cursor);\n+    return new NodeCursorResourceIterator<>(cursor, statement, this::newNodeProxy);\n+  }\n+\n+  @Override\n+  public TraversalDescription traversalDescription()\n+  {\n+    return new MonoDirectionalTraversalDescription(statementContext);\n+  }\n+\n+  @Override\n+  public BidirectionalTraversalDescription bidirectionalTraversalDescription()\n+  {\n+    return new BidirectionalTraversalDescriptionImpl(statementContext);\n+  }\n+\n+  // GraphDatabaseAPI\n+  @Override\n+  public DependencyResolver getDependencyResolver()\n+  {\n+    return spi.resolver();\n+  }\n+\n+  @Override\n+  public StoreId storeId()\n+  {\n+    return spi.storeId();\n+  }\n+\n+  @Override\n+  public URL validateURLAccess(URL url) throws URLAccessValidationError\n+  {\n+    return spi.validateURLAccess(url);\n+  }\n+\n+  @Override\n+  public File getStoreDir()\n+  {\n+    return spi.storeDir();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return spi.name() + \" [\" + getStoreDir() + \"]\";\n+  }\n+\n+  @Override\n+  public Statement statement()\n+  {\n+    return statementContext.get();\n+  }\n+\n+  @Override\n+  public KernelTransaction kernelTransaction()\n+  {\n+    return statementContext.getKernelTransactionBoundToThisThread(true);\n+  }\n+\n+  @Override\n+  public GraphDatabaseService getGraphDatabase()\n+  {\n+    return this;\n+  }\n+\n+  @Override\n+  public void assertInUnterminatedTransaction()\n+  {\n+    statementContext.assertInUnterminatedTransaction();\n+  }\n+\n+  @Override\n+  public void failTransaction()\n+  {\n+    statementContext.getKernelTransactionBoundToThisThread(true).failure();\n+  }\n+\n+  @Override\n+  public RelationshipProxy newRelationshipProxy(long id)\n+  {\n+    return new RelationshipProxy(this, id);\n+  }\n+\n+  @Override\n+  public RelationshipProxy newRelationshipProxy(long id, long startNodeId, int typeId, long endNodeId)\n+  {\n+    return new RelationshipProxy(this, id, startNodeId, typeId, endNodeId);\n+  }\n+\n+  @Override\n+  public NodeProxy newNodeProxy(long nodeId)\n+  {\n+    return new NodeProxy(this, nodeId);\n+  }\n+\n+  @Override\n+  public RelationshipType getRelationshipTypeById(int type)\n+  {\n+    try\n+    {\n+      return relationshipTypeTokenHolder.getTokenById(type);\n+    } catch (TokenNotFoundException e)\n+    {\n+      throw new IllegalStateException(\"Kernel API returned non-existent relationship type: \" + type);\n+    }\n+  }\n+\n+  @Override\n+  public int getRelationshipTypeIdByName(String typeName)\n+  {\n+    return relationshipTypeTokenHolder.getIdByName(typeName);\n+  }\n+\n+  @Override\n+  public GraphPropertiesProxy newGraphPropertiesProxy()\n+  {\n+    return new GraphPropertiesProxy(this);\n+  }\n+\n+  private static class NodeLabelPropertyIterator extends PrefetchingNodeResourceIterator\n+  {\n+    private final Read read;\n+    private final NodeLabelIndexCursor nodeLabelCursor;\n+    private final NodeCursor nodeCursor;\n+    private final PropertyCursor propertyCursor;\n+    private final IndexQuery[] queries;\n+\n+    NodeLabelPropertyIterator(\n+        Read read,\n+        NodeLabelIndexCursor nodeLabelCursor,\n+        NodeCursor nodeCursor,\n+        PropertyCursor propertyCursor,\n+        Statement statement,\n+        NodeFactory nodeFactory,\n+        IndexQuery... queries)\n+    {\n+      super(statement, nodeFactory);\n+      this.read = read;\n+      this.nodeLabelCursor = nodeLabelCursor;\n+      this.nodeCursor = nodeCursor;\n+      this.propertyCursor = propertyCursor;\n+      this.queries = queries;\n     }\n \n-    private IndexQuery[] getReorderedIndexQueries( int[] indexPropertyIds, IndexQuery[] queries )\n+    @Override\n+    protected long fetchNext()\n     {\n-        IndexQuery[] orderedQueries = new IndexQuery[queries.length];\n-        for ( int i = 0; i < indexPropertyIds.length; i++ )\n-        {\n-            int propertyKeyId = indexPropertyIds[i];\n-            for ( IndexQuery query : queries )\n-            {\n-                if ( query.propertyKeyId() == propertyKeyId )\n-                {\n-                    orderedQueries[i] = query;\n-                    break;\n-                }\n-            }\n-        }\n-        return orderedQueries;\n-    }\n+      boolean hasNext;\n+      do\n+      {\n+        hasNext = nodeLabelCursor.next();\n \n-    private boolean hasSamePropertyIds( int[] original, int[] workingCopy, int[] propertyIds )\n-    {\n-        if ( original.length == propertyIds.length )\n-        {\n-            System.arraycopy( original, 0, workingCopy, 0, original.length );\n-            Arrays.sort( workingCopy );\n-            return Arrays.equals( propertyIds, workingCopy );\n-        }\n-        return false;\n-    }\n+      } while (hasNext && !hasPropertiesWithValues());\n \n-    private int[] getPropertyIds( IndexQuery[] queries )\n-    {\n-        int[] propertyIds = new int[queries.length];\n-        for ( int i = 0; i < queries.length; i++ )\n-        {\n-            propertyIds[i] = queries[i].propertyKeyId();\n-        }\n-        return propertyIds;\n+      if (hasNext)\n+      {\n+        return nodeLabelCursor.nodeReference();\n+      } else\n+      {\n+        close();\n+        return NO_ID;\n+      }\n     }\n \n-    private boolean isInvalidQuery( int labelId, IndexQuery[] queries )\n+    @Override\n+    void closeResources(Statement statement)\n     {\n-        boolean invalidQuery = labelId == TokenRead.NO_TOKEN;\n-        for ( IndexQuery query : queries )\n-        {\n-            int propertyKeyId = query.propertyKeyId();\n-            invalidQuery = invalidQuery || propertyKeyId == TokenRead.NO_TOKEN;\n-        }\n-        return invalidQuery;\n+      IOUtils.closeAllSilently(statement, nodeLabelCursor, nodeCursor, propertyCursor);\n     }\n \n-    private void assertNoDuplicates( int[] propertyIds, TokenRead tokenRead )\n+    private boolean hasPropertiesWithValues()\n     {\n-        int prev = propertyIds[0];\n-        for ( int i = 1; i < propertyIds.length; i++ )\n+      int targetCount = queries.length;\n+      read.singleNode(nodeLabelCursor.nodeReference(), nodeCursor);\n+      if (nodeCursor.next())\n+      {\n+        nodeCursor.properties(propertyCursor);\n+        while (propertyCursor.next())\n         {\n-            int curr = propertyIds[i];\n-            if ( curr == prev )\n+          for (IndexQuery query : queries)\n+          {\n+            if (propertyCursor.propertyKey() == query.propertyKeyId())\n             {\n-                SilentTokenNameLookup tokenLookup = new SilentTokenNameLookup( tokenRead );\n-                throw new IllegalArgumentException(\n-                        format( \"Provided two queries for property %s. Only one query per property key can be performed\",\n-                                tokenLookup.propertyKeyGetName( curr ) ) );\n+              if (query.acceptsValueAt(propertyCursor))\n+              {\n+                targetCount--;\n+                if (targetCount == 0)\n+                {\n+                  return true;\n+                }\n+              } else\n+              {\n+                return false;\n+              }\n             }\n-            prev = curr;\n+          }\n         }\n+      }\n+      return false;\n     }\n+  }\n \n-    private ResourceIterator<Node> getNodesByLabelAndPropertyWithoutIndex(\n-            Statement statement, int labelId, IndexQuery... queries )\n-    {\n-        KernelTransaction transaction = statementContext.getKernelTransactionBoundToThisThread( true );\n-\n-        NodeLabelIndexCursor nodeLabelCursor = transaction.cursors().allocateNodeLabelIndexCursor();\n-        NodeCursor nodeCursor = transaction.cursors().allocateNodeCursor();\n-        PropertyCursor propertyCursor = transaction.cursors().allocatePropertyCursor();\n-\n-        transaction.dataRead().nodeLabelScan( labelId, nodeLabelCursor );\n-\n-        return new NodeLabelPropertyIterator( transaction.dataRead(),\n-                                                nodeLabelCursor,\n-                                                nodeCursor,\n-                                                propertyCursor,\n-                                                statement,\n-                                                this::newNodeProxy,\n-                                                queries );\n-    }\n-\n-    private ResourceIterator<Node> allNodesWithLabel( final Label myLabel )\n-    {\n-        KernelTransaction ktx = statementContext.getKernelTransactionBoundToThisThread( true );\n-        Statement statement = ktx.acquireStatement();\n-\n-        int labelId = ktx.tokenRead().nodeLabel( myLabel.name() );\n-        if ( labelId == TokenRead.NO_TOKEN )\n-        {\n-            statement.close();\n-            return Iterators.emptyResourceIterator();\n-        }\n-\n-        NodeLabelIndexCursor cursor = ktx.cursors().allocateNodeLabelIndexCursor();\n-        ktx.dataRead().nodeLabelScan( labelId, cursor );\n-        return new NodeCursorResourceIterator<>( cursor, statement, this::newNodeProxy );\n-    }\n-\n-    @Override\n-    public TraversalDescription traversalDescription()\n-    {\n-        return new MonoDirectionalTraversalDescription( statementContext );\n-    }\n+  private void assertTransactionOpen()\n+  {\n+    assertTransactionOpen(statementContext.getKernelTransactionBoundToThisThread(true));\n+  }\n \n-    @Override\n-    public BidirectionalTraversalDescription bidirectionalTraversalDescription()\n+  private void assertTransactionOpen(KernelTransaction transaction)\n+  {\n+    if (transaction.isTerminated())\n     {\n-        return new BidirectionalTraversalDescriptionImpl( statementContext );\n+      Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+      throw new TransactionTerminatedException(terminationReason);\n     }\n+  }\n \n-    // GraphDatabaseAPI\n-    @Override\n-    public DependencyResolver getDependencyResolver()\n-    {\n-        return spi.resolver();\n-    }\n+  private static final class NodeCursorResourceIterator<CURSOR extends NodeIndexCursor> extends PrefetchingNodeResourceIterator\n+  {\n+    private final CURSOR cursor;\n \n-    @Override\n-    public StoreId storeId()\n+    NodeCursorResourceIterator(CURSOR cursor, Statement statement, NodeFactory nodeFactory)\n     {\n-        return spi.storeId();\n+      super(statement, nodeFactory);\n+      this.cursor = cursor;\n     }\n \n-    @Override\n-    public URL validateURLAccess( URL url ) throws URLAccessValidationError\n+    long fetchNext()\n     {\n-        return spi.validateURLAccess( url );\n+      if (cursor.next())\n+      {\n+        return cursor.nodeReference();\n+      } else\n+      {\n+        close();\n+        return NO_ID;\n+      }\n     }\n \n     @Override\n-    public File getStoreDir()\n+    void closeResources(Statement statement)\n     {\n-        return spi.storeDir();\n+      IOUtils.closeAllSilently(statement, cursor);\n     }\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return spi.name() + \" [\" + getStoreDir() + \"]\";\n-    }\n+  private abstract static class PrefetchingNodeResourceIterator implements ResourceIterator<Node>\n+  {\n+    private final Statement statement;\n+    private final NodeFactory nodeFactory;\n+    private long next;\n+    private boolean closed;\n \n-    @Override\n-    public Statement statement()\n-    {\n-        return statementContext.get();\n-    }\n+    private static final long NOT_INITIALIZED = -2L;\n+    protected static final long NO_ID = -1L;\n \n-    @Override\n-    public KernelTransaction kernelTransaction()\n+    PrefetchingNodeResourceIterator(Statement statement, NodeFactory nodeFactory)\n     {\n-        return statementContext.getKernelTransactionBoundToThisThread( true );\n+      this.statement = statement;\n+      this.nodeFactory = nodeFactory;\n+      this.next = NOT_INITIALIZED;\n     }\n \n     @Override\n-    public GraphDatabaseService getGraphDatabase()\n+    public boolean hasNext()\n     {\n-        return this;\n+      if (next == NOT_INITIALIZED)\n+      {\n+        next = fetchNext();\n+      }\n+      return next != NO_ID;\n     }\n \n     @Override\n-    public void assertInUnterminatedTransaction()\n+    public Node next()\n     {\n-        statementContext.assertInUnterminatedTransaction();\n+      if (!hasNext())\n+      {\n+        close();\n+        throw new NoSuchElementException();\n+      }\n+      Node nodeProxy = nodeFactory.make(next);\n+      next = fetchNext();\n+      return nodeProxy;\n     }\n \n-    @Override\n-    public void failTransaction()\n+    public void close()\n     {\n-        statementContext.getKernelTransactionBoundToThisThread( true ).failure();\n+      if (!closed)\n+      {\n+        next = NO_ID;\n+        closeResources(statement);\n+        closed = true;\n+      }\n     }\n \n-    @Override\n-    public RelationshipProxy newRelationshipProxy( long id )\n-    {\n-        return new RelationshipProxy( this, id );\n-    }\n+    abstract long fetchNext();\n \n-    @Override\n-    public RelationshipProxy newRelationshipProxy( long id, long startNodeId, int typeId, long endNodeId )\n-    {\n-        return new RelationshipProxy( this, id, startNodeId, typeId, endNodeId );\n-    }\n+    abstract void closeResources(Statement statement);\n+  }\n \n-    @Override\n-    public NodeProxy newNodeProxy( long nodeId )\n-    {\n-        return new NodeProxy( this, nodeId );\n-    }\n-\n-    @Override\n-    public RelationshipType getRelationshipTypeById( int type )\n-    {\n-        try\n-        {\n-            return relationshipTypeTokenHolder.getTokenById( type );\n-        }\n-        catch ( TokenNotFoundException e )\n-        {\n-            throw new IllegalStateException( \"Kernel API returned non-existent relationship type: \" + type );\n-        }\n-    }\n-\n-    @Override\n-    public int getRelationshipTypeIdByName( String typeName )\n-    {\n-        return relationshipTypeTokenHolder.getIdByName( typeName );\n-    }\n-\n-    @Override\n-    public GraphPropertiesProxy newGraphPropertiesProxy()\n-    {\n-        return new GraphPropertiesProxy( this );\n-    }\n-\n-    private static class NodeLabelPropertyIterator extends PrefetchingNodeResourceIterator\n-    {\n-        private final Read read;\n-        private final NodeLabelIndexCursor nodeLabelCursor;\n-        private final NodeCursor nodeCursor;\n-        private final PropertyCursor propertyCursor;\n-        private final IndexQuery[] queries;\n-\n-        NodeLabelPropertyIterator(\n-                Read read,\n-                NodeLabelIndexCursor nodeLabelCursor,\n-                NodeCursor nodeCursor,\n-                PropertyCursor propertyCursor,\n-                Statement statement,\n-                NodeFactory nodeFactory,\n-                IndexQuery... queries )\n-        {\n-            super( statement, nodeFactory );\n-            this.read = read;\n-            this.nodeLabelCursor = nodeLabelCursor;\n-            this.nodeCursor = nodeCursor;\n-            this.propertyCursor = propertyCursor;\n-            this.queries = queries;\n-        }\n-\n-        @Override\n-        protected long fetchNext()\n-        {\n-            boolean hasNext;\n-            do\n-            {\n-                hasNext = nodeLabelCursor.next();\n-\n-            } while ( hasNext && !hasPropertiesWithValues() );\n-\n-            if ( hasNext )\n-            {\n-                return nodeLabelCursor.nodeReference();\n-            }\n-            else\n-            {\n-                close();\n-                return NO_ID;\n-            }\n-        }\n-\n-        @Override\n-        void closeResources( Statement statement )\n-        {\n-            IOUtils.closeAllSilently( statement, nodeLabelCursor, nodeCursor, propertyCursor );\n-        }\n-\n-        private boolean hasPropertiesWithValues()\n-        {\n-            int targetCount = queries.length;\n-            read.singleNode( nodeLabelCursor.nodeReference(), nodeCursor );\n-            if ( nodeCursor.next() )\n-            {\n-                nodeCursor.properties( propertyCursor );\n-                while ( propertyCursor.next() )\n-                {\n-                    for ( IndexQuery query : queries )\n-                    {\n-                        if ( propertyCursor.propertyKey() == query.propertyKeyId() )\n-                        {\n-                            if ( query.acceptsValueAt( propertyCursor ) )\n-                            {\n-                                targetCount--;\n-                                if ( targetCount == 0 )\n-                                {\n-                                    return true;\n-                                }\n-                            }\n-                            else\n-                            {\n-                                return false;\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            return false;\n-        }\n-    }\n-\n-    private void assertTransactionOpen()\n-    {\n-        assertTransactionOpen( statementContext.getKernelTransactionBoundToThisThread( true ) );\n-    }\n-\n-    private void assertTransactionOpen( KernelTransaction transaction )\n-    {\n-        if ( transaction.isTerminated() )\n-        {\n-            Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-            throw new TransactionTerminatedException( terminationReason );\n-        }\n-    }\n-\n-    private static final class NodeCursorResourceIterator<CURSOR extends NodeIndexCursor> extends PrefetchingNodeResourceIterator\n-    {\n-        private final CURSOR cursor;\n-\n-        NodeCursorResourceIterator( CURSOR cursor, Statement statement, NodeFactory nodeFactory )\n-        {\n-            super( statement, nodeFactory );\n-            this.cursor = cursor;\n-        }\n-\n-        long fetchNext()\n-        {\n-            if ( cursor.next() )\n-            {\n-                return cursor.nodeReference();\n-            }\n-            else\n-            {\n-                close();\n-                return NO_ID;\n-            }\n-        }\n-\n-        @Override\n-        void closeResources( Statement statement )\n-        {\n-            IOUtils.closeAllSilently( statement, cursor );\n-        }\n-    }\n-\n-    private abstract static class PrefetchingNodeResourceIterator implements ResourceIterator<Node>\n-    {\n-        private final Statement statement;\n-        private final NodeFactory nodeFactory;\n-        private long next;\n-        private boolean closed;\n-\n-        private static final long NOT_INITIALIZED = -2L;\n-        protected static final long NO_ID = -1L;\n-\n-        PrefetchingNodeResourceIterator( Statement statement, NodeFactory nodeFactory )\n-        {\n-            this.statement = statement;\n-            this.nodeFactory = nodeFactory;\n-            this.next = NOT_INITIALIZED;\n-        }\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            if ( next == NOT_INITIALIZED )\n-            {\n-                next = fetchNext();\n-            }\n-            return next != NO_ID;\n-        }\n-\n-        @Override\n-        public Node next()\n-        {\n-            if ( !hasNext() )\n-            {\n-                close();\n-                throw new NoSuchElementException(  );\n-            }\n-            Node nodeProxy = nodeFactory.make( next );\n-            next = fetchNext();\n-            return nodeProxy;\n-        }\n-\n-        public void close()\n-        {\n-            if ( !closed )\n-            {\n-                next = NO_ID;\n-                closeResources( statement );\n-                closed = true;\n-            }\n-        }\n-\n-        abstract long fetchNext();\n-\n-        abstract void closeResources( Statement statement );\n-    }\n-\n-    private interface NodeFactory\n-    {\n-        NodeProxy make( long id );\n-    }\n+  private interface NodeFactory\n+  {\n+    NodeProxy make(long id);\n+  }\n }\n",
            "diff_size": 1701
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Plugily-Projects-MurderMystery",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "21",
                "severity": "warning",
                "message": "'new' has incorrect indentation level 6, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "  public SpectateArgument(ArgumentsRegistry registry) {\n    registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n      @Override\n      public void execute(CommandSender sender, String[] args) {\n        User user = registry.getPlugin().getUserManager().getUser((Player) sender);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler/9/SpectateArgument.java\nindex f5a1491bf66..3a36f1a3cdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler/9/SpectateArgument.java\n@@ -18,7 +18,7 @@ public class SpectateArgument {\n \n   public SpectateArgument(ArgumentsRegistry registry) {\n     registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n-      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n+        new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n       @Override\n       public void execute(CommandSender sender, String[] args) {\n         User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/intellij/9/SpectateArgument.java\nindex f5a1491bf66..3a36f1a3cdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/intellij/9/SpectateArgument.java\n@@ -18,7 +18,7 @@ public class SpectateArgument {\n \n   public SpectateArgument(ArgumentsRegistry registry) {\n     registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n-      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n+        new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n       @Override\n       public void execute(CommandSender sender, String[] args) {\n         User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "Line is longer than 250 characters (found 296).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/naturalize/9/SpectateArgument.java\nindex f5a1491bf66..91488bbb50f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/naturalize/9/SpectateArgument.java\n@@ -13,13 +13,11 @@ import plugily.projects.murdermystery.user.User;\n  * <p>\n  * Created at 30.06.2020\n  */\n-\n public class SpectateArgument {\n \n   public SpectateArgument(ArgumentsRegistry registry) {\n-    registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n-      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n-      @Override\n+    registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER, new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n+  @Override\n       public void execute(CommandSender sender, String[] args) {\n         User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n         user.setPermanentSpectator(!user.isPermanentSpectator());\n@@ -27,4 +25,4 @@ public class SpectateArgument {\n     });\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "'\"/mma spectate\"' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 49, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 51, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 51, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 49, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 47, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/codebuff/9/SpectateArgument.java\nindex f5a1491bf66..1e47f35cea3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/codebuff/9/SpectateArgument.java\n@@ -14,17 +14,20 @@ import plugily.projects.murdermystery.user.User;\n  * Created at 30.06.2020\n  */\n \n+\n public class SpectateArgument {\n \n   public SpectateArgument(ArgumentsRegistry registry) {\n-    registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n-      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n-      @Override\n-      public void execute(CommandSender sender, String[] args) {\n-        User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n-        user.setPermanentSpectator(!user.isPermanentSpectator());\n-      }\n-    });\n+    registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER, new LabelData(\"/mma spectate\",\n+      \"/mma spectate\",\n+        \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n+\n+                                                 @Override\n+                                                 public void execute(CommandSender sender, String[] args) {\n+                                                   User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n+                                                   user.setPermanentSpectator(!user.isPermanentSpectator());\n+                                                 }\n+                                               });\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_random/9/SpectateArgument.java\nindex f5a1491bf66..3a36f1a3cdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_random/9/SpectateArgument.java\n@@ -18,7 +18,7 @@ public class SpectateArgument {\n \n   public SpectateArgument(ArgumentsRegistry registry) {\n     registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n-      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n+        new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n       @Override\n       public void execute(CommandSender sender, String[] args) {\n         User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_three_grams/9/SpectateArgument.java\nindex f5a1491bf66..3a36f1a3cdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/9/SpectateArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_three_grams/9/SpectateArgument.java\n@@ -18,7 +18,7 @@ public class SpectateArgument {\n \n   public SpectateArgument(ArgumentsRegistry registry) {\n     registry.mapArgument(\"murdermysteryadmin\", new LabeledCommandArgument(\"spectate\", \"murdermystery.admin.spectate\", CommandArgument.ExecutorType.PLAYER,\n-      new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n+        new LabelData(\"/mma spectate\", \"/mma spectate\", \"&7Enable/Disable permanent spectator mode\\n&6Permission: &7murdermystery.admin.spectate\")) {\n       @Override\n       public void execute(CommandSender sender, String[] args) {\n         User user = registry.getPlugin().getUserManager().getUser((Player) sender);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "codefollower-H2-Research",
    "error_id": "492",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "15",
                "severity": "warning",
                "message": "'(' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "    private String value;\n\n    ValueJson (String s) {\n        this.value = s;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/492/ValueJson.java\nindex 40df7b3475c..0162ffd2e7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler/492/ValueJson.java\n@@ -16,7 +16,7 @@ public class ValueJson extends Value {\n \n     private String value;\n \n-    ValueJson (String s) {\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/492/ValueJson.java\nindex 40df7b3475c..0a556f9ca53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/intellij/492/ValueJson.java\n@@ -3,10 +3,12 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: Lazarev Nikita <lazarevn@ispras.ru>\n  */\n+\n package org.h2.value;\n \n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n+\n import org.h2.util.StringUtils;\n \n /**\n@@ -14,73 +16,73 @@ import org.h2.util.StringUtils;\n  */\n public class ValueJson extends Value {\n \n-    private String value;\n-\n-    ValueJson (String s) {\n-        this.value = s;\n-    }\n-\n-    @Override\n-    public StringBuilder getSQL(StringBuilder builder) {\n-        return StringUtils.quoteStringSQL(builder, value).append(\"::JSON\");\n-    }\n-\n-    @Override\n-    public TypeInfo getType() {\n-        return TypeInfo.TYPE_JSON;\n-    }\n-\n-    @Override\n-    public int getValueType() {\n-        return Value.JSON;\n-    }\n-\n-    @Override\n-    public String getString() {\n-        return value;\n-    }\n-\n-    @Override\n-    public Object getObject() {\n-        return value;\n-    }\n-\n-    @Override\n-    public int getMemory() {\n-        return value.length() * 2 + 94;\n-    }\n-\n-    @Override\n-    public void set(PreparedStatement prep, int parameterIndex) throws SQLException {\n-        prep.setString(parameterIndex, value);\n-    }\n-\n-    /*\n-     * The simplest version\n-     * In fact {\"foo\":1,\"bar\":2} must be equal to {\"bar\":2, \"foo\":1}\n-     */\n-    @Override\n-    public int hashCode() {\n-        return value.hashCode();\n-    }\n-\n-    /*\n-     * Similar to hashCode()\n-     */\n-    @Override\n-    public boolean equals(Object other) {\n-        return other instanceof ValueJson &&\n-                this.value.equals(((ValueJson) other).value);\n-    }\n-\n-    @Override\n-    public int compareTypeSafe(Value v, CompareMode mode) {\n-        String other = ((ValueJson) v).value;\n-        return mode.compareString(value, other, false);\n-    }\n-\n-    public static Value get(String s) {\n-        return new ValueJson(s);\n-    }\n+  private String value;\n+\n+  ValueJson(String s) {\n+    this.value = s;\n+  }\n+\n+  @Override\n+  public StringBuilder getSQL(StringBuilder builder) {\n+    return StringUtils.quoteStringSQL(builder, value).append(\"::JSON\");\n+  }\n+\n+  @Override\n+  public TypeInfo getType() {\n+    return TypeInfo.TYPE_JSON;\n+  }\n+\n+  @Override\n+  public int getValueType() {\n+    return Value.JSON;\n+  }\n+\n+  @Override\n+  public String getString() {\n+    return value;\n+  }\n+\n+  @Override\n+  public Object getObject() {\n+    return value;\n+  }\n+\n+  @Override\n+  public int getMemory() {\n+    return value.length() * 2 + 94;\n+  }\n+\n+  @Override\n+  public void set(PreparedStatement prep, int parameterIndex) throws SQLException {\n+    prep.setString(parameterIndex, value);\n+  }\n+\n+  /*\n+   * The simplest version\n+   * In fact {\"foo\":1,\"bar\":2} must be equal to {\"bar\":2, \"foo\":1}\n+   */\n+  @Override\n+  public int hashCode() {\n+    return value.hashCode();\n+  }\n+\n+  /*\n+   * Similar to hashCode()\n+   */\n+  @Override\n+  public boolean equals(Object other) {\n+    return other instanceof ValueJson &&\n+        this.value.equals(((ValueJson) other).value);\n+  }\n+\n+  @Override\n+  public int compareTypeSafe(Value v, CompareMode mode) {\n+    String other = ((ValueJson) v).value;\n+    return mode.compareString(value, other, false);\n+  }\n+\n+  public static Value get(String s) {\n+    return new ValueJson(s);\n+  }\n \n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/492/ValueJson.java\nindex 40df7b3475c..faad83cfc3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/492/ValueJson.java\n@@ -16,7 +16,7 @@ public class ValueJson extends Value {\n \n     private String value;\n \n-    ValueJson (String s) {\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n@@ -69,8 +69,7 @@ public class ValueJson extends Value {\n      */\n     @Override\n     public boolean equals(Object other) {\n-        return other instanceof ValueJson &&\n-                this.value.equals(((ValueJson) other).value);\n+        return other instanceof ValueJson && this.value.equals(((ValueJson) other).value);\n     }\n \n     @Override\n@@ -83,4 +82,4 @@ public class ValueJson extends Value {\n         return new ValueJson(s);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/492/ValueJson.java\nindex 40df7b3475c..7098c98d6ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/492/ValueJson.java\n@@ -12,11 +12,13 @@ import org.h2.util.StringUtils;\n /**\n  * Implementation of the JSON data type.\n  */\n+\n+\n public class ValueJson extends Value {\n \n     private String value;\n \n-    ValueJson (String s) {\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n@@ -59,6 +61,7 @@ public class ValueJson extends Value {\n      * The simplest version\n      * In fact {\"foo\":1,\"bar\":2} must be equal to {\"bar\":2, \"foo\":1}\n      */\n+\n     @Override\n     public int hashCode() {\n         return value.hashCode();\n@@ -67,10 +70,10 @@ public class ValueJson extends Value {\n     /*\n      * Similar to hashCode()\n      */\n+\n     @Override\n     public boolean equals(Object other) {\n-        return other instanceof ValueJson &&\n-                this.value.equals(((ValueJson) other).value);\n+        return other instanceof ValueJson && this.value.equals(((ValueJson) other).value);\n     }\n \n     @Override\n@@ -79,8 +82,9 @@ public class ValueJson extends Value {\n         return mode.compareString(value, other, false);\n     }\n \n+\n     public static Value get(String s) {\n         return new ValueJson(s);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/492/ValueJson.java\nindex 40df7b3475c..0162ffd2e7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_random/492/ValueJson.java\n@@ -16,7 +16,7 @@ public class ValueJson extends Value {\n \n     private String value;\n \n-    ValueJson (String s) {\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/492/ValueJson.java\nindex 40df7b3475c..0162ffd2e7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/492/ValueJson.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/492/ValueJson.java\n@@ -16,7 +16,7 @@ public class ValueJson extends Value {\n \n     private String value;\n \n-    ValueJson (String s) {\n+    ValueJson(String s) {\n         this.value = s;\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
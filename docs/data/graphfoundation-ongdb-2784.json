{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2784",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2784/CountsEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2784/CountsEntry.java\nindex 205ea1b6bbf..c3de192e361 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2784/CountsEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2784/CountsEntry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.store.synthetic;\n \n import org.neo4j.consistency.checking.RecordCheck;\n@@ -30,48 +31,48 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n  */\n public class CountsEntry extends AbstractBaseRecord\n {\n-    private CountsKey key;\n-    private long count;\n+  private CountsKey key;\n+  private long count;\n \n-    public CountsEntry( CountsKey key, long count )\n-    {\n-        super( -1 );\n-        this.key = key;\n-        this.count = count;\n-        setInUse( true );\n-    }\n+  public CountsEntry(CountsKey key, long count)\n+  {\n+    super(-1);\n+    this.key = key;\n+    this.count = count;\n+    setInUse(true);\n+  }\n \n-    @Override\n-    public void clear()\n-    {\n-        super.clear();\n-        key = null;\n-        count = 0;\n-    }\n+  @Override\n+  public void clear()\n+  {\n+    super.clear();\n+    key = null;\n+    count = 0;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"CountsEntry[\" + key + \": \" + count + \"]\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"CountsEntry[\" + key + \": \" + count + \"]\";\n+  }\n \n-    @Override\n-    public long getId()\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  @Override\n+  public long getId()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n \n-    public CountsKey getCountsKey()\n-    {\n-        return key;\n-    }\n+  public CountsKey getCountsKey()\n+  {\n+    return key;\n+  }\n \n-    public long getCount()\n-    {\n-        return count;\n-    }\n+  public long getCount()\n+  {\n+    return count;\n+  }\n \n-    public abstract static class CheckAdapter implements RecordCheck<CountsEntry,ConsistencyReport.CountsConsistencyReport>\n-    {\n-    }\n+  public abstract static class CheckAdapter implements RecordCheck<CountsEntry, ConsistencyReport.CountsConsistencyReport>\n+  {\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2784/CountsEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2784/CountsEntry.java\nindex 205ea1b6bbf..51eff604448 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2784/CountsEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2784/CountsEntry.java\n@@ -38,7 +38,8 @@ public class CountsEntry extends AbstractBaseRecord\n         super( -1 );\n         this.key = key;\n         this.count = count;\n-        setInUse( true );\n+\n+setInUse( true );\n     }\n \n     @Override\n@@ -74,4 +75,4 @@ public class CountsEntry extends AbstractBaseRecord\n     public abstract static class CheckAdapter implements RecordCheck<CountsEntry,ConsistencyReport.CountsConsistencyReport>\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
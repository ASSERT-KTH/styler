{
    "project_name": "Angel-ML-angel",
    "error_id": "548",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/548/Merge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/548/Merge.java\nindex 44fa97bc41d..13fc6db9724 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/548/Merge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/548/Merge.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.utils;\n \n import it.unimi.dsi.fastutil.longs.Long2IntOpenHashMap;\n@@ -23,7 +24,7 @@ import java.util.List;\n public class Merge {\n \n   public static <E> Long2ObjectOpenHashMap<E> mergeHadhMap(Long2ObjectOpenHashMap<E> m1,\n-      Long2ObjectOpenHashMap<E> m2) {\n+                                                           Long2ObjectOpenHashMap<E> m2) {\n     int size = m1.size() + m2.size();\n \n     Long2ObjectOpenHashMap<E> result = new Long2ObjectOpenHashMap<>(size);\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/548/Merge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/548/Merge.java\nindex 44fa97bc41d..c822220a5ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/548/Merge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/548/Merge.java\n@@ -24,7 +24,7 @@ public class Merge {\n \n   public static <E> Long2ObjectOpenHashMap<E> mergeHadhMap(Long2ObjectOpenHashMap<E> m1,\n       Long2ObjectOpenHashMap<E> m2) {\n-    int size = m1.size() + m2.size();\n+  int size = m1.size() + m2.size();\n \n     Long2ObjectOpenHashMap<E> result = new Long2ObjectOpenHashMap<>(size);\n     result.putAll(m1);\n@@ -70,4 +70,4 @@ public class Merge {\n \n     return result;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/548/Merge.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/548/Merge.java\nindex 44fa97bc41d..f909b319d9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/548/Merge.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/548/Merge.java\n@@ -22,20 +22,16 @@ import java.util.List;\n \n public class Merge {\n \n-  public static <E> Long2ObjectOpenHashMap<E> mergeHadhMap(Long2ObjectOpenHashMap<E> m1,\n-      Long2ObjectOpenHashMap<E> m2) {\n+  public static <E> Long2ObjectOpenHashMap<E> mergeHadhMap(Long2ObjectOpenHashMap<E> m1, Long2ObjectOpenHashMap<E> m2) {\n     int size = m1.size() + m2.size();\n-\n     Long2ObjectOpenHashMap<E> result = new Long2ObjectOpenHashMap<>(size);\n     result.putAll(m1);\n     result.putAll(m2);\n-\n     return result;\n   }\n \n   public static <E> Long2ObjectOpenHashMap<E> mergeHadhMap(List<Long2ObjectOpenHashMap<E>> ms) {\n     int size = 0;\n-\n     for (Long2ObjectOpenHashMap<E> m : ms) {\n       if (m != null) {\n         size += m.size();\n@@ -48,13 +44,11 @@ public class Merge {\n         result.putAll(m);\n       }\n     }\n-\n     return result;\n   }\n \n   public static <E> Long2IntOpenHashMap mergeHashMap(List<Long2IntOpenHashMap> ms) {\n     int size = 0;\n-\n     for (Long2IntOpenHashMap m : ms) {\n       if (m != null) {\n         size += m.size();\n@@ -67,7 +61,7 @@ public class Merge {\n         result.putAll(m);\n       }\n     }\n-\n     return result;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CESNET-perun",
    "error_id": "374",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\nindex 5e389588635..c500ec5f85b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n@@ -57,7 +57,7 @@ public class urn_perun_group_resource_attribute_def_def_systemUnixGroupName exte\n \t\t\tif(isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue()==1) {\n \t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n \t\t\t}\n-\t\t\t\n+\n \t\t\treturn;\n \t\t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\nindex 5e389588635..9f320f60815 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n@@ -24,104 +24,104 @@ import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n /**\n- *\n  * @author Michal Stava email:&lt;stavamichal@gmail.com&gt;\n  */\n public class urn_perun_group_resource_attribute_def_def_systemUnixGroupName extends GroupResourceAttributesModuleAbstract implements GroupResourceAttributesModuleImplApi {\n \n-\tprivate static final String A_GR_systemUnixGID = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":systemUnixGID\";\n-\tprivate static final String A_GR_systemIsUnixGroup = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":isSystemUnixGroup\";\n-\tprivate static final Pattern pattern = Pattern.compile(\"^[-_a-zA-Z0-9]*$\");\n-\n-\t@Override\n-\tpublic Attribute fillAttribute(PerunSessionImpl sess, Group group, Resource resource, AttributeDefinition attributeDefinition) {\n-\t\treturn new Attribute(attributeDefinition);\n-\t}\n-\n-\t@Override\n-\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute) throws InternalErrorException, WrongAttributeValueException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException{\n-\n-\t\tString groupName = (String) attribute.getValue();\n-\t\tAttribute isSystemGroup;\n-\n-\t\tif(groupName==null) {\n-\n-\t\t\ttry {\n-\t\t\t\tisSystemGroup = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemIsUnixGroup);\n-\t\t\t} catch(AttributeNotExistsException ex) {\n-\t\t\t\tthrow new ConsistencyErrorException(\"Not exist Attribute \" + A_GR_systemIsUnixGroup +  \" for group \" + group,ex);\n-\t\t\t} catch (GroupResourceMismatchException ex) {\n-\t\t\t\tthrow new InternalErrorException(ex);\n-\t\t\t}\n-\n-\t\t\tif(isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue()==1) {\n-\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n-\t\t\t}\n-\t\t\t\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tif (groupName != null) {\n-\t\t\tMatcher matcher = pattern.matcher(groupName);\n-\t\t\tif (!matcher.matches())\n-\t\t\t\tthrow new WrongAttributeValueException(attribute, \"String with other chars than numbers, letters or symbols _ and - is not allowed value.\");\n-\t\t}\n-\n-\t\t//Get facility for the resource\n-\t\tFacility facility = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, resource);\n-\n-\t\t//List of pairs (group and resource) which has the attribute with the value\n-\t\tList<Pair<Group,Resource>> listGroupPairsResource =sess.getPerunBl().getGroupsManagerBl().getGroupResourcePairsByAttribute(sess, attribute);\n-\n-\t\t//Searching through all pairs and if is not checking group/resource/attribute, then try for being on the same facility, if yes then throw exception but only if these groups have not the same GID too.\n-\t\tfor(Pair<Group,Resource> p : listGroupPairsResource) {\n-\t\t\tif(!p.getLeft().equals(group) || !p.getRight().equals(resource)) {\n-\t\t\t\tFacility facilityForTest = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, p.getRight());\n-\n-\t\t\t\tAttribute group1GID;\n-\t\t\t\tAttribute group2GID;\n-\n-\t\t\t\ttry {\n-\t\t\t\t\tgroup1GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemUnixGID);\n-\t\t\t\t} catch (AttributeNotExistsException ex) {\n-\t\t\t\t\tthrow new ConsistencyErrorException(\"Attribute \"+ A_GR_systemUnixGID +\" not exists for group \" + group + \" and resource \" + resource,ex);\n-\t\t\t\t} catch (GroupResourceMismatchException ex) {\n-\t\t\t\t\tthrow new InternalErrorException(ex);\n-\t\t\t\t}\n-\n-\t\t\t\ttry {\n-\n-\t\t\t\t\tgroup2GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, p.getRight(), p.getLeft(), A_GR_systemUnixGID);\n-\t\t\t\t} catch (AttributeNotExistsException ex) {\n-\t\t\t\t\tthrow new ConsistencyErrorException(\"Attribute \"+ A_GR_systemUnixGID +\" not exists for group \" + p.getLeft() + \" and resource \" + p.getRight() ,ex);\n-\t\t\t\t} catch (GroupResourceMismatchException ex) {\n-\t\t\t\t\tthrow new InternalErrorException(ex);\n-\t\t\t\t}\n-\n-\t\t\t\tif(facilityForTest.equals(facility) && (group1GID.getValue() != null ? (! group1GID.getValue().equals(group2GID.getValue())) : group2GID != null)) {\n-\t\t\t\t\tthrow new WrongAttributeValueException(attribute, \"Group name \" + groupName + \"is allready used by another group-resource and these have not the same GID and GroupName.  \" + p.getLeft() + \" \" + p.getRight());\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t}\n-\n-\t@Override\n-\tpublic List<String> getDependencies() {\n-\t\tList<String> dependencies = new ArrayList<>();\n-\t\tdependencies.add(A_GR_systemUnixGID);\n-\t\tdependencies.add(A_GR_systemIsUnixGroup);\n-\t\treturn dependencies;\n-\t}\n-\n-\t@Override\n-\tpublic AttributeDefinition getAttributeDefinition() {\n-\t\tAttributeDefinition attr = new AttributeDefinition();\n-\t\tattr.setNamespace(AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF);\n-\t\tattr.setFriendlyName(\"systemUnixGroupName\");\n-\t\tattr.setDisplayName(\"Name of system unix group\");\n-\t\tattr.setType(String.class.getName());\n-\t\tattr.setDescription(\"Name of the system unix group.\");\n-\t\treturn attr;\n-\t}\n+    private static final String A_GR_systemUnixGID = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":systemUnixGID\";\n+    private static final String A_GR_systemIsUnixGroup = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":isSystemUnixGroup\";\n+    private static final Pattern pattern = Pattern.compile(\"^[-_a-zA-Z0-9]*$\");\n+\n+    @Override\n+    public Attribute fillAttribute(PerunSessionImpl sess, Group group, Resource resource, AttributeDefinition attributeDefinition) {\n+        return new Attribute(attributeDefinition);\n+    }\n+\n+    @Override\n+    public void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute) throws InternalErrorException, WrongAttributeValueException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+\n+        String groupName = (String) attribute.getValue();\n+        Attribute isSystemGroup;\n+\n+        if (groupName == null) {\n+\n+            try {\n+                isSystemGroup = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemIsUnixGroup);\n+            } catch (AttributeNotExistsException ex) {\n+                throw new ConsistencyErrorException(\"Not exist Attribute \" + A_GR_systemIsUnixGroup + \" for group \" + group, ex);\n+            } catch (GroupResourceMismatchException ex) {\n+                throw new InternalErrorException(ex);\n+            }\n+\n+            if (isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue() == 1) {\n+                throw new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n+            }\n+\n+            return;\n+        }\n+\n+        if (groupName != null) {\n+            Matcher matcher = pattern.matcher(groupName);\n+            if (!matcher.matches()) {\n+                throw new WrongAttributeValueException(attribute, \"String with other chars than numbers, letters or symbols _ and - is not allowed value.\");\n+            }\n+        }\n+\n+        //Get facility for the resource\n+        Facility facility = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, resource);\n+\n+        //List of pairs (group and resource) which has the attribute with the value\n+        List<Pair<Group, Resource>> listGroupPairsResource = sess.getPerunBl().getGroupsManagerBl().getGroupResourcePairsByAttribute(sess, attribute);\n+\n+        //Searching through all pairs and if is not checking group/resource/attribute, then try for being on the same facility, if yes then throw exception but only if these groups have not the same GID too.\n+        for (Pair<Group, Resource> p : listGroupPairsResource) {\n+            if (!p.getLeft().equals(group) || !p.getRight().equals(resource)) {\n+                Facility facilityForTest = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, p.getRight());\n+\n+                Attribute group1GID;\n+                Attribute group2GID;\n+\n+                try {\n+                    group1GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemUnixGID);\n+                } catch (AttributeNotExistsException ex) {\n+                    throw new ConsistencyErrorException(\"Attribute \" + A_GR_systemUnixGID + \" not exists for group \" + group + \" and resource \" + resource, ex);\n+                } catch (GroupResourceMismatchException ex) {\n+                    throw new InternalErrorException(ex);\n+                }\n+\n+                try {\n+\n+                    group2GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, p.getRight(), p.getLeft(), A_GR_systemUnixGID);\n+                } catch (AttributeNotExistsException ex) {\n+                    throw new ConsistencyErrorException(\"Attribute \" + A_GR_systemUnixGID + \" not exists for group \" + p.getLeft() + \" and resource \" + p.getRight(), ex);\n+                } catch (GroupResourceMismatchException ex) {\n+                    throw new InternalErrorException(ex);\n+                }\n+\n+                if (facilityForTest.equals(facility) && (group1GID.getValue() != null ? (!group1GID.getValue().equals(group2GID.getValue())) : group2GID != null)) {\n+                    throw new WrongAttributeValueException(attribute, \"Group name \" + groupName + \"is allready used by another group-resource and these have not the same GID and GroupName.  \" + p.getLeft() + \" \" + p.getRight());\n+                }\n+            }\n+        }\n+\n+    }\n+\n+    @Override\n+    public List<String> getDependencies() {\n+        List<String> dependencies = new ArrayList<>();\n+        dependencies.add(A_GR_systemUnixGID);\n+        dependencies.add(A_GR_systemIsUnixGroup);\n+        return dependencies;\n+    }\n+\n+    @Override\n+    public AttributeDefinition getAttributeDefinition() {\n+        AttributeDefinition attr = new AttributeDefinition();\n+        attr.setNamespace(AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF);\n+        attr.setFriendlyName(\"systemUnixGroupName\");\n+        attr.setDisplayName(\"Name of system unix group\");\n+        attr.setType(String.class.getName());\n+        attr.setDescription(\"Name of the system unix group.\");\n+        return attr;\n+    }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\nindex 5e389588635..8bc1e2c4018 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n@@ -17,7 +17,6 @@ import cz.metacentrum.perun.core.api.exceptions.WrongReferenceAttributeValueExce\n import cz.metacentrum.perun.core.impl.PerunSessionImpl;\n import cz.metacentrum.perun.core.implApi.modules.attributes.GroupResourceAttributesModuleAbstract;\n import cz.metacentrum.perun.core.implApi.modules.attributes.GroupResourceAttributesModuleImplApi;\n-\n import java.util.ArrayList;\n import java.util.List;\n import java.util.regex.Matcher;\n@@ -27,101 +26,94 @@ import java.util.regex.Pattern;\n  *\n  * @author Michal Stava email:&lt;stavamichal@gmail.com&gt;\n  */\n-public class urn_perun_group_resource_attribute_def_def_systemUnixGroupName extends GroupResourceAttributesModuleAbstract implements GroupResourceAttributesModuleImplApi {\n-\n-\tprivate static final String A_GR_systemUnixGID = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":systemUnixGID\";\n-\tprivate static final String A_GR_systemIsUnixGroup = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":isSystemUnixGroup\";\n-\tprivate static final Pattern pattern = Pattern.compile(\"^[-_a-zA-Z0-9]*$\");\n-\n-\t@Override\n-\tpublic Attribute fillAttribute(PerunSessionImpl sess, Group group, Resource resource, AttributeDefinition attributeDefinition) {\n-\t\treturn new Attribute(attributeDefinition);\n-\t}\n-\n-\t@Override\n-\tpublic void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute) throws InternalErrorException, WrongAttributeValueException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException{\n-\n-\t\tString groupName = (String) attribute.getValue();\n-\t\tAttribute isSystemGroup;\n-\n-\t\tif(groupName==null) {\n-\n-\t\t\ttry {\n-\t\t\t\tisSystemGroup = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemIsUnixGroup);\n-\t\t\t} catch(AttributeNotExistsException ex) {\n-\t\t\t\tthrow new ConsistencyErrorException(\"Not exist Attribute \" + A_GR_systemIsUnixGroup +  \" for group \" + group,ex);\n-\t\t\t} catch (GroupResourceMismatchException ex) {\n-\t\t\t\tthrow new InternalErrorException(ex);\n-\t\t\t}\n-\n-\t\t\tif(isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue()==1) {\n-\t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n-\t\t\t}\n-\t\t\t\n-\t\t\treturn;\n-\t\t}\n \n-\t\tif (groupName != null) {\n-\t\t\tMatcher matcher = pattern.matcher(groupName);\n-\t\t\tif (!matcher.matches())\n-\t\t\t\tthrow new WrongAttributeValueException(attribute, \"String with other chars than numbers, letters or symbols _ and - is not allowed value.\");\n-\t\t}\n \n-\t\t//Get facility for the resource\n-\t\tFacility facility = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, resource);\n-\n-\t\t//List of pairs (group and resource) which has the attribute with the value\n-\t\tList<Pair<Group,Resource>> listGroupPairsResource =sess.getPerunBl().getGroupsManagerBl().getGroupResourcePairsByAttribute(sess, attribute);\n-\n-\t\t//Searching through all pairs and if is not checking group/resource/attribute, then try for being on the same facility, if yes then throw exception but only if these groups have not the same GID too.\n-\t\tfor(Pair<Group,Resource> p : listGroupPairsResource) {\n-\t\t\tif(!p.getLeft().equals(group) || !p.getRight().equals(resource)) {\n-\t\t\t\tFacility facilityForTest = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, p.getRight());\n-\n-\t\t\t\tAttribute group1GID;\n-\t\t\t\tAttribute group2GID;\n-\n-\t\t\t\ttry {\n-\t\t\t\t\tgroup1GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemUnixGID);\n-\t\t\t\t} catch (AttributeNotExistsException ex) {\n-\t\t\t\t\tthrow new ConsistencyErrorException(\"Attribute \"+ A_GR_systemUnixGID +\" not exists for group \" + group + \" and resource \" + resource,ex);\n-\t\t\t\t} catch (GroupResourceMismatchException ex) {\n-\t\t\t\t\tthrow new InternalErrorException(ex);\n-\t\t\t\t}\n-\n-\t\t\t\ttry {\n-\n-\t\t\t\t\tgroup2GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, p.getRight(), p.getLeft(), A_GR_systemUnixGID);\n-\t\t\t\t} catch (AttributeNotExistsException ex) {\n-\t\t\t\t\tthrow new ConsistencyErrorException(\"Attribute \"+ A_GR_systemUnixGID +\" not exists for group \" + p.getLeft() + \" and resource \" + p.getRight() ,ex);\n-\t\t\t\t} catch (GroupResourceMismatchException ex) {\n-\t\t\t\t\tthrow new InternalErrorException(ex);\n-\t\t\t\t}\n-\n-\t\t\t\tif(facilityForTest.equals(facility) && (group1GID.getValue() != null ? (! group1GID.getValue().equals(group2GID.getValue())) : group2GID != null)) {\n-\t\t\t\t\tthrow new WrongAttributeValueException(attribute, \"Group name \" + groupName + \"is allready used by another group-resource and these have not the same GID and GroupName.  \" + p.getLeft() + \" \" + p.getRight());\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t}\n+public class urn_perun_group_resource_attribute_def_def_systemUnixGroupName extends GroupResourceAttributesModuleAbstract implements GroupResourceAttributesModuleImplApi {\n \n-\t@Override\n-\tpublic List<String> getDependencies() {\n-\t\tList<String> dependencies = new ArrayList<>();\n-\t\tdependencies.add(A_GR_systemUnixGID);\n-\t\tdependencies.add(A_GR_systemIsUnixGroup);\n-\t\treturn dependencies;\n-\t}\n \n-\t@Override\n-\tpublic AttributeDefinition getAttributeDefinition() {\n-\t\tAttributeDefinition attr = new AttributeDefinition();\n-\t\tattr.setNamespace(AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF);\n-\t\tattr.setFriendlyName(\"systemUnixGroupName\");\n-\t\tattr.setDisplayName(\"Name of system unix group\");\n-\t\tattr.setType(String.class.getName());\n-\t\tattr.setDescription(\"Name of the system unix group.\");\n-\t\treturn attr;\n-\t}\n-}\n+ private static final String A_GR_systemUnixGID = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":systemUnixGID\";\n+ private static final String A_GR_systemIsUnixGroup = AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF + \":isSystemUnixGroup\";\n+ private static final Pattern pattern = Pattern.compile(\"^[-_a-zA-Z0-9]*$\");\n+\n+ @Override\n+ public Attribute fillAttribute(PerunSessionImpl sess, Group group, Resource resource, AttributeDefinition attributeDefinition) {\n+  return new Attribute(attributeDefinition);\n+ }\n+\n+ @Override\n+ public void checkAttributeSemantics(PerunSessionImpl sess, Group group, Resource resource, Attribute attribute) throws InternalErrorException, WrongAttributeValueException, WrongReferenceAttributeValueException, WrongAttributeAssignmentException {\n+  String groupName = (String) attribute.getValue();\n+  Attribute isSystemGroup;\n+  if (groupName == null) {\n+   try {\n+    isSystemGroup = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemIsUnixGroup);\n+   } catch (AttributeNotExistsException ex) {\n+    throw new ConsistencyErrorException(\"Not exist Attribute \" + A_GR_systemIsUnixGroup + \" for group \" + group, ex);\n+   } catch (GroupResourceMismatchException ex) {\n+    throw new InternalErrorException(ex);\n+   }\n+   if (isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue() == 1) {\n+    throw new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n+   }\n+\n+   return;\n+  }\n+  if (groupName != null) {\n+   Matcher matcher = pattern.matcher(groupName);\n+   if (!matcher.matches()) throw new WrongAttributeValueException(attribute, \"String with other chars than numbers, letters or symbols _ and - is not allowed value.\");\n+  }\n+\n+  //Get facility for the resource\n+  Facility facility = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, resource);\n+\n+  //List of pairs (group and resource) which has the attribute with the value\n+  List<Pair<Group, Resource>> listGroupPairsResource = sess.getPerunBl().getGroupsManagerBl().getGroupResourcePairsByAttribute(sess, attribute);\n+\n+  //Searching through all pairs and if is not checking group/resource/attribute, then try for being on the same facility, if yes then throw exception but only if these groups have not the same GID too.\n+  for (Pair<Group, Resource> p : listGroupPairsResource) {\n+   if (!p.getLeft().equals(group) || !p.getRight().equals(resource)) {\n+    Facility facilityForTest = sess.getPerunBl().getResourcesManagerBl().getFacility(sess, p.getRight());\n+    Attribute group1GID;\n+    Attribute group2GID;\n+    try {\n+     group1GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, resource, group, A_GR_systemUnixGID);\n+    } catch (AttributeNotExistsException ex) {\n+     throw new ConsistencyErrorException(\"Attribute \" + A_GR_systemUnixGID + \" not exists for group \" + group + \" and resource \" + resource, ex);\n+    } catch (GroupResourceMismatchException ex) {\n+     throw new InternalErrorException(ex);\n+    }\n+\n+    try {\n+     group2GID = sess.getPerunBl().getAttributesManagerBl().getAttribute(sess, p.getRight(), p.getLeft(), A_GR_systemUnixGID);\n+    } catch (AttributeNotExistsException ex) {\n+     throw new ConsistencyErrorException(\"Attribute \" + A_GR_systemUnixGID + \" not exists for group \" + p.getLeft() + \" and resource \" + p.getRight(),\n+ex);\n+    } catch (GroupResourceMismatchException ex) {\n+     throw new InternalErrorException(ex);\n+    }\n+    if (facilityForTest.equals(facility) && (group1GID.getValue() != null ? (!group1GID.getValue().equals(group2GID.getValue())) : group2GID != null)) {\n+     throw new WrongAttributeValueException(attribute, \"Group name \" + groupName + \"is allready used by another group-resource and these have not the same GID and GroupName.  \" + p.getLeft() + \" \" + p.getRight());\n+    }\n+   }\n+  }\n+ }\n+\n+ @Override\n+ public List<String> getDependencies() {\n+  List<String> dependencies = new ArrayList<>();\n+  dependencies.add(A_GR_systemUnixGID);\n+  dependencies.add(A_GR_systemIsUnixGroup);\n+  return dependencies;\n+ }\n+\n+ @Override\n+ public AttributeDefinition getAttributeDefinition() {\n+  AttributeDefinition attr = new AttributeDefinition();\n+  attr.setNamespace(AttributesManager.NS_GROUP_RESOURCE_ATTR_DEF);\n+  attr.setFriendlyName(\"systemUnixGroupName\");\n+  attr.setDisplayName(\"Name of system unix group\");\n+  attr.setType(String.class.getName());\n+  attr.setDescription(\"Name of the system unix group.\");\n+  return attr;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 170
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\nindex 5e389588635..c500ec5f85b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n@@ -57,7 +57,7 @@ public class urn_perun_group_resource_attribute_def_def_systemUnixGroupName exte\n \t\t\tif(isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue()==1) {\n \t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n \t\t\t}\n-\t\t\t\n+\n \t\t\treturn;\n \t\t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\nindex 5e389588635..c500ec5f85b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/374/urn_perun_group_resource_attribute_def_def_systemUnixGroupName.java\n@@ -57,7 +57,7 @@ public class urn_perun_group_resource_attribute_def_def_systemUnixGroupName exte\n \t\t\tif(isSystemGroup.getValue() != null && (Integer) isSystemGroup.getValue()==1) {\n \t\t\t\tthrow new WrongReferenceAttributeValueException(attribute, \"Attribute cant be null if \" + group + \" on \" + resource + \" is system unix group.\");\n \t\t\t}\n-\t\t\t\n+\n \t\t\treturn;\n \t\t}\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
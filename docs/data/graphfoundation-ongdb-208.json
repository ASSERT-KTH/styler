{
    "project_name": "graphfoundation-ongdb",
    "error_id": "208",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/208/SystemNanoClock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/208/SystemNanoClock.java\nindex 2063e720b78..fa78a92614a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/208/SystemNanoClock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/208/SystemNanoClock.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.time;\n \n import java.time.Clock;\n@@ -26,48 +27,49 @@ import java.time.ZoneOffset;\n \n /**\n  * {@link Clock} that support nano time resolution.\n+ *\n  * @see Clocks\n  */\n public class SystemNanoClock extends Clock\n {\n-    static final SystemNanoClock INSTANCE = new SystemNanoClock();\n+  static final SystemNanoClock INSTANCE = new SystemNanoClock();\n \n-    protected SystemNanoClock()\n-    {\n-        // please use shared instance\n-    }\n+  protected SystemNanoClock()\n+  {\n+    // please use shared instance\n+  }\n \n-    @Override\n-    public ZoneId getZone()\n-    {\n-        return ZoneOffset.UTC;\n-    }\n+  @Override\n+  public ZoneId getZone()\n+  {\n+    return ZoneOffset.UTC;\n+  }\n \n-    @Override\n-    public Clock withZone( ZoneId zone )\n-    {\n-        return Clock.system( zone ); // the users of this method do not need a NanoClock\n-    }\n+  @Override\n+  public Clock withZone(ZoneId zone)\n+  {\n+    return Clock.system(zone); // the users of this method do not need a NanoClock\n+  }\n \n-    @Override\n-    public Instant instant()\n-    {\n-        return Instant.ofEpochMilli( millis() );\n-    }\n+  @Override\n+  public Instant instant()\n+  {\n+    return Instant.ofEpochMilli(millis());\n+  }\n \n-    @Override\n-    public long millis()\n-    {\n-        return System.currentTimeMillis();\n-    }\n+  @Override\n+  public long millis()\n+  {\n+    return System.currentTimeMillis();\n+  }\n \n-    /**\n-     * It is <em>only</em> useful for comparing values returned from the same clock, as the wall clock time of this method is arbitrary.\n-     *\n-     * @return current nano time of the system.\n-     */\n-    public long nanos()\n-    {\n-        return System.nanoTime();\n-    }\n+  /**\n+   * It is <em>only</em> useful for comparing values returned from the same clock, as the wall clock time of this method is arbitrary.\n+   *\n+   * @return current nano time of the system.\n+   */\n+  public long nanos()\n+  {\n+    return System.nanoTime();\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/208/SystemNanoClock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/208/SystemNanoClock.java\nindex 2063e720b78..c39eaed366d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/208/SystemNanoClock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/208/SystemNanoClock.java\n@@ -70,4 +70,4 @@ public class SystemNanoClock extends Clock\n     {\n         return System.nanoTime();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
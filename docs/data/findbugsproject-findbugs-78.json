{
    "project_name": "findbugsproject-findbugs",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "12",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\npublic class MyReporter extends TextUIBugReporter {\n\tBugCollection bugs;\n\t\n\t\n\tMyReporter(BugCollection bugs) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "13",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/78/MyReporter.java\nindex d88528c0552..37fc0bec2de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/78/MyReporter.java\n@@ -9,7 +9,7 @@ import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n \n public class MyReporter extends TextUIBugReporter {\n-\tBugCollection bugs;\n+BugCollection bugs;\n \t\n \t\n \tMyReporter(BugCollection bugs) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/78/MyReporter.java\nindex d88528c0552..355d9348c91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/78/MyReporter.java\n@@ -1,4 +1,5 @@\n package edu.umd.cs.findbugs.bluej;\n+\n import org.apache.bcel.classfile.JavaClass;\n \n import edu.umd.cs.findbugs.BugCollection;\n@@ -9,41 +10,45 @@ import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n \n public class MyReporter extends TextUIBugReporter {\n-\tBugCollection bugs;\n-\t\n-\t\n-\tMyReporter(BugCollection bugs) {\n-\t\tthis.bugs = bugs;\n-\t}\n-\t@Override\n-\tprotected void doReportBug(BugInstance bugInstance) {\n-\t\tBugPattern bugPattern = bugInstance.getBugPattern();\n-\t\tif (bugPattern.getCategory().equals(\"CORRECTNESS\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"DE_\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"HE_\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"SE_\")\n-\t\t\t)\n-\t\t\tbugs.add(bugInstance);\n-\t\t\n-\t}\n-\n-\tpublic void finish() {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\n-\tpublic void observeClass(JavaClass javaClass) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\tpublic void observeClass(ClassDescriptor classDescriptor) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\t@Override\n-\tpublic BugCollection getBugCollection() {\n-\t\treturn bugs;\n-\t}\n+    BugCollection bugs;\n+\n+\n+    MyReporter(BugCollection bugs) {\n+        this.bugs = bugs;\n+    }\n+\n+    @Override\n+    protected void doReportBug(BugInstance bugInstance) {\n+        BugPattern bugPattern = bugInstance.getBugPattern();\n+        if (bugPattern.getCategory().equals(\"CORRECTNESS\")\n+            && !bugPattern.getType().startsWith(\"DE_\")\n+            && !bugPattern.getType().startsWith(\"HE_\")\n+            && !bugPattern.getType().startsWith(\"SE_\")\n+        ) {\n+            bugs.add(bugInstance);\n+        }\n+\n+    }\n+\n+    public void finish() {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    public void observeClass(JavaClass javaClass) {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    public void observeClass(ClassDescriptor classDescriptor) {\n+        // TODO Auto-generated method stub\n+\n+    }\n+\n+    @Override\n+    public BugCollection getBugCollection() {\n+        return bugs;\n+    }\n \n \n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/78/MyReporter.java\nindex d88528c0552..f1691ad3a11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/78/MyReporter.java\n@@ -1,49 +1,41 @@\n package edu.umd.cs.findbugs.bluej;\n-import org.apache.bcel.classfile.JavaClass;\n \n+import org.apache.bcel.classfile.JavaClass;\n import edu.umd.cs.findbugs.BugCollection;\n import edu.umd.cs.findbugs.BugInstance;\n import edu.umd.cs.findbugs.BugPattern;\n import edu.umd.cs.findbugs.TextUIBugReporter;\n import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n-\n public class MyReporter extends TextUIBugReporter {\n-\tBugCollection bugs;\n-\t\n-\t\n-\tMyReporter(BugCollection bugs) {\n-\t\tthis.bugs = bugs;\n-\t}\n-\t@Override\n-\tprotected void doReportBug(BugInstance bugInstance) {\n-\t\tBugPattern bugPattern = bugInstance.getBugPattern();\n-\t\tif (bugPattern.getCategory().equals(\"CORRECTNESS\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"DE_\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"HE_\")\n-\t\t\t\t&& ! bugPattern.getType().startsWith(\"SE_\")\n-\t\t\t)\n-\t\t\tbugs.add(bugInstance);\n-\t\t\n-\t}\n-\n-\tpublic void finish() {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\n-\tpublic void observeClass(JavaClass javaClass) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\tpublic void observeClass(ClassDescriptor classDescriptor) {\n-\t\t// TODO Auto-generated method stub\n-\t\t\n-\t}\n-\t@Override\n-\tpublic BugCollection getBugCollection() {\n-\t\treturn bugs;\n-\t}\n-\n-\n-}\n+    BugCollection bugs;\n+\n+    MyReporter(BugCollection bugs) {\n+        this.bugs = bugs;\n+    }\n+\n+    @Override\n+    protected void doReportBug(BugInstance bugInstance) {\n+        BugPattern bugPattern = bugInstance.getBugPattern();\n+        if (bugPattern.getCategory().equals(\"CORRECTNESS\") && !bugPattern.getType().startsWith(\"DE_\")\n+           && !bugPattern.getType().startsWith(\"HE_\") && !bugPattern.getType().startsWith(\"SE_\"))\n+            bugs.add(bugInstance);\n+    }\n+\n+    public void finish() {\n+        // TODO Auto-generated method stub\n+    }\n+\n+    public void observeClass(JavaClass javaClass) {\n+        // TODO Auto-generated method stub\n+    }\n+\n+    public void observeClass(ClassDescriptor classDescriptor) {\n+        // TODO Auto-generated method stub\n+    }\n+\n+    @Override\n+    public BugCollection getBugCollection() {\n+        return bugs;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "13",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/78/MyReporter.java\nindex d88528c0552..37fc0bec2de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/78/MyReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/78/MyReporter.java\n@@ -9,7 +9,7 @@ import edu.umd.cs.findbugs.classfile.ClassDescriptor;\n \n \n public class MyReporter extends TextUIBugReporter {\n-\tBugCollection bugs;\n+BugCollection bugs;\n \t\n \t\n \tMyReporter(BugCollection bugs) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
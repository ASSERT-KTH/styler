{
    "project_name": "neo4j-neo4j",
    "error_id": "835",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/835/ByteArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/835/ByteArray.java\nindex e8536a2518f..051b92a2ca4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/835/ByteArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/835/ByteArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -30,13 +31,13 @@ import static org.neo4j.memory.HeapEstimator.sizeOf;\n \n public final class ByteArray extends IntegralArray\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( ByteArray.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(ByteArray.class);\n \n     private final byte[] value;\n \n     private boolean invalid;\n \n-    ByteArray( byte[] value )\n+    ByteArray(byte[] value)\n     {\n         assert value != null;\n         this.value = value;\n@@ -44,9 +45,9 @@ public final class ByteArray extends IntegralArray\n \n     private void checkValid()\n     {\n-        if ( invalid )\n+        if (invalid)\n         {\n-            throw new RuntimeException( \"Invalidated\" );\n+            throw new RuntimeException(\"Invalidated\");\n         }\n     }\n \n@@ -58,7 +59,7 @@ public final class ByteArray extends IntegralArray\n     }\n \n     @Override\n-    public long longValue( int index )\n+    public long longValue(int index)\n     {\n         checkValid();\n         return value[index];\n@@ -68,77 +69,77 @@ public final class ByteArray extends IntegralArray\n     protected int computeHashToMemoize()\n     {\n         checkValid();\n-        return NumberValues.hash( value );\n+        return NumberValues.hash(value);\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public <T> T map(ValueMapper<T> mapper)\n     {\n         checkValid();\n-        return mapper.mapByteArray( this );\n+        return mapper.mapByteArray(this);\n     }\n \n     @Override\n-    public boolean equals( Value other )\n+    public boolean equals(Value other)\n     {\n         checkValid();\n-        return other.equals( value );\n+        return other.equals(value);\n     }\n \n     @Override\n-    public boolean equals( byte[] x )\n+    public boolean equals(byte[] x)\n     {\n         checkValid();\n-        return Arrays.equals( value, x );\n+        return Arrays.equals(value, x);\n     }\n \n     @Override\n-    public boolean equals( short[] x )\n+    public boolean equals(short[] x)\n     {\n         checkValid();\n-        return PrimitiveArrayValues.equals( value, x );\n+        return PrimitiveArrayValues.equals(value, x);\n     }\n \n     @Override\n-    public boolean equals( int[] x )\n+    public boolean equals(int[] x)\n     {\n         checkValid();\n-        return PrimitiveArrayValues.equals( value, x );\n+        return PrimitiveArrayValues.equals(value, x);\n     }\n \n     @Override\n-    public boolean equals( long[] x )\n+    public boolean equals(long[] x)\n     {\n         checkValid();\n-        return PrimitiveArrayValues.equals( value, x );\n+        return PrimitiveArrayValues.equals(value, x);\n     }\n \n     @Override\n-    public boolean equals( float[] x )\n+    public boolean equals(float[] x)\n     {\n         checkValid();\n-        return PrimitiveArrayValues.equals( value, x );\n+        return PrimitiveArrayValues.equals(value, x);\n     }\n \n     @Override\n-    public boolean equals( double[] x )\n+    public boolean equals(double[] x)\n     {\n         checkValid();\n-        return PrimitiveArrayValues.equals( value, x );\n+        return PrimitiveArrayValues.equals(value, x);\n     }\n \n     @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n         checkValid();\n-        writer.writeByteArray( value );\n+        writer.writeByteArray(value);\n     }\n \n     @Override\n     public byte[] asObjectCopy()\n     {\n         checkValid();\n-        return Arrays.copyOf( value, value.length );\n+        return Arrays.copyOf(value, value.length);\n     }\n \n     @Override\n@@ -153,21 +154,21 @@ public final class ByteArray extends IntegralArray\n     public String prettyPrint()\n     {\n         checkValid();\n-        return Arrays.toString( value );\n+        return Arrays.toString(value);\n     }\n \n     @Override\n-    public AnyValue value( int offset )\n+    public AnyValue value(int offset)\n     {\n         checkValid();\n-        return Values.byteValue( value[offset] );\n+        return Values.byteValue(value[offset]);\n     }\n \n     @Override\n     public String toString()\n     {\n         checkValid();\n-        return format( \"%s%s\", getTypeName(), Arrays.toString( value ) );\n+        return format(\"%s%s\", getTypeName(), Arrays.toString(value));\n     }\n \n     @Override\n@@ -179,12 +180,12 @@ public final class ByteArray extends IntegralArray\n     @Override\n     public long estimatedHeapUsage()\n     {\n-        return SHALLOW_SIZE + sizeOf( value );\n+        return SHALLOW_SIZE + sizeOf(value);\n     }\n \n     public void zero()\n     {\n         invalid = true;\n-        Arrays.fill( value, (byte) 0 );\n+        Arrays.fill(value, (byte) 0);\n     }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
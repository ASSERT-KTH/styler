{
    "project_name": "jflex-de-jflex",
    "error_id": "51",
    "information": {
        "errors": [
            {
                "line": "26",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage de.jflex.ucd;\n\nimport com.google.auto.value.AutoValue;\nimport com.google.common.collect.ImmutableMap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler/51/UcdVersion.java\nindex cbee3e2bcdf..b764868b23d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler/51/UcdVersion.java\n@@ -23,6 +23,7 @@\n  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package de.jflex.ucd;\n \n import com.google.auto.value.AutoValue;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/intellij/51/UcdVersion.java\nindex cbee3e2bcdf..910c1abd49b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/intellij/51/UcdVersion.java\n@@ -23,6 +23,7 @@\n  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package de.jflex.ucd;\n \n import com.google.auto.value.AutoValue;\n@@ -32,7 +33,9 @@ import de.jflex.version.Version;\n import java.io.File;\n import java.io.FileNotFoundException;\n \n-/** Describes a single Unicode version. */\n+/**\n+ * Describes a single Unicode version.\n+ */\n @AutoValue\n public abstract class UcdVersion {\n \n@@ -121,7 +124,9 @@ public abstract class UcdVersion {\n     public abstract UcdVersion build();\n   }\n \n-  /** Given a path that contains \"external\", returns only the path after \"external/\". */\n+  /**\n+   * Given a path that contains \"external\", returns only the path after \"external/\".\n+   */\n   private static File findExternalPath(File file) {\n     File externalDir = getExternalRootDirectory(file);\n     if (externalDir != null) {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/naturalize/51/UcdVersion.java\nindex cbee3e2bcdf..8193d042b67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/naturalize/51/UcdVersion.java\n@@ -23,6 +23,7 @@\n  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package de.jflex.ucd;\n \n import com.google.auto.value.AutoValue;\n@@ -138,4 +139,4 @@ public abstract class UcdVersion {\n     }\n     return null;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 17, indentation should be the same level as line 74.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 17, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 10, expected is 24, indentation should be the same level as line 78.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 24, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/codebuff/51/UcdVersion.java\nindex cbee3e2bcdf..af5a4da1b47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/codebuff/51/UcdVersion.java\n@@ -33,6 +33,8 @@ import java.io.File;\n import java.io.FileNotFoundException;\n \n /** Describes a single Unicode version. */\n+\n+\n @AutoValue\n public abstract class UcdVersion {\n \n@@ -48,17 +50,20 @@ public abstract class UcdVersion {\n     return files().get(type);\n   }\n \n+\n   public static Builder builder(String version) {\n     return new AutoValue_UcdVersion.Builder().setVersion(version);\n   }\n \n+\n   public static Builder builder(Version version) {\n     return new AutoValue_UcdVersion.Builder().setVersion(version);\n   }\n \n-  public static UcdVersion findUcdFiles(Version version, Iterable<String> argv)\n-      throws FileNotFoundException {\n+\n+  public static UcdVersion findUcdFiles(Version version, Iterable<String> argv) throws FileNotFoundException {\n     Builder builder = builder(version);\n+\n     for (String arg : argv) {\n       for (UcdFileType type : UcdFileType.values()) {\n         // From Unicode 4.1, a zip contains all files, which can just be found by name\n@@ -66,14 +71,15 @@ public abstract class UcdVersion {\n           builder.putFile(type, findFile(arg));\n         } else if (type == UcdFileType.Emoji && arg.contains(\"emoji_data_txt\")) {\n           // Emoji is a single URL, hence uses a different naming convention\n-          builder.putFile(UcdFileType.Emoji, findFile(arg));\n-        } else if (arg.contains(type.toString())) {\n+                 builder.putFile(UcdFileType.Emoji, findFile(arg));\n+               } else if (arg.contains(type.toString())) {\n           // similarly Unicode 1.0-4.0 is e.g.\n           // external/ucd_4_0_1_Blocks_4_0_1_txt/file/downloaded\n-          builder.putFile(type, findFile(arg));\n-        }\n+                        builder.putFile(type, findFile(arg));\n+               }\n       }\n       // Hack for the UNIDATA DerivedAge.txt\n+\n       if (arg.contains(\"ucd_derived_age\")) {\n         builder.putFile(UcdFileType.DerivedAge, findFile(arg));\n       }\n@@ -91,11 +97,14 @@ public abstract class UcdVersion {\n     if (file.exists()) {\n       return externalFile;\n     }\n+\n     throw new FileNotFoundException(arg);\n   }\n \n+\n   public abstract Builder toBuilder();\n \n+\n   @Override\n   public final String toString() {\n     return version().toString();\n@@ -109,6 +118,7 @@ public abstract class UcdVersion {\n       return setVersion(new Version(version));\n     }\n \n+\n     abstract ImmutableMap.Builder<UcdFileType, File> filesBuilder();\n \n     public Builder putFile(UcdFileType unicodeFileType, File file) {\n@@ -116,12 +126,14 @@ public abstract class UcdVersion {\n       return this;\n     }\n \n+\n     public abstract Version version();\n \n     public abstract UcdVersion build();\n   }\n \n   /** Given a path that contains \"external\", returns only the path after \"external/\". */\n+\n   private static File findExternalPath(File file) {\n     File externalDir = getExternalRootDirectory(file);\n     if (externalDir != null) {\n@@ -138,4 +150,4 @@ public abstract class UcdVersion {\n     }\n     return null;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_random/51/UcdVersion.java\nindex cbee3e2bcdf..b764868b23d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_random/51/UcdVersion.java\n@@ -23,6 +23,7 @@\n  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package de.jflex.ucd;\n \n import com.google.auto.value.AutoValue;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_three_grams/51/UcdVersion.java\nindex cbee3e2bcdf..b764868b23d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/errored/1/51/UcdVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/jflex-de-jflex/styler_three_grams/51/UcdVersion.java\n@@ -23,6 +23,7 @@\n  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n  * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package de.jflex.ucd;\n \n import com.google.auto.value.AutoValue;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
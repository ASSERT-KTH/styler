{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "54",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  private void checkSerialization(StreamElement elem) {\n    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/26/JsonFormatTest.java\nindex 703fcc8f6b7..6cc99e97244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/26/JsonFormatTest.java\n@@ -51,6 +51,7 @@ public class JsonFormatTest extends AbstractFileFormatTest {\n   }\n \n   private void checkSerialization(StreamElement elem) {\n-    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n+    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity))\n+  ;\n   }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/26/JsonFormatTest.java\nindex 703fcc8f6b7..418264a66b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/26/JsonFormatTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.bulk;\n \n import static org.junit.Assert.assertEquals;\n@@ -29,14 +30,16 @@ import org.junit.runners.Parameterized;\n @RunWith(Parameterized.class)\n public class JsonFormatTest extends AbstractFileFormatTest {\n \n-  @Parameterized.Parameter public boolean gzip;\n+  @Parameterized.Parameter\n+  public boolean gzip;\n \n   @Parameterized.Parameters\n   public static Collection<Boolean> parameters() {\n     return Arrays.asList(true, false);\n   }\n \n-  public JsonFormatTest() throws URISyntaxException {}\n+  public JsonFormatTest() throws URISyntaxException {\n+  }\n \n   @Override\n   protected FileFormat getFileFormat() {\n@@ -51,6 +54,7 @@ public class JsonFormatTest extends AbstractFileFormatTest {\n   }\n \n   private void checkSerialization(StreamElement elem) {\n-    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n+    assertEquals(elem,\n+        JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n   }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/26/JsonFormatTest.java\nindex 703fcc8f6b7..456828de527 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/26/JsonFormatTest.java\n@@ -29,7 +29,8 @@ import org.junit.runners.Parameterized;\n @RunWith(Parameterized.class)\n public class JsonFormatTest extends AbstractFileFormatTest {\n \n-  @Parameterized.Parameter public boolean gzip;\n+  @Parameterized.Parameter\n+public boolean gzip;\n \n   @Parameterized.Parameters\n   public static Collection<Boolean> parameters() {\n@@ -53,4 +54,4 @@ public class JsonFormatTest extends AbstractFileFormatTest {\n   private void checkSerialization(StreamElement elem) {\n     assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/26/JsonFormatTest.java\nindex 703fcc8f6b7..292711aedbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/26/JsonFormatTest.java\n@@ -16,7 +16,6 @@\n package cz.o2.proxima.direct.bulk;\n \n import static org.junit.Assert.assertEquals;\n-\n import cz.o2.proxima.storage.StreamElement;\n import java.net.URISyntaxException;\n import java.util.Arrays;\n@@ -26,6 +25,8 @@ import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n \n /** Test {@link JsonFormat}. */\n+\n+\n @RunWith(Parameterized.class)\n public class JsonFormatTest extends AbstractFileFormatTest {\n \n@@ -53,4 +54,4 @@ public class JsonFormatTest extends AbstractFileFormatTest {\n   private void checkSerialization(StreamElement elem) {\n     assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/26/JsonFormatTest.java\nindex 703fcc8f6b7..6cc99e97244 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/26/JsonFormatTest.java\n@@ -51,6 +51,7 @@ public class JsonFormatTest extends AbstractFileFormatTest {\n   }\n \n   private void checkSerialization(StreamElement elem) {\n-    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n+    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity))\n+  ;\n   }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "column": "6",
                    "severity": "error",
                    "message": "'}' at column 6 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "55",
                    "column": "6",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/26/JsonFormatTest.java\nindex 703fcc8f6b7..0d92cf5bbb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/26/JsonFormatTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/26/JsonFormatTest.java\n@@ -51,6 +51,6 @@ public class JsonFormatTest extends AbstractFileFormatTest {\n   }\n \n   private void checkSerialization(StreamElement elem) {\n-    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem), entity));\n+    assertEquals(elem, JsonFormat.toStreamElement(JsonFormat.toJsonElement(elem),entity))\n+    ;}\n   }\n-}\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "670",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 10, indentation should be the same level as line 95.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/670/InitNeighborOver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/670/InitNeighborOver.java\nindex d331d8b7c7c..f80b1110596 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/670/InitNeighborOver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/670/InitNeighborOver.java\n@@ -88,11 +88,10 @@ public class InitNeighborOver extends UpdateFunc {\n \n         for (int j = 0; j < subTempRowIds.length; j++) {\n           // Copy column indices for a node to final column indices\n-          System.arraycopy(subTempColumnIndices, copyLen, cloumnIndices,\n-              copyOffsets[subTempRowIds[j] - startCol],\n+          System.arraycopy(subTempColumnIndices, copyLen, cloumnIndices, copyOffsets[subTempRowIds[j] - startCol],\n               subTempLens[j]);\n \n-          // Update write position for this node in final column indices\n+// Update write position for this node in final column indices\n           copyOffsets[subTempRowIds[j] - startCol] += subTempLens[j];\n \n           // Update the read position in sub column indices\n@@ -108,4 +107,4 @@ public class InitNeighborOver extends UpdateFunc {\n       storage.setTempColumnIndices(null);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/670/InitNeighborOver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/670/InitNeighborOver.java\nindex d331d8b7c7c..51a49007bbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/670/InitNeighborOver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/670/InitNeighborOver.java\n@@ -29,11 +29,13 @@ import java.util.List;\n  * Notify PS that all node neighbors information is pushed. PS generate the final node neighbor\n  * table in CSR format\n  */\n+\n public class InitNeighborOver extends UpdateFunc {\n \n   /**\n    * Create a new UpdateParam\n    */\n+\n   public InitNeighborOver(UpdateParam param) {\n     super(param);\n   }\n@@ -48,7 +50,6 @@ public class InitNeighborOver extends UpdateFunc {\n     CSRPartition part = (CSRPartition) matrix.getPartition(param.getPartKey().getPartitionId());\n     IntCSRStorage storage = (IntCSRStorage) part.getStorage();\n     int startCol = (int) param.getPartKey().getStartCol();\n-\n     synchronized (storage) {\n       // No data in this partition\n       if (storage.getTempRowIds() == null) {\n@@ -56,6 +57,7 @@ public class InitNeighborOver extends UpdateFunc {\n       }\n \n       // Get total neighbor number\n+\n       int[] rowOffsets = storage.getRowOffsets();\n       int accumOffset = 0;\n       for (int i = 0; i < rowOffsets.length - 1; i++) {\n@@ -63,16 +65,15 @@ public class InitNeighborOver extends UpdateFunc {\n         rowOffsets[i] = accumOffset;\n         accumOffset += offset;\n       }\n-\n       rowOffsets[rowOffsets.length - 1] = accumOffset;\n \n       // Final matrix column indices: neighbors node ids\n+\n       int[] cloumnIndices = new int[accumOffset];\n \n       // Write positions in cloumnIndices for nodes\n       int[] copyOffsets = new int[rowOffsets.length - 1];\n       System.arraycopy(rowOffsets, 0, copyOffsets, 0, rowOffsets.length - 1);\n-\n       List<int[]> tempRowIds = storage.getTempRowIds();\n       List<int[]> tempRowLens = storage.getTempRowLens();\n       List<int[]> tempColumnIndices = storage.getTempColumnIndices();\n@@ -85,12 +86,9 @@ public class InitNeighborOver extends UpdateFunc {\n         int[] subTempRowIds = tempRowIds.get(i);\n         int[] subTempLens = tempRowLens.get(i);\n         int[] subTempColumnIndices = tempColumnIndices.get(i);\n-\n         for (int j = 0; j < subTempRowIds.length; j++) {\n           // Copy column indices for a node to final column indices\n-          System.arraycopy(subTempColumnIndices, copyLen, cloumnIndices,\n-              copyOffsets[subTempRowIds[j] - startCol],\n-              subTempLens[j]);\n+          System.arraycopy(subTempColumnIndices, copyLen, cloumnIndices, copyOffsets[subTempRowIds[j] - startCol], subTempLens[j]);\n \n           // Update write position for this node in final column indices\n           copyOffsets[subTempRowIds[j] - startCol] += subTempLens[j];\n@@ -99,7 +97,6 @@ public class InitNeighborOver extends UpdateFunc {\n           copyLen += subTempLens[j];\n         }\n       }\n-\n       storage.setColumnIndices(cloumnIndices);\n \n       // Clear all temp data\n@@ -108,4 +105,5 @@ public class InitNeighborOver extends UpdateFunc {\n       storage.setTempColumnIndices(null);\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
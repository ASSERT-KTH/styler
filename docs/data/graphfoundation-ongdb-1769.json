{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1769",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1769/SegmentHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1769/SegmentHeader.java\nindex 36157410985..535bca7cd6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1769/SegmentHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1769/SegmentHeader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.io.IOException;\n@@ -32,95 +33,95 @@ import org.neo4j.storageengine.api.WritableChannel;\n  */\n class SegmentHeader\n {\n-    static final int SIZE = 4 * Long.BYTES;\n+  static final int SIZE = 4 * Long.BYTES;\n \n-    private final long prevFileLastIndex;\n-    private final long version;\n-    private final long prevIndex;\n-    private final long prevTerm;\n+  private final long prevFileLastIndex;\n+  private final long version;\n+  private final long prevIndex;\n+  private final long prevTerm;\n \n-    SegmentHeader( long prevFileLastIndex, long version, long prevIndex, long prevTerm )\n-    {\n-        this.prevFileLastIndex = prevFileLastIndex;\n-        this.version = version;\n-        this.prevIndex = prevIndex;\n-        this.prevTerm = prevTerm;\n-    }\n+  SegmentHeader(long prevFileLastIndex, long version, long prevIndex, long prevTerm)\n+  {\n+    this.prevFileLastIndex = prevFileLastIndex;\n+    this.version = version;\n+    this.prevIndex = prevIndex;\n+    this.prevTerm = prevTerm;\n+  }\n \n-    long prevFileLastIndex()\n-    {\n-        return prevFileLastIndex;\n-    }\n+  long prevFileLastIndex()\n+  {\n+    return prevFileLastIndex;\n+  }\n \n-    public long version()\n-    {\n-        return version;\n-    }\n+  public long version()\n+  {\n+    return version;\n+  }\n \n-    public long prevIndex()\n-    {\n-        return prevIndex;\n-    }\n+  public long prevIndex()\n+  {\n+    return prevIndex;\n+  }\n \n-    public long prevTerm()\n-    {\n-        return prevTerm;\n-    }\n+  public long prevTerm()\n+  {\n+    return prevTerm;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        SegmentHeader that = (SegmentHeader) o;\n-        return prevFileLastIndex == that.prevFileLastIndex &&\n-               version == that.version &&\n-               prevIndex == that.prevIndex &&\n-               prevTerm == that.prevTerm;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return Objects.hash( prevFileLastIndex, version, prevIndex, prevTerm );\n+      return false;\n     }\n+    SegmentHeader that = (SegmentHeader) o;\n+    return prevFileLastIndex == that.prevFileLastIndex &&\n+        version == that.version &&\n+        prevIndex == that.prevIndex &&\n+        prevTerm == that.prevTerm;\n+  }\n \n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(prevFileLastIndex, version, prevIndex, prevTerm);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"SegmentHeader{\" +\n+        \"prevFileLastIndex=\" + prevFileLastIndex +\n+        \", version=\" + version +\n+        \", prevIndex=\" + prevIndex +\n+        \", prevTerm=\" + prevTerm +\n+        '}';\n+  }\n+\n+  static class Marshal extends SafeChannelMarshal<SegmentHeader>\n+  {\n     @Override\n-    public String toString()\n+    public void marshal(SegmentHeader header, WritableChannel channel) throws IOException\n     {\n-        return \"SegmentHeader{\" +\n-               \"prevFileLastIndex=\" + prevFileLastIndex +\n-               \", version=\" + version +\n-               \", prevIndex=\" + prevIndex +\n-               \", prevTerm=\" + prevTerm +\n-               '}';\n+      channel.putLong(header.prevFileLastIndex);\n+      channel.putLong(header.version);\n+      channel.putLong(header.prevIndex);\n+      channel.putLong(header.prevTerm);\n     }\n \n-    static class Marshal extends SafeChannelMarshal<SegmentHeader>\n+    @Override\n+    public SegmentHeader unmarshal0(ReadableChannel channel) throws IOException\n     {\n-        @Override\n-        public void marshal( SegmentHeader header, WritableChannel channel ) throws IOException\n-        {\n-            channel.putLong( header.prevFileLastIndex );\n-            channel.putLong( header.version );\n-            channel.putLong( header.prevIndex );\n-            channel.putLong( header.prevTerm );\n-        }\n-\n-        @Override\n-        public SegmentHeader unmarshal0( ReadableChannel channel ) throws IOException\n-        {\n-            long prevFileLastIndex = channel.getLong();\n-            long version = channel.getLong();\n-            long prevIndex = channel.getLong();\n-            long prevTerm = channel.getLong();\n-            return new SegmentHeader( prevFileLastIndex, version, prevIndex, prevTerm );\n-        }\n+      long prevFileLastIndex = channel.getLong();\n+      long version = channel.getLong();\n+      long prevIndex = channel.getLong();\n+      long prevTerm = channel.getLong();\n+      return new SegmentHeader(prevFileLastIndex, version, prevIndex, prevTerm);\n     }\n+  }\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1769/SegmentHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1769/SegmentHeader.java\nindex 36157410985..a1c9c811361 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1769/SegmentHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1769/SegmentHeader.java\n@@ -74,13 +74,14 @@ class SegmentHeader\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        SegmentHeader that = (SegmentHeader) o;\n-        return prevFileLastIndex == that.prevFileLastIndex &&\n-               version == that.version &&\n+\n+SegmentHeader that = (SegmentHeader) o;\n+        return prevFileLastIndex == that.prevFileLastIndex && version == that.version &&\n                prevIndex == that.prevIndex &&\n                prevTerm == that.prevTerm;\n     }\n@@ -94,12 +95,7 @@ class SegmentHeader\n     @Override\n     public String toString()\n     {\n-        return \"SegmentHeader{\" +\n-               \"prevFileLastIndex=\" + prevFileLastIndex +\n-               \", version=\" + version +\n-               \", prevIndex=\" + prevIndex +\n-               \", prevTerm=\" + prevTerm +\n-               '}';\n+        return \"SegmentHeader{\" + \"prevFileLastIndex=\" + prevFileLastIndex + \", version=\" + version + \", prevIndex=\" + prevIndex + \", prevTerm=\" + prevTerm + '}';\n     }\n \n     static class Marshal extends SafeChannelMarshal<SegmentHeader>\n@@ -123,4 +119,4 @@ class SegmentHeader\n             return new SegmentHeader( prevFileLastIndex, version, prevIndex, prevTerm );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
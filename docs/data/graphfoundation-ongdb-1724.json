{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1724",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1724/AbstractSwallowingIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1724/AbstractSwallowingIndexProxy.java\nindex 4dc684a77a6..418a92b0866 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1724/AbstractSwallowingIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1724/AbstractSwallowingIndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import org.neo4j.internal.kernel.api.IndexCapability;\n@@ -31,88 +32,88 @@ import org.neo4j.storageengine.api.schema.PopulationProgress;\n \n public abstract class AbstractSwallowingIndexProxy implements IndexProxy\n {\n-    private final IndexMeta indexMeta;\n-    private final IndexPopulationFailure populationFailure;\n-\n-    AbstractSwallowingIndexProxy( IndexMeta indexMeta, IndexPopulationFailure populationFailure )\n-    {\n-        this.indexMeta = indexMeta;\n-        this.populationFailure = populationFailure;\n-    }\n-\n-    @Override\n-    public IndexPopulationFailure getPopulationFailure()\n-    {\n-        return populationFailure;\n-    }\n-\n-    @Override\n-    public PopulationProgress getIndexPopulationProgress()\n-    {\n-        return PopulationProgress.NONE;\n-    }\n-\n-    @Override\n-    public void start()\n-    {\n-        String message = \"Unable to start index, it is in a \" + getState().name() + \" state.\";\n-        throw new UnsupportedOperationException( message + \", caused by: \" + getPopulationFailure() );\n-    }\n-\n-    @Override\n-    public IndexUpdater newUpdater( IndexUpdateMode mode )\n-    {\n-        return SwallowingIndexUpdater.INSTANCE;\n-    }\n-\n-    @Override\n-    public void force( IOLimiter ioLimiter )\n-    {\n-    }\n-\n-    @Override\n-    public IndexCapability getIndexCapability()\n-    {\n-        return indexMeta.indexCapability();\n-    }\n-\n-    @Override\n-    public void refresh()\n-    {\n-    }\n-\n-    @Override\n-    public SchemaIndexDescriptor getDescriptor()\n-    {\n-        return indexMeta.indexDescriptor();\n-    }\n-\n-    @Override\n-    public SchemaDescriptor schema()\n-    {\n-        return indexMeta.indexDescriptor().schema();\n-    }\n-\n-    @Override\n-    public IndexProvider.Descriptor getProviderDescriptor()\n-    {\n-        return indexMeta.providerDescriptor();\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-    }\n-\n-    @Override\n-    public IndexReader newReader()\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public long getIndexId()\n-    {\n-        return indexMeta.getIndexId();\n-    }\n+  private final IndexMeta indexMeta;\n+  private final IndexPopulationFailure populationFailure;\n+\n+  AbstractSwallowingIndexProxy(IndexMeta indexMeta, IndexPopulationFailure populationFailure)\n+  {\n+    this.indexMeta = indexMeta;\n+    this.populationFailure = populationFailure;\n+  }\n+\n+  @Override\n+  public IndexPopulationFailure getPopulationFailure()\n+  {\n+    return populationFailure;\n+  }\n+\n+  @Override\n+  public PopulationProgress getIndexPopulationProgress()\n+  {\n+    return PopulationProgress.NONE;\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    String message = \"Unable to start index, it is in a \" + getState().name() + \" state.\";\n+    throw new UnsupportedOperationException(message + \", caused by: \" + getPopulationFailure());\n+  }\n+\n+  @Override\n+  public IndexUpdater newUpdater(IndexUpdateMode mode)\n+  {\n+    return SwallowingIndexUpdater.INSTANCE;\n+  }\n+\n+  @Override\n+  public void force(IOLimiter ioLimiter)\n+  {\n+  }\n+\n+  @Override\n+  public IndexCapability getIndexCapability()\n+  {\n+    return indexMeta.indexCapability();\n+  }\n+\n+  @Override\n+  public void refresh()\n+  {\n+  }\n+\n+  @Override\n+  public SchemaIndexDescriptor getDescriptor()\n+  {\n+    return indexMeta.indexDescriptor();\n+  }\n+\n+  @Override\n+  public SchemaDescriptor schema()\n+  {\n+    return indexMeta.indexDescriptor().schema();\n+  }\n+\n+  @Override\n+  public IndexProvider.Descriptor getProviderDescriptor()\n+  {\n+    return indexMeta.providerDescriptor();\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+  }\n+\n+  @Override\n+  public IndexReader newReader()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getIndexId()\n+  {\n+    return indexMeta.getIndexId();\n+  }\n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1724/AbstractSwallowingIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1724/AbstractSwallowingIndexProxy.java\nindex 4dc684a77a6..f26fd65792f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1724/AbstractSwallowingIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1724/AbstractSwallowingIndexProxy.java\n@@ -115,4 +115,4 @@ public abstract class AbstractSwallowingIndexProxy implements IndexProxy\n     {\n         return indexMeta.getIndexId();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
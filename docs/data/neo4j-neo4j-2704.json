{
    "project_name": "neo4j-neo4j",
    "error_id": "2704",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2704/IndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2704/IndexProxy.java\nindex c34239cc7b5..c31836bd2e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2704/IndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2704/IndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.IOException;\n@@ -45,7 +46,7 @@ import org.neo4j.values.storable.Value;\n /**\n  * Controls access to {@link IndexPopulator}, {@link IndexAccessor} during different stages\n  * of the lifecycle of an index. It's designed to be decorated with multiple stacked instances.\n- *\n+ * <p>\n  * The contract of {@link IndexProxy} is\n  *\n  * <ul>\n@@ -64,12 +65,12 @@ public interface IndexProxy extends MinimalIndexAccessor\n {\n     void start();\n \n-    IndexUpdater newUpdater( IndexUpdateMode mode, PageCursorTracer cursorTracer );\n+    IndexUpdater newUpdater(IndexUpdateMode mode, PageCursorTracer cursorTracer);\n \n     /**\n      * Close this index context.\n      */\n-    void close( PageCursorTracer cursorTracer ) throws IOException;\n+    void close(PageCursorTracer cursorTracer) throws IOException;\n \n     IndexDescriptor getDescriptor();\n \n@@ -82,7 +83,7 @@ public interface IndexProxy extends MinimalIndexAccessor\n \n     PopulationProgress getIndexPopulationProgress();\n \n-    void force( IOLimiter ioLimiter, PageCursorTracer cursorTracer ) throws IOException;\n+    void force(IOLimiter ioLimiter, PageCursorTracer cursorTracer) throws IOException;\n \n     void refresh() throws IOException;\n \n@@ -96,7 +97,7 @@ public interface IndexProxy extends MinimalIndexAccessor\n      * @param unit unit of time to wait.\n      * @return {@code true} if the call waited, {@code false} if the condition was already reached.\n      */\n-    boolean awaitStoreScanCompleted( long time, TimeUnit unit ) throws IndexPopulationFailedKernelException, InterruptedException;\n+    boolean awaitStoreScanCompleted(long time, TimeUnit unit) throws IndexPopulationFailedKernelException, InterruptedException;\n \n     void activate() throws IndexActivationFailedKernelException;\n \n@@ -106,15 +107,15 @@ public interface IndexProxy extends MinimalIndexAccessor\n      * Validates a {@link Value} so that it's OK to later apply to the index. This method is designed to be\n      * called before committing a transaction as to prevent exception during applying that transaction.\n      *\n-     * @param tuple {@link Value value tuple} to validate.\n+     * @param tuple    {@link Value value tuple} to validate.\n      * @param entityId id of the entity being validated\n      */\n-    void validateBeforeCommit( Value[] tuple, long entityId );\n+    void validateBeforeCommit(Value[] tuple, long entityId);\n \n     ResourceIterator<Path> snapshotFiles() throws IOException;\n \n-    default void verifyDeferredConstraints( NodePropertyAccessor accessor )  throws IndexEntryConflictException, IOException\n+    default void verifyDeferredConstraints(NodePropertyAccessor accessor) throws IndexEntryConflictException, IOException\n     {\n-        throw new IllegalStateException( this.toString() );\n+        throw new IllegalStateException(this.toString());\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "412",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/412/TokenRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/412/TokenRecord.java\nindex 810db63ef95..b1c30d1a32a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/412/TokenRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/412/TokenRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.ArrayList;\n@@ -25,82 +26,82 @@ import java.util.List;\n \n public abstract class TokenRecord extends AbstractBaseRecord\n {\n-    private int nameId;\n-    private List<DynamicRecord> nameRecords;\n+  private int nameId;\n+  private List<DynamicRecord> nameRecords;\n \n-    public TokenRecord( int id )\n-    {\n-        super( id );\n-    }\n+  public TokenRecord(int id)\n+  {\n+    super(id);\n+  }\n \n-    public TokenRecord initialize( boolean inUse, int nameId )\n-    {\n-        super.initialize( inUse );\n-        this.nameId = nameId;\n-        this.nameRecords = new ArrayList<>();\n-        return this;\n-    }\n+  public TokenRecord initialize(boolean inUse, int nameId)\n+  {\n+    super.initialize(inUse);\n+    this.nameId = nameId;\n+    this.nameRecords = new ArrayList<>();\n+    return this;\n+  }\n \n-    @Override\n-    public void clear()\n-    {\n-        initialize( false, Record.NO_NEXT_BLOCK.intValue() );\n-    }\n+  @Override\n+  public void clear()\n+  {\n+    initialize(false, Record.NO_NEXT_BLOCK.intValue());\n+  }\n \n-    public boolean isLight()\n-    {\n-        return nameRecords == null || nameRecords.isEmpty();\n-    }\n+  public boolean isLight()\n+  {\n+    return nameRecords == null || nameRecords.isEmpty();\n+  }\n \n-    public int getNameId()\n-    {\n-        return nameId;\n-    }\n+  public int getNameId()\n+  {\n+    return nameId;\n+  }\n \n-    public void setNameId( int blockId )\n-    {\n-        this.nameId = blockId;\n-    }\n+  public void setNameId(int blockId)\n+  {\n+    this.nameId = blockId;\n+  }\n \n-    public Collection<DynamicRecord> getNameRecords()\n-    {\n-        return nameRecords;\n-    }\n+  public Collection<DynamicRecord> getNameRecords()\n+  {\n+    return nameRecords;\n+  }\n \n-    public void addNameRecord( DynamicRecord record )\n-    {\n-        nameRecords.add( record );\n-    }\n+  public void addNameRecord(DynamicRecord record)\n+  {\n+    nameRecords.add(record);\n+  }\n \n-    public void addNameRecords( Iterable<DynamicRecord> records )\n+  public void addNameRecords(Iterable<DynamicRecord> records)\n+  {\n+    for (DynamicRecord record : records)\n     {\n-        for ( DynamicRecord record : records )\n-        {\n-            addNameRecord( record );\n-        }\n+      addNameRecord(record);\n     }\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    StringBuilder buf = new StringBuilder(simpleName() + '[');\n+    buf.append(getId()).append(',').append(inUse() ? \"in\" : \"no\").append(\" use\");\n+    buf.append(\",nameId=\").append(nameId);\n+    additionalToString(buf);\n+    if (!isLight())\n     {\n-        StringBuilder buf = new StringBuilder( simpleName() + '[' );\n-        buf.append( getId() ).append( ',' ).append( inUse() ? \"in\" : \"no\" ).append( \" use\" );\n-        buf.append( \",nameId=\" ).append( nameId );\n-        additionalToString( buf );\n-        if ( !isLight() )\n-        {\n-            for ( DynamicRecord dyn : nameRecords )\n-            {\n-                buf.append( ',' ).append( dyn );\n-            }\n-        }\n-        return buf.append( ']' ).toString();\n+      for (DynamicRecord dyn : nameRecords)\n+      {\n+        buf.append(',').append(dyn);\n+      }\n     }\n+    return buf.append(']').toString();\n+  }\n \n-    protected abstract String simpleName();\n+  protected abstract String simpleName();\n \n-    protected void additionalToString( StringBuilder buf )\n-    {\n-        // default: nothing additional\n-    }\n+  protected void additionalToString(StringBuilder buf)\n+  {\n+    // default: nothing additional\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/412/TokenRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/412/TokenRecord.java\nindex 810db63ef95..8a6fb3b8fba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/412/TokenRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/412/TokenRecord.java\n@@ -103,4 +103,4 @@ public abstract class TokenRecord extends AbstractBaseRecord\n     {\n         // default: nothing additional\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
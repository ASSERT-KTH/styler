{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4298",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "231",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "461",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4298/JSONTokener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4298/JSONTokener.java\nindex dc3e1c8c02c..e49691dc317 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4298/JSONTokener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4298/JSONTokener.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.util.json;\n \n import java.io.BufferedReader;\n@@ -59,435 +60,432 @@ SOFTWARE.\n public class JSONTokener\n {\n \n-    private int index;\n-    private Reader reader;\n-    private char lastChar;\n-    private boolean useLastChar;\n-\n-    /**\n-     * Construct a JSONTokener from a string.\n-     *\n-     * @param reader A reader.\n-     */\n-    public JSONTokener( Reader reader )\n+  private int index;\n+  private Reader reader;\n+  private char lastChar;\n+  private boolean useLastChar;\n+\n+  /**\n+   * Construct a JSONTokener from a string.\n+   *\n+   * @param reader A reader.\n+   */\n+  public JSONTokener(Reader reader)\n+  {\n+    this.reader = reader.markSupported() ? reader : new BufferedReader(reader);\n+    this.useLastChar = false;\n+    this.index = 0;\n+  }\n+\n+  /**\n+   * Construct a JSONTokener from a string.\n+   *\n+   * @param s A source string.\n+   */\n+  public JSONTokener(String s)\n+  {\n+    this(new StringReader(s));\n+  }\n+\n+  /**\n+   * Get the hex value of a character (base16).\n+   *\n+   * @param c A character between '0' and '9' or between 'A' and 'F' or\n+   *          between 'a' and 'f'.\n+   * @return An int between 0 and 15, or -1 if c was not a hex digit.\n+   */\n+  public static int dehexchar(char c)\n+  {\n+    if (c >= '0' && c <= '9')\n     {\n-        this.reader = reader.markSupported() ? reader : new BufferedReader( reader );\n-        this.useLastChar = false;\n-        this.index = 0;\n+      return c - '0';\n     }\n-\n-    /**\n-     * Construct a JSONTokener from a string.\n-     *\n-     * @param s A source string.\n-     */\n-    public JSONTokener( String s )\n+    if (c >= 'A' && c <= 'F')\n     {\n-        this( new StringReader( s ) );\n+      return c - ('A' - 10);\n     }\n-\n-    /**\n-     * Get the hex value of a character (base16).\n-     *\n-     * @param c A character between '0' and '9' or between 'A' and 'F' or\n-     * between 'a' and 'f'.\n-     * @return An int between 0 and 15, or -1 if c was not a hex digit.\n-     */\n-    public static int dehexchar( char c )\n+    if (c >= 'a' && c <= 'f')\n     {\n-        if ( c >= '0' && c <= '9' )\n-        {\n-            return c - '0';\n-        }\n-        if ( c >= 'A' && c <= 'F' )\n-        {\n-            return c - ('A' - 10);\n-        }\n-        if ( c >= 'a' && c <= 'f' )\n-        {\n-            return c - ('a' - 10);\n-        }\n-        return -1;\n+      return c - ('a' - 10);\n     }\n-\n-    /**\n-     * Back up one character. This provides a sort of lookahead capability,\n-     * so that you can test for a digit or letter before attempting to parse\n-     * the next number or identifier.\n-     */\n-    public void back() throws JSONException\n+    return -1;\n+  }\n+\n+  /**\n+   * Back up one character. This provides a sort of lookahead capability,\n+   * so that you can test for a digit or letter before attempting to parse\n+   * the next number or identifier.\n+   */\n+  public void back() throws JSONException\n+  {\n+    if (useLastChar || index <= 0)\n     {\n-        if ( useLastChar || index <= 0 )\n-        {\n-            throw new JSONException( \"Stepping back two steps is not supported\" );\n-        }\n-        index -= 1;\n-        useLastChar = true;\n+      throw new JSONException(\"Stepping back two steps is not supported\");\n     }\n-\n-    /**\n-     * Determine if the source string still contains characters that next()\n-     * can consume.\n-     *\n-     * @return true if not yet at the end of the source.\n-     */\n-    public boolean more() throws JSONException\n+    index -= 1;\n+    useLastChar = true;\n+  }\n+\n+  /**\n+   * Determine if the source string still contains characters that next()\n+   * can consume.\n+   *\n+   * @return true if not yet at the end of the source.\n+   */\n+  public boolean more() throws JSONException\n+  {\n+    char nextChar = next();\n+    if (nextChar == 0)\n     {\n-        char nextChar = next();\n-        if ( nextChar == 0 )\n-        {\n-            return false;\n-        }\n-        back();\n-        return true;\n+      return false;\n     }\n-\n-    /**\n-     * Get the next character in the source string.\n-     *\n-     * @return The next character, or 0 if past the end of the source string.\n-     */\n-    public char next() throws JSONException\n+    back();\n+    return true;\n+  }\n+\n+  /**\n+   * Get the next character in the source string.\n+   *\n+   * @return The next character, or 0 if past the end of the source string.\n+   */\n+  public char next() throws JSONException\n+  {\n+    if (this.useLastChar)\n     {\n-        if ( this.useLastChar )\n-        {\n-            this.useLastChar = false;\n-            if ( this.lastChar != 0 )\n-            {\n-                this.index += 1;\n-            }\n-            return this.lastChar;\n-        }\n-        int c;\n-        try\n-        {\n-            c = this.reader.read();\n-        }\n-        catch ( IOException exc )\n-        {\n-            throw new JSONException( exc );\n-        }\n-\n-        if ( c <= 0 )\n-        { // End of stream\n-            this.lastChar = 0;\n-            return 0;\n-        }\n+      this.useLastChar = false;\n+      if (this.lastChar != 0)\n+      {\n         this.index += 1;\n-        this.lastChar = (char) c;\n-        return this.lastChar;\n+      }\n+      return this.lastChar;\n     }\n-\n-    /**\n-     * Consume the next character, and check that it matches a specified\n-     * character.\n-     *\n-     * @param c The character to match.\n-     * @return The character.\n-     * @throws JSONException if the character does not match.\n-     */\n-    public char next( char c ) throws JSONException\n+    int c;\n+    try\n     {\n-        char n = next();\n-        if ( n != c )\n-        {\n-            throw syntaxError( \"Expected '\" + c + \"' and instead saw '\" + n + \"'\" );\n-        }\n-        return n;\n+      c = this.reader.read();\n+    } catch (IOException exc)\n+    {\n+      throw new JSONException(exc);\n     }\n \n-    /**\n-     * Get the next n characters.\n-     *\n-     * @param n The number of characters to take.\n-     * @return A string of n characters.\n-     * @throws JSONException Substring bounds error if there are not\n-     * n characters remaining in the source string.\n-     */\n-    public String next( int n ) throws JSONException\n+    if (c <= 0)\n+    { // End of stream\n+      this.lastChar = 0;\n+      return 0;\n+    }\n+    this.index += 1;\n+    this.lastChar = (char) c;\n+    return this.lastChar;\n+  }\n+\n+  /**\n+   * Consume the next character, and check that it matches a specified\n+   * character.\n+   *\n+   * @param c The character to match.\n+   * @return The character.\n+   * @throws JSONException if the character does not match.\n+   */\n+  public char next(char c) throws JSONException\n+  {\n+    char n = next();\n+    if (n != c)\n     {\n-        if ( n == 0 )\n-        {\n-            return \"\";\n-        }\n-\n-        char[] buffer = new char[n];\n-        int pos = 0;\n-\n-        if ( this.useLastChar )\n-        {\n-            this.useLastChar = false;\n-            buffer[0] = this.lastChar;\n-            pos = 1;\n-        }\n+      throw syntaxError(\"Expected '\" + c + \"' and instead saw '\" + n + \"'\");\n+    }\n+    return n;\n+  }\n+\n+  /**\n+   * Get the next n characters.\n+   *\n+   * @param n The number of characters to take.\n+   * @return A string of n characters.\n+   * @throws JSONException Substring bounds error if there are not\n+   *                       n characters remaining in the source string.\n+   */\n+  public String next(int n) throws JSONException\n+  {\n+    if (n == 0)\n+    {\n+      return \"\";\n+    }\n \n-        try\n-        {\n-            int len;\n-            while ( (pos < n) && ((len = reader.read( buffer, pos, n - pos )) != -1) )\n-            {\n-                pos += len;\n-            }\n-        }\n-        catch ( IOException exc )\n-        {\n-            throw new JSONException( exc );\n-        }\n-        this.index += pos;\n+    char[] buffer = new char[n];\n+    int pos = 0;\n \n-        if ( pos < n )\n-        {\n-            throw syntaxError( \"Substring bounds error\" );\n-        }\n+    if (this.useLastChar)\n+    {\n+      this.useLastChar = false;\n+      buffer[0] = this.lastChar;\n+      pos = 1;\n+    }\n \n-        this.lastChar = buffer[n - 1];\n-        return new String( buffer );\n+    try\n+    {\n+      int len;\n+      while ((pos < n) && ((len = reader.read(buffer, pos, n - pos)) != -1))\n+      {\n+        pos += len;\n+      }\n+    } catch (IOException exc)\n+    {\n+      throw new JSONException(exc);\n     }\n+    this.index += pos;\n \n-    /**\n-     * Get the next char in the string, skipping whitespace.\n-     *\n-     * @return A character, or 0 if there are no more characters.\n-     * @throws JSONException\n-     */\n-    public char nextClean() throws JSONException\n+    if (pos < n)\n     {\n-        for ( ; ; )\n-        {\n-            char c = next();\n-            if ( c == 0 || c > ' ' )\n-            {\n-                return c;\n-            }\n-        }\n+      throw syntaxError(\"Substring bounds error\");\n     }\n \n-    /**\n-     * Return the characters up to the next close quote character.\n-     * Backslash processing is done. The formal JSON format does not\n-     * allow strings in single quotes, but an implementation is allowed to\n-     * accept them.\n-     *\n-     * @param quote The quoting character, either\n-     * <code>\"</code>&nbsp;<small>(double quote)</small> or\n-     * <code>'</code>&nbsp;<small>(single quote)</small>.\n-     * @return A String.\n-     * @throws JSONException Unterminated string.\n-     */\n-    public String nextString( char quote ) throws JSONException\n+    this.lastChar = buffer[n - 1];\n+    return new String(buffer);\n+  }\n+\n+  /**\n+   * Get the next char in the string, skipping whitespace.\n+   *\n+   * @return A character, or 0 if there are no more characters.\n+   * @throws JSONException\n+   */\n+  public char nextClean() throws JSONException\n+  {\n+    for (; ; )\n     {\n-        char c;\n-        StringBuilder sb = new StringBuilder();\n-        for ( ; ; )\n-        {\n-            c = next();\n-            switch ( c )\n-            {\n-            case 0:\n-            case '\\n':\n-            case '\\r':\n-                throw syntaxError( \"Unterminated string\" );\n+      char c = next();\n+      if (c == 0 || c > ' ')\n+      {\n+        return c;\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Return the characters up to the next close quote character.\n+   * Backslash processing is done. The formal JSON format does not\n+   * allow strings in single quotes, but an implementation is allowed to\n+   * accept them.\n+   *\n+   * @param quote The quoting character, either\n+   *              <code>\"</code>&nbsp;<small>(double quote)</small> or\n+   *              <code>'</code>&nbsp;<small>(single quote)</small>.\n+   * @return A String.\n+   * @throws JSONException Unterminated string.\n+   */\n+  public String nextString(char quote) throws JSONException\n+  {\n+    char c;\n+    StringBuilder sb = new StringBuilder();\n+    for (; ; )\n+    {\n+      c = next();\n+      switch (c)\n+      {\n+        case 0:\n+        case '\\n':\n+        case '\\r':\n+          throw syntaxError(\"Unterminated string\");\n+        case '\\\\':\n+          c = next();\n+          switch (c)\n+          {\n+            case 'b':\n+              sb.append('\\b');\n+              break;\n+            case 't':\n+              sb.append('\\t');\n+              break;\n+            case 'n':\n+              sb.append('\\n');\n+              break;\n+            case 'f':\n+              sb.append('\\f');\n+              break;\n+            case 'r':\n+              sb.append('\\r');\n+              break;\n+            case 'u':\n+              sb.append((char) Integer.parseInt(next(4), 16));\n+              break;\n+            case '\"':\n+            case '\\'':\n             case '\\\\':\n-                c = next();\n-                switch ( c )\n-                {\n-                case 'b':\n-                    sb.append( '\\b' );\n-                    break;\n-                case 't':\n-                    sb.append( '\\t' );\n-                    break;\n-                case 'n':\n-                    sb.append( '\\n' );\n-                    break;\n-                case 'f':\n-                    sb.append( '\\f' );\n-                    break;\n-                case 'r':\n-                    sb.append( '\\r' );\n-                    break;\n-                case 'u':\n-                    sb.append( (char) Integer.parseInt( next( 4 ), 16 ) );\n-                    break;\n-                case '\"':\n-                case '\\'':\n-                case '\\\\':\n-                case '/':\n-                    sb.append( c );\n-                    break;\n-                default:\n-                    throw syntaxError( \"Illegal escape.\" );\n-                }\n-                break;\n+            case '/':\n+              sb.append(c);\n+              break;\n             default:\n-                if ( c == quote )\n-                {\n-                    return sb.toString();\n-                }\n-                sb.append( c );\n-            }\n-        }\n+              throw syntaxError(\"Illegal escape.\");\n+          }\n+          break;\n+        default:\n+          if (c == quote)\n+          {\n+            return sb.toString();\n+          }\n+          sb.append(c);\n+      }\n     }\n-\n-    /**\n-     * Get the text up but not including the specified character or the\n-     * end of line, whichever comes first.\n-     *\n-     * @param d A delimiter character.\n-     * @return A string.\n-     */\n-    public String nextTo( char d ) throws JSONException\n+  }\n+\n+  /**\n+   * Get the text up but not including the specified character or the\n+   * end of line, whichever comes first.\n+   *\n+   * @param d A delimiter character.\n+   * @return A string.\n+   */\n+  public String nextTo(char d) throws JSONException\n+  {\n+    StringBuilder sb = new StringBuilder();\n+    for (; ; )\n     {\n-        StringBuilder sb = new StringBuilder();\n-        for ( ; ; )\n+      char c = next();\n+      if (c == d || c == 0 || c == '\\n' || c == '\\r')\n+      {\n+        if (c != 0)\n         {\n-            char c = next();\n-            if ( c == d || c == 0 || c == '\\n' || c == '\\r' )\n-            {\n-                if ( c != 0 )\n-                {\n-                    back();\n-                }\n-                return sb.toString().trim();\n-            }\n-            sb.append( c );\n+          back();\n         }\n+        return sb.toString().trim();\n+      }\n+      sb.append(c);\n     }\n-\n-    /**\n-     * Get the text up but not including one of the specified delimiter\n-     * characters or the end of line, whichever comes first.\n-     *\n-     * @param delimiters A set of delimiter characters.\n-     * @return A string, trimmed.\n-     */\n-    public String nextTo( String delimiters ) throws JSONException\n+  }\n+\n+  /**\n+   * Get the text up but not including one of the specified delimiter\n+   * characters or the end of line, whichever comes first.\n+   *\n+   * @param delimiters A set of delimiter characters.\n+   * @return A string, trimmed.\n+   */\n+  public String nextTo(String delimiters) throws JSONException\n+  {\n+    char c;\n+    StringBuilder sb = new StringBuilder();\n+    for (; ; )\n     {\n-        char c;\n-        StringBuilder sb = new StringBuilder();\n-        for ( ; ; )\n+      c = next();\n+      if (delimiters.indexOf(c) >= 0 || c == 0 || c == '\\n' || c == '\\r')\n+      {\n+        if (c != 0)\n         {\n-            c = next();\n-            if ( delimiters.indexOf( c ) >= 0 || c == 0 || c == '\\n' || c == '\\r' )\n-            {\n-                if ( c != 0 )\n-                {\n-                    back();\n-                }\n-                return sb.toString().trim();\n-            }\n-            sb.append( c );\n+          back();\n         }\n+        return sb.toString().trim();\n+      }\n+      sb.append(c);\n     }\n-\n-    /**\n-     * Get the next value. The value can be a Boolean, Double, Integer,\n-     * JSONArray, JSONObject, Long, or String, or the JSONObject.NULL object.\n-     *\n-     * @return An object.\n-     * @throws JSONException If syntax error.\n-     */\n-    public Object nextValue() throws JSONException\n+  }\n+\n+  /**\n+   * Get the next value. The value can be a Boolean, Double, Integer,\n+   * JSONArray, JSONObject, Long, or String, or the JSONObject.NULL object.\n+   *\n+   * @return An object.\n+   * @throws JSONException If syntax error.\n+   */\n+  public Object nextValue() throws JSONException\n+  {\n+    char c = nextClean();\n+    String s;\n+\n+    switch (c)\n     {\n-        char c = nextClean();\n-        String s;\n-\n-        switch ( c )\n-        {\n-        case '\"':\n-        case '\\'':\n-            return nextString( c );\n-        case '{':\n-            back();\n-            return new JSONObject( this );\n-        case '[':\n-        case '(':\n-            back();\n-            return new JSONArray( this );\n-        default:\n-            break;\n-        }\n-\n-        /*\n-         * Handle unquoted text. This could be the values true, false, or\n-         * null, or it can be a number. An implementation (such as this one)\n-         * is allowed to also accept non-standard forms.\n-         *\n-         * Accumulate characters until we reach the end of the text or a\n-         * formatting character.\n-         */\n-\n-        StringBuilder sb = new StringBuilder();\n-        while ( c >= ' ' && \",:]}/\\\\\\\"[{;=#\".indexOf( c ) < 0 )\n-        {\n-            sb.append( c );\n-            c = next();\n-        }\n+      case '\"':\n+      case '\\'':\n+        return nextString(c);\n+      case '{':\n         back();\n-\n-        s = sb.toString().trim();\n-        if ( s.equals( \"\" ) )\n-        {\n-            throw syntaxError( \"Missing value\" );\n-        }\n-        return JSONObject.stringToValue( s );\n+        return new JSONObject(this);\n+      case '[':\n+      case '(':\n+        back();\n+        return new JSONArray(this);\n+      default:\n+        break;\n     }\n \n-    /**\n-     * Skip characters until the next character is the requested character.\n-     * If the requested character is not found, no characters are skipped.\n+    /*\n+     * Handle unquoted text. This could be the values true, false, or\n+     * null, or it can be a number. An implementation (such as this one)\n+     * is allowed to also accept non-standard forms.\n      *\n-     * @param to A character to skip to.\n-     * @return The requested character, or zero if the requested character\n-     * is not found.\n+     * Accumulate characters until we reach the end of the text or a\n+     * formatting character.\n      */\n-    public char skipTo( char to ) throws JSONException\n-    {\n-        char c;\n-        try\n-        {\n-            int startIndex = this.index;\n-            reader.mark( Integer.MAX_VALUE );\n-            do\n-            {\n-                c = next();\n-                if ( c == 0 )\n-                {\n-                    reader.reset();\n-                    this.index = startIndex;\n-                    return c;\n-                }\n-            }\n-            while ( c != to );\n-        }\n-        catch ( IOException exc )\n-        {\n-            throw new JSONException( exc );\n-        }\n \n-        back();\n-        return c;\n+    StringBuilder sb = new StringBuilder();\n+    while (c >= ' ' && \",:]}/\\\\\\\"[{;=#\".indexOf(c) < 0)\n+    {\n+      sb.append(c);\n+      c = next();\n     }\n+    back();\n \n-    /**\n-     * Make a JSONException to signal a syntax error.\n-     *\n-     * @param message The error message.\n-     * @return A JSONException object, suitable for throwing\n-     */\n-    public JSONException syntaxError( String message )\n+    s = sb.toString().trim();\n+    if (s.equals(\"\"))\n     {\n-        return new JSONException( message + toString() );\n+      throw syntaxError(\"Missing value\");\n     }\n-\n-    /**\n-     * Make a printable string of this JSONTokener.\n-     *\n-     * @return \" at character [this.index]\"\n-     */\n-    @Override\n-    public String toString()\n+    return JSONObject.stringToValue(s);\n+  }\n+\n+  /**\n+   * Skip characters until the next character is the requested character.\n+   * If the requested character is not found, no characters are skipped.\n+   *\n+   * @param to A character to skip to.\n+   * @return The requested character, or zero if the requested character\n+   * is not found.\n+   */\n+  public char skipTo(char to) throws JSONException\n+  {\n+    char c;\n+    try\n     {\n-        return \" at character \" + index;\n+      int startIndex = this.index;\n+      reader.mark(Integer.MAX_VALUE);\n+      do\n+      {\n+        c = next();\n+        if (c == 0)\n+        {\n+          reader.reset();\n+          this.index = startIndex;\n+          return c;\n+        }\n+      }\n+      while (c != to);\n+    } catch (IOException exc)\n+    {\n+      throw new JSONException(exc);\n     }\n+\n+    back();\n+    return c;\n+  }\n+\n+  /**\n+   * Make a JSONException to signal a syntax error.\n+   *\n+   * @param message The error message.\n+   * @return A JSONException object, suitable for throwing\n+   */\n+  public JSONException syntaxError(String message)\n+  {\n+    return new JSONException(message + toString());\n+  }\n+\n+  /**\n+   * Make a printable string of this JSONTokener.\n+   *\n+   * @return \" at character [this.index]\"\n+   */\n+  @Override\n+  public String toString()\n+  {\n+    return \" at character \" + index;\n+  }\n }\n",
            "diff_size": 578
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4298/JSONTokener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4298/JSONTokener.java\nindex dc3e1c8c02c..99527b184c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4298/JSONTokener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4298/JSONTokener.java\n@@ -58,7 +58,6 @@ SOFTWARE.\n  */\n public class JSONTokener\n {\n-\n     private int index;\n     private Reader reader;\n     private char lastChar;\n@@ -99,13 +98,15 @@ public class JSONTokener\n         {\n             return c - '0';\n         }\n-        if ( c >= 'A' && c <= 'F' )\n+\n+if ( c >= 'A' && c <= 'F' )\n         {\n-            return c - ('A' - 10);\n+            return c - ( 'A' - 10 );\n         }\n-        if ( c >= 'a' && c <= 'f' )\n+\n+if ( c >= 'a' && c <= 'f' )\n         {\n-            return c - ('a' - 10);\n+            return c - ( 'a' - 10 );\n         }\n         return -1;\n     }\n@@ -121,7 +122,8 @@ public class JSONTokener\n         {\n             throw new JSONException( \"Stepping back two steps is not supported\" );\n         }\n-        index -= 1;\n+\n+index -= 1;\n         useLastChar = true;\n     }\n \n@@ -138,7 +140,8 @@ public class JSONTokener\n         {\n             return false;\n         }\n-        back();\n+\n+back();\n         return true;\n     }\n \n@@ -193,7 +196,8 @@ public class JSONTokener\n         {\n             throw syntaxError( \"Expected '\" + c + \"' and instead saw '\" + n + \"'\" );\n         }\n-        return n;\n+\n+return n;\n     }\n \n     /**\n@@ -224,7 +228,7 @@ public class JSONTokener\n         try\n         {\n             int len;\n-            while ( (pos < n) && ((len = reader.read( buffer, pos, n - pos )) != -1) )\n+            while ( ( pos < n) && ((len = reader.read( buffer, pos, n - pos )) != -1) )\n             {\n                 pos += len;\n             }\n@@ -348,7 +352,8 @@ public class JSONTokener\n                 {\n                     back();\n                 }\n-                return sb.toString().trim();\n+\n+return sb.toString().trim();\n             }\n             sb.append( c );\n         }\n@@ -374,7 +379,8 @@ public class JSONTokener\n                 {\n                     back();\n                 }\n-                return sb.toString().trim();\n+\n+return sb.toString().trim();\n             }\n             sb.append( c );\n         }\n@@ -391,8 +397,7 @@ public class JSONTokener\n     {\n         char c = nextClean();\n         String s;\n-\n-        switch ( c )\n+switch ( c )\n         {\n         case '\"':\n         case '\\'':\n@@ -423,14 +428,16 @@ public class JSONTokener\n             sb.append( c );\n             c = next();\n         }\n-        back();\n+\n+back();\n \n         s = sb.toString().trim();\n         if ( s.equals( \"\" ) )\n         {\n             throw syntaxError( \"Missing value\" );\n         }\n-        return JSONObject.stringToValue( s );\n+\n+return JSONObject.stringToValue( s );\n     }\n \n     /**\n@@ -490,4 +497,4 @@ public class JSONTokener\n     {\n         return \" at character \" + index;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
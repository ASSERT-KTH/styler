{
    "project_name": "neo4j-neo4j",
    "error_id": "2363",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "118",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2363/PropertyPhysicalToLogicalConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2363/PropertyPhysicalToLogicalConverter.java\nindex bf4b4259dd0..bed78633e74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2363/PropertyPhysicalToLogicalConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2363/PropertyPhysicalToLogicalConverter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.Arrays;\n@@ -30,7 +31,7 @@ import org.neo4j.values.storable.Value;\n \n public class PropertyPhysicalToLogicalConverter\n {\n-    private static final Comparator<PropertyBlock> BLOCK_COMPARATOR = Comparator.comparingInt( PropertyBlock::getKeyIndexId );\n+    private static final Comparator<PropertyBlock> BLOCK_COMPARATOR = Comparator.comparingInt(PropertyBlock::getKeyIndexId);\n \n     private final PropertyStore propertyStore;\n     private final PageCursorTracer cursorTracer;\n@@ -39,7 +40,7 @@ public class PropertyPhysicalToLogicalConverter\n     private PropertyBlock[] afterBlocks = new PropertyBlock[8];\n     private int afterBlocksCursor;\n \n-    public PropertyPhysicalToLogicalConverter( PropertyStore propertyStore, PageCursorTracer cursorTracer )\n+    public PropertyPhysicalToLogicalConverter(PropertyStore propertyStore, PageCursorTracer cursorTracer)\n     {\n         this.propertyStore = propertyStore;\n         this.cursorTracer = cursorTracer;\n@@ -48,13 +49,13 @@ public class PropertyPhysicalToLogicalConverter\n     /**\n      * Converts physical changes to PropertyRecords for a entity into logical updates\n      */\n-    public void convertPropertyRecord( EntityCommandGrouper<?>.Cursor changes, EntityUpdates.Builder properties )\n+    public void convertPropertyRecord(EntityCommandGrouper<?>.Cursor changes, EntityUpdates.Builder properties)\n     {\n-        mapBlocks( changes );\n+        mapBlocks(changes);\n \n         int bc = 0;\n         int ac = 0;\n-        while ( bc < beforeBlocksCursor || ac < afterBlocksCursor )\n+        while (bc < beforeBlocksCursor || ac < afterBlocksCursor)\n         {\n             PropertyBlock beforeBlock = null;\n             PropertyBlock afterBlock = null;\n@@ -62,30 +63,28 @@ public class PropertyPhysicalToLogicalConverter\n             int beforeKey = Integer.MAX_VALUE;\n             int afterKey = Integer.MAX_VALUE;\n             int key;\n-            if ( bc < beforeBlocksCursor )\n+            if (bc < beforeBlocksCursor)\n             {\n                 beforeBlock = beforeBlocks[bc];\n                 beforeKey = beforeBlock.getKeyIndexId();\n             }\n-            if ( ac < afterBlocksCursor )\n+            if (ac < afterBlocksCursor)\n             {\n                 afterBlock = afterBlocks[ac];\n                 afterKey = afterBlock.getKeyIndexId();\n             }\n \n-            if ( beforeKey < afterKey )\n+            if (beforeKey < afterKey)\n             {\n                 afterBlock = null;\n                 key = beforeKey;\n                 bc++;\n-            }\n-            else if ( beforeKey > afterKey )\n+            } else if (beforeKey > afterKey)\n             {\n                 beforeBlock = null;\n                 key = afterKey;\n                 ac++;\n-            }\n-            else\n+            } else\n             {\n                 // They are the same\n                 key = afterKey;\n@@ -93,70 +92,68 @@ public class PropertyPhysicalToLogicalConverter\n                 ac++;\n             }\n \n-            if ( beforeBlock != null && afterBlock != null )\n+            if (beforeBlock != null && afterBlock != null)\n             {\n                 // CHANGE\n-                if ( !beforeBlock.hasSameContentsAs( afterBlock ) )\n+                if (!beforeBlock.hasSameContentsAs(afterBlock))\n                 {\n-                    Value beforeVal = valueOf( beforeBlock );\n-                    Value afterVal = valueOf( afterBlock );\n-                    properties.changed( key, beforeVal, afterVal );\n+                    Value beforeVal = valueOf(beforeBlock);\n+                    Value afterVal = valueOf(afterBlock);\n+                    properties.changed(key, beforeVal, afterVal);\n                 }\n-            }\n-            else\n+            } else\n             {\n                 // ADD/REMOVE\n-                if ( afterBlock != null )\n+                if (afterBlock != null)\n                 {\n-                    properties.added( key, valueOf( afterBlock ) );\n-                }\n-                else\n+                    properties.added(key, valueOf(afterBlock));\n+                } else\n                 {\n-                    properties.removed( key, valueOf( beforeBlock ) );\n+                    properties.removed(key, valueOf(beforeBlock));\n                 }\n             }\n         }\n     }\n \n-    private void mapBlocks( EntityCommandGrouper<?>.Cursor changes )\n+    private void mapBlocks(EntityCommandGrouper<?>.Cursor changes)\n     {\n         beforeBlocksCursor = 0;\n         afterBlocksCursor = 0;\n-        while ( true )\n+        while (true)\n         {\n             Command.PropertyCommand change = changes.nextProperty();\n-            if ( change == null )\n+            if (change == null)\n             {\n                 break;\n             }\n \n-            for ( PropertyBlock block : change.getBefore() )\n+            for (PropertyBlock block : change.getBefore())\n             {\n-                if ( beforeBlocksCursor == beforeBlocks.length )\n+                if (beforeBlocksCursor == beforeBlocks.length)\n                 {\n-                    beforeBlocks = Arrays.copyOf( beforeBlocks, beforeBlocksCursor * 2 );\n+                    beforeBlocks = Arrays.copyOf(beforeBlocks, beforeBlocksCursor * 2);\n                 }\n                 beforeBlocks[beforeBlocksCursor++] = block;\n             }\n-            for ( PropertyBlock block : change.getAfter() )\n+            for (PropertyBlock block : change.getAfter())\n             {\n-                if ( afterBlocksCursor == afterBlocks.length )\n+                if (afterBlocksCursor == afterBlocks.length)\n                 {\n-                    afterBlocks = Arrays.copyOf( afterBlocks, afterBlocksCursor * 2 );\n+                    afterBlocks = Arrays.copyOf(afterBlocks, afterBlocksCursor * 2);\n                 }\n                 afterBlocks[afterBlocksCursor++] = block;\n             }\n         }\n-        Arrays.sort( beforeBlocks, 0, beforeBlocksCursor, BLOCK_COMPARATOR );\n-        Arrays.sort( afterBlocks, 0, afterBlocksCursor, BLOCK_COMPARATOR );\n+        Arrays.sort(beforeBlocks, 0, beforeBlocksCursor, BLOCK_COMPARATOR);\n+        Arrays.sort(afterBlocks, 0, afterBlocksCursor, BLOCK_COMPARATOR);\n     }\n \n-    private Value valueOf( PropertyBlock block )\n+    private Value valueOf(PropertyBlock block)\n     {\n-        if ( block == null )\n+        if (block == null)\n         {\n             return null;\n         }\n-        return block.getType().value( block, propertyStore, cursorTracer );\n+        return block.getType().value(block, propertyStore, cursorTracer);\n     }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2363/PropertyPhysicalToLogicalConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2363/PropertyPhysicalToLogicalConverter.java\nindex bf4b4259dd0..583e2ec5a4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2363/PropertyPhysicalToLogicalConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2363/PropertyPhysicalToLogicalConverter.java\n@@ -159,4 +159,4 @@ public class PropertyPhysicalToLogicalConverter\n         }\n         return block.getType().value( block, propertyStore, cursorTracer );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "130",
    "information": {
        "errors": [
            {
                "line": "69",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    throws CompilationException;\n\n    OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType, Object[] resultType)\n            throws CompilationException;\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/130/CompilerContext.java\nindex 69ea5b68568..c73e19e6138 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/130/CompilerContext.java\n@@ -66,8 +66,9 @@ public interface CompilerContext {\n     OLValueExpression compileLValueExpr(Expression expr)\n     throws CompilationException;\n \n-    OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType, Object[] resultType)\n-            throws CompilationException;\n+    OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType,\n+            Object[] resultType)\n+             throws CompilationException;\n \n     /**\n      * BPEL 1.1 legacy.\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/130/CompilerContext.java\nindex 69ea5b68568..417cd4365a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/130/CompilerContext.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.compiler.api;\n \n import java.net.URI;\n@@ -52,112 +53,114 @@ import org.apache.ode.utils.NSContext;\n  */\n public interface CompilerContext {\n \n-    OExpression constantExpr(boolean value);\n+  OExpression constantExpr(boolean value);\n \n-    OExpression compileJoinCondition(Expression expr)\n-            throws CompilationException;\n+  OExpression compileJoinCondition(Expression expr)\n+    throws CompilationException;\n \n-    OExpression compileExpr(Expression expr)\n+  OExpression compileExpr(Expression expr)\n     throws CompilationException;\n \n-    OExpression compileExpr(Expression expr, OVarType rootNodeType, Object requestedResultType, Object[] resultType)\n-            throws CompilationException;\n+  OExpression compileExpr(Expression expr, OVarType rootNodeType, Object requestedResultType, Object[] resultType)\n+    throws CompilationException;\n \n-    OLValueExpression compileLValueExpr(Expression expr)\n+  OLValueExpression compileLValueExpr(Expression expr)\n     throws CompilationException;\n \n-    OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType, Object[] resultType)\n-            throws CompilationException;\n+  OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType,\n+                                      Object[] resultType)\n+    throws CompilationException;\n \n-    /**\n-     * BPEL 1.1 legacy.\n-     * @param locationstr\n-     * @param nsContext\n-     * @return\n-     * @throws CompilationException\n-     */\n-    OExpression compileExpr(String locationstr, NSContext nsContext)\n-            throws CompilationException;\n+  /**\n+   * BPEL 1.1 legacy.\n+   *\n+   * @param locationstr\n+   * @param nsContext\n+   * @return\n+   * @throws CompilationException\n+   */\n+  OExpression compileExpr(String locationstr, NSContext nsContext)\n+    throws CompilationException;\n \n-    OXslSheet compileXslt(String docStrUri)\n-            throws CompilationException;\n+  OXslSheet compileXslt(String docStrUri)\n+    throws CompilationException;\n \n-    OXsdTypeVarType resolveXsdType(QName typeName)\n-            throws CompilationException;\n+  OXsdTypeVarType resolveXsdType(QName typeName)\n+    throws CompilationException;\n \n-    OProcess.OProperty resolveProperty(QName name)\n-            throws CompilationException;\n+  OProcess.OProperty resolveProperty(QName name)\n+    throws CompilationException;\n \n-    OScope.Variable resolveVariable(String name)\n-            throws CompilationException;\n+  OScope.Variable resolveVariable(String name)\n+    throws CompilationException;\n \n-    List<OScope.Variable> getAccessibleVariables();\n+  List<OScope.Variable> getAccessibleVariables();\n \n-    OScope.Variable resolveMessageVariable(String inputVar)\n-            throws CompilationException;\n+  OScope.Variable resolveMessageVariable(String inputVar)\n+    throws CompilationException;\n \n-    OScope.Variable resolveMessageVariable(String inputVar, QName messageType)\n-            throws CompilationException;\n+  OScope.Variable resolveMessageVariable(String inputVar, QName messageType)\n+    throws CompilationException;\n \n-    OMessageVarType.Part resolvePart(OScope.Variable variable, String partname)\n-            throws CompilationException;\n+  OMessageVarType.Part resolvePart(OScope.Variable variable, String partname)\n+    throws CompilationException;\n \n-    OMessageVarType.Part resolveHeaderPart(OScope.Variable variable, String partname)\n-            throws CompilationException;\n+  OMessageVarType.Part resolveHeaderPart(OScope.Variable variable, String partname)\n+    throws CompilationException;\n \n-    OActivity compile(Activity child)\n-            throws CompilationException;\n+  OActivity compile(Activity child)\n+    throws CompilationException;\n \n-    OScope compileSLC(ScopeLikeActivity child, Variable[] variables);\n+  OScope compileSLC(ScopeLikeActivity child, Variable[] variables);\n \n-    OPartnerLink resolvePartnerLink(String name)\n-            throws CompilationException;\n+  OPartnerLink resolvePartnerLink(String name)\n+    throws CompilationException;\n \n-    Operation resolvePartnerRoleOperation(OPartnerLink partnerLink, String operationName)\n-            throws CompilationException;\n+  Operation resolvePartnerRoleOperation(OPartnerLink partnerLink, String operationName)\n+    throws CompilationException;\n \n-    Operation resolveMyRoleOperation(OPartnerLink partnerLink, String operationName)\n-            throws CompilationException;\n+  Operation resolveMyRoleOperation(OPartnerLink partnerLink, String operationName)\n+    throws CompilationException;\n \n-    OProcess.OPropertyAlias resolvePropertyAlias(OScope.Variable variable, QName property)\n-            throws CompilationException;\n+  OProcess.OPropertyAlias resolvePropertyAlias(OScope.Variable variable, QName property)\n+    throws CompilationException;\n \n-    void recoveredFromError(SourceLocation where, CompilationException bce)\n-            throws CompilationException;\n+  void recoveredFromError(SourceLocation where, CompilationException bce)\n+    throws CompilationException;\n \n-    OLink resolveLink(String linkName)\n-            throws CompilationException;\n+  OLink resolveLink(String linkName)\n+    throws CompilationException;\n \n-    OScope resolveCompensatableScope(String scopeToCompensate)\n-            throws CompilationException;\n+  OScope resolveCompensatableScope(String scopeToCompensate)\n+    throws CompilationException;\n \n-    OProcess getOProcess()\n-            throws CompilationException;\n+  OProcess getOProcess()\n+    throws CompilationException;\n \n-    OScope.CorrelationSet resolveCorrelationSet(String csetName)\n-            throws CompilationException;\n+  OScope.CorrelationSet resolveCorrelationSet(String csetName)\n+    throws CompilationException;\n \n-    String getSourceLocation();\n+  String getSourceLocation();\n \n-    boolean isPartnerLinkAssigned(String plink);\n+  boolean isPartnerLinkAssigned(String plink);\n \n-    List<OActivity> getActivityStack();\n+  List<OActivity> getActivityStack();\n \n-    OActivity getCurrent();\n+  OActivity getCurrent();\n \n-    Map<URI, Source> getSchemaSources();\n+  Map<URI, Source> getSchemaSources();\n \n-    /**\n-     * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n-     *\n-     * @return URI - the URI representing the absolute physical file path location that this process is defined within.\n-     */\n-    URI getBaseResourceURI();\n+  /**\n+   * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n+   *\n+   * @return URI - the URI representing the absolute physical file path location that this process is defined within.\n+   */\n+  URI getBaseResourceURI();\n \n-    public NSContext tryCacheNamespaceContext(NSContext nsContext);\n+  public NSContext tryCacheNamespaceContext(NSContext nsContext);\n \n-\tboolean isExtensionDeclared(String namespace);\n+  boolean isExtensionDeclared(String namespace);\n \n-    ExtensionValidator getExtensionValidator(QName extensionElementName);\n+  ExtensionValidator getExtensionValidator(QName extensionElementName);\n \n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/130/CompilerContext.java\nindex 69ea5b68568..43161774db0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/130/CompilerContext.java\n@@ -155,9 +155,7 @@ public interface CompilerContext {\n     URI getBaseResourceURI();\n \n     public NSContext tryCacheNamespaceContext(NSContext nsContext);\n+boolean isExtensionDeclared(String namespace);\n+ExtensionValidator getExtensionValidator(QName extensionElementName);\n \n-\tboolean isExtensionDeclared(String namespace);\n-\n-    ExtensionValidator getExtensionValidator(QName extensionElementName);\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/130/CompilerContext.java\nindex 69ea5b68568..c73e19e6138 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/130/CompilerContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/130/CompilerContext.java\n@@ -66,8 +66,9 @@ public interface CompilerContext {\n     OLValueExpression compileLValueExpr(Expression expr)\n     throws CompilationException;\n \n-    OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType, Object[] resultType)\n-            throws CompilationException;\n+    OLValueExpression compileLValueExpr(Expression expr, OVarType rootNodeType, Object requestedResultType,\n+            Object[] resultType)\n+             throws CompilationException;\n \n     /**\n      * BPEL 1.1 legacy.\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
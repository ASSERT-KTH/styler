{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3126",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3126/LogFileInformation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3126/LogFileInformation.java\nindex 90f32915456..0cbaee8a121 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3126/LogFileInformation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3126/LogFileInformation.java\n@@ -17,41 +17,43 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.IOException;\n \n public interface LogFileInformation\n {\n-    /**\n-     * @return the reachable entry that is farthest back of them all, in any existing version.\n-     */\n-    long getFirstExistingEntryId() throws IOException;\n+  /**\n+   * @return the reachable entry that is farthest back of them all, in any existing version.\n+   */\n+  long getFirstExistingEntryId() throws IOException;\n \n-    /**\n-     * @param version the log version to get first committed tx for.\n-     * @return the first committed entry id for the log with {@code version}.\n-     * If that log doesn't exist -1 is returned.\n-     */\n-    long getFirstEntryId( long version ) throws IOException;\n+  /**\n+   * @param version the log version to get first committed tx for.\n+   * @return the first committed entry id for the log with {@code version}.\n+   * If that log doesn't exist -1 is returned.\n+   */\n+  long getFirstEntryId(long version) throws IOException;\n \n-    /**\n-     * @return the last committed entry id for this Log\n-     */\n-    long getLastEntryId();\n+  /**\n+   * @return the last committed entry id for this Log\n+   */\n+  long getLastEntryId();\n \n-    /**\n-     * @param version the log version to get first entry timestamp for.\n-     * @return the timestamp for the start record for the first encountered entry\n-     * in the log {@code version}.\n-     */\n-    long getFirstStartRecordTimestamp( long version ) throws IOException;\n+  /**\n+   * @param version the log version to get first entry timestamp for.\n+   * @return the timestamp for the start record for the first encountered entry\n+   * in the log {@code version}.\n+   */\n+  long getFirstStartRecordTimestamp(long version) throws IOException;\n \n-    /**\n-     * Checks if a transaction with the given transaction id exists on disk\n-     * @param transactionId The id of the transaction to check\n-     * @return True if the transaction with the given id is contained in an existing log file, false otherwise\n-     * @throws IOException If an IO exception occurred during scan of the log files\n-     */\n-    boolean transactionExistsOnDisk( long transactionId ) throws IOException;\n+  /**\n+   * Checks if a transaction with the given transaction id exists on disk\n+   *\n+   * @param transactionId The id of the transaction to check\n+   * @return True if the transaction with the given id is contained in an existing log file, false otherwise\n+   * @throws IOException If an IO exception occurred during scan of the log files\n+   */\n+  boolean transactionExistsOnDisk(long transactionId) throws IOException;\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3126/LogFileInformation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3126/LogFileInformation.java\nindex 90f32915456..6503cde18e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3126/LogFileInformation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3126/LogFileInformation.java\n@@ -54,4 +54,4 @@ public interface LogFileInformation\n      * @throws IOException If an IO exception occurred during scan of the log files\n      */\n     boolean transactionExistsOnDisk( long transactionId ) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
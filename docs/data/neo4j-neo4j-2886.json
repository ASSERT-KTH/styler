{
    "project_name": "neo4j-neo4j",
    "error_id": "2886",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2886/Evaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2886/Evaluation.java\nindex 66a5b8b8136..d5b58c1589a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2886/Evaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2886/Evaluation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n /**\n@@ -29,15 +30,15 @@ package org.neo4j.graphdb.traversal;\n  */\n public enum Evaluation\n {\n-    INCLUDE_AND_CONTINUE( true, true ),\n-    INCLUDE_AND_PRUNE( true, false ),\n-    EXCLUDE_AND_CONTINUE( false, true ),\n-    EXCLUDE_AND_PRUNE( false, false );\n+    INCLUDE_AND_CONTINUE(true, true),\n+    INCLUDE_AND_PRUNE(true, false),\n+    EXCLUDE_AND_CONTINUE(false, true),\n+    EXCLUDE_AND_PRUNE(false, false);\n \n     private final boolean includes;\n     private final boolean continues;\n \n-    Evaluation( boolean includes, boolean continues )\n+    Evaluation(boolean includes, boolean continues)\n     {\n         this.includes = includes;\n         this.continues = continues;\n@@ -65,17 +66,17 @@ public enum Evaluation\n      * Returns an {@link Evaluation} for the given {@code includes} and\n      * {@code continues}.\n      *\n-     * @param includes whether or not to include the {@link TraversalBranch}\n-     * in the traversal result.\n+     * @param includes  whether or not to include the {@link TraversalBranch}\n+     *                  in the traversal result.\n      * @param continues whether or not to continue down the\n-     * {@link TraversalBranch}.\n+     *                  {@link TraversalBranch}.\n      * @return an {@link Evaluation} representing {@code includes}\n      * and {@code continues}.\n      */\n-    public static Evaluation of( boolean includes, boolean continues )\n+    public static Evaluation of(boolean includes, boolean continues)\n     {\n         return includes ? (continues ? INCLUDE_AND_CONTINUE : INCLUDE_AND_PRUNE)\n-                        : (continues ? EXCLUDE_AND_CONTINUE : EXCLUDE_AND_PRUNE);\n+          : (continues ? EXCLUDE_AND_CONTINUE : EXCLUDE_AND_PRUNE);\n     }\n \n     /**\n@@ -85,11 +86,11 @@ public enum Evaluation\n      * for {@link Evaluation#continues()}.\n      *\n      * @param includes whether or not to include a {@link TraversalBranch}\n-     * in the traversal result.\n+     *                 in the traversal result.\n      * @return an {@link Evaluation} representing whether or not to include\n      * a {@link TraversalBranch} in the traversal result.\n      */\n-    public static Evaluation ofIncludes( boolean includes )\n+    public static Evaluation ofIncludes(boolean includes)\n     {\n         return includes ? INCLUDE_AND_CONTINUE : EXCLUDE_AND_CONTINUE;\n     }\n@@ -101,11 +102,11 @@ public enum Evaluation\n      * {@link Evaluation#includes()}.\n      *\n      * @param continues whether or not to continue further down a\n-     *            {@link TraversalBranch} in the traversal.\n+     *                  {@link TraversalBranch} in the traversal.\n      * @return an {@link Evaluation} representing whether or not to continue\n-     *         further down a {@link TraversalBranch} in the traversal.\n+     * further down a {@link TraversalBranch} in the traversal.\n      */\n-    public static Evaluation ofContinues( boolean continues )\n+    public static Evaluation ofContinues(boolean continues)\n     {\n         return continues ? INCLUDE_AND_CONTINUE : INCLUDE_AND_PRUNE;\n     }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2886/Evaluation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2886/Evaluation.java\nindex 66a5b8b8136..48753e36309 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2886/Evaluation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2886/Evaluation.java\n@@ -75,7 +75,7 @@ public enum Evaluation\n     public static Evaluation of( boolean includes, boolean continues )\n     {\n         return includes ? (continues ? INCLUDE_AND_CONTINUE : INCLUDE_AND_PRUNE)\n-                        : (continues ? EXCLUDE_AND_CONTINUE : EXCLUDE_AND_PRUNE);\n+                        : (continues ? EXCLUDE_AND_CONTINUE : EXCLUDE_AND_PRUNE );\n     }\n \n     /**\n@@ -109,4 +109,4 @@ public enum Evaluation\n     {\n         return continues ? INCLUDE_AND_CONTINUE : INCLUDE_AND_PRUNE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2533",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2533/SchemaIndexUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2533/SchemaIndexUsage.java\nindex a37c6c44b49..664bfcc1f36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2533/SchemaIndexUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2533/SchemaIndexUsage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.query;\n \n import java.util.HashMap;\n@@ -24,37 +25,37 @@ import java.util.Map;\n \n public class SchemaIndexUsage extends IndexUsage\n {\n-    private final String label;\n-    private final String[] propertyKeys;\n-    private final int labelId;\n+  private final String label;\n+  private final String[] propertyKeys;\n+  private final int labelId;\n \n-    public SchemaIndexUsage( String identifier, int labelId, String label, String... propertyKeys )\n-    {\n-        super( identifier );\n-        this.label = label;\n-        this.labelId = labelId;\n-        this.propertyKeys = propertyKeys;\n-    }\n+  public SchemaIndexUsage(String identifier, int labelId, String label, String... propertyKeys)\n+  {\n+    super(identifier);\n+    this.label = label;\n+    this.labelId = labelId;\n+    this.propertyKeys = propertyKeys;\n+  }\n \n-    public int getLabelId()\n-    {\n-        return labelId;\n-    }\n+  public int getLabelId()\n+  {\n+    return labelId;\n+  }\n \n-    @Override\n-    public Map<String,String> asMap()\n+  @Override\n+  public Map<String, String> asMap()\n+  {\n+    Map<String, String> map = new HashMap<>();\n+    map.put(\"indexType\", \"SCHEMA INDEX\");\n+    map.put(\"entityType\", \"NODE\");\n+    map.put(\"identifier\", identifier);\n+    map.put(\"label\", label);\n+    map.put(\"labelId\", String.valueOf(labelId));\n+    for (int i = 0; i < propertyKeys.length; i++)\n     {\n-        Map<String,String> map = new HashMap<>();\n-        map.put( \"indexType\", \"SCHEMA INDEX\" );\n-        map.put( \"entityType\", \"NODE\" );\n-        map.put( \"identifier\", identifier );\n-        map.put( \"label\", label );\n-        map.put( \"labelId\", String.valueOf( labelId ) );\n-        for ( int i = 0; i < propertyKeys.length; i++ )\n-        {\n-            String key = (propertyKeys.length > 1) ? \"propertyKey_\" + i : \"propertyKey\";\n-            map.put( key, propertyKeys[i] );\n-        }\n-        return map;\n+      String key = (propertyKeys.length > 1) ? \"propertyKey_\" + i : \"propertyKey\";\n+      map.put(key, propertyKeys[i]);\n     }\n+    return map;\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "46",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2533/SchemaIndexUsage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2533/SchemaIndexUsage.java\nindex a37c6c44b49..f0e011bacf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2533/SchemaIndexUsage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2533/SchemaIndexUsage.java\n@@ -52,9 +52,10 @@ public class SchemaIndexUsage extends IndexUsage\n         map.put( \"labelId\", String.valueOf( labelId ) );\n         for ( int i = 0; i < propertyKeys.length; i++ )\n         {\n-            String key = (propertyKeys.length > 1) ? \"propertyKey_\" + i : \"propertyKey\";\n+            String key = (propertyKeys.length> 1) ? \"propertyKey_\" + i : \"propertyKey\";\n             map.put( key, propertyKeys[i] );\n         }\n-        return map;\n+\n+return map;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2506",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "169",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "331",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2506/SharedLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2506/SharedLock.java\nindex bef0b2ef694..b4348ca2761 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2506/SharedLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2506/SharedLock.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.enterprise.lock.forseti;\n \n import java.util.Set;\n@@ -31,337 +32,335 @@ import org.neo4j.kernel.impl.util.collection.SimpleBitSet;\n  */\n class SharedLock implements ForsetiLockManager.Lock\n {\n-    /**\n-     * The update lock flag is inlined into the ref count integer, in order to allow common CAS operations across\n-     * both the update flag and the refCount simultaneously. This avoids a nasty series of race conditions, but\n-     * makes the reference counting code much mode complicated. May be worth revisiting.\n-     */\n-    private static final int UPDATE_LOCK_FLAG = 1 << 31;\n+  /**\n+   * The update lock flag is inlined into the ref count integer, in order to allow common CAS operations across\n+   * both the update flag and the refCount simultaneously. This avoids a nasty series of race conditions, but\n+   * makes the reference counting code much mode complicated. May be worth revisiting.\n+   */\n+  private static final int UPDATE_LOCK_FLAG = 1 << 31;\n \n-    /**\n-     * No more holders than this allowed, don't change this without changing the sizing of\n-     * {@link #clientsHoldingThisLock}.\n-     */\n-    private static final int MAX_HOLDERS = 4680;\n+  /**\n+   * No more holders than this allowed, don't change this without changing the sizing of\n+   * {@link #clientsHoldingThisLock}.\n+   */\n+  private static final int MAX_HOLDERS = 4680;\n \n-    // TODO Investigate inlining and padding the refCount.\n-    // TODO My gut feeling tells me there's a high chance of false-sharing\n-    // TODO on these unpadded AtomicIntegers.\n-    private final AtomicInteger refCount = new AtomicInteger( 1 );\n+  // TODO Investigate inlining and padding the refCount.\n+  // TODO My gut feeling tells me there's a high chance of false-sharing\n+  // TODO on these unpadded AtomicIntegers.\n+  private final AtomicInteger refCount = new AtomicInteger(1);\n \n-    /**\n-     * When reading this, keep in mind the main design goals here: Releasing and acquiring this lock should not require\n-     * synchronization, and the lock should have as low of a memory footprint as possible.\n-     * <p/>\n-     * An array of arrays containing references to clients holding this lock. Each client can only show up once.\n-     * When the lock is created only the first reference array is created (so the last three slots in the outer array\n-     * are empty). The outer array is populated when the reference arrays are filled up, with exponentially larger\n-     * reference arrays:\n-     * <p/>\n-     * clientsHoldingThisLock[0] = 8 slots\n-     * clientsHoldingThisLock[1] = 64 slots\n-     * clientsHoldingThisLock[2] = 512 slots\n-     * clientsHoldingThisLock[3] = 4096 slots\n-     * <p/>\n-     * Allowing a total of 4680 transactions holding the same shared lock simultaneously.\n-     * <p/>\n-     * This data structure was chosen over using regular resizing of the array, because we need to be able to increase\n-     * the size of the array without requiring synchronization between threads writing to the array and threads trying\n-     * to resize (since the threads writing to the array are on one of the hottest code paths in the database).\n-     * <p/>\n-     * This data structure is, however, not optimal, since it requires O(n) at worst to search for a slot and to remove\n-     * a client from the array. This should be revisited in the future.\n-     */\n-    private final AtomicReferenceArray<ForsetiClient>[] clientsHoldingThisLock = new AtomicReferenceArray[4];\n+  /**\n+   * When reading this, keep in mind the main design goals here: Releasing and acquiring this lock should not require\n+   * synchronization, and the lock should have as low of a memory footprint as possible.\n+   * <p/>\n+   * An array of arrays containing references to clients holding this lock. Each client can only show up once.\n+   * When the lock is created only the first reference array is created (so the last three slots in the outer array\n+   * are empty). The outer array is populated when the reference arrays are filled up, with exponentially larger\n+   * reference arrays:\n+   * <p/>\n+   * clientsHoldingThisLock[0] = 8 slots\n+   * clientsHoldingThisLock[1] = 64 slots\n+   * clientsHoldingThisLock[2] = 512 slots\n+   * clientsHoldingThisLock[3] = 4096 slots\n+   * <p/>\n+   * Allowing a total of 4680 transactions holding the same shared lock simultaneously.\n+   * <p/>\n+   * This data structure was chosen over using regular resizing of the array, because we need to be able to increase\n+   * the size of the array without requiring synchronization between threads writing to the array and threads trying\n+   * to resize (since the threads writing to the array are on one of the hottest code paths in the database).\n+   * <p/>\n+   * This data structure is, however, not optimal, since it requires O(n) at worst to search for a slot and to remove\n+   * a client from the array. This should be revisited in the future.\n+   */\n+  private final AtomicReferenceArray<ForsetiClient>[] clientsHoldingThisLock = new AtomicReferenceArray[4];\n \n-    /** Client that holds the update lock, if any. */\n-    private ForsetiClient updateHolder;\n+  /**\n+   * Client that holds the update lock, if any.\n+   */\n+  private ForsetiClient updateHolder;\n \n-    SharedLock( ForsetiClient client )\n-    {\n-        addClientHoldingLock( client );\n-    }\n+  SharedLock(ForsetiClient client)\n+  {\n+    addClientHoldingLock(client);\n+  }\n \n-    public boolean acquire( ForsetiClient client )\n+  public boolean acquire(ForsetiClient client)\n+  {\n+    // First, bump refcount to make sure no one drops this lock on the floor\n+    if (!acquireReference())\n     {\n-        // First, bump refcount to make sure no one drops this lock on the floor\n-        if ( !acquireReference() )\n-        {\n-            return false;\n-        }\n-\n-        // Then add our wait list to the pile of things waiting in case if we are not there yet\n-        // if we already waiting we will release a reference to keep counter in sync\n-        if ( !clientHoldsThisLock( client ) )\n-        {\n-            // try to add client to a clients that holding current lock.\n-            return addClientHoldingLock( client );\n-        }\n-        else\n-        {\n-            releaseReference();\n-            return false;\n-        }\n+      return false;\n     }\n \n-    public boolean release( ForsetiClient client )\n+    // Then add our wait list to the pile of things waiting in case if we are not there yet\n+    // if we already waiting we will release a reference to keep counter in sync\n+    if (!clientHoldsThisLock(client))\n     {\n-        removeClientHoldingLock( client );\n-        return releaseReference();\n-    }\n-\n-    @Override\n-    public void copyHolderWaitListsInto( SimpleBitSet waitList )\n+      // try to add client to a clients that holding current lock.\n+      return addClientHoldingLock(client);\n+    } else\n     {\n-        for ( AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock )\n-        {\n-            for ( int j = 0; holders != null && j < holders.length(); j++ )\n-            {\n-                ForsetiClient client = holders.get( j );\n-                if ( client != null )\n-                {\n-                    client.copyWaitListTo( waitList );\n-                }\n-            }\n-        }\n+      releaseReference();\n+      return false;\n     }\n+  }\n+\n+  public boolean release(ForsetiClient client)\n+  {\n+    removeClientHoldingLock(client);\n+    return releaseReference();\n+  }\n \n-    @Override\n-    public int detectDeadlock( int clientId )\n+  @Override\n+  public void copyHolderWaitListsInto(SimpleBitSet waitList)\n+  {\n+    for (AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock)\n     {\n-        for ( AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock )\n+      for (int j = 0; holders != null && j < holders.length(); j++)\n+      {\n+        ForsetiClient client = holders.get(j);\n+        if (client != null)\n         {\n-            for ( int j = 0; holders != null && j < holders.length(); j++ )\n-            {\n-                ForsetiClient client = holders.get( j );\n-                if ( client != null && client.isWaitingFor( clientId ) )\n-                {\n-                    return client.id();\n-                }\n-            }\n+          client.copyWaitListTo(waitList);\n         }\n-        return -1;\n+      }\n     }\n+  }\n \n-    public boolean tryAcquireUpdateLock( ForsetiClient client )\n+  @Override\n+  public int detectDeadlock(int clientId)\n+  {\n+    for (AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock)\n     {\n-        while ( true )\n+      for (int j = 0; holders != null && j < holders.length(); j++)\n+      {\n+        ForsetiClient client = holders.get(j);\n+        if (client != null && client.isWaitingFor(clientId))\n         {\n-            int refs = refCount.get();\n-            if ( refs > 0 /* UPDATE_LOCK flips the sign bit, so refs will be < 0 if it is an update lock. */ )\n-            {\n-                if ( refCount.compareAndSet( refs, refs | UPDATE_LOCK_FLAG ) )\n-                {\n-                    updateHolder = client;\n-                    return true;\n-                }\n-            }\n-            else\n-            {\n-                return false;\n-            }\n+          return client.id();\n         }\n+      }\n     }\n+    return -1;\n+  }\n \n-    public void releaseUpdateLock()\n+  public boolean tryAcquireUpdateLock(ForsetiClient client)\n+  {\n+    while (true)\n     {\n-        while ( true )\n+      int refs = refCount.get();\n+      if (refs > 0 /* UPDATE_LOCK flips the sign bit, so refs will be < 0 if it is an update lock. */)\n+      {\n+        if (refCount.compareAndSet(refs, refs | UPDATE_LOCK_FLAG))\n         {\n-            int refs = refCount.get();\n-            cleanUpdateHolder();\n-            if ( refCount.compareAndSet( refs, refs & ~UPDATE_LOCK_FLAG ) )\n-            {\n-                return;\n-            }\n+          updateHolder = client;\n+          return true;\n         }\n+      } else\n+      {\n+        return false;\n+      }\n     }\n+  }\n \n-    public void cleanUpdateHolder()\n+  public void releaseUpdateLock()\n+  {\n+    while (true)\n     {\n-        updateHolder = null;\n+      int refs = refCount.get();\n+      cleanUpdateHolder();\n+      if (refCount.compareAndSet(refs, refs & ~UPDATE_LOCK_FLAG))\n+      {\n+        return;\n+      }\n     }\n+  }\n \n-    public int numberOfHolders()\n-    {\n-        return refCount.get() & ~UPDATE_LOCK_FLAG;\n-    }\n+  public void cleanUpdateHolder()\n+  {\n+    updateHolder = null;\n+  }\n \n-    public boolean isUpdateLock()\n-    {\n-        return (refCount.get() & UPDATE_LOCK_FLAG) == UPDATE_LOCK_FLAG;\n-    }\n+  public int numberOfHolders()\n+  {\n+    return refCount.get() & ~UPDATE_LOCK_FLAG;\n+  }\n+\n+  public boolean isUpdateLock()\n+  {\n+    return (refCount.get() & UPDATE_LOCK_FLAG) == UPDATE_LOCK_FLAG;\n+  }\n \n-    @Override\n-    public String describeWaitList()\n+  @Override\n+  public String describeWaitList()\n+  {\n+    StringBuilder sb = new StringBuilder(\"SharedLock[\");\n+    for (AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock)\n     {\n-        StringBuilder sb = new StringBuilder( \"SharedLock[\" );\n-        for ( AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock )\n+      boolean first = true;\n+      for (int j = 0; holders != null && j < holders.length(); j++)\n+      {\n+        ForsetiClient current = holders.get(j);\n+        if (current != null)\n         {\n-            boolean first = true;\n-            for ( int j = 0; holders != null && j < holders.length(); j++ )\n-            {\n-                ForsetiClient current = holders.get( j );\n-                if ( current != null )\n-                {\n-                    sb.append( first ? \"\" : \", \" ).append( current.describeWaitList() );\n-                    first = false;\n-                }\n-            }\n+          sb.append(first ? \"\" : \", \").append(current.describeWaitList());\n+          first = false;\n         }\n-        return sb.append( \"]\" ).toString();\n+      }\n     }\n+    return sb.append(\"]\").toString();\n+  }\n \n-    @Override\n-    public void collectOwners( Set<ForsetiClient> owners )\n+  @Override\n+  public void collectOwners(Set<ForsetiClient> owners)\n+  {\n+    for (AtomicReferenceArray<ForsetiClient> ownerArray : clientsHoldingThisLock)\n     {\n-        for ( AtomicReferenceArray<ForsetiClient> ownerArray : clientsHoldingThisLock )\n+      if (ownerArray != null)\n+      {\n+        int len = ownerArray.length();\n+        for (int i = 0; i < len; i++)\n         {\n-            if ( ownerArray != null )\n-            {\n-                int len = ownerArray.length();\n-                for ( int i = 0; i < len; i++ )\n-                {\n-                    ForsetiClient owner = ownerArray.get( i );\n-                    if ( owner != null )\n-                    {\n-                        owners.add( owner );\n-                    }\n-                }\n-            }\n+          ForsetiClient owner = ownerArray.get(i);\n+          if (owner != null)\n+          {\n+            owners.add(owner);\n+          }\n         }\n+      }\n     }\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    // TODO we should only read out the refCount once, and build a deterministic string based on that\n+    if (isUpdateLock())\n     {\n-        // TODO we should only read out the refCount once, and build a deterministic string based on that\n-        if ( isUpdateLock() )\n-        {\n-            return \"UpdateLock{\" +\n-                   \"objectId=\" + System.identityHashCode( this ) +\n-                   \", refCount=\" + (refCount.get() & ~UPDATE_LOCK_FLAG) +\n-                   \", holder=\" + updateHolder +\n-                   '}';\n-        }\n-        else\n-        {\n-            return \"SharedLock{\" +\n-                   \"objectId=\" + System.identityHashCode( this ) +\n-                   \", refCount=\" + refCount +\n-                   '}';\n-        }\n+      return \"UpdateLock{\" +\n+          \"objectId=\" + System.identityHashCode(this) +\n+          \", refCount=\" + (refCount.get() & ~UPDATE_LOCK_FLAG) +\n+          \", holder=\" + updateHolder +\n+          '}';\n+    } else\n+    {\n+      return \"SharedLock{\" +\n+          \"objectId=\" + System.identityHashCode(this) +\n+          \", refCount=\" + refCount +\n+          '}';\n     }\n+  }\n \n-    private void removeClientHoldingLock( ForsetiClient client )\n+  private void removeClientHoldingLock(ForsetiClient client)\n+  {\n+    for (AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock)\n     {\n-        for ( AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock )\n-        {\n-            if ( holders == null )\n-            {\n-                break;\n-            }\n+      if (holders == null)\n+      {\n+        break;\n+      }\n \n-            for ( int j = 0; j < holders.length(); j++ )\n-            {\n-                ForsetiClient current = holders.get( j );\n-                if ( current != null && current.equals( client ) )\n-                {\n-                    holders.set( j, null );\n-                    return;\n-                }\n-            }\n+      for (int j = 0; j < holders.length(); j++)\n+      {\n+        ForsetiClient current = holders.get(j);\n+        if (current != null && current.equals(client))\n+        {\n+          holders.set(j, null);\n+          return;\n         }\n-\n-        throw new IllegalStateException(\n-                client + \" asked to be removed from holder list, but it does not hold \" + this );\n+      }\n     }\n \n-    private boolean addClientHoldingLock( ForsetiClient client )\n+    throw new IllegalStateException(\n+        client + \" asked to be removed from holder list, but it does not hold \" + this);\n+  }\n+\n+  private boolean addClientHoldingLock(ForsetiClient client)\n+  {\n+    while (true)\n     {\n-        while ( true )\n+      for (int i = 0; i < clientsHoldingThisLock.length; i++)\n+      {\n+        AtomicReferenceArray<ForsetiClient> holders = clientsHoldingThisLock[i];\n+        if (holders == null)\n         {\n-            for ( int i = 0; i < clientsHoldingThisLock.length; i++ )\n-            {\n-                AtomicReferenceArray<ForsetiClient> holders = clientsHoldingThisLock[i];\n-                if ( holders == null )\n-                {\n-                    holders = addHolderArray( i );\n-                }\n-\n-                for ( int j = 0; j < holders.length(); j++ )\n-                {\n-                    ForsetiClient c = holders.get( j );\n-                    if ( c == null )\n-                    {\n-                        // TODO This means we do CAS on each entry, very likely hitting a lot of failures until we\n-                        // TODO find a slot. We should look into better strategies here.\n-                        // TODO One such strategy could be binary searching for a free slot, and then linear scan\n-                        // TODO after that if the CAS fails on the slot we found with binary search.\n-                        if ( holders.compareAndSet( j, null, client ) )\n-                        {\n-                            return true;\n-                        }\n-                    }\n-                }\n-            }\n+          holders = addHolderArray(i);\n         }\n-    }\n \n-    private boolean acquireReference()\n-    {\n-        while ( true )\n+        for (int j = 0; j < holders.length(); j++)\n         {\n-            int refs = refCount.get();\n-            // UPDATE_LOCK flips the sign bit, so refs will be < 0 if it is an update lock.\n-            if ( refs > 0 && refs < MAX_HOLDERS )\n-            {\n-                if ( refCount.compareAndSet( refs, refs + 1 ) )\n-                {\n-                    return true;\n-                }\n-            }\n-            else\n+          ForsetiClient c = holders.get(j);\n+          if (c == null)\n+          {\n+            // TODO This means we do CAS on each entry, very likely hitting a lot of failures until we\n+            // TODO find a slot. We should look into better strategies here.\n+            // TODO One such strategy could be binary searching for a free slot, and then linear scan\n+            // TODO after that if the CAS fails on the slot we found with binary search.\n+            if (holders.compareAndSet(j, null, client))\n             {\n-                return false;\n+              return true;\n             }\n+          }\n         }\n+      }\n     }\n+  }\n \n-    private boolean releaseReference()\n+  private boolean acquireReference()\n+  {\n+    while (true)\n     {\n-        while ( true )\n+      int refs = refCount.get();\n+      // UPDATE_LOCK flips the sign bit, so refs will be < 0 if it is an update lock.\n+      if (refs > 0 && refs < MAX_HOLDERS)\n+      {\n+        if (refCount.compareAndSet(refs, refs + 1))\n         {\n-            int refAndUpdateFlag = refCount.get();\n-            int newRefCount = (refAndUpdateFlag & ~UPDATE_LOCK_FLAG) - 1;\n-            if ( refCount.compareAndSet( refAndUpdateFlag, newRefCount | (refAndUpdateFlag & UPDATE_LOCK_FLAG) ) )\n-            {\n-                return newRefCount == 0;\n-            }\n+          return true;\n         }\n+      } else\n+      {\n+        return false;\n+      }\n     }\n+  }\n \n-    private synchronized AtomicReferenceArray<ForsetiClient> addHolderArray( int slot )\n+  private boolean releaseReference()\n+  {\n+    while (true)\n     {\n-        if ( clientsHoldingThisLock[slot] == null )\n-        {\n-            clientsHoldingThisLock[slot] = new AtomicReferenceArray<>( (int) (8 * Math.pow( 8, slot )) );\n-        }\n-        return clientsHoldingThisLock[slot];\n+      int refAndUpdateFlag = refCount.get();\n+      int newRefCount = (refAndUpdateFlag & ~UPDATE_LOCK_FLAG) - 1;\n+      if (refCount.compareAndSet(refAndUpdateFlag, newRefCount | (refAndUpdateFlag & UPDATE_LOCK_FLAG)))\n+      {\n+        return newRefCount == 0;\n+      }\n+    }\n+  }\n+\n+  private synchronized AtomicReferenceArray<ForsetiClient> addHolderArray(int slot)\n+  {\n+    if (clientsHoldingThisLock[slot] == null)\n+    {\n+      clientsHoldingThisLock[slot] = new AtomicReferenceArray<>((int) (8 * Math.pow(8, slot)));\n     }\n+    return clientsHoldingThisLock[slot];\n+  }\n \n-    private boolean clientHoldsThisLock( ForsetiClient client )\n+  private boolean clientHoldsThisLock(ForsetiClient client)\n+  {\n+    for (AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock)\n     {\n-        for ( AtomicReferenceArray<ForsetiClient> holders : clientsHoldingThisLock )\n+      for (int j = 0; holders != null && j < holders.length(); j++)\n+      {\n+        ForsetiClient current = holders.get(j);\n+        if (current != null && current.equals(client))\n         {\n-            for ( int j = 0; holders != null && j < holders.length(); j++ )\n-            {\n-                ForsetiClient current = holders.get( j );\n-                if ( current != null && current.equals( client ) )\n-                {\n-                    return true;\n-                }\n-            }\n+          return true;\n         }\n-        return false;\n+      }\n     }\n+    return false;\n+  }\n }\n",
            "diff_size": 377
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "339",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2506/SharedLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2506/SharedLock.java\nindex bef0b2ef694..d4ed17e3317 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2506/SharedLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2506/SharedLock.java\n@@ -237,19 +237,12 @@ class SharedLock implements ForsetiLockManager.Lock\n         // TODO we should only read out the refCount once, and build a deterministic string based on that\n         if ( isUpdateLock() )\n         {\n-            return \"UpdateLock{\" +\n-                   \"objectId=\" + System.identityHashCode( this ) +\n-                   \", refCount=\" + (refCount.get() & ~UPDATE_LOCK_FLAG) +\n-                   \", holder=\" + updateHolder +\n-                   '}';\n-        }\n+            return \"UpdateLock{\" + \"objectId=\" + System.identityHashCode( this ) + \", refCount=\" + (refCount.get() & ~UPDATE_LOCK_FLAG) + \", holder=\" + updateHolder + '}';\n+    }\n         else\n         {\n-            return \"SharedLock{\" +\n-                   \"objectId=\" + System.identityHashCode( this ) +\n-                   \", refCount=\" + refCount +\n-                   '}';\n-        }\n+            return \"SharedLock{\" + \"objectId=\" + System.identityHashCode( this ) + \", refCount=\" + refCount + '}';\n+    }\n     }\n \n     private void removeClientHoldingLock( ForsetiClient client )\n@@ -272,8 +265,7 @@ class SharedLock implements ForsetiLockManager.Lock\n             }\n         }\n \n-        throw new IllegalStateException(\n-                client + \" asked to be removed from holder list, but it does not hold \" + this );\n+        throw new IllegalStateException( client + \" asked to be removed from holder list, but it does not hold \" + this );\n     }\n \n     private boolean addClientHoldingLock( ForsetiClient client )\n@@ -333,7 +325,7 @@ class SharedLock implements ForsetiLockManager.Lock\n         {\n             int refAndUpdateFlag = refCount.get();\n             int newRefCount = (refAndUpdateFlag & ~UPDATE_LOCK_FLAG) - 1;\n-            if ( refCount.compareAndSet( refAndUpdateFlag, newRefCount | (refAndUpdateFlag & UPDATE_LOCK_FLAG) ) )\n+            if ( refCount.compareAndSet( refAndUpdateFlag, newRefCount | ( refAndUpdateFlag & UPDATE_LOCK_FLAG) ) )\n             {\n                 return newRefCount == 0;\n             }\n@@ -344,9 +336,10 @@ class SharedLock implements ForsetiLockManager.Lock\n     {\n         if ( clientsHoldingThisLock[slot] == null )\n         {\n-            clientsHoldingThisLock[slot] = new AtomicReferenceArray<>( (int) (8 * Math.pow( 8, slot )) );\n+            clientsHoldingThisLock[slot] = new AtomicReferenceArray<>( ( int) ( 8 * Math.pow( 8, slot )) );\n         }\n-        return clientsHoldingThisLock[slot];\n+\n+return clientsHoldingThisLock[slot];\n     }\n \n     private boolean clientHoldsThisLock( ForsetiClient client )\n@@ -364,4 +357,4 @@ class SharedLock implements ForsetiLockManager.Lock\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
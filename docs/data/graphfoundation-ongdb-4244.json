{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4244",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "120",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "106",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "294",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4244/RaftMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4244/RaftMachine.java\nindex b0ea5579388..59f709325a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4244/RaftMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4244/RaftMachine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus;\n \n import java.io.IOException;\n@@ -60,294 +61,290 @@ import static org.neo4j.causalclustering.core.consensus.roles.Role.LEADER;\n  */\n public class RaftMachine implements LeaderLocator, CoreMetaData\n {\n-    private final LeaderNotFoundMonitor leaderNotFoundMonitor;\n-    private InFlightCache inFlightCache;\n-\n-    public enum Timeouts implements TimerService.TimerName\n+  private final LeaderNotFoundMonitor leaderNotFoundMonitor;\n+  private InFlightCache inFlightCache;\n+\n+  public enum Timeouts implements TimerService.TimerName\n+  {\n+    ELECTION,\n+    HEARTBEAT\n+  }\n+\n+  private final RaftState state;\n+  private final MemberId myself;\n+\n+  private final LeaderAvailabilityTimers leaderAvailabilityTimers;\n+  private RaftMembershipManager membershipManager;\n+\n+  private final VolatileFuture<MemberId> volatileLeader = new VolatileFuture<>(null);\n+\n+  private final Outbound<MemberId, RaftMessages.RaftMessage> outbound;\n+  private final Log log;\n+  private Role currentRole = Role.FOLLOWER;\n+\n+  private RaftLogShippingManager logShipping;\n+\n+  public RaftMachine(MemberId myself, StateStorage<TermState> termStorage, StateStorage<VoteState> voteStorage, RaftLog entryLog,\n+                     LeaderAvailabilityTimers leaderAvailabilityTimers, Outbound<MemberId, RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n+                     RaftMembershipManager membershipManager, RaftLogShippingManager logShipping, InFlightCache inFlightCache, boolean refuseToBecomeLeader,\n+                     boolean supportPreVoting, Monitors monitors)\n+  {\n+    this.myself = myself;\n+    this.leaderAvailabilityTimers = leaderAvailabilityTimers;\n+\n+    this.outbound = outbound;\n+    this.logShipping = logShipping;\n+    this.log = logProvider.getLog(getClass());\n+\n+    this.membershipManager = membershipManager;\n+\n+    this.inFlightCache = inFlightCache;\n+    this.state = new RaftState(myself, termStorage, membershipManager, entryLog, voteStorage, inFlightCache,\n+        logProvider, supportPreVoting, refuseToBecomeLeader);\n+\n+    leaderNotFoundMonitor = monitors.newMonitor(LeaderNotFoundMonitor.class);\n+  }\n+\n+  /**\n+   * This should be called after the major recovery operations are complete. Before this is called\n+   * this instance cannot become a leader (the timers are disabled) and entries will not be cached\n+   * in the in-flight map, because the application process is not running and ready to consume them.\n+   */\n+  public synchronized void postRecoveryActions()\n+  {\n+    leaderAvailabilityTimers.start(this::electionTimeout,\n+        clock -> handle(RaftMessages.ReceivedInstantAwareMessage.of(clock.instant(), new RaftMessages.Timeout.Heartbeat(myself))));\n+\n+    inFlightCache.enable();\n+  }\n+\n+  public synchronized void stopTimers()\n+  {\n+    leaderAvailabilityTimers.stop();\n+  }\n+\n+  private synchronized void electionTimeout(Clock clock) throws IOException\n+  {\n+    if (leaderAvailabilityTimers.isElectionTimedOut())\n     {\n-        ELECTION,\n-        HEARTBEAT\n+      triggerElection(clock);\n     }\n+  }\n \n-    private final RaftState state;\n-    private final MemberId myself;\n+  public void triggerElection(Clock clock) throws IOException\n+  {\n+    handle(RaftMessages.ReceivedInstantAwareMessage.of(clock.instant(), new RaftMessages.Timeout.Election(myself)));\n+  }\n \n-    private final LeaderAvailabilityTimers leaderAvailabilityTimers;\n-    private RaftMembershipManager membershipManager;\n+  public void panic()\n+  {\n+    stopTimers();\n+  }\n \n-    private final VolatileFuture<MemberId> volatileLeader = new VolatileFuture<>( null );\n+  public synchronized RaftCoreState coreState()\n+  {\n+    return new RaftCoreState(membershipManager.getCommitted());\n+  }\n \n-    private final Outbound<MemberId,RaftMessages.RaftMessage> outbound;\n-    private final Log log;\n-    private Role currentRole = Role.FOLLOWER;\n+  public synchronized void installCoreState(RaftCoreState coreState) throws IOException\n+  {\n+    membershipManager.install(coreState.committed());\n+  }\n \n-    private RaftLogShippingManager logShipping;\n+  public synchronized void setTargetMembershipSet(Set<MemberId> targetMembers)\n+  {\n+    membershipManager.setTargetMembershipSet(targetMembers);\n \n-    public RaftMachine( MemberId myself, StateStorage<TermState> termStorage, StateStorage<VoteState> voteStorage, RaftLog entryLog,\n-            LeaderAvailabilityTimers leaderAvailabilityTimers, Outbound<MemberId,RaftMessages.RaftMessage> outbound, LogProvider logProvider,\n-            RaftMembershipManager membershipManager, RaftLogShippingManager logShipping, InFlightCache inFlightCache, boolean refuseToBecomeLeader,\n-            boolean supportPreVoting, Monitors monitors )\n+    if (currentRole == LEADER)\n     {\n-        this.myself = myself;\n-        this.leaderAvailabilityTimers = leaderAvailabilityTimers;\n-\n-        this.outbound = outbound;\n-        this.logShipping = logShipping;\n-        this.log = logProvider.getLog( getClass() );\n-\n-        this.membershipManager = membershipManager;\n-\n-        this.inFlightCache = inFlightCache;\n-        this.state = new RaftState( myself, termStorage, membershipManager, entryLog, voteStorage, inFlightCache,\n-                logProvider, supportPreVoting, refuseToBecomeLeader );\n-\n-        leaderNotFoundMonitor = monitors.newMonitor( LeaderNotFoundMonitor.class );\n+      membershipManager.onFollowerStateChange(state.followerStates());\n     }\n+  }\n \n-    /**\n-     * This should be called after the major recovery operations are complete. Before this is called\n-     * this instance cannot become a leader (the timers are disabled) and entries will not be cached\n-     * in the in-flight map, because the application process is not running and ready to consume them.\n-     */\n-    public synchronized void postRecoveryActions()\n-    {\n-        leaderAvailabilityTimers.start( this::electionTimeout,\n-                clock -> handle( RaftMessages.ReceivedInstantAwareMessage.of( clock.instant(), new RaftMessages.Timeout.Heartbeat( myself ) ) ) );\n-\n-        inFlightCache.enable();\n-    }\n+  @Override\n+  public MemberId getLeader() throws NoLeaderFoundException\n+  {\n+    return waitForLeader(0, Objects::nonNull);\n+  }\n \n-    public synchronized void stopTimers()\n+  private MemberId waitForLeader(long timeoutMillis, Predicate<MemberId> predicate) throws NoLeaderFoundException\n+  {\n+    try\n     {\n-        leaderAvailabilityTimers.stop();\n-    }\n-\n-    private synchronized void electionTimeout( Clock clock ) throws IOException\n+      return volatileLeader.get(timeoutMillis, predicate);\n+    } catch (InterruptedException e)\n     {\n-        if ( leaderAvailabilityTimers.isElectionTimedOut() )\n-        {\n-            triggerElection( clock );\n-        }\n-    }\n+      Thread.currentThread().interrupt();\n \n-    public void triggerElection( Clock clock ) throws IOException\n+      leaderNotFoundMonitor.increment();\n+      throw new NoLeaderFoundException(e);\n+    } catch (TimeoutException e)\n     {\n-            handle( RaftMessages.ReceivedInstantAwareMessage.of( clock.instant(), new RaftMessages.Timeout.Election( myself ) ) );\n+      leaderNotFoundMonitor.increment();\n+      throw new NoLeaderFoundException(e);\n     }\n-\n-    public void panic()\n+  }\n+\n+  private Collection<LeaderListener> leaderListeners = new ArrayList<>();\n+\n+  @Override\n+  public synchronized void registerListener(LeaderListener listener)\n+  {\n+    leaderListeners.add(listener);\n+    listener.onLeaderSwitch(state.leaderInfo());\n+  }\n+\n+  @Override\n+  public synchronized void unregisterListener(LeaderListener listener)\n+  {\n+    leaderListeners.remove(listener);\n+  }\n+\n+  /**\n+   * Every call to state() gives you an immutable copy of the current state.\n+   *\n+   * @return A fresh view of the state.\n+   */\n+  public synchronized ExposedRaftState state()\n+  {\n+    return state.copy();\n+  }\n+\n+  private void notifyLeaderChanges(Outcome outcome)\n+  {\n+    for (LeaderListener listener : leaderListeners)\n     {\n-        stopTimers();\n+      listener.onLeaderEvent(outcome);\n     }\n+  }\n \n-    public synchronized RaftCoreState coreState()\n+  private void handleLogShipping(Outcome outcome)\n+  {\n+    LeaderContext leaderContext = new LeaderContext(outcome.getTerm(), outcome.getLeaderCommit());\n+    if (outcome.isElectedLeader())\n     {\n-        return new RaftCoreState( membershipManager.getCommitted() );\n-    }\n-\n-    public synchronized void installCoreState( RaftCoreState coreState ) throws IOException\n+      logShipping.resume(leaderContext);\n+    } else if (outcome.isSteppingDown())\n     {\n-        membershipManager.install( coreState.committed() );\n+      logShipping.pause();\n     }\n \n-    public synchronized void setTargetMembershipSet( Set<MemberId> targetMembers )\n+    if (outcome.getRole() == LEADER)\n     {\n-        membershipManager.setTargetMembershipSet( targetMembers );\n-\n-        if ( currentRole == LEADER )\n-        {\n-            membershipManager.onFollowerStateChange( state.followerStates() );\n-        }\n+      logShipping.handleCommands(outcome.getShipCommands(), leaderContext);\n     }\n+  }\n \n-    @Override\n-    public MemberId getLeader() throws NoLeaderFoundException\n-    {\n-        return waitForLeader( 0, Objects::nonNull );\n-    }\n-\n-    private MemberId waitForLeader( long timeoutMillis, Predicate<MemberId> predicate ) throws NoLeaderFoundException\n-    {\n-        try\n-        {\n-            return volatileLeader.get( timeoutMillis, predicate );\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            Thread.currentThread().interrupt();\n-\n-            leaderNotFoundMonitor.increment();\n-            throw new NoLeaderFoundException( e );\n-        }\n-        catch ( TimeoutException e )\n-        {\n-            leaderNotFoundMonitor.increment();\n-            throw new NoLeaderFoundException( e );\n-        }\n-    }\n+  private boolean leaderChanged(Outcome outcome, MemberId oldLeader)\n+  {\n+    return !Objects.equals(oldLeader, outcome.getLeader());\n+  }\n \n-    private Collection<LeaderListener> leaderListeners = new ArrayList<>();\n+  public synchronized ConsensusOutcome handle(RaftMessages.RaftMessage incomingMessage) throws IOException\n+  {\n+    Outcome outcome = currentRole.handler.handle(incomingMessage, state, log);\n \n-    @Override\n-    public synchronized void registerListener( LeaderListener listener )\n-    {\n-        leaderListeners.add( listener );\n-        listener.onLeaderSwitch( state.leaderInfo() );\n-    }\n+    boolean newLeaderWasElected = leaderChanged(outcome, state.leader());\n \n-    @Override\n-    public synchronized void unregisterListener( LeaderListener listener )\n-    {\n-        leaderListeners.remove( listener );\n-    }\n+    state.update(outcome); // updates to raft log happen within\n+    sendMessages(outcome);\n \n-    /**\n-     * Every call to state() gives you an immutable copy of the current state.\n-     *\n-     * @return A fresh view of the state.\n-     */\n-    public synchronized ExposedRaftState state()\n-    {\n-        return state.copy();\n-    }\n+    handleTimers(outcome);\n+    handleLogShipping(outcome);\n \n-    private void notifyLeaderChanges( Outcome outcome )\n-    {\n-        for ( LeaderListener listener : leaderListeners )\n-        {\n-            listener.onLeaderEvent( outcome );\n-        }\n-    }\n+    driveMembership(outcome);\n \n-    private void handleLogShipping( Outcome outcome )\n-    {\n-        LeaderContext leaderContext = new LeaderContext( outcome.getTerm(), outcome.getLeaderCommit() );\n-        if ( outcome.isElectedLeader() )\n-        {\n-            logShipping.resume( leaderContext );\n-        }\n-        else if ( outcome.isSteppingDown() )\n-        {\n-            logShipping.pause();\n-        }\n-\n-        if ( outcome.getRole() == LEADER )\n-        {\n-            logShipping.handleCommands( outcome.getShipCommands(), leaderContext );\n-        }\n-    }\n+    volatileLeader.set(outcome.getLeader());\n \n-    private boolean leaderChanged( Outcome outcome, MemberId oldLeader )\n+    if (newLeaderWasElected)\n     {\n-        return !Objects.equals( oldLeader, outcome.getLeader() );\n+      notifyLeaderChanges(outcome);\n     }\n+    return outcome;\n+  }\n \n-    public synchronized ConsensusOutcome handle( RaftMessages.RaftMessage incomingMessage ) throws IOException\n-    {\n-        Outcome outcome = currentRole.handler.handle( incomingMessage, state, log );\n-\n-        boolean newLeaderWasElected = leaderChanged( outcome, state.leader() );\n+  private void driveMembership(Outcome outcome) throws IOException\n+  {\n+    membershipManager.processLog(outcome.getCommitIndex(), outcome.getLogCommands());\n \n-        state.update( outcome ); // updates to raft log happen within\n-        sendMessages( outcome );\n+    currentRole = outcome.getRole();\n+    membershipManager.onRole(currentRole);\n \n-        handleTimers( outcome );\n-        handleLogShipping( outcome );\n-\n-        driveMembership( outcome );\n-\n-        volatileLeader.set( outcome.getLeader() );\n-\n-        if ( newLeaderWasElected )\n-        {\n-            notifyLeaderChanges( outcome );\n-        }\n-        return outcome;\n-    }\n-\n-    private void driveMembership( Outcome outcome ) throws IOException\n-    {\n-        membershipManager.processLog( outcome.getCommitIndex(), outcome.getLogCommands() );\n-\n-        currentRole = outcome.getRole();\n-        membershipManager.onRole( currentRole );\n-\n-        if ( currentRole == LEADER )\n-        {\n-            membershipManager.onFollowerStateChange( state.followerStates() );\n-        }\n-    }\n-\n-    private void handleTimers( Outcome outcome )\n-    {\n-        if ( outcome.electionTimeoutRenewed() )\n-        {\n-            leaderAvailabilityTimers.renewElection();\n-        }\n-    }\n-\n-    private void sendMessages( Outcome outcome )\n-    {\n-        for ( RaftMessages.Directed outgoingMessage : outcome.getOutgoingMessages() )\n-        {\n-            try\n-            {\n-                outbound.send( outgoingMessage.to(), outgoingMessage.message() );\n-            }\n-            catch ( Exception e )\n-            {\n-                log.warn( format( \"Failed to send message %s.\", outgoingMessage ), e );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public boolean isLeader()\n+    if (currentRole == LEADER)\n     {\n-        return currentRole == LEADER;\n+      membershipManager.onFollowerStateChange(state.followerStates());\n     }\n+  }\n \n-    public Role currentRole()\n+  private void handleTimers(Outcome outcome)\n+  {\n+    if (outcome.electionTimeoutRenewed())\n     {\n-        return currentRole;\n+      leaderAvailabilityTimers.renewElection();\n     }\n+  }\n \n-    public MemberId identity()\n+  private void sendMessages(Outcome outcome)\n+  {\n+    for (RaftMessages.Directed outgoingMessage : outcome.getOutgoingMessages())\n     {\n-        return myself;\n+      try\n+      {\n+        outbound.send(outgoingMessage.to(), outgoingMessage.message());\n+      } catch (Exception e)\n+      {\n+        log.warn(format(\"Failed to send message %s.\", outgoingMessage), e);\n+      }\n     }\n-\n-    public RaftLogShippingManager logShippingManager()\n-    {\n-        return logShipping;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return format( \"RaftInstance{role=%s, term=%d, currentMembers=%s}\", currentRole, term(), votingMembers() );\n-    }\n-\n-    public static class BootstrapException extends Exception\n-    {\n-        BootstrapException( Throwable cause )\n-        {\n-            super( cause );\n-        }\n-    }\n-\n-    public long term()\n-    {\n-        return state.term();\n-    }\n-\n-    public Set<MemberId> votingMembers()\n-    {\n-        return membershipManager.votingMembers();\n-    }\n-\n-    public Set<MemberId> replicationMembers()\n+  }\n+\n+  @Override\n+  public boolean isLeader()\n+  {\n+    return currentRole == LEADER;\n+  }\n+\n+  public Role currentRole()\n+  {\n+    return currentRole;\n+  }\n+\n+  public MemberId identity()\n+  {\n+    return myself;\n+  }\n+\n+  public RaftLogShippingManager logShippingManager()\n+  {\n+    return logShipping;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"RaftInstance{role=%s, term=%d, currentMembers=%s}\", currentRole, term(), votingMembers());\n+  }\n+\n+  public static class BootstrapException extends Exception\n+  {\n+    BootstrapException(Throwable cause)\n     {\n-        return membershipManager.replicationMembers();\n+      super(cause);\n     }\n+  }\n+\n+  public long term()\n+  {\n+    return state.term();\n+  }\n+\n+  public Set<MemberId> votingMembers()\n+  {\n+    return membershipManager.votingMembers();\n+  }\n+\n+  public Set<MemberId> replicationMembers()\n+  {\n+    return membershipManager.replicationMembers();\n+  }\n }\n",
            "diff_size": 386
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4244/RaftMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4244/RaftMachine.java\nindex b0ea5579388..5dc24b60fb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4244/RaftMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4244/RaftMachine.java\n@@ -90,18 +90,14 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n     {\n         this.myself = myself;\n         this.leaderAvailabilityTimers = leaderAvailabilityTimers;\n-\n-        this.outbound = outbound;\n+this.outbound = outbound;\n         this.logShipping = logShipping;\n         this.log = logProvider.getLog( getClass() );\n-\n-        this.membershipManager = membershipManager;\n-\n-        this.inFlightCache = inFlightCache;\n+this.membershipManager = membershipManager;\n+this.inFlightCache = inFlightCache;\n         this.state = new RaftState( myself, termStorage, membershipManager, entryLog, voteStorage, inFlightCache,\n                 logProvider, supportPreVoting, refuseToBecomeLeader );\n-\n-        leaderNotFoundMonitor = monitors.newMonitor( LeaderNotFoundMonitor.class );\n+leaderNotFoundMonitor = monitors.newMonitor( LeaderNotFoundMonitor.class );\n     }\n \n     /**\n@@ -113,8 +109,7 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n     {\n         leaderAvailabilityTimers.start( this::electionTimeout,\n                 clock -> handle( RaftMessages.ReceivedInstantAwareMessage.of( clock.instant(), new RaftMessages.Timeout.Heartbeat( myself ) ) ) );\n-\n-        inFlightCache.enable();\n+inFlightCache.enable();\n     }\n \n     public synchronized void stopTimers()\n@@ -132,7 +127,7 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n \n     public void triggerElection( Clock clock ) throws IOException\n     {\n-            handle( RaftMessages.ReceivedInstantAwareMessage.of( clock.instant(), new RaftMessages.Timeout.Election( myself ) ) );\n+    handle( RaftMessages.ReceivedInstantAwareMessage.of( clock.instant(), new RaftMessages.Timeout.Election( myself ) ) );\n     }\n \n     public void panic()\n@@ -153,8 +148,7 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n     public synchronized void setTargetMembershipSet( Set<MemberId> targetMembers )\n     {\n         membershipManager.setTargetMembershipSet( targetMembers );\n-\n-        if ( currentRole == LEADER )\n+if ( currentRole == LEADER )\n         {\n             membershipManager.onFollowerStateChange( state.followerStates() );\n         }\n@@ -175,8 +169,7 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n         catch ( InterruptedException e )\n         {\n             Thread.currentThread().interrupt();\n-\n-            leaderNotFoundMonitor.increment();\n+leaderNotFoundMonitor.increment();\n             throw new NoLeaderFoundException( e );\n         }\n         catch ( TimeoutException e )\n@@ -247,32 +240,28 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n         Outcome outcome = currentRole.handler.handle( incomingMessage, state, log );\n \n         boolean newLeaderWasElected = leaderChanged( outcome, state.leader() );\n-\n-        state.update( outcome ); // updates to raft log happen within\n+state.update( outcome ); // updates to raft log happen within\n         sendMessages( outcome );\n \n         handleTimers( outcome );\n         handleLogShipping( outcome );\n \n         driveMembership( outcome );\n-\n-        volatileLeader.set( outcome.getLeader() );\n-\n-        if ( newLeaderWasElected )\n+volatileLeader.set( outcome.getLeader() );\n+if ( newLeaderWasElected )\n         {\n             notifyLeaderChanges( outcome );\n         }\n-        return outcome;\n+\n+return outcome;\n     }\n \n     private void driveMembership( Outcome outcome ) throws IOException\n     {\n         membershipManager.processLog( outcome.getCommitIndex(), outcome.getLogCommands() );\n-\n-        currentRole = outcome.getRole();\n+currentRole = outcome.getRole();\n         membershipManager.onRole( currentRole );\n-\n-        if ( currentRole == LEADER )\n+if ( currentRole == LEADER )\n         {\n             membershipManager.onFollowerStateChange( state.followerStates() );\n         }\n@@ -350,4 +339,4 @@ public class RaftMachine implements LeaderLocator, CoreMetaData\n     {\n         return membershipManager.replicationMembers();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1122",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1122/Locks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1122/Locks.java\nindex 9eec04eda14..ff3e512a8e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1122/Locks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1122/Locks.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import java.util.stream.Stream;\n@@ -31,31 +32,35 @@ import org.neo4j.lock.WaitStrategy;\n \n /**\n  * API for managing locks.\n- *\n+ * <p>\n  * Locks are grabbed by clients (which generally map to a transaction, but can be any actor in the system).\n- *\n+ * <p>\n  * ## Upgrading and downgrading\n- *\n+ * <p>\n  * Shared locks allow upgrading, and exclusive locks allow downgrading. To upgrade a held shared lock to an exclusive\n  * lock, simply acquire an exclusive lock and then release the shared lock. The acquire call will block other clients\n  * from acquiring shared or exclusive locks, and then wait until all other holders of the shared locks have released\n  * before returning.\n- *\n+ * <p>\n  * Downgrading a held exclusive lock is done by acquiring a shared lock, and then releasing the exclusive lock.\n- *\n+ * <p>\n  * ## Lock stacking\n- *\n+ * <p>\n  * Each call to acquire a lock must be accompanied by a call to release that same lock. A user can call acquire on the\n  * same lock multiple times, thus requiring an equal number of calls to release those locks.\n  */\n public interface Locks\n {\n-    /** For introspection and debugging. */\n+    /**\n+     * For introspection and debugging.\n+     */\n     interface Visitor\n     {\n-        /** Visit the description of a lock held by at least one client. */\n-        void visit( LockType lockType, ResourceType resourceType, long transactionId, long resourceId,\n-                String description, long estimatedWaitTime, long lockIdentityHashCode );\n+        /**\n+         * Visit the description of a lock held by at least one client.\n+         */\n+        void visit(LockType lockType, ResourceType resourceType, long transactionId, long resourceId,\n+                   String description, long estimatedWaitTime, long lockIdentityHashCode);\n     }\n \n     interface Client extends ResourceLocker, AutoCloseable\n@@ -73,39 +78,48 @@ public interface Locks\n         /**\n          * Initializes this locks client with a {@link LeaseClient} for the owning transaction. Must be called before any lock can be acquired.\n          * An lease that has become invalid can abort a transaction midway.\n-         * @param leaseClient {@link LeaseClient} of the owning transaction.\n+         *\n+         * @param leaseClient   {@link LeaseClient} of the owning transaction.\n          * @param transactionId lock client owning transaction id\n          */\n-        void initialize( LeaseClient leaseClient, long transactionId );\n+        void initialize(LeaseClient leaseClient, long transactionId);\n \n         /**\n          * Can be grabbed when there are no locks or only share locks on a resource. If the lock cannot be acquired,\n          * behavior is specified by the {@link WaitStrategy} for the given {@link ResourceType}.\n          *\n-         * @param tracer a tracer for listening on lock events.\n+         * @param tracer       a tracer for listening on lock events.\n          * @param resourceType type or resource(s) to lock.\n-         * @param resourceIds id(s) of resources to lock. Multiple ids should be ordered consistently by all callers\n+         * @param resourceIds  id(s) of resources to lock. Multiple ids should be ordered consistently by all callers\n          */\n-        void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException;\n+        void acquireShared(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException;\n \n         @Override\n-        void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException;\n+        void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException;\n \n-        /** Try grabbing exclusive lock, not waiting and returning a boolean indicating if we got the lock. */\n-        boolean tryExclusiveLock( ResourceType resourceType, long resourceId );\n+        /**\n+         * Try grabbing exclusive lock, not waiting and returning a boolean indicating if we got the lock.\n+         */\n+        boolean tryExclusiveLock(ResourceType resourceType, long resourceId);\n \n-        /** Try grabbing shared lock, not waiting and returning a boolean indicating if we got the lock. */\n-        boolean trySharedLock( ResourceType resourceType, long resourceId );\n+        /**\n+         * Try grabbing shared lock, not waiting and returning a boolean indicating if we got the lock.\n+         */\n+        boolean trySharedLock(ResourceType resourceType, long resourceId);\n \n-        boolean reEnterShared( ResourceType resourceType, long resourceId );\n+        boolean reEnterShared(ResourceType resourceType, long resourceId);\n \n-        boolean reEnterExclusive( ResourceType resourceType, long resourceId );\n+        boolean reEnterExclusive(ResourceType resourceType, long resourceId);\n \n-        /** Release a set of shared locks */\n-        void releaseShared( ResourceType resourceType, long... resourceIds );\n+        /**\n+         * Release a set of shared locks\n+         */\n+        void releaseShared(ResourceType resourceType, long... resourceIds);\n \n-        /** Release a set of exclusive locks */\n-        void releaseExclusive( ResourceType resourceType, long... resourceIds );\n+        /**\n+         * Release a set of exclusive locks\n+         */\n+        void releaseExclusive(ResourceType resourceType, long... resourceIds);\n \n         /**\n          * Start preparing this transaction for committing. In two-phase locking palace, we will in principle no longer\n@@ -126,7 +140,9 @@ public interface Locks\n          */\n         void stop();\n \n-        /** Releases all locks, using the client after calling this is undefined. */\n+        /**\n+         * Releases all locks, using the client after calling this is undefined.\n+         */\n         @Override\n         void close();\n \n@@ -145,8 +161,10 @@ public interface Locks\n      */\n     Client newClient();\n \n-    /** Visit all held locks. */\n-    void accept( Visitor visitor );\n+    /**\n+     * Visit all held locks.\n+     */\n+    void accept(Visitor visitor);\n \n     void close();\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1122/Locks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1122/Locks.java\nindex 9eec04eda14..b2556d1553e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1122/Locks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1122/Locks.java\n@@ -149,4 +149,4 @@ public interface Locks\n     void accept( Visitor visitor );\n \n     void close();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "kitodo-kitodo-production",
    "error_id": "38",
    "information": {
        "errors": [
            {
                "line": "879",
                "column": "48",
                "severity": "warning",
                "message": "WhitespaceAround: ':' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n    private boolean hasAuthorityForProcess(int processId) throws DataException {\n        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n        return hasAuthorityForProject(projectId);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/38/SecurityAccessService.java\nindex bf2127a1fcd..e1adb400bf6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/38/SecurityAccessService.java\n@@ -876,7 +876,7 @@ public class SecurityAccessService extends SecurityAccess {\n     }\n \n     private boolean hasAuthorityForProcess(int processId) throws DataException {\n-        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n+        Integer projectId = processId == 0 ? 0 : ServiceManager.getProcessService().findById(processId).getProject().getId();\n         return hasAuthorityForProject(projectId);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/38/SecurityAccessService.java\nindex bf2127a1fcd..73f98a7e1e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/38/SecurityAccessService.java\n@@ -181,7 +181,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * true if user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'addUser' or 'addRole' or 'addClient' or\n-     *         'addLdapGroup' or 'addLdapServer' globally or for client\n+     * 'addLdapGroup' or 'addLdapServer' globally or for client\n      */\n     public boolean hasAuthorityToAddOnUserPage() {\n         return hasAnyAuthorityGlobalOrForClient(\"addUser, addRole, addClient, addLdapGroup, addLdapServer\");\n@@ -192,7 +192,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * returns true if user has at least one of below given authorities.\n      *\n      * @return true if user has authority 'addProject' or 'addTemplate' or\n-     *         'addWorkflow' or 'addDocket' or 'addRuleset' for client\n+     * 'addWorkflow' or 'addDocket' or 'addRuleset' for client\n      */\n     public boolean hasAuthorityToAddOnProjectPage() {\n         return hasAnyAuthorityForClient(\"addProject, addTemplate, addWorkflow, addDocket, addRuleset\");\n@@ -346,8 +346,7 @@ public class SecurityAccessService extends SecurityAccess {\n     /**\n      * Check if the current user has the authority to edit the process.\n      *\n-     * @param processId\n-     *            the specific processId\n+     * @param processId the specific processId\n      * @return true if the current user has the authority to edit the process\n      */\n     public boolean hasAuthorityToEditProcess(int processId) throws DataException {\n@@ -367,8 +366,7 @@ public class SecurityAccessService extends SecurityAccess {\n     /**\n      * Check if the current user has the authority to edit the project.\n      *\n-     * @param projectId\n-     *            the specific projectId\n+     * @param projectId the specific projectId\n      * @return true if the current user has the authority to edit the project\n      */\n     public boolean hasAuthorityToEditProject(int projectId) {\n@@ -479,8 +477,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * Check if the current user has the authority to view the process. Add and edit\n      * authorities include also view.\n      *\n-     * @param processId\n-     *            the specific processId\n+     * @param processId the specific processId\n      * @return true if the current user has the authority to view the process\n      */\n     public boolean hasAuthorityToViewProcess(int processId) throws DataException {\n@@ -501,8 +498,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * Check if the current user has the authority to view the project. Add and edit\n      * authorities include also view.\n      *\n-     * @param projectId\n-     *            the specific projectId\n+     * @param projectId the specific projectId\n      * @return true if the current user has the authority to view the project\n      */\n     public boolean hasAuthorityToViewProject(int projectId) {\n@@ -563,8 +559,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * Check if the current user has the authority to change the user config. It is\n      * true if current user is logged user.\n      *\n-     * @param userId\n-     *            id of the viewed user\n+     * @param userId id of the viewed user\n      * @return true if the current user has the authority to change the user config\n      */\n     public boolean hasAuthorityToConfigUser(int userId) {\n@@ -786,7 +781,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * if the user has \"configureColumns\" authority globally or for a client.\n      *\n      * @return true if user has authority 'configureColumns' globally or for a\n-     *         client\n+     * client\n      */\n     public boolean hasAuthorityToConfigureColumns() {\n         return hasAuthorityGlobalOrForClient(\"configureColumns\");\n@@ -796,7 +791,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * Check if the current user has the authority to edit the process metadata.\n      *\n      * @return true if the current user has the authority to edit the process\n-     *         metadata\n+     * metadata\n      */\n     public boolean hasAuthorityToEditProcessMetaData() {\n         return hasAuthorityForClient(\"editProcessMetaData\");\n@@ -806,7 +801,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * Check if the current user has the authority to view the process metadata.\n      *\n      * @return true if the current user has the authority to view the process\n-     *         metadata\n+     * metadata\n      */\n     public boolean hasAuthorityToViewProcessMetaData() {\n         return hasAuthorityForClient(\"viewProcessMetaData\");\n@@ -817,7 +812,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * data.\n      *\n      * @return true if the current user has the authority to edit the process\n-     *         structure data\n+     * structure data\n      */\n     public boolean hasAuthorityToEditProcessStructureData() {\n         return hasAuthorityForClient(\"editProcessStructureData\");\n@@ -828,7 +823,7 @@ public class SecurityAccessService extends SecurityAccess {\n      * data.\n      *\n      * @return true if the current user has the authority to view the process\n-     *         structure data\n+     * structure data\n      */\n     public boolean hasAuthorityToViewProcessStructureData() {\n         return hasAuthorityForClient(\"viewProcessStructureData\");\n@@ -876,7 +871,7 @@ public class SecurityAccessService extends SecurityAccess {\n     }\n \n     private boolean hasAuthorityForProcess(int processId) throws DataException {\n-        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n+        Integer projectId = processId == 0 ? 0 : ServiceManager.getProcessService().findById(processId).getProject().getId();\n         return hasAuthorityForProject(projectId);\n     }\n \n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/38/SecurityAccessService.java\nindex bf2127a1fcd..966e49c74be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/38/SecurityAccessService.java\n@@ -876,7 +876,7 @@ public class SecurityAccessService extends SecurityAccess {\n     }\n \n     private boolean hasAuthorityForProcess(int processId) throws DataException {\n-        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n+        Integer projectId = processId == 0 ? 0 : ServiceManager.getProcessService().findById(processId).getProject().getId();\n         return hasAuthorityForProject(projectId);\n     }\n \n@@ -885,4 +885,4 @@ public class SecurityAccessService extends SecurityAccess {\n         return projects.stream().anyMatch(project -> project.getId().equals(projectId)) || projectId == 0;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/38/SecurityAccessService.java\nindex bf2127a1fcd..505b206fe3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/38/SecurityAccessService.java\n@@ -13,7 +13,6 @@ package org.kitodo.production.services.security;\n \n import java.util.List;\n import java.util.Objects;\n-\n import org.kitodo.data.database.beans.Project;\n import org.kitodo.data.exceptions.DataException;\n import org.kitodo.production.security.SecurityUserDetails;\n@@ -30,6 +29,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return unique instance of SecurityAccessService\n      */\n+\n+\n     public static SecurityAccessService getInstance() {\n         SecurityAccessService localReference = instance;\n         if (Objects.isNull(localReference)) {\n@@ -54,6 +55,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return the SecurityUserDetails object or null if no user is authenticated\n      */\n+\n+\n     public SecurityUserDetails getAuthenticatedSecurityUserDetails() {\n         if (isAuthenticated()) {\n             Object principal = getCurrentAuthentication().getPrincipal();\n@@ -69,6 +72,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if there is currently an authenticated user\n      */\n+\n+\n     public boolean isAuthenticated() {\n         Authentication currentAuthentication = getCurrentAuthentication();\n         if (Objects.nonNull(currentAuthentication)) {\n@@ -82,6 +87,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the batch\n      */\n+\n+\n     public boolean hasAuthorityToAddBatch() {\n         return hasAuthorityForClient(\"addBatch\");\n     }\n@@ -91,6 +98,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the process\n      */\n+\n+\n     public boolean hasAuthorityToAddProcess() {\n         return hasAuthorityForClient(\"addProcess\");\n     }\n@@ -100,6 +109,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the project\n      */\n+\n+\n     public boolean hasAuthorityToAddProject() {\n         return hasAuthorityForClient(\"addProject\");\n     }\n@@ -109,6 +120,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the template\n      */\n+\n+\n     public boolean hasAuthorityToAddTemplate() {\n         return hasAuthorityForClient(\"addTemplate\");\n     }\n@@ -118,6 +131,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the workflow\n      */\n+\n+\n     public boolean hasAuthorityToAddWorkflow() {\n         return hasAuthorityForClient(\"addWorkflow\");\n     }\n@@ -127,6 +142,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the docket\n      */\n+\n+\n     public boolean hasAuthorityToAddDocket() {\n         return hasAuthorityForClient(\"addDocket\");\n     }\n@@ -136,6 +153,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToAddRuleset() {\n         return hasAuthorityForClient(\"addRuleset\");\n     }\n@@ -145,6 +164,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the user\n      */\n+\n+\n     public boolean hasAuthorityToAddUser() {\n         return hasAuthorityGlobalOrForClient(\"addUser\");\n     }\n@@ -154,6 +175,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the role\n      */\n+\n+\n     public boolean hasAuthorityToAddRole() {\n         return hasAuthorityGlobalOrForClient(\"addRole\");\n     }\n@@ -163,6 +186,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the client\n      */\n+\n+\n     public boolean hasAuthorityToAddClient() {\n         return hasAuthorityGlobal(\"addClient\");\n     }\n@@ -172,6 +197,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to add the authority\n      */\n+\n+\n     public boolean hasAuthorityToAddAuthority() {\n         return hasAuthorityGlobal(\"addAuthority\");\n     }\n@@ -183,6 +210,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if user has authority 'addUser' or 'addRole' or 'addClient' or\n      *         'addLdapGroup' or 'addLdapServer' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToAddOnUserPage() {\n         return hasAnyAuthorityGlobalOrForClient(\"addUser, addRole, addClient, addLdapGroup, addLdapServer\");\n     }\n@@ -194,6 +223,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if user has authority 'addProject' or 'addTemplate' or\n      *         'addWorkflow' or 'addDocket' or 'addRuleset' for client\n      */\n+\n+\n     public boolean hasAuthorityToAddOnProjectPage() {\n         return hasAnyAuthorityForClient(\"addProject, addTemplate, addWorkflow, addDocket, addRuleset\");\n     }\n@@ -203,6 +234,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the batch\n      */\n+\n+\n     public boolean hasAuthorityToDeleteBatch() {\n         return hasAuthorityForClient(\"deleteBatch\");\n     }\n@@ -212,6 +245,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the process\n      */\n+\n+\n     public boolean hasAuthorityToDeleteProcess() {\n         return hasAuthorityForClient(\"deleteProcess\");\n     }\n@@ -221,6 +256,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the task\n      */\n+\n+\n     public boolean hasAuthorityToDeleteTask() {\n         return hasAuthorityForClient(\"deleteTask\");\n     }\n@@ -230,6 +267,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the project\n      */\n+\n+\n     public boolean hasAuthorityToDeleteProject() {\n         return hasAuthorityForClient(\"deleteProject\");\n     }\n@@ -239,6 +278,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the template\n      */\n+\n+\n     public boolean hasAuthorityToDeleteTemplate() {\n         return hasAuthorityForClient(\"deleteTemplate\");\n     }\n@@ -248,6 +289,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the workflow\n      */\n+\n+\n     public boolean hasAuthorityToDeleteWorkflow() {\n         return hasAuthorityForClient(\"deleteWorkflow\");\n     }\n@@ -257,6 +300,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the docket\n      */\n+\n+\n     public boolean hasAuthorityToDeleteDocket() {\n         return hasAuthorityForClient(\"deleteDocket\");\n     }\n@@ -266,6 +311,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToDeleteRuleset() {\n         return hasAuthorityForClient(\"deleteRuleset\");\n     }\n@@ -275,6 +322,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the user\n      */\n+\n+\n     public boolean hasAuthorityToDeleteUser() {\n         return hasAuthorityGlobalOrForClient(\"deleteUser\");\n     }\n@@ -284,6 +333,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the role\n      */\n+\n+\n     public boolean hasAuthorityToDeleteRole() {\n         return hasAuthorityGlobalOrForClient(\"deleteRole\");\n     }\n@@ -293,6 +344,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the client\n      */\n+\n+\n     public boolean hasAuthorityToDeleteClient() {\n         return hasAuthorityGlobal(\"deleteClient\");\n     }\n@@ -302,6 +355,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to delete the authority\n      */\n+\n+\n     public boolean hasAuthorityToDeleteAuthority() {\n         return hasAuthorityGlobalOrForClient(\"deleteAuthority\");\n     }\n@@ -311,6 +366,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the task\n      */\n+\n+\n     public boolean hasAuthorityToEditTask() {\n         return hasAuthorityForClient(\"editTask\");\n     }\n@@ -321,6 +378,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @param taskId the specific taskId\n      * @return true if the current user has the authority to edit the task\n      */\n+\n+\n     public boolean hasAuthorityToEditTask(int taskId) throws DataException {\n         return hasAuthorityForClient(\"editTask\") && hasAuthorityForTask(taskId);\n     }\n@@ -330,6 +389,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the batch\n      */\n+\n+\n     public boolean hasAuthorityToEditBatch() {\n         return hasAuthorityForClient(\"editBatch\");\n     }\n@@ -339,6 +400,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the process\n      */\n+\n+\n     public boolean hasAuthorityToEditProcess() {\n         return hasAuthorityForClient(\"editProcess\");\n     }\n@@ -350,6 +413,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *            the specific processId\n      * @return true if the current user has the authority to edit the process\n      */\n+\n+\n     public boolean hasAuthorityToEditProcess(int processId) throws DataException {\n         return hasAuthorityForClient(\"editProcess\") && hasAuthorityForProcess(processId);\n     }\n@@ -359,6 +424,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the project\n      */\n+\n+\n     public boolean hasAuthorityToEditProject() {\n         return hasAuthorityForClient(\"editProject\");\n     }\n@@ -371,6 +438,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *            the specific projectId\n      * @return true if the current user has the authority to edit the project\n      */\n+\n+\n     public boolean hasAuthorityToEditProject(int projectId) {\n         return hasAuthorityForClient(\"editProject\") && hasAuthorityForProject(projectId);\n     }\n@@ -380,6 +449,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the template\n      */\n+\n+\n     public boolean hasAuthorityToEditTemplate() {\n         return hasAuthorityForClient(\"editTemplate\");\n     }\n@@ -389,6 +460,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the workflow\n      */\n+\n+\n     public boolean hasAuthorityToEditWorkflow() {\n         return hasAuthorityForClient(\"editWorkflow\");\n     }\n@@ -398,6 +471,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the docket\n      */\n+\n+\n     public boolean hasAuthorityToEditDocket() {\n         return hasAuthorityForClient(\"editDocket\");\n     }\n@@ -407,6 +482,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToEditRuleset() {\n         return hasAuthorityForClient(\"editRuleset\");\n     }\n@@ -416,6 +493,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the user\n      */\n+\n+\n     public boolean hasAuthorityToEditUser() {\n         return hasAuthorityGlobalOrForClient(\"editUser\");\n     }\n@@ -425,6 +504,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the role\n      */\n+\n+\n     public boolean hasAuthorityToEditRole() {\n         return hasAuthorityGlobalOrForClient(\"editRole\");\n     }\n@@ -434,6 +515,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the client\n      */\n+\n+\n     public boolean hasAuthorityToEditClient() {\n         return hasAuthorityGlobal(\"editClient\");\n     }\n@@ -443,6 +526,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the authority\n      */\n+\n+\n     public boolean hasAuthorityToEditAuthority() {\n         return hasAuthorityGlobal(\"editAuthority\");\n     }\n@@ -452,6 +537,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the index\n      */\n+\n+\n     public boolean hasAuthorityToEditIndex() {\n         return hasAuthorityGlobal(\"editIndex\");\n     }\n@@ -461,6 +548,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to export process\n      */\n+\n+\n     public boolean hasAuthorityToExportProcess() {\n         return hasAuthorityForClient(\"exportProcess\");\n     }\n@@ -471,6 +560,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the process\n      */\n+\n+\n     public boolean hasAuthorityToViewProcess() {\n         return hasAnyAuthorityForClient(\"viewProcess, addProcess, editProcess\");\n     }\n@@ -483,6 +574,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *            the specific processId\n      * @return true if the current user has the authority to view the process\n      */\n+\n+\n     public boolean hasAuthorityToViewProcess(int processId) throws DataException {\n         return hasAnyAuthorityForClient(\"viewProcess, addProcess, editProcess\") && hasAuthorityForProcess(processId);\n     }\n@@ -493,6 +586,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the project\n      */\n+\n+\n     public boolean hasAuthorityToViewProject() {\n         return hasAnyAuthorityForClient(\"viewProject, addProject, editProject\");\n     }\n@@ -505,6 +600,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *            the specific projectId\n      * @return true if the current user has the authority to view the project\n      */\n+\n+\n     public boolean hasAuthorityToViewProject(int projectId) {\n         return hasAnyAuthorityForClient(\"viewProject, addProject, editProject\") && hasAuthorityForProject(projectId);\n     }\n@@ -515,6 +612,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the template\n      */\n+\n+\n     public boolean hasAuthorityToViewTemplate() {\n         return hasAnyAuthorityForClient(\"viewTemplate, addTemplate, editTemplate\");\n     }\n@@ -525,6 +624,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the workflow\n      */\n+\n+\n     public boolean hasAuthorityToViewWorkflow() {\n         return hasAnyAuthorityForClient(\"viewWorkflow, addWorkflow, editWorkflow\");\n     }\n@@ -535,6 +636,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the docket\n      */\n+\n+\n     public boolean hasAuthorityToViewDocket() {\n         return hasAnyAuthorityForClient(\"viewDocket, addDocket, editDocket\");\n     }\n@@ -545,6 +648,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the ruleset\n      */\n+\n+\n     public boolean hasAuthorityToViewRuleset() {\n         return hasAnyAuthorityForClient(\"viewRuleset, addRuleset, editRuleset\");\n     }\n@@ -555,6 +660,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the user\n      */\n+\n+\n     public boolean hasAuthorityToViewUser() {\n         return hasAnyAuthorityGlobalOrForClient(\"viewUser, addUser, editUser\");\n     }\n@@ -567,6 +674,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *            id of the viewed user\n      * @return true if the current user has the authority to change the user config\n      */\n+\n+\n     public boolean hasAuthorityToConfigUser(int userId) {\n         return ServiceManager.getUserService().getAuthenticatedUser().getId().equals(userId);\n     }\n@@ -577,6 +686,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the role\n      */\n+\n+\n     public boolean hasAuthorityToViewRole() {\n         return hasAnyAuthorityGlobalOrForClient(\"viewRole, addRole, editRole\");\n     }\n@@ -587,6 +698,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the client\n      */\n+\n+\n     public boolean hasAuthorityToViewClient() {\n         return hasAnyAuthorityGlobalOrForClient(\"viewClient, addClient, editClient\");\n     }\n@@ -597,6 +710,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the authority\n      */\n+\n+\n     public boolean hasAuthorityToViewAuthority() {\n         return hasAnyAuthorityGlobalOrForClient(\"viewAuthority, addAuthority, editAuthority\");\n     }\n@@ -607,6 +722,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the index\n      */\n+\n+\n     public boolean hasAuthorityToViewIndex() {\n         return hasAnyAuthorityGlobal(\"viewIndex, editIndex\");\n     }\n@@ -617,6 +734,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllTasks' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewTaskList() {\n         return hasAuthorityForClient(\"viewAllTasks\");\n     }\n@@ -627,6 +746,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllBatches' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewBatchList() {\n         return hasAuthorityForClient(\"viewAllBatches\");\n     }\n@@ -637,6 +758,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllProcesses' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessList() {\n         return hasAuthorityForClient(\"viewAllProcesses\");\n     }\n@@ -647,6 +770,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllProjects' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewProjectList() {\n         return hasAuthorityForClient(\"viewAllProjects\");\n     }\n@@ -657,6 +782,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllTemplates' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewTemplateList() {\n         return hasAuthorityForClient(\"viewAllTemplates\");\n     }\n@@ -667,6 +794,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllWorkflows' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewWorkflowList() {\n         return hasAuthorityForClient(\"viewAllWorkflows\");\n     }\n@@ -677,6 +806,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllDockets' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewDocketList() {\n         return hasAuthorityForClient(\"viewAllDockets\");\n     }\n@@ -687,6 +818,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllRulesets' for client\n      */\n+\n+\n     public boolean hasAuthorityToViewRulesetList() {\n         return hasAuthorityForClient(\"viewAllRulesets\");\n     }\n@@ -697,6 +830,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllUsers' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewUserList() {\n         return hasAuthorityGlobalOrForClient(\"viewAllUsers\");\n     }\n@@ -707,6 +842,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllRoles' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewRoleList() {\n         return hasAuthorityGlobalOrForClient(\"viewAllRoles\");\n     }\n@@ -717,6 +854,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllClients' globally or for client\n      */\n+\n+\n     public boolean hasAuthorityToViewClientList() {\n         return hasAuthorityGlobalOrForClient(\"viewAllClients\");\n     }\n@@ -727,6 +866,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllAuthorities' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewAuthorityList() {\n         return hasAuthorityGlobal(\"viewAllAuthorities\");\n     }\n@@ -737,6 +878,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllLdapGroups' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewLdapGroupList() {\n         return hasAuthorityGlobal(\"viewAllLdapGroups\");\n     }\n@@ -747,6 +890,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllLdapServers' globally\n      */\n+\n+\n     public boolean hasAuthorityToViewLdapServerList() {\n         return hasAuthorityGlobal(\"viewAllLdapServers\");\n     }\n@@ -757,6 +902,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if current user has global authority for add or edit role\n      */\n+\n+\n     public boolean hasAuthorityGlobalToAddOrEditRole() {\n         return hasAnyAuthorityGlobal(\"addRole, editRole\");\n     }\n@@ -767,6 +914,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllRoles' globally\n      */\n+\n+\n     public boolean hasAuthorityGlobalToViewRoleList() {\n         return hasAuthorityGlobal(\"viewAllRoles\");\n     }\n@@ -777,6 +926,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if user has authority 'viewAllUsers' globally\n      */\n+\n+\n     public boolean hasAuthorityGlobalToViewUserList() {\n         return hasAuthorityGlobal(\"viewAllUsers\");\n     }\n@@ -788,6 +939,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if user has authority 'configureColumns' globally or for a\n      *         client\n      */\n+\n+\n     public boolean hasAuthorityToConfigureColumns() {\n         return hasAuthorityGlobalOrForClient(\"configureColumns\");\n     }\n@@ -798,6 +951,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if the current user has the authority to edit the process\n      *         metadata\n      */\n+\n+\n     public boolean hasAuthorityToEditProcessMetaData() {\n         return hasAuthorityForClient(\"editProcessMetaData\");\n     }\n@@ -808,6 +963,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if the current user has the authority to view the process\n      *         metadata\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessMetaData() {\n         return hasAuthorityForClient(\"viewProcessMetaData\");\n     }\n@@ -819,6 +976,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if the current user has the authority to edit the process\n      *         structure data\n      */\n+\n+\n     public boolean hasAuthorityToEditProcessStructureData() {\n         return hasAuthorityForClient(\"editProcessStructureData\");\n     }\n@@ -830,6 +989,8 @@ public class SecurityAccessService extends SecurityAccess {\n      * @return true if the current user has the authority to view the process\n      *         structure data\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessStructureData() {\n         return hasAuthorityForClient(\"viewProcessStructureData\");\n     }\n@@ -839,6 +1000,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to edit the process images\n      */\n+\n+\n     public boolean hasAuthorityToEditProcessImages() {\n         return hasAuthorityForClient(\"editProcessImages\");\n     }\n@@ -848,6 +1011,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the process images\n      */\n+\n+\n     public boolean hasAuthorityToViewProcessImages() {\n         return hasAuthorityForClient(\"viewProcessImages\");\n     }\n@@ -857,6 +1022,8 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view database statistics\n      */\n+\n+\n     public boolean hasAuthorityToViewDatabaseStatistic() {\n         return hasAuthorityGlobal(\"viewDatabaseStatistic\");\n     }\n@@ -866,23 +1033,27 @@ public class SecurityAccessService extends SecurityAccess {\n      *\n      * @return true if the current user has the authority to view the system page\n      */\n+\n+\n     public boolean hasAuthorityToViewSystemPage() {\n         return hasAnyAuthorityGlobal(\"viewIndex, viewIndex\");\n     }\n \n+\n     private boolean hasAuthorityForTask(int taskId) throws DataException {\n         Integer processId = ServiceManager.getTaskService().findById(taskId).getProcess().getId();\n         return hasAuthorityForProcess(processId);\n     }\n \n+\n     private boolean hasAuthorityForProcess(int processId) throws DataException {\n-        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n+        Integer projectId = processId == 0 ? 0 : ServiceManager.getProcessService().findById(processId).getProject().getId();\n         return hasAuthorityForProject(projectId);\n     }\n \n+\n     private boolean hasAuthorityForProject(Integer projectId) {\n         List<Project> projects = ServiceManager.getUserService().getCurrentUser().getProjects();\n         return projects.stream().anyMatch(project -> project.getId().equals(projectId)) || projectId == 0;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 177
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/38/SecurityAccessService.java\nindex bf2127a1fcd..e1adb400bf6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/38/SecurityAccessService.java\n@@ -876,7 +876,7 @@ public class SecurityAccessService extends SecurityAccess {\n     }\n \n     private boolean hasAuthorityForProcess(int processId) throws DataException {\n-        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n+        Integer projectId = processId == 0 ? 0 : ServiceManager.getProcessService().findById(processId).getProject().getId();\n         return hasAuthorityForProject(projectId);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/38/SecurityAccessService.java\nindex bf2127a1fcd..e1adb400bf6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/38/SecurityAccessService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/38/SecurityAccessService.java\n@@ -876,7 +876,7 @@ public class SecurityAccessService extends SecurityAccess {\n     }\n \n     private boolean hasAuthorityForProcess(int processId) throws DataException {\n-        Integer projectId = processId == 0 ? 0 :ServiceManager.getProcessService().findById(processId).getProject().getId();\n+        Integer projectId = processId == 0 ? 0 : ServiceManager.getProcessService().findById(processId).getProject().getId();\n         return hasAuthorityForProject(projectId);\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
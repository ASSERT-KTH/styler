{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1369",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1369/ProgressListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1369/ProgressListener.java\nindex 82c6b5fd650..36757ef42d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1369/ProgressListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1369/ProgressListener.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.progress;\n \n /**\n@@ -27,180 +28,180 @@ package org.neo4j.helpers.progress;\n  */\n public interface ProgressListener\n {\n-    void started( String task );\n-\n-    void started();\n-\n-    void set( long progress );\n-\n-    void add( long progress );\n-\n-    void done();\n-\n-    void failed( Throwable e );\n-\n-    class Adapter implements ProgressListener\n-    {\n-        @Override\n-        public void started()\n-        {\n-            started( null );\n-        }\n-\n-        @Override\n-        public void started( String task )\n-        {\n-        }\n-\n-        @Override\n-        public void set( long progress )\n-        {\n-        }\n-\n-        @Override\n-        public void add( long progress )\n-        {\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-        }\n-\n-        @Override\n-        public void failed( Throwable e )\n-        {\n-        }\n-    }\n-\n-    ProgressListener NONE = new Adapter();\n-\n-    class SinglePartProgressListener extends Adapter\n-    {\n-        private final Indicator indicator;\n-        private final long totalCount;\n-        private long value;\n-        private int lastReported;\n-        private boolean stared;\n-\n-        SinglePartProgressListener( Indicator indicator, long totalCount )\n-        {\n-            this.indicator = indicator;\n-            this.totalCount = totalCount;\n-        }\n-\n-        @Override\n-        public void started( String task )\n-        {\n-            if ( !stared )\n-            {\n-                stared = true;\n-                indicator.startProcess( totalCount );\n-            }\n-        }\n-\n-        @Override\n-        public void set( long progress )\n-        {\n-            update( value = progress );\n-        }\n-\n-        @Override\n-        public void add( long progress )\n-        {\n-            update( value += progress );\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            set( totalCount );\n-            indicator.completeProcess();\n-        }\n-\n-        @Override\n-        public void failed( Throwable e )\n-        {\n-            indicator.failure(e);\n-        }\n-\n-        void update( long progress )\n-        {\n-            started();\n-            int current = totalCount == 0 ? 0 : (int) ((progress * indicator.reportResolution()) / totalCount);\n-            if ( current > lastReported )\n-            {\n-                indicator.progress( lastReported, current );\n-                lastReported = current;\n-            }\n-        }\n-    }\n-\n-    final class MultiPartProgressListener extends Adapter\n-    {\n-        public final String part;\n-        public final long totalCount;\n-\n-        private final Aggregator aggregator;\n-        private boolean started;\n-        private long value;\n-        private long lastReported;\n-\n-        MultiPartProgressListener( Aggregator aggregator, String part, long totalCount )\n-        {\n-            this.aggregator = aggregator;\n-            this.part = part;\n-            this.totalCount = totalCount;\n-        }\n-\n-        @Override\n-        public void started( String task )\n-        {\n-            if ( !started )\n-            {\n-                aggregator.start( this );\n-                started = true;\n-            }\n-        }\n-\n-        @Override\n-        public void set( long progress )\n-        {\n-            update( value = progress );\n-        }\n-\n-        @Override\n-        public void add( long progress )\n-        {\n-            update( value += progress );\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            set( totalCount );\n-            aggregator.complete( this );\n-        }\n-\n-        @Override\n-        public void failed( Throwable e )\n-        {\n-            aggregator.signalFailure( e );\n-        }\n-\n-        private void update( long progress )\n-        {\n-            started();\n-            if ( progress > lastReported )\n-            {\n-                aggregator.update( progress - lastReported );\n-                lastReported = progress;\n-            }\n-        }\n-\n-        enum State\n-        {\n-            INIT, LIVE\n-        }\n+  void started(String task);\n+\n+  void started();\n+\n+  void set(long progress);\n+\n+  void add(long progress);\n+\n+  void done();\n+\n+  void failed(Throwable e);\n+\n+  class Adapter implements ProgressListener\n+  {\n+    @Override\n+    public void started()\n+    {\n+      started(null);\n+    }\n+\n+    @Override\n+    public void started(String task)\n+    {\n+    }\n+\n+    @Override\n+    public void set(long progress)\n+    {\n+    }\n+\n+    @Override\n+    public void add(long progress)\n+    {\n+    }\n+\n+    @Override\n+    public void done()\n+    {\n+    }\n+\n+    @Override\n+    public void failed(Throwable e)\n+    {\n+    }\n+  }\n+\n+  ProgressListener NONE = new Adapter();\n+\n+  class SinglePartProgressListener extends Adapter\n+  {\n+    private final Indicator indicator;\n+    private final long totalCount;\n+    private long value;\n+    private int lastReported;\n+    private boolean stared;\n+\n+    SinglePartProgressListener(Indicator indicator, long totalCount)\n+    {\n+      this.indicator = indicator;\n+      this.totalCount = totalCount;\n+    }\n+\n+    @Override\n+    public void started(String task)\n+    {\n+      if (!stared)\n+      {\n+        stared = true;\n+        indicator.startProcess(totalCount);\n+      }\n+    }\n+\n+    @Override\n+    public void set(long progress)\n+    {\n+      update(value = progress);\n+    }\n+\n+    @Override\n+    public void add(long progress)\n+    {\n+      update(value += progress);\n+    }\n+\n+    @Override\n+    public void done()\n+    {\n+      set(totalCount);\n+      indicator.completeProcess();\n+    }\n+\n+    @Override\n+    public void failed(Throwable e)\n+    {\n+      indicator.failure(e);\n+    }\n+\n+    void update(long progress)\n+    {\n+      started();\n+      int current = totalCount == 0 ? 0 : (int) ((progress * indicator.reportResolution()) / totalCount);\n+      if (current > lastReported)\n+      {\n+        indicator.progress(lastReported, current);\n+        lastReported = current;\n+      }\n+    }\n+  }\n+\n+  final class MultiPartProgressListener extends Adapter\n+  {\n+    public final String part;\n+    public final long totalCount;\n+\n+    private final Aggregator aggregator;\n+    private boolean started;\n+    private long value;\n+    private long lastReported;\n+\n+    MultiPartProgressListener(Aggregator aggregator, String part, long totalCount)\n+    {\n+      this.aggregator = aggregator;\n+      this.part = part;\n+      this.totalCount = totalCount;\n+    }\n+\n+    @Override\n+    public void started(String task)\n+    {\n+      if (!started)\n+      {\n+        aggregator.start(this);\n+        started = true;\n+      }\n+    }\n+\n+    @Override\n+    public void set(long progress)\n+    {\n+      update(value = progress);\n+    }\n+\n+    @Override\n+    public void add(long progress)\n+    {\n+      update(value += progress);\n+    }\n+\n+    @Override\n+    public void done()\n+    {\n+      set(totalCount);\n+      aggregator.complete(this);\n+    }\n+\n+    @Override\n+    public void failed(Throwable e)\n+    {\n+      aggregator.signalFailure(e);\n+    }\n+\n+    private void update(long progress)\n+    {\n+      started();\n+      if (progress > lastReported)\n+      {\n+        aggregator.update(progress - lastReported);\n+        lastReported = progress;\n+      }\n+    }\n+\n+    enum State\n+    {\n+      INIT, LIVE\n     }\n+  }\n }\n",
            "diff_size": 177
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "130",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "25",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "195",
                    "column": "26",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1369/ProgressListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1369/ProgressListener.java\nindex 82c6b5fd650..b1fa27d1265 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1369/ProgressListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1369/ProgressListener.java\n@@ -127,8 +127,8 @@ public interface ProgressListener\n         void update( long progress )\n         {\n             started();\n-            int current = totalCount == 0 ? 0 : (int) ((progress * indicator.reportResolution()) / totalCount);\n-            if ( current > lastReported )\n+            int current = totalCount == 0 ? 0 : ( int) ((progress * indicator.reportResolution()) / totalCount);\n+            if ( current> lastReported )\n             {\n                 indicator.progress( lastReported, current );\n                 lastReported = current;\n@@ -139,7 +139,8 @@ public interface ProgressListener\n     final class MultiPartProgressListener extends Adapter\n     {\n         public final String part;\n-        public final long totalCount;\n+\n+public final long totalCount;\n \n         private final Aggregator aggregator;\n         private boolean started;\n@@ -191,7 +192,7 @@ public interface ProgressListener\n         private void update( long progress )\n         {\n             started();\n-            if ( progress > lastReported )\n+            if ( progress> lastReported )\n             {\n                 aggregator.update( progress - lastReported );\n                 lastReported = progress;\n@@ -203,4 +204,4 @@ public interface ProgressListener\n             INIT, LIVE\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
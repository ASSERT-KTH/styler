{
    "project_name": "neo4j-neo4j",
    "error_id": "434",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/434/Header.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/434/Header.java\nindex 1d8ba2426f8..e947cbcebe7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/434/Header.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/434/Header.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.input.csv;\n \n import java.io.PrintStream;\n@@ -38,20 +39,20 @@ public class Header\n {\n     public interface Factory\n     {\n-        default Header create( CharSeeker dataSeeker, Configuration configuration, IdType idType, Groups groups )\n+        default Header create(CharSeeker dataSeeker, Configuration configuration, IdType idType, Groups groups)\n         {\n-            return create( dataSeeker, configuration, idType, groups, NO_MONITOR );\n+            return create(dataSeeker, configuration, idType, groups, NO_MONITOR);\n         }\n \n         /**\n-         * @param dataSeeker {@link CharSeeker} containing the data. Usually there's a header for us\n-         * to read at the very top of it.\n+         * @param dataSeeker    {@link CharSeeker} containing the data. Usually there's a header for us\n+         *                      to read at the very top of it.\n          * @param configuration {@link Configuration} specific to the format of the data.\n-         * @param idType type of values we expect the ids to be.\n-         * @param groups {@link Groups} to register groups in.\n+         * @param idType        type of values we expect the ids to be.\n+         * @param groups        {@link Groups} to register groups in.\n          * @return the created {@link Header}.\n          */\n-        Header create( CharSeeker dataSeeker, Configuration configuration, IdType idType, Groups groups, Monitor monitor );\n+        Header create(CharSeeker dataSeeker, Configuration configuration, IdType idType, Groups groups, Monitor monitor);\n \n         /**\n          * @return whether or not this header is already defined. If this returns {@code false} then the header\n@@ -62,7 +63,7 @@ public class Header\n \n     private final Entry[] entries;\n \n-    public Header( Entry... entries )\n+    public Header(Entry... entries)\n     {\n         this.entries = entries;\n     }\n@@ -75,15 +76,15 @@ public class Header\n     @Override\n     public String toString()\n     {\n-        return Arrays.toString( entries );\n+        return Arrays.toString(entries);\n     }\n \n-    public Header( Header other )\n+    public Header(Header other)\n     {\n         this.entries = new Entry[other.entries.length];\n-        for ( int i = 0; i < other.entries.length; i++ )\n+        for (int i = 0; i < other.entries.length; i++)\n         {\n-            this.entries[i] = new Entry( other.entries[i] );\n+            this.entries[i] = new Entry(other.entries[i]);\n         }\n     }\n \n@@ -96,7 +97,7 @@ public class Header\n         // This can be used to encapsulate the parameters set in the header for spatial and temporal columns\n         private final CSVHeaderInformation optionalParameter;\n \n-        public Entry( String name, Type type, Group group, Extractor<?> extractor )\n+        public Entry(String name, Type type, Group group, Extractor<?> extractor)\n         {\n             this.name = name;\n             this.type = type;\n@@ -105,7 +106,7 @@ public class Header\n             this.optionalParameter = null;\n         }\n \n-        public Entry( String name, Type type, Group group, Extractor<?> extractor, CSVHeaderInformation optionalParameter )\n+        public Entry(String name, Type type, Group group, Extractor<?> extractor, CSVHeaderInformation optionalParameter)\n         {\n             this.name = name;\n             this.type = type;\n@@ -117,16 +118,15 @@ public class Header\n         @Override\n         public String toString()\n         {\n-            if ( optionalParameter == null )\n+            if (optionalParameter == null)\n             {\n                 return (name != null ? name : \"\") + \":\" + (type == Type.PROPERTY ? extractor.name().toLowerCase() : type.name()) +\n-                        (group() != Group.GLOBAL ? \"(\" + group().name() + \")\" : \"\");\n-            }\n-            else\n+                  (group() != Group.GLOBAL ? \"(\" + group().name() + \")\" : \"\");\n+            } else\n             {\n                 return (name != null ? name : \"\") + \":\" +\n-                        (type == Type.PROPERTY ? extractor.name().toLowerCase() + \"[\" + optionalParameter + \"]\" : type.name()) +\n-                        (group() != Group.GLOBAL ? \"(\" + group().name() + \")\" : \"\");\n+                  (type == Type.PROPERTY ? extractor.name().toLowerCase() + \"[\" + optionalParameter + \"]\" : type.name()) +\n+                  (group() != Group.GLOBAL ? \"(\" + group().name() + \")\" : \"\");\n             }\n         }\n \n@@ -160,12 +160,12 @@ public class Header\n         {\n             final int prime = 31;\n             int result = 1;\n-            if ( name != null )\n+            if (name != null)\n             {\n                 result = prime * result + name.hashCode();\n             }\n             result = prime * result + type.hashCode();\n-            if ( group != null )\n+            if (group != null)\n             {\n                 result = prime * result + group.hashCode();\n             }\n@@ -174,39 +174,39 @@ public class Header\n         }\n \n         @Override\n-        public boolean equals( Object obj )\n+        public boolean equals(Object obj)\n         {\n-            if ( this == obj )\n+            if (this == obj)\n             {\n                 return true;\n             }\n-            if ( obj == null || getClass() != obj.getClass() )\n+            if (obj == null || getClass() != obj.getClass())\n             {\n                 return false;\n             }\n             Entry other = (Entry) obj;\n-            return nullSafeEquals( name, other.name ) && type == other.type &&\n-                    nullSafeEquals( group, other.group ) && extractorEquals( extractor, other.extractor ) &&\n-                    nullSafeEquals( optionalParameter, other.optionalParameter );\n+            return nullSafeEquals(name, other.name) && type == other.type &&\n+              nullSafeEquals(group, other.group) && extractorEquals(extractor, other.extractor) &&\n+              nullSafeEquals(optionalParameter, other.optionalParameter);\n         }\n \n-        Entry( Entry other )\n+        Entry(Entry other)\n         {\n-            this( other.name, other.type, other.group, other.extractor != null ? other.extractor.clone() : null, other.optionalParameter );\n+            this(other.name, other.type, other.group, other.extractor != null ? other.extractor.clone() : null, other.optionalParameter);\n         }\n \n-        private static boolean nullSafeEquals( Object o1, Object o2 )\n+        private static boolean nullSafeEquals(Object o1, Object o2)\n         {\n-            return o1 == null || o2 == null ? o1 == o2 : o1.equals( o2 );\n+            return o1 == null || o2 == null ? o1 == o2 : o1.equals(o2);\n         }\n \n-        private static boolean extractorEquals( Extractor<?> first, Extractor<?> other )\n+        private static boolean extractorEquals(Extractor<?> first, Extractor<?> other)\n         {\n-            if ( first == null || other == null )\n+            if (first == null || other == null)\n             {\n                 return first == other;\n             }\n-            return first.getClass().equals( other.getClass() );\n+            return first.getClass().equals(other.getClass());\n         }\n     }\n \n@@ -216,35 +216,36 @@ public class Header\n          * Notifies that a type has been normalized.\n          *\n          * @param sourceDescription description of source file or stream that the header entry is defined in.\n-         * @param header name of the header entry.\n-         * @param fromType the type specified in the header in the source.\n-         * @param toType the type which will be used instead of the specified type.\n+         * @param header            name of the header entry.\n+         * @param fromType          the type specified in the header in the source.\n+         * @param toType            the type which will be used instead of the specified type.\n          */\n-        void typeNormalized( String sourceDescription, String header, String fromType, String toType );\n+        void typeNormalized(String sourceDescription, String header, String fromType, String toType);\n     }\n \n-    public static final Monitor NO_MONITOR = ( source, header, from, to ) -> {};\n+    public static final Monitor NO_MONITOR = (source, header, from, to) -> {\n+    };\n \n     public static class PrintingMonitor implements Monitor\n     {\n         private final PrintStream out;\n         private boolean first = true;\n \n-        PrintingMonitor( PrintStream out )\n+        PrintingMonitor(PrintStream out)\n         {\n             this.out = out;\n         }\n \n         @Override\n-        public void typeNormalized( String sourceDescription, String name, String fromType, String toType )\n+        public void typeNormalized(String sourceDescription, String name, String fromType, String toType)\n         {\n-            if ( first )\n+            if (first)\n             {\n-                out.println( \"Type normalization:\" );\n+                out.println(\"Type normalization:\");\n                 first = false;\n             }\n \n-            out.println( String.format( \"  Property type of '%s' normalized from '%s' --> '%s' in %s\", name, fromType, toType, sourceDescription ) );\n+            out.println(String.format(\"  Property type of '%s' normalized from '%s' --> '%s' in %s\", name, fromType, toType, sourceDescription));\n         }\n     }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
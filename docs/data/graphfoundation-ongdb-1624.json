{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1624",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1624/MultiPassStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1624/MultiPassStore.java\nindex 2f64a234e81..72d68e02018 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1624/MultiPassStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1624/MultiPassStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import java.util.ArrayList;\n@@ -36,136 +37,136 @@ import org.neo4j.kernel.impl.store.StoreAccess;\n \n public enum MultiPassStore\n {\n-    NODES\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getNodeStore();\n-                }\n-            },\n-    RELATIONSHIPS\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getRelationshipStore();\n-                }\n-            },\n-    PROPERTIES\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getPropertyStore();\n-                }\n-            },\n-    PROPERTY_KEYS\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getPropertyKeyTokenStore();\n-                }\n-            },\n-    STRINGS\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getNodeStore();\n-                }\n-            },\n-    ARRAYS\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getNodeStore();\n-                }\n-            },\n-    LABELS\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getLabelTokenStore();\n-                }\n-            },\n-    RELATIONSHIP_GROUPS\n-            {\n-                @Override\n-                RecordStore<?> getRecordStore( StoreAccess storeAccess )\n-                {\n-                    return storeAccess.getRelationshipGroupStore();\n-                }\n-            };\n-\n-    public List<RecordAccess> multiPassFilters( RecordAccess recordAccess, MultiPassStore[] stores )\n-    {\n-        List<RecordAccess> filteringStores = new ArrayList<>();\n-        filteringStores.add( new FilteringRecordAccess( recordAccess, this, stores ) );\n-        return filteringStores;\n-    }\n-\n-    public RecordAccess multiPassFilter( RecordAccess recordAccess, MultiPassStore... stores )\n-    {\n-        return new FilteringRecordAccess( recordAccess, this, stores );\n-    }\n-\n-    abstract RecordStore<?> getRecordStore( StoreAccess storeAccess );\n-\n-    static class Factory\n-    {\n-        private final CheckDecorator decorator;\n-        private final RecordAccess recordAccess;\n-        private final InconsistencyReport report;\n-        private final CacheAccess cacheAccess;\n-        private final Monitor monitor;\n-\n-        Factory( CheckDecorator decorator,\n-                RecordAccess recordAccess, CacheAccess cacheAccess, InconsistencyReport report, Monitor monitor )\n+  NODES\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n         {\n-            this.decorator = decorator;\n-            this.recordAccess = recordAccess;\n-            this.cacheAccess = cacheAccess;\n-            this.report = report;\n-            this.monitor = monitor;\n+          return storeAccess.getNodeStore();\n         }\n-\n-        ConsistencyReporter[] reporters( MultiPassStore... stores )\n+      },\n+  RELATIONSHIPS\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n         {\n-            List<ConsistencyReporter> result = new ArrayList<>();\n-            for ( MultiPassStore store : stores )\n-            {\n-                List<RecordAccess> filters = store.multiPassFilters( recordAccess, stores );\n-                for ( RecordAccess filter : filters )\n-                {\n-                    result.add( new ConsistencyReporter( filter, report ) );\n-                }\n-            }\n-            return result.toArray( new ConsistencyReporter[result.size()] );\n+          return storeAccess.getRelationshipStore();\n         }\n-\n-        ConsistencyReporter reporter( MultiPassStore store )\n+      },\n+  PROPERTIES\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n         {\n-            RecordAccess filter = store.multiPassFilter( recordAccess, store );\n-            return new ConsistencyReporter( filter, report, monitor ) ;\n+          return storeAccess.getPropertyStore();\n         }\n-\n-        StoreProcessor processor( Stage stage, MultiPassStore store )\n+      },\n+  PROPERTY_KEYS\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n         {\n-            return new StoreProcessor( decorator, reporter(store), stage, cacheAccess );\n+          return storeAccess.getPropertyKeyTokenStore();\n         }\n-\n-        public void reDecorateNode( StoreProcessor processer, NodeRecordCheck newChecker, boolean sparseNode )\n+      },\n+  STRINGS\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n+        {\n+          return storeAccess.getNodeStore();\n+        }\n+      },\n+  ARRAYS\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n+        {\n+          return storeAccess.getNodeStore();\n+        }\n+      },\n+  LABELS\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n+        {\n+          return storeAccess.getLabelTokenStore();\n+        }\n+      },\n+  RELATIONSHIP_GROUPS\n+      {\n+        @Override\n+        RecordStore<?> getRecordStore(StoreAccess storeAccess)\n         {\n-            processer.reDecorateNode(decorator, newChecker, sparseNode);\n+          return storeAccess.getRelationshipGroupStore();\n         }\n+      };\n \n-        public void reDecorateRelationship( StoreProcessor processer, RelationshipRecordCheck newChecker )\n+  public List<RecordAccess> multiPassFilters(RecordAccess recordAccess, MultiPassStore[] stores)\n+  {\n+    List<RecordAccess> filteringStores = new ArrayList<>();\n+    filteringStores.add(new FilteringRecordAccess(recordAccess, this, stores));\n+    return filteringStores;\n+  }\n+\n+  public RecordAccess multiPassFilter(RecordAccess recordAccess, MultiPassStore... stores)\n+  {\n+    return new FilteringRecordAccess(recordAccess, this, stores);\n+  }\n+\n+  abstract RecordStore<?> getRecordStore(StoreAccess storeAccess);\n+\n+  static class Factory\n+  {\n+    private final CheckDecorator decorator;\n+    private final RecordAccess recordAccess;\n+    private final InconsistencyReport report;\n+    private final CacheAccess cacheAccess;\n+    private final Monitor monitor;\n+\n+    Factory(CheckDecorator decorator,\n+            RecordAccess recordAccess, CacheAccess cacheAccess, InconsistencyReport report, Monitor monitor)\n+    {\n+      this.decorator = decorator;\n+      this.recordAccess = recordAccess;\n+      this.cacheAccess = cacheAccess;\n+      this.report = report;\n+      this.monitor = monitor;\n+    }\n+\n+    ConsistencyReporter[] reporters(MultiPassStore... stores)\n+    {\n+      List<ConsistencyReporter> result = new ArrayList<>();\n+      for (MultiPassStore store : stores)\n+      {\n+        List<RecordAccess> filters = store.multiPassFilters(recordAccess, stores);\n+        for (RecordAccess filter : filters)\n         {\n-            processer.reDecorateRelationship(decorator, newChecker );\n+          result.add(new ConsistencyReporter(filter, report));\n         }\n+      }\n+      return result.toArray(new ConsistencyReporter[result.size()]);\n+    }\n+\n+    ConsistencyReporter reporter(MultiPassStore store)\n+    {\n+      RecordAccess filter = store.multiPassFilter(recordAccess, store);\n+      return new ConsistencyReporter(filter, report, monitor);\n+    }\n+\n+    StoreProcessor processor(Stage stage, MultiPassStore store)\n+    {\n+      return new StoreProcessor(decorator, reporter(store), stage, cacheAccess);\n+    }\n+\n+    public void reDecorateNode(StoreProcessor processer, NodeRecordCheck newChecker, boolean sparseNode)\n+    {\n+      processer.reDecorateNode(decorator, newChecker, sparseNode);\n+    }\n+\n+    public void reDecorateRelationship(StoreProcessor processer, RelationshipRecordCheck newChecker)\n+    {\n+      processer.reDecorateRelationship(decorator, newChecker);\n     }\n+  }\n }\n",
            "diff_size": 218
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1624/MultiPassStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1624/MultiPassStore.java\nindex 2f64a234e81..b95e1b34876 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1624/MultiPassStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1624/MultiPassStore.java\n@@ -37,63 +37,56 @@ import org.neo4j.kernel.impl.store.StoreAccess;\n public enum MultiPassStore\n {\n     NODES\n-            {\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getNodeStore();\n                 }\n-            },\n-    RELATIONSHIPS\n-            {\n+            }, RELATIONSHIPS\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getRelationshipStore();\n                 }\n-            },\n-    PROPERTIES\n-            {\n+            }, PROPERTIES\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getPropertyStore();\n                 }\n-            },\n-    PROPERTY_KEYS\n-            {\n+            }, PROPERTY_KEYS\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getPropertyKeyTokenStore();\n                 }\n-            },\n-    STRINGS\n-            {\n+            }, STRINGS\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getNodeStore();\n                 }\n-            },\n-    ARRAYS\n-            {\n+            }, ARRAYS\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getNodeStore();\n                 }\n-            },\n-    LABELS\n-            {\n+            }, LABELS\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n                     return storeAccess.getLabelTokenStore();\n                 }\n-            },\n-    RELATIONSHIP_GROUPS\n-            {\n+            }, RELATIONSHIP_GROUPS\n+{\n                 @Override\n                 RecordStore<?> getRecordStore( StoreAccess storeAccess )\n                 {\n@@ -101,7 +94,7 @@ public enum MultiPassStore\n                 }\n             };\n \n-    public List<RecordAccess> multiPassFilters( RecordAccess recordAccess, MultiPassStore[] stores )\n+public List<RecordAccess> multiPassFilters( RecordAccess recordAccess, MultiPassStore[] stores )\n     {\n         List<RecordAccess> filteringStores = new ArrayList<>();\n         filteringStores.add( new FilteringRecordAccess( recordAccess, this, stores ) );\n@@ -150,7 +143,7 @@ public enum MultiPassStore\n         ConsistencyReporter reporter( MultiPassStore store )\n         {\n             RecordAccess filter = store.multiPassFilter( recordAccess, store );\n-            return new ConsistencyReporter( filter, report, monitor ) ;\n+            return new ConsistencyReporter( filter, report, monitor );\n         }\n \n         StoreProcessor processor( Stage stage, MultiPassStore store )\n@@ -160,12 +153,12 @@ public enum MultiPassStore\n \n         public void reDecorateNode( StoreProcessor processer, NodeRecordCheck newChecker, boolean sparseNode )\n         {\n-            processer.reDecorateNode(decorator, newChecker, sparseNode);\n+            processer.reDecorateNode( decorator, newChecker, sparseNode );\n         }\n \n         public void reDecorateRelationship( StoreProcessor processer, RelationshipRecordCheck newChecker )\n         {\n-            processer.reDecorateRelationship(decorator, newChecker );\n+            processer.reDecorateRelationship( decorator, newChecker );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
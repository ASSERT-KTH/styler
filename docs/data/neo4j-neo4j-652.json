{
    "project_name": "neo4j-neo4j",
    "error_id": "652",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/652/ShellParameterMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/652/ShellParameterMap.java\nindex 65d9e64377c..e722ade9e43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/652/ShellParameterMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/652/ShellParameterMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell;\n \n import java.io.StringReader;\n@@ -46,28 +47,26 @@ public class ShellParameterMap implements ParameterMap\n     private ExpressionEvaluator evaluator = Evaluator.expressionEvaluator();\n \n     @Override\n-    public Object setParameter( @Nonnull String name, @Nonnull String valueString ) throws ParameterException\n+    public Object setParameter(@Nonnull String name, @Nonnull String valueString) throws ParameterException\n     {\n-        String parameterName = CypherVariablesFormatter.unescapedCypherVariable( name );\n+        String parameterName = CypherVariablesFormatter.unescapedCypherVariable(name);\n         try\n         {\n-            Object value = new Cypher( interpreter,\n-                                         ParameterException.FACTORY,\n-                                         new CypherCharStream( valueString ) ).Expression();\n-            queryParams.put( parameterName, new ParamValue( valueString, value ) );\n+            Object value = new Cypher(interpreter,\n+              ParameterException.FACTORY,\n+              new CypherCharStream(valueString)).Expression();\n+            queryParams.put(parameterName, new ParamValue(valueString, value));\n             return value;\n-        }\n-        catch ( ParseException | UnsupportedOperationException e )\n+        } catch (ParseException | UnsupportedOperationException e)\n         {\n             try\n             {\n-                Object value = evaluator.evaluate( valueString, Object.class );\n-                queryParams.put( parameterName, new ParamValue( valueString, value ) );\n+                Object value = evaluator.evaluate(valueString, Object.class);\n+                queryParams.put(parameterName, new ParamValue(valueString, value));\n                 return value;\n-            }\n-            catch ( EvaluationException e1 )\n+            } catch (EvaluationException e1)\n             {\n-                throw new ParameterException( e1.getMessage() );\n+                throw new ParameterException(e1.getMessage());\n             }\n         }\n     }\n@@ -77,10 +76,10 @@ public class ShellParameterMap implements ParameterMap\n     public Map<String, Object> allParameterValues()\n     {\n         return queryParams.entrySet()\n-                          .stream()\n-                          .collect( Collectors.toMap(\n-                                  Map.Entry::getKey,\n-                                  value -> value.getValue().getValue() ) );\n+          .stream()\n+          .collect(Collectors.toMap(\n+            Map.Entry::getKey,\n+            value -> value.getValue().getValue()));\n     }\n \n     @Nonnull\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/652/ShellParameterMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/652/ShellParameterMap.java\nindex 65d9e64377c..8d823707a9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/652/ShellParameterMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/652/ShellParameterMap.java\n@@ -51,10 +51,9 @@ public class ShellParameterMap implements ParameterMap\n         String parameterName = CypherVariablesFormatter.unescapedCypherVariable( name );\n         try\n         {\n-            Object value = new Cypher( interpreter,\n-                                         ParameterException.FACTORY,\n+            Object value = new Cypher( interpreter, ParameterException.FACTORY,\n                                          new CypherCharStream( valueString ) ).Expression();\n-            queryParams.put( parameterName, new ParamValue( valueString, value ) );\n+queryParams.put( parameterName, new ParamValue( valueString, value ) );\n             return value;\n         }\n         catch ( ParseException | UnsupportedOperationException e )\n@@ -76,8 +75,7 @@ public class ShellParameterMap implements ParameterMap\n     @Override\n     public Map<String, Object> allParameterValues()\n     {\n-        return queryParams.entrySet()\n-                          .stream()\n+        return queryParams.entrySet().stream()\n                           .collect( Collectors.toMap(\n                                   Map.Entry::getKey,\n                                   value -> value.getValue().getValue() ) );\n@@ -89,4 +87,4 @@ public class ShellParameterMap implements ParameterMap\n     {\n         return queryParams;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
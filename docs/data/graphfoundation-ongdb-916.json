{
    "project_name": "graphfoundation-ongdb",
    "error_id": "916",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/916/RestoreDatabaseCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/916/RestoreDatabaseCommand.java\nindex 511c1828807..984a3e14cd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/916/RestoreDatabaseCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/916/RestoreDatabaseCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.restore;\n \n import java.io.File;\n@@ -37,63 +38,62 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.database_path;\n \n public class RestoreDatabaseCommand\n {\n-    private FileSystemAbstraction fs;\n-    private final File fromPath;\n-    private final File databaseDir;\n-    private final File transactionLogsDirectory;\n-    private String databaseName;\n-    private boolean forceOverwrite;\n+  private FileSystemAbstraction fs;\n+  private final File fromPath;\n+  private final File databaseDir;\n+  private final File transactionLogsDirectory;\n+  private String databaseName;\n+  private boolean forceOverwrite;\n+\n+  public RestoreDatabaseCommand(FileSystemAbstraction fs, File fromPath, Config config, String databaseName,\n+                                boolean forceOverwrite)\n+  {\n+    this.fs = fs;\n+    this.fromPath = fromPath;\n+    this.databaseName = databaseName;\n+    this.forceOverwrite = forceOverwrite;\n+    this.databaseDir = config.get(database_path).getAbsoluteFile();\n+    this.transactionLogsDirectory = config.get(GraphDatabaseSettings.logical_logs_location).getAbsoluteFile();\n+  }\n \n-    public RestoreDatabaseCommand( FileSystemAbstraction fs, File fromPath, Config config, String databaseName,\n-            boolean forceOverwrite )\n+  public void execute() throws IOException, CommandFailed\n+  {\n+    if (!fs.fileExists(fromPath))\n     {\n-        this.fs = fs;\n-        this.fromPath = fromPath;\n-        this.databaseName = databaseName;\n-        this.forceOverwrite = forceOverwrite;\n-        this.databaseDir = config.get( database_path ).getAbsoluteFile();\n-        this.transactionLogsDirectory = config.get( GraphDatabaseSettings.logical_logs_location ).getAbsoluteFile();\n+      throw new IllegalArgumentException(format(\"Source directory does not exist [%s]\", fromPath));\n     }\n \n-    public void execute() throws IOException, CommandFailed\n+    try\n     {\n-        if ( !fs.fileExists( fromPath ) )\n-        {\n-            throw new IllegalArgumentException( format( \"Source directory does not exist [%s]\", fromPath ) );\n-        }\n-\n-        try\n-        {\n-            Validators.CONTAINS_EXISTING_DATABASE.validate( fromPath );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            throw new IllegalArgumentException(\n-                    format( \"Source directory is not a database backup [%s]\", fromPath ) );\n-        }\n+      Validators.CONTAINS_EXISTING_DATABASE.validate(fromPath);\n+    } catch (IllegalArgumentException e)\n+    {\n+      throw new IllegalArgumentException(\n+          format(\"Source directory is not a database backup [%s]\", fromPath));\n+    }\n \n-        if ( fs.fileExists( databaseDir ) && !forceOverwrite )\n-        {\n-            throw new IllegalArgumentException( format( \"Database with name [%s] already exists at %s\",\n-                    databaseName, databaseDir ) );\n-        }\n+    if (fs.fileExists(databaseDir) && !forceOverwrite)\n+    {\n+      throw new IllegalArgumentException(format(\"Database with name [%s] already exists at %s\",\n+          databaseName, databaseDir));\n+    }\n \n-        checkLock( databaseDir.toPath() );\n+    checkLock(databaseDir.toPath());\n \n-        fs.deleteRecursively( databaseDir );\n+    fs.deleteRecursively(databaseDir);\n \n-        if ( !isSameOrChildFile( databaseDir, transactionLogsDirectory ) )\n-        {\n-            fs.deleteRecursively( transactionLogsDirectory );\n-        }\n-        LogFiles backupLogFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( fromPath, fs ).build();\n-        File[] files = fromPath.listFiles();\n-        if ( files != null )\n-        {\n-            for ( File file : files )\n-            {\n-                fs.copyToDirectory( file, backupLogFiles.isLogFile( file ) ? transactionLogsDirectory : databaseDir );\n-            }\n-        }\n+    if (!isSameOrChildFile(databaseDir, transactionLogsDirectory))\n+    {\n+      fs.deleteRecursively(transactionLogsDirectory);\n+    }\n+    LogFiles backupLogFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(fromPath, fs).build();\n+    File[] files = fromPath.listFiles();\n+    if (files != null)\n+    {\n+      for (File file : files)\n+      {\n+        fs.copyToDirectory(file, backupLogFiles.isLogFile(file) ? transactionLogsDirectory : databaseDir);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/916/RestoreDatabaseCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/916/RestoreDatabaseCommand.java\nindex 511c1828807..84eb1d2b9dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/916/RestoreDatabaseCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/916/RestoreDatabaseCommand.java\n@@ -68,8 +68,7 @@ public class RestoreDatabaseCommand\n         }\n         catch ( IllegalArgumentException e )\n         {\n-            throw new IllegalArgumentException(\n-                    format( \"Source directory is not a database backup [%s]\", fromPath ) );\n+            throw new IllegalArgumentException( format( \"Source directory is not a database backup [%s]\", fromPath ) );\n         }\n \n         if ( fs.fileExists( databaseDir ) && !forceOverwrite )\n@@ -79,14 +78,13 @@ public class RestoreDatabaseCommand\n         }\n \n         checkLock( databaseDir.toPath() );\n-\n-        fs.deleteRecursively( databaseDir );\n-\n-        if ( !isSameOrChildFile( databaseDir, transactionLogsDirectory ) )\n+fs.deleteRecursively( databaseDir );\n+if ( !isSameOrChildFile( databaseDir, transactionLogsDirectory ) )\n         {\n             fs.deleteRecursively( transactionLogsDirectory );\n         }\n-        LogFiles backupLogFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( fromPath, fs ).build();\n+\n+LogFiles backupLogFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( fromPath, fs ).build();\n         File[] files = fromPath.listFiles();\n         if ( files != null )\n         {\n@@ -96,4 +94,4 @@ public class RestoreDatabaseCommand\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
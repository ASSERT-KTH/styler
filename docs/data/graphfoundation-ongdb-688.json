{
    "project_name": "graphfoundation-ongdb",
    "error_id": "688",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/688/LoadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/688/LoadCommand.java\nindex 8a0f0b5a5a2..57a7d402f60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/688/LoadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/688/LoadCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.io.IOException;\n@@ -51,116 +52,111 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.logical_logs_locat\n public class LoadCommand implements AdminCommand\n {\n \n-    private static final Arguments arguments = new Arguments()\n-            .withArgument( new MandatoryCanonicalPath( \"from\", \"archive-path\", \"Path to archive created with the \" +\n-                    \"dump command.\" ) )\n-            .withDatabase()\n-            .withArgument( new OptionalBooleanArg( \"force\", false, \"If an existing database should be replaced.\" ) );\n-\n-    private final Path homeDir;\n-    private final Path configDir;\n-    private final Loader loader;\n-    public LoadCommand( Path homeDir, Path configDir, Loader loader )\n+  private static final Arguments arguments = new Arguments()\n+      .withArgument(new MandatoryCanonicalPath(\"from\", \"archive-path\", \"Path to archive created with the \" +\n+          \"dump command.\"))\n+      .withDatabase()\n+      .withArgument(new OptionalBooleanArg(\"force\", false, \"If an existing database should be replaced.\"));\n+\n+  private final Path homeDir;\n+  private final Path configDir;\n+  private final Loader loader;\n+\n+  public LoadCommand(Path homeDir, Path configDir, Loader loader)\n+  {\n+    requireNonNull(homeDir);\n+    requireNonNull(configDir);\n+    requireNonNull(loader);\n+    this.homeDir = homeDir;\n+    this.configDir = configDir;\n+    this.loader = loader;\n+  }\n+\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    arguments.parse(args);\n+    Path archive = arguments.getMandatoryPath(\"from\");\n+    String database = arguments.get(ARG_DATABASE);\n+    boolean force = arguments.getBoolean(\"force\");\n+\n+    Config config = buildConfig(database);\n+\n+    Path databaseDirectory = canonicalPath(getDatabaseDirectory(config));\n+    Path transactionLogsDirectory = canonicalPath(getTransactionalLogsDirectory(config));\n+\n+    deleteIfNecessary(databaseDirectory, transactionLogsDirectory, force);\n+    load(archive, database, databaseDirectory, transactionLogsDirectory);\n+  }\n+\n+  private Path getDatabaseDirectory(Config config)\n+  {\n+    return config.get(database_path).toPath();\n+  }\n+\n+  private Path getTransactionalLogsDirectory(Config config)\n+  {\n+    return config.get(logical_logs_location).toPath();\n+  }\n+\n+  private Config buildConfig(String databaseName)\n+  {\n+    return Config.fromFile(configDir.resolve(Config.DEFAULT_CONFIG_FILE_NAME))\n+        .withHome(homeDir)\n+        .withConnectorsDisabled()\n+        .withSetting(GraphDatabaseSettings.active_database, databaseName)\n+        .build();\n+  }\n+\n+  private void deleteIfNecessary(Path databaseDirectory, Path transactionLogsDirectory, boolean force) throws CommandFailed\n+  {\n+    try\n     {\n-        requireNonNull(homeDir);\n-        requireNonNull( configDir );\n-        requireNonNull( loader );\n-        this.homeDir = homeDir;\n-        this.configDir = configDir;\n-        this.loader = loader;\n-    }\n-\n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n+      if (force)\n+      {\n+        checkLock(databaseDirectory);\n+        FileUtils.deletePathRecursively(databaseDirectory);\n+        if (!isSameOrChildPath(databaseDirectory, transactionLogsDirectory))\n+        {\n+          FileUtils.deletePathRecursively(transactionLogsDirectory);\n+        }\n+      }\n+    } catch (IOException e)\n     {\n-        arguments.parse( args );\n-        Path archive = arguments.getMandatoryPath( \"from\" );\n-        String database = arguments.get( ARG_DATABASE );\n-        boolean force = arguments.getBoolean( \"force\" );\n-\n-        Config config = buildConfig( database );\n-\n-        Path databaseDirectory = canonicalPath( getDatabaseDirectory( config ) );\n-        Path transactionLogsDirectory = canonicalPath( getTransactionalLogsDirectory( config ) );\n-\n-        deleteIfNecessary( databaseDirectory, transactionLogsDirectory, force );\n-        load( archive, database, databaseDirectory, transactionLogsDirectory );\n+      wrapIOException(e);\n     }\n+  }\n \n-    private Path getDatabaseDirectory( Config config )\n+  private void load(Path archive, String database, Path databaseDirectory, Path transactionLogsDirectory) throws CommandFailed\n+  {\n+    try\n     {\n-        return config.get( database_path ).toPath();\n-    }\n-\n-    private Path getTransactionalLogsDirectory( Config config )\n+      loader.load(archive, databaseDirectory, transactionLogsDirectory);\n+    } catch (NoSuchFileException e)\n     {\n-        return config.get( logical_logs_location ).toPath();\n-    }\n-\n-    private Config buildConfig( String databaseName )\n+      if (Paths.get(e.getMessage()).toAbsolutePath().equals(archive.toAbsolutePath()))\n+      {\n+        throw new CommandFailed(\"archive does not exist: \" + archive, e);\n+      }\n+      wrapIOException(e);\n+    } catch (FileAlreadyExistsException e)\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .withHome( homeDir )\n-                .withConnectorsDisabled()\n-                .withSetting( GraphDatabaseSettings.active_database, databaseName )\n-                .build();\n-    }\n-\n-    private void deleteIfNecessary( Path databaseDirectory, Path transactionLogsDirectory, boolean force ) throws CommandFailed\n+      throw new CommandFailed(\"database already exists: \" + database, e);\n+    } catch (AccessDeniedException e)\n     {\n-        try\n-        {\n-            if ( force )\n-            {\n-                checkLock( databaseDirectory );\n-                FileUtils.deletePathRecursively( databaseDirectory );\n-                if ( !isSameOrChildPath( databaseDirectory, transactionLogsDirectory ) )\n-                {\n-                    FileUtils.deletePathRecursively( transactionLogsDirectory );\n-                }\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            wrapIOException( e );\n-        }\n-    }\n-\n-    private void load( Path archive, String database, Path databaseDirectory, Path transactionLogsDirectory ) throws CommandFailed\n+      throw new CommandFailed(\n+          \"you do not have permission to load a database -- is Neo4j running as a \" + \"different user?\", e);\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            loader.load( archive, databaseDirectory, transactionLogsDirectory );\n-        }\n-        catch ( NoSuchFileException e )\n-        {\n-            if ( Paths.get( e.getMessage() ).toAbsolutePath().equals( archive.toAbsolutePath() ) )\n-            {\n-                throw new CommandFailed( \"archive does not exist: \" + archive, e );\n-            }\n-            wrapIOException( e );\n-        }\n-        catch ( FileAlreadyExistsException e )\n-        {\n-            throw new CommandFailed( \"database already exists: \" + database, e );\n-        }\n-        catch ( AccessDeniedException e )\n-        {\n-            throw new CommandFailed(\n-                    \"you do not have permission to load a database -- is Neo4j running as a \" + \"different user?\", e );\n-        }\n-        catch ( IOException e )\n-        {\n-            wrapIOException( e );\n-        }\n-        catch ( IncorrectFormat incorrectFormat )\n-        {\n-            throw new CommandFailed( \"Not a valid Neo4j archive: \" + archive, incorrectFormat );\n-        }\n-    }\n-\n-    public static Arguments arguments()\n+      wrapIOException(e);\n+    } catch (IncorrectFormat incorrectFormat)\n     {\n-        return arguments;\n+      throw new CommandFailed(\"Not a valid Neo4j archive: \" + archive, incorrectFormat);\n     }\n+  }\n+\n+  public static Arguments arguments()\n+  {\n+    return arguments;\n+  }\n }\n",
            "diff_size": 162
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 306).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/688/LoadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/688/LoadCommand.java\nindex 8a0f0b5a5a2..c4c86521750 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/688/LoadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/688/LoadCommand.java\n@@ -50,17 +50,12 @@ import static org.neo4j.graphdb.factory.GraphDatabaseSettings.logical_logs_locat\n \n public class LoadCommand implements AdminCommand\n {\n-\n-    private static final Arguments arguments = new Arguments()\n-            .withArgument( new MandatoryCanonicalPath( \"from\", \"archive-path\", \"Path to archive created with the \" +\n-                    \"dump command.\" ) )\n-            .withDatabase()\n-            .withArgument( new OptionalBooleanArg( \"force\", false, \"If an existing database should be replaced.\" ) );\n-\n-    private final Path homeDir;\n+    private static final Arguments arguments = new Arguments().withArgument( new MandatoryCanonicalPath( \"from\", \"archive-path\", \"Path to archive created with the \" + \"dump command.\" ) ).withDatabase().withArgument( new OptionalBooleanArg( \"force\", false, \"If an existing database should be replaced.\" ) );\n+private final Path homeDir;\n     private final Path configDir;\n     private final Loader loader;\n-    public LoadCommand( Path homeDir, Path configDir, Loader loader )\n+\n+public LoadCommand( Path homeDir, Path configDir, Loader loader )\n     {\n         requireNonNull(homeDir);\n         requireNonNull( configDir );\n@@ -77,10 +72,8 @@ public class LoadCommand implements AdminCommand\n         Path archive = arguments.getMandatoryPath( \"from\" );\n         String database = arguments.get( ARG_DATABASE );\n         boolean force = arguments.getBoolean( \"force\" );\n-\n-        Config config = buildConfig( database );\n-\n-        Path databaseDirectory = canonicalPath( getDatabaseDirectory( config ) );\n+Config config = buildConfig( database );\n+Path databaseDirectory = canonicalPath( getDatabaseDirectory( config ) );\n         Path transactionLogsDirectory = canonicalPath( getTransactionalLogsDirectory( config ) );\n \n         deleteIfNecessary( databaseDirectory, transactionLogsDirectory, force );\n@@ -99,10 +92,8 @@ public class LoadCommand implements AdminCommand\n \n     private Config buildConfig( String databaseName )\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .withHome( homeDir )\n-                .withConnectorsDisabled()\n-                .withSetting( GraphDatabaseSettings.active_database, databaseName )\n+        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) ).withHome( homeDir )\n+                .withConnectorsDisabled().withSetting( GraphDatabaseSettings.active_database, databaseName )\n                 .build();\n     }\n \n@@ -138,7 +129,8 @@ public class LoadCommand implements AdminCommand\n             {\n                 throw new CommandFailed( \"archive does not exist: \" + archive, e );\n             }\n-            wrapIOException( e );\n+\n+wrapIOException( e );\n         }\n         catch ( FileAlreadyExistsException e )\n         {\n@@ -146,9 +138,8 @@ public class LoadCommand implements AdminCommand\n         }\n         catch ( AccessDeniedException e )\n         {\n-            throw new CommandFailed(\n-                    \"you do not have permission to load a database -- is Neo4j running as a \" + \"different user?\", e );\n-        }\n+            throw new CommandFailed( \"you do not have permission to load a database -- is Neo4j running as a \" + \"different user?\", e );\n+    }\n         catch ( IOException e )\n         {\n             wrapIOException( e );\n@@ -163,4 +154,4 @@ public class LoadCommand implements AdminCommand\n     {\n         return arguments;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
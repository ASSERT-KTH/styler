{
    "project_name": "neo4j-neo4j",
    "error_id": "2970",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2970/TransactionRangeDiagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2970/TransactionRangeDiagnostics.java\nindex 4541f970e6d..c2b7419c0fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2970/TransactionRangeDiagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2970/TransactionRangeDiagnostics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.diagnostics.providers;\n \n import java.io.IOException;\n@@ -34,36 +35,35 @@ public class TransactionRangeDiagnostics extends NamedDiagnosticsProvider\n {\n     private final Database database;\n \n-    TransactionRangeDiagnostics( Database database )\n+    TransactionRangeDiagnostics(Database database)\n     {\n-        super( \"Transaction log\" );\n+        super(\"Transaction log\");\n         this.database = database;\n     }\n \n     @Override\n-    public void dump( DiagnosticsLogger logger )\n+    public void dump(DiagnosticsLogger logger)\n     {\n-        LogFiles logFiles = database.getDependencyResolver().resolveDependency( LogFiles.class );\n+        LogFiles logFiles = database.getDependencyResolver().resolveDependency(LogFiles.class);\n         LogFile logFile = logFiles.getLogFile();\n         try\n         {\n-            logger.log( \"Transaction log files stored on file store: \" + FileUtils.getFileStoreType( logFiles.logFilesDirectory() ) );\n-            for ( long logVersion = logFile.getLowestLogVersion(); logFile.versionExists( logVersion ); logVersion++ )\n+            logger.log(\"Transaction log files stored on file store: \" + FileUtils.getFileStoreType(logFiles.logFilesDirectory()));\n+            for (long logVersion = logFile.getLowestLogVersion(); logFile.versionExists(logVersion); logVersion++)\n             {\n-                if ( logFile.hasAnyEntries( logVersion ) )\n+                if (logFile.hasAnyEntries(logVersion))\n                 {\n-                    LogHeader header = logFile.extractHeader( logVersion );\n+                    LogHeader header = logFile.extractHeader(logVersion);\n                     long firstTransactionIdInThisLog = header.getLastCommittedTxId() + 1;\n-                    logger.log( \"Oldest transaction \" + firstTransactionIdInThisLog + \" found in log with version \" + logVersion );\n+                    logger.log(\"Oldest transaction \" + firstTransactionIdInThisLog + \" found in log with version \" + logVersion);\n                     return;\n                 }\n             }\n-            logger.log( \"No transactions found in any log\" );\n-        }\n-        catch ( IOException e )\n+            logger.log(\"No transactions found in any log\");\n+        } catch (IOException e)\n         {\n-            logger.log( \"Error trying to dump transaction log files info.\" );\n-            logger.log( Exceptions.stringify( e ) );\n+            logger.log(\"Error trying to dump transaction log files info.\");\n+            logger.log(Exceptions.stringify(e));\n         }\n     }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
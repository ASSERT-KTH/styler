{
    "project_name": "intuit-Tank",
    "error_id": "167",
    "information": {
        "errors": [
            {
                "line": "46",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n\t\tSerializable {\n\n\n\t/**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "49",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/167/CodeTemplate.java\nindex ada84ee11e9..165b96e8bfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/167/CodeTemplate.java\n@@ -43,7 +43,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @see StaticCodeTemplate\n  */\n public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n-\t\tSerializable {\n+        Serializable {\n \n \n \t/**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/167/CodeTemplate.java\nindex ada84ee11e9..aa5c7c17e72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/167/CodeTemplate.java\n@@ -6,6 +6,7 @@\n  * This library is distributed under a modified BSD license.  See the included\n  * LICENSE file for details.\n  */\n+\n package org.fife.ui.rsyntaxtextarea.templates;\n \n import java.io.Serializable;\n@@ -20,7 +21,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * associates a short identifier with a longer code snippet, then when the\n  * code template is enabled and the short identifier is typed, it is\n  * replaced with the longer code snippet.<p>\n- *\n+ * <p>\n  * For example, you can associate the identifier <code>forb</code>\n  * (short for \"for-block\") with the following code:<p>\n  *\n@@ -29,12 +30,12 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  *\n  *   }\n  * </pre>\n- *\n+ * <p>\n  * Then, whenever you type <code>forb</code> followed by a trigger\n  * (e.g., a space) into a text area with this <code>CodeTemplate</code>,\n  * the code snippet is added in place of <code>forb</code>.  Further,\n  * the caret is placed at the position denoted by <code>&lt;caret&gt;</code>.<p>\n- *\n+ * <p>\n  * Static text replacements are done with {@link StaticCodeTemplate}.  Dynamic\n  * templates can also be created and used.\n  *\n@@ -43,33 +44,33 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @see StaticCodeTemplate\n  */\n public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n-\t\tSerializable {\n+  Serializable {\n \n \n-\t/**\n-\t * Creates a deep copy of this template.\n-\t *\n-\t * @return A deep copy of this template.\n-\t */\n-\tObject clone();\n+  /**\n+   * Creates a deep copy of this template.\n+   *\n+   * @return A deep copy of this template.\n+   */\n+  Object clone();\n \n \n-\t/**\n-\t * Returns the ID of this code template.\n-\t *\n-\t * @return The template's ID.\n-\t */\n-\tString getID();\n+  /**\n+   * Returns the ID of this code template.\n+   *\n+   * @return The template's ID.\n+   */\n+  String getID();\n \n \n-\t/**\n-\t * Invokes this code template.  The changes are made to the given text\n-\t * area.\n-\t *\n-\t * @param textArea The text area to operate on.\n-\t * @throws BadLocationException If something bad happens.\n-\t */\n-\tvoid invoke(RSyntaxTextArea textArea) throws BadLocationException;\n+  /**\n+   * Invokes this code template.  The changes are made to the given text\n+   * area.\n+   *\n+   * @param textArea The text area to operate on.\n+   * @throws BadLocationException If something bad happens.\n+   */\n+  void invoke(RSyntaxTextArea textArea) throws BadLocationException;\n \n \n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/167/CodeTemplate.java\nindex ada84ee11e9..3698fb7eea7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/167/CodeTemplate.java\n@@ -14,7 +14,6 @@ import javax.swing.text.BadLocationException;\n \n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n \n-\n /**\n  * A \"code template\" is a kind of macro for commonly-typed code.  It\n  * associates a short identifier with a longer code snippet, then when the\n@@ -42,27 +41,23 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @version 0.1\n  * @see StaticCodeTemplate\n  */\n-public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n-\t\tSerializable {\n-\n+public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>, Serializable {\n \n-\t/**\n+    /**\n \t * Creates a deep copy of this template.\n \t *\n \t * @return A deep copy of this template.\n \t */\n \tObject clone();\n \n-\n-\t/**\n+/**\n \t * Returns the ID of this code template.\n \t *\n \t * @return The template's ID.\n \t */\n \tString getID();\n \n-\n-\t/**\n+/**\n \t * Invokes this code template.  The changes are made to the given text\n \t * area.\n \t *\n@@ -70,6 +65,4 @@ public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n \t * @throws BadLocationException If something bad happens.\n \t */\n \tvoid invoke(RSyntaxTextArea textArea) throws BadLocationException;\n-\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/167/CodeTemplate.java\nindex ada84ee11e9..44259bf960c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/167/CodeTemplate.java\n@@ -8,10 +8,10 @@\n  */\n package org.fife.ui.rsyntaxtextarea.templates;\n \n-import java.io.Serializable;\n \n-import javax.swing.text.BadLocationException;\n \n+import java.io.Serializable;\n+import javax.swing.text.BadLocationException;\n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n \n \n@@ -42,34 +42,39 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @version 0.1\n  * @see StaticCodeTemplate\n  */\n-public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n-\t\tSerializable {\n \n \n-\t/**\n-\t * Creates a deep copy of this template.\n-\t *\n-\t * @return A deep copy of this template.\n-\t */\n-\tObject clone();\n+public interface CodeTemplate extends Cloneable,\n+    Comparable<CodeTemplate>,\n+        Serializable {\n+\n+\n+    /**\n+     * Creates a deep copy of this template.\n+     *\n+     * @return A deep copy of this template.\n+     */\n+\n+    Object clone();\n+\n \n+    /**\n+     * Returns the ID of this code template.\n+     *\n+     * @return The template's ID.\n+     */\n \n-\t/**\n-\t * Returns the ID of this code template.\n-\t *\n-\t * @return The template's ID.\n-\t */\n-\tString getID();\n+    String getID();\n \n \n-\t/**\n-\t * Invokes this code template.  The changes are made to the given text\n-\t * area.\n-\t *\n-\t * @param textArea The text area to operate on.\n-\t * @throws BadLocationException If something bad happens.\n-\t */\n-\tvoid invoke(RSyntaxTextArea textArea) throws BadLocationException;\n+    /**\n+     * Invokes this code template.  The changes are made to the given text\n+     * area.\n+     *\n+     * @param textArea The text area to operate on.\n+     * @throws BadLocationException If something bad happens.\n+     */\n \n+    void invoke(RSyntaxTextArea textArea) throws BadLocationException;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "49",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/167/CodeTemplate.java\nindex ada84ee11e9..165b96e8bfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/167/CodeTemplate.java\n@@ -43,7 +43,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @see StaticCodeTemplate\n  */\n public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n-\t\tSerializable {\n+        Serializable {\n \n \n \t/**\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "49",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/167/CodeTemplate.java\nindex ada84ee11e9..bd801ac6a98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/167/CodeTemplate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/167/CodeTemplate.java\n@@ -43,7 +43,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n  * @see StaticCodeTemplate\n  */\n public interface CodeTemplate extends Cloneable, Comparable<CodeTemplate>,\n-\t\tSerializable {\n+Serializable {\n \n \n \t/**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
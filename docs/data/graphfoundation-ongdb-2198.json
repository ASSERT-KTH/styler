{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2198",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2198/ReusableRecordsAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2198/ReusableRecordsAllocator.java\nindex 9cbd667875a..e22353b77bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2198/ReusableRecordsAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2198/ReusableRecordsAllocator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.allocator;\n \n import java.util.Collection;\n@@ -33,51 +34,52 @@ import org.neo4j.kernel.impl.store.record.DynamicRecord;\n  */\n public class ReusableRecordsAllocator implements DynamicRecordAllocator\n {\n-    private final int recordSize;\n-    private final Iterator<DynamicRecord> recordIterator;\n+  private final int recordSize;\n+  private final Iterator<DynamicRecord> recordIterator;\n \n-    public ReusableRecordsAllocator( int recordSize, DynamicRecord... records )\n-    {\n-        this.recordSize = recordSize;\n-        this.recordIterator = Iterators.iterator( records );\n-    }\n+  public ReusableRecordsAllocator(int recordSize, DynamicRecord... records)\n+  {\n+    this.recordSize = recordSize;\n+    this.recordIterator = Iterators.iterator(records);\n+  }\n \n-    public ReusableRecordsAllocator( int recordSize, Collection<DynamicRecord> records )\n-    {\n-        this.recordSize = recordSize;\n-        this.recordIterator = records.iterator();\n-    }\n+  public ReusableRecordsAllocator(int recordSize, Collection<DynamicRecord> records)\n+  {\n+    this.recordSize = recordSize;\n+    this.recordIterator = records.iterator();\n+  }\n \n-    public ReusableRecordsAllocator( int recordSize, Iterator<DynamicRecord> recordsIterator )\n-    {\n-        this.recordSize = recordSize;\n-        this.recordIterator = recordsIterator;\n-    }\n+  public ReusableRecordsAllocator(int recordSize, Iterator<DynamicRecord> recordsIterator)\n+  {\n+    this.recordSize = recordSize;\n+    this.recordIterator = recordsIterator;\n+  }\n \n-    @Override\n-    public int getRecordDataSize()\n-    {\n-        return recordSize;\n-    }\n+  @Override\n+  public int getRecordDataSize()\n+  {\n+    return recordSize;\n+  }\n \n-    @Override\n-    public DynamicRecord nextRecord()\n+  @Override\n+  public DynamicRecord nextRecord()\n+  {\n+    DynamicRecord record = recordIterator.next();\n+    if (!record.inUse())\n     {\n-        DynamicRecord record = recordIterator.next();\n-        if ( !record.inUse() )\n-        {\n-            record.setCreated();\n-        }\n-        record.setInUse( true );\n-        return record;\n+      record.setCreated();\n     }\n+    record.setInUse(true);\n+    return record;\n+  }\n \n-    /**\n-     * Check if we have more available pre allocated records\n-     * @return true if record is available\n-     */\n-    public boolean hasNext()\n-    {\n-        return recordIterator.hasNext();\n-    }\n+  /**\n+   * Check if we have more available pre allocated records\n+   *\n+   * @return true if record is available\n+   */\n+  public boolean hasNext()\n+  {\n+    return recordIterator.hasNext();\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2198/ReusableRecordsAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2198/ReusableRecordsAllocator.java\nindex 9cbd667875a..5960fc1b41b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2198/ReusableRecordsAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2198/ReusableRecordsAllocator.java\n@@ -80,4 +80,4 @@ public class ReusableRecordsAllocator implements DynamicRecordAllocator\n     {\n         return recordIterator.hasNext();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
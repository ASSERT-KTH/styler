{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4504",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4504/LuceneKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4504/LuceneKernelExtension.java\nindex 1fa9228e3ba..8e01f6bd8ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4504/LuceneKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4504/LuceneKernelExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import java.io.File;\n@@ -32,36 +33,36 @@ import org.neo4j.kernel.spi.explicitindex.IndexProviders;\n \n public class LuceneKernelExtension extends LifecycleAdapter\n {\n-    private final File storeDir;\n-    private final Config config;\n-    private final Supplier<IndexConfigStore> indexStore;\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-    private final IndexProviders indexProviders;\n-    private final OperationalMode operationalMode;\n+  private final File storeDir;\n+  private final Config config;\n+  private final Supplier<IndexConfigStore> indexStore;\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+  private final IndexProviders indexProviders;\n+  private final OperationalMode operationalMode;\n \n-    public LuceneKernelExtension( File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n-            FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders, OperationalMode operationalMode )\n-    {\n-        this.storeDir = storeDir;\n-        this.config = config;\n-        this.indexStore = indexStore;\n-        this.fileSystemAbstraction = fileSystemAbstraction;\n-        this.indexProviders = indexProviders;\n-        this.operationalMode = operationalMode;\n-    }\n+  public LuceneKernelExtension(File storeDir, Config config, Supplier<IndexConfigStore> indexStore,\n+                               FileSystemAbstraction fileSystemAbstraction, IndexProviders indexProviders, OperationalMode operationalMode)\n+  {\n+    this.storeDir = storeDir;\n+    this.config = config;\n+    this.indexStore = indexStore;\n+    this.fileSystemAbstraction = fileSystemAbstraction;\n+    this.indexProviders = indexProviders;\n+    this.operationalMode = operationalMode;\n+  }\n \n-    @Override\n-    public void init()\n-    {\n+  @Override\n+  public void init()\n+  {\n \n-        LuceneIndexImplementation indexImplementation =\n-                new LuceneIndexImplementation( storeDir, config, indexStore, fileSystemAbstraction, operationalMode );\n-        indexProviders.registerIndexProvider( LuceneIndexImplementation.SERVICE_NAME, indexImplementation );\n-    }\n+    LuceneIndexImplementation indexImplementation =\n+        new LuceneIndexImplementation(storeDir, config, indexStore, fileSystemAbstraction, operationalMode);\n+    indexProviders.registerIndexProvider(LuceneIndexImplementation.SERVICE_NAME, indexImplementation);\n+  }\n \n-    @Override\n-    public void shutdown()\n-    {\n-        indexProviders.unregisterIndexProvider( LuceneIndexImplementation.SERVICE_NAME );\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+    indexProviders.unregisterIndexProvider(LuceneIndexImplementation.SERVICE_NAME);\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4504/LuceneKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4504/LuceneKernelExtension.java\nindex 1fa9228e3ba..b0561f4d6c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4504/LuceneKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4504/LuceneKernelExtension.java\n@@ -53,10 +53,8 @@ public class LuceneKernelExtension extends LifecycleAdapter\n     @Override\n     public void init()\n     {\n-\n-        LuceneIndexImplementation indexImplementation =\n-                new LuceneIndexImplementation( storeDir, config, indexStore, fileSystemAbstraction, operationalMode );\n-        indexProviders.registerIndexProvider( LuceneIndexImplementation.SERVICE_NAME, indexImplementation );\n+    LuceneIndexImplementation indexImplementation = new LuceneIndexImplementation( storeDir, config, indexStore, fileSystemAbstraction, operationalMode );\n+indexProviders.registerIndexProvider( LuceneIndexImplementation.SERVICE_NAME, indexImplementation );\n     }\n \n     @Override\n@@ -64,4 +62,4 @@ public class LuceneKernelExtension extends LifecycleAdapter\n     {\n         indexProviders.unregisterIndexProvider( LuceneIndexImplementation.SERVICE_NAME );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
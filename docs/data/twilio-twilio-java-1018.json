{
    "project_name": "twilio-twilio-java",
    "error_id": "1018",
    "information": {
        "errors": [
            {
                "line": "228",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/1018/RecordingReader.java\nindex a80bfb0bc85..7ca05b273d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/1018/RecordingReader.java\n@@ -225,7 +225,7 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/1018/RecordingReader.java\nindex a80bfb0bc85..6c6586d500d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/1018/RecordingReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.video.v1;\n@@ -225,7 +225,7 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/1018/RecordingReader.java\nindex a80bfb0bc85..c288d95b981 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/1018/RecordingReader.java\n@@ -21,7 +21,6 @@ import com.twilio.http.Response;\n import com.twilio.http.TwilioRestClient;\n import com.twilio.rest.Domains;\n import org.joda.time.DateTime;\n-\n import java.util.List;\n \n public class RecordingReader extends Reader<Recording> {\n@@ -39,6 +38,7 @@ public class RecordingReader extends Reader<Recording> {\n      * @param status Read only the recordings that have this status\n      * @return this\n      */\n+\n     public RecordingReader setStatus(final Recording.Status status) {\n         this.status = status;\n         return this;\n@@ -50,6 +50,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param sourceSid Read only the recordings that have this source_sid\n      * @return this\n      */\n+\n+\n     public RecordingReader setSourceSid(final String sourceSid) {\n         this.sourceSid = sourceSid;\n         return this;\n@@ -62,6 +64,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param groupingSid Read only recordings that have this grouping_sid\n      * @return this\n      */\n+\n+\n     public RecordingReader setGroupingSid(final List<String> groupingSid) {\n         this.groupingSid = groupingSid;\n         return this;\n@@ -74,6 +78,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param groupingSid Read only recordings that have this grouping_sid\n      * @return this\n      */\n+\n+\n     public RecordingReader setGroupingSid(final String groupingSid) {\n         return setGroupingSid(Promoter.listOfOne(groupingSid));\n     }\n@@ -87,6 +93,8 @@ public class RecordingReader extends Reader<Recording> {\n      *                         date-time with time zone\n      * @return this\n      */\n+\n+\n     public RecordingReader setDateCreatedAfter(final DateTime dateCreatedAfter) {\n         this.dateCreatedAfter = dateCreatedAfter;\n         return this;\n@@ -102,6 +110,8 @@ public class RecordingReader extends Reader<Recording> {\n      *                          date-time with time zone\n      * @return this\n      */\n+\n+\n     public RecordingReader setDateCreatedBefore(final DateTime dateCreatedBefore) {\n         this.dateCreatedBefore = dateCreatedBefore;\n         return this;\n@@ -114,6 +124,8 @@ public class RecordingReader extends Reader<Recording> {\n      * @param mediaType Read only recordings that have this media type\n      * @return this\n      */\n+\n+\n     public RecordingReader setMediaType(final Recording.Type mediaType) {\n         this.mediaType = mediaType;\n         return this;\n@@ -125,6 +137,7 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Recording ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Recording> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -136,15 +149,11 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Recording ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Recording> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.VIDEO.toString(),\n-            \"/v1/Recordings\",\n-            client.getRegion()\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.VIDEO.toString(), \"/v1/Recordings\", client.getRegion());\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -157,14 +166,12 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Recording ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Recording> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Recording> getPage(final String targetUrl,\n+                                   final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -175,15 +182,13 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Recording> nextPage(final Page<Recording> page,\n                                     final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(\n-                Domains.VIDEO.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getNextPageUrl(Domains.VIDEO.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -195,15 +200,13 @@ public class RecordingReader extends Reader<Recording> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Recording> previousPage(final Page<Recording> page,\n                                         final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(\n-                Domains.VIDEO.toString(),\n-                client.getRegion()\n-            )\n+                              HttpMethod.GET,\n+                              page.getPreviousPageUrl(Domains.VIDEO.toString(), client.getRegion())\n         );\n         return pageForRequest(client, request);\n     }\n@@ -215,9 +218,11 @@ public class RecordingReader extends Reader<Recording> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Recording> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Recording> pageForRequest(final TwilioRestClient client,\n+                                           final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Recording read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -225,15 +230,11 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"recordings\",\n-            response.getContent(),\n-            Recording.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"recordings\", response.getContent(), Recording.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -241,6 +242,8 @@ public class RecordingReader extends Reader<Recording> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (status != null) {\n             request.addQueryParam(\"Status\", status.toString());\n",
            "diff_size": 57
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/1018/RecordingReader.java\nindex a80bfb0bc85..7ca05b273d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/1018/RecordingReader.java\n@@ -225,7 +225,7 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/1018/RecordingReader.java\nindex a80bfb0bc85..295c20c55a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/1018/RecordingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/1018/RecordingReader.java\n@@ -225,7 +225,8 @@ public class RecordingReader extends Reader<Recording> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
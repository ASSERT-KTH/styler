{
    "project_name": "bakdata-conquery",
    "error_id": "367",
    "information": {
        "errors": [
            {
                "line": "77",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t * Sets up the initial subjects and permissions for the authentication system\n\t * that are found in the config.\n\t * \n\t * @param storage\n\t *            A storage, where the handler might add a new users.\n\t */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/367/AuthorizationController.java\nindex 397412c615c..3f9ef68cfda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/367/AuthorizationController.java\n@@ -33,60 +33,59 @@ import org.apache.shiro.util.LifecycleUtils;\n @Slf4j\n public final class AuthorizationController {\n \n-\t@Getter\n-\tprivate MasterMetaStorage storage;\n-\t@Getter\n-\tprivate List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n-\t@Getter\n-\tAuthFilter<AuthenticationToken, User> authenticationFilter;\n-\t@Getter\n-\tprivate List<Realm> realms = new ArrayList<>();\n+    @Getter\n+    private MasterMetaStorage storage;\n+    @Getter\n+    private List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n+    @Getter\n+    AuthFilter<AuthenticationToken, User> authenticationFilter;\n+    @Getter\n+    private List<Realm> realms = new ArrayList<>();\n \n-\tpublic AuthorizationController(MasterMetaStorage storage, ConqueryConfig config) {\n-\t\tthis.storage = storage;\n+    public AuthorizationController(MasterMetaStorage storage, ConqueryConfig config) {\n+        this.storage = storage;\n \n-\t\t// Init authentication realms provided by with the config.\n-\t\tfor (AuthenticationConfig authenticationConf : config.getAuthentication()) {\n-\t\t\tConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n-\t\t\tauthenticationRealms.add(realm);\n-\t\t\trealms.add(realm);\n-\t\t}\n-\t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n-\t\trealms.add(authorizingRealm);\n+        // Init authentication realms provided by with the config.\n+        for (AuthenticationConfig authenticationConf : config.getAuthentication()) {\n+            ConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n+            authenticationRealms.add(realm);\n+            realms.add(realm);\n+        }\n+        AuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n+        realms.add(authorizingRealm);\n \n-\t\t// Call Shiros init on all realms\n-\t\trealms.stream().forEach(LifecycleUtils::init);\n+        // Call Shiros init on all realms\n+        realms.stream().forEach(LifecycleUtils::init);\n \n-\t\t// Register all realms in Shiro\n-\t\tlog.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n-\t\tSecurityManager securityManager = new DefaultSecurityManager(realms);\n-\t\tSecurityUtils.setSecurityManager(securityManager);\n-\t\tlog.debug(\"Security manager registered\");\n+        // Register all realms in Shiro\n+        log.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n+        SecurityManager securityManager = new DefaultSecurityManager(realms);\n+        SecurityUtils.setSecurityManager(securityManager);\n+        log.debug(\"Security manager registered\");\n \n-\t\t// Create Jersey filter for authentication\n-\t\tauthenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n+        // Create Jersey filter for authentication\n+        authenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n \n-\t\t// Register initial users for authorization and authentication (if the realm is\n-\t\t// able to)\n-\t\tinitializeAuthConstellation(config.getAuthorization(), realms, storage);\n-\t}\n+        // Register initial users for authorization and authentication (if the realm is\n+        // able to)\n+        initializeAuthConstellation(config.getAuthorization(), realms, storage);\n+    }\n \n-\t/**\n-\t * Sets up the initial subjects and permissions for the authentication system\n-\t * that are found in the config.\n-\t * \n-\t * @param storage\n-\t *            A storage, where the handler might add a new users.\n-\t */\n-\tprivate static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n-\t\tfor (ProtoUser pUser : config.getInitialUsers()) {\n-\t\t\tpUser.registerForAuthorization(storage, true);\n-\t\t\tfor (Realm realm : realms) {\n-\t\t\t\tif (realm instanceof UserManageable) {\n-\t\t\t\t\tpUser.registerForAuthentication((UserManageable) realm, true);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+    /**\n+     * Sets up the initial subjects and permissions for the authentication system\n+     * that are found in the config.\n+     *\n+     * @param storage A storage, where the handler might add a new users.\n+     */\n+    private static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n+        for (ProtoUser pUser : config.getInitialUsers()) {\n+            pUser.registerForAuthorization(storage, true);\n+            for (Realm realm : realms) {\n+                if (realm instanceof UserManageable) {\n+                    pUser.registerForAuthentication((UserManageable) realm, true);\n+                }\n+            }\n+        }\n+    }\n \n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/367/AuthorizationController.java\nindex 397412c615c..62c199372b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/367/AuthorizationController.java\n@@ -89,4 +89,4 @@ public final class AuthorizationController {\n \t\t}\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/367/AuthorizationController.java\nindex 397412c615c..4bc76d9264c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/367/AuthorizationController.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.auth;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.stream.Collectors;\n-\n import com.bakdata.conquery.apiv1.auth.ProtoUser;\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.entities.User;\n@@ -30,63 +29,67 @@ import org.apache.shiro.util.LifecycleUtils;\n  * {@link ConqueryAuthorizationRealm} handles the mapping of the authenticated\n  * {@link UserId}s to the permissions they hold.\n  */\n+\n @Slf4j\n public final class AuthorizationController {\n \n-\t@Getter\n-\tprivate MasterMetaStorage storage;\n-\t@Getter\n-\tprivate List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n-\t@Getter\n-\tAuthFilter<AuthenticationToken, User> authenticationFilter;\n-\t@Getter\n-\tprivate List<Realm> realms = new ArrayList<>();\n-\n-\tpublic AuthorizationController(MasterMetaStorage storage, ConqueryConfig config) {\n-\t\tthis.storage = storage;\n-\n-\t\t// Init authentication realms provided by with the config.\n-\t\tfor (AuthenticationConfig authenticationConf : config.getAuthentication()) {\n-\t\t\tConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n-\t\t\tauthenticationRealms.add(realm);\n-\t\t\trealms.add(realm);\n-\t\t}\n-\t\tAuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n-\t\trealms.add(authorizingRealm);\n-\n-\t\t// Call Shiros init on all realms\n-\t\trealms.stream().forEach(LifecycleUtils::init);\n-\n-\t\t// Register all realms in Shiro\n-\t\tlog.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n-\t\tSecurityManager securityManager = new DefaultSecurityManager(realms);\n-\t\tSecurityUtils.setSecurityManager(securityManager);\n-\t\tlog.debug(\"Security manager registered\");\n-\n-\t\t// Create Jersey filter for authentication\n-\t\tauthenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n-\n-\t\t// Register initial users for authorization and authentication (if the realm is\n-\t\t// able to)\n-\t\tinitializeAuthConstellation(config.getAuthorization(), realms, storage);\n-\t}\n-\n-\t/**\n-\t * Sets up the initial subjects and permissions for the authentication system\n-\t * that are found in the config.\n-\t * \n-\t * @param storage\n-\t *            A storage, where the handler might add a new users.\n-\t */\n-\tprivate static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n-\t\tfor (ProtoUser pUser : config.getInitialUsers()) {\n-\t\t\tpUser.registerForAuthorization(storage, true);\n-\t\t\tfor (Realm realm : realms) {\n-\t\t\t\tif (realm instanceof UserManageable) {\n-\t\t\t\t\tpUser.registerForAuthentication((UserManageable) realm, true);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-}\n+ @Getter\n+ private MasterMetaStorage storage;\n+\n+ @Getter\n+ private List<ConqueryAuthenticationRealm> authenticationRealms = new ArrayList<>();\n+\n+ @Getter AuthFilter<AuthenticationToken, User> authenticationFilter;\n+\n+ @Getter\n+ private List<Realm> realms = new ArrayList<>();\n+\n+ public AuthorizationController(MasterMetaStorage storage, ConqueryConfig config) {\n+  this.storage = storage;\n+\n+  // Init authentication realms provided by with the config.\n+  for(AuthenticationConfig authenticationConf :config.getAuthentication()) {\n+   ConqueryAuthenticationRealm realm = authenticationConf.createRealm(storage);\n+   authenticationRealms.add(realm);\n+   realms.add(realm);\n+  }\n+\n+  AuthorizingRealm authorizingRealm = new ConqueryAuthorizationRealm(storage);\n+  realms.add(authorizingRealm);\n+\n+  // Call Shiros init on all realms\n+  realms.stream().forEach(LifecycleUtils::init);\n+\n+  // Register all realms in Shiro\n+  log.info(\"Registering the following realms to Shiro:\\n\\t\", realms.stream().map(Realm::getName).collect(Collectors.joining(\"\\n\\t\")));\n+  SecurityManager securityManager = new DefaultSecurityManager(realms);\n+  SecurityUtils.setSecurityManager(securityManager);\n+  log.debug(\"Security manager registered\");\n+\n+  // Create Jersey filter for authentication\n+  authenticationFilter = DefaultAuthFilter.asDropwizardFeature(this);\n+\n+  // Register initial users for authorization and authentication (if the realm is\n+  // able to)\n+  initializeAuthConstellation(config.getAuthorization(), realms, storage);\n+ }\n+\n+ /**\n+  * Sets up the initial subjects and permissions for the authentication system\n+  * that are found in the config.\n+  * \n+  * @param storage\n+  *            A storage, where the handler might add a new users.\n+  */\n+\n+ private static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n+  for(ProtoUser pUser :config.getInitialUsers()) {\n+   pUser.registerForAuthorization(storage, true);\n+   for(Realm realm :realms) {\n+    if (realm instanceof UserManageable) {\n+     pUser.registerForAuthentication((UserManageable)realm, true);\n+    }\n+   }\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "trailing whitespaces",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/367/AuthorizationController.java\nindex 397412c615c..44aead6d172 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/367/AuthorizationController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/367/AuthorizationController.java\n@@ -69,15 +69,14 @@ public final class AuthorizationController {\n \t\t// Register initial users for authorization and authentication (if the realm is\n \t\t// able to)\n \t\tinitializeAuthConstellation(config.getAuthorization(), realms, storage);\n-\t}\n-\n-\t/**\n+\t}/**\n \t * Sets up the initial subjects and permissions for the authentication system\n \t * that are found in the config.\n \t * \n \t * @param storage\n \t *            A storage, where the handler might add a new users.\n \t */\n+\n \tprivate static void initializeAuthConstellation(AuthorizationConfig config, List<Realm> realms, MasterMetaStorage storage) {\n \t\tfor (ProtoUser pUser : config.getInitialUsers()) {\n \t\t\tpUser.registerForAuthorization(storage, true);\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
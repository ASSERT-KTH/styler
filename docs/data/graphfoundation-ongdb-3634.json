{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3634",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "208",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3634/PushToCloudCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3634/PushToCloudCommand.java\nindex 17aac1fd3f0..e378bfd9450 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3634/PushToCloudCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3634/PushToCloudCommand.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.neo4j.pushtocloud;\n \n import java.nio.file.Files;\n@@ -41,233 +42,227 @@ import static java.lang.System.currentTimeMillis;\n \n public class PushToCloudCommand implements AdminCommand\n {\n-    static final String ARG_DATABASE = \"database\";\n-    static final String ARG_BOLT_URI = \"bolt-uri\";\n-    static final String ARG_DUMP = \"dump\";\n-    static final String ARG_DUMP_TO = \"dump-to\";\n-    static final String ARG_VERBOSE = \"verbose\";\n-    static final String ARG_OVERWRITE = \"overwrite\";\n-    static final String ARG_USERNAME = \"username\";\n-    static final String ARG_PASSWORD = \"password\";\n-    static final String ENV_USERNAME = \"NEO4J_USERNAME\";\n-    static final String ENV_PASSWORD = \"NEO4J_PASSWORD\";\n+  static final String ARG_DATABASE = \"database\";\n+  static final String ARG_BOLT_URI = \"bolt-uri\";\n+  static final String ARG_DUMP = \"dump\";\n+  static final String ARG_DUMP_TO = \"dump-to\";\n+  static final String ARG_VERBOSE = \"verbose\";\n+  static final String ARG_OVERWRITE = \"overwrite\";\n+  static final String ARG_USERNAME = \"username\";\n+  static final String ARG_PASSWORD = \"password\";\n+  static final String ENV_USERNAME = \"NEO4J_USERNAME\";\n+  static final String ENV_PASSWORD = \"NEO4J_PASSWORD\";\n \n-    static final Arguments arguments = new Arguments()\n-            // Provide a (potentially running?) database\n-            .withDatabase()\n-            // ... or an existing backup/dump of a database\n-            .withArgument( new OptionalNamedArg( ARG_DUMP, \"/path/to/my-neo4j-database-dump-file\", null,\n-                    \"Path to an existing database dump for upload. This arugment cannot be used together with --database.\" ) )\n-            .withArgument( new OptionalNamedArg( ARG_DUMP_TO, \"/path/to/dump-file-to-be-created\", null,\n-                    \"Target path for dump file. Used in combination with the --database argument.\" ) )\n-            .withArgument( new MandatoryNamedArg( ARG_BOLT_URI, \"bolt+routing://mydatabaseid.databases.neo4j.io\",\n-                    \"Bolt URI of target database\" ) )\n-            .withArgument( new OptionalNamedArg( ARG_VERBOSE, \"true/false\", null,\n-                    \"Enable verbose output.\" ) )\n-            .withArgument( new OptionalNamedArg( ARG_USERNAME, \"neo4j\", null,\n-                    \"Optional: Username of the target database to push this database to. Prompt will ask for username if not provided. \" +\n-                            \"Alternatively NEO4J_USERNAME environment variable can be used.\" ) )\n-            .withArgument( new OptionalNamedArg( ARG_PASSWORD, \"mYs3cr3tPa$$w0rd\", null,\n-                    \"Optional: Password of the target database to push this database to. Prompt will ask for password if not provided. \" +\n-                            \"Alternatively NEO4J_PASSWORD environment variable can be used.\" ) )\n-            .withArgument( new OptionalNamedArg( ARG_OVERWRITE, \"true/false\", \"false\",\n-                    \"Optional: Overwrite the data in the target database.\" ) );\n+  static final Arguments arguments = new Arguments()\n+      // Provide a (potentially running?) database\n+      .withDatabase()\n+      // ... or an existing backup/dump of a database\n+      .withArgument(new OptionalNamedArg(ARG_DUMP, \"/path/to/my-neo4j-database-dump-file\", null,\n+          \"Path to an existing database dump for upload. This arugment cannot be used together with --database.\"))\n+      .withArgument(new OptionalNamedArg(ARG_DUMP_TO, \"/path/to/dump-file-to-be-created\", null,\n+          \"Target path for dump file. Used in combination with the --database argument.\"))\n+      .withArgument(new MandatoryNamedArg(ARG_BOLT_URI, \"bolt+routing://mydatabaseid.databases.neo4j.io\",\n+          \"Bolt URI of target database\"))\n+      .withArgument(new OptionalNamedArg(ARG_VERBOSE, \"true/false\", null,\n+          \"Enable verbose output.\"))\n+      .withArgument(new OptionalNamedArg(ARG_USERNAME, \"neo4j\", null,\n+          \"Optional: Username of the target database to push this database to. Prompt will ask for username if not provided. \" +\n+              \"Alternatively NEO4J_USERNAME environment variable can be used.\"))\n+      .withArgument(new OptionalNamedArg(ARG_PASSWORD, \"mYs3cr3tPa$$w0rd\", null,\n+          \"Optional: Password of the target database to push this database to. Prompt will ask for password if not provided. \" +\n+              \"Alternatively NEO4J_PASSWORD environment variable can be used.\"))\n+      .withArgument(new OptionalNamedArg(ARG_OVERWRITE, \"true/false\", \"false\",\n+          \"Optional: Overwrite the data in the target database.\"));\n \n-    private final Path homeDir;\n-    private final Path configDir;\n-    private final OutsideWorld outsideWorld;\n-    private final Copier copier;\n-    private final DumpCreator dumpCreator;\n+  private final Path homeDir;\n+  private final Path configDir;\n+  private final OutsideWorld outsideWorld;\n+  private final Copier copier;\n+  private final DumpCreator dumpCreator;\n \n-    public PushToCloudCommand( Path homeDir, Path configDir, OutsideWorld outsideWorld, Copier copier, DumpCreator dumpCreator )\n-    {\n-        this.homeDir = homeDir;\n-        this.configDir = configDir;\n-        this.outsideWorld = outsideWorld;\n-        this.copier = copier;\n-        this.dumpCreator = dumpCreator;\n-    }\n+  public PushToCloudCommand(Path homeDir, Path configDir, OutsideWorld outsideWorld, Copier copier, DumpCreator dumpCreator)\n+  {\n+    this.homeDir = homeDir;\n+    this.configDir = configDir;\n+    this.outsideWorld = outsideWorld;\n+    this.copier = copier;\n+    this.dumpCreator = dumpCreator;\n+  }\n \n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    Args arguments = Args.parse(args);\n+    boolean verbose = arguments.getBoolean(ARG_VERBOSE);\n+    try\n     {\n-        Args arguments = Args.parse( args );\n-        boolean verbose = arguments.getBoolean( ARG_VERBOSE );\n-        try\n-        {\n-            String passwordFromArg = arguments.get( ARG_PASSWORD );\n-            String username = arguments.get( ARG_USERNAME );\n+      String passwordFromArg = arguments.get(ARG_PASSWORD);\n+      String username = arguments.get(ARG_USERNAME);\n \n-            String usernameFromEnv = System.getenv( ENV_USERNAME );\n-            String passwordFromEnv = System.getenv( ENV_PASSWORD );\n+      String usernameFromEnv = System.getenv(ENV_USERNAME);\n+      String passwordFromEnv = System.getenv(ENV_PASSWORD);\n \n-            // the strategy here is to have a priority of ways to pass in username/password\n-            // 1. highest priority is cli argument, e.g. --username\n-            // 2. priority is the environment variable, e.g. ENV_USERNAME\n-            // if 1. and 2. is not configured, prompt for input.\n-            if ( username == null )\n-            {\n-                if ( usernameFromEnv != null )\n-                {\n-                    username = usernameFromEnv;\n-                }\n-                else\n-                {\n-                    username = outsideWorld.promptLine( \"Neo4j Aura database username (default: neo4j): \" );\n-                }\n-            }\n-            // default username to neo4j if user pressed 'enter' during the prompt\n-            if ( username == null || \"\".equals( username ) )\n-            {\n-                username = \"neo4j\";\n-            }\n-\n-            char[] password;\n-            if ( passwordFromArg != null )\n-            {\n-                password = passwordFromArg.toCharArray();\n-            }\n-            else\n-            {\n-                if ( passwordFromEnv != null )\n-                {\n-                    password = passwordFromEnv.toCharArray();\n-                }\n-                else\n-                {\n-                    password = outsideWorld.promptPassword( format( \"Neo4j Aura database password for %s: \", username ) );\n-                }\n-            }\n+      // the strategy here is to have a priority of ways to pass in username/password\n+      // 1. highest priority is cli argument, e.g. --username\n+      // 2. priority is the environment variable, e.g. ENV_USERNAME\n+      // if 1. and 2. is not configured, prompt for input.\n+      if (username == null)\n+      {\n+        if (usernameFromEnv != null)\n+        {\n+          username = usernameFromEnv;\n+        } else\n+        {\n+          username = outsideWorld.promptLine(\"Neo4j Aura database username (default: neo4j): \");\n+        }\n+      }\n+      // default username to neo4j if user pressed 'enter' during the prompt\n+      if (username == null || \"\".equals(username))\n+      {\n+        username = \"neo4j\";\n+      }\n \n-            String boltURI = arguments.get( ARG_BOLT_URI );\n-            if ( boltURI == null || \"\".equals( boltURI ) )\n-            {\n-                boltURI = outsideWorld.promptLine( \"Neo4j Aura database Bolt URI: \" );\n-            }\n-            if ( boltURI == null || \"\".equals( boltURI ) )\n-            {\n-                throw new IncorrectUsage( \"Please provide a Neo4j Aura Bolt URI of the target location to push the database to, \" +\n-                        \"using the --bolt-uri argument.\" );\n-            }\n-            String confirmationViaArgument = arguments.get( ARG_OVERWRITE, \"false\", \"true\" );\n+      char[] password;\n+      if (passwordFromArg != null)\n+      {\n+        password = passwordFromArg.toCharArray();\n+      } else\n+      {\n+        if (passwordFromEnv != null)\n+        {\n+          password = passwordFromEnv.toCharArray();\n+        } else\n+        {\n+          password = outsideWorld.promptPassword(format(\"Neo4j Aura database password for %s: \", username));\n+        }\n+      }\n \n-            String consoleURL = buildConsoleURI( boltURI );\n-            String bearerToken = copier.authenticate( verbose, consoleURL, username, password, \"true\".equals( confirmationViaArgument ) );\n+      String boltURI = arguments.get(ARG_BOLT_URI);\n+      if (boltURI == null || \"\".equals(boltURI))\n+      {\n+        boltURI = outsideWorld.promptLine(\"Neo4j Aura database Bolt URI: \");\n+      }\n+      if (boltURI == null || \"\".equals(boltURI))\n+      {\n+        throw new IncorrectUsage(\"Please provide a Neo4j Aura Bolt URI of the target location to push the database to, \" +\n+            \"using the --bolt-uri argument.\");\n+      }\n+      String confirmationViaArgument = arguments.get(ARG_OVERWRITE, \"false\", \"true\");\n \n-            Path source = initiateSource( arguments );\n-            // only mark dump to delete after processing, if we just created it\n-            boolean deleteDump = arguments.get( ARG_DUMP ) == null;\n+      String consoleURL = buildConsoleURI(boltURI);\n+      String bearerToken = copier.authenticate(verbose, consoleURL, username, password, \"true\".equals(confirmationViaArgument));\n \n-            copier.copy( verbose, consoleURL, boltURI, source, deleteDump, bearerToken );\n-        }\n-        catch ( Exception e )\n-        {\n-            if ( verbose )\n-            {\n-                outsideWorld.printStacktrace( e );\n-            }\n-            throw e;\n-        }\n-    }\n+      Path source = initiateSource(arguments);\n+      // only mark dump to delete after processing, if we just created it\n+      boolean deleteDump = arguments.get(ARG_DUMP) == null;\n \n-    private String buildConsoleURI( String boltURI ) throws IncorrectUsage\n+      copier.copy(verbose, consoleURL, boltURI, source, deleteDump, bearerToken);\n+    } catch (Exception e)\n     {\n-        // A boltURI looks something like this:\n-        //\n-        //   bolt+routing://mydbid-myenvironment.databases.neo4j.io\n-        //                  <\u2500\u252c\u2500\u2500><\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500>\n-        //                    \u2502          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 environment\n-        //                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 database id\n-        //\n-        // Constructing a console URI takes elements from the bolt URI and places them inside this URI:\n-        //\n-        //   https://console<environment>.neo4j.io/v1/databases/<database id>\n-        //\n-        // Examples:\n-        //\n-        //   bolt+routing://rogue.databases.neo4j.io  --> https://console.neo4j.io/v1/databases/rogue\n-        //   bolt+routing://rogue-mattias.databases.neo4j.io  --> https://console-mattias.neo4j.io/v1/databases/rogue\n+      if (verbose)\n+      {\n+        outsideWorld.printStacktrace(e);\n+      }\n+      throw e;\n+    }\n+  }\n \n-        Pattern pattern = Pattern.compile( \"(?:bolt(?:\\\\+routing)?|neo4j(?:\\\\+s|\\\\+ssc)?)://([^-]+)(-(.+))?.databases.neo4j.io$\" );\n-        Matcher matcher = pattern.matcher( boltURI );\n-        if ( !matcher.matches() )\n-        {\n-            throw new IncorrectUsage( \"Invalid Bolt URI '\" + boltURI + \"'\" );\n-        }\n+  private String buildConsoleURI(String boltURI) throws IncorrectUsage\n+  {\n+    // A boltURI looks something like this:\n+    //\n+    //   bolt+routing://mydbid-myenvironment.databases.neo4j.io\n+    //                  <\u2500\u252c\u2500\u2500><\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500>\n+    //                    \u2502          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 environment\n+    //                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 database id\n+    //\n+    // Constructing a console URI takes elements from the bolt URI and places them inside this URI:\n+    //\n+    //   https://console<environment>.neo4j.io/v1/databases/<database id>\n+    //\n+    // Examples:\n+    //\n+    //   bolt+routing://rogue.databases.neo4j.io  --> https://console.neo4j.io/v1/databases/rogue\n+    //   bolt+routing://rogue-mattias.databases.neo4j.io  --> https://console-mattias.neo4j.io/v1/databases/rogue\n \n-        String databaseId = matcher.group( 1 );\n-        String environment = matcher.group( 2 );\n-        return String.format( \"https://console%s.neo4j.io/v1/databases/%s\", environment == null ? \"\" : environment, databaseId );\n+    Pattern pattern = Pattern.compile(\"(?:bolt(?:\\\\+routing)?|neo4j(?:\\\\+s|\\\\+ssc)?)://([^-]+)(-(.+))?.databases.neo4j.io$\");\n+    Matcher matcher = pattern.matcher(boltURI);\n+    if (!matcher.matches())\n+    {\n+      throw new IncorrectUsage(\"Invalid Bolt URI '\" + boltURI + \"'\");\n     }\n \n-    private Path initiateSource( Args arguments ) throws IncorrectUsage, CommandFailed\n+    String databaseId = matcher.group(1);\n+    String environment = matcher.group(2);\n+    return String.format(\"https://console%s.neo4j.io/v1/databases/%s\", environment == null ? \"\" : environment, databaseId);\n+  }\n+\n+  private Path initiateSource(Args arguments) throws IncorrectUsage, CommandFailed\n+  {\n+    // Either a dump or database name (of a stopped database) can be provided\n+    String dump = arguments.get(ARG_DUMP);\n+    String database = arguments.get(ARG_DATABASE);\n+    if (dump != null && database != null)\n     {\n-        // Either a dump or database name (of a stopped database) can be provided\n-        String dump = arguments.get( ARG_DUMP );\n-        String database = arguments.get( ARG_DATABASE );\n-        if ( dump != null && database != null )\n-        {\n-            throw new IncorrectUsage( \"Provide either a dump or database name, not both\" );\n-        }\n-        else if ( dump != null )\n-        {\n-            Path path = Paths.get( dump );\n-            if ( !Files.exists( path ) )\n-            {\n-                throw new CommandFailed( format( \"The provided dump '%s' file doesn't exist\", path ) );\n-            }\n-            return path;\n-        }\n-        else\n-        {\n-            if ( database == null )\n-            {\n-                database = new Database().defaultValue();\n-                outsideWorld.stdOutLine( \"Selecting default database '\" + database + \"'\" );\n-            }\n+      throw new IncorrectUsage(\"Provide either a dump or database name, not both\");\n+    } else if (dump != null)\n+    {\n+      Path path = Paths.get(dump);\n+      if (!Files.exists(path))\n+      {\n+        throw new CommandFailed(format(\"The provided dump '%s' file doesn't exist\", path));\n+      }\n+      return path;\n+    } else\n+    {\n+      if (database == null)\n+      {\n+        database = new Database().defaultValue();\n+        outsideWorld.stdOutLine(\"Selecting default database '\" + database + \"'\");\n+      }\n \n-            String to = arguments.get( ARG_DUMP_TO );\n-            Path dumpFile = to != null ? Paths.get( to ) : homeDir.resolve( \"dump-of-\" + database + \"-\" + currentTimeMillis() );\n-            if ( Files.exists( dumpFile ) )\n-            {\n-                throw new CommandFailed( format( \"The provided dump-to target '%s' file already exists\", dumpFile ) );\n-            }\n-            dumpCreator.dumpDatabase( database, dumpFile );\n-            return dumpFile;\n-        }\n+      String to = arguments.get(ARG_DUMP_TO);\n+      Path dumpFile = to != null ? Paths.get(to) : homeDir.resolve(\"dump-of-\" + database + \"-\" + currentTimeMillis());\n+      if (Files.exists(dumpFile))\n+      {\n+        throw new CommandFailed(format(\"The provided dump-to target '%s' file already exists\", dumpFile));\n+      }\n+      dumpCreator.dumpDatabase(database, dumpFile);\n+      return dumpFile;\n     }\n+  }\n \n-    public interface Copier\n-    {\n-        /**\n-         * Authenticates user by name and password.\n-         *\n-         * @param verbose whether or not to print verbose debug messages/statuses.\n-         * @param consoleURL console URI to target.\n-         * @param username the username.\n-         * @param password the password.\n-         * @param consentConfirmed user confirmed to overwrite existing database.\n-         * @return a bearer token to pass into {@link #copy(boolean, String, String, Path, boolean, String)} later on.\n-         * @throws CommandFailed on authentication failure or some other unexpected failure.\n-         */\n-        String authenticate( boolean verbose, String consoleURL, String username, char[] password, boolean consentConfirmed ) throws CommandFailed;\n+  public interface Copier\n+  {\n+    /**\n+     * Authenticates user by name and password.\n+     *\n+     * @param verbose          whether or not to print verbose debug messages/statuses.\n+     * @param consoleURL       console URI to target.\n+     * @param username         the username.\n+     * @param password         the password.\n+     * @param consentConfirmed user confirmed to overwrite existing database.\n+     * @return a bearer token to pass into {@link #copy(boolean, String, String, Path, boolean, String)} later on.\n+     * @throws CommandFailed on authentication failure or some other unexpected failure.\n+     */\n+    String authenticate(boolean verbose, String consoleURL, String username, char[] password, boolean consentConfirmed) throws CommandFailed;\n \n-        /**\n-         * Copies the given dump to the console URI.\n-         *\n-         * @param verbose whether or not to print verbose debug messages/statuses.\n-         * @param consoleURL console URI to target.\n-         * @param boltUri bolt URI to target database.\n-         * @param source dump to copy to the target.\n-         * @param deleteSourceAfterImport delete the dump after successful import\n-         * @param bearerToken token from successful {@link #authenticate(boolean, String, String, char[], boolean)} call.\n-         * @throws CommandFailed on copy failure or some other unexpected failure.\n-         */\n-        void copy( boolean verbose, String consoleURL, String boltUri, Path source, boolean deleteSourceAfterImport, String bearerToken ) throws CommandFailed;\n-    }\n+    /**\n+     * Copies the given dump to the console URI.\n+     *\n+     * @param verbose                 whether or not to print verbose debug messages/statuses.\n+     * @param consoleURL              console URI to target.\n+     * @param boltUri                 bolt URI to target database.\n+     * @param source                  dump to copy to the target.\n+     * @param deleteSourceAfterImport delete the dump after successful import\n+     * @param bearerToken             token from successful {@link #authenticate(boolean, String, String, char[], boolean)} call.\n+     * @throws CommandFailed on copy failure or some other unexpected failure.\n+     */\n+    void copy(boolean verbose, String consoleURL, String boltUri, Path source, boolean deleteSourceAfterImport, String bearerToken) throws CommandFailed;\n+  }\n \n-    public interface DumpCreator\n-    {\n-        void dumpDatabase( String databaseName, Path targetDumpFile ) throws CommandFailed, IncorrectUsage;\n-    }\n+  public interface DumpCreator\n+  {\n+    void dumpDatabase(String databaseName, Path targetDumpFile) throws CommandFailed, IncorrectUsage;\n+  }\n }\n",
            "diff_size": 248
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
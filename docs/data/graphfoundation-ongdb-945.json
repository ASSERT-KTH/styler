{
    "project_name": "graphfoundation-ongdb",
    "error_id": "945",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/945/DiagnosticsProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/945/DiagnosticsProvider.java\nindex c7434d71d0f..ccb8628c13a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/945/DiagnosticsProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/945/DiagnosticsProvider.java\n@@ -17,67 +17,68 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.info;\n \n import org.neo4j.logging.Logger;\n \n public interface DiagnosticsProvider\n {\n-    /**\n-     * Return an identifier for this {@link DiagnosticsProvider}. The result of\n-     * this method must be stable, i.e. invoking this method multiple times on\n-     * the same object should return {@link Object#equals(Object) equal}\n-     * {@link String strings}.\n-     *\n-     * For {@link DiagnosticsProvider}s where there is only one instance of that\n-     * {@link DiagnosticsProvider}, an implementation like this is would be a\n-     * sane default, given that the implementing class has a sensible name:\n-     *\n-     * <code><pre>\n-     * public String getDiagnosticsIdentifier()\n-     * {\n-     *     return getClass().getName();\n-     * }\n-     * </pre></code>\n-     *\n-     * @return the identifier of this diagnostics provider.\n-     */\n-    String getDiagnosticsIdentifier();\n+  /**\n+   * Return an identifier for this {@link DiagnosticsProvider}. The result of\n+   * this method must be stable, i.e. invoking this method multiple times on\n+   * the same object should return {@link Object#equals(Object) equal}\n+   * {@link String strings}.\n+   * <p>\n+   * For {@link DiagnosticsProvider}s where there is only one instance of that\n+   * {@link DiagnosticsProvider}, an implementation like this is would be a\n+   * sane default, given that the implementing class has a sensible name:\n+   *\n+   * <code><pre>\n+   * public String getDiagnosticsIdentifier()\n+   * {\n+   *     return getClass().getName();\n+   * }\n+   * </pre></code>\n+   *\n+   * @return the identifier of this diagnostics provider.\n+   */\n+  String getDiagnosticsIdentifier();\n \n-    /**\n-     * Accept a visitor that may or may not be capable of visiting this object.\n-     *\n-     * Typical example:\n-     *\n-     * <code><pre>\n-     * class OperationalStatistics implements {@link DiagnosticsProvider}\n-     * {\n-     *     public void {@link #acceptDiagnosticsVisitor(Object) acceptDiagnosticsVisitor}( {@link Object} visitor )\n-     *     {\n-     *         if ( visitor instanceof OperationalStatisticsVisitor )\n-     *         {\n-     *              ((OperationalStatisticsVisitor)visitor).visitOperationalStatistics( this );\n-     *         }\n-     *     }\n-     * }\n-     *\n-     * interface OperationalStatisticsVisitor\n-     * {\n-     *     void visitOperationalStatistics( OperationalStatistics statistics );\n-     * }\n-     * </pre></code>\n-     *\n-     * @param visitor the visitor visiting this {@link DiagnosticsProvider}.\n-     */\n-    void acceptDiagnosticsVisitor( Object visitor );\n+  /**\n+   * Accept a visitor that may or may not be capable of visiting this object.\n+   * <p>\n+   * Typical example:\n+   *\n+   * <code><pre>\n+   * class OperationalStatistics implements {@link DiagnosticsProvider}\n+   * {\n+   *     public void {@link #acceptDiagnosticsVisitor(Object) acceptDiagnosticsVisitor}( {@link Object} visitor )\n+   *     {\n+   *         if ( visitor instanceof OperationalStatisticsVisitor )\n+   *         {\n+   *              ((OperationalStatisticsVisitor)visitor).visitOperationalStatistics( this );\n+   *         }\n+   *     }\n+   * }\n+   *\n+   * interface OperationalStatisticsVisitor\n+   * {\n+   *     void visitOperationalStatistics( OperationalStatistics statistics );\n+   * }\n+   * </pre></code>\n+   *\n+   * @param visitor the visitor visiting this {@link DiagnosticsProvider}.\n+   */\n+  void acceptDiagnosticsVisitor(Object visitor);\n \n-    /**\n-     * Dump the diagnostic information of this {@link DiagnosticsProvider} for\n-     * the specified {@link DiagnosticsPhase phase} to the provided\n-     * {@link Logger logger}.\n-     *\n-     * @param phase the {@link DiagnosticsPhase phase} to dump information for.\n-     * @param logger the {@link Logger logger} to dump information to.\n-     */\n-    void dump( DiagnosticsPhase phase, Logger logger );\n+  /**\n+   * Dump the diagnostic information of this {@link DiagnosticsProvider} for\n+   * the specified {@link DiagnosticsPhase phase} to the provided\n+   * {@link Logger logger}.\n+   *\n+   * @param phase  the {@link DiagnosticsPhase phase} to dump information for.\n+   * @param logger the {@link Logger logger} to dump information to.\n+   */\n+  void dump(DiagnosticsPhase phase, Logger logger);\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/945/DiagnosticsProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/945/DiagnosticsProvider.java\nindex c7434d71d0f..ab5574a767e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/945/DiagnosticsProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/945/DiagnosticsProvider.java\n@@ -80,4 +80,4 @@ public interface DiagnosticsProvider\n      * @param logger the {@link Logger logger} to dump information to.\n      */\n     void dump( DiagnosticsPhase phase, Logger logger );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
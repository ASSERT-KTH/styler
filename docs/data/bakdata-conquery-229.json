{
    "project_name": "bakdata-conquery",
    "error_id": "229",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\t.toArray(Class[]::new);\n\t\t\n\t\treturn new AbstractJavadocIntrospection<>(file, \n\t\t\tvalue\n\t\t\t\t.getMethodsByParameterTypes(types)\n\t\t\t\t.stream()",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/229/ClassIntrospection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/229/ClassIntrospection.java\nindex c9dfc7ca5fd..bccaeb1e325 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/229/ClassIntrospection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/229/ClassIntrospection.java\n@@ -16,56 +16,54 @@ import lombok.extern.slf4j.Slf4j;\n @Slf4j\n public class ClassIntrospection extends AbstractJavadocIntrospection<ClassOrInterfaceDeclaration> {\n \n-\tpublic ClassIntrospection(File file, ClassOrInterfaceDeclaration value) {\n-\t\tsuper(file, value);\n-\t}\n+    public ClassIntrospection(File file, ClassOrInterfaceDeclaration value) {\n+        super(file, value);\n+    }\n \n-\tpublic ClassIntrospection findInnerType(String simpleName) {\n-\t\tfor(var decl : value.getMembers()) {\n-\t\t\tif(decl.isClassOrInterfaceDeclaration()) {\n-\t\t\t\tvar cType = decl.asClassOrInterfaceDeclaration();\n-\t\t\t\tif((value.getNameAsString()+\"$\"+cType.getNameAsString()).equals(simpleName)) {\n-\t\t\t\t\treturn new ClassIntrospection(file, cType);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\tthrow new IllegalStateException(value.getNameAsString()+\" has no inner type \"+simpleName);\n-\t}\n+    public ClassIntrospection findInnerType(String simpleName) {\n+        for (var decl : value.getMembers()) {\n+            if (decl.isClassOrInterfaceDeclaration()) {\n+                var cType = decl.asClassOrInterfaceDeclaration();\n+                if ((value.getNameAsString() + \"$\" + cType.getNameAsString()).equals(simpleName)) {\n+                    return new ClassIntrospection(file, cType);\n+                }\n+            }\n+        }\n+        throw new IllegalStateException(value.getNameAsString() + \" has no inner type \" + simpleName);\n+    }\n \n-\tpublic Introspection findMethod(MethodInfo method) {\n-\t\tvar types = Arrays.stream(method.getParameterInfo())\n-\t\t\t.map(p->p.getTypeSignatureOrTypeDescriptor())\n-\t\t\t.map(this::toClass)\n-\t\t\t.toArray(Class[]::new);\n-\t\t\n-\t\treturn new AbstractJavadocIntrospection<>(file, \n-\t\t\tvalue\n-\t\t\t\t.getMethodsByParameterTypes(types)\n-\t\t\t\t.stream()\n-\t\t\t\t.filter(md->md.getNameAsString().equals(method.getName()))\n-\t\t\t\t.collect(MoreCollectors.onlyElement())\n-\t\t);\n-\t}\n-\t\n-\tprivate Class<?> toClass(TypeSignature sig) {\n-\t\tif(sig instanceof BaseTypeSignature) {\n-\t\t\treturn ((BaseTypeSignature) sig).getType();\n-\t\t}\n-\t\telse if(sig instanceof ArrayTypeSignature) {\n-\t\t\treturn ((ArrayTypeSignature) sig).loadClass();\n-\t\t}\n-\t\telse if(sig instanceof ClassRefTypeSignature) {\n-\t\t\treturn ((ClassRefTypeSignature) sig).loadClass();\n-\t\t}\n-\t\tthrow new IllegalStateException(\"Can't find class for signature \"+sig);\n-\t}\n+    public Introspection findMethod(MethodInfo method) {\n+        var types = Arrays.stream(method.getParameterInfo())\n+            .map(p -> p.getTypeSignatureOrTypeDescriptor())\n+            .map(this::toClass)\n+            .toArray(Class[]::new);\n \n-\tpublic Introspection findField(FieldInfo field) {\n-\t\tvar f = value.getFieldByName(field.getName());\n-\t\tif(f.isPresent()) {\n-\t\t\treturn new AbstractJavadocIntrospection<>(file, f.get());\n-\t\t}\n-\t\tlog.warn(\"Could not find field \"+field.getName());\n-\t\treturn super.findField(field);\n-\t}\n+        return new AbstractJavadocIntrospection<>(file,\n+            value\n+                .getMethodsByParameterTypes(types)\n+                .stream()\n+                .filter(md -> md.getNameAsString().equals(method.getName()))\n+                .collect(MoreCollectors.onlyElement())\n+        );\n+    }\n+\n+    private Class<?> toClass(TypeSignature sig) {\n+        if (sig instanceof BaseTypeSignature) {\n+            return ((BaseTypeSignature) sig).getType();\n+        } else if (sig instanceof ArrayTypeSignature) {\n+            return ((ArrayTypeSignature) sig).loadClass();\n+        } else if (sig instanceof ClassRefTypeSignature) {\n+            return ((ClassRefTypeSignature) sig).loadClass();\n+        }\n+        throw new IllegalStateException(\"Can't find class for signature \" + sig);\n+    }\n+\n+    public Introspection findField(FieldInfo field) {\n+        var f = value.getFieldByName(field.getName());\n+        if (f.isPresent()) {\n+            return new AbstractJavadocIntrospection<>(file, f.get());\n+        }\n+        log.warn(\"Could not find field \" + field.getName());\n+        return super.findField(field);\n+    }\n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
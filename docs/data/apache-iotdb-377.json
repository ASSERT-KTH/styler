{
    "project_name": "apache-iotdb",
    "error_id": "377",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.pulsar;\n\nimport org.apache.pulsar.client.api.Consumer;\nimport org.apache.pulsar.client.api.KeySharedPolicy;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/377/PulsarConsumer.java\nindex d93ada8cbf9..bd608705e99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/377/PulsarConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.pulsar;\n \n import org.apache.pulsar.client.api.Consumer;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/377/PulsarConsumer.java\nindex d93ada8cbf9..d1a9ad82477 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/377/PulsarConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.pulsar;\n \n import org.apache.pulsar.client.api.Consumer;\n@@ -45,12 +46,12 @@ public class PulsarConsumer {\n       \"CREATE TIMESERIES %s WITH DATATYPE=TEXT, ENCODING=PLAIN\";\n   private static final Logger logger = LoggerFactory.getLogger(PulsarConsumer.class);\n   protected static final String[] ALL_TIMESERIES = {\n-    \"root.vehicle.device1.sensor1\",\n-    \"root.vehicle.device1.sensor2\",\n-    \"root.vehicle.device2.sensor1\",\n-    \"root.vehicle.device2.sensor2\",\n-    \"root.vehicle.device3.sensor1\",\n-    \"root.vehicle.device3.sensor2\",\n+      \"root.vehicle.device1.sensor1\",\n+      \"root.vehicle.device1.sensor2\",\n+      \"root.vehicle.device2.sensor1\",\n+      \"root.vehicle.device2.sensor2\",\n+      \"root.vehicle.device3.sensor1\",\n+      \"root.vehicle.device3.sensor2\",\n   };\n \n   public PulsarConsumer(List<Consumer<?>> consumerList) {\n@@ -70,11 +71,11 @@ public class PulsarConsumer {\n     try {\n       Class.forName(\"org.apache.iotdb.jdbc.IoTDBDriver\");\n       try (Connection connection =\n-              DriverManager.getConnection(\n-                  Constant.IOTDB_CONNECTION_URL,\n-                  Constant.IOTDB_CONNECTION_USER,\n-                  Constant.IOTDB_CONNECTION_PASSWORD);\n-          Statement statement = connection.createStatement()) {\n+               DriverManager.getConnection(\n+                   Constant.IOTDB_CONNECTION_URL,\n+                   Constant.IOTDB_CONNECTION_USER,\n+                   Constant.IOTDB_CONNECTION_PASSWORD);\n+           Statement statement = connection.createStatement()) {\n \n         statement.execute(String.format(CREATE_SG_TEMPLATE, Constant.STORAGE_GROUP));\n \n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'Constant' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'Constant' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'Constant' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 234).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/377/PulsarConsumer.java\nindex d93ada8cbf9..e4a017abb5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/377/PulsarConsumer.java\n@@ -25,7 +25,6 @@ import org.apache.pulsar.client.api.PulsarClientException;\n import org.apache.pulsar.client.api.SubscriptionType;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.sql.Connection;\n import java.sql.DriverManager;\n import java.sql.SQLException;\n@@ -36,21 +35,16 @@ import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n \n public class PulsarConsumer {\n+\n   private static final String SERVICE_URL = \"pulsar://localhost:6650\";\n   // Specify the number of consumers\n   private static final int CONSUMER_NUM = 3;\n   private List<Consumer<?>> consumerList;\n   private static final String CREATE_SG_TEMPLATE = \"SET STORAGE GROUP TO %s\";\n-  private static final String CREATE_TIMESERIES_TEMPLATE =\n-      \"CREATE TIMESERIES %s WITH DATATYPE=TEXT, ENCODING=PLAIN\";\n+  private static final String CREATE_TIMESERIES_TEMPLATE = \"CREATE TIMESERIES %s WITH DATATYPE=TEXT, ENCODING=PLAIN\";\n   private static final Logger logger = LoggerFactory.getLogger(PulsarConsumer.class);\n-  protected static final String[] ALL_TIMESERIES = {\n-    \"root.vehicle.device1.sensor1\",\n-    \"root.vehicle.device1.sensor2\",\n-    \"root.vehicle.device2.sensor1\",\n-    \"root.vehicle.device2.sensor2\",\n-    \"root.vehicle.device3.sensor1\",\n-    \"root.vehicle.device3.sensor2\",\n+\n+  protected static final String[] ALL_TIMESERIES = {\"root.vehicle.device1.sensor1\", \"root.vehicle.device1.sensor2\", \"root.vehicle.device2.sensor1\", \"root.vehicle.device2.sensor2\", \"root.vehicle.device3.sensor1\", \"root.vehicle.device3.sensor2\",\n   };\n \n   public PulsarConsumer(List<Consumer<?>> consumerList) {\n@@ -69,15 +63,12 @@ public class PulsarConsumer {\n   private static void prepareSchema() {\n     try {\n       Class.forName(\"org.apache.iotdb.jdbc.IoTDBDriver\");\n-      try (Connection connection =\n-              DriverManager.getConnection(\n-                  Constant.IOTDB_CONNECTION_URL,\n-                  Constant.IOTDB_CONNECTION_USER,\n-                  Constant.IOTDB_CONNECTION_PASSWORD);\n+      try (Connection connection = DriverManager.getConnection(\n+        Constant.IOTDB_CONNECTION_URL,\n+        Constant.IOTDB_CONNECTION_USER,\n+        Constant.IOTDB_CONNECTION_PASSWORD);\n           Statement statement = connection.createStatement()) {\n-\n         statement.execute(String.format(CREATE_SG_TEMPLATE, Constant.STORAGE_GROUP));\n-\n         for (String timeseries : ALL_TIMESERIES) {\n           statement.addBatch(String.format(CREATE_TIMESERIES_TEMPLATE, timeseries));\n         }\n@@ -91,23 +82,15 @@ public class PulsarConsumer {\n \n   public static void main(String[] args) throws PulsarClientException, ClassNotFoundException {\n     PulsarClient client = PulsarClient.builder().serviceUrl(SERVICE_URL).build();\n-\n     List<Consumer<?>> consumerList = new ArrayList<>();\n     for (int i = 0; i < CONSUMER_NUM; i++) {\n       // In shared subscription mode, multiple consumers can attach to the same subscription\n       // and message are delivered in a round robin distribution across consumers.\n-      Consumer<byte[]> consumer =\n-          client\n-              .newConsumer()\n-              .topic(Constant.TOPIC_NAME)\n-              .subscriptionName(\"shared-subscription\")\n-              .subscriptionType(SubscriptionType.Key_Shared)\n-              .keySharedPolicy(KeySharedPolicy.autoSplitHashRange())\n-              .subscribe();\n+      Consumer<byte[]> consumer = client.newConsumer().topic(Constant.TOPIC_NAME).subscriptionName(\"shared-subscription\").subscriptionType(SubscriptionType.Key_Shared).keySharedPolicy(KeySharedPolicy.autoSplitHashRange()).subscribe();\n       consumerList.add(consumer);\n     }\n     PulsarConsumer pulsarConsumer = new PulsarConsumer(consumerList);\n     prepareSchema();\n     pulsarConsumer.consumeInParallel();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/377/PulsarConsumer.java\nindex d93ada8cbf9..bd608705e99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/377/PulsarConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.pulsar;\n \n import org.apache.pulsar.client.api.Consumer;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/377/PulsarConsumer.java\nindex d93ada8cbf9..bd608705e99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/377/PulsarConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/377/PulsarConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.pulsar;\n \n import org.apache.pulsar.client.api.Consumer;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
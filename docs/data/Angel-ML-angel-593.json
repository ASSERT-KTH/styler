{
    "project_name": "Angel-ML-angel",
    "error_id": "593",
    "information": {
        "errors": [
            {
                "line": "180",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 116).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      float[] floats = Utils.floatListToArray(floatArray);\n      double[] doubles = Utils.doubleListToArray(doubleArray);\n      PSFPartitionUpdateParam partParam = new PSFPartitionUpdateParam(matrixId, part, ints, longs, floats, doubles);\n      partParams.add(partParam);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/593/CommonParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/593/CommonParam.java\nindex 87b3f788178..93e8d95c299 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/593/CommonParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/593/CommonParam.java\n@@ -67,19 +67,19 @@ public class CommonParam extends UpdateParam {\n     public void serialize(ByteBuf buf) {\n       super.serialize(buf);\n       buf.writeInt(intArray.length);\n-      for (int value: intArray) {\n+      for (int value : intArray) {\n         buf.writeInt(value);\n       }\n       buf.writeInt(longArray.length);\n-      for (long value: longArray) {\n+      for (long value : longArray) {\n         buf.writeLong(value);\n       }\n       buf.writeInt(floatArray.length);\n-      for (float value: floatArray) {\n+      for (float value : floatArray) {\n         buf.writeFloat(value);\n       }\n       buf.writeInt(doubleArray.length);\n-      for (double value: doubleArray) {\n+      for (double value : doubleArray) {\n         buf.writeDouble(value);\n       }\n     }\n@@ -129,15 +129,15 @@ public class CommonParam extends UpdateParam {\n   }\n \n   public CommonParam(int matrixId, int[] ints) {\n-    this(matrixId, ints, new long[]{}, new double[]{});\n+    this(matrixId, ints, new long[] {}, new double[] {});\n   }\n \n   public CommonParam(int matrixId, int[] ints, double[] doubles) {\n-    this(matrixId, ints, new long[]{}, doubles);\n+    this(matrixId, ints, new long[] {}, doubles);\n   }\n \n   public CommonParam(int matrixId, long[] longs, double[] doubles) {\n-    this(matrixId, new int[]{}, longs, doubles);\n+    this(matrixId, new int[] {}, longs, doubles);\n   }\n \n   public CommonParam(int matrixId, int[] ints, long[] longs, double[] doubles) {\n@@ -177,7 +177,8 @@ public class CommonParam extends UpdateParam {\n       long[] longs = Utils.longListToArray(longArray);\n       float[] floats = Utils.floatListToArray(floatArray);\n       double[] doubles = Utils.doubleListToArray(doubleArray);\n-      PSFPartitionUpdateParam partParam = new PSFPartitionUpdateParam(matrixId, part, ints, longs, floats, doubles);\n+      PSFPartitionUpdateParam partParam =\n+          new PSFPartitionUpdateParam(matrixId, part, ints, longs, floats, doubles);\n       partParams.add(partParam);\n     }\n \n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/593/CommonParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/593/CommonParam.java\nindex 87b3f788178..0ed834837e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/593/CommonParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/593/CommonParam.java\n@@ -34,9 +34,8 @@ public class CommonParam extends UpdateParam {\n     private float[] floatArray;\n     private double[] doubleArray;\n \n-    public PSFPartitionUpdateParam(int matrixId, PartitionKey partKey,\n-                                   int[] ints, long[] longs, float[] floats, double[] doubles) {\n-      super(matrixId, partKey, false);\n+    public PSFPartitionUpdateParam(int matrixId, PartitionKey partKey, int[] ints, long[] longs, float[] floats, double[] doubles) {\n+  super(matrixId, partKey, false);\n       intArray = ints;\n       longArray = longs;\n       floatArray = floats;\n@@ -115,11 +114,9 @@ public class CommonParam extends UpdateParam {\n       }\n       this.doubleArray = doubles;\n     }\n-\n   }\n \n-\n-  private ArrayList<Integer> intArray = new ArrayList<>();\n+private ArrayList<Integer> intArray = new ArrayList<>();\n   private ArrayList<Long> longArray = new ArrayList<>();\n   private ArrayList<Float> floatArray = new ArrayList<>();\n   private ArrayList<Double> doubleArray = new ArrayList<>();\n@@ -163,8 +160,7 @@ public class CommonParam extends UpdateParam {\n     doubleArray.add(d);\n   }\n \n-\n-  @Override\n+@Override\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> parts = PSAgentContext.get()\n         .getMatrixPartitionRouter()\n@@ -183,4 +179,4 @@ public class CommonParam extends UpdateParam {\n \n     return partParams;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/593/CommonParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/593/CommonParam.java\nindex 87b3f788178..7976f9ccec4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/593/CommonParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/593/CommonParam.java\n@@ -16,26 +16,24 @@\n \n package com.tencent.angel.ml.matrix.psf.common;\n \n-\n import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.update.enhance.PartitionUpdateParam;\n import com.tencent.angel.ml.matrix.psf.update.enhance.UpdateParam;\n import com.tencent.angel.psagent.PSAgentContext;\n import io.netty.buffer.ByteBuf;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n public class CommonParam extends UpdateParam {\n \n   public static class PSFPartitionUpdateParam extends PartitionUpdateParam {\n+\n     private int[] intArray;\n     private long[] longArray;\n     private float[] floatArray;\n     private double[] doubleArray;\n \n-    public PSFPartitionUpdateParam(int matrixId, PartitionKey partKey,\n-                                   int[] ints, long[] longs, float[] floats, double[] doubles) {\n+    public PSFPartitionUpdateParam(int matrixId, PartitionKey partKey, int[] ints, long[] longs, float[] floats, double[] doubles) {\n       super(matrixId, partKey, false);\n       intArray = ints;\n       longArray = longs;\n@@ -67,19 +65,19 @@ public class CommonParam extends UpdateParam {\n     public void serialize(ByteBuf buf) {\n       super.serialize(buf);\n       buf.writeInt(intArray.length);\n-      for (int value: intArray) {\n+      for (int value : intArray) {\n         buf.writeInt(value);\n       }\n       buf.writeInt(longArray.length);\n-      for (long value: longArray) {\n+      for (long value : longArray) {\n         buf.writeLong(value);\n       }\n       buf.writeInt(floatArray.length);\n-      for (float value: floatArray) {\n+      for (float value : floatArray) {\n         buf.writeFloat(value);\n       }\n       buf.writeInt(doubleArray.length);\n-      for (double value: doubleArray) {\n+      for (double value : doubleArray) {\n         buf.writeDouble(value);\n       }\n     }\n@@ -87,38 +85,47 @@ public class CommonParam extends UpdateParam {\n     @Override\n     public void deserialize(ByteBuf buf) {\n       super.deserialize(buf);\n+\n       int size = buf.readInt();\n       int[] ints = new int[size];\n       for (int i = 0; i < size; i++) {\n         ints[i] = buf.readInt();\n       }\n-      this.intArray = ints;\n \n+\n+\n+      this.intArray = ints;\n       size = buf.readInt();\n+\n       long[] longs = new long[size];\n       for (int i = 0; i < size; i++) {\n         longs[i] = buf.readLong();\n       }\n-      this.longArray = longs;\n \n+\n+\n+      this.longArray = longs;\n       size = buf.readInt();\n       float[] floats = new float[size];\n       for (int i = 0; i < size; i++) {\n         floats[i] = buf.readFloat();\n       }\n-      this.floatArray = floats;\n \n+\n+\n+      this.floatArray = floats;\n       size = buf.readInt();\n       double[] doubles = new double[size];\n       for (int i = 0; i < size; i++) {\n         doubles[i] = buf.readDouble();\n       }\n+\n+\n+\n       this.doubleArray = doubles;\n     }\n-\n   }\n \n-\n   private ArrayList<Integer> intArray = new ArrayList<>();\n   private ArrayList<Long> longArray = new ArrayList<>();\n   private ArrayList<Float> floatArray = new ArrayList<>();\n@@ -142,9 +149,12 @@ public class CommonParam extends UpdateParam {\n \n   public CommonParam(int matrixId, int[] ints, long[] longs, double[] doubles) {\n     super(matrixId, false);\n-    for (int i : ints) setInt(i);\n-    for (long l : longs) setLong(l);\n-    for (double d : doubles) setDouble(d);\n+    for (int i : ints)\n+      setInt(i);\n+    for (long l : longs)\n+      setLong(l);\n+    for (double d : doubles)\n+      setDouble(d);\n   }\n \n   public void setInt(int i) {\n@@ -163,13 +173,9 @@ public class CommonParam extends UpdateParam {\n     doubleArray.add(d);\n   }\n \n-\n   @Override\n   public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> parts = PSAgentContext.get()\n-        .getMatrixPartitionRouter()\n-        .getPartitionKeyList(matrixId);\n-\n+    List<PartitionKey> parts = PSAgentContext.get().getMatrixPartitionRouter().getPartitionKeyList(matrixId);\n     int size = parts.size();\n     List<PartitionUpdateParam> partParams = new ArrayList<PartitionUpdateParam>(size);\n     for (PartitionKey part : parts) {\n@@ -180,7 +186,7 @@ public class CommonParam extends UpdateParam {\n       PSFPartitionUpdateParam partParam = new PSFPartitionUpdateParam(matrixId, part, ints, longs, floats, doubles);\n       partParams.add(partParam);\n     }\n-\n     return partParams;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
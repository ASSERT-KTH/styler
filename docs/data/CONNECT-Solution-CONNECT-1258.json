{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1258",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpi.adapter.component.proxy;\n\nimport gov.hhs.fha.nhinc.adaptercomponentmpi.AdapterComponentMpiPortType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\nindex 266c5b4884d..bcf23b54631 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.adaptercomponentmpi.AdapterComponentMpiPortType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\nindex 266c5b4884d..e9266acaba3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.adaptercomponentmpi.AdapterComponentMpiPortType;\n@@ -43,71 +44,69 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * This is the proxy class for the unsecured AdapterComponentProxy interface.\n- *\n  */\n public class AdapterComponentMpiProxyWebServiceUnsecuredImpl implements AdapterComponentMpiProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentMpiProxyWebServiceUnsecuredImpl.class);\n-    private final WebServiceProxyHelper oProxyHelper = new WebServiceProxyHelper();\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentMpiProxyWebServiceUnsecuredImpl.class);\n+  private final WebServiceProxyHelper oProxyHelper = new WebServiceProxyHelper();\n \n-    /**\n-    *\n-    * @param portDescriptor the port descriptor\n-    * @param url the intended url\n-    * @param assertion the message assertion\n-    * @return a CONNECTClient object for AdapterComponentMpiPortType\n-    */\n-    protected CONNECTClient<AdapterComponentMpiPortType> getCONNECTClientUnsecured(\n-            ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor, String url, AssertionType assertion) {\n+  /**\n+   * @param portDescriptor the port descriptor\n+   * @param url            the intended url\n+   * @param assertion      the message assertion\n+   * @return a CONNECTClient object for AdapterComponentMpiPortType\n+   */\n+  protected CONNECTClient<AdapterComponentMpiPortType> getCONNECTClientUnsecured(\n+      ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor, String url, AssertionType assertion) {\n \n-        return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n-    }\n+    return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+  }\n \n-    /**\n-     * Find the matching candidates from the MPI.\n-     *\n-     * @param request The information to use for matching.\n-     * @param assertion The assertion data.\n-     * @return The matches that are found.\n-     */\n-    @Override\n-    public PRPAIN201306UV02 findCandidates(PRPAIN201305UV02 request, AssertionType assertion) {\n-        String url;\n-        PRPAIN201306UV02 response = new PRPAIN201306UV02();\n-        String sServiceName = NhincConstants.ADAPTER_COMPONENT_MPI_SERVICE_NAME;\n+  /**\n+   * Find the matching candidates from the MPI.\n+   *\n+   * @param request   The information to use for matching.\n+   * @param assertion The assertion data.\n+   * @return The matches that are found.\n+   */\n+  @Override\n+  public PRPAIN201306UV02 findCandidates(PRPAIN201305UV02 request, AssertionType assertion) {\n+    String url;\n+    PRPAIN201306UV02 response = new PRPAIN201306UV02();\n+    String sServiceName = NhincConstants.ADAPTER_COMPONENT_MPI_SERVICE_NAME;\n \n-        try {\n-            if (request != null) {\n-                LOG.debug(\"Before target system URL look up.\");\n-                url = oProxyHelper.getAdapterEndPointFromConnectionManager(sServiceName);\n-                LOG.debug(\"After target system URL look up. URL for service: \" + sServiceName + \" is: \" + url);\n+    try {\n+      if (request != null) {\n+        LOG.debug(\"Before target system URL look up.\");\n+        url = oProxyHelper.getAdapterEndPointFromConnectionManager(sServiceName);\n+        LOG.debug(\"After target system URL look up. URL for service: \" + sServiceName + \" is: \" + url);\n \n-                if (NullChecker.isNotNullish(url)) {\n-                    RespondingGatewayPRPAIN201305UV02RequestType wsRequest =\n-                            new RespondingGatewayPRPAIN201305UV02RequestType();\n-                    wsRequest.setPRPAIN201305UV02(request);\n-                    wsRequest.setAssertion(assertion);\n+        if (NullChecker.isNotNullish(url)) {\n+          RespondingGatewayPRPAIN201305UV02RequestType wsRequest =\n+              new RespondingGatewayPRPAIN201305UV02RequestType();\n+          wsRequest.setPRPAIN201305UV02(request);\n+          wsRequest.setAssertion(assertion);\n \n-                    ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor =\n-                            new AdapterComponentMpiUnsecuredServicePortDescriptor();\n+          ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor =\n+              new AdapterComponentMpiUnsecuredServicePortDescriptor();\n \n-                    CONNECTClient<AdapterComponentMpiPortType> client =\n-                            getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+          CONNECTClient<AdapterComponentMpiPortType> client =\n+              getCONNECTClientUnsecured(portDescriptor, url, assertion);\n \n-                    response =\n-                            (PRPAIN201306UV02) client.invokePort(AdapterComponentMpiPortType.class, \"findCandidates\",\n-                                    wsRequest);\n-                } else {\n-                    LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The URL is null.\");\n-                }\n-            } else {\n-                LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The input parameter is null.\");\n-            }\n-        } catch (Exception e) {\n-            LOG.error(\"Failed to call the web service (\" + sServiceName + \").  An unexpected exception occurred.  \"\n-                    + \"Exception: \" + e.getMessage(), e);\n+          response =\n+              (PRPAIN201306UV02) client.invokePort(AdapterComponentMpiPortType.class, \"findCandidates\",\n+                  wsRequest);\n+        } else {\n+          LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The URL is null.\");\n         }\n-\n-        return response;\n+      } else {\n+        LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The input parameter is null.\");\n+      }\n+    } catch (Exception e) {\n+      LOG.error(\"Failed to call the web service (\" + sServiceName + \").  An unexpected exception occurred.  \"\n+          + \"Exception: \" + e.getMessage(), e);\n     }\n+\n+    return response;\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\nindex 266c5b4884d..6dd3ccbda51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.adaptercomponentmpi.AdapterComponentMpiPortType;\n@@ -59,8 +60,7 @@ public class AdapterComponentMpiProxyWebServiceUnsecuredImpl implements AdapterC\n     */\n     protected CONNECTClient<AdapterComponentMpiPortType> getCONNECTClientUnsecured(\n             ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor, String url, AssertionType assertion) {\n-\n-        return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+    return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n     }\n \n     /**\n@@ -75,39 +75,29 @@ public class AdapterComponentMpiProxyWebServiceUnsecuredImpl implements AdapterC\n         String url;\n         PRPAIN201306UV02 response = new PRPAIN201306UV02();\n         String sServiceName = NhincConstants.ADAPTER_COMPONENT_MPI_SERVICE_NAME;\n-\n-        try {\n+try {\n             if (request != null) {\n                 LOG.debug(\"Before target system URL look up.\");\n                 url = oProxyHelper.getAdapterEndPointFromConnectionManager(sServiceName);\n                 LOG.debug(\"After target system URL look up. URL for service: \" + sServiceName + \" is: \" + url);\n-\n-                if (NullChecker.isNotNullish(url)) {\n-                    RespondingGatewayPRPAIN201305UV02RequestType wsRequest =\n-                            new RespondingGatewayPRPAIN201305UV02RequestType();\n-                    wsRequest.setPRPAIN201305UV02(request);\n+if (NullChecker.isNotNullish(url)) {\n+                    RespondingGatewayPRPAIN201305UV02RequestType wsRequest = new RespondingGatewayPRPAIN201305UV02RequestType();\n+wsRequest.setPRPAIN201305UV02(request);\n                     wsRequest.setAssertion(assertion);\n \n-                    ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor =\n-                            new AdapterComponentMpiUnsecuredServicePortDescriptor();\n-\n-                    CONNECTClient<AdapterComponentMpiPortType> client =\n-                            getCONNECTClientUnsecured(portDescriptor, url, assertion);\n-\n-                    response =\n-                            (PRPAIN201306UV02) client.invokePort(AdapterComponentMpiPortType.class, \"findCandidates\",\n-                                    wsRequest);\n-                } else {\n+                    ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor = new AdapterComponentMpiUnsecuredServicePortDescriptor();\n+CONNECTClient<AdapterComponentMpiPortType> client = getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+response = (PRPAIN201306UV02) client.invokePort(AdapterComponentMpiPortType.class, \"findCandidates\", wsRequest);\n+    } else {\n                     LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The URL is null.\");\n                 }\n             } else {\n                 LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The input parameter is null.\");\n             }\n         } catch (Exception e) {\n-            LOG.error(\"Failed to call the web service (\" + sServiceName + \").  An unexpected exception occurred.  \"\n-                    + \"Exception: \" + e.getMessage(), e);\n-        }\n+            LOG.error(\"Failed to call the web service (\" + sServiceName + \").  An unexpected exception occurred.  \" + \"Exception: \" + e.getMessage(), e);\n+    }\n \n         return response;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "column": "19",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\nindex 266c5b4884d..9012df689ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n@@ -45,6 +45,8 @@ import org.slf4j.LoggerFactory;\n  * This is the proxy class for the unsecured AdapterComponentProxy interface.\n  *\n  */\n+\n+\n public class AdapterComponentMpiProxyWebServiceUnsecuredImpl implements AdapterComponentMpiProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentMpiProxyWebServiceUnsecuredImpl.class);\n@@ -57,9 +59,10 @@ public class AdapterComponentMpiProxyWebServiceUnsecuredImpl implements AdapterC\n     * @param assertion the message assertion\n     * @return a CONNECTClient object for AdapterComponentMpiPortType\n     */\n-    protected CONNECTClient<AdapterComponentMpiPortType> getCONNECTClientUnsecured(\n-            ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor, String url, AssertionType assertion) {\n \n+\n+    protected CONNECTClient<AdapterComponentMpiPortType> getCONNECTClientUnsecured(ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor,\n+        String url, AssertionType assertion) {\n         return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n     }\n \n@@ -70,44 +73,41 @@ public class AdapterComponentMpiProxyWebServiceUnsecuredImpl implements AdapterC\n      * @param assertion The assertion data.\n      * @return The matches that are found.\n      */\n+\n+\n     @Override\n     public PRPAIN201306UV02 findCandidates(PRPAIN201305UV02 request, AssertionType assertion) {\n         String url;\n         PRPAIN201306UV02 response = new PRPAIN201306UV02();\n         String sServiceName = NhincConstants.ADAPTER_COMPONENT_MPI_SERVICE_NAME;\n-\n         try {\n-            if (request != null) {\n+            if(request != null) {\n                 LOG.debug(\"Before target system URL look up.\");\n                 url = oProxyHelper.getAdapterEndPointFromConnectionManager(sServiceName);\n                 LOG.debug(\"After target system URL look up. URL for service: \" + sServiceName + \" is: \" + url);\n-\n-                if (NullChecker.isNotNullish(url)) {\n-                    RespondingGatewayPRPAIN201305UV02RequestType wsRequest =\n-                            new RespondingGatewayPRPAIN201305UV02RequestType();\n+                if(NullChecker.isNotNullish(url)) {\n+                    RespondingGatewayPRPAIN201305UV02RequestType wsRequest = new RespondingGatewayPRPAIN201305UV02RequestType();\n                     wsRequest.setPRPAIN201305UV02(request);\n                     wsRequest.setAssertion(assertion);\n+                    ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor = new AdapterComponentMpiUnsecuredServicePortDescriptor();\n+                    CONNECTClient<AdapterComponentMpiPortType> client = getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+                    response = (PRPAIN201306UV02)\n+                                   client.invokePort(AdapterComponentMpiPortType.class, \"findCandidates\", wsRequest);\n+                }\n \n-                    ServicePortDescriptor<AdapterComponentMpiPortType> portDescriptor =\n-                            new AdapterComponentMpiUnsecuredServicePortDescriptor();\n-\n-                    CONNECTClient<AdapterComponentMpiPortType> client =\n-                            getCONNECTClientUnsecured(portDescriptor, url, assertion);\n \n-                    response =\n-                            (PRPAIN201306UV02) client.invokePort(AdapterComponentMpiPortType.class, \"findCandidates\",\n-                                    wsRequest);\n-                } else {\n+else {\n                     LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The URL is null.\");\n                 }\n-            } else {\n+            }\n+\n+\n+else {\n                 LOG.error(\"Failed to call the web service (\" + sServiceName + \").  The input parameter is null.\");\n             }\n         } catch (Exception e) {\n-            LOG.error(\"Failed to call the web service (\" + sServiceName + \").  An unexpected exception occurred.  \"\n-                    + \"Exception: \" + e.getMessage(), e);\n+            LOG.error(\"Failed to call the web service (\" + sServiceName + \").  An unexpected exception occurred.  \" + \"Exception: \" + e.getMessage(), e);\n         }\n-\n         return response;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\nindex 266c5b4884d..0be0f12db00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.mpi.adapter.component.proxy;\n-\n import gov.hhs.fha.nhinc.adaptercomponentmpi.AdapterComponentMpiPortType;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.messaging.client.CONNECTCXFClientFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\nindex 266c5b4884d..bcf23b54631 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1258/AdapterComponentMpiProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.adaptercomponentmpi.AdapterComponentMpiPortType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "DSC-SPIDAL-harp",
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "3",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright 2013-2017 Indiana University\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/20/IntCountPlus.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/intellij/20/IntCountPlus.java\nindex 90db751c39d..2b424c4a6d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/20/IntCountPlus.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/intellij/20/IntCountPlus.java\n@@ -1,6 +1,6 @@\n /*\r\n  * Copyright 2013-2017 Indiana University\r\n- * \r\n+ *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n@@ -23,18 +23,18 @@ import edu.iu.harp.keyval.ValStatus;\n  * Combiner for IntCount\r\n  ******************************************************/\r\n public class IntCountPlus\r\n-  extends ValCombiner<IntCount> {\r\n+    extends ValCombiner<IntCount> {\r\n \r\n-  /**\r\n-   * Combine two IntCountss\r\n-   */\r\n-  @Override\r\n-  public ValStatus combine(IntCount curVal,\r\n-    IntCount newVal) {\r\n-    curVal\r\n-      .setInt(curVal.getInt() + newVal.getInt());\r\n-    curVal.setCount(\r\n-      curVal.getCount() + newVal.getCount());\r\n-    return ValStatus.COMBINED;\r\n-  }\r\n+    /**\r\n+     * Combine two IntCountss\r\n+     */\r\n+    @Override\r\n+    public ValStatus combine(IntCount curVal,\r\n+                             IntCount newVal) {\r\n+        curVal\r\n+            .setInt(curVal.getInt() + newVal.getInt());\r\n+        curVal.setCount(\r\n+            curVal.getCount() + newVal.getCount());\r\n+        return ValStatus.COMBINED;\r\n+    }\r\n }\r\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/20/IntCountPlus.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/naturalize/20/IntCountPlus.java\nindex 90db751c39d..7a5eb86f37a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/20/IntCountPlus.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/naturalize/20/IntCountPlus.java\n@@ -23,8 +23,8 @@ import edu.iu.harp.keyval.ValStatus;\n  * Combiner for IntCount\r\n  ******************************************************/\r\n public class IntCountPlus\r\n-  extends ValCombiner<IntCount> {\r\n-\r\n+  extends ValCombiner<IntCount> {\n+\n   /**\r\n    * Combine two IntCountss\r\n    */\r\n@@ -37,4 +37,4 @@ public class IntCountPlus\n       curVal.getCount() + newVal.getCount());\r\n     return ValStatus.COMBINED;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/20/IntCountPlus.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/codebuff/20/IntCountPlus.java\nindex 90db751c39d..d7ee3129ecf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/errored/1/20/IntCountPlus.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DSC-SPIDAL-harp/codebuff/20/IntCountPlus.java\n@@ -14,27 +14,28 @@\n  * limitations under the License.\r\n  */\r\n \r\n-package edu.iu.harp.example;\r\n-\r\n-import edu.iu.harp.keyval.ValCombiner;\r\n+package edu.iu.harp.example;\n+\n+import edu.iu.harp.keyval.ValCombiner;\n import edu.iu.harp.keyval.ValStatus;\r\n \r\n /*******************************************************\r\n  * Combiner for IntCount\r\n- ******************************************************/\r\n-public class IntCountPlus\r\n-  extends ValCombiner<IntCount> {\r\n+ ******************************************************/\n+\n+\n+public class IntCountPlus extends\n+  ValCombiner<IntCount> {\r\n \r\n   /**\r\n    * Combine two IntCountss\r\n-   */\r\n-  @Override\r\n-  public ValStatus combine(IntCount curVal,\r\n-    IntCount newVal) {\r\n-    curVal\r\n-      .setInt(curVal.getInt() + newVal.getInt());\r\n-    curVal.setCount(\r\n-      curVal.getCount() + newVal.getCount());\r\n-    return ValStatus.COMBINED;\r\n-  }\r\n-}\r\n+   */\n+\n+  @Override\n+  public ValStatus combine(IntCount curVal,\n+                           IntCount newVal) {\n+                           curVal.setInt(curVal.getInt() + newVal.getInt());\n+                           curVal.setCount(curVal.getCount() + newVal.getCount());\n+                           return ValStatus.COMBINED;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "506",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/506/RaftMembershipState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/506/RaftMembershipState.java\nindex 701188b1946..b22be81e9f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/506/RaftMembershipState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/506/RaftMembershipState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.io.IOException;\n@@ -35,25 +36,25 @@ import org.neo4j.storageengine.api.WritableChannel;\n  * Represents the current state of membership in RAFT and exposes operations\n  * for modifying the state. The valid states and transitions are represented\n  * by the following table:\n- *\n+ * <p>\n  * state                           valid transitions\n  * 1: [\u00a0-        , -        ]        2 (append)\n  * 2: [ -        , appended ]      1,4 (commit or truncate)\n  * 3: [\u00a0committed, appended ]        4 (commit or truncate)\n  * 4: [ committed, -        ]        3 (append)\n- *\n+ * <p>\n  * The transition from 3->4 is either because the appended entry became\n  * the new committed entry or because the appended entry was truncated.\n- *\n+ * <p>\n  * A committed entry can never be truncated and there can only be a single\n  * outstanding appended entry which usually is committed shortly\n  * thereafter, but it might also be truncated.\n- *\n+ * <p>\n  * Recovery must in-order replay all the log entries whose effects are not\n  * guaranteed to have been persisted. The handling of these events is\n  * idempotent so it is safe to replay entries which might have been\n  * applied already.\n- *\n+ * <p>\n  * Note that commit updates occur separately from append/truncation in RAFT\n  * so it is possible to for example observe several membership entries in a row\n  * being appended on a particular member without an intermediate commit, even\n@@ -68,168 +69,168 @@ import org.neo4j.storageengine.api.WritableChannel;\n  */\n public class RaftMembershipState extends LifecycleAdapter\n {\n-    private MembershipEntry committed;\n-    private MembershipEntry appended;\n-    private long ordinal; // persistence ordinal must be increased each time we change committed or appended\n-\n-    public RaftMembershipState()\n+  private MembershipEntry committed;\n+  private MembershipEntry appended;\n+  private long ordinal; // persistence ordinal must be increased each time we change committed or appended\n+\n+  public RaftMembershipState()\n+  {\n+    this(-1, null, null);\n+  }\n+\n+  RaftMembershipState(long ordinal, MembershipEntry committed, MembershipEntry appended)\n+  {\n+    this.ordinal = ordinal;\n+    this.committed = committed;\n+    this.appended = appended;\n+  }\n+\n+  public boolean append(long logIndex, Set<MemberId> members)\n+  {\n+    if (appended != null && logIndex <= appended.logIndex())\n     {\n-        this( -1, null, null );\n+      return false;\n     }\n \n-    RaftMembershipState( long ordinal, MembershipEntry committed, MembershipEntry appended )\n+    if (committed != null && logIndex <= committed.logIndex())\n     {\n-        this.ordinal = ordinal;\n-        this.committed = committed;\n-        this.appended = appended;\n+      return false;\n     }\n \n-    public boolean append( long logIndex, Set<MemberId> members )\n+    if (appended != null && (committed == null || appended.logIndex() > committed.logIndex()))\n     {\n-        if ( appended != null && logIndex <= appended.logIndex() )\n-        {\n-            return false;\n-        }\n-\n-        if ( committed != null && logIndex <= committed.logIndex() )\n-        {\n-            return false;\n-        }\n-\n-        if ( appended != null && (committed == null || appended.logIndex() > committed.logIndex()) )\n-        {\n             /* This might seem counter-intuitive, but seeing two appended entries\n             in a row must mean that the previous one got committed. So it must\n             be recorded as having been committed or a subsequent truncation might\n             erase the state. We also protect against going backwards in the\n             committed state, as might happen during recovery. */\n \n-            committed = appended;\n-        }\n-\n-        ordinal++;\n-        appended = new MembershipEntry( logIndex, members );\n-        return true;\n+      committed = appended;\n     }\n \n-    public boolean truncate( long fromIndex )\n+    ordinal++;\n+    appended = new MembershipEntry(logIndex, members);\n+    return true;\n+  }\n+\n+  public boolean truncate(long fromIndex)\n+  {\n+    if (committed != null && fromIndex <= committed.logIndex())\n     {\n-        if ( committed != null && fromIndex <= committed.logIndex() )\n-        {\n-            throw new IllegalStateException( \"Truncating committed entry\" );\n-        }\n-\n-        if ( appended != null && fromIndex <= appended.logIndex() )\n-        {\n-            ordinal++;\n-            appended = null;\n-            return true;\n-        }\n-        return false;\n+      throw new IllegalStateException(\"Truncating committed entry\");\n     }\n \n-    public boolean commit( long commitIndex )\n+    if (appended != null && fromIndex <= appended.logIndex())\n     {\n-        if ( appended != null && commitIndex >= appended.logIndex() )\n-        {\n-            ordinal++;\n-            committed = appended;\n-            appended = null;\n-            return true;\n-        }\n-        return false;\n+      ordinal++;\n+      appended = null;\n+      return true;\n     }\n+    return false;\n+  }\n \n-    boolean uncommittedMemberChangeInLog()\n+  public boolean commit(long commitIndex)\n+  {\n+    if (appended != null && commitIndex >= appended.logIndex())\n     {\n-        return appended != null;\n+      ordinal++;\n+      committed = appended;\n+      appended = null;\n+      return true;\n     }\n+    return false;\n+  }\n \n-    Set<MemberId> getLatest()\n-    {\n+  boolean uncommittedMemberChangeInLog()\n+  {\n+    return appended != null;\n+  }\n \n-        return appended != null ? appended.members() :\n-               committed != null ? committed.members() : new HashSet<>();\n-    }\n+  Set<MemberId> getLatest()\n+  {\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        RaftMembershipState that = (RaftMembershipState) o;\n-        return ordinal == that.ordinal && Objects.equals( committed, that.committed ) &&\n-                Objects.equals( appended, that.appended );\n-    }\n+    return appended != null ? appended.members() :\n+        committed != null ? committed.members() : new HashSet<>();\n+  }\n \n-    @Override\n-    public int hashCode()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return Objects.hash( committed, appended, ordinal );\n+      return true;\n     }\n-\n-    @Override\n-    public String toString()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return \"RaftMembershipState{\" +\n-               \"committed=\" + committed +\n-               \", appended=\" + appended +\n-               \", ordinal=\" + ordinal +\n-               '}';\n+      return false;\n     }\n+    RaftMembershipState that = (RaftMembershipState) o;\n+    return ordinal == that.ordinal && Objects.equals(committed, that.committed) &&\n+        Objects.equals(appended, that.appended);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(committed, appended, ordinal);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"RaftMembershipState{\" +\n+        \"committed=\" + committed +\n+        \", appended=\" + appended +\n+        \", ordinal=\" + ordinal +\n+        '}';\n+  }\n+\n+  public RaftMembershipState newInstance()\n+  {\n+    return new RaftMembershipState(ordinal, committed, appended);\n+  }\n+\n+  public MembershipEntry committed()\n+  {\n+    return committed;\n+  }\n+\n+  public long getOrdinal()\n+  {\n+    return ordinal;\n+  }\n+\n+  public static class Marshal extends SafeStateMarshal<RaftMembershipState>\n+  {\n+    MembershipEntry.Marshal entryMarshal = new MembershipEntry.Marshal();\n \n-    public RaftMembershipState newInstance()\n+    @Override\n+    public RaftMembershipState startState()\n     {\n-        return new RaftMembershipState( ordinal, committed, appended );\n+      return new RaftMembershipState();\n     }\n \n-    public MembershipEntry committed()\n+    @Override\n+    public long ordinal(RaftMembershipState state)\n     {\n-        return committed;\n+      return state.ordinal;\n     }\n \n-    public long getOrdinal()\n+    @Override\n+    public void marshal(RaftMembershipState state, WritableChannel channel) throws IOException\n     {\n-        return ordinal;\n+      channel.putLong(state.ordinal);\n+      entryMarshal.marshal(state.committed, channel);\n+      entryMarshal.marshal(state.appended, channel);\n     }\n \n-    public static class Marshal extends SafeStateMarshal<RaftMembershipState>\n+    @Override\n+    public RaftMembershipState unmarshal0(ReadableChannel channel) throws IOException, EndOfStreamException\n     {\n-        MembershipEntry.Marshal entryMarshal = new MembershipEntry.Marshal();\n-\n-        @Override\n-        public RaftMembershipState startState()\n-        {\n-            return new RaftMembershipState();\n-        }\n-\n-        @Override\n-        public long ordinal( RaftMembershipState state )\n-        {\n-            return state.ordinal;\n-        }\n-\n-        @Override\n-        public void marshal( RaftMembershipState state, WritableChannel channel ) throws IOException\n-        {\n-            channel.putLong( state.ordinal );\n-            entryMarshal.marshal( state.committed, channel );\n-            entryMarshal.marshal( state.appended, channel );\n-        }\n-\n-        @Override\n-        public RaftMembershipState unmarshal0( ReadableChannel channel ) throws IOException, EndOfStreamException\n-        {\n-            long ordinal = channel.getLong();\n-            MembershipEntry committed = entryMarshal.unmarshal( channel );\n-            MembershipEntry appended = entryMarshal.unmarshal( channel );\n-            return new RaftMembershipState( ordinal, committed, appended );\n-        }\n+      long ordinal = channel.getLong();\n+      MembershipEntry committed = entryMarshal.unmarshal(channel);\n+      MembershipEntry appended = entryMarshal.unmarshal(channel);\n+      return new RaftMembershipState(ordinal, committed, appended);\n     }\n+  }\n }\n",
            "diff_size": 207
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "167",
                    "column": "87",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/506/RaftMembershipState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/506/RaftMembershipState.java\nindex 701188b1946..ee62fdd9ab5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/506/RaftMembershipState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/506/RaftMembershipState.java\n@@ -96,7 +96,7 @@ public class RaftMembershipState extends LifecycleAdapter\n             return false;\n         }\n \n-        if ( appended != null && (committed == null || appended.logIndex() > committed.logIndex()) )\n+        if ( appended != null && ( committed == null || appended.logIndex() > committed.logIndex()) )\n         {\n             /* This might seem counter-intuitive, but seeing two appended entries\n             in a row must mean that the previous one got committed. So it must\n@@ -147,9 +147,7 @@ public class RaftMembershipState extends LifecycleAdapter\n \n     Set<MemberId> getLatest()\n     {\n-\n-        return appended != null ? appended.members() :\n-               committed != null ? committed.members() : new HashSet<>();\n+    return appended != null ? appended.members() : committed != null ? committed.members() : new HashSet<>();\n     }\n \n     @Override\n@@ -159,13 +157,14 @@ public class RaftMembershipState extends LifecycleAdapter\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        RaftMembershipState that = (RaftMembershipState) o;\n-        return ordinal == that.ordinal && Objects.equals( committed, that.committed ) &&\n-                Objects.equals( appended, that.appended );\n+\n+RaftMembershipState that = (RaftMembershipState) o;\n+        return ordinal == that.ordinal && Objects.equals( committed, that.committed ) &&Objects.equals( appended, that.appended );\n     }\n \n     @Override\n@@ -177,11 +176,7 @@ public class RaftMembershipState extends LifecycleAdapter\n     @Override\n     public String toString()\n     {\n-        return \"RaftMembershipState{\" +\n-               \"committed=\" + committed +\n-               \", appended=\" + appended +\n-               \", ordinal=\" + ordinal +\n-               '}';\n+        return \"RaftMembershipState{\" + \"committed=\" + committed + \", appended=\" + appended + \", ordinal=\" + ordinal + '}';\n     }\n \n     public RaftMembershipState newInstance()\n@@ -232,4 +227,4 @@ public class RaftMembershipState extends LifecycleAdapter\n             return new RaftMembershipState( ordinal, committed, appended );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
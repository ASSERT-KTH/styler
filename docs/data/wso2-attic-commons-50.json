{
    "project_name": "wso2-attic-commons",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 145).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "@Entity\n@NamedQueries({\n    @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query = \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n    @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n})\npublic class LogRecord {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/50/LogRecord.java\nindex ef3b5d03d0a..1170ec8504c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/50/LogRecord.java\n@@ -53,8 +53,9 @@ import javax.persistence.*;\n //default access is property.\n @Entity\n @NamedQueries({\n-    @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query = \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n-    @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n+    @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query =\n+            \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n+     @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n })\n public class LogRecord {\n     \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/50/LogRecord.java\nindex ef3b5d03d0a..5c7c27e6bae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/50/LogRecord.java\n@@ -53,29 +53,30 @@ import javax.persistence.*;\n //default access is property.\n @Entity\n @NamedQueries({\n-    @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query = \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n-    @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n+  @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query = \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n+  @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n })\n public class LogRecord {\n-    \n-    @Id \n-    @GeneratedValue\n-    private int id;\n-    private String record;\n-    \n-    public LogRecord(String record) {\n-        setRecord(record);\n-    }\n-    \n-    public LogRecord() {\n-    }\n-    \n-    public String getRecord() {\n-        return record;\n-    }\n-    public void setRecord(String record) {\n-        this.record = record;\n-    }\n-    \n-    \n+\n+  @Id\n+  @GeneratedValue\n+  private int id;\n+  private String record;\n+\n+  public LogRecord(String record) {\n+    setRecord(record);\n+  }\n+\n+  public LogRecord() {\n+  }\n+\n+  public String getRecord() {\n+    return record;\n+  }\n+\n+  public void setRecord(String record) {\n+    this.record = record;\n+  }\n+\n+\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/50/LogRecord.java\nindex ef3b5d03d0a..9af2ed0dcda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/50/LogRecord.java\n@@ -38,7 +38,6 @@\n  * holder.\n  */\n \n-\n /*\n  * LogRecord.java\n  *\n@@ -58,8 +57,8 @@ import javax.persistence.*;\n })\n public class LogRecord {\n     \n-    @Id \n-    @GeneratedValue\n+    @Id\n+@GeneratedValue\n     private int id;\n     private String record;\n     \n@@ -78,4 +77,4 @@ public class LogRecord {\n     }\n     \n     \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/50/LogRecord.java\nindex ef3b5d03d0a..1170ec8504c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/50/LogRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/50/LogRecord.java\n@@ -53,8 +53,9 @@ import javax.persistence.*;\n //default access is property.\n @Entity\n @NamedQueries({\n-    @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query = \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n-    @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n+    @NamedQuery(name = \"LogRecord.countLoggedTimeouts\", query =\n+            \"select count(l) from LogRecord l where l.record NOT LIKE \\\"Canceling timer%\\\"\"),\n+     @NamedQuery(name = \"LogRecord.findAllRecords\", query = \"select l.record from LogRecord l\")\n })\n public class LogRecord {\n     \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
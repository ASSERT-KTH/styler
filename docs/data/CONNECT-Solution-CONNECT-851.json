{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "851",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.callback.purposeuse;\n\nimport gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\nimport gov.hhs.fha.nhinc.nhinclib.NhincConstants;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/851/PurposeUseProxyDefaultImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/851/PurposeUseProxyDefaultImpl.java\nindex e48598e25d4..c6de1a98b62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/851/PurposeUseProxyDefaultImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/851/PurposeUseProxyDefaultImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.callback.purposeuse;\n \n import gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\n@@ -37,61 +38,62 @@ import org.slf4j.LoggerFactory;\n \n \n /**\n- *\n  * @author rhalfert\n  */\n public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(PurposeUseProxyDefaultImpl.class);\n-    private static final String PURPOSE_FOR_USE_DEPRECATED_ENABLED = \"purposeForUseEnabled\";\n+  private static final Logger LOG = LoggerFactory.getLogger(PurposeUseProxyDefaultImpl.class);\n+  private static final String PURPOSE_FOR_USE_DEPRECATED_ENABLED = \"purposeForUseEnabled\";\n \n-    private final IPropertyAcessor propertyAccessor;\n+  private final IPropertyAcessor propertyAccessor;\n \n-    /**\n-     * Constructor allows injection of the property accessor.\n-     * @param propertyAccessor used to pull properties.\n-     */\n-    public PurposeUseProxyDefaultImpl(IPropertyAcessor propertyAccessor) {\n-        super();\n-        this.propertyAccessor = propertyAccessor;\n-    }\n+  /**\n+   * Constructor allows injection of the property accessor.\n+   *\n+   * @param propertyAccessor used to pull properties.\n+   */\n+  public PurposeUseProxyDefaultImpl(IPropertyAcessor propertyAccessor) {\n+    super();\n+    this.propertyAccessor = propertyAccessor;\n+  }\n \n-    /**\n-     * Default constructor.\n-     */\n-    public PurposeUseProxyDefaultImpl() {\n-        super();\n-        this.propertyAccessor = PropertyAccessor.getInstance();\n-    }\n+  /**\n+   * Default constructor.\n+   */\n+  public PurposeUseProxyDefaultImpl() {\n+    super();\n+    this.propertyAccessor = PropertyAccessor.getInstance();\n+  }\n \n \n-    /**\n-     * Returns boolean condition on whether PurposeForUse is enabled.\n-     * @return The PurposeForUse enabled setting\n-     */\n-    public boolean isPurposeForUseEnabled() {\n-        LOG.info(\"Entering PurposeUseProxyDefaultImpl.isPurposeForUseEnabled...\");\n-        boolean match = false;\n-        try {\n-            // Use CONNECT utility class to access gateway.properties\n-            String purposeForUseEnabled = propertyAccessor.getProperty(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                    PURPOSE_FOR_USE_DEPRECATED_ENABLED);\n-            if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n-                match = true;\n-            }\n-        } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve \" + PURPOSE_FOR_USE_DEPRECATED_ENABLED + \" from property file: \"\n-                    + NhincConstants.GATEWAY_PROPERTY_FILE);\n-            LOG.error(ex.getMessage());\n-        }\n-        return match;\n+  /**\n+   * Returns boolean condition on whether PurposeForUse is enabled.\n+   *\n+   * @return The PurposeForUse enabled setting\n+   */\n+  public boolean isPurposeForUseEnabled() {\n+    LOG.info(\"Entering PurposeUseProxyDefaultImpl.isPurposeForUseEnabled...\");\n+    boolean match = false;\n+    try {\n+      // Use CONNECT utility class to access gateway.properties\n+      String purposeForUseEnabled = propertyAccessor.getProperty(NhincConstants.GATEWAY_PROPERTY_FILE,\n+          PURPOSE_FOR_USE_DEPRECATED_ENABLED);\n+      if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n+        match = true;\n+      }\n+    } catch (PropertyAccessException ex) {\n+      LOG.error(\"Error: Failed to retrieve \" + PURPOSE_FOR_USE_DEPRECATED_ENABLED + \" from property file: \"\n+          + NhincConstants.GATEWAY_PROPERTY_FILE);\n+      LOG.error(ex.getMessage());\n     }\n+    return match;\n+  }\n \n-    /**\n-     * {@inheritDoc}\n-     */\n-    @Override\n-    public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n-        return isPurposeForUseEnabled();\n-    }\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n+    return isPurposeForUseEnabled();\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/851/PurposeUseProxyDefaultImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/851/PurposeUseProxyDefaultImpl.java\nindex e48598e25d4..1e8b421f1b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/851/PurposeUseProxyDefaultImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/851/PurposeUseProxyDefaultImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.callback.purposeuse;\n \n import gov.hhs.fha.nhinc.callback.openSAML.CallbackProperties;\n@@ -64,8 +65,7 @@ public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n         this.propertyAccessor = PropertyAccessor.getInstance();\n     }\n \n-\n-    /**\n+/**\n      * Returns boolean condition on whether PurposeForUse is enabled.\n      * @return The PurposeForUse enabled setting\n      */\n@@ -74,16 +74,15 @@ public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n         boolean match = false;\n         try {\n             // Use CONNECT utility class to access gateway.properties\n-            String purposeForUseEnabled = propertyAccessor.getProperty(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                    PURPOSE_FOR_USE_DEPRECATED_ENABLED);\n-            if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n+            String purposeForUseEnabled = propertyAccessor.getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, PURPOSE_FOR_USE_DEPRECATED_ENABLED);\n+if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n                 match = true;\n             }\n         } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve \" + PURPOSE_FOR_USE_DEPRECATED_ENABLED + \" from property file: \"\n-                    + NhincConstants.GATEWAY_PROPERTY_FILE);\n-            LOG.error(ex.getMessage());\n-        }\n+            LOG.error(\"Error: Failed to retrieve \" + PURPOSE_FOR_USE_DEPRECATED_ENABLED + \" from property file: \" + NhincConstants.GATEWAY_PROPERTY_FILE);\n+LOG.error(ex.getMessage());\n+\n+    }\n         return match;\n     }\n \n@@ -94,4 +93,4 @@ public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n     public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n         return isPurposeForUseEnabled();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/851/PurposeUseProxyDefaultImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/851/PurposeUseProxyDefaultImpl.java\nindex e48598e25d4..a7a3be16455 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/851/PurposeUseProxyDefaultImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/851/PurposeUseProxyDefaultImpl.java\n@@ -31,7 +31,6 @@ import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.properties.IPropertyAcessor;\n import gov.hhs.fha.nhinc.properties.PropertyAccessException;\n import gov.hhs.fha.nhinc.properties.PropertyAccessor;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -40,28 +39,32 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author rhalfert\n  */\n+\n+\n public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(PurposeUseProxyDefaultImpl.class);\n     private static final String PURPOSE_FOR_USE_DEPRECATED_ENABLED = \"purposeForUseEnabled\";\n-\n     private final IPropertyAcessor propertyAccessor;\n \n     /**\n      * Constructor allows injection of the property accessor.\n      * @param propertyAccessor used to pull properties.\n      */\n+\n     public PurposeUseProxyDefaultImpl(IPropertyAcessor propertyAccessor) {\n-        super();\n-        this.propertyAccessor = propertyAccessor;\n+                                                                         super();\n+                                                                         this.propertyAccessor = propertyAccessor;\n     }\n \n     /**\n      * Default constructor.\n      */\n+\n+\n     public PurposeUseProxyDefaultImpl() {\n-        super();\n-        this.propertyAccessor = PropertyAccessor.getInstance();\n+                                        super();\n+                                        this.propertyAccessor = PropertyAccessor.getInstance();\n     }\n \n \n@@ -69,19 +72,20 @@ public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n      * Returns boolean condition on whether PurposeForUse is enabled.\n      * @return The PurposeForUse enabled setting\n      */\n+\n+\n     public boolean isPurposeForUseEnabled() {\n         LOG.info(\"Entering PurposeUseProxyDefaultImpl.isPurposeForUseEnabled...\");\n+\n         boolean match = false;\n         try {\n             // Use CONNECT utility class to access gateway.properties\n-            String purposeForUseEnabled = propertyAccessor.getProperty(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                    PURPOSE_FOR_USE_DEPRECATED_ENABLED);\n+            String purposeForUseEnabled = propertyAccessor.getProperty(NhincConstants.GATEWAY_PROPERTY_FILE, PURPOSE_FOR_USE_DEPRECATED_ENABLED);\n             if (purposeForUseEnabled != null && purposeForUseEnabled.equalsIgnoreCase(\"true\")) {\n                 match = true;\n             }\n         } catch (PropertyAccessException ex) {\n-            LOG.error(\"Error: Failed to retrieve \" + PURPOSE_FOR_USE_DEPRECATED_ENABLED + \" from property file: \"\n-                    + NhincConstants.GATEWAY_PROPERTY_FILE);\n+            LOG.error(\"Error: Failed to retrieve \" + PURPOSE_FOR_USE_DEPRECATED_ENABLED + \" from property file: \" + NhincConstants.GATEWAY_PROPERTY_FILE);\n             LOG.error(ex.getMessage());\n         }\n         return match;\n@@ -90,8 +94,11 @@ public class PurposeUseProxyDefaultImpl implements PurposeUseProxy {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public boolean isPurposeForUseEnabled(CallbackProperties callbackProperties) {\n         return isPurposeForUseEnabled();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
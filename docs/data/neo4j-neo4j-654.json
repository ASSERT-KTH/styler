{
    "project_name": "neo4j-neo4j",
    "error_id": "654",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/654/HeapTrackingLongArrayList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/654/HeapTrackingLongArrayList.java\nindex f1d0359f251..b1b3ecd647a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/654/HeapTrackingLongArrayList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/654/HeapTrackingLongArrayList.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.trackable;\n \n import java.util.Arrays;\n@@ -34,7 +35,7 @@ import static org.neo4j.util.Preconditions.requireNonNegative;\n \n public class HeapTrackingLongArrayList implements Resource\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( HeapTrackingLongArrayList.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(HeapTrackingLongArrayList.class);\n \n     private final MemoryTracker memoryTracker;\n \n@@ -45,68 +46,68 @@ public class HeapTrackingLongArrayList implements Resource\n     /**\n      * @return a new heap tracking long array list with initial size 1\n      */\n-    public static HeapTrackingLongArrayList newLongArrayList( MemoryTracker memoryTracker )\n+    public static HeapTrackingLongArrayList newLongArrayList(MemoryTracker memoryTracker)\n     {\n-        return newLongArrayList( 1, memoryTracker );\n+        return newLongArrayList(1, memoryTracker);\n     }\n \n     /**\n      * @return a new heap tracking long array list with the specified initial size\n      */\n-    public static HeapTrackingLongArrayList newLongArrayList( int initialSize, MemoryTracker memoryTracker )\n+    public static HeapTrackingLongArrayList newLongArrayList(int initialSize, MemoryTracker memoryTracker)\n     {\n-        requireNonNegative( initialSize );\n-        long trackedSize = sizeOfLongArray( initialSize );\n-        memoryTracker.allocateHeap( SHALLOW_SIZE + trackedSize );\n-        return new HeapTrackingLongArrayList( initialSize, memoryTracker, trackedSize );\n+        requireNonNegative(initialSize);\n+        long trackedSize = sizeOfLongArray(initialSize);\n+        memoryTracker.allocateHeap(SHALLOW_SIZE + trackedSize);\n+        return new HeapTrackingLongArrayList(initialSize, memoryTracker, trackedSize);\n     }\n \n-    private HeapTrackingLongArrayList( int initialSize, MemoryTracker memoryTracker, long trackedSize )\n+    private HeapTrackingLongArrayList(int initialSize, MemoryTracker memoryTracker, long trackedSize)\n     {\n         this.trackedSize = trackedSize;\n         this.elementData = new long[initialSize];\n         this.memoryTracker = memoryTracker;\n     }\n \n-    public boolean add( long item )\n+    public boolean add(long item)\n     {\n-        add( item, elementData, size );\n+        add(item, elementData, size);\n         return true;\n     }\n \n-    public void add( int index, long element )\n+    public void add(int index, long element)\n     {\n-        rangeCheckForAdd( index );\n+        rangeCheckForAdd(index);\n         final int s = size;\n         long[] elementData = this.elementData;\n-        if ( s == elementData.length )\n+        if (s == elementData.length)\n         {\n-            elementData = grow( size + 1 );\n+            elementData = grow(size + 1);\n         }\n-        System.arraycopy( elementData, index, elementData, index + 1, s - index );\n+        System.arraycopy(elementData, index, elementData, index + 1, s - index);\n         elementData[index] = element;\n         size = s + 1;\n     }\n \n-    public long get( int index )\n+    public long get(int index)\n     {\n-        Objects.checkIndex( index, size );\n+        Objects.checkIndex(index, size);\n         return elementData[index];\n     }\n \n-    public long set( int index, long element )\n+    public long set(int index, long element)\n     {\n-        Objects.checkIndex( index, size );\n+        Objects.checkIndex(index, size);\n         long oldValue = elementData[index];\n         elementData[index] = element;\n         return oldValue;\n     }\n \n-    private void add( long e, long[] elementData, int s )\n+    private void add(long e, long[] elementData, int s)\n     {\n-        if ( s == elementData.length )\n+        if (s == elementData.length)\n         {\n-            elementData = grow( size + 1 );\n+            elementData = grow(size + 1);\n         }\n         elementData[s] = e;\n         size = s + 1;\n@@ -129,23 +130,23 @@ public class HeapTrackingLongArrayList implements Resource\n \n     public void clear()\n     {\n-        Arrays.fill( this.elementData, 0, size, 0L);\n+        Arrays.fill(this.elementData, 0, size, 0L);\n         this.size = 0;\n     }\n \n     @Override\n     public void close()\n     {\n-        if ( elementData != null )\n+        if (elementData != null)\n         {\n-            memoryTracker.releaseHeap( trackedSize + SHALLOW_SIZE );\n+            memoryTracker.releaseHeap(trackedSize + SHALLOW_SIZE);\n             elementData = null;\n         }\n     }\n \n     public PrimitiveLongResourceIterator iterator()\n     {\n-        return new PrimitiveLongResourceCollections.AbstractPrimitiveLongBaseResourceIterator( this )\n+        return new PrimitiveLongResourceCollections.AbstractPrimitiveLongBaseResourceIterator(this)\n         {\n             private int index = -1;\n \n@@ -153,7 +154,7 @@ public class HeapTrackingLongArrayList implements Resource\n             protected boolean fetchNext()\n             {\n                 index++;\n-                return index < size && next( elementData[index] );\n+                return index < size && next(elementData[index]);\n             }\n         };\n     }\n@@ -166,44 +167,45 @@ public class HeapTrackingLongArrayList implements Resource\n         return previous;\n     }\n \n-    public boolean addAll( long... longs )\n+    public boolean addAll(long... longs)\n     {\n         int numNew = longs.length;\n-        if ( numNew == 0 )\n+        if (numNew == 0)\n         {\n             return false;\n         }\n         final int s = size;\n         long[] elementData = this.elementData;\n-        if ( numNew > elementData.length - s )\n+        if (numNew > elementData.length - s)\n         {\n-            elementData = grow( s + numNew );\n+            elementData = grow(s + numNew);\n         }\n-        System.arraycopy( longs, 0, elementData, s, numNew );\n+        System.arraycopy(longs, 0, elementData, s, numNew);\n         size = s + numNew;\n         return true;\n     }\n+\n     /**\n      * Grow and report size change to tracker\n      */\n-    private long[] grow( int minimumCapacity )\n+    private long[] grow(int minimumCapacity)\n     {\n-        int newCapacity = newCapacity( minimumCapacity, elementData.length );\n+        int newCapacity = newCapacity(minimumCapacity, elementData.length);\n         long oldHeapUsage = trackedSize;\n-        trackedSize = sizeOfLongArray( newCapacity );\n-        memoryTracker.allocateHeap( trackedSize );\n+        trackedSize = sizeOfLongArray(newCapacity);\n+        memoryTracker.allocateHeap(trackedSize);\n         long[] newItems = new long[newCapacity];\n-        System.arraycopy( elementData, 0, newItems, 0, Math.min( size, newCapacity ) );\n+        System.arraycopy(elementData, 0, newItems, 0, Math.min(size, newCapacity));\n         elementData = newItems;\n-        memoryTracker.releaseHeap( oldHeapUsage );\n+        memoryTracker.releaseHeap(oldHeapUsage);\n         return elementData;\n     }\n \n-    private void rangeCheckForAdd( int index )\n+    private void rangeCheckForAdd(int index)\n     {\n-        if ( index > size || index < 0 )\n+        if (index > size || index < 0)\n         {\n-            throw new IndexOutOfBoundsException( \"Index: \" + index + \", Size: \" + size );\n+            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + size);\n         }\n     }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "intuit-Tank",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "67",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 159).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     */\n    public static VMRegion getRegionFromZone(String zone) {\n        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n    }\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/100/VMRegion.java\nindex 007b3fd5c6b..e18df268c41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/100/VMRegion.java\n@@ -64,10 +64,7 @@ public enum VMRegion {\n      * @return\n      */\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n-    }\n-\n-    /**\n+        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);}/**\n      * the human description of the region\n      * \n      * @return\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/100/VMRegion.java\nindex 007b3fd5c6b..670a02bff2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/100/VMRegion.java\n@@ -17,85 +17,82 @@ import java.util.Arrays;\n \n /**\n  * represents a geographic data center that the vm will run in.\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public enum VMRegion {\n-    STANDALONE(\"standalone-agent\", \"Standalone\", \"Standalone Agent\", \"\"),\n-    US_EAST(\"us-east-1\", \"Virginia\", \"US East (Northern Virginia)\", \"ec2.us-east-1.amazonaws.com\"),\n-    US_EAST_2(\"us-east-2\", \"Ohio\", \"US East (Ohio)\", \"ec2.us-east-2.amazonaws.com\"),\n-    US_WEST_1(\"us-west-1\", \"Northern California\", \"US West (Northern California)\", \"ec2.us-west-1.amazonaws.com\"),\n-    US_WEST_2(\"us-west-2\", \"Oregon\", \"US West (Oregon)\", \"ec2.us-west-2.amazonaws.com\"),\n-    EUROPE(\"eu-west-1\", \"Ireland\", \"EU (Ireland)\", \"ec2.eu-west-1.amazonaws.com\"),\n-    ASIA_1(\"ap-southeast-1\", \"Singapore\", \"Asia Pacific (Singapore)\", \"ec2.ap-southeast-1.amazonaws.com\"),\n-    ASIA_2(\"ap-southeast-2\", \"Sydney\", \"Asia Pacific (Sydney)\", \"ec2.ap-southeast-2.amazonaws.com\"),\n-    ASIA_3(\"ap-northeast-1\", \"Tokyo\", \"Asia Pacific (Tokyo)\", \"ec2.ap-northeast-1.amazonaws.com\"),\n-    SOUTH_AMERICA(\"sa-east-1\", \"Sao Paulo\", \"South America (Sao Paulo)\", \"ec2.sa-east-1.amazonaws.com\");\n+  STANDALONE(\"standalone-agent\", \"Standalone\", \"Standalone Agent\", \"\"),\n+  US_EAST(\"us-east-1\", \"Virginia\", \"US East (Northern Virginia)\", \"ec2.us-east-1.amazonaws.com\"),\n+  US_EAST_2(\"us-east-2\", \"Ohio\", \"US East (Ohio)\", \"ec2.us-east-2.amazonaws.com\"),\n+  US_WEST_1(\"us-west-1\", \"Northern California\", \"US West (Northern California)\", \"ec2.us-west-1.amazonaws.com\"),\n+  US_WEST_2(\"us-west-2\", \"Oregon\", \"US West (Oregon)\", \"ec2.us-west-2.amazonaws.com\"),\n+  EUROPE(\"eu-west-1\", \"Ireland\", \"EU (Ireland)\", \"ec2.eu-west-1.amazonaws.com\"),\n+  ASIA_1(\"ap-southeast-1\", \"Singapore\", \"Asia Pacific (Singapore)\", \"ec2.ap-southeast-1.amazonaws.com\"),\n+  ASIA_2(\"ap-southeast-2\", \"Sydney\", \"Asia Pacific (Sydney)\", \"ec2.ap-southeast-2.amazonaws.com\"),\n+  ASIA_3(\"ap-northeast-1\", \"Tokyo\", \"Asia Pacific (Tokyo)\", \"ec2.ap-northeast-1.amazonaws.com\"),\n+  SOUTH_AMERICA(\"sa-east-1\", \"Sao Paulo\", \"South America (Sao Paulo)\", \"ec2.sa-east-1.amazonaws.com\");\n \n-    private String description;\n-    private String name;\n-    private String endpoint;\n-    private String region;\n+  private String description;\n+  private String name;\n+  private String endpoint;\n+  private String region;\n \n-    /**\n-     * \n-     * @param region\n-     * @param desc\n-     * @param endpoint\n-     */\n-    private VMRegion(String region, String name, String desc, String endpoint) {\n-        this.description = desc;\n-        this.name = name;\n-        this.endpoint = endpoint;\n-        this.region = region;\n-    }\n+  /**\n+   * @param region\n+   * @param desc\n+   * @param endpoint\n+   */\n+  private VMRegion(String region, String name, String desc, String endpoint) {\n+    this.description = desc;\n+    this.name = name;\n+    this.endpoint = endpoint;\n+    this.region = region;\n+  }\n \n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n+  /**\n+   * @return the name\n+   */\n+  public String getName() {\n+    return name;\n+  }\n \n-    /**\n-     * \n-     * @param zone\n-     * @return\n-     */\n-    public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n-    }\n+  /**\n+   * @param zone\n+   * @return\n+   */\n+  public static VMRegion getRegionFromZone(String zone) {\n+    return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase()))\n+      .findFirst().orElse(VMRegion.STANDALONE);\n+  }\n \n-    /**\n-     * the human description of the region\n-     * \n-     * @return\n-     */\n-    public String getDescription() {\n-        return description;\n-    }\n+  /**\n+   * the human description of the region\n+   *\n+   * @return\n+   */\n+  public String getDescription() {\n+    return description;\n+  }\n \n-    /**\n-     * \n-     * @inheritDoc\n-     */\n-    public String toString() {\n-        return description;\n-    }\n+  /**\n+   * @inheritDoc\n+   */\n+  public String toString() {\n+    return description;\n+  }\n \n-    /**\n-     * @return the endpoint\n-     */\n-    public String getEndpoint() {\n-        return endpoint;\n-    }\n+  /**\n+   * @return the endpoint\n+   */\n+  public String getEndpoint() {\n+    return endpoint;\n+  }\n \n-    /**\n-     * @return the region\n-     */\n-    public String getRegion() {\n-        return region;\n-    }\n+  /**\n+   * @return the region\n+   */\n+  public String getRegion() {\n+    return region;\n+  }\n \n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/100/VMRegion.java\nindex 007b3fd5c6b..30a65447fa0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/100/VMRegion.java\n@@ -98,4 +98,4 @@ public enum VMRegion {\n         return region;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/100/VMRegion.java\nindex 007b3fd5c6b..4d22bca78cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/100/VMRegion.java\n@@ -13,6 +13,8 @@ package com.intuit.tank.vm.api.enumerated;\n  * #L%\n  */\n \n+\n+\n import java.util.Arrays;\n \n /**\n@@ -21,8 +23,14 @@ import java.util.Arrays;\n  * @author dangleton\n  * \n  */\n+\n+\n public enum VMRegion {\n-    STANDALONE(\"standalone-agent\", \"Standalone\", \"Standalone Agent\", \"\"),\n+\n+    STANDALONE(\"standalone-agent\",\n+\"Standalone\",\n+\"Standalone Agent\",\n+\"\"),\n     US_EAST(\"us-east-1\", \"Virginia\", \"US East (Northern Virginia)\", \"ec2.us-east-1.amazonaws.com\"),\n     US_EAST_2(\"us-east-2\", \"Ohio\", \"US East (Ohio)\", \"ec2.us-east-2.amazonaws.com\"),\n     US_WEST_1(\"us-west-1\", \"Northern California\", \"US West (Northern California)\", \"ec2.us-west-1.amazonaws.com\"),\n@@ -44,6 +52,7 @@ public enum VMRegion {\n      * @param desc\n      * @param endpoint\n      */\n+\n     private VMRegion(String region, String name, String desc, String endpoint) {\n         this.description = desc;\n         this.name = name;\n@@ -54,6 +63,8 @@ public enum VMRegion {\n     /**\n      * @return the name\n      */\n+\n+\n     public String getName() {\n         return name;\n     }\n@@ -63,8 +74,10 @@ public enum VMRegion {\n      * @param zone\n      * @return\n      */\n+\n+\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n+        return Arrays.stream(VMRegion.values()).filter(vmr-> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n     }\n \n     /**\n@@ -72,6 +85,8 @@ public enum VMRegion {\n      * \n      * @return\n      */\n+\n+\n     public String getDescription() {\n         return description;\n     }\n@@ -80,6 +95,8 @@ public enum VMRegion {\n      * \n      * @inheritDoc\n      */\n+\n+\n     public String toString() {\n         return description;\n     }\n@@ -87,6 +104,8 @@ public enum VMRegion {\n     /**\n      * @return the endpoint\n      */\n+\n+\n     public String getEndpoint() {\n         return endpoint;\n     }\n@@ -94,8 +113,10 @@ public enum VMRegion {\n     /**\n      * @return the region\n      */\n+\n+\n     public String getRegion() {\n         return region;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/100/VMRegion.java\nindex 007b3fd5c6b..e18df268c41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/100/VMRegion.java\n@@ -64,10 +64,7 @@ public enum VMRegion {\n      * @return\n      */\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n-    }\n-\n-    /**\n+        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);}/**\n      * the human description of the region\n      * \n      * @return\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "68",
                    "column": "28",
                    "severity": "warning",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/100/VMRegion.java\nindex 007b3fd5c6b..193975fb40a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/100/VMRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/100/VMRegion.java\n@@ -64,10 +64,14 @@ public enum VMRegion {\n      * @return\n      */\n     public static VMRegion getRegionFromZone(String zone) {\n-        return Arrays.stream(VMRegion.values()).filter(vmr -> zone.toLowerCase().startsWith(vmr.region.toLowerCase())).findFirst().orElse(VMRegion.STANDALONE);\n-    }\n+        return Arrays .stream(VMRegion.values()).filter(vmr->\n+        zone.toLowerCase() . startsWith(vmr.region.toLowerCase(\n+    )\n \n-    /**\n+        )).findFirst().orElse(VMRegion.STANDALONE);\n+     }\n+\n+     /**\n      * the human description of the region\n      * \n      * @return\n",
            "diff_size": 7
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
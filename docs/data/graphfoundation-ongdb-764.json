{
    "project_name": "graphfoundation-ongdb",
    "error_id": "764",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/764/SchemaRuleDeserializer2_0to3_1.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/764/SchemaRuleDeserializer2_0to3_1.java\nindex bca6984b8c8..2e665005c33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/764/SchemaRuleDeserializer2_0to3_1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/764/SchemaRuleDeserializer2_0to3_1.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.nio.ByteBuffer;\n@@ -37,138 +38,137 @@ import static org.neo4j.string.UTF8.getDecodedStringFrom;\n  */\n public class SchemaRuleDeserializer2_0to3_1\n {\n-    private static final Long NO_OWNED_INDEX_RULE = null;\n-    private static final long NO_OWNING_CONSTRAINT = -1;\n-\n-    private SchemaRuleDeserializer2_0to3_1()\n-    {\n-    }\n-\n-    static boolean isLegacySchemaRule( byte schemaRuleType )\n-    {\n-        return schemaRuleType >= 1 && schemaRuleType <= SchemaRule.Kind.values().length;\n-    }\n-\n-    static SchemaRule deserialize( long id, int labelId, byte kindByte, ByteBuffer buffer ) throws\n-            MalformedSchemaRuleException\n-    {\n-        Kind kind = Kind.forId( kindByte );\n-        try\n-        {\n-            SchemaRule rule = newRule( kind, id, labelId, buffer );\n-            if ( null == rule )\n-            {\n-                throw new MalformedSchemaRuleException( null,\n-                        \"Deserialized null schema rule for id %d with kind %s\", id, kind.name() );\n-            }\n-            return rule;\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new MalformedSchemaRuleException( e,\n-                    \"Could not deserialize schema rule for id %d with kind %s\", id, kind.name() );\n-        }\n-    }\n-\n-    private static SchemaRule newRule( Kind kind, long id, int labelId, ByteBuffer buffer )\n-    {\n-        switch ( kind )\n-        {\n-        case INDEX_RULE:\n-            return readIndexRule( id, false, labelId, buffer );\n-        case CONSTRAINT_INDEX_RULE:\n-            return readIndexRule( id, true, labelId, buffer );\n-        case UNIQUENESS_CONSTRAINT:\n-            return readUniquenessConstraintRule( id, labelId, buffer );\n-        case NODE_PROPERTY_EXISTENCE_CONSTRAINT:\n-            return readNodePropertyExistenceConstraintRule( id, labelId, buffer );\n-        case RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT:\n-            return readRelPropertyExistenceConstraintRule( id, labelId, buffer );\n-        default:\n-            throw new IllegalArgumentException( kind.name() );\n-        }\n-    }\n-\n-    // === INDEX RULES ===\n-\n-    private static IndexRule readIndexRule( long id, boolean constraintIndex, int label, ByteBuffer serialized )\n-    {\n-        IndexProvider.Descriptor providerDescriptor = readIndexProviderDescriptor( serialized );\n-        int[] propertyKeyIds = readIndexPropertyKeys( serialized );\n-        SchemaIndexDescriptor descriptor = constraintIndex ?\n-                                           SchemaIndexDescriptorFactory.uniqueForLabel( label, propertyKeyIds ) :\n-                                           SchemaIndexDescriptorFactory.forLabel( label, propertyKeyIds );\n-        long owningConstraint = constraintIndex ? readOwningConstraint( serialized ) : NO_OWNING_CONSTRAINT;\n-        return new IndexRule( id, providerDescriptor, descriptor, owningConstraint );\n-    }\n-\n-    private static IndexProvider.Descriptor readIndexProviderDescriptor( ByteBuffer serialized )\n+  private static final Long NO_OWNED_INDEX_RULE = null;\n+  private static final long NO_OWNING_CONSTRAINT = -1;\n+\n+  private SchemaRuleDeserializer2_0to3_1()\n+  {\n+  }\n+\n+  static boolean isLegacySchemaRule(byte schemaRuleType)\n+  {\n+    return schemaRuleType >= 1 && schemaRuleType <= SchemaRule.Kind.values().length;\n+  }\n+\n+  static SchemaRule deserialize(long id, int labelId, byte kindByte, ByteBuffer buffer) throws\n+      MalformedSchemaRuleException\n+  {\n+    Kind kind = Kind.forId(kindByte);\n+    try\n     {\n-        String providerKey = getDecodedStringFrom( serialized );\n-        String providerVersion = getDecodedStringFrom( serialized );\n-        return new IndexProvider.Descriptor( providerKey, providerVersion );\n-    }\n-\n-    private static int[] readIndexPropertyKeys( ByteBuffer serialized )\n+      SchemaRule rule = newRule(kind, id, labelId, buffer);\n+      if (null == rule)\n+      {\n+        throw new MalformedSchemaRuleException(null,\n+            \"Deserialized null schema rule for id %d with kind %s\", id, kind.name());\n+      }\n+      return rule;\n+    } catch (Exception e)\n     {\n-        // Currently only one key is supported although the data format supports multiple\n-        int count = serialized.getShort();\n-        assert count >= 1;\n-\n-        // Changed from being a long to an int 2013-09-10, but keeps reading a long to not change the store format.\n-        int[] props = new int[count];\n-        for ( int i = 0; i < count; i++ )\n-        {\n-            props[i] = safeCastLongToInt( serialized.getLong() );\n-        }\n-        return props;\n+      throw new MalformedSchemaRuleException(e,\n+          \"Could not deserialize schema rule for id %d with kind %s\", id, kind.name());\n     }\n+  }\n \n-    private static long readOwningConstraint( ByteBuffer serialized )\n+  private static SchemaRule newRule(Kind kind, long id, int labelId, ByteBuffer buffer)\n+  {\n+    switch (kind)\n     {\n-        return serialized.getLong();\n+      case INDEX_RULE:\n+        return readIndexRule(id, false, labelId, buffer);\n+      case CONSTRAINT_INDEX_RULE:\n+        return readIndexRule(id, true, labelId, buffer);\n+      case UNIQUENESS_CONSTRAINT:\n+        return readUniquenessConstraintRule(id, labelId, buffer);\n+      case NODE_PROPERTY_EXISTENCE_CONSTRAINT:\n+        return readNodePropertyExistenceConstraintRule(id, labelId, buffer);\n+      case RELATIONSHIP_PROPERTY_EXISTENCE_CONSTRAINT:\n+        return readRelPropertyExistenceConstraintRule(id, labelId, buffer);\n+      default:\n+        throw new IllegalArgumentException(kind.name());\n     }\n-\n-    // === CONSTRAINT RULES ===\n-\n-    public static ConstraintRule readUniquenessConstraintRule( long id, int labelId, ByteBuffer buffer )\n+  }\n+\n+  // === INDEX RULES ===\n+\n+  private static IndexRule readIndexRule(long id, boolean constraintIndex, int label, ByteBuffer serialized)\n+  {\n+    IndexProvider.Descriptor providerDescriptor = readIndexProviderDescriptor(serialized);\n+    int[] propertyKeyIds = readIndexPropertyKeys(serialized);\n+    SchemaIndexDescriptor descriptor = constraintIndex ?\n+        SchemaIndexDescriptorFactory.uniqueForLabel(label, propertyKeyIds) :\n+        SchemaIndexDescriptorFactory.forLabel(label, propertyKeyIds);\n+    long owningConstraint = constraintIndex ? readOwningConstraint(serialized) : NO_OWNING_CONSTRAINT;\n+    return new IndexRule(id, providerDescriptor, descriptor, owningConstraint);\n+  }\n+\n+  private static IndexProvider.Descriptor readIndexProviderDescriptor(ByteBuffer serialized)\n+  {\n+    String providerKey = getDecodedStringFrom(serialized);\n+    String providerVersion = getDecodedStringFrom(serialized);\n+    return new IndexProvider.Descriptor(providerKey, providerVersion);\n+  }\n+\n+  private static int[] readIndexPropertyKeys(ByteBuffer serialized)\n+  {\n+    // Currently only one key is supported although the data format supports multiple\n+    int count = serialized.getShort();\n+    assert count >= 1;\n+\n+    // Changed from being a long to an int 2013-09-10, but keeps reading a long to not change the store format.\n+    int[] props = new int[count];\n+    for (int i = 0; i < count; i++)\n     {\n-        return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.uniqueForLabel( labelId, readConstraintPropertyKeys( buffer ) ),\n-                readOwnedIndexRule( buffer ) );\n+      props[i] = safeCastLongToInt(serialized.getLong());\n     }\n-\n-    public static ConstraintRule readNodePropertyExistenceConstraintRule( long id, int labelId, ByteBuffer buffer )\n-    {\n-        return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.existsForLabel( labelId, readPropertyKey( buffer ) ),\n-                NO_OWNED_INDEX_RULE );\n-    }\n-\n-    public static ConstraintRule readRelPropertyExistenceConstraintRule( long id, int relTypeId, ByteBuffer buffer )\n+    return props;\n+  }\n+\n+  private static long readOwningConstraint(ByteBuffer serialized)\n+  {\n+    return serialized.getLong();\n+  }\n+\n+  // === CONSTRAINT RULES ===\n+\n+  public static ConstraintRule readUniquenessConstraintRule(long id, int labelId, ByteBuffer buffer)\n+  {\n+    return new ConstraintRule(id,\n+        ConstraintDescriptorFactory.uniqueForLabel(labelId, readConstraintPropertyKeys(buffer)),\n+        readOwnedIndexRule(buffer));\n+  }\n+\n+  public static ConstraintRule readNodePropertyExistenceConstraintRule(long id, int labelId, ByteBuffer buffer)\n+  {\n+    return new ConstraintRule(id,\n+        ConstraintDescriptorFactory.existsForLabel(labelId, readPropertyKey(buffer)),\n+        NO_OWNED_INDEX_RULE);\n+  }\n+\n+  public static ConstraintRule readRelPropertyExistenceConstraintRule(long id, int relTypeId, ByteBuffer buffer)\n+  {\n+    return new ConstraintRule(id,\n+        ConstraintDescriptorFactory.existsForRelType(relTypeId, readPropertyKey(buffer)),\n+        NO_OWNED_INDEX_RULE);\n+  }\n+\n+  private static int readPropertyKey(ByteBuffer buffer)\n+  {\n+    return buffer.getInt();\n+  }\n+\n+  private static int[] readConstraintPropertyKeys(ByteBuffer buffer)\n+  {\n+    int[] keys = new int[buffer.get()];\n+    for (int i = 0; i < keys.length; i++)\n     {\n-        return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.existsForRelType( relTypeId, readPropertyKey( buffer ) ),\n-                NO_OWNED_INDEX_RULE );\n+      keys[i] = safeCastLongToInt(buffer.getLong());\n     }\n+    return keys;\n+  }\n \n-    private static int readPropertyKey( ByteBuffer buffer )\n-    {\n-        return buffer.getInt();\n-    }\n-\n-    private static int[] readConstraintPropertyKeys( ByteBuffer buffer )\n-    {\n-        int[] keys = new int[buffer.get()];\n-        for ( int i = 0; i < keys.length; i++ )\n-        {\n-            keys[i] = safeCastLongToInt( buffer.getLong() );\n-        }\n-        return keys;\n-    }\n-\n-    private static Long readOwnedIndexRule( ByteBuffer buffer )\n-    {\n-        return buffer.getLong();\n-    }\n+  private static Long readOwnedIndexRule(ByteBuffer buffer)\n+  {\n+    return buffer.getLong();\n+  }\n }\n",
            "diff_size": 200
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/764/SchemaRuleDeserializer2_0to3_1.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/764/SchemaRuleDeserializer2_0to3_1.java\nindex bca6984b8c8..3a6bc59e966 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/764/SchemaRuleDeserializer2_0to3_1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/764/SchemaRuleDeserializer2_0to3_1.java\n@@ -49,25 +49,23 @@ public class SchemaRuleDeserializer2_0to3_1\n         return schemaRuleType >= 1 && schemaRuleType <= SchemaRule.Kind.values().length;\n     }\n \n-    static SchemaRule deserialize( long id, int labelId, byte kindByte, ByteBuffer buffer ) throws\n-            MalformedSchemaRuleException\n-    {\n+    static SchemaRule deserialize( long id, int labelId, byte kindByte, ByteBuffer buffer ) throws MalformedSchemaRuleException\n+{\n         Kind kind = Kind.forId( kindByte );\n         try\n         {\n             SchemaRule rule = newRule( kind, id, labelId, buffer );\n             if ( null == rule )\n             {\n-                throw new MalformedSchemaRuleException( null,\n-                        \"Deserialized null schema rule for id %d with kind %s\", id, kind.name() );\n+                throw new MalformedSchemaRuleException( null, \"Deserialized null schema rule for id %d with kind %s\", id, kind.name() );\n             }\n-            return rule;\n+\n+return rule;\n         }\n         catch ( Exception e )\n         {\n-            throw new MalformedSchemaRuleException( e,\n-                    \"Could not deserialize schema rule for id %d with kind %s\", id, kind.name() );\n-        }\n+            throw new MalformedSchemaRuleException( e, \"Could not deserialize schema rule for id %d with kind %s\", id, kind.name() );\n+    }\n     }\n \n     private static SchemaRule newRule( Kind kind, long id, int labelId, ByteBuffer buffer )\n@@ -95,10 +93,8 @@ public class SchemaRuleDeserializer2_0to3_1\n     {\n         IndexProvider.Descriptor providerDescriptor = readIndexProviderDescriptor( serialized );\n         int[] propertyKeyIds = readIndexPropertyKeys( serialized );\n-        SchemaIndexDescriptor descriptor = constraintIndex ?\n-                                           SchemaIndexDescriptorFactory.uniqueForLabel( label, propertyKeyIds ) :\n-                                           SchemaIndexDescriptorFactory.forLabel( label, propertyKeyIds );\n-        long owningConstraint = constraintIndex ? readOwningConstraint( serialized ) : NO_OWNING_CONSTRAINT;\n+        SchemaIndexDescriptor descriptor = constraintIndex ? SchemaIndexDescriptorFactory.uniqueForLabel( label, propertyKeyIds ) : SchemaIndexDescriptorFactory.forLabel( label, propertyKeyIds );\n+    long owningConstraint = constraintIndex ? readOwningConstraint( serialized ) : NO_OWNING_CONSTRAINT;\n         return new IndexRule( id, providerDescriptor, descriptor, owningConstraint );\n     }\n \n@@ -121,7 +117,8 @@ public class SchemaRuleDeserializer2_0to3_1\n         {\n             props[i] = safeCastLongToInt( serialized.getLong() );\n         }\n-        return props;\n+\n+return props;\n     }\n \n     private static long readOwningConstraint( ByteBuffer serialized )\n@@ -134,22 +131,19 @@ public class SchemaRuleDeserializer2_0to3_1\n     public static ConstraintRule readUniquenessConstraintRule( long id, int labelId, ByteBuffer buffer )\n     {\n         return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.uniqueForLabel( labelId, readConstraintPropertyKeys( buffer ) ),\n-                readOwnedIndexRule( buffer ) );\n+                ConstraintDescriptorFactory.uniqueForLabel( labelId, readConstraintPropertyKeys( buffer ) ), readOwnedIndexRule( buffer ) );\n     }\n \n     public static ConstraintRule readNodePropertyExistenceConstraintRule( long id, int labelId, ByteBuffer buffer )\n     {\n         return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.existsForLabel( labelId, readPropertyKey( buffer ) ),\n-                NO_OWNED_INDEX_RULE );\n+                ConstraintDescriptorFactory.existsForLabel( labelId, readPropertyKey( buffer ) ), NO_OWNED_INDEX_RULE );\n     }\n \n     public static ConstraintRule readRelPropertyExistenceConstraintRule( long id, int relTypeId, ByteBuffer buffer )\n     {\n         return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.existsForRelType( relTypeId, readPropertyKey( buffer ) ),\n-                NO_OWNED_INDEX_RULE );\n+                ConstraintDescriptorFactory.existsForRelType( relTypeId, readPropertyKey( buffer ) ), NO_OWNED_INDEX_RULE );\n     }\n \n     private static int readPropertyKey( ByteBuffer buffer )\n@@ -164,11 +158,12 @@ public class SchemaRuleDeserializer2_0to3_1\n         {\n             keys[i] = safeCastLongToInt( buffer.getLong() );\n         }\n-        return keys;\n+\n+return keys;\n     }\n \n     private static Long readOwnedIndexRule( ByteBuffer buffer )\n     {\n         return buffer.getLong();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/764/SchemaRuleDeserializer2_0to3_1.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/764/SchemaRuleDeserializer2_0to3_1.java\nindex bca6984b8c8..6dfb2967562 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/764/SchemaRuleDeserializer2_0to3_1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/764/SchemaRuleDeserializer2_0to3_1.java\n@@ -20,7 +20,6 @@\n package org.neo4j.kernel.impl.store.record;\n \n import java.nio.ByteBuffer;\n-\n import org.neo4j.kernel.api.exceptions.schema.MalformedSchemaRuleException;\n import org.neo4j.kernel.api.index.IndexProvider;\n import org.neo4j.kernel.api.schema.constaints.ConstraintDescriptorFactory;\n@@ -28,17 +27,18 @@ import org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor;\n import org.neo4j.kernel.api.schema.index.SchemaIndexDescriptorFactory;\n import org.neo4j.storageengine.api.schema.SchemaRule;\n import org.neo4j.storageengine.api.schema.SchemaRule.Kind;\n-\n import static org.neo4j.helpers.Numbers.safeCastLongToInt;\n+\n import static org.neo4j.string.UTF8.getDecodedStringFrom;\n \n /**\n  * Deserializes SchemaRules from a ByteBuffer.\n  */\n+\n public class SchemaRuleDeserializer2_0to3_1\n {\n     private static final Long NO_OWNED_INDEX_RULE = null;\n-    private static final long NO_OWNING_CONSTRAINT = -1;\n+    private static final long NO_OWNING_CONSTRAINT = - 1;\n \n     private SchemaRuleDeserializer2_0to3_1()\n     {\n@@ -46,11 +46,10 @@ public class SchemaRuleDeserializer2_0to3_1\n \n     static boolean isLegacySchemaRule( byte schemaRuleType )\n     {\n-        return schemaRuleType >= 1 && schemaRuleType <= SchemaRule.Kind.values().length;\n+        return schemaRuleType >= 1&& schemaRuleType <= SchemaRule.Kind.values().length;\n     }\n \n-    static SchemaRule deserialize( long id, int labelId, byte kindByte, ByteBuffer buffer ) throws\n-            MalformedSchemaRuleException\n+    static SchemaRule deserialize( long id, int labelId, byte kindByte, ByteBuffer buffer ) throws MalformedSchemaRuleException\n     {\n         Kind kind = Kind.forId( kindByte );\n         try\n@@ -58,15 +57,14 @@ public class SchemaRuleDeserializer2_0to3_1\n             SchemaRule rule = newRule( kind, id, labelId, buffer );\n             if ( null == rule )\n             {\n-                throw new MalformedSchemaRuleException( null,\n-                        \"Deserialized null schema rule for id %d with kind %s\", id, kind.name() );\n+                throw new MalformedSchemaRuleException( null, \"Deserialized null schema rule for id %d with kind %s\", id, kind.name() );\n             }\n+\n             return rule;\n         }\n         catch ( Exception e )\n         {\n-            throw new MalformedSchemaRuleException( e,\n-                    \"Could not deserialize schema rule for id %d with kind %s\", id, kind.name() );\n+            throw new MalformedSchemaRuleException( e, \"Could not deserialize schema rule for id %d with kind %s\", id, kind.name() );\n         }\n     }\n \n@@ -95,9 +93,7 @@ public class SchemaRuleDeserializer2_0to3_1\n     {\n         IndexProvider.Descriptor providerDescriptor = readIndexProviderDescriptor( serialized );\n         int[] propertyKeyIds = readIndexPropertyKeys( serialized );\n-        SchemaIndexDescriptor descriptor = constraintIndex ?\n-                                           SchemaIndexDescriptorFactory.uniqueForLabel( label, propertyKeyIds ) :\n-                                           SchemaIndexDescriptorFactory.forLabel( label, propertyKeyIds );\n+        SchemaIndexDescriptor descriptor = constraintIndex ? SchemaIndexDescriptorFactory.uniqueForLabel( label, propertyKeyIds ) : SchemaIndexDescriptorFactory.forLabel( label, propertyKeyIds );\n         long owningConstraint = constraintIndex ? readOwningConstraint( serialized ) : NO_OWNING_CONSTRAINT;\n         return new IndexRule( id, providerDescriptor, descriptor, owningConstraint );\n     }\n@@ -106,7 +102,7 @@ public class SchemaRuleDeserializer2_0to3_1\n     {\n         String providerKey = getDecodedStringFrom( serialized );\n         String providerVersion = getDecodedStringFrom( serialized );\n-        return new IndexProvider.Descriptor( providerKey, providerVersion );\n+        return new IndexProvider. Descriptor( providerKey, providerVersion );\n     }\n \n     private static int[] readIndexPropertyKeys( ByteBuffer serialized )\n@@ -121,6 +117,7 @@ public class SchemaRuleDeserializer2_0to3_1\n         {\n             props[i] = safeCastLongToInt( serialized.getLong() );\n         }\n+\n         return props;\n     }\n \n@@ -133,23 +130,17 @@ public class SchemaRuleDeserializer2_0to3_1\n \n     public static ConstraintRule readUniquenessConstraintRule( long id, int labelId, ByteBuffer buffer )\n     {\n-        return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.uniqueForLabel( labelId, readConstraintPropertyKeys( buffer ) ),\n-                readOwnedIndexRule( buffer ) );\n+        return new ConstraintRule( id, ConstraintDescriptorFactory.uniqueForLabel( labelId, readConstraintPropertyKeys( buffer ) ), readOwnedIndexRule( buffer ) );\n     }\n \n     public static ConstraintRule readNodePropertyExistenceConstraintRule( long id, int labelId, ByteBuffer buffer )\n     {\n-        return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.existsForLabel( labelId, readPropertyKey( buffer ) ),\n-                NO_OWNED_INDEX_RULE );\n+        return new ConstraintRule( id, ConstraintDescriptorFactory.existsForLabel( labelId, readPropertyKey( buffer ) ), NO_OWNED_INDEX_RULE );\n     }\n \n     public static ConstraintRule readRelPropertyExistenceConstraintRule( long id, int relTypeId, ByteBuffer buffer )\n     {\n-        return new ConstraintRule( id,\n-                ConstraintDescriptorFactory.existsForRelType( relTypeId, readPropertyKey( buffer ) ),\n-                NO_OWNED_INDEX_RULE );\n+        return new ConstraintRule( id, ConstraintDescriptorFactory.existsForRelType( relTypeId, readPropertyKey( buffer ) ), NO_OWNED_INDEX_RULE );\n     }\n \n     private static int readPropertyKey( ByteBuffer buffer )\n@@ -164,6 +155,7 @@ public class SchemaRuleDeserializer2_0to3_1\n         {\n             keys[i] = safeCastLongToInt( buffer.getLong() );\n         }\n+\n         return keys;\n     }\n \n@@ -171,4 +163,4 @@ public class SchemaRuleDeserializer2_0to3_1\n     {\n         return buffer.getLong();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
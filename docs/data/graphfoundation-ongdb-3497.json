{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3497",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3497/DuplicateCheckingCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3497/DuplicateCheckingCollector.java\nindex f5f3b1b07eb..d1e8e93cc87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3497/DuplicateCheckingCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3497/DuplicateCheckingCollector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.verification;\n \n import org.apache.lucene.document.Document;\n@@ -35,86 +36,84 @@ import org.neo4j.values.storable.Value;\n \n public class DuplicateCheckingCollector extends SimpleCollector\n {\n-    protected final PropertyAccessor accessor;\n-    private final int propertyKeyId;\n-    protected LeafReader reader;\n-    DuplicateCheckStrategy duplicateCheckStrategy;\n+  protected final PropertyAccessor accessor;\n+  private final int propertyKeyId;\n+  protected LeafReader reader;\n+  DuplicateCheckStrategy duplicateCheckStrategy;\n \n-    static DuplicateCheckingCollector forProperties( PropertyAccessor accessor, int[] propertyKeyIds )\n-    {\n-        return (propertyKeyIds.length == 1) ? new DuplicateCheckingCollector( accessor, propertyKeyIds[0] )\n-                                            : new CompositeDuplicateCheckingCollector( accessor, propertyKeyIds );\n-    }\n+  static DuplicateCheckingCollector forProperties(PropertyAccessor accessor, int[] propertyKeyIds)\n+  {\n+    return (propertyKeyIds.length == 1) ? new DuplicateCheckingCollector(accessor, propertyKeyIds[0])\n+        : new CompositeDuplicateCheckingCollector(accessor, propertyKeyIds);\n+  }\n \n-    DuplicateCheckingCollector( PropertyAccessor accessor, int propertyKeyId )\n-    {\n-        this.accessor = accessor;\n-        this.propertyKeyId = propertyKeyId;\n-    }\n+  DuplicateCheckingCollector(PropertyAccessor accessor, int propertyKeyId)\n+  {\n+    this.accessor = accessor;\n+    this.propertyKeyId = propertyKeyId;\n+  }\n \n-    @Override\n-    public void collect( int doc ) throws IOException\n+  @Override\n+  public void collect(int doc) throws IOException\n+  {\n+    try\n     {\n-        try\n-        {\n-            doCollect( doc );\n-        }\n-        catch ( KernelException e )\n-        {\n-            throw new IllegalStateException( \"Indexed node should exist and have the indexed property.\", e );\n-        }\n-        catch ( IndexEntryConflictException e )\n-        {\n-            throw new IOException( e );\n-        }\n-    }\n-\n-    protected void doCollect( int doc ) throws IOException, KernelException, IndexEntryConflictException\n+      doCollect(doc);\n+    } catch (KernelException e)\n     {\n-        Document document = reader.document( doc );\n-        long nodeId = LuceneDocumentStructure.getNodeId( document );\n-        Value value = accessor.getPropertyValue( nodeId, propertyKeyId );\n-        duplicateCheckStrategy.checkForDuplicate( value, nodeId );\n-    }\n-\n-    @Override\n-    protected void doSetNextReader( LeafReaderContext context )\n+      throw new IllegalStateException(\"Indexed node should exist and have the indexed property.\", e);\n+    } catch (IndexEntryConflictException e)\n     {\n-        this.reader = context.reader();\n+      throw new IOException(e);\n     }\n+  }\n \n-    @Override\n-    public boolean needsScores()\n-    {\n-        return false;\n-    }\n+  protected void doCollect(int doc) throws IOException, KernelException, IndexEntryConflictException\n+  {\n+    Document document = reader.document(doc);\n+    long nodeId = LuceneDocumentStructure.getNodeId(document);\n+    Value value = accessor.getPropertyValue(nodeId, propertyKeyId);\n+    duplicateCheckStrategy.checkForDuplicate(value, nodeId);\n+  }\n \n-    /**\n-     * Initialise collector for unknown number of entries that are suspected to be duplicates.\n-     */\n-    public void init()\n-    {\n-        duplicateCheckStrategy = new BucketsDuplicateCheckStrategy();\n-    }\n+  @Override\n+  protected void doSetNextReader(LeafReaderContext context)\n+  {\n+    this.reader = context.reader();\n+  }\n \n-    /**\n-     * Initialize collector for some known and expected number of entries that are suspected to be duplicates.\n-     * @param expectedNumberOfEntries expected number entries\n-     */\n-    public void init( int expectedNumberOfEntries )\n-    {\n-        if ( useFastCheck( expectedNumberOfEntries ) )\n-        {\n-            duplicateCheckStrategy = new DuplicateCheckStrategy.MapDuplicateCheckStrategy( expectedNumberOfEntries );\n-        }\n-        else\n-        {\n-            duplicateCheckStrategy = new BucketsDuplicateCheckStrategy( expectedNumberOfEntries );\n-        }\n-    }\n+  @Override\n+  public boolean needsScores()\n+  {\n+    return false;\n+  }\n+\n+  /**\n+   * Initialise collector for unknown number of entries that are suspected to be duplicates.\n+   */\n+  public void init()\n+  {\n+    duplicateCheckStrategy = new BucketsDuplicateCheckStrategy();\n+  }\n \n-    private boolean useFastCheck( int expectedNumberOfEntries )\n+  /**\n+   * Initialize collector for some known and expected number of entries that are suspected to be duplicates.\n+   *\n+   * @param expectedNumberOfEntries expected number entries\n+   */\n+  public void init(int expectedNumberOfEntries)\n+  {\n+    if (useFastCheck(expectedNumberOfEntries))\n     {\n-        return expectedNumberOfEntries <= BucketsDuplicateCheckStrategy.BUCKET_STRATEGY_ENTRIES_THRESHOLD;\n+      duplicateCheckStrategy = new DuplicateCheckStrategy.MapDuplicateCheckStrategy(expectedNumberOfEntries);\n+    } else\n+    {\n+      duplicateCheckStrategy = new BucketsDuplicateCheckStrategy(expectedNumberOfEntries);\n     }\n+  }\n+\n+  private boolean useFastCheck(int expectedNumberOfEntries)\n+  {\n+    return expectedNumberOfEntries <= BucketsDuplicateCheckStrategy.BUCKET_STRATEGY_ENTRIES_THRESHOLD;\n+  }\n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3497/DuplicateCheckingCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3497/DuplicateCheckingCollector.java\nindex f5f3b1b07eb..53f811dfd0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3497/DuplicateCheckingCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3497/DuplicateCheckingCollector.java\n@@ -42,8 +42,7 @@ public class DuplicateCheckingCollector extends SimpleCollector\n \n     static DuplicateCheckingCollector forProperties( PropertyAccessor accessor, int[] propertyKeyIds )\n     {\n-        return (propertyKeyIds.length == 1) ? new DuplicateCheckingCollector( accessor, propertyKeyIds[0] )\n-                                            : new CompositeDuplicateCheckingCollector( accessor, propertyKeyIds );\n+        return (propertyKeyIds.length == 1) ? new DuplicateCheckingCollector( accessor, propertyKeyIds[0] ) : new CompositeDuplicateCheckingCollector( accessor, propertyKeyIds );\n     }\n \n     DuplicateCheckingCollector( PropertyAccessor accessor, int propertyKeyId )\n@@ -117,4 +116,4 @@ public class DuplicateCheckingCollector extends SimpleCollector\n     {\n         return expectedNumberOfEntries <= BucketsDuplicateCheckStrategy.BUCKET_STRATEGY_ENTRIES_THRESHOLD;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
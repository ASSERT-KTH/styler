{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3107",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3107/RelationshipGroupRecordFormatV3_0_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3107/RelationshipGroupRecordFormatV3_0_0.java\nindex c2ed52f483f..305a430d8ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3107/RelationshipGroupRecordFormatV3_0_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3107/RelationshipGroupRecordFormatV3_0_0.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.highlimit.v300;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -25,7 +26,7 @@ import org.neo4j.kernel.impl.store.record.RelationshipGroupRecord;\n /**\n  * LEGEND:\n  * V: variable between 3B-8B\n- *\n+ * <p>\n  * Record format:\n  * 1B   header\n  * 2B   relationship type\n@@ -34,77 +35,77 @@ import org.neo4j.kernel.impl.store.record.RelationshipGroupRecord;\n  * VB   first loop relationships\n  * VB   owning node\n  * VB   next relationship group record\n- *\n+ * <p>\n  * => 18B-43B\n  */\n public class RelationshipGroupRecordFormatV3_0_0 extends BaseHighLimitRecordFormatV3_0_0<RelationshipGroupRecord>\n {\n-    public static final int RECORD_SIZE = 32;\n+  public static final int RECORD_SIZE = 32;\n \n-    private static final int HAS_OUTGOING_BIT = 0b0000_1000;\n-    private static final int HAS_INCOMING_BIT = 0b0001_0000;\n-    private static final int HAS_LOOP_BIT     = 0b0010_0000;\n-    private static final int HAS_NEXT_BIT     = 0b0100_0000;\n+  private static final int HAS_OUTGOING_BIT = 0b0000_1000;\n+  private static final int HAS_INCOMING_BIT = 0b0001_0000;\n+  private static final int HAS_LOOP_BIT = 0b0010_0000;\n+  private static final int HAS_NEXT_BIT = 0b0100_0000;\n \n-    public RelationshipGroupRecordFormatV3_0_0()\n-    {\n-        this( RECORD_SIZE );\n-    }\n+  public RelationshipGroupRecordFormatV3_0_0()\n+  {\n+    this(RECORD_SIZE);\n+  }\n \n-    private RelationshipGroupRecordFormatV3_0_0( int recordSize )\n-    {\n-        super( fixedRecordSize( recordSize ), 0 );\n-    }\n+  private RelationshipGroupRecordFormatV3_0_0(int recordSize)\n+  {\n+    super(fixedRecordSize(recordSize), 0);\n+  }\n \n-    @Override\n-    public RelationshipGroupRecord newRecord()\n-    {\n-        return new RelationshipGroupRecord( -1 );\n-    }\n+  @Override\n+  public RelationshipGroupRecord newRecord()\n+  {\n+    return new RelationshipGroupRecord(-1);\n+  }\n \n-    @Override\n-    protected void doReadInternal( RelationshipGroupRecord record, PageCursor cursor, int recordSize, long headerByte,\n-            boolean inUse )\n-    {\n-        record.initialize( inUse,\n-                cursor.getShort() & 0xFFFF,\n-                decodeCompressedReference( cursor, headerByte, HAS_OUTGOING_BIT, NULL ),\n-                decodeCompressedReference( cursor, headerByte, HAS_INCOMING_BIT, NULL ),\n-                decodeCompressedReference( cursor, headerByte, HAS_LOOP_BIT, NULL ),\n-                decodeCompressedReference( cursor ),\n-                decodeCompressedReference( cursor, headerByte, HAS_NEXT_BIT, NULL ) );\n-    }\n+  @Override\n+  protected void doReadInternal(RelationshipGroupRecord record, PageCursor cursor, int recordSize, long headerByte,\n+                                boolean inUse)\n+  {\n+    record.initialize(inUse,\n+        cursor.getShort() & 0xFFFF,\n+        decodeCompressedReference(cursor, headerByte, HAS_OUTGOING_BIT, NULL),\n+        decodeCompressedReference(cursor, headerByte, HAS_INCOMING_BIT, NULL),\n+        decodeCompressedReference(cursor, headerByte, HAS_LOOP_BIT, NULL),\n+        decodeCompressedReference(cursor),\n+        decodeCompressedReference(cursor, headerByte, HAS_NEXT_BIT, NULL));\n+  }\n \n-    @Override\n-    protected byte headerBits( RelationshipGroupRecord record )\n-    {\n-        byte header = 0;\n-        header = set( header, HAS_OUTGOING_BIT, record.getFirstOut(), NULL );\n-        header = set( header, HAS_INCOMING_BIT, record.getFirstIn(), NULL );\n-        header = set( header, HAS_LOOP_BIT, record.getFirstLoop(), NULL );\n-        header = set( header, HAS_NEXT_BIT, record.getNext(), NULL );\n-        return header;\n-    }\n+  @Override\n+  protected byte headerBits(RelationshipGroupRecord record)\n+  {\n+    byte header = 0;\n+    header = set(header, HAS_OUTGOING_BIT, record.getFirstOut(), NULL);\n+    header = set(header, HAS_INCOMING_BIT, record.getFirstIn(), NULL);\n+    header = set(header, HAS_LOOP_BIT, record.getFirstLoop(), NULL);\n+    header = set(header, HAS_NEXT_BIT, record.getNext(), NULL);\n+    return header;\n+  }\n \n-    @Override\n-    protected int requiredDataLength( RelationshipGroupRecord record )\n-    {\n-        return  2 + // type\n-                length( record.getFirstOut(), NULL ) +\n-                length( record.getFirstIn(), NULL ) +\n-                length( record.getFirstLoop(), NULL ) +\n-                length( record.getOwningNode() ) +\n-                length( record.getNext(), NULL );\n-    }\n+  @Override\n+  protected int requiredDataLength(RelationshipGroupRecord record)\n+  {\n+    return 2 + // type\n+        length(record.getFirstOut(), NULL) +\n+        length(record.getFirstIn(), NULL) +\n+        length(record.getFirstLoop(), NULL) +\n+        length(record.getOwningNode()) +\n+        length(record.getNext(), NULL);\n+  }\n \n-    @Override\n-    protected void doWriteInternal( RelationshipGroupRecord record, PageCursor cursor )\n-    {\n-        cursor.putShort( (short) record.getType() );\n-        encode( cursor, record.getFirstOut(), NULL );\n-        encode( cursor, record.getFirstIn(), NULL );\n-        encode( cursor, record.getFirstLoop(), NULL );\n-        encode( cursor, record.getOwningNode() );\n-        encode( cursor, record.getNext(), NULL );\n-    }\n+  @Override\n+  protected void doWriteInternal(RelationshipGroupRecord record, PageCursor cursor)\n+  {\n+    cursor.putShort((short) record.getType());\n+    encode(cursor, record.getFirstOut(), NULL);\n+    encode(cursor, record.getFirstIn(), NULL);\n+    encode(cursor, record.getFirstLoop(), NULL);\n+    encode(cursor, record.getOwningNode());\n+    encode(cursor, record.getNext(), NULL);\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "60",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    {\n        @Override\n\t\tpublic void windowClosed(DockingWindow window)\n        {\n            // Notify all children's listeners\n            ArrayList<DockingWindow> children = new ArrayList<DockingWindow>();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "64",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/27/DockLayout.java\nindex 550ba165963..3786feea96f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/27/DockLayout.java\n@@ -57,7 +57,7 @@ public class DockLayout implements FindBugsLayoutManager {\n     private static class DockParentListener extends DockingWindowAdapter\n     {\n         @Override\n-\t\tpublic void windowClosed(DockingWindow window)\n+                public void windowClosed(DockingWindow window)\n         {\n             // Notify all children's listeners\n             ArrayList<DockingWindow> children = new ArrayList<DockingWindow>();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "78",
                    "column": "3",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/27/DockLayout.java\nindex 550ba165963..2befcba1584 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/27/DockLayout.java\n@@ -54,39 +54,39 @@ import net.infonode.docking.util.ViewMap;\n  * @author pugh\n  */\n public class DockLayout implements FindBugsLayoutManager {\n-    private static class DockParentListener extends DockingWindowAdapter\n-    {\n+    private static class DockParentListener extends DockingWindowAdapter {\n         @Override\n-\t\tpublic void windowClosed(DockingWindow window)\n-        {\n+        public void windowClosed(DockingWindow window) {\n             // Notify all children's listeners\n             ArrayList<DockingWindow> children = new ArrayList<DockingWindow>();\n-\t\t\tfor (int i = 0; i < window.getChildWindowCount(); i++)\n+            for (int i = 0; i < window.getChildWindowCount(); i++) {\n                 children.add(window.getChildWindow(i));\n-            for (DockingWindow i : children)\n+            }\n+            for (DockingWindow i : children) {\n                 i.close();\n-\t\t}\n+            }\n+        }\n     }\n-    private class ViewMenuItem extends JCheckBoxMenuItem implements ItemListener\n-    {\n-\t\tprivate View view;\n \n-        public ViewMenuItem(View view, String title)\n-        {\n+    private class ViewMenuItem extends JCheckBoxMenuItem implements ItemListener {\n+        private View view;\n+\n+        public ViewMenuItem(View view, String title) {\n             super(title, true);\n-\t\t\taddItemListener(this);\n+            addItemListener(this);\n             this.view = view;\n //\t\t\tview.addListener(new Listener());\n         }\n \n         // Menu item has been checked or unchecked\n-        public void itemStateChanged(ItemEvent evt)\n-        {\n-\t\t\tif (evt.getStateChange() == ItemEvent.SELECTED)\n+        public void itemStateChanged(ItemEvent evt) {\n+            if (evt.getStateChange() == ItemEvent.SELECTED) {\n                 DockingUtil.addWindow(view, rootWindow);\n-            if (evt.getStateChange() == ItemEvent.DESELECTED)\n+            }\n+            if (evt.getStateChange() == ItemEvent.DESELECTED) {\n                 view.close();\n-\t\t}\n+            }\n+        }\n \n //\t\tprivate class Listener extends DockingWindowAdapter\n //\t\t{\n@@ -105,35 +105,38 @@ public class DockLayout implements FindBugsLayoutManager {\n //\t\t\t}\n //\t\t}\n     }\n+\n     private View commentsView = null;\n     final MainFrame frame;\n-\tprivate RootWindow rootWindow;\n+    private RootWindow rootWindow;\n     private View sourceView = null;\n     private View summaryView = null;\n     private TabWindow tabs = null;\n \n     private View topView = null;\n     private Map<View, ViewMenuItem> viewMenuItems = null;\n+\n     /**\n-\t * @param frame\n+     * @param frame\n      */\n     public DockLayout(MainFrame frame) {\n         this.frame = frame;\n-\t}\n+    }\n+\n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#createWindowMenu()\n      */\n-\tpublic JMenu createWindowMenu() {\n+    public JMenu createWindowMenu() {\n \n         viewMenuItems = new HashMap<View, ViewMenuItem>();\n         viewMenuItems.put(summaryView, new ViewMenuItem(summaryView, \"Bug summary\"));\n         viewMenuItems.put(commentsView, new ViewMenuItem(commentsView, \"Comments\"));\n-\t\tviewMenuItems.put(sourceView, new ViewMenuItem(sourceView, \"Source code\"));\n+        viewMenuItems.put(sourceView, new ViewMenuItem(sourceView, \"Source code\"));\n \n         JMenu windowMenu = new JMenu(\"Window\");\n         windowMenu.setMnemonic(KeyEvent.VK_W);\n         windowMenu.add(viewMenuItems.get(summaryView));\n-\t\twindowMenu.add(viewMenuItems.get(commentsView));\n+        windowMenu.add(viewMenuItems.get(commentsView));\n         windowMenu.add(viewMenuItems.get(sourceView));\n         return windowMenu;\n     }\n@@ -141,21 +144,21 @@ public class DockLayout implements FindBugsLayoutManager {\n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#initialize()\n      */\n-\tpublic void initialize() {\n+    public void initialize() {\n         ViewMap viewMap = new ViewMap();\n         topView = new View(L10N.getLocalString(\"view.bugs\", \"Bugs\"), null, frame.bugListPanel());\n         topView.getWindowProperties().setCloseEnabled(false);\n-\t\tviewMap.addView(0, topView);\n+        viewMap.addView(0, topView);\n         summaryView = new View(L10N.getLocalString(\"view.bug_summary\", \"Bug Summary\"), null, frame.summaryTab());\n         viewMap.addView(1, summaryView);\n         commentsView = new View(L10N.getLocalString(\"view.comments\", \"Comments\"), null, frame.createCommentsInputPanel());\n-\t\tviewMap.addView(2, commentsView);\n+        viewMap.addView(2, commentsView);\n         sourceView = new View(L10N.getLocalString(\"view.source\", \"Source\"), null, frame.createSourceCodePanel());\n         viewMap.addView(3, sourceView);\n \n         rootWindow = DockingUtil.createRootWindow(viewMap, true);\n \n-        tabs = new TabWindow(new DockingWindow[]{summaryView, commentsView, sourceView});\n+        tabs = new TabWindow(new DockingWindow[] {summaryView, commentsView, sourceView});\n         tabs.addListener(new DockParentListener());\n         tabs.setSelectedTab(0);\n //\t\ttabs.getWindowProperties().setCloseEnabled(false);\n@@ -165,26 +168,22 @@ public class DockLayout implements FindBugsLayoutManager {\n         DockingWindowsTheme theme = new ShapedGradientDockingTheme();\n         rootWindow.getRootWindowProperties().addSuperObject(theme.getRootWindowProperties());\n \n-        try\n-        {\n+        try {\n             rootWindow.read(new ObjectInputStream(new ByteArrayInputStream(GUISaveState.getInstance().getDockingLayout())), true);\n-\t\t}\n-        catch (IOException e) {}\n+        } catch (IOException e) {\n+        }\n \n-        DockingWindowListener listener = new DockingWindowAdapter()\n-        {\n+        DockingWindowListener listener = new DockingWindowAdapter() {\n             @Override\n-\t\t\tpublic void windowAdded(DockingWindow addedToWindow, DockingWindow addedWindow)\n-            {\n+            public void windowAdded(DockingWindow addedToWindow, DockingWindow addedWindow) {\n                 viewMenuItems.get(addedWindow).setSelected(true);\n \n                 addedToWindow.addListener(new DockParentListener());\n             }\n \n             @Override\n-            public void windowClosed(DockingWindow window)\n-            {\n-\t\t\t\tviewMenuItems.get(window).setSelected(false);\n+            public void windowClosed(DockingWindow window) {\n+                viewMenuItems.get(window).setSelected(false);\n             }\n         };\n \n@@ -195,12 +194,12 @@ public class DockLayout implements FindBugsLayoutManager {\n         frame.setLayout(new BorderLayout());\n         frame.add(rootWindow, BorderLayout.CENTER);\n         frame.add(frame.statusBar(), BorderLayout.SOUTH);\n-\t}\n+    }\n \n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#makeCommentsVisible()\n      */\n-\tpublic void makeCommentsVisible() {\n+    public void makeCommentsVisible() {\n         commentsView.makeVisible();\n \n     }\n@@ -208,7 +207,7 @@ public class DockLayout implements FindBugsLayoutManager {\n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#makeSourceVisible()\n      */\n-\tpublic void makeSourceVisible() {\n+    public void makeSourceVisible() {\n         sourceView.makeVisible();\n \n     }\n@@ -216,29 +215,28 @@ public class DockLayout implements FindBugsLayoutManager {\n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#saveState()\n      */\n-\tpublic void saveState() {\n-        try\n-        {\n+    public void saveState() {\n+        try {\n             // FIXME this is writing the wrong array and I don't know why\n-\t\t\tByteArrayOutputStream dockingLayout = new ByteArrayOutputStream();\n+            ByteArrayOutputStream dockingLayout = new ByteArrayOutputStream();\n             ObjectOutputStream out = new ObjectOutputStream(dockingLayout);\n             rootWindow.write(out, true);\n             out.close();\n-\t\t\tGUISaveState.getInstance().setDockingLayout(dockingLayout.toByteArray());\n+            GUISaveState.getInstance().setDockingLayout(dockingLayout.toByteArray());\n+        } catch (IOException e) {\n         }\n-        catch (IOException e) {}\n \n     }\n \n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#setSourceTitle(java.lang.String)\n      */\n-\tpublic void setSourceTitle(final String title) {\n-    sourceView.getWindowProperties().setTitleProvider(new DockingWindowTitleProvider(){\n-        public String getTitle(DockingWindow arg0) {\n-            return title;\n-\t\t}\t\t\t\t\n-    });\n+    public void setSourceTitle(final String title) {\n+        sourceView.getWindowProperties().setTitleProvider(new DockingWindowTitleProvider() {\n+            public String getTitle(DockingWindow arg0) {\n+                return title;\n+            }\n+        });\n     }\n \n \n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/27/DockLayout.java\nindex 550ba165963..a28bc760c30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/27/DockLayout.java\n@@ -20,7 +20,6 @@\n package edu.umd.cs.findbugs.gui2;\n \n import edu.umd.cs.findbugs.L10N;\n-\n import java.awt.BorderLayout;\n import java.awt.event.ItemEvent;\n import java.awt.event.ItemListener;\n@@ -33,10 +32,8 @@ import java.io.ObjectOutputStream;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Map;\n-\n import javax.swing.JCheckBoxMenuItem;\n import javax.swing.JMenu;\n-\n import net.infonode.docking.DockingWindow;\n import net.infonode.docking.DockingWindowAdapter;\n import net.infonode.docking.DockingWindowListener;\n@@ -53,87 +50,99 @@ import net.infonode.docking.util.ViewMap;\n /**\n  * @author pugh\n  */\n+\n public class DockLayout implements FindBugsLayoutManager {\n-    private static class DockParentListener extends DockingWindowAdapter\n-    {\n+    private static class DockParentListener extends DockingWindowAdapter {\n         @Override\n-\t\tpublic void windowClosed(DockingWindow window)\n-        {\n+        public void windowClosed(DockingWindow window) {\n             // Notify all children's listeners\n             ArrayList<DockingWindow> children = new ArrayList<DockingWindow>();\n-\t\t\tfor (int i = 0; i < window.getChildWindowCount(); i++)\n+            for (int i = 0; i < window.getChildWindowCount(); i++)\n                 children.add(window.getChildWindow(i));\n             for (DockingWindow i : children)\n                 i.close();\n-\t\t}\n+        }\n+\n     }\n-    private class ViewMenuItem extends JCheckBoxMenuItem implements ItemListener\n-    {\n-\t\tprivate View view;\n \n-        public ViewMenuItem(View view, String title)\n-        {\n+\n+    private class ViewMenuItem extends JCheckBoxMenuItem implements ItemListener {\n+        private View view;\n+\n+\n+        public ViewMenuItem(View view, String title) {\n             super(title, true);\n-\t\t\taddItemListener(this);\n+            addItemListener(this);\n             this.view = view;\n-//\t\t\tview.addListener(new Listener());\n+//          view.addListener(new Listener());\n         }\n \n         // Menu item has been checked or unchecked\n-        public void itemStateChanged(ItemEvent evt)\n-        {\n-\t\t\tif (evt.getStateChange() == ItemEvent.SELECTED)\n+\n+\n+        public void itemStateChanged(ItemEvent evt) {\n+            if (evt.getStateChange() == ItemEvent.SELECTED)\n                 DockingUtil.addWindow(view, rootWindow);\n             if (evt.getStateChange() == ItemEvent.DESELECTED)\n                 view.close();\n-\t\t}\n-\n-//\t\tprivate class Listener extends DockingWindowAdapter\n-//\t\t{\n-//\t\t\t@Override\n-//\t\t\tpublic void windowAdded(DockingWindow addedToWindow, DockingWindow addedWindow)\n-//\t\t\t{\n-//\t\t\t\tif (addedWindow.equals(view))\n-//\t\t\t\t\tViewMenuItem.this.setSelected(true);\n-//\t\t\t}\n+        }\n+\n+//      private class Listener extends DockingWindowAdapter\n+//      {\n+//          @Override\n+//          public void windowAdded(DockingWindow addedToWindow, DockingWindow addedWindow)\n+//          {\n+//              if (addedWindow.equals(view))\n+//                  ViewMenuItem.this.setSelected(true);\n+//          }\n //\n-//\t\t\t@Override\n-//\t\t\tpublic void windowRemoved(DockingWindow removedFromWindow, DockingWindow removedWindow)\n-//\t\t\t{\n-//\t\t\t\tif (removedWindow.equals(view))\n-//\t\t\t\t\tViewMenuItem.this.setSelected(false);\n-//\t\t\t}\n-//\t\t}\n+//          @Override\n+//          public void windowRemoved(DockingWindow removedFromWindow, DockingWindow removedWindow)\n+//          {\n+//              if (removedWindow.equals(view))\n+//                  ViewMenuItem.this.setSelected(false);\n+//          }\n+//      }\n     }\n+\n+\n     private View commentsView = null;\n+\n     final MainFrame frame;\n-\tprivate RootWindow rootWindow;\n+\n+    private RootWindow rootWindow;\n+\n     private View sourceView = null;\n+\n     private View summaryView = null;\n+\n     private TabWindow tabs = null;\n \n     private View topView = null;\n+\n     private Map<View, ViewMenuItem> viewMenuItems = null;\n     /**\n-\t * @param frame\n+     * @param frame\n      */\n+\n+\n     public DockLayout(MainFrame frame) {\n         this.frame = frame;\n-\t}\n+    }\n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#createWindowMenu()\n      */\n-\tpublic JMenu createWindowMenu() {\n \n+\n+    public JMenu createWindowMenu() {\n         viewMenuItems = new HashMap<View, ViewMenuItem>();\n         viewMenuItems.put(summaryView, new ViewMenuItem(summaryView, \"Bug summary\"));\n         viewMenuItems.put(commentsView, new ViewMenuItem(commentsView, \"Comments\"));\n-\t\tviewMenuItems.put(sourceView, new ViewMenuItem(sourceView, \"Source code\"));\n-\n+        viewMenuItems.put(sourceView, new ViewMenuItem(sourceView, \"Source code\"));\n         JMenu windowMenu = new JMenu(\"Window\");\n         windowMenu.setMnemonic(KeyEvent.VK_W);\n         windowMenu.add(viewMenuItems.get(summaryView));\n-\t\twindowMenu.add(viewMenuItems.get(commentsView));\n+        windowMenu.add(viewMenuItems.get(commentsView));\n         windowMenu.add(viewMenuItems.get(sourceView));\n         return windowMenu;\n     }\n@@ -141,105 +150,94 @@ public class DockLayout implements FindBugsLayoutManager {\n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#initialize()\n      */\n-\tpublic void initialize() {\n+\n+    public void initialize() {\n         ViewMap viewMap = new ViewMap();\n         topView = new View(L10N.getLocalString(\"view.bugs\", \"Bugs\"), null, frame.bugListPanel());\n         topView.getWindowProperties().setCloseEnabled(false);\n-\t\tviewMap.addView(0, topView);\n+        viewMap.addView(0, topView);\n         summaryView = new View(L10N.getLocalString(\"view.bug_summary\", \"Bug Summary\"), null, frame.summaryTab());\n         viewMap.addView(1, summaryView);\n         commentsView = new View(L10N.getLocalString(\"view.comments\", \"Comments\"), null, frame.createCommentsInputPanel());\n-\t\tviewMap.addView(2, commentsView);\n+        viewMap.addView(2, commentsView);\n         sourceView = new View(L10N.getLocalString(\"view.source\", \"Source\"), null, frame.createSourceCodePanel());\n         viewMap.addView(3, sourceView);\n-\n         rootWindow = DockingUtil.createRootWindow(viewMap, true);\n-\n-        tabs = new TabWindow(new DockingWindow[]{summaryView, commentsView, sourceView});\n+        tabs = new TabWindow(new DockingWindow[] { summaryView, commentsView, sourceView });\n         tabs.addListener(new DockParentListener());\n         tabs.setSelectedTab(0);\n-//\t\ttabs.getWindowProperties().setCloseEnabled(false);\n-\n+//      tabs.getWindowProperties().setCloseEnabled(false);\n         rootWindow.setWindow(new SplitWindow(false, 0.4f, topView, tabs));\n-\n         DockingWindowsTheme theme = new ShapedGradientDockingTheme();\n         rootWindow.getRootWindowProperties().addSuperObject(theme.getRootWindowProperties());\n-\n-        try\n-        {\n+        try {\n             rootWindow.read(new ObjectInputStream(new ByteArrayInputStream(GUISaveState.getInstance().getDockingLayout())), true);\n-\t\t}\n-        catch (IOException e) {}\n-\n-        DockingWindowListener listener = new DockingWindowAdapter()\n-        {\n-            @Override\n-\t\t\tpublic void windowAdded(DockingWindow addedToWindow, DockingWindow addedWindow)\n-            {\n-                viewMenuItems.get(addedWindow).setSelected(true);\n-\n-                addedToWindow.addListener(new DockParentListener());\n-            }\n-\n-            @Override\n-            public void windowClosed(DockingWindow window)\n-            {\n-\t\t\t\tviewMenuItems.get(window).setSelected(false);\n-            }\n-        };\n+        } catch (IOException e) {\n \n+        }\n+        DockingWindowListener listener = new DockingWindowAdapter() {\n+                                  @Override\n+                                  public void windowAdded(DockingWindow addedToWindow, DockingWindow addedWindow) {\n+                                      viewMenuItems.get(addedWindow).setSelected(true);\n+                                      addedToWindow.addListener(new DockParentListener());\n+                                  }\n+\n+                                  @Override\n+                                  public void windowClosed(DockingWindow window) {\n+                                      viewMenuItems.get(window).setSelected(false);\n+                                  }\n+                              };\n         summaryView.addListener(listener);\n         commentsView.addListener(listener);\n         sourceView.addListener(listener);\n-\n         frame.setLayout(new BorderLayout());\n         frame.add(rootWindow, BorderLayout.CENTER);\n         frame.add(frame.statusBar(), BorderLayout.SOUTH);\n-\t}\n+    }\n \n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#makeCommentsVisible()\n      */\n-\tpublic void makeCommentsVisible() {\n-        commentsView.makeVisible();\n \n+    public void makeCommentsVisible() {\n+        commentsView.makeVisible();\n     }\n \n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#makeSourceVisible()\n      */\n-\tpublic void makeSourceVisible() {\n-        sourceView.makeVisible();\n \n+    public void makeSourceVisible() {\n+        sourceView.makeVisible();\n     }\n \n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#saveState()\n      */\n-\tpublic void saveState() {\n-        try\n-        {\n+\n+    public void saveState() {\n+        try {\n             // FIXME this is writing the wrong array and I don't know why\n-\t\t\tByteArrayOutputStream dockingLayout = new ByteArrayOutputStream();\n+            ByteArrayOutputStream dockingLayout = new ByteArrayOutputStream();\n             ObjectOutputStream out = new ObjectOutputStream(dockingLayout);\n             rootWindow.write(out, true);\n             out.close();\n-\t\t\tGUISaveState.getInstance().setDockingLayout(dockingLayout.toByteArray());\n-        }\n-        catch (IOException e) {}\n+            GUISaveState.getInstance().setDockingLayout(dockingLayout.toByteArray());\n+        } catch (IOException e) {\n \n+        }\n     }\n \n     /* (non-Javadoc)\n      * @see edu.umd.cs.findbugs.gui2.LayoutManager#setSourceTitle(java.lang.String)\n      */\n-\tpublic void setSourceTitle(final String title) {\n-    sourceView.getWindowProperties().setTitleProvider(new DockingWindowTitleProvider(){\n-        public String getTitle(DockingWindow arg0) {\n-            return title;\n-\t\t}\t\t\t\t\n-    });\n-    }\n \n+    public void setSourceTitle(final String title) {\n+        sourceView.getWindowProperties().setTitleProvider(new DockingWindowTitleProvider() {\n+            public String getTitle(DockingWindow arg0) {\n+                return title;\n+            }\n+        });\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 140
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/27/DockLayout.java\nindex 550ba165963..3786feea96f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/27/DockLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/27/DockLayout.java\n@@ -57,7 +57,7 @@ public class DockLayout implements FindBugsLayoutManager {\n     private static class DockParentListener extends DockingWindowAdapter\n     {\n         @Override\n-\t\tpublic void windowClosed(DockingWindow window)\n+                public void windowClosed(DockingWindow window)\n         {\n             // Notify all children's listeners\n             ArrayList<DockingWindow> children = new ArrayList<DockingWindow>();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "130",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 138).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * @param queue the queue which holds all outstanding open requests.\n     */\n    KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, Queue<BinaryRequest> queue, boolean isTransient) {\n        super(endpoint, responseBuffer, queue, isTransient);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/41/KeyValueHandler.java\nindex ad2c8306705..7ea7645a3c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/41/KeyValueHandler.java\n@@ -1,16 +1,16 @@\n /**\n  * Copyright (C) 2014 Couchbase, Inc.\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -19,6 +19,7 @@\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALING\n  * IN THE SOFTWARE.\n  */\n+\n package com.couchbase.client.core.endpoint.kv;\n \n import com.couchbase.client.core.ResponseEvent;\n@@ -127,7 +128,8 @@ public class KeyValueHandler\n      * @param responseBuffer the {@link RingBuffer} to push responses into.\n      * @param queue the queue which holds all outstanding open requests.\n      */\n-    KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, Queue<BinaryRequest> queue, boolean isTransient) {\n+    KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, Queue<BinaryRequest> queue,\n+                    boolean isTransient) {\n         super(endpoint, responseBuffer, queue, isTransient);\n     }\n \n@@ -257,7 +259,7 @@ public class KeyValueHandler\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n     private static BinaryMemcacheRequest handleStoreRequest(final ChannelHandlerContext ctx,\n-        final BinaryStoreRequest msg) {\n+                                                            final BinaryStoreRequest msg) {\n         ByteBuf extras = ctx.alloc().buffer(8);\n         extras.writeInt(msg.flags());\n         extras.writeInt(msg.expiration());\n@@ -311,7 +313,7 @@ public class KeyValueHandler\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n     private static BinaryMemcacheRequest handleCounterRequest(final ChannelHandlerContext ctx,\n-        final CounterRequest msg) {\n+                                                              final CounterRequest msg) {\n         ByteBuf extras = ctx.alloc().buffer();\n         extras.writeLong(Math.abs(msg.delta()));\n         extras.writeLong(msg.initial());\n@@ -371,7 +373,7 @@ public class KeyValueHandler\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n     private static BinaryMemcacheRequest handleObserveRequest(final ChannelHandlerContext ctx,\n-        final ObserveRequest msg) {\n+                                                              final ObserveRequest msg) {\n         String key = msg.key();\n         ByteBuf content = ctx.alloc().buffer();\n         content.writeShort(msg.partition());\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "258",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "311",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "371",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "408",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "410",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "448",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "468",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "469",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "478",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "479",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/41/KeyValueHandler.java\nindex ad2c8306705..bc0a4e04c04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/41/KeyValueHandler.java\n@@ -132,8 +132,7 @@ public class KeyValueHandler\n     }\n \n     @Override\n-    protected BinaryMemcacheRequest encodeRequest(final ChannelHandlerContext ctx, final BinaryRequest msg)\n-        throws Exception {\n+    protected BinaryMemcacheRequest encodeRequest(final ChannelHandlerContext ctx, final BinaryRequest msg) throws Exception {\n         BinaryMemcacheRequest request;\n \n         if (msg instanceof GetRequest) {\n@@ -159,8 +158,7 @@ public class KeyValueHandler\n         } else if (msg instanceof PrependRequest) {\n             request = handlePrependRequest((PrependRequest) msg);\n         } else {\n-            throw new IllegalArgumentException(\"Unknown incoming BinaryRequest type \"\n-                + msg.getClass());\n+            throw new IllegalArgumentException(\"Unknown incoming BinaryRequest type \" + msg.getClass());\n         }\n \n         if (msg.partition() >= 0) {\n@@ -238,8 +236,7 @@ public class KeyValueHandler\n         short keyLength = (short) key.length();\n         BinaryMemcacheRequest request = new DefaultBinaryMemcacheRequest(key);\n \n-        request.setOpcode(OP_GET_REPLICA)\n-            .setKeyLength(keyLength)\n+        request.setOpcode(OP_GET_REPLICA).setKeyLength(keyLength)\n             .setTotalBodyLength(keyLength);\n         return request;\n     }\n@@ -258,7 +255,7 @@ public class KeyValueHandler\n      */\n     private static BinaryMemcacheRequest handleStoreRequest(final ChannelHandlerContext ctx,\n         final BinaryStoreRequest msg) {\n-        ByteBuf extras = ctx.alloc().buffer(8);\n+    ByteBuf extras = ctx.alloc().buffer(8);\n         extras.writeInt(msg.flags());\n         extras.writeInt(msg.expiration());\n \n@@ -275,9 +272,8 @@ public class KeyValueHandler\n             request.setOpcode(OP_REPLACE);\n             request.setCAS(((ReplaceRequest) msg).cas());\n         } else {\n-            throw new IllegalArgumentException(\"Unknown incoming BinaryStoreRequest type \"\n-                + msg.getClass());\n-        }\n+            throw new IllegalArgumentException(\"Unknown incoming BinaryStoreRequest type \" + msg.getClass());\n+    }\n \n         request.setKeyLength(keyLength);\n         request.setTotalBodyLength(keyLength + msg.content().readableBytes() + extrasLength);\n@@ -312,7 +308,7 @@ public class KeyValueHandler\n      */\n     private static BinaryMemcacheRequest handleCounterRequest(final ChannelHandlerContext ctx,\n         final CounterRequest msg) {\n-        ByteBuf extras = ctx.alloc().buffer();\n+    ByteBuf extras = ctx.alloc().buffer();\n         extras.writeLong(Math.abs(msg.delta()));\n         extras.writeLong(msg.initial());\n         extras.writeInt(msg.expiry());\n@@ -372,7 +368,7 @@ public class KeyValueHandler\n      */\n     private static BinaryMemcacheRequest handleObserveRequest(final ChannelHandlerContext ctx,\n         final ObserveRequest msg) {\n-        String key = msg.key();\n+    String key = msg.key();\n         ByteBuf content = ctx.alloc().buffer();\n         content.writeShort(msg.partition());\n         content.writeShort(key.length());\n@@ -409,9 +405,9 @@ public class KeyValueHandler\n     }\n \n     @Override\n-    protected CouchbaseResponse decodeResponse(final ChannelHandlerContext ctx, final FullBinaryMemcacheResponse msg)\n-        throws Exception {\n-        BinaryRequest request = currentRequest();\n+    protected CouchbaseResponse decodeResponse(final ChannelHandlerContext ctx, final FullBinaryMemcacheResponse msg) throws Exception {\n+\n+    BinaryRequest request = currentRequest();\n \n         if (request.opaque() != msg.getOpaque()) {\n             throw new IllegalStateException(\"Opaque values for \" + msg.getClass() + \" do not match.\");\n@@ -449,8 +445,7 @@ public class KeyValueHandler\n             }\n             response = new GetResponse(status, cas, flags, bucket, content, request);\n         } else if (request instanceof GetBucketConfigRequest) {\n-            response = new GetBucketConfigResponse(status, bucket, content,\n-                ((GetBucketConfigRequest) request).hostname());\n+            response = new GetBucketConfigResponse(status, bucket, content, ((GetBucketConfigRequest) request).hostname());\n         } else if (request instanceof InsertRequest) {\n             response = new InsertResponse(status, cas, bucket, content, request);\n         } else if (request instanceof UpsertRequest) {\n@@ -470,9 +465,8 @@ public class KeyValueHandler\n         } else if (request instanceof TouchRequest) {\n             response = new TouchResponse(status, bucket, content, request);\n         } else if (request instanceof ObserveRequest) {\n-            byte observed = status.isSuccess()\n-                ? content.getByte(content.getShort(2) + 4) : ObserveResponse.ObserveStatus.UNKNOWN.value();\n-            if (content != null && content.refCnt() > 0) {\n+            byte observed = status.isSuccess() ? content.getByte(content.getShort(2) + 4) : ObserveResponse.ObserveStatus.UNKNOWN.value();\n+if (content != null && content.refCnt() > 0) {\n                 content.release();\n             }\n             response = new ObserveResponse(status, observed, ((ObserveRequest) request).master(), bucket, request);\n@@ -481,9 +475,8 @@ public class KeyValueHandler\n         } else if (request instanceof PrependRequest) {\n             response = new PrependResponse(status, cas, bucket, content, request);\n         } else {\n-            throw new IllegalStateException(\"Unhandled request/response pair: \" + request.getClass() + \"/\"\n-                + msg.getClass());\n-        }\n+            throw new IllegalStateException(\"Unhandled request/response pair: \" + request.getClass() + \"/\" + msg.getClass());\n+    }\n \n         finishedDecoding();\n         return response;\n@@ -548,4 +541,4 @@ public class KeyValueHandler\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "263",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "265",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "360",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "398",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "413",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "414",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "435",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "437",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "442",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "443",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "448",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "449",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "454",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "455",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "460",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "461",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "462",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "463",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 37, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "464",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "465",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "466",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "467",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 33, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "468",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "469",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "470",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "471",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "471",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "472",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "473",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 44, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "474",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "475",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "475",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "476",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "477",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "482",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "483",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "488",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "489",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 54, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "489",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "490",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "510",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "511",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "522",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "523",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "524",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "525",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "526",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "527",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "528",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "529",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "530",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "531",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "532",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "533",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "534",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "535",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "536",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "537",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "538",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "539",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "540",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "541",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "542",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "543",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "544",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "545",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "546",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "547",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "548",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "549",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "550",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "551",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 23, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "552",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/41/KeyValueHandler.java\nindex ad2c8306705..c6e17f52662 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/41/KeyValueHandler.java\n@@ -64,7 +64,6 @@ import com.lmax.disruptor.RingBuffer;\n import io.netty.buffer.ByteBuf;\n import io.netty.buffer.Unpooled;\n import io.netty.channel.ChannelHandlerContext;\n-\n import java.util.Queue;\n \n /**\n@@ -75,8 +74,9 @@ import java.util.Queue;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n-public class KeyValueHandler\n-    extends AbstractGenericHandler<FullBinaryMemcacheResponse, BinaryMemcacheRequest, BinaryRequest> {\n+\n+public class KeyValueHandler extends AbstractGenericHandler<FullBinaryMemcacheResponse, BinaryMemcacheRequest, BinaryRequest> {\n+\n \n     public static final byte OP_GET_BUCKET_CONFIG = (byte) 0xb5;\n     public static final byte OP_GET = BinaryMemcacheOpcodes.GET;\n@@ -94,7 +94,6 @@ public class KeyValueHandler\n     public static final byte OP_TOUCH = BinaryMemcacheOpcodes.TOUCH;\n     public static final byte OP_APPEND = BinaryMemcacheOpcodes.APPEND;\n     public static final byte OP_PREPEND = BinaryMemcacheOpcodes.PREPEND;\n-\n     public static final byte SUCCESS = 0x00;\n     public static final byte ERR_NOT_FOUND = 0x01;\n     public static final byte ERR_EXISTS = 0x02;\n@@ -116,6 +115,7 @@ public class KeyValueHandler\n      * @param endpoint the {@link AbstractEndpoint} to coordinate with.\n      * @param responseBuffer the {@link RingBuffer} to push responses into.\n      */\n+\n     public KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, boolean isTransient) {\n         super(endpoint, responseBuffer, isTransient);\n     }\n@@ -127,46 +127,43 @@ public class KeyValueHandler\n      * @param responseBuffer the {@link RingBuffer} to push responses into.\n      * @param queue the queue which holds all outstanding open requests.\n      */\n+\n     KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, Queue<BinaryRequest> queue, boolean isTransient) {\n         super(endpoint, responseBuffer, queue, isTransient);\n     }\n \n     @Override\n-    protected BinaryMemcacheRequest encodeRequest(final ChannelHandlerContext ctx, final BinaryRequest msg)\n-        throws Exception {\n+    protected BinaryMemcacheRequest encodeRequest(final ChannelHandlerContext ctx, final BinaryRequest msg) throws Exception {\n         BinaryMemcacheRequest request;\n-\n         if (msg instanceof GetRequest) {\n             request = handleGetRequest(ctx, (GetRequest) msg);\n         } else if (msg instanceof BinaryStoreRequest) {\n             request = handleStoreRequest(ctx, (BinaryStoreRequest) msg);\n         } else if (msg instanceof ReplicaGetRequest) {\n-            request = handleReplicaGetRequest((ReplicaGetRequest) msg);\n-        } else if (msg instanceof RemoveRequest) {\n-            request = handleRemoveRequest((RemoveRequest) msg);\n-        } else if (msg instanceof CounterRequest) {\n-            request = handleCounterRequest(ctx, (CounterRequest) msg);\n-        } else if (msg instanceof TouchRequest) {\n-            request = handleTouchRequest(ctx, (TouchRequest) msg);\n-        } else if (msg instanceof UnlockRequest) {\n-            request = handleUnlockRequest((UnlockRequest) msg);\n-        } else if (msg instanceof ObserveRequest) {\n-            request = handleObserveRequest(ctx, (ObserveRequest) msg);\n-        } else if (msg instanceof GetBucketConfigRequest) {\n-            request = handleGetBucketConfigRequest();\n-        } else if (msg instanceof AppendRequest) {\n-            request = handleAppendRequest((AppendRequest) msg);\n-        } else if (msg instanceof PrependRequest) {\n-            request = handlePrependRequest((PrependRequest) msg);\n-        } else {\n-            throw new IllegalArgumentException(\"Unknown incoming BinaryRequest type \"\n-                + msg.getClass());\n-        }\n+                   request = handleReplicaGetRequest((ReplicaGetRequest) msg);\n+               } else if (msg instanceof RemoveRequest) {\n+                   request = handleRemoveRequest((RemoveRequest) msg);\n+               } else if (msg instanceof CounterRequest) {\n+                          request = handleCounterRequest(ctx, (CounterRequest) msg);\n+                      } else if (msg instanceof TouchRequest) {\n+                          request = handleTouchRequest(ctx, (TouchRequest) msg);\n+                      } else if (msg instanceof UnlockRequest) {\n+                                 request = handleUnlockRequest((UnlockRequest) msg);\n+                             } else if (msg instanceof ObserveRequest) {\n+                                 request = handleObserveRequest(ctx, (ObserveRequest) msg);\n+                             } else if (msg instanceof GetBucketConfigRequest) {\n+                                        request = handleGetBucketConfigRequest();\n+                                    } else if (msg instanceof AppendRequest) {\n+                                        request = handleAppendRequest((AppendRequest) msg);\n+                                    } else if (msg instanceof PrependRequest) {\n+                                               request = handlePrependRequest((PrependRequest) msg);\n+                                           } else {\n+                                               throw new IllegalArgumentException(\"Unknown incoming BinaryRequest type \" + msg.getClass());\n+                                           }\n \n         if (msg.partition() >= 0) {\n             request.setReserved(msg.partition());\n         }\n-\n         request.setOpaque(msg.opaque());\n \n         // Retain just the content, since a response could be \"Not my Vbucket\".\n@@ -175,7 +172,6 @@ public class KeyValueHandler\n         if (!(msg instanceof ObserveRequest) && (request instanceof FullBinaryMemcacheRequest)) {\n             ((FullBinaryMemcacheRequest) request).content().retain();\n         }\n-\n         return request;\n     }\n \n@@ -190,6 +186,7 @@ public class KeyValueHandler\n      * @param msg the incoming message.\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n+\n     private static BinaryMemcacheRequest handleGetRequest(final ChannelHandlerContext ctx, final GetRequest msg) {\n         byte opcode;\n         ByteBuf extras;\n@@ -200,20 +197,14 @@ public class KeyValueHandler\n             opcode = OP_GET_AND_TOUCH;\n             extras = ctx.alloc().buffer().writeInt(msg.expiry());\n         } else {\n-            opcode = OP_GET;\n-            extras = Unpooled.EMPTY_BUFFER;\n+                   opcode = OP_GET;\n+                   extras = Unpooled.EMPTY_BUFFER;\n         }\n-\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         byte extrasLength = (byte) extras.readableBytes();\n         BinaryMemcacheRequest request = new DefaultBinaryMemcacheRequest(key);\n-        request\n-            .setOpcode(opcode)\n-            .setKeyLength(keyLength)\n-            .setExtras(extras)\n-            .setExtrasLength(extrasLength)\n-            .setTotalBodyLength(keyLength + extrasLength);\n+        request.setOpcode(opcode).setKeyLength(keyLength).setExtras(extras).setExtrasLength(extrasLength).setTotalBodyLength(keyLength + extrasLength);\n         return request;\n     }\n \n@@ -222,6 +213,7 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n+\n     private static BinaryMemcacheRequest handleGetBucketConfigRequest() {\n         BinaryMemcacheRequest request = new DefaultBinaryMemcacheRequest();\n         request.setOpcode(OP_GET_BUCKET_CONFIG);\n@@ -233,14 +225,12 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n+\n     private static BinaryMemcacheRequest handleReplicaGetRequest(final ReplicaGetRequest msg) {\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         BinaryMemcacheRequest request = new DefaultBinaryMemcacheRequest(key);\n-\n-        request.setOpcode(OP_GET_REPLICA)\n-            .setKeyLength(keyLength)\n-            .setTotalBodyLength(keyLength);\n+        request.setOpcode(OP_GET_REPLICA).setKeyLength(keyLength).setTotalBodyLength(keyLength);\n         return request;\n     }\n \n@@ -256,29 +246,25 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n-    private static BinaryMemcacheRequest handleStoreRequest(final ChannelHandlerContext ctx,\n-        final BinaryStoreRequest msg) {\n+\n+    private static BinaryMemcacheRequest handleStoreRequest(final ChannelHandlerContext ctx, final BinaryStoreRequest msg) {\n         ByteBuf extras = ctx.alloc().buffer(8);\n         extras.writeInt(msg.flags());\n         extras.writeInt(msg.expiration());\n-\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         byte extrasLength = (byte) extras.readableBytes();\n         FullBinaryMemcacheRequest request = new DefaultFullBinaryMemcacheRequest(key, extras, msg.content());\n-\n         if (msg instanceof InsertRequest) {\n             request.setOpcode(OP_INSERT);\n         } else if (msg instanceof UpsertRequest) {\n             request.setOpcode(OP_UPSERT);\n         } else if (msg instanceof ReplaceRequest) {\n-            request.setOpcode(OP_REPLACE);\n-            request.setCAS(((ReplaceRequest) msg).cas());\n-        } else {\n-            throw new IllegalArgumentException(\"Unknown incoming BinaryStoreRequest type \"\n-                + msg.getClass());\n-        }\n-\n+                   request.setOpcode(OP_REPLACE);\n+                   request.setCAS(((ReplaceRequest) msg).cas());\n+               } else {\n+                   throw new IllegalArgumentException(\"Unknown incoming BinaryStoreRequest type \" + msg.getClass());\n+               }\n         request.setKeyLength(keyLength);\n         request.setTotalBodyLength(keyLength + msg.content().readableBytes() + extrasLength);\n         request.setExtrasLength(extrasLength);\n@@ -290,11 +276,11 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n+\n     private static BinaryMemcacheRequest handleRemoveRequest(final RemoveRequest msg) {\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         BinaryMemcacheRequest request = new DefaultBinaryMemcacheRequest(key);\n-\n         request.setOpcode(OP_REMOVE);\n         request.setCAS(msg.cas());\n         request.setKeyLength(keyLength);\n@@ -310,13 +296,12 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n-    private static BinaryMemcacheRequest handleCounterRequest(final ChannelHandlerContext ctx,\n-        final CounterRequest msg) {\n+\n+    private static BinaryMemcacheRequest handleCounterRequest(final ChannelHandlerContext ctx, final CounterRequest msg) {\n         ByteBuf extras = ctx.alloc().buffer();\n         extras.writeLong(Math.abs(msg.delta()));\n         extras.writeLong(msg.initial());\n         extras.writeInt(msg.expiry());\n-\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         byte extrasLength = (byte) extras.readableBytes();\n@@ -333,6 +318,7 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n+\n     private static BinaryMemcacheRequest handleUnlockRequest(final UnlockRequest msg) {\n         String key = msg.key();\n         short keyLength = (short) key.length();\n@@ -349,10 +335,10 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n+\n     private static BinaryMemcacheRequest handleTouchRequest(final ChannelHandlerContext ctx, final TouchRequest msg) {\n         ByteBuf extras = ctx.alloc().buffer();\n         extras.writeInt(msg.expiry());\n-\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         byte extrasLength = (byte) extras.readableBytes();\n@@ -370,15 +356,16 @@ public class KeyValueHandler\n      *\n      * @return a ready {@link BinaryMemcacheRequest}.\n      */\n-    private static BinaryMemcacheRequest handleObserveRequest(final ChannelHandlerContext ctx,\n-        final ObserveRequest msg) {\n+\n+    private static BinaryMemcacheRequest handleObserveRequest(final ChannelHandlerContext ctx, final ObserveRequest msg) {\n         String key = msg.key();\n         ByteBuf content = ctx.alloc().buffer();\n         content.writeShort(msg.partition());\n         content.writeShort(key.length());\n         content.writeBytes(key.getBytes(CHARSET));\n-\n-        BinaryMemcacheRequest request = new DefaultFullBinaryMemcacheRequest(\"\", Unpooled.EMPTY_BUFFER, content);\n+        BinaryMemcacheRequest request = new DefaultFullBinaryMemcacheRequest(\"\",\n+            Unpooled.EMPTY_BUFFER,\n+            content);\n         request.setOpcode(OP_OBSERVE);\n         request.setTotalBodyLength(content.readableBytes());\n         return request;\n@@ -388,7 +375,6 @@ public class KeyValueHandler\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         BinaryMemcacheRequest request = new DefaultFullBinaryMemcacheRequest(key, Unpooled.EMPTY_BUFFER, msg.content());\n-\n         request.setOpcode(OP_APPEND);\n         request.setKeyLength(keyLength);\n         request.setCAS(msg.cas());\n@@ -400,7 +386,6 @@ public class KeyValueHandler\n         String key = msg.key();\n         short keyLength = (short) key.length();\n         BinaryMemcacheRequest request = new DefaultFullBinaryMemcacheRequest(key, Unpooled.EMPTY_BUFFER, msg.content());\n-\n         request.setOpcode(OP_PREPEND);\n         request.setKeyLength(keyLength);\n         request.setCAS(msg.cas());\n@@ -408,15 +393,13 @@ public class KeyValueHandler\n         return request;\n     }\n \n+\n     @Override\n-    protected CouchbaseResponse decodeResponse(final ChannelHandlerContext ctx, final FullBinaryMemcacheResponse msg)\n-        throws Exception {\n+    protected CouchbaseResponse decodeResponse(final ChannelHandlerContext ctx, final FullBinaryMemcacheResponse msg) throws Exception {\n         BinaryRequest request = currentRequest();\n-\n         if (request.opaque() != msg.getOpaque()) {\n             throw new IllegalStateException(\"Opaque values for \" + msg.getClass() + \" do not match.\");\n         }\n-\n         ResponseStatus status = convertStatus(msg.getStatus());\n \n         // Release request content from external resources if not retried again.\n@@ -427,13 +410,13 @@ public class KeyValueHandler\n             } else if (request instanceof AppendRequest) {\n                 content = ((AppendRequest) request).content();\n             } else if (request instanceof PrependRequest) {\n-                content = ((PrependRequest) request).content();\n-            }\n+                       content = ((PrependRequest) request).content();\n+                   }\n+\n             if (content != null && content.refCnt() > 0) {\n                 content.release();\n             }\n         }\n-\n         CouchbaseResponse response;\n         ByteBuf content = msg.content().retain();\n         long cas = msg.getCAS();\n@@ -449,42 +432,62 @@ public class KeyValueHandler\n             }\n             response = new GetResponse(status, cas, flags, bucket, content, request);\n         } else if (request instanceof GetBucketConfigRequest) {\n-            response = new GetBucketConfigResponse(status, bucket, content,\n-                ((GetBucketConfigRequest) request).hostname());\n+            response = new GetBucketConfigResponse(status, bucket, content, ((GetBucketConfigRequest) request).hostname());\n         } else if (request instanceof InsertRequest) {\n-            response = new InsertResponse(status, cas, bucket, content, request);\n-        } else if (request instanceof UpsertRequest) {\n-            response = new UpsertResponse(status, cas, bucket, content, request);\n-        } else if (request instanceof ReplaceRequest) {\n-            response = new ReplaceResponse(status, cas, bucket, content, request);\n-        } else if (request instanceof RemoveRequest) {\n-            response = new RemoveResponse(status, cas, bucket, content, request);\n-        } else if (request instanceof CounterRequest) {\n-            long value = status.isSuccess() ? content.readLong() : 0;\n-            if (content != null && content.refCnt() > 0) {\n-                content.release();\n-            }\n-            response = new CounterResponse(status, bucket, value, cas, request);\n-        } else if (request instanceof UnlockRequest) {\n-            response = new UnlockResponse(status, bucket, content, request);\n-        } else if (request instanceof TouchRequest) {\n-            response = new TouchResponse(status, bucket, content, request);\n-        } else if (request instanceof ObserveRequest) {\n-            byte observed = status.isSuccess()\n-                ? content.getByte(content.getShort(2) + 4) : ObserveResponse.ObserveStatus.UNKNOWN.value();\n-            if (content != null && content.refCnt() > 0) {\n-                content.release();\n-            }\n-            response = new ObserveResponse(status, observed, ((ObserveRequest) request).master(), bucket, request);\n-        } else if (request instanceof AppendRequest) {\n-            response = new AppendResponse(status, cas, bucket, content, request);\n-        } else if (request instanceof PrependRequest) {\n-            response = new PrependResponse(status, cas, bucket, content, request);\n-        } else {\n-            throw new IllegalStateException(\"Unhandled request/response pair: \" + request.getClass() + \"/\"\n-                + msg.getClass());\n-        }\n-\n+                   response = new InsertResponse(status,\n+                       cas,\n+                       bucket,\n+                       content,\n+                       request);\n+               } else if (request instanceof UpsertRequest) {\n+                   response = new UpsertResponse(status,\n+                       cas,\n+                       bucket,\n+                       content,\n+                       request);\n+               } else if (request instanceof ReplaceRequest) {\n+                          response = new ReplaceResponse(status,\n+                              cas,\n+                              bucket,\n+                              content,\n+                              request);\n+                      } else if (request instanceof RemoveRequest) {\n+                          response = new RemoveResponse(status,\n+                              cas,\n+                              bucket,\n+                              content,\n+                              request);\n+                      } else if (request instanceof CounterRequest) {\n+                                 long value = status.isSuccess() ? content.readLong() : 0;\n+                                 if (content != null && content.refCnt() > 0) {\n+                                     content.release();\n+                                 }\n+                                 response = new CounterResponse(status, bucket, value, cas, request);\n+                             } else if (request instanceof UnlockRequest) {\n+                                 response = new UnlockResponse(status, bucket, content, request);\n+                             } else if (request instanceof TouchRequest) {\n+                                        response = new TouchResponse(status, bucket, content, request);\n+                                    } else if (request instanceof ObserveRequest) {\n+                                        byte observed = status.isSuccess() ? content.getByte(content.getShort(2) + 4) : ObserveResponse.ObserveStatus.UNKNOWN.value();\n+                                        if (content != null && content.refCnt() > 0) {\n+                                            content.release();\n+                                        }\n+                                        response = new ObserveResponse(status, observed, ((ObserveRequest) request).master(), bucket, request);\n+                                    } else if (request instanceof AppendRequest) {\n+                                               response = new AppendResponse(status,\n+                                                   cas,\n+                                                   bucket,\n+                                                   content,\n+                                                   request);\n+                                           } else if (request instanceof PrependRequest) {\n+                                               response = new PrependResponse(status,\n+                                                   cas,\n+                                                   bucket,\n+                                                   content,\n+                                                   request);\n+                                           } else {\n+                                                      throw new IllegalStateException(\"Unhandled request/response pair: \" + request.getClass() + \"/\" + msg.getClass());\n+                                           }\n         finishedDecoding();\n         return response;\n     }\n@@ -494,17 +497,18 @@ public class KeyValueHandler\n      *\n      * @param request the request to side effect on.\n      */\n+\n+\n     @Override\n     protected void sideEffectRequestToCancel(final BinaryRequest request) {\n         super.sideEffectRequestToCancel(request);\n-\n         if (request instanceof BinaryStoreRequest) {\n             ((BinaryStoreRequest) request).content().release();\n         } else if (request instanceof AppendRequest) {\n             ((AppendRequest) request).content().release();\n         } else if (request instanceof PrependRequest) {\n-            ((PrependRequest) request).content().release();\n-        }\n+                   ((PrependRequest) request).content().release();\n+               }\n     }\n \n     /**\n@@ -513,39 +517,39 @@ public class KeyValueHandler\n      * @param status the status to convert.\n      * @return the converted response status.\n      */\n+\n     private static ResponseStatus convertStatus(final short status) {\n-        switch (status) {\n-            case SUCCESS:\n-                return ResponseStatus.SUCCESS;\n-            case ERR_EXISTS:\n-                return ResponseStatus.EXISTS;\n-            case ERR_NOT_FOUND:\n-                return ResponseStatus.NOT_EXISTS;\n-            case ERR_NOT_MY_VBUCKET:\n-                return ResponseStatus.RETRY;\n-            case ERR_NOT_STORED:\n-                return ResponseStatus.NOT_STORED;\n-            case ERR_2BIG:\n-                return ResponseStatus.TOO_BIG;\n-            case ERR_TEMP_FAIL:\n-                return ResponseStatus.TEMPORARY_FAILURE;\n-            case ERR_BUSY:\n-                return ResponseStatus.TEMPORARY_FAILURE;\n-            case ERR_NO_MEM:\n-                return ResponseStatus.OUT_OF_MEMORY;\n-            case ERR_UNKNOWN_COMMAND:\n-                return ResponseStatus.COMMAND_UNAVAILABLE;\n-            case ERR_NOT_SUPPORTED:\n-                return ResponseStatus.COMMAND_UNAVAILABLE;\n-            case ERR_INTERNAL:\n-                return ResponseStatus.INTERNAL_ERROR;\n-            case ERR_INVAL:\n-                return ResponseStatus.INVALID_ARGUMENTS;\n-            case ERR_DELTA_BADVAL:\n-                return ResponseStatus.INVALID_ARGUMENTS;\n-            default:\n-                return ResponseStatus.FAILURE;\n+        switch(status) {\n+                       case SUCCESS:\n+                       return ResponseStatus.SUCCESS;\n+                       case ERR_EXISTS:\n+            return ResponseStatus.EXISTS;\n+                       case ERR_NOT_FOUND:\n+            return ResponseStatus.NOT_EXISTS;\n+                       case ERR_NOT_MY_VBUCKET:\n+            return ResponseStatus.RETRY;\n+                       case ERR_NOT_STORED:\n+            return ResponseStatus.NOT_STORED;\n+                       case ERR_2BIG:\n+            return ResponseStatus.TOO_BIG;\n+                       case ERR_TEMP_FAIL:\n+            return ResponseStatus.TEMPORARY_FAILURE;\n+                       case ERR_BUSY:\n+            return ResponseStatus.TEMPORARY_FAILURE;\n+                       case ERR_NO_MEM:\n+            return ResponseStatus.OUT_OF_MEMORY;\n+                       case ERR_UNKNOWN_COMMAND:\n+            return ResponseStatus.COMMAND_UNAVAILABLE;\n+                       case ERR_NOT_SUPPORTED:\n+            return ResponseStatus.COMMAND_UNAVAILABLE;\n+                       case ERR_INTERNAL:\n+            return ResponseStatus.INTERNAL_ERROR;\n+                       case ERR_INVAL:\n+            return ResponseStatus.INVALID_ARGUMENTS;\n+                       case ERR_DELTA_BADVAL:\n+            return ResponseStatus.INVALID_ARGUMENTS;\n+                       default:\n+            return ResponseStatus.FAILURE;\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 179
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "130",
                    "column": "95",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "130",
                    "column": "110",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "',' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "column": "1",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/41/KeyValueHandler.java\nindex ad2c8306705..b56c8e10e73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/41/KeyValueHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/41/KeyValueHandler.java\n@@ -127,7 +127,8 @@ public class KeyValueHandler\n      * @param responseBuffer the {@link RingBuffer} to push responses into.\n      * @param queue the queue which holds all outstanding open requests.\n      */\n-    KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, Queue<BinaryRequest> queue, boolean isTransient) {\n+    KeyValueHandler(AbstractEndpoint endpoint, EventSink<ResponseEvent> responseBuffer, Queue< BinaryRequest>queue\n+,boolean isTransient) {\n         super(endpoint, responseBuffer, queue, isTransient);\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
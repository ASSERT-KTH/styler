{
    "project_name": "neo4j-neo4j",
    "error_id": "2827",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2827/BatchInserter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2827/BatchInserter.java\nindex cfa796deec7..785b25b082e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2827/BatchInserter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2827/BatchInserter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.batchinsert;\n \n import java.util.Map;\n@@ -48,23 +49,22 @@ public interface BatchInserter extends AutoCloseable\n      * properties supplied.\n      *\n      * @param properties a map containing properties or <code>null</code> if no\n-     * properties should be added.\n-     * @param labels a list of labels to initially create the node with.\n-     *\n+     *                   properties should be added.\n+     * @param labels     a list of labels to initially create the node with.\n      * @return The id of the created node.\n      */\n-    long createNode( Map<String,Object> properties, Label... labels );\n+    long createNode(Map<String, Object> properties, Label... labels);\n \n     /**\n      * Creates a node with supplied id and properties. If a node with the given\n      * id exist a runtime exception will be thrown.\n      *\n-     * @param id the id of the node to create.\n+     * @param id         the id of the node to create.\n      * @param properties map containing properties or <code>null</code> if no\n-     * properties should be added.\n-     * @param labels a list of labels to initially create the node with.\n+     *                   properties should be added.\n+     * @param labels     a list of labels to initially create the node with.\n      */\n-    void createNode( long id, Map<String,Object> properties, Label... labels );\n+    void createNode(long id, Map<String, Object> properties, Label... labels);\n \n     /**\n      * Checks if a node with the given id exists.\n@@ -72,7 +72,7 @@ public interface BatchInserter extends AutoCloseable\n      * @param nodeId the id of the node.\n      * @return <code>true</code> if the node exists.\n      */\n-    boolean nodeExists( long nodeId );\n+    boolean nodeExists(long nodeId);\n \n     /**\n      * Sets the properties of a node. This method will remove any properties\n@@ -82,42 +82,42 @@ public interface BatchInserter extends AutoCloseable\n      * of the node. This method will delete any existing properties so using it\n      * together with {@link #getNodeProperties(long)} will have bad performance.\n      *\n-     * @param node the id of the node.\n+     * @param node       the id of the node.\n      * @param properties map containing the properties or <code>null</code> to\n-     * clear all properties.\n+     *                   clear all properties.\n      */\n-    void setNodeProperties( long node, Map<String,Object> properties );\n+    void setNodeProperties(long node, Map<String, Object> properties);\n \n     /**\n      * Returns true iff the node with id {@code node} has a property with name\n      * {@code propertyName}.\n      *\n-     * @param node The node id of the node to check.\n+     * @param node         The node id of the node to check.\n      * @param propertyName The property name to check for\n      * @return True if the node has the named property - false otherwise.\n      */\n-    boolean nodeHasProperty( long node, String propertyName );\n+    boolean nodeHasProperty(long node, String propertyName);\n \n     /**\n      * Replaces any existing labels for the given node with the supplied list of labels.\n      *\n-     * @param node the node to set labels for.\n+     * @param node   the node to set labels for.\n      * @param labels the labels to set for the node.\n      */\n-    void setNodeLabels( long node, Label... labels );\n+    void setNodeLabels(long node, Label... labels);\n \n     /**\n      * @param node the node to get labels for.\n      * @return all labels for the given node.\n      */\n-    Iterable<Label> getNodeLabels( long node );\n+    Iterable<Label> getNodeLabels(long node);\n \n     /**\n-     * @param node the node to check.\n+     * @param node  the node to check.\n      * @param label the label to check.\n      * @return {@code true} if a node has a given label, otherwise {@code false}.\n      */\n-    boolean nodeHasLabel( long node, Label label );\n+    boolean nodeHasLabel(long node, Label label);\n \n     /**\n      * Returns true iff the relationship with id {@code relationship} has a\n@@ -126,40 +126,40 @@ public interface BatchInserter extends AutoCloseable\n      * @param relationship The relationship id of the relationship to check.\n      * @param propertyName The property name to check for\n      * @return True if the relationship has the named property - false\n-     *         otherwise.\n+     * otherwise.\n      */\n-    boolean relationshipHasProperty( long relationship, String propertyName );\n+    boolean relationshipHasProperty(long relationship, String propertyName);\n \n     /**\n      * Sets the property with name {@code propertyName} of node with id\n      * {@code node} to the value {@code propertyValue}. If the property exists\n      * it is updated, otherwise created.\n      *\n-     * @param node The node id of the node whose property is to be set\n-     * @param propertyName The name of the property to set\n+     * @param node          The node id of the node whose property is to be set\n+     * @param propertyName  The name of the property to set\n      * @param propertyValue The value of the property to set\n      */\n-    void setNodeProperty( long node, String propertyName, Object propertyValue );\n+    void setNodeProperty(long node, String propertyName, Object propertyValue);\n \n     /**\n      * Sets the property with name {@code propertyName} of relationship with id\n      * {@code relationship} to the value {@code propertyValue}. If the property\n      * exists it is updated, otherwise created.\n      *\n-     * @param relationship The node id of the relationship whose property is to\n-     *            be set\n-     * @param propertyName The name of the property to set\n+     * @param relationship  The node id of the relationship whose property is to\n+     *                      be set\n+     * @param propertyName  The name of the property to set\n      * @param propertyValue The value of the property to set\n      */\n-    void setRelationshipProperty( long relationship, String propertyName, Object propertyValue );\n+    void setRelationshipProperty(long relationship, String propertyName, Object propertyValue);\n+\n     /**\n      * Returns a map containing all the properties of this node.\n      *\n      * @param nodeId the id of the node.\n-     *\n      * @return map containing this node's properties.\n      */\n-    Map<String,Object> getNodeProperties( long nodeId );\n+    Map<String, Object> getNodeProperties(long nodeId);\n \n     /**\n      * Returns an iterable over all the relationship ids connected to node with\n@@ -168,7 +168,7 @@ public interface BatchInserter extends AutoCloseable\n      * @param nodeId the id of the node.\n      * @return iterable over the relationship ids connected to the node.\n      */\n-    Iterable<Long> getRelationshipIds( long nodeId );\n+    Iterable<Long> getRelationshipIds(long nodeId);\n \n     /**\n      * Returns an iterable of {@link BatchRelationship relationships} connected\n@@ -177,19 +177,19 @@ public interface BatchInserter extends AutoCloseable\n      * @param nodeId the id of the node.\n      * @return iterable over the relationships connected to the node.\n      */\n-    Iterable<BatchRelationship> getRelationships( long nodeId );\n+    Iterable<BatchRelationship> getRelationships(long nodeId);\n \n     /**\n      * Creates a relationship between two nodes of a specific type.\n      *\n-     * @param node1 the start node.\n-     * @param node2 the end node.\n-     * @param type relationship type.\n+     * @param node1      the start node.\n+     * @param node2      the end node.\n+     * @param type       relationship type.\n      * @param properties map containing properties or <code>null</code> if no\n-     * properties should be added.\n+     *                   properties should be added.\n      * @return the id of the created relationship.\n      */\n-    long createRelationship( long node1, long node2, RelationshipType type, Map<String,Object> properties );\n+    long createRelationship(long node1, long node2, RelationshipType type, Map<String, Object> properties);\n \n     /**\n      * Gets a relationship by id.\n@@ -197,7 +197,7 @@ public interface BatchInserter extends AutoCloseable\n      * @param relId the relationship id.\n      * @return a simple relationship wrapper for the relationship.\n      */\n-    BatchRelationship getRelationshipById( long relId );\n+    BatchRelationship getRelationshipById(long relId);\n \n     /**\n      * Sets the properties of a relationship. This method will remove any\n@@ -209,11 +209,11 @@ public interface BatchInserter extends AutoCloseable\n      * properties so using it together with\n      * {@link #getRelationshipProperties(long)} will have bad performance.\n      *\n-     * @param rel the id of the relationship.\n+     * @param rel        the id of the relationship.\n      * @param properties map containing the properties or <code>null</code> to\n-     * clear all properties.\n+     *                   clear all properties.\n      */\n-    void setRelationshipProperties( long rel, Map<String,Object> properties );\n+    void setRelationshipProperties(long rel, Map<String, Object> properties);\n \n     /**\n      * Returns a map containing all the properties of the relationships.\n@@ -221,52 +221,51 @@ public interface BatchInserter extends AutoCloseable\n      * @param relId the id of the relationship.\n      * @return map containing the relationship's properties.\n      */\n-    Map<String,Object> getRelationshipProperties( long relId );\n+    Map<String, Object> getRelationshipProperties(long relId);\n \n     /**\n      * Removes the property named {@code property} from the node with id\n      * {@code id}, if present.\n      *\n-     * @param node The id of the node from which to remove the property\n+     * @param node     The id of the node from which to remove the property\n      * @param property The name of the property\n      */\n-    void removeNodeProperty( long node, String property );\n+    void removeNodeProperty(long node, String property);\n \n     /**\n      * Removes the property named {@code property} from the relationship with id\n      * {@code id}, if present.\n      *\n      * @param relationship The id of the relationship from which to remove the\n-     *            property\n-     * @param property The name of the property\n+     *                     property\n+     * @param property     The name of the property\n      */\n-    void removeRelationshipProperty( long relationship, String property );\n+    void removeRelationshipProperty(long relationship, String property);\n \n     /**\n      * Returns an {@link IndexCreator} where details about the index to create can be\n      * specified. When all details have been entered {@link IndexCreator#create() create}\n      * must be called for it to actually be created.\n-     *\n+     * <p>\n      * Creating an index enables indexing for nodes with the specified label. The index will\n      * have the details supplied to the {@link IndexCreator returned index creator}.\n-     *\n+     * <p>\n      * Indexes created with the method are deferred until the batch inserter is shut down, at\n      * which point a background job will populate all indexes, i.e. the index\n      * is not available during the batch insertion itself. It is therefore advisable to\n      * create deferred indexes just before shutting down the batch inserter.\n      *\n      * @param label {@link Label label} on nodes to be indexed\n-     *\n      * @return an {@link IndexCreator} capable of providing details for, as well as creating\n      * an index for the given {@link Label label}.\n      */\n-    IndexCreator createDeferredSchemaIndex( Label label );\n+    IndexCreator createDeferredSchemaIndex(Label label);\n \n     /**\n      * Returns a {@link ConstraintCreator} where details about the constraint can be\n      * specified. When all details have been entered {@link ConstraintCreator#create()}\n      * must be called for it to actually be created.\n-     *\n+     * <p>\n      * Note that the batch inserter is not enforcing any constraint on the inserted data\n      * (also the one created with the batch inserter itself).  Although the batch inserter\n      * will verify all constraints on {@link #shutdown()} and fail in case of any constraint\n@@ -276,13 +275,13 @@ public interface BatchInserter extends AutoCloseable\n      * @return a {@link ConstraintCreator} capable of providing details for, as well as creating\n      * a constraint for the given {@linkplain Label label}.\n      */\n-    ConstraintCreator createDeferredConstraint( Label label );\n+    ConstraintCreator createDeferredConstraint(Label label);\n \n     /**\n      * Shuts down this batch inserter syncing all changes that are still only\n      * in memory to disk. Failing to invoke this method may leave the Neo4j\n      * store in a inconsistent state.\n-     *\n+     * <p>\n      * Note that this method will trigger population of all indexes, both\n      * those created in the batch insertion session, as well as those that existed\n      * previously. This may take a long time, depending on data size.\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
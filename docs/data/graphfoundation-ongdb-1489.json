{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1489",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1489/ImporterFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1489/ImporterFactory.java\nindex 3dc9027212b..bf9f3c0456b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1489/ImporterFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1489/ImporterFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import org.neo4j.commandline.admin.CommandFailed;\n@@ -27,21 +28,21 @@ import org.neo4j.kernel.configuration.Config;\n \n class ImporterFactory\n {\n-    Importer getImporterForMode( String mode, Args parsedArgs, Config config, OutsideWorld outsideWorld )\n-            throws IncorrectUsage, CommandFailed\n+  Importer getImporterForMode(String mode, Args parsedArgs, Config config, OutsideWorld outsideWorld)\n+      throws IncorrectUsage, CommandFailed\n+  {\n+    Importer importer;\n+    switch (mode)\n     {\n-        Importer importer;\n-        switch ( mode )\n-        {\n-        case \"database\":\n-            importer = new DatabaseImporter( parsedArgs, config, outsideWorld );\n-            break;\n-        case \"csv\":\n-            importer = new CsvImporter( parsedArgs, config, outsideWorld );\n-            break;\n-        default:\n-            throw new CommandFailed( \"Invalid mode specified.\" ); // This won't happen because mode is mandatory.\n-        }\n-        return importer;\n+      case \"database\":\n+        importer = new DatabaseImporter(parsedArgs, config, outsideWorld);\n+        break;\n+      case \"csv\":\n+        importer = new CsvImporter(parsedArgs, config, outsideWorld);\n+        break;\n+      default:\n+        throw new CommandFailed(\"Invalid mode specified.\"); // This won't happen because mode is mandatory.\n     }\n+    return importer;\n+  }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1489/ImporterFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1489/ImporterFactory.java\nindex 3dc9027212b..9273c45eb54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1489/ImporterFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1489/ImporterFactory.java\n@@ -27,9 +27,8 @@ import org.neo4j.kernel.configuration.Config;\n \n class ImporterFactory\n {\n-    Importer getImporterForMode( String mode, Args parsedArgs, Config config, OutsideWorld outsideWorld )\n-            throws IncorrectUsage, CommandFailed\n-    {\n+    Importer getImporterForMode( String mode, Args parsedArgs, Config config, OutsideWorld outsideWorld ) throws IncorrectUsage, CommandFailed\n+{\n         Importer importer;\n         switch ( mode )\n         {\n@@ -42,6 +41,7 @@ class ImporterFactory\n         default:\n             throw new CommandFailed( \"Invalid mode specified.\" ); // This won't happen because mode is mandatory.\n         }\n-        return importer;\n+\n+return importer;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1489/ImporterFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1489/ImporterFactory.java\nindex 3dc9027212b..63e7589403d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1489/ImporterFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1489/ImporterFactory.java\n@@ -27,8 +27,7 @@ import org.neo4j.kernel.configuration.Config;\n \n class ImporterFactory\n {\n-    Importer getImporterForMode( String mode, Args parsedArgs, Config config, OutsideWorld outsideWorld )\n-            throws IncorrectUsage, CommandFailed\n+    Importer getImporterForMode( String mode, Args parsedArgs, Config config, OutsideWorld outsideWorld ) throws IncorrectUsage, CommandFailed\n     {\n         Importer importer;\n         switch ( mode )\n@@ -42,6 +41,7 @@ class ImporterFactory\n         default:\n             throw new CommandFailed( \"Invalid mode specified.\" ); // This won't happen because mode is mandatory.\n         }\n+\n         return importer;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
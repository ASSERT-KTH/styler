{
    "project_name": "GluuFederation-oxCore",
    "error_id": "120",
    "information": {
        "errors": [
            {
                "line": "56",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        SchemaEntry schemaEntry = schemaService.getSchema();\n        if (schemaEntry == null) {\n\t        List<String> attributeNames = new ArrayList<String>();\n\t        attributeNames.add(name);\n\t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n\t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "57",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/120/AttributeService.java\nindex b8466db9af2..85581f564e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/120/AttributeService.java\n@@ -53,7 +53,7 @@ public abstract class AttributeService implements Serializable {\n     public String getDefaultSaml2Uri(String name) {\n         SchemaEntry schemaEntry = schemaService.getSchema();\n         if (schemaEntry == null) {\n-\t        List<String> attributeNames = new ArrayList<String>();\n+            List<String> attributeNames = new ArrayList<String>();\n \t        attributeNames.add(name);\n \t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n \t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/120/AttributeService.java\nindex b8466db9af2..bccc5d0ddbf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/120/AttributeService.java\n@@ -3,6 +3,7 @@\n  *\n  * Copyright (c) 2014, Gluu\n  */\n+\n package org.gluu.service;\n \n import java.io.Serializable;\n@@ -43,7 +44,7 @@ public abstract class AttributeService implements Serializable {\n     protected CacheService cacheService;\n \n     public List<GluuAttribute> getAttributesByAttribute(String attributeName, String attributeValue, String baseDn) {\n-        String[] targetArray = new String[] { attributeValue };\n+        String[] targetArray = new String[] {attributeValue};\n         Filter filter = Filter.createSubstringFilter(attributeName, null, targetArray, null);\n         List<GluuAttribute> result = ldapEntryManager.findEntries(baseDn, GluuAttribute.class, filter);\n \n@@ -53,13 +54,13 @@ public abstract class AttributeService implements Serializable {\n     public String getDefaultSaml2Uri(String name) {\n         SchemaEntry schemaEntry = schemaService.getSchema();\n         if (schemaEntry == null) {\n-\t        List<String> attributeNames = new ArrayList<String>();\n-\t        attributeNames.add(name);\n-\t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n-\t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n-\t        if (attributeTypeDefinition != null) {\n-\t            return String.format(\"urn:oid:%s\", attributeTypeDefinition.getOID());\n-\t        }\n+            List<String> attributeNames = new ArrayList<String>();\n+            attributeNames.add(name);\n+            List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n+            AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n+            if (attributeTypeDefinition != null) {\n+                return String.format(\"urn:oid:%s\", attributeTypeDefinition.getOID());\n+            }\n         }\n \n         return \"\";\n@@ -96,7 +97,7 @@ public abstract class AttributeService implements Serializable {\n     @SuppressWarnings(\"unchecked\")\n     public List<GluuAttribute> getAllAttributes(String baseDn) {\n         List<GluuAttribute> attributeList = (List<GluuAttribute>) cacheService.get(OxConstants.CACHE_ATTRIBUTE_NAME,\n-                OxConstants.CACHE_ATTRIBUTE_KEY_LIST);\n+            OxConstants.CACHE_ATTRIBUTE_KEY_LIST);\n         if (attributeList == null) {\n             attributeList = getAllAtributesImpl(baseDn);\n             cacheService.put(OxConstants.CACHE_ATTRIBUTE_NAME, OxConstants.CACHE_ATTRIBUTE_KEY_LIST, attributeList);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "57",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/120/AttributeService.java\nindex b8466db9af2..e7813caaf39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/120/AttributeService.java\n@@ -53,14 +53,14 @@ public abstract class AttributeService implements Serializable {\n     public String getDefaultSaml2Uri(String name) {\n         SchemaEntry schemaEntry = schemaService.getSchema();\n         if (schemaEntry == null) {\n-\t        List<String> attributeNames = new ArrayList<String>();\n+    List<String> attributeNames = new ArrayList<String>();\n \t        attributeNames.add(name);\n \t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n \t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n \t        if (attributeTypeDefinition != null) {\n \t            return String.format(\"urn:oid:%s\", attributeTypeDefinition.getOID());\n \t        }\n-        }\n+    }\n \n         return \"\";\n     }\n@@ -113,4 +113,4 @@ public abstract class AttributeService implements Serializable {\n \n     public abstract String getDnForAttribute(String inum);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/120/AttributeService.java\nindex b8466db9af2..b686f966494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/120/AttributeService.java\n@@ -8,16 +8,13 @@ package org.gluu.service;\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.inject.Inject;\n-\n import org.gluu.model.GluuAttribute;\n import org.gluu.model.SchemaEntry;\n import org.gluu.persist.PersistenceEntryManager;\n import org.gluu.search.filter.Filter;\n import org.gluu.util.OxConstants;\n import org.slf4j.Logger;\n-\n import com.unboundid.ldap.sdk.schema.AttributeTypeDefinition;\n \n /**\n@@ -26,6 +23,8 @@ import com.unboundid.ldap.sdk.schema.AttributeTypeDefinition;\n  * @author Oleksiy Tataryn\n  * @author Yuriy Movchan Date: 01/06/2015\n  */\n+\n+\n public abstract class AttributeService implements Serializable {\n \n     private static final long serialVersionUID = -1311784648561611479L;\n@@ -43,7 +42,7 @@ public abstract class AttributeService implements Serializable {\n     protected CacheService cacheService;\n \n     public List<GluuAttribute> getAttributesByAttribute(String attributeName, String attributeValue, String baseDn) {\n-        String[] targetArray = new String[] { attributeValue };\n+        String[] targetArray = new String[] {attributeValue};\n         Filter filter = Filter.createSubstringFilter(attributeName, null, targetArray, null);\n         List<GluuAttribute> result = ldapEntryManager.findEntries(baseDn, GluuAttribute.class, filter);\n \n@@ -53,13 +52,14 @@ public abstract class AttributeService implements Serializable {\n     public String getDefaultSaml2Uri(String name) {\n         SchemaEntry schemaEntry = schemaService.getSchema();\n         if (schemaEntry == null) {\n-\t        List<String> attributeNames = new ArrayList<String>();\n-\t        attributeNames.add(name);\n-\t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n-\t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n-\t        if (attributeTypeDefinition != null) {\n-\t            return String.format(\"urn:oid:%s\", attributeTypeDefinition.getOID());\n-\t        }\n+            List<String> attributeNames = new ArrayList<String>();\n+            attributeNames.add(name);\n+\n+            List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n+            AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n+            if (attributeTypeDefinition != null) {\n+                return String.format(\"urn:oid:%s\", attributeTypeDefinition.getOID());\n+            }\n         }\n \n         return \"\";\n@@ -70,6 +70,7 @@ public abstract class AttributeService implements Serializable {\n      *\n      * @return Attribute\n      */\n+\n     public GluuAttribute getAttributeByName(String name) {\n         return getAttributeByName(name, getAllAttributes());\n     }\n@@ -79,6 +80,7 @@ public abstract class AttributeService implements Serializable {\n      *\n      * @return Attribute\n      */\n+\n     public GluuAttribute getAttributeByName(String name, List<GluuAttribute> attributes) {\n         for (GluuAttribute attribute : attributes) {\n             if (attribute.getName().equals(name)) {\n@@ -95,11 +97,13 @@ public abstract class AttributeService implements Serializable {\n \n     @SuppressWarnings(\"unchecked\")\n     public List<GluuAttribute> getAllAttributes(String baseDn) {\n-        List<GluuAttribute> attributeList = (List<GluuAttribute>) cacheService.get(OxConstants.CACHE_ATTRIBUTE_NAME,\n-                OxConstants.CACHE_ATTRIBUTE_KEY_LIST);\n+        List<GluuAttribute> attributeList = (List<GluuAttribute>) cacheService.get(OxConstants.CACHE_ATTRIBUTE_NAME, OxConstants.CACHE_ATTRIBUTE_KEY_LIST);\n         if (attributeList == null) {\n             attributeList = getAllAtributesImpl(baseDn);\n-            cacheService.put(OxConstants.CACHE_ATTRIBUTE_NAME, OxConstants.CACHE_ATTRIBUTE_KEY_LIST, attributeList);\n+            cacheService.put(\n+                        OxConstants.CACHE_ATTRIBUTE_NAME,\n+                        OxConstants.CACHE_ATTRIBUTE_KEY_LIST,\n+                        attributeList);\n         }\n \n         return attributeList;\n@@ -113,4 +117,4 @@ public abstract class AttributeService implements Serializable {\n \n     public abstract String getDnForAttribute(String inum);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "57",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/120/AttributeService.java\nindex b8466db9af2..85581f564e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/120/AttributeService.java\n@@ -53,7 +53,7 @@ public abstract class AttributeService implements Serializable {\n     public String getDefaultSaml2Uri(String name) {\n         SchemaEntry schemaEntry = schemaService.getSchema();\n         if (schemaEntry == null) {\n-\t        List<String> attributeNames = new ArrayList<String>();\n+            List<String> attributeNames = new ArrayList<String>();\n \t        attributeNames.add(name);\n \t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n \t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "57",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/120/AttributeService.java\nindex b8466db9af2..85581f564e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/120/AttributeService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/120/AttributeService.java\n@@ -53,7 +53,7 @@ public abstract class AttributeService implements Serializable {\n     public String getDefaultSaml2Uri(String name) {\n         SchemaEntry schemaEntry = schemaService.getSchema();\n         if (schemaEntry == null) {\n-\t        List<String> attributeNames = new ArrayList<String>();\n+            List<String> attributeNames = new ArrayList<String>();\n \t        attributeNames.add(name);\n \t        List<AttributeTypeDefinition> attributeTypes = schemaService.getAttributeTypeDefinitions(schemaEntry, attributeNames);\n \t        AttributeTypeDefinition attributeTypeDefinition = schemaService.getAttributeTypeDefinition(attributeTypes, name);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
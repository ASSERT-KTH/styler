{
    "project_name": "neo4j-neo4j",
    "error_id": "707",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/707/JvmChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/707/JvmChecker.java\nindex a170119d44b..38e3f78dbbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/707/JvmChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/707/JvmChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.info;\n \n import java.lang.management.MemoryUsage;\n@@ -36,17 +37,17 @@ public class JvmChecker\n {\n     private static final int SUPPORTED_FEATURE_VERSION = 11;\n     static final String INCOMPATIBLE_JVM_WARNING = \"You are using an unsupported Java runtime. Please\" +\n-            \" use Oracle(R) Java(TM) 11, OpenJDK(TM) 11.\";\n+      \" use Oracle(R) Java(TM) 11, OpenJDK(TM) 11.\";\n     static final String INCOMPATIBLE_JVM_VERSION_WARNING = \"You are using an unsupported version of \" +\n-            \"the Java runtime. Please use Oracle(R) Java(TM) 11 or OpenJDK(TM) 11.\";\n-    private static final Pattern SUPPORTED_JAVA_NAME_PATTERN = compile( \"(Java HotSpot\\\\(TM\\\\)|OpenJDK) (64-Bit Server|Server) VM\" );\n+      \"the Java runtime. Please use Oracle(R) Java(TM) 11 or OpenJDK(TM) 11.\";\n+    private static final Pattern SUPPORTED_JAVA_NAME_PATTERN = compile(\"(Java HotSpot\\\\(TM\\\\)|OpenJDK) (64-Bit Server|Server) VM\");\n     private static final String NO_SERIALIZATION_FILTER_WARNING = \"The version of the Java runtime you are using \" +\n-            \" does not include some important security features. Please use a JRE of version 8u121 or higher.\";\n+      \" does not include some important security features. Please use a JRE of version 8u121 or higher.\";\n \n     private final Log log;\n     private final JvmMetadataRepository jvmMetadataRepository;\n \n-    public JvmChecker( Log log, JvmMetadataRepository jvmMetadataRepository )\n+    public JvmChecker(Log log, JvmMetadataRepository jvmMetadataRepository)\n     {\n         this.log = log;\n         this.jvmMetadataRepository = jvmMetadataRepository;\n@@ -57,60 +58,58 @@ public class JvmChecker\n         String javaVmName = jvmMetadataRepository.getJavaVmName();\n         Runtime.Version javaVersion = jvmMetadataRepository.getJavaVersion();\n \n-        if ( !SUPPORTED_JAVA_NAME_PATTERN.matcher( javaVmName ).matches() )\n+        if (!SUPPORTED_JAVA_NAME_PATTERN.matcher(javaVmName).matches())\n         {\n-            log.warn( INCOMPATIBLE_JVM_WARNING );\n-        }\n-        else if ( javaVersion.feature() != SUPPORTED_FEATURE_VERSION )\n+            log.warn(INCOMPATIBLE_JVM_WARNING);\n+        } else if (javaVersion.feature() != SUPPORTED_FEATURE_VERSION)\n         {\n-            log.warn( INCOMPATIBLE_JVM_VERSION_WARNING );\n+            log.warn(INCOMPATIBLE_JVM_VERSION_WARNING);\n         }\n         List<String> jvmArguments = jvmMetadataRepository.getJvmInputArguments();\n         MemoryUsage heapMemoryUsage = jvmMetadataRepository.getHeapMemoryUsage();\n-        if ( missingOption( jvmArguments, \"-Xmx\" ) )\n+        if (missingOption(jvmArguments, \"-Xmx\"))\n         {\n-            log.warn( memorySettingWarning( max_heap_size, heapMemoryUsage.getMax() ) );\n+            log.warn(memorySettingWarning(max_heap_size, heapMemoryUsage.getMax()));\n         }\n-        if ( missingOption( jvmArguments, \"-Xms\" ) )\n+        if (missingOption(jvmArguments, \"-Xms\"))\n         {\n-            log.warn( memorySettingWarning( initial_heap_size, heapMemoryUsage.getInit() ) );\n+            log.warn(memorySettingWarning(initial_heap_size, heapMemoryUsage.getInit()));\n         }\n-        if ( !serializationFilterIsAvailable() )\n+        if (!serializationFilterIsAvailable())\n         {\n-            log.warn( NO_SERIALIZATION_FILTER_WARNING );\n+            log.warn(NO_SERIALIZATION_FILTER_WARNING);\n         }\n     }\n \n-    static String memorySettingWarning( Setting<?> setting, long currentUsage )\n+    static String memorySettingWarning(Setting<?> setting, long currentUsage)\n     {\n         return \"The \" + setting.name() + \" setting has not been configured. It is recommended that this \" +\n-                \"setting is always explicitly configured, to ensure the system has a balanced configuration. \" +\n-                \"Until then, a JVM computed heuristic of \" + currentUsage + \" bytes is used instead. \" +\n-                \"Run `neo4j-admin memrec` for memory configuration suggestions.\";\n+          \"setting is always explicitly configured, to ensure the system has a balanced configuration. \" +\n+          \"Until then, a JVM computed heuristic of \" + currentUsage + \" bytes is used instead. \" +\n+          \"Run `neo4j-admin memrec` for memory configuration suggestions.\";\n     }\n \n-    private static boolean missingOption( List<String> jvmArguments, String option )\n+    private static boolean missingOption(List<String> jvmArguments, String option)\n     {\n-        String normalizedOption = option.toUpperCase( Locale.ROOT );\n-        return jvmArguments.stream().noneMatch( o -> o.toUpperCase( Locale.ROOT ).startsWith( normalizedOption ) );\n+        String normalizedOption = option.toUpperCase(Locale.ROOT);\n+        return jvmArguments.stream().noneMatch(o -> o.toUpperCase(Locale.ROOT).startsWith(normalizedOption));\n     }\n \n     boolean serializationFilterIsAvailable()\n     {\n         //As part of JEP290 ObjectInputFilter was backported to JDK 8 in version 121, but under a different package.\n-        Stream<String> classNames = Stream.of( \"sun.misc.ObjectInputFilter\", \"java.io.ObjectInputFilter\" );\n-        return classNames.anyMatch( className ->\n+        Stream<String> classNames = Stream.of(\"sun.misc.ObjectInputFilter\", \"java.io.ObjectInputFilter\");\n+        return classNames.anyMatch(className ->\n         {\n             try\n             {\n-                Class.forName( className );\n-            }\n-            catch ( ClassNotFoundException e )\n+                Class.forName(className);\n+            } catch (ClassNotFoundException e)\n             {\n                 return false;\n             }\n             return true;\n-        } );\n+        });\n \n     }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
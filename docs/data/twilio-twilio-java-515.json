{
    "project_name": "twilio-twilio-java",
    "error_id": "515",
    "information": {
        "errors": [
            {
                "line": "224",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/515/MessageReader.java\nindex 4df08c28c70..07262f4dcfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/515/MessageReader.java\n@@ -221,7 +221,7 @@ public class MessageReader extends Reader<Message> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/515/MessageReader.java\nindex 4df08c28c70..1a0f4b76fea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/515/MessageReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account;\n@@ -221,7 +221,7 @@ public class MessageReader extends Reader<Message> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/515/MessageReader.java\nindex 4df08c28c70..50ae8b2ed15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/515/MessageReader.java\n@@ -33,6 +33,8 @@ public class MessageReader extends Reader<Message> {\n     /**\n      * Construct a new MessageReader.\n      */\n+\n+\n     public MessageReader() {\n     }\n \n@@ -42,6 +44,8 @@ public class MessageReader extends Reader<Message> {\n      * @param pathAccountSid The SID of the Account that created the resources to\n      *                       read\n      */\n+\n+\n     public MessageReader(final String pathAccountSid) {\n         this.pathAccountSid = pathAccountSid;\n     }\n@@ -52,6 +56,8 @@ public class MessageReader extends Reader<Message> {\n      * @param to Filter by messages sent to this number\n      * @return this\n      */\n+\n+\n     public MessageReader setTo(final com.twilio.type.PhoneNumber to) {\n         this.to = to;\n         return this;\n@@ -63,6 +69,8 @@ public class MessageReader extends Reader<Message> {\n      * @param to Filter by messages sent to this number\n      * @return this\n      */\n+\n+\n     public MessageReader setTo(final String to) {\n         return setTo(Promoter.phoneNumberFromString(to));\n     }\n@@ -73,6 +81,8 @@ public class MessageReader extends Reader<Message> {\n      * @param from Filter by from number\n      * @return this\n      */\n+\n+\n     public MessageReader setFrom(final com.twilio.type.PhoneNumber from) {\n         this.from = from;\n         return this;\n@@ -84,6 +94,8 @@ public class MessageReader extends Reader<Message> {\n      * @param from Filter by from number\n      * @return this\n      */\n+\n+\n     public MessageReader setFrom(final String from) {\n         return setFrom(Promoter.phoneNumberFromString(from));\n     }\n@@ -98,6 +110,8 @@ public class MessageReader extends Reader<Message> {\n      * @param absoluteDateSent Filter by date sent\n      * @return this\n      */\n+\n+\n     public MessageReader setDateSent(final DateTime absoluteDateSent) {\n         this.rangeDateSent = null;\n         this.absoluteDateSent = absoluteDateSent;\n@@ -114,6 +128,8 @@ public class MessageReader extends Reader<Message> {\n      * @param rangeDateSent Filter by date sent\n      * @return this\n      */\n+\n+\n     public MessageReader setDateSent(final Range<DateTime> rangeDateSent) {\n         this.absoluteDateSent = null;\n         this.rangeDateSent = rangeDateSent;\n@@ -126,6 +142,7 @@ public class MessageReader extends Reader<Message> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Message ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Message> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -137,14 +154,15 @@ public class MessageReader extends Reader<Message> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Message ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Message> firstPage(final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.API.toString(),\n-            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Messages.json\"\n+                              HttpMethod.GET,\n+                              Domains.API.toString(),\n+                              \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Messages.json\"\n         );\n \n         addQueryParams(request);\n@@ -158,15 +176,13 @@ public class MessageReader extends Reader<Message> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Message ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Message> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<Message> getPage(final String targetUrl,\n+                                 final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -177,13 +193,11 @@ public class MessageReader extends Reader<Message> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Message> nextPage(final Page<Message> page,\n                                   final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -194,13 +208,11 @@ public class MessageReader extends Reader<Message> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Message> previousPage(final Page<Message> page,\n                                       final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -211,9 +223,11 @@ public class MessageReader extends Reader<Message> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Message> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Message> pageForRequest(final TwilioRestClient client,\n+                                         final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Message read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -221,15 +235,11 @@ public class MessageReader extends Reader<Message> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"messages\",\n-            response.getContent(),\n-            Message.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"messages\", response.getContent(), Message.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -237,6 +247,8 @@ public class MessageReader extends Reader<Message> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (to != null) {\n             request.addQueryParam(\"To\", to.toString());\n",
            "diff_size": 55
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/515/MessageReader.java\nindex 4df08c28c70..07262f4dcfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/515/MessageReader.java\n@@ -221,7 +221,7 @@ public class MessageReader extends Reader<Message> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/515/MessageReader.java\nindex 4df08c28c70..7302e01cbef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/515/MessageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/515/MessageReader.java\n@@ -221,7 +221,8 @@ public class MessageReader extends Reader<Message> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
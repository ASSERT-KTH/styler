{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4402",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4402/IdReusabilityCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4402/IdReusabilityCondition.java\nindex d20640ae445..0dd364a8d00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4402/IdReusabilityCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4402/IdReusabilityCondition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.id;\n \n import java.util.function.BooleanSupplier;\n@@ -32,68 +33,67 @@ import org.neo4j.causalclustering.identity.MemberId;\n  */\n public class IdReusabilityCondition implements BooleanSupplier, LeaderListener\n {\n-    private static final BooleanSupplier ALWAYS_FALSE = () -> false;\n+  private static final BooleanSupplier ALWAYS_FALSE = () -> false;\n \n-    private CommandIndexTracker commandIndexTracker;\n-    private final RaftMachine raftMachine;\n-    private final MemberId myself;\n+  private CommandIndexTracker commandIndexTracker;\n+  private final RaftMachine raftMachine;\n+  private final MemberId myself;\n \n-    private volatile BooleanSupplier currentSupplier = ALWAYS_FALSE;\n+  private volatile BooleanSupplier currentSupplier = ALWAYS_FALSE;\n \n-    public IdReusabilityCondition( CommandIndexTracker commandIndexTracker, RaftMachine raftMachine, MemberId myself )\n-    {\n-        this.commandIndexTracker = commandIndexTracker;\n-        this.raftMachine = raftMachine;\n-        this.myself = myself;\n-        raftMachine.registerListener( this );\n-    }\n+  public IdReusabilityCondition(CommandIndexTracker commandIndexTracker, RaftMachine raftMachine, MemberId myself)\n+  {\n+    this.commandIndexTracker = commandIndexTracker;\n+    this.raftMachine = raftMachine;\n+    this.myself = myself;\n+    raftMachine.registerListener(this);\n+  }\n \n-    @Override\n-    public boolean getAsBoolean()\n-    {\n-        return currentSupplier.getAsBoolean();\n-    }\n+  @Override\n+  public boolean getAsBoolean()\n+  {\n+    return currentSupplier.getAsBoolean();\n+  }\n \n-    @Override\n-    public void onLeaderSwitch( LeaderInfo leaderInfo )\n+  @Override\n+  public void onLeaderSwitch(LeaderInfo leaderInfo)\n+  {\n+    if (myself.equals(leaderInfo.memberId()))\n     {\n-        if ( myself.equals( leaderInfo.memberId() ) )\n-        {\n-            // We just became leader\n-            currentSupplier = new LeaderIdReusabilityCondition( commandIndexTracker, raftMachine );\n-        }\n-        else\n-        {\n-            // We are not the leader\n-            currentSupplier = ALWAYS_FALSE;\n-        }\n+      // We just became leader\n+      currentSupplier = new LeaderIdReusabilityCondition(commandIndexTracker, raftMachine);\n+    } else\n+    {\n+      // We are not the leader\n+      currentSupplier = ALWAYS_FALSE;\n     }\n+  }\n \n-    private static class LeaderIdReusabilityCondition implements BooleanSupplier\n-    {\n-        private final CommandIndexTracker commandIndexTracker;\n-        private final long commandIdWhenBecameLeader;\n+  private static class LeaderIdReusabilityCondition implements BooleanSupplier\n+  {\n+    private final CommandIndexTracker commandIndexTracker;\n+    private final long commandIdWhenBecameLeader;\n \n-        private volatile boolean hasAppliedOldTransactions;\n+    private volatile boolean hasAppliedOldTransactions;\n \n-        LeaderIdReusabilityCondition( CommandIndexTracker commandIndexTracker, RaftMachine raftMachine )\n-        {\n-            this.commandIndexTracker = commandIndexTracker;\n+    LeaderIdReusabilityCondition(CommandIndexTracker commandIndexTracker, RaftMachine raftMachine)\n+    {\n+      this.commandIndexTracker = commandIndexTracker;\n \n-            // Get highest command id seen\n-            this.commandIdWhenBecameLeader = raftMachine.state().lastLogIndexBeforeWeBecameLeader();\n-        }\n+      // Get highest command id seen\n+      this.commandIdWhenBecameLeader = raftMachine.state().lastLogIndexBeforeWeBecameLeader();\n+    }\n \n-        @Override\n-        public boolean getAsBoolean()\n-        {\n-            // Once all transactions from previous term are applied we don't need to recheck with the CommandIndexTracker\n-            if ( !hasAppliedOldTransactions )\n-            {\n-                hasAppliedOldTransactions = commandIndexTracker.getAppliedCommandIndex() > commandIdWhenBecameLeader;\n-            }\n+    @Override\n+    public boolean getAsBoolean()\n+    {\n+      // Once all transactions from previous term are applied we don't need to recheck with the CommandIndexTracker\n+      if (!hasAppliedOldTransactions)\n+      {\n+        hasAppliedOldTransactions = commandIndexTracker.getAppliedCommandIndex() > commandIdWhenBecameLeader;\n+      }\n \n-            return hasAppliedOldTransactions;\n-        }\n+      return hasAppliedOldTransactions;\n     }\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4402/IdReusabilityCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4402/IdReusabilityCondition.java\nindex d20640ae445..00c7b8d8291 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4402/IdReusabilityCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4402/IdReusabilityCondition.java\n@@ -96,4 +96,4 @@ public class IdReusabilityCondition implements BooleanSupplier, LeaderListener\n             return hasAppliedOldTransactions;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
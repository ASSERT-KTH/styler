{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2229",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2229/Scanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2229/Scanner.java\nindex 93d7074ddd2..d7773f409b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2229/Scanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2229/Scanner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.util.function.Predicate;\n@@ -35,71 +36,71 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n  */\n public class Scanner\n {\n-    private Scanner()\n-    {\n-    }\n+  private Scanner()\n+  {\n+  }\n \n-    @SafeVarargs\n-    public static <R extends AbstractBaseRecord> ResourceIterable<R> scan( final RecordStore<R> store,\n-            final Predicate<? super R>... filters )\n-    {\n-        return scan( store, true, filters );\n-    }\n+  @SafeVarargs\n+  public static <R extends AbstractBaseRecord> ResourceIterable<R> scan(final RecordStore<R> store,\n+                                                                        final Predicate<? super R>... filters)\n+  {\n+    return scan(store, true, filters);\n+  }\n \n-    @SafeVarargs\n-    public static <R extends AbstractBaseRecord> ResourceIterable<R> scan( final RecordStore<R> store,\n-            final boolean forward, final Predicate<? super R>... filters )\n+  @SafeVarargs\n+  public static <R extends AbstractBaseRecord> ResourceIterable<R> scan(final RecordStore<R> store,\n+                                                                        final boolean forward, final Predicate<? super R>... filters)\n+  {\n+    return () -> new Scan<>(store, forward, filters);\n+  }\n+\n+  private static class Scan<R extends AbstractBaseRecord> extends PrefetchingResourceIterator<R>\n+  {\n+    private final PrimitiveLongIterator ids;\n+    private final RecordCursor<R> cursor;\n+    private final Predicate<? super R>[] filters;\n+\n+    Scan(RecordStore<R> store, boolean forward, final Predicate<? super R>... filters)\n     {\n-        return () -> new Scan<>( store, forward, filters );\n+      this.filters = filters;\n+      this.ids = new StoreIdIterator(store, forward);\n+      this.cursor = store.newRecordCursor(store.newRecord());\n+      cursor.acquire(0, RecordLoad.CHECK);\n     }\n \n-    private static class Scan<R extends AbstractBaseRecord> extends PrefetchingResourceIterator<R>\n+    @Override\n+    protected R fetchNextOrNull()\n     {\n-        private final PrimitiveLongIterator ids;\n-        private final RecordCursor<R> cursor;\n-        private final Predicate<? super R>[] filters;\n-\n-        Scan( RecordStore<R> store, boolean forward, final Predicate<? super R>... filters )\n+      while (ids.hasNext())\n+      {\n+        if (cursor.next(ids.next()))\n         {\n-            this.filters = filters;\n-            this.ids = new StoreIdIterator( store, forward );\n-            this.cursor = store.newRecordCursor( store.newRecord() );\n-            cursor.acquire( 0, RecordLoad.CHECK );\n-        }\n-\n-        @Override\n-        protected R fetchNextOrNull()\n-        {\n-            while ( ids.hasNext() )\n-            {\n-                if ( cursor.next( ids.next() ) )\n-                {\n-                    R record = cursor.get();\n-                    if ( passesFilters( record ) )\n-                    {\n-                        return record;\n-                    }\n-                }\n-            }\n-            return null;\n+          R record = cursor.get();\n+          if (passesFilters(record))\n+          {\n+            return record;\n+          }\n         }\n+      }\n+      return null;\n+    }\n \n-        private boolean passesFilters( R record )\n+    private boolean passesFilters(R record)\n+    {\n+      for (Predicate<? super R> filter : filters)\n+      {\n+        if (!filter.test(record))\n         {\n-            for ( Predicate<? super R> filter : filters )\n-            {\n-                if ( !filter.test( record ) )\n-                {\n-                    return false;\n-                }\n-            }\n-            return true;\n+          return false;\n         }\n+      }\n+      return true;\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-            cursor.close();\n-        }\n+    @Override\n+    public void close()\n+    {\n+      cursor.close();\n     }\n+  }\n }\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2229/Scanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2229/Scanner.java\nindex 93d7074ddd2..26a2ffdecd3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2229/Scanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2229/Scanner.java\n@@ -40,15 +40,13 @@ public class Scanner\n     }\n \n     @SafeVarargs\n-    public static <R extends AbstractBaseRecord> ResourceIterable<R> scan( final RecordStore<R> store,\n-            final Predicate<? super R>... filters )\n+    public static <R extends AbstractBaseRecord> ResourceIterable<R> scan( final RecordStore<R> store, final Predicate<? super R>... filters )\n     {\n         return scan( store, true, filters );\n     }\n \n     @SafeVarargs\n-    public static <R extends AbstractBaseRecord> ResourceIterable<R> scan( final RecordStore<R> store,\n-            final boolean forward, final Predicate<? super R>... filters )\n+    public static <R extends AbstractBaseRecord> ResourceIterable<R> scan( final RecordStore<R> store, final boolean forward, final Predicate<? super R>... filters )\n     {\n         return () -> new Scan<>( store, forward, filters );\n     }\n@@ -102,4 +100,4 @@ public class Scanner\n             cursor.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1310",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "256",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "259",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "406",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "421",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1310/ImportCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1310/ImportCommand.java\nindex 75493630aa8..32c7946eda9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1310/ImportCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1310/ImportCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.importer;\n \n import org.eclipse.collections.api.tuple.Pair;\n@@ -69,10 +70,10 @@ import static picocli.CommandLine.Help.Visibility.ALWAYS;\n import static picocli.CommandLine.Help.Visibility.NEVER;\n \n @Command(\n-        name = \"import\",\n-        description = \"Import a collection of CSV files.\"\n+  name = \"import\",\n+  description = \"Import a collection of CSV files.\"\n )\n-@SuppressWarnings( \"FieldMayBeFinal\" )\n+@SuppressWarnings(\"FieldMayBeFinal\")\n public class ImportCommand extends AbstractCommand\n {\n     /**\n@@ -83,133 +84,133 @@ public class ImportCommand extends AbstractCommand\n     private static final org.neo4j.csv.reader.Configuration DEFAULT_CSV_CONFIG = COMMAS;\n     private static final Configuration DEFAULT_IMPORTER_CONFIG = DEFAULT;\n \n-    @Option( names = \"--database\", description = \"Name of the database to import.\", defaultValue = DEFAULT_DATABASE_NAME,\n-            converter = DatabaseNameConverter.class )\n+    @Option(names = \"--database\", description = \"Name of the database to import.\", defaultValue = DEFAULT_DATABASE_NAME,\n+      converter = DatabaseNameConverter.class)\n     private NormalizedDatabaseName database;\n \n-    @Option( names = \"--additional-config\", paramLabel = \"<path>\", description = \"Configuration file to supply additional configuration in.\" )\n+    @Option(names = \"--additional-config\", paramLabel = \"<path>\", description = \"Configuration file to supply additional configuration in.\")\n     private Path additionalConfig;\n \n-    @Option( names = \"--report-file\", paramLabel = \"<path>\", defaultValue = DEFAULT_REPORT_FILE_NAME,\n-            description = \"File in which to store the report of the csv-import.\" )\n-    private Path reportFile = Path.of( DEFAULT_REPORT_FILE_NAME );\n-\n-    @Option( names = \"--id-type\", paramLabel = \"<STRING|INTEGER|ACTUAL>\", description = \"Each node must provide a unique id. This is used to find the \" +\n-            \"correct nodes when creating relationships. Possible values are:%n\" +\n-            \"  STRING: arbitrary strings for identifying nodes,%n\" +\n-            \"  INTEGER: arbitrary integer values for identifying nodes,%n\" +\n-            \"  ACTUAL: (advanced) actual node ids.%n\" +\n-            \"For more information on id handling, please see the Neo4j Manual: \" +\n-            \"https://neo4j.com/docs/operations-manual/current/tools/import/\" )\n+    @Option(names = \"--report-file\", paramLabel = \"<path>\", defaultValue = DEFAULT_REPORT_FILE_NAME,\n+      description = \"File in which to store the report of the csv-import.\")\n+    private Path reportFile = Path.of(DEFAULT_REPORT_FILE_NAME);\n+\n+    @Option(names = \"--id-type\", paramLabel = \"<STRING|INTEGER|ACTUAL>\", description = \"Each node must provide a unique id. This is used to find the \" +\n+      \"correct nodes when creating relationships. Possible values are:%n\" +\n+      \"  STRING: arbitrary strings for identifying nodes,%n\" +\n+      \"  INTEGER: arbitrary integer values for identifying nodes,%n\" +\n+      \"  ACTUAL: (advanced) actual node ids.%n\" +\n+      \"For more information on id handling, please see the Neo4j Manual: \" +\n+      \"https://neo4j.com/docs/operations-manual/current/tools/import/\")\n     private IdType idType = IdType.STRING;\n \n-    @Option( names = \"--input-encoding\", paramLabel = \"<character-set>\", description = \"Character set that input data is encoded in.\" )\n+    @Option(names = \"--input-encoding\", paramLabel = \"<character-set>\", description = \"Character set that input data is encoded in.\")\n     private Charset inputEncoding = StandardCharsets.UTF_8;\n \n-    @Option( names = \"--ignore-extra-columns\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"If un-specified columns should be ignored during the import.\" )\n+    @Option(names = \"--ignore-extra-columns\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"If un-specified columns should be ignored during the import.\")\n     private boolean ignoreExtraColumns;\n \n-    @Option( names = \"--multiline-fields\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not fields from input source can span multiple lines, i.e. contain newline characters.\" )\n+    @Option(names = \"--multiline-fields\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not fields from input source can span multiple lines, i.e. contain newline characters.\")\n     private boolean multilineFields = DEFAULT_CSV_CONFIG.multilineFields();\n \n-    @Option( names = \"--ignore-empty-strings\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not empty string fields, i.e. \\\"\\\" from input source are ignored, i.e. treated as null.\" )\n+    @Option(names = \"--ignore-empty-strings\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not empty string fields, i.e. \\\"\\\" from input source are ignored, i.e. treated as null.\")\n     private boolean ignoreEmptyStrings = DEFAULT_CSV_CONFIG.emptyQuotedStringsAsNull();\n \n-    @Option( names = \"--trim-strings\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not strings should be trimmed for whitespaces.\" )\n+    @Option(names = \"--trim-strings\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not strings should be trimmed for whitespaces.\")\n     private boolean trimStrings = DEFAULT_CSV_CONFIG.trimStrings();\n \n-    @Option( names = \"--legacy-style-quoting\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not backslash-escaped quote e.g. \\\\\\\" is interpreted as inner quote.\" )\n+    @Option(names = \"--legacy-style-quoting\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not backslash-escaped quote e.g. \\\\\\\" is interpreted as inner quote.\")\n     private boolean legacyStyleQuoting = DEFAULT_CSV_CONFIG.legacyStyleQuoting();\n \n-    @Option( names = \"--delimiter\", paramLabel = \"<char>\", converter = EscapedCharacterConverter.class,\n-            description = \"Delimiter character between values in CSV data. \" +\n-                    \"Also accepts 'TAB' and e.g. 'U+20AC' for specifying character using unicode.\" )\n+    @Option(names = \"--delimiter\", paramLabel = \"<char>\", converter = EscapedCharacterConverter.class,\n+      description = \"Delimiter character between values in CSV data. \" +\n+        \"Also accepts 'TAB' and e.g. 'U+20AC' for specifying character using unicode.\")\n     private char delimiter = DEFAULT_CSV_CONFIG.delimiter();\n \n-    @Option( names = \"--array-delimiter\", paramLabel = \"<char>\", converter = EscapedCharacterConverter.class,\n-            description = \"Delimiter character between array elements within a value in CSV data. \" +\n-                    \"Also accepts 'TAB' and e.g. 'U+20AC' for specifying character using unicode.\" )\n+    @Option(names = \"--array-delimiter\", paramLabel = \"<char>\", converter = EscapedCharacterConverter.class,\n+      description = \"Delimiter character between array elements within a value in CSV data. \" +\n+        \"Also accepts 'TAB' and e.g. 'U+20AC' for specifying character using unicode.\")\n     private char arrayDelimiter = DEFAULT_CSV_CONFIG.arrayDelimiter();\n \n-    @Option( names = \"--quote\", paramLabel = \"<char>\", converter = EscapedCharacterConverter.class,\n-            description = \"Character to treat as quotation character for values in CSV data. Quotes can be escaped as per RFC 4180 by doubling them, \" +\n-                    \"for example \\\"\\\" would be interpreted as a literal \\\". You cannot escape using \\\\.\" )\n+    @Option(names = \"--quote\", paramLabel = \"<char>\", converter = EscapedCharacterConverter.class,\n+      description = \"Character to treat as quotation character for values in CSV data. Quotes can be escaped as per RFC 4180 by doubling them, \" +\n+        \"for example \\\"\\\" would be interpreted as a literal \\\". You cannot escape using \\\\.\")\n     private char quote = DEFAULT_CSV_CONFIG.quotationCharacter();\n \n-    @Option( names = \"--read-buffer-size\", paramLabel = \"<size>\", converter = ByteUnitConverter.class,\n-            description = \"Size of each buffer for reading input data. \" +\n-                    \"The size has to at least be large enough to hold the biggest single value in the input data. \" +\n-                    \"The value can be a plain number or a byte units string, e.g. 128k, 1m.\" )\n+    @Option(names = \"--read-buffer-size\", paramLabel = \"<size>\", converter = ByteUnitConverter.class,\n+      description = \"Size of each buffer for reading input data. \" +\n+        \"The size has to at least be large enough to hold the biggest single value in the input data. \" +\n+        \"The value can be a plain number or a byte units string, e.g. 128k, 1m.\")\n     private long bufferSize = DEFAULT_CSV_CONFIG.bufferSize();\n \n-    @Option( names = \"--max-memory\", paramLabel = \"<size>\", defaultValue = \"90%\", converter = MemoryConverter.class,\n-            description = \"Maximum memory that neo4j-admin can use for various data structures and caching to improve performance. \" +\n-                    \"Values can be plain numbers, like 10000000 or e.g. 20G for 20 gigabyte, or even e.g. 70%%.\" )\n+    @Option(names = \"--max-memory\", paramLabel = \"<size>\", defaultValue = \"90%\", converter = MemoryConverter.class,\n+      description = \"Maximum memory that neo4j-admin can use for various data structures and caching to improve performance. \" +\n+        \"Values can be plain numbers, like 10000000 or e.g. 20G for 20 gigabyte, or even e.g. 70%%.\")\n     private long maxMemory;\n \n-    @Option( names = \"--high-io\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Ignore environment-based heuristics, and assume that the target storage subsystem can support parallel IO with high throughput.\" )\n+    @Option(names = \"--high-io\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Ignore environment-based heuristics, and assume that the target storage subsystem can support parallel IO with high throughput.\")\n     // Intentionally made a Boolean such that if there's no explicit decision from config then the value will be based on information from the target device\n     private Boolean highIo;\n \n-    @Option( names = \"--cache-on-heap\", showDefaultValue = ALWAYS, arity = \"0..1\", paramLabel = \"<true/false>\",\n-            description = \"(advanced) Whether or not to allow allocating memory for the cache on heap. \" +\n-                    \"If 'false' then caches will still be allocated off-heap, \" +\n-                    \"but the additional free memory inside the JVM will not be allocated for the caches. \" +\n-                    \"Use this option to be able to have better control over the heap memory.\" )\n+    @Option(names = \"--cache-on-heap\", showDefaultValue = ALWAYS, arity = \"0..1\", paramLabel = \"<true/false>\",\n+      description = \"(advanced) Whether or not to allow allocating memory for the cache on heap. \" +\n+        \"If 'false' then caches will still be allocated off-heap, \" +\n+        \"but the additional free memory inside the JVM will not be allocated for the caches. \" +\n+        \"Use this option to be able to have better control over the heap memory.\")\n     private boolean cacheOnHeap = DEFAULT_IMPORTER_CONFIG.allowCacheAllocationOnHeap();\n \n-    @Option( names = \"--processors\", paramLabel = \"<num>\",\n-            description = \"(advanced) Max number of processors used by the importer. Defaults to the number of available processors reported by the JVM. \" +\n-                    \"There is a certain amount of minimum threads needed so for that reason there is no lower bound for this \" +\n-                    \"value. For optimal performance this value shouldn't be greater than the number of available processors.\" )\n+    @Option(names = \"--processors\", paramLabel = \"<num>\",\n+      description = \"(advanced) Max number of processors used by the importer. Defaults to the number of available processors reported by the JVM. \" +\n+        \"There is a certain amount of minimum threads needed so for that reason there is no lower bound for this \" +\n+        \"value. For optimal performance this value shouldn't be greater than the number of available processors.\")\n     private int processors = DEFAULT_IMPORTER_CONFIG.maxNumberOfProcessors();\n \n-    @Option( names = \"--bad-tolerance\", paramLabel = \"<num>\",\n-            description = \"Number of bad entries before the import is considered failed. This tolerance threshold is about relationships referring to \" +\n-                    \"missing nodes. Format errors in input data are still treated as errors\" )\n+    @Option(names = \"--bad-tolerance\", paramLabel = \"<num>\",\n+      description = \"Number of bad entries before the import is considered failed. This tolerance threshold is about relationships referring to \" +\n+        \"missing nodes. Format errors in input data are still treated as errors\")\n     private long badTolerance = 1000;\n \n-    @Option( names = \"--skip-bad-entries-logging\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not to skip logging bad entries detected during import.\" )\n+    @Option(names = \"--skip-bad-entries-logging\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not to skip logging bad entries detected during import.\")\n     private boolean skipBadEntriesLogging;\n \n-    @Option( names = \"--skip-bad-relationships\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not to skip importing relationships that refers to missing node ids, i.e. either start or end node id/group referring \" +\n-                    \"to node that wasn't specified by the node input data. Skipped relationships will be logged, containing at most number of entities \" +\n-                    \"specified by bad-tolerance, unless otherwise specified by skip-bad-entries-logging option.\" )\n+    @Option(names = \"--skip-bad-relationships\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not to skip importing relationships that refers to missing node ids, i.e. either start or end node id/group referring \" +\n+        \"to node that wasn't specified by the node input data. Skipped relationships will be logged, containing at most number of entities \" +\n+        \"specified by bad-tolerance, unless otherwise specified by skip-bad-entries-logging option.\")\n     private boolean skipBadRelationships;\n \n-    @Option( names = \"--skip-duplicate-nodes\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not to skip importing nodes that have the same id/group. In the event of multiple nodes within the same group having \" +\n-                    \"the same id, the first encountered will be imported whereas consecutive such nodes will be skipped. Skipped nodes will be logged, \" +\n-                    \"containing at most number of entities specified by bad-tolerance, unless otherwise specified by skip-bad-entries-logging option.\" )\n+    @Option(names = \"--skip-duplicate-nodes\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not to skip importing nodes that have the same id/group. In the event of multiple nodes within the same group having \" +\n+        \"the same id, the first encountered will be imported whereas consecutive such nodes will be skipped. Skipped nodes will be logged, \" +\n+        \"containing at most number of entities specified by bad-tolerance, unless otherwise specified by skip-bad-entries-logging option.\")\n     private boolean skipDuplicateNodes;\n \n-    @Option( names = \"--normalize-types\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Whether or not to normalize property types to Cypher types, e.g. 'int' becomes 'long' and 'float' becomes 'double'\" )\n+    @Option(names = \"--normalize-types\", arity = \"0..1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Whether or not to normalize property types to Cypher types, e.g. 'int' becomes 'long' and 'float' becomes 'double'\")\n     private boolean normalizeTypes = true;\n \n-    @Option( names = \"--nodes\", required = true, arity = \"1..*\", converter = NodeFilesConverter.class, paramLabel = \"[<label>[:<label>]...=]<files>\",\n-            description = \"Node CSV header and data. Multiple files will be logically seen as one big file from the perspective of the importer. The first \" +\n-                    \"line must contain the header. Multiple data sources like these can be specified in one import, where each data source has its \" +\n-                    \"own header.\" )\n+    @Option(names = \"--nodes\", required = true, arity = \"1..*\", converter = NodeFilesConverter.class, paramLabel = \"[<label>[:<label>]...=]<files>\",\n+      description = \"Node CSV header and data. Multiple files will be logically seen as one big file from the perspective of the importer. The first \" +\n+        \"line must contain the header. Multiple data sources like these can be specified in one import, where each data source has its \" +\n+        \"own header.\")\n     private List<NodeFilesGroup> nodes;\n \n-    @Option( names = \"--relationships\", arity = \"1..*\", converter = RelationsipFilesConverter.class, showDefaultValue = NEVER, paramLabel = \"[<type>=]<files>\",\n-            description = \"Relationship CSV header and data. Multiple files will be logically seen as one big file from the perspective of the importer. \" +\n-                    \"The first line must contain the header. Multiple data sources like these can be specified in one import, where each data source has \" +\n-                    \"its own header.\" )\n+    @Option(names = \"--relationships\", arity = \"1..*\", converter = RelationsipFilesConverter.class, showDefaultValue = NEVER, paramLabel = \"[<type>=]<files>\",\n+      description = \"Relationship CSV header and data. Multiple files will be logically seen as one big file from the perspective of the importer. \" +\n+        \"The first line must contain the header. Multiple data sources like these can be specified in one import, where each data source has \" +\n+        \"its own header.\")\n     private List<RelationshipFilesGroup> relationships = new ArrayList<>();\n \n-    public ImportCommand( ExecutionContext ctx )\n+    public ImportCommand(ExecutionContext ctx)\n     {\n-        super( ctx );\n+        super(ctx);\n     }\n \n     @Override\n@@ -218,48 +219,46 @@ public class ImportCommand extends AbstractCommand\n         try\n         {\n             final var databaseConfig = loadNeo4jConfig();\n-            final var databaseLayout = Neo4jLayout.of( databaseConfig ).databaseLayout( database.name() );\n+            final var databaseLayout = Neo4jLayout.of(databaseConfig).databaseLayout(database.name());\n             final var csvConfig = csvConfiguration();\n-            final var importConfig = importConfiguration( databaseLayout );\n+            final var importConfig = importConfiguration(databaseLayout);\n \n             final var importerBuilder = CsvImporter.builder()\n-                    .withDatabaseLayout( databaseLayout )\n-                    .withDatabaseConfig( databaseConfig )\n-                    .withFileSystem( ctx.fs() )\n-                    .withStdOut( ctx.out() )\n-                    .withStdErr( ctx.err() )\n-                    .withCsvConfig( csvConfig )\n-                    .withImportConfig( importConfig )\n-                    .withIdType( idType )\n-                    .withInputEncoding( inputEncoding )\n-                    .withReportFile( reportFile.toAbsolutePath() )\n-                    .withIgnoreExtraColumns( ignoreExtraColumns )\n-                    .withBadTolerance( badTolerance )\n-                    .withSkipBadRelationships( skipBadRelationships )\n-                    .withSkipDuplicateNodes( skipDuplicateNodes )\n-                    .withSkipBadEntriesLogging( skipBadEntriesLogging )\n-                    .withSkipBadRelationships( skipBadRelationships )\n-                    .withNormalizeTypes( normalizeTypes )\n-                    .withVerbose( verbose );\n-\n-            nodes.forEach( n -> {\n-                importerBuilder.addNodeFiles( n.key, n.files );\n-            } );\n-\n-            relationships.forEach( n -> {\n-                importerBuilder.addRelationshipFiles( n.key, n.files );\n-            } );\n+              .withDatabaseLayout(databaseLayout)\n+              .withDatabaseConfig(databaseConfig)\n+              .withFileSystem(ctx.fs())\n+              .withStdOut(ctx.out())\n+              .withStdErr(ctx.err())\n+              .withCsvConfig(csvConfig)\n+              .withImportConfig(importConfig)\n+              .withIdType(idType)\n+              .withInputEncoding(inputEncoding)\n+              .withReportFile(reportFile.toAbsolutePath())\n+              .withIgnoreExtraColumns(ignoreExtraColumns)\n+              .withBadTolerance(badTolerance)\n+              .withSkipBadRelationships(skipBadRelationships)\n+              .withSkipDuplicateNodes(skipDuplicateNodes)\n+              .withSkipBadEntriesLogging(skipBadEntriesLogging)\n+              .withSkipBadRelationships(skipBadRelationships)\n+              .withNormalizeTypes(normalizeTypes)\n+              .withVerbose(verbose);\n+\n+            nodes.forEach(n -> {\n+                importerBuilder.addNodeFiles(n.key, n.files);\n+            });\n+\n+            relationships.forEach(n -> {\n+                importerBuilder.addRelationshipFiles(n.key, n.files);\n+            });\n \n             final var importer = importerBuilder.build();\n             importer.doImport();\n-        }\n-        catch ( IllegalArgumentException e )\n+        } catch (IllegalArgumentException e)\n         {\n-            throw new CommandFailedException( e.getMessage(), e );\n-        }\n-        catch ( IOException e )\n+            throw new CommandFailedException(e.getMessage(), e);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -267,31 +266,31 @@ public class ImportCommand extends AbstractCommand\n     Config loadNeo4jConfig()\n     {\n         Config cfg = Config.newBuilder()\n-                .set( GraphDatabaseSettings.neo4j_home, ctx.homeDir().toAbsolutePath() )\n-                .fromFileNoThrow( ctx.confDir().resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .fromFileNoThrow( additionalConfig )\n-                .build();\n-        ConfigUtils.disableAllConnectors( cfg );\n+          .set(GraphDatabaseSettings.neo4j_home, ctx.homeDir().toAbsolutePath())\n+          .fromFileNoThrow(ctx.confDir().resolve(Config.DEFAULT_CONFIG_FILE_NAME))\n+          .fromFileNoThrow(additionalConfig)\n+          .build();\n+        ConfigUtils.disableAllConnectors(cfg);\n         return cfg;\n     }\n \n     private org.neo4j.csv.reader.Configuration csvConfiguration()\n     {\n         return DEFAULT_CSV_CONFIG.toBuilder()\n-                .withDelimiter( delimiter )\n-                .withArrayDelimiter( arrayDelimiter )\n-                .withQuotationCharacter( quote )\n-                .withMultilineFields( multilineFields )\n-                .withEmptyQuotedStringsAsNull( ignoreEmptyStrings )\n-                .withTrimStrings( trimStrings )\n-                .withLegacyStyleQuoting( legacyStyleQuoting )\n-                .withBufferSize( toIntExact( bufferSize ) )\n-                .build();\n+          .withDelimiter(delimiter)\n+          .withArrayDelimiter(arrayDelimiter)\n+          .withQuotationCharacter(quote)\n+          .withMultilineFields(multilineFields)\n+          .withEmptyQuotedStringsAsNull(ignoreEmptyStrings)\n+          .withTrimStrings(trimStrings)\n+          .withLegacyStyleQuoting(legacyStyleQuoting)\n+          .withBufferSize(toIntExact(bufferSize))\n+          .build();\n     }\n \n-    private org.neo4j.internal.batchimport.Configuration importConfiguration( DatabaseLayout databaseLayout )\n+    private org.neo4j.internal.batchimport.Configuration importConfiguration(DatabaseLayout databaseLayout)\n     {\n-        return new Configuration.Overridden( Configuration.defaultConfiguration( databaseLayout.databaseDirectory() ) )\n+        return new Configuration.Overridden(Configuration.defaultConfiguration(databaseLayout.databaseDirectory()))\n         {\n             @Override\n             public int maxNumberOfProcessors()\n@@ -321,93 +320,92 @@ public class ImportCommand extends AbstractCommand\n     }\n \n     @VisibleForTesting\n-    static RelationshipFilesGroup parseRelationshipFilesGroup( String str )\n+    static RelationshipFilesGroup parseRelationshipFilesGroup(String str)\n     {\n-        final var p = parseInputFilesGroup( str, String::trim );\n-        return new RelationshipFilesGroup( p.getOne(), p.getTwo() );\n+        final var p = parseInputFilesGroup(str, String::trim);\n+        return new RelationshipFilesGroup(p.getOne(), p.getTwo());\n     }\n \n     @VisibleForTesting\n-    static NodeFilesGroup parseNodeFilesGroup( String str )\n+    static NodeFilesGroup parseNodeFilesGroup(String str)\n     {\n-        final var p = parseInputFilesGroup( str, s -> stream( s.split( \":\" ) )\n-                .map( String::trim )\n-                .filter( x -> !x.isEmpty() )\n-                .collect( toSet() ) );\n-        return new NodeFilesGroup( p.getOne(), p.getTwo() );\n+        final var p = parseInputFilesGroup(str, s -> stream(s.split(\":\"))\n+          .map(String::trim)\n+          .filter(x -> !x.isEmpty())\n+          .collect(toSet()));\n+        return new NodeFilesGroup(p.getOne(), p.getTwo());\n     }\n \n-    private static <T> Pair<T, Path[]> parseInputFilesGroup( String str, Function<String, ? extends T> keyParser )\n+    private static <T> Pair<T, Path[]> parseInputFilesGroup(String str, Function<String, ? extends T> keyParser)\n     {\n-        final var i = str.indexOf( '=' );\n-        if ( i < 0 )\n+        final var i = str.indexOf('=');\n+        if (i < 0)\n         {\n-            return pair( keyParser.apply( \"\" ), parseFilesList( str ) );\n+            return pair(keyParser.apply(\"\"), parseFilesList(str));\n         }\n-        if ( i == 0 || i == str.length() - 1 )\n+        if (i == 0 || i == str.length() - 1)\n         {\n-            throw new IllegalArgumentException( \"illegal `=` position: \" + str );\n+            throw new IllegalArgumentException(\"illegal `=` position: \" + str);\n         }\n-        final var keyStr = str.substring( 0, i );\n-        final var filesStr = str.substring( i + 1 );\n-        final var key = keyParser.apply( keyStr );\n-        final var files = parseFilesList( filesStr );\n-        return pair( key, files );\n+        final var keyStr = str.substring(0, i);\n+        final var filesStr = str.substring(i + 1);\n+        final var key = keyParser.apply(keyStr);\n+        final var files = parseFilesList(filesStr);\n+        return pair(key, files);\n     }\n \n-    private static Path[] parseFilesList( String str )\n+    private static Path[] parseFilesList(String str)\n     {\n-        final var converter = Converters.regexFiles( true );\n-        return Converters.toFiles( MULTI_FILE_DELIMITER, s ->\n+        final var converter = Converters.regexFiles(true);\n+        return Converters.toFiles(MULTI_FILE_DELIMITER, s ->\n         {\n-            Validators.REGEX_FILE_EXISTS.validate( s );\n-            return converter.apply( s );\n-        } ).apply( str );\n+            Validators.REGEX_FILE_EXISTS.validate(s);\n+            return converter.apply(s);\n+        }).apply(str);\n     }\n \n     static class MemoryConverter implements ITypeConverter<Long>\n     {\n         @Override\n-        public Long convert( String value )\n+        public Long convert(String value)\n         {\n             value = value.trim();\n-            if ( value.endsWith( \"%\" ) )\n+            if (value.endsWith(\"%\"))\n             {\n-                int percent = Integer.parseInt( value.substring( 0, value.length() - 1 ) );\n-                long result = calculateMaxMemoryFromPercent( percent );\n-                if ( !canDetectFreeMemory() )\n+                int percent = Integer.parseInt(value.substring(0, value.length() - 1));\n+                long result = calculateMaxMemoryFromPercent(percent);\n+                if (!canDetectFreeMemory())\n                 {\n-                    System.err.println( \"WARNING: amount of free memory couldn't be detected so defaults to \" +\n-                            bytesToString( result ) + \". For optimal performance instead explicitly specify amount of \" +\n-                            \"memory that importer is allowed to use using --max-memory\" );\n+                    System.err.println(\"WARNING: amount of free memory couldn't be detected so defaults to \" +\n+                      bytesToString(result) + \". For optimal performance instead explicitly specify amount of \" +\n+                      \"memory that importer is allowed to use using --max-memory\");\n                 }\n                 return result;\n             }\n-            return parseLongWithUnit( value );\n+            return parseLongWithUnit(value);\n         }\n     }\n \n     static class EscapedCharacterConverter implements ITypeConverter<Character>\n     {\n         @Override\n-        public Character convert( String value )\n+        public Character convert(String value)\n         {\n-            return CHARACTER_CONVERTER.apply( value );\n+            return CHARACTER_CONVERTER.apply(value);\n         }\n     }\n \n     static class NodeFilesConverter implements ITypeConverter<NodeFilesGroup>\n     {\n         @Override\n-        public NodeFilesGroup convert( String value )\n+        public NodeFilesGroup convert(String value)\n         {\n             try\n             {\n-                return parseNodeFilesGroup( value );\n-            }\n-            catch ( Exception e )\n+                return parseNodeFilesGroup(value);\n+            } catch (Exception e)\n             {\n-                throw new CommandLine.TypeConversionException( format( \"Invalid nodes file: %s (%s)\", value, e ) );\n+                throw new CommandLine.TypeConversionException(format(\"Invalid nodes file: %s (%s)\", value, e));\n             }\n         }\n     }\n@@ -415,32 +413,31 @@ public class ImportCommand extends AbstractCommand\n     static class RelationsipFilesConverter implements ITypeConverter<InputFilesGroup<String>>\n     {\n         @Override\n-        public InputFilesGroup<String> convert( String value )\n+        public InputFilesGroup<String> convert(String value)\n         {\n             try\n             {\n-                return parseRelationshipFilesGroup( value );\n-            }\n-            catch ( Exception e )\n+                return parseRelationshipFilesGroup(value);\n+            } catch (Exception e)\n             {\n-                throw new CommandLine.TypeConversionException( format( \"Invalid relationships file: %s (%s)\", value, e ) );\n+                throw new CommandLine.TypeConversionException(format(\"Invalid relationships file: %s (%s)\", value, e));\n             }\n         }\n     }\n \n     static class NodeFilesGroup extends InputFilesGroup<Set<String>>\n     {\n-        NodeFilesGroup( Set<String> key, Path[] files )\n+        NodeFilesGroup(Set<String> key, Path[] files)\n         {\n-            super( key, files );\n+            super(key, files);\n         }\n     }\n \n     static class RelationshipFilesGroup extends InputFilesGroup<String>\n     {\n-        RelationshipFilesGroup( String key, Path[] files )\n+        RelationshipFilesGroup(String key, Path[] files)\n         {\n-            super( key, files );\n+            super(key, files);\n         }\n     }\n \n@@ -449,7 +446,7 @@ public class ImportCommand extends AbstractCommand\n         final T key;\n         final Path[] files;\n \n-        InputFilesGroup( T key, Path[] files )\n+        InputFilesGroup(T key, Path[] files)\n         {\n             this.key = key;\n             this.files = files;\n",
            "diff_size": 183
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1310/ImportCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1310/ImportCommand.java\nindex 75493630aa8..41f3616f414 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1310/ImportCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1310/ImportCommand.java\n@@ -455,4 +455,4 @@ public class ImportCommand extends AbstractCommand\n             this.files = files;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
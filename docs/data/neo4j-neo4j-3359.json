{
    "project_name": "neo4j-neo4j",
    "error_id": "3359",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3359/DurationArrayType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3359/DurationArrayType.java\nindex 09ceae19bf9..d42cbf94d16 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3359/DurationArrayType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3359/DurationArrayType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.util.Arrays;\n@@ -35,42 +36,42 @@ class DurationArrayType extends AbstractArrayType<DurationValue>\n     // long2Array (months)\n     // long3Array (days)\n \n-    DurationArrayType( byte typeId )\n+    DurationArrayType(byte typeId)\n     {\n-        super( ValueGroup.DURATION_ARRAY, typeId, ( o1, o2, i ) -> DurationType.compare(\n-                        o1.long0Array[i], o1.long1Array[i], o1.long2Array[i], o1.long3Array[i],\n-                        o2.long0Array[i], o2.long1Array[i], o2.long2Array[i], o2.long3Array[i] ),\n-                ( k, i ) -> DurationType.asValue( k.long0Array[i], k.long1Array[i], k.long2Array[i], k.long3Array[i] ),\n-                ( c, k, i ) -> DurationType.put( c, k.long0Array[i], k.long1Array[i], k.long2Array[i], k.long3Array[i] ),\n-                DurationType::read, DurationValue[]::new, ValueWriter.ArrayType.DURATION );\n+        super(ValueGroup.DURATION_ARRAY, typeId, (o1, o2, i) -> DurationType.compare(\n+          o1.long0Array[i], o1.long1Array[i], o1.long2Array[i], o1.long3Array[i],\n+          o2.long0Array[i], o2.long1Array[i], o2.long2Array[i], o2.long3Array[i]),\n+          (k, i) -> DurationType.asValue(k.long0Array[i], k.long1Array[i], k.long2Array[i], k.long3Array[i]),\n+          (c, k, i) -> DurationType.put(c, k.long0Array[i], k.long1Array[i], k.long2Array[i], k.long3Array[i]),\n+          DurationType::read, DurationValue[]::new, ValueWriter.ArrayType.DURATION);\n     }\n \n     @Override\n-    int valueSize( GenericKey state )\n+    int valueSize(GenericKey state)\n     {\n-        return arrayKeySize( state, GenericKey.SIZE_DURATION );\n+        return arrayKeySize(state, GenericKey.SIZE_DURATION);\n     }\n \n     @Override\n-    void copyValue( GenericKey to, GenericKey from, int length )\n+    void copyValue(GenericKey to, GenericKey from, int length)\n     {\n-        initializeArray( to, length, null );\n-        System.arraycopy( from.long0Array, 0, to.long0Array, 0, length );\n-        System.arraycopy( from.long1Array, 0, to.long1Array, 0, length );\n-        System.arraycopy( from.long2Array, 0, to.long2Array, 0, length );\n-        System.arraycopy( from.long3Array, 0, to.long3Array, 0, length );\n+        initializeArray(to, length, null);\n+        System.arraycopy(from.long0Array, 0, to.long0Array, 0, length);\n+        System.arraycopy(from.long1Array, 0, to.long1Array, 0, length);\n+        System.arraycopy(from.long2Array, 0, to.long2Array, 0, length);\n+        System.arraycopy(from.long3Array, 0, to.long3Array, 0, length);\n     }\n \n     @Override\n-    void initializeArray( GenericKey key, int length, ValueWriter.ArrayType arrayType )\n+    void initializeArray(GenericKey key, int length, ValueWriter.ArrayType arrayType)\n     {\n-        key.long0Array = ensureBigEnough( key.long0Array, length );\n-        key.long1Array = ensureBigEnough( key.long1Array, length );\n-        key.long2Array = ensureBigEnough( key.long2Array, length );\n-        key.long3Array = ensureBigEnough( key.long3Array, length );\n+        key.long0Array = ensureBigEnough(key.long0Array, length);\n+        key.long1Array = ensureBigEnough(key.long1Array, length);\n+        key.long2Array = ensureBigEnough(key.long2Array, length);\n+        key.long3Array = ensureBigEnough(key.long3Array, length);\n     }\n \n-    void write( GenericKey state, int offset, long months, long days, long totalAvgSeconds, int nanos )\n+    void write(GenericKey state, int offset, long months, long days, long totalAvgSeconds, int nanos)\n     {\n         state.long0Array[offset] = totalAvgSeconds;\n         state.long1Array[offset] = nanos;\n@@ -79,12 +80,12 @@ class DurationArrayType extends AbstractArrayType<DurationValue>\n     }\n \n     @Override\n-    protected void addTypeSpecificDetails( StringJoiner joiner, GenericKey state )\n+    protected void addTypeSpecificDetails(StringJoiner joiner, GenericKey state)\n     {\n-        joiner.add( \"long0Array=\" + Arrays.toString( state.long0Array ) );\n-        joiner.add( \"long1Array=\" + Arrays.toString( state.long1Array ) );\n-        joiner.add( \"long2Array=\" + Arrays.toString( state.long2Array ) );\n-        joiner.add( \"long3Array=\" + Arrays.toString( state.long3Array ) );\n-        super.addTypeSpecificDetails( joiner, state );\n+        joiner.add(\"long0Array=\" + Arrays.toString(state.long0Array));\n+        joiner.add(\"long1Array=\" + Arrays.toString(state.long1Array));\n+        joiner.add(\"long2Array=\" + Arrays.toString(state.long2Array));\n+        joiner.add(\"long3Array=\" + Arrays.toString(state.long3Array));\n+        super.addTypeSpecificDetails(joiner, state);\n     }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
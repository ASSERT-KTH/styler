{
    "project_name": "neo4j-neo4j",
    "error_id": "1490",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1490/StandaloneDbmsRuntimeRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1490/StandaloneDbmsRuntimeRepository.java\nindex 300ed74dd5d..da1e47ed782 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1490/StandaloneDbmsRuntimeRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1490/StandaloneDbmsRuntimeRepository.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.database;\n \n import java.util.List;\n@@ -36,45 +37,45 @@ import static org.neo4j.dbms.database.SystemGraphComponent.VERSION_LABEL;\n public class StandaloneDbmsRuntimeRepository extends DbmsRuntimeRepository implements TransactionEventListener<Object>\n {\n \n-    public StandaloneDbmsRuntimeRepository( DatabaseManager<?> databaseManager, DbmsRuntimeSystemGraphComponent component )\n+    public StandaloneDbmsRuntimeRepository(DatabaseManager<?> databaseManager, DbmsRuntimeSystemGraphComponent component)\n     {\n-        super( databaseManager, component );\n+        super(databaseManager, component);\n     }\n \n     @Override\n-    public Object beforeCommit( TransactionData data, Transaction transaction, GraphDatabaseService databaseService ) throws Exception\n+    public Object beforeCommit(TransactionData data, Transaction transaction, GraphDatabaseService databaseService) throws Exception\n     {\n         // not interested in this event\n         return null;\n     }\n \n     @Override\n-    public void afterCommit( TransactionData transactionData, Object state, GraphDatabaseService databaseService )\n+    public void afterCommit(TransactionData transactionData, Object state, GraphDatabaseService databaseService)\n     {\n         // no check is needed if we are at the latest version, because downgrade is not supported\n-        if ( transactionData == null || getVersion().isCurrent() )\n+        if (transactionData == null || getVersion().isCurrent())\n         {\n             return;\n         }\n \n-        List<Long> nodesWithChangedProperties = Iterables.stream( transactionData.assignedNodeProperties() )\n-                                                         .map( nodePropertyEntry -> nodePropertyEntry.entity().getId() )\n-                                                         .collect( Collectors.toList() );\n+        List<Long> nodesWithChangedProperties = Iterables.stream(transactionData.assignedNodeProperties())\n+          .map(nodePropertyEntry -> nodePropertyEntry.entity().getId())\n+          .collect(Collectors.toList());\n \n         var systemDatabase = getSystemDb();\n-        try ( var tx = systemDatabase.beginTx() )\n+        try (var tx = systemDatabase.beginTx())\n         {\n             nodesWithChangedProperties.stream()\n-                                      .map( tx::getNodeById )\n-                                      .filter( node -> node.hasLabel( VERSION_LABEL ) && node.hasProperty( component.componentName() ) )\n-                                      .map( dbmRuntime -> (int) dbmRuntime.getProperty( component.componentName() ) )\n-                                      .map( DbmsRuntimeVersion::fromVersionNumber )\n-                                      .forEach( this::setVersion );\n+              .map(tx::getNodeById)\n+              .filter(node -> node.hasLabel(VERSION_LABEL) && node.hasProperty(component.componentName()))\n+              .map(dbmRuntime -> (int) dbmRuntime.getProperty(component.componentName()))\n+              .map(DbmsRuntimeVersion::fromVersionNumber)\n+              .forEach(this::setVersion);\n         }\n     }\n \n     @Override\n-    public void afterRollback( TransactionData data, Object state, GraphDatabaseService databaseService )\n+    public void afterRollback(TransactionData data, Object state, GraphDatabaseService databaseService)\n     {\n         // not interested in this event\n     }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "18",
                "column": "28",
                "severity": "error",
                "message": "'}' at column 28 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public final class SecurityUtils {\n\n  private SecurityUtils() {}\n\n  /**\n   * Get the login of the current user.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/53/SecurityUtils.java\nindex 738661ac28f..be5d0126ddf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/53/SecurityUtils.java\n@@ -15,7 +15,8 @@ import org.springframework.security.core.userdetails.UserDetails;\n  */\n public final class SecurityUtils {\n \n-  private SecurityUtils() {}\n+  private SecurityUtils() {\n+  }\n \n   /**\n    * Get the login of the current user.\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/53/SecurityUtils.java\nindex 738661ac28f..e1808fe45c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/53/SecurityUtils.java\n@@ -95,4 +95,4 @@ public final class SecurityUtils {\n     return user.getAuthorities().stream()\n         .anyMatch(userAuthority -> userAuthority.getName().equals(authority));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'User' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/53/SecurityUtils.java\nindex 738661ac28f..afac6a35c72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/53/SecurityUtils.java\n@@ -1,7 +1,6 @@\n package eu.dzhw.fdz.metadatamanagement.usermanagement.security;\n \n import java.util.Collection;\n-\n import eu.dzhw.fdz.metadatamanagement.usermanagement.domain.User;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n@@ -13,13 +12,16 @@ import org.springframework.security.core.userdetails.UserDetails;\n /**\n  * Utility class for Spring Security.\n  */\n-public final class SecurityUtils {\n \n-  private SecurityUtils() {}\n+\n+public final class SecurityUtils {\n+  private SecurityUtils() {\n+  }\n \n   /**\n    * Get the login of the current user.\n    */\n+\n   public static String getCurrentUserLogin() {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n     Authentication authentication = securityContext.getAuthentication();\n@@ -29,9 +31,10 @@ public final class SecurityUtils {\n         UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();\n         userName = springSecurityUser.getUsername();\n       } else if (authentication.getPrincipal() instanceof String) {\n-        userName = (String) authentication.getPrincipal();\n-      }\n+               userName = (String) authentication.getPrincipal();\n+             }\n     }\n+\n     return userName;\n   }\n \n@@ -40,10 +43,10 @@ public final class SecurityUtils {\n    *\n    * @return true if the user is authenticated, false otherwise\n    */\n+\n   public static boolean isAuthenticated() {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n-    Collection<? extends GrantedAuthority> authorities =\n-        securityContext.getAuthentication().getAuthorities();\n+    Collection<? extends GrantedAuthority> authorities = securityContext.getAuthentication().getAuthorities();\n     if (authorities != null) {\n       for (GrantedAuthority authority : authorities) {\n         if (authority.getAuthority().equals(AuthoritiesConstants.ANONYMOUS)) {\n@@ -51,6 +54,7 @@ public final class SecurityUtils {\n         }\n       }\n     }\n+\n     return true;\n   }\n \n@@ -59,6 +63,7 @@ public final class SecurityUtils {\n    *\n    * @return the current user id\n    */\n+\n   public static String getCurrentUserId() {\n     return getCurrentUser().getId();\n   }\n@@ -68,6 +73,7 @@ public final class SecurityUtils {\n    *\n    * @return the current user\n    */\n+\n   public static CustomUserDetails getCurrentUser() {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n     Authentication authentication = securityContext.getAuthentication();\n@@ -81,6 +87,7 @@ public final class SecurityUtils {\n    * If the current user has a specific authority (security role). The name of this method comes\n    * from the isUserInRole() method in the Servlet API.\n    */\n+\n   public static boolean isUserInRole(String authority) {\n     SecurityContext securityContext = SecurityContextHolder.getContext();\n     Authentication authentication = securityContext.getAuthentication();\n@@ -88,11 +95,13 @@ public final class SecurityUtils {\n       UserDetails springSecurityUser = (UserDetails) authentication.getPrincipal();\n       return springSecurityUser.getAuthorities().contains(new SimpleGrantedAuthority(authority));\n     }\n+\n     return false;\n   }\n \n-  public static boolean isUserInRole(String authority, User user) {\n+  public static boolean isUserInRole(String authority,\n+    User user) {\n     return user.getAuthorities().stream()\n-        .anyMatch(userAuthority -> userAuthority.getName().equals(authority));\n+                                .anyMatch(userAuthority -> userAuthority.getName().equals(authority));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "18",
                    "column": "28",
                    "severity": "error",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/53/SecurityUtils.java\nindex 738661ac28f..8b7a9dd433f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/53/SecurityUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/53/SecurityUtils.java\n@@ -15,9 +15,7 @@ import org.springframework.security.core.userdetails.UserDetails;\n  */\n public final class SecurityUtils {\n \n-  private SecurityUtils() {}\n-\n-  /**\n+  private SecurityUtils() {}/**\n    * Get the login of the current user.\n    */\n   public static String getCurrentUserLogin() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
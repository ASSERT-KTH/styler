{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1327",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1327/AncestorsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1327/AncestorsUtil.java\nindex 8aa4a9dc051..11387ff372e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1327/AncestorsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1327/AncestorsUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.ancestor;\n \n import java.util.LinkedList;\n@@ -36,82 +37,80 @@ import static org.neo4j.graphdb.traversal.Paths.singleNodePath;\n  */\n public class AncestorsUtil\n {\n-    private AncestorsUtil()\n+  private AncestorsUtil()\n+  {\n+  }\n+\n+  /**\n+   * @param nodeSet Set of nodes for which the LCA will be found.\n+   * @return The LCA node if there's one, null otherwise.\n+   */\n+  public static Node lowestCommonAncestor(List<Node> nodeSet, PathExpander expander)\n+  {\n+    Node lowerCommonAncestor = null;\n+    if (nodeSet.size() > 1)\n     {\n+      Node firstNode = nodeSet.get(0);\n+      LinkedList<Node> firstAncestors = getAncestorsPlusSelf(firstNode, expander);\n+      for (int i = 1; i < nodeSet.size() && !firstAncestors.isEmpty(); i++)\n+      {\n+        Node currentNode = nodeSet.get(i);\n+        lookForCommonAncestor(firstAncestors, currentNode, expander);\n+      }\n+      if (!firstAncestors.isEmpty())\n+      {\n+        lowerCommonAncestor = firstAncestors.get(0);\n+      }\n     }\n+    return lowerCommonAncestor;\n+  }\n \n-    /**\n-     *\n-     * @param nodeSet Set of nodes for which the LCA will be found.\n-     * @return The LCA node if there's one, null otherwise.\n-     */\n-    public static Node lowestCommonAncestor( List<Node> nodeSet, PathExpander expander )\n+  private static LinkedList<Node> getAncestorsPlusSelf(Node node, PathExpander expander)\n+  {\n+    LinkedList<Node> ancestors = new LinkedList<>();\n+    ancestors.add(node);\n+    ResourceIterator<Relationship> relIterator =\n+        Iterators.asResourceIterator(expander.expand(singleNodePath(node), NO_STATE).iterator());\n+    while (relIterator.hasNext())\n     {\n-        Node lowerCommonAncestor = null;\n-        if ( nodeSet.size() > 1 )\n-        {\n-            Node firstNode = nodeSet.get( 0 );\n-            LinkedList<Node> firstAncestors = getAncestorsPlusSelf( firstNode, expander );\n-            for ( int i = 1; i < nodeSet.size() && !firstAncestors.isEmpty(); i++ )\n-            {\n-                Node currentNode = nodeSet.get( i );\n-                lookForCommonAncestor( firstAncestors, currentNode, expander );\n-            }\n-            if ( !firstAncestors.isEmpty() )\n-            {\n-                lowerCommonAncestor = firstAncestors.get( 0 );\n-            }\n-        }\n-        return lowerCommonAncestor;\n+      Relationship rel = relIterator.next();\n+      node = rel.getOtherNode(node);\n+      ancestors.add(node);\n+      relIterator.close();\n+      relIterator = Iterators.asResourceIterator(expander.expand(singleNodePath(node), NO_STATE).iterator());\n     }\n+    return ancestors;\n+  }\n \n-    private static LinkedList<Node> getAncestorsPlusSelf( Node node, PathExpander expander )\n+  private static void lookForCommonAncestor(LinkedList<Node> commonAncestors, Node currentNode,\n+                                            PathExpander expander)\n+  {\n+    while (currentNode != null)\n     {\n-        LinkedList<Node> ancestors = new LinkedList<>();\n-        ancestors.add( node );\n-        ResourceIterator<Relationship> relIterator =\n-                Iterators.asResourceIterator( expander.expand( singleNodePath( node ), NO_STATE ).iterator() );\n-        while ( relIterator.hasNext() )\n+      for (int i = 0; i < commonAncestors.size(); i++)\n+      {\n+        Node node = commonAncestors.get(i);\n+        if (node.getId() == currentNode.getId())\n         {\n-            Relationship rel = relIterator.next();\n-            node = rel.getOtherNode( node );\n-            ancestors.add( node );\n-            relIterator.close();\n-            relIterator = Iterators.asResourceIterator( expander.expand( singleNodePath( node ), NO_STATE ).iterator() );\n+          for (int j = 0; j < i; j++)\n+          {\n+            commonAncestors.pollFirst();\n+          }\n+          return;\n         }\n-        return ancestors;\n-    }\n-\n-    private static void lookForCommonAncestor( LinkedList<Node> commonAncestors, Node currentNode,\n-            PathExpander expander )\n-    {\n-        while ( currentNode != null )\n+      }\n+      try (ResourceIterator<Relationship> relIt = Iterators.asResourceIterator(\n+          expander.expand(singleNodePath(currentNode), NO_STATE).iterator()))\n+      {\n+        if (relIt.hasNext())\n+        {\n+          Relationship rel = relIt.next();\n+          currentNode = rel.getOtherNode(currentNode);\n+        } else\n         {\n-            for ( int i = 0; i < commonAncestors.size(); i++ )\n-            {\n-                Node node = commonAncestors.get( i );\n-                if ( node.getId() == currentNode.getId() )\n-                {\n-                    for ( int j = 0; j < i; j++ )\n-                    {\n-                        commonAncestors.pollFirst();\n-                    }\n-                    return;\n-                }\n-            }\n-            try ( ResourceIterator<Relationship> relIt = Iterators.asResourceIterator(\n-                    expander.expand( singleNodePath( currentNode ), NO_STATE ).iterator() ) )\n-            {\n-                if ( relIt.hasNext() )\n-                {\n-                    Relationship rel = relIt.next();\n-                    currentNode = rel.getOtherNode( currentNode );\n-                }\n-                else\n-                {\n-                    currentNode = null;\n-                }\n-            }\n+          currentNode = null;\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1327/AncestorsUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1327/AncestorsUtil.java\nindex 8aa4a9dc051..0c2249fb8d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1327/AncestorsUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1327/AncestorsUtil.java\n@@ -57,7 +57,8 @@ public class AncestorsUtil\n                 Node currentNode = nodeSet.get( i );\n                 lookForCommonAncestor( firstAncestors, currentNode, expander );\n             }\n-            if ( !firstAncestors.isEmpty() )\n+\n+if ( !firstAncestors.isEmpty() )\n             {\n                 lowerCommonAncestor = firstAncestors.get( 0 );\n             }\n@@ -69,9 +70,8 @@ public class AncestorsUtil\n     {\n         LinkedList<Node> ancestors = new LinkedList<>();\n         ancestors.add( node );\n-        ResourceIterator<Relationship> relIterator =\n-                Iterators.asResourceIterator( expander.expand( singleNodePath( node ), NO_STATE ).iterator() );\n-        while ( relIterator.hasNext() )\n+        ResourceIterator<Relationship> relIterator = Iterators.asResourceIterator( expander.expand( singleNodePath( node ), NO_STATE ).iterator() );\n+    while ( relIterator.hasNext() )\n         {\n             Relationship rel = relIterator.next();\n             node = rel.getOtherNode( node );\n@@ -79,7 +79,8 @@ public class AncestorsUtil\n             relIterator.close();\n             relIterator = Iterators.asResourceIterator( expander.expand( singleNodePath( node ), NO_STATE ).iterator() );\n         }\n-        return ancestors;\n+\n+return ancestors;\n     }\n \n     private static void lookForCommonAncestor( LinkedList<Node> commonAncestors, Node currentNode,\n@@ -99,9 +100,8 @@ public class AncestorsUtil\n                     return;\n                 }\n             }\n-            try ( ResourceIterator<Relationship> relIt = Iterators.asResourceIterator(\n-                    expander.expand( singleNodePath( currentNode ), NO_STATE ).iterator() ) )\n-            {\n+            try ( ResourceIterator<Relationship> relIt = Iterators.asResourceIterator( expander.expand( singleNodePath( currentNode ), NO_STATE ).iterator() ) )\n+{\n                 if ( relIt.hasNext() )\n                 {\n                     Relationship rel = relIt.next();\n@@ -114,4 +114,4 @@ public class AncestorsUtil\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
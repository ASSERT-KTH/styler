{
    "project_name": "NationalSecurityAgency-emissary",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "81",
                "column": "28",
                "severity": "warning",
                "message": "'}' at column 28 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n    /** This class is not meant to be instantiated. */\n    private JavaCharSet() {}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "81",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/11/JavaCharSet.java\nindex f7f2c0c895b..dacd8ec0891 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/11/JavaCharSet.java\n@@ -77,6 +77,9 @@ public class JavaCharSet {\n         return charSet;\n     }\n \n-    /** This class is not meant to be instantiated. */\n-    private JavaCharSet() {}\n+    /**\n+     * This class is not meant to be instantiated.\n+     */\n+    private JavaCharSet() {\n+    }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/11/JavaCharSet.java\nindex f7f2c0c895b..a0405991cb5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/naturalize/11/JavaCharSet.java\n@@ -78,5 +78,6 @@ public class JavaCharSet {\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private JavaCharSet() {}\n-}\n+    private JavaCharSet() {\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/11/JavaCharSet.java\nindex f7f2c0c895b..c24d613a5a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/11/JavaCharSet.java\n@@ -8,6 +8,8 @@ import java.util.Map;\n  * remapping. Callers should be advised that getting a null back means the code set passed might be valid *as is* or it\n  * might be completely bogus. We currently cannot tell.\n  */\n+\n+\n public class JavaCharSet {\n \n     private static Map<String, String> charsets = new HashMap<String, String>();\n@@ -17,6 +19,7 @@ public class JavaCharSet {\n     /**\n      * Load hash from config file\n      */\n+\n     public static synchronized void initialize(final Map<String, String> mappings) {\n         charsets.putAll(mappings);\n         initialized = true;\n@@ -25,6 +28,8 @@ public class JavaCharSet {\n     /**\n      * Return initialization status\n      */\n+\n+\n     public static synchronized boolean isInitialized() {\n         return initialized;\n     }\n@@ -32,15 +37,17 @@ public class JavaCharSet {\n     /**\n      * Look up the encoding and return the Java CharSet for it if different from the string passed in\n      */\n+\n+\n     public static String get(final String cs) {\n         if (cs == null) {\n             return null;\n         }\n \n         // Look up in the hash\n+\n         String s = cs.toUpperCase();\n         String charSet = charsets.get(s);\n-\n         String enc = null;\n \n         // If nothing look for an encoding inside a set of parens\n@@ -58,12 +65,14 @@ public class JavaCharSet {\n         // any encoding. It doesn't change the base value\n         // of the characters to strip it out since we should\n         // be processing those out anyway\n+\n         while (s.indexOf(\"-\") != -1 && charSet == null) {\n             s = s.substring(0, s.lastIndexOf(\"-\"));\n             charSet = charsets.get(s);\n         }\n \n         // Finally, try just the encoding stripped of -<TAG>, etc.\n+\n         while ((charSet == null) && (enc != null) && enc.contains(\"-\")) {\n             enc = enc.substring(0, enc.lastIndexOf(\"-\"));\n             charSet = charsets.get(enc);\n@@ -73,10 +82,12 @@ public class JavaCharSet {\n         if (charSet == null) {\n             charSet = enc;\n         }\n-\n         return charSet;\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private JavaCharSet() {}\n-}\n+\n+    private JavaCharSet() {\n+\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "81",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_random/11/JavaCharSet.java\nindex f7f2c0c895b..d8d9cfa0255 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/11/JavaCharSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/styler_random/11/JavaCharSet.java\n@@ -79,4 +79,5 @@ public class JavaCharSet {\n \n     /** This class is not meant to be instantiated. */\n     private JavaCharSet() {}\n+\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "81",
                    "column": "28",
                    "severity": "warning",
                    "message": "'}' at column 28 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
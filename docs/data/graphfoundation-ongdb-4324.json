{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4324",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4324/LearnerMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4324/LearnerMessage.java\nindex 7e3670e6b35..cbfede4bd1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4324/LearnerMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4324/LearnerMessage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import java.io.Serializable;\n@@ -30,124 +31,123 @@ import org.neo4j.cluster.protocol.atomicbroadcast.Payload;\n  * Learner state machine messages\n  */\n public enum LearnerMessage\n-        implements MessageType\n+    implements MessageType\n {\n-    join, leave,\n-    learn, learnRequest, learnFailed, learnTimedout, catchUp;\n+  join, leave,\n+  learn, learnRequest, learnFailed, learnTimedout, catchUp;\n \n-    public static class LearnState\n-            implements Serializable\n-    {\n-        private static final long serialVersionUID = 3311287172384025589L;\n+  public static class LearnState\n+      implements Serializable\n+  {\n+    private static final long serialVersionUID = 3311287172384025589L;\n \n-        private Object value;\n+    private Object value;\n \n-        public LearnState( Object value )\n-        {\n-            this.value = value;\n-        }\n+    public LearnState(Object value)\n+    {\n+      this.value = value;\n+    }\n \n-        public Object getValue()\n-        {\n-            return value;\n-        }\n+    public Object getValue()\n+    {\n+      return value;\n+    }\n \n-        @Override\n-        public String toString()\n+    @Override\n+    public String toString()\n+    {\n+      if (value instanceof Payload)\n+      {\n+        try\n         {\n-            if ( value instanceof Payload )\n-            {\n-                try\n-                {\n-                    ObjectStreamFactory streamFactory = new ObjectStreamFactory();\n-                    return new AtomicBroadcastSerializer( streamFactory, streamFactory ).receive( (Payload) value )\n-                            .toString();\n-                }\n-                catch ( Throwable e )\n-                {\n-                    return value.toString();\n-                }\n-            }\n-            return value.toString();\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n+          ObjectStreamFactory streamFactory = new ObjectStreamFactory();\n+          return new AtomicBroadcastSerializer(streamFactory, streamFactory).receive((Payload) value)\n+              .toString();\n+        } catch (Throwable e)\n         {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-\n-            LearnState that = (LearnState) o;\n-\n-            return value != null ? value.equals( that.value ) : that.value == null;\n+          return value.toString();\n         }\n+      }\n+      return value.toString();\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return value != null ? value.hashCode() : 0;\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+\n+      LearnState that = (LearnState) o;\n+\n+      return value != null ? value.equals(that.value) : that.value == null;\n     }\n \n-    public static class LearnRequestState\n-            implements Serializable\n+    @Override\n+    public int hashCode()\n     {\n-        private static final long serialVersionUID = -2577225800895578365L;\n+      return value != null ? value.hashCode() : 0;\n+    }\n+  }\n \n-        public LearnRequestState()\n-        {\n-        }\n+  public static class LearnRequestState\n+      implements Serializable\n+  {\n+    private static final long serialVersionUID = -2577225800895578365L;\n \n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            return obj != null && getClass() == obj.getClass();\n-        }\n+    public LearnRequestState()\n+    {\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return 1;\n-        }\n+    @Override\n+    public boolean equals(Object obj)\n+    {\n+      return obj != null && getClass() == obj.getClass();\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"Learn request\";\n-        }\n+    @Override\n+    public int hashCode()\n+    {\n+      return 1;\n     }\n \n-    public static class LearnFailedState\n-            implements Serializable\n+    @Override\n+    public String toString()\n     {\n-        private static final long serialVersionUID = -6587635550010611226L;\n+      return \"Learn request\";\n+    }\n+  }\n \n-        public LearnFailedState()\n-        {\n-        }\n+  public static class LearnFailedState\n+      implements Serializable\n+  {\n+    private static final long serialVersionUID = -6587635550010611226L;\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"Learn failed\";\n-        }\n+    public LearnFailedState()\n+    {\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return \"Learn failed\";\n+    }\n \n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            return obj instanceof LearnFailedState;\n-        }\n+    @Override\n+    public int hashCode()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj)\n+    {\n+      return obj instanceof LearnFailedState;\n     }\n+  }\n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4324/LearnerMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4324/LearnerMessage.java\nindex 7e3670e6b35..377b5b1021a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4324/LearnerMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4324/LearnerMessage.java\n@@ -29,15 +29,12 @@ import org.neo4j.cluster.protocol.atomicbroadcast.Payload;\n /**\n  * Learner state machine messages\n  */\n-public enum LearnerMessage\n-        implements MessageType\n+public enum LearnerMessage implements MessageType\n {\n-    join, leave,\n-    learn, learnRequest, learnFailed, learnTimedout, catchUp;\n+    join, leave, learn, learnRequest, learnFailed, learnTimedout, catchUp;\n \n-    public static class LearnState\n-            implements Serializable\n-    {\n+    public static class LearnState implements Serializable\n+{\n         private static final long serialVersionUID = 3311287172384025589L;\n \n         private Object value;\n@@ -60,9 +57,8 @@ public enum LearnerMessage\n                 try\n                 {\n                     ObjectStreamFactory streamFactory = new ObjectStreamFactory();\n-                    return new AtomicBroadcastSerializer( streamFactory, streamFactory ).receive( (Payload) value )\n-                            .toString();\n-                }\n+                    return new AtomicBroadcastSerializer( streamFactory, streamFactory ).receive( (Payload) value ).toString();\n+    }\n                 catch ( Throwable e )\n                 {\n                     return value.toString();\n@@ -78,7 +74,8 @@ public enum LearnerMessage\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -95,9 +92,8 @@ public enum LearnerMessage\n         }\n     }\n \n-    public static class LearnRequestState\n-            implements Serializable\n-    {\n+    public static class LearnRequestState implements Serializable\n+{\n         private static final long serialVersionUID = -2577225800895578365L;\n \n         public LearnRequestState()\n@@ -123,9 +119,8 @@ public enum LearnerMessage\n         }\n     }\n \n-    public static class LearnFailedState\n-            implements Serializable\n-    {\n+    public static class LearnFailedState implements Serializable\n+{\n         private static final long serialVersionUID = -6587635550010611226L;\n \n         public LearnFailedState()\n@@ -150,4 +145,4 @@ public enum LearnerMessage\n             return obj instanceof LearnFailedState;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
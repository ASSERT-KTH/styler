{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1379",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1379/LogRotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1379/LogRotation.java\nindex d1dbfc665ad..a125c43f815 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1379/LogRotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1379/LogRotation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.rotation;\n \n import java.io.IOException;\n@@ -25,43 +26,43 @@ import org.neo4j.kernel.impl.transaction.tracing.LogAppendEvent;\n \n /**\n  * Used to check if a log rotation is needed, and also to execute a log rotation.\n- *\n+ * <p>\n  * The implementation also makes sure that stores are forced to disk.\n- *\n  */\n public interface LogRotation\n {\n-    interface Monitor\n-    {\n-        void startedRotating( long currentVersion );\n+  interface Monitor\n+  {\n+    void startedRotating(long currentVersion);\n \n-        void finishedRotating( long currentVersion );\n-    }\n+    void finishedRotating(long currentVersion);\n+  }\n \n-    LogRotation NO_ROTATION = new LogRotation()\n+  LogRotation NO_ROTATION = new LogRotation()\n+  {\n+    @Override\n+    public boolean rotateLogIfNeeded(LogAppendEvent logAppendEvent)\n     {\n-        @Override\n-        public boolean rotateLogIfNeeded( LogAppendEvent logAppendEvent )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        @Override\n-        public void rotateLogFile()\n-        {\n-        }\n-    };\n+    @Override\n+    public void rotateLogFile()\n+    {\n+    }\n+  };\n \n-    /**\n-     * Rotates the undelying log if it is required. Returns true if rotation happened, false otherwise\n-     * @param logAppendEvent A trace event for the current log append operation.\n-     */\n-    boolean rotateLogIfNeeded( LogAppendEvent logAppendEvent ) throws IOException;\n+  /**\n+   * Rotates the undelying log if it is required. Returns true if rotation happened, false otherwise\n+   *\n+   * @param logAppendEvent A trace event for the current log append operation.\n+   */\n+  boolean rotateLogIfNeeded(LogAppendEvent logAppendEvent) throws IOException;\n \n-    /**\n-     * Force a log rotation.\n-     *\n-     * @throws IOException\n-     */\n-    void rotateLogFile() throws IOException;\n+  /**\n+   * Force a log rotation.\n+   *\n+   * @throws IOException\n+   */\n+  void rotateLogFile() throws IOException;\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1379/LogRotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1379/LogRotation.java\nindex d1dbfc665ad..736cc8aef4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1379/LogRotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1379/LogRotation.java\n@@ -64,4 +64,4 @@ public interface LogRotation\n      * @throws IOException\n      */\n     void rotateLogFile() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
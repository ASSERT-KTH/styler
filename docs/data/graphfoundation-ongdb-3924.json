{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3924",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "219",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "326",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3924/RaftMembershipManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3924/RaftMembershipManager.java\nindex 737cbd0b3d8..2d58db1aaa9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3924/RaftMembershipManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3924/RaftMembershipManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.membership;\n \n import java.io.IOException;\n@@ -51,304 +52,302 @@ import static org.neo4j.helpers.collection.Iterables.first;\n  */\n public class RaftMembershipManager extends LifecycleAdapter implements RaftMembership, RaftLogCommand.Handler\n {\n-    private RaftMembershipChanger membershipChanger;\n-\n-    private Set<MemberId> targetMembers;\n-\n-    private final SendToMyself sendToMyself;\n-    private final RaftGroup.Builder<MemberId> memberSetBuilder;\n-    private final ReadableRaftLog raftLog;\n-    private final Log log;\n-    private final StateStorage<RaftMembershipState> storage;\n-\n-    private LongSupplier recoverFromIndexSupplier;\n-    private RaftMembershipState state;\n-\n-    private final int minimumConsensusGroupSize;\n-\n-    private volatile Set<MemberId> votingMembers = Collections.unmodifiableSet( new HashSet<>() );\n-    // votingMembers + additionalReplicationMembers\n-    private volatile Set<MemberId> replicationMembers = Collections.unmodifiableSet( new HashSet<>() );\n-\n-    private Set<Listener> listeners = new HashSet<>();\n-    private Set<MemberId> additionalReplicationMembers = new HashSet<>();\n-\n-    public RaftMembershipManager( SendToMyself sendToMyself, RaftGroup.Builder<MemberId> memberSetBuilder,\n-            ReadableRaftLog raftLog, LogProvider logProvider, int minimumConsensusGroupSize, long electionTimeout,\n-            Clock clock, long catchupTimeout, StateStorage<RaftMembershipState> membershipStorage )\n+  private RaftMembershipChanger membershipChanger;\n+\n+  private Set<MemberId> targetMembers;\n+\n+  private final SendToMyself sendToMyself;\n+  private final RaftGroup.Builder<MemberId> memberSetBuilder;\n+  private final ReadableRaftLog raftLog;\n+  private final Log log;\n+  private final StateStorage<RaftMembershipState> storage;\n+\n+  private LongSupplier recoverFromIndexSupplier;\n+  private RaftMembershipState state;\n+\n+  private final int minimumConsensusGroupSize;\n+\n+  private volatile Set<MemberId> votingMembers = Collections.unmodifiableSet(new HashSet<>());\n+  // votingMembers + additionalReplicationMembers\n+  private volatile Set<MemberId> replicationMembers = Collections.unmodifiableSet(new HashSet<>());\n+\n+  private Set<Listener> listeners = new HashSet<>();\n+  private Set<MemberId> additionalReplicationMembers = new HashSet<>();\n+\n+  public RaftMembershipManager(SendToMyself sendToMyself, RaftGroup.Builder<MemberId> memberSetBuilder,\n+                               ReadableRaftLog raftLog, LogProvider logProvider, int minimumConsensusGroupSize, long electionTimeout,\n+                               Clock clock, long catchupTimeout, StateStorage<RaftMembershipState> membershipStorage)\n+  {\n+    this.sendToMyself = sendToMyself;\n+    this.memberSetBuilder = memberSetBuilder;\n+    this.raftLog = raftLog;\n+    this.minimumConsensusGroupSize = minimumConsensusGroupSize;\n+    this.storage = membershipStorage;\n+    this.log = logProvider.getLog(getClass());\n+    this.membershipChanger =\n+        new RaftMembershipChanger(raftLog, clock, electionTimeout, logProvider, catchupTimeout, this);\n+  }\n+\n+  public void setRecoverFromIndexSupplier(LongSupplier recoverFromIndexSupplier)\n+  {\n+    this.recoverFromIndexSupplier = recoverFromIndexSupplier;\n+  }\n+\n+  @Override\n+  public void start() throws IOException\n+  {\n+    this.state = storage.getInitialState();\n+    long recoverFromIndex = recoverFromIndexSupplier.getAsLong();\n+    log.info(\"Membership state before recovery: \" + state);\n+    log.info(\"Recovering from: \" + recoverFromIndex + \" to: \" + raftLog.appendIndex());\n+\n+    try (RaftLogCursor cursor = raftLog.getEntryCursor(recoverFromIndex))\n     {\n-        this.sendToMyself = sendToMyself;\n-        this.memberSetBuilder = memberSetBuilder;\n-        this.raftLog = raftLog;\n-        this.minimumConsensusGroupSize = minimumConsensusGroupSize;\n-        this.storage = membershipStorage;\n-        this.log = logProvider.getLog( getClass() );\n-        this.membershipChanger =\n-                new RaftMembershipChanger( raftLog, clock, electionTimeout, logProvider, catchupTimeout, this );\n+      while (cursor.next())\n+      {\n+        append(cursor.index(), cursor.get());\n+      }\n     }\n \n-    public void setRecoverFromIndexSupplier( LongSupplier recoverFromIndexSupplier )\n-    {\n-        this.recoverFromIndexSupplier = recoverFromIndexSupplier;\n-    }\n-\n-    @Override\n-    public void start() throws IOException\n-    {\n-        this.state = storage.getInitialState();\n-        long recoverFromIndex = recoverFromIndexSupplier.getAsLong();\n-        log.info( \"Membership state before recovery: \" + state );\n-        log.info( \"Recovering from: \" + recoverFromIndex + \" to: \" + raftLog.appendIndex() );\n-\n-        try ( RaftLogCursor cursor = raftLog.getEntryCursor( recoverFromIndex ) )\n-        {\n-            while ( cursor.next() )\n-            {\n-                append( cursor.index(), cursor.get() );\n-            }\n-        }\n-\n-        log.info( \"Membership state after recovery: \" + state );\n-        updateMemberSets();\n-    }\n-\n-    public void setTargetMembershipSet( Set<MemberId> targetMembers )\n-    {\n-        boolean targetMembershipChanged = !targetMembers.equals( this.targetMembers );\n-\n-        this.targetMembers = new HashSet<>( targetMembers );\n+    log.info(\"Membership state after recovery: \" + state);\n+    updateMemberSets();\n+  }\n \n-        if ( targetMembershipChanged )\n-        {\n-            log.info( \"Target membership: \" + targetMembers );\n-        }\n+  public void setTargetMembershipSet(Set<MemberId> targetMembers)\n+  {\n+    boolean targetMembershipChanged = !targetMembers.equals(this.targetMembers);\n \n-        membershipChanger.onTargetChanged( targetMembers );\n-\n-        checkForStartCondition();\n-    }\n+    this.targetMembers = new HashSet<>(targetMembers);\n \n-    private Set<MemberId> missingMembers()\n+    if (targetMembershipChanged)\n     {\n-        if ( targetMembers == null || votingMembers() == null )\n-        {\n-            return emptySet();\n-        }\n-        Set<MemberId> missingMembers = new HashSet<>( targetMembers );\n-        missingMembers.removeAll( votingMembers() );\n-\n-        return missingMembers;\n+      log.info(\"Target membership: \" + targetMembers);\n     }\n \n-    /**\n-     * All the externally published sets are derived from the committed and appended sets.\n-     */\n-    private void updateMemberSets()\n-    {\n-        votingMembers = Collections.unmodifiableSet( state.getLatest() );\n+    membershipChanger.onTargetChanged(targetMembers);\n \n-        HashSet<MemberId> newReplicationMembers = new HashSet<>( votingMembers );\n-        newReplicationMembers.addAll( additionalReplicationMembers );\n+    checkForStartCondition();\n+  }\n \n-        replicationMembers = Collections.unmodifiableSet( newReplicationMembers );\n-        listeners.forEach( Listener::onMembershipChanged );\n-    }\n-\n-    /**\n-     * Adds an additional member to replicate to. Members that are joining need to\n-     * catch up sufficiently before they become part of the voting group.\n-     *\n-     * @param member The member which will be added to the replication group.\n-     */\n-    void addAdditionalReplicationMember( MemberId member )\n+  private Set<MemberId> missingMembers()\n+  {\n+    if (targetMembers == null || votingMembers() == null)\n     {\n-        additionalReplicationMembers.add( member );\n-        updateMemberSets();\n-    }\n-\n-    /**\n-     * Removes a member previously part of the additional replication member group.\n-     *\n-     * This either happens because they caught up sufficiently and became part of the\n-     * voting group or because they failed to catch up in time.\n-     *\n-     * @param member The member to remove from the replication group.\n-     */\n-    void removeAdditionalReplicationMember( MemberId member )\n-    {\n-        additionalReplicationMembers.remove( member );\n-        updateMemberSets();\n-    }\n-\n-    private boolean isSafeToRemoveMember()\n-    {\n-        Set<MemberId> votingMembers = votingMembers();\n-        boolean safeToRemoveMember = votingMembers != null && votingMembers.size() > minimumConsensusGroupSize;\n-\n-        if ( !safeToRemoveMember )\n-        {\n-            Set<MemberId> membersToRemove = superfluousMembers();\n-\n-            log.info( \"Not safe to remove %s %s because it would reduce the number of voting members below the expected \" +\n-                            \"cluster size of %d. Voting members: %s\",\n-                    membersToRemove.size() > 1 ? \"members\" : \"member\",\n-                    membersToRemove, minimumConsensusGroupSize, votingMembers  );\n-        }\n-\n-        return safeToRemoveMember;\n+      return emptySet();\n     }\n-\n-    private Set<MemberId> superfluousMembers()\n+    Set<MemberId> missingMembers = new HashSet<>(targetMembers);\n+    missingMembers.removeAll(votingMembers());\n+\n+    return missingMembers;\n+  }\n+\n+  /**\n+   * All the externally published sets are derived from the committed and appended sets.\n+   */\n+  private void updateMemberSets()\n+  {\n+    votingMembers = Collections.unmodifiableSet(state.getLatest());\n+\n+    HashSet<MemberId> newReplicationMembers = new HashSet<>(votingMembers);\n+    newReplicationMembers.addAll(additionalReplicationMembers);\n+\n+    replicationMembers = Collections.unmodifiableSet(newReplicationMembers);\n+    listeners.forEach(Listener::onMembershipChanged);\n+  }\n+\n+  /**\n+   * Adds an additional member to replicate to. Members that are joining need to\n+   * catch up sufficiently before they become part of the voting group.\n+   *\n+   * @param member The member which will be added to the replication group.\n+   */\n+  void addAdditionalReplicationMember(MemberId member)\n+  {\n+    additionalReplicationMembers.add(member);\n+    updateMemberSets();\n+  }\n+\n+  /**\n+   * Removes a member previously part of the additional replication member group.\n+   * <p>\n+   * This either happens because they caught up sufficiently and became part of the\n+   * voting group or because they failed to catch up in time.\n+   *\n+   * @param member The member to remove from the replication group.\n+   */\n+  void removeAdditionalReplicationMember(MemberId member)\n+  {\n+    additionalReplicationMembers.remove(member);\n+    updateMemberSets();\n+  }\n+\n+  private boolean isSafeToRemoveMember()\n+  {\n+    Set<MemberId> votingMembers = votingMembers();\n+    boolean safeToRemoveMember = votingMembers != null && votingMembers.size() > minimumConsensusGroupSize;\n+\n+    if (!safeToRemoveMember)\n     {\n-        if ( targetMembers == null || votingMembers() == null )\n-        {\n-            return emptySet();\n-        }\n-        Set<MemberId> superfluousMembers = new HashSet<>( votingMembers() );\n-        superfluousMembers.removeAll( targetMembers );\n+      Set<MemberId> membersToRemove = superfluousMembers();\n \n-        return superfluousMembers;\n+      log.info(\"Not safe to remove %s %s because it would reduce the number of voting members below the expected \" +\n+              \"cluster size of %d. Voting members: %s\",\n+          membersToRemove.size() > 1 ? \"members\" : \"member\",\n+          membersToRemove, minimumConsensusGroupSize, votingMembers);\n     }\n \n-    private void checkForStartCondition()\n-    {\n-        if ( missingMembers().size() > 0 )\n-        {\n-            membershipChanger.onMissingMember( first( missingMembers() ) );\n-        }\n-        else if ( superfluousMembers().size() > 0 && isSafeToRemoveMember() )\n-        {\n-            membershipChanger.onSuperfluousMember( first( superfluousMembers() ) );\n-        }\n-    }\n+    return safeToRemoveMember;\n+  }\n \n-    /**\n-     * Used by the membership changer for getting consensus on a new set of members.\n-     *\n-     * @param newVotingMemberSet The new set of members.\n-     */\n-    void doConsensus( Set<MemberId> newVotingMemberSet )\n+  private Set<MemberId> superfluousMembers()\n+  {\n+    if (targetMembers == null || votingMembers() == null)\n     {\n-        log.info( \"Getting consensus on new voting member set %s\", newVotingMemberSet );\n-        sendToMyself.replicate( memberSetBuilder.build( newVotingMemberSet ) );\n+      return emptySet();\n     }\n+    Set<MemberId> superfluousMembers = new HashSet<>(votingMembers());\n+    superfluousMembers.removeAll(targetMembers);\n \n-    /**\n-     * Called by the membership changer when it has changed state and in response\n-     * the membership manager potentially feeds it back with an event to start\n-     * a new membership change operation.\n-     */\n-    void stateChanged()\n-    {\n-        checkForStartCondition();\n-    }\n+    return superfluousMembers;\n+  }\n \n-    public void onFollowerStateChange( FollowerStates<MemberId> followerStates )\n+  private void checkForStartCondition()\n+  {\n+    if (missingMembers().size() > 0)\n     {\n-        membershipChanger.onFollowerStateChange( followerStates );\n-    }\n-\n-    public void onRole( Role role )\n-    {\n-        membershipChanger.onRole( role );\n-    }\n-\n-    @Override\n-    public Set<MemberId> votingMembers()\n+      membershipChanger.onMissingMember(first(missingMembers()));\n+    } else if (superfluousMembers().size() > 0 && isSafeToRemoveMember())\n     {\n-        return votingMembers;\n+      membershipChanger.onSuperfluousMember(first(superfluousMembers()));\n     }\n-\n-    @Override\n-    public Set<MemberId> replicationMembers()\n+  }\n+\n+  /**\n+   * Used by the membership changer for getting consensus on a new set of members.\n+   *\n+   * @param newVotingMemberSet The new set of members.\n+   */\n+  void doConsensus(Set<MemberId> newVotingMemberSet)\n+  {\n+    log.info(\"Getting consensus on new voting member set %s\", newVotingMemberSet);\n+    sendToMyself.replicate(memberSetBuilder.build(newVotingMemberSet));\n+  }\n+\n+  /**\n+   * Called by the membership changer when it has changed state and in response\n+   * the membership manager potentially feeds it back with an event to start\n+   * a new membership change operation.\n+   */\n+  void stateChanged()\n+  {\n+    checkForStartCondition();\n+  }\n+\n+  public void onFollowerStateChange(FollowerStates<MemberId> followerStates)\n+  {\n+    membershipChanger.onFollowerStateChange(followerStates);\n+  }\n+\n+  public void onRole(Role role)\n+  {\n+    membershipChanger.onRole(role);\n+  }\n+\n+  @Override\n+  public Set<MemberId> votingMembers()\n+  {\n+    return votingMembers;\n+  }\n+\n+  @Override\n+  public Set<MemberId> replicationMembers()\n+  {\n+    return replicationMembers;\n+  }\n+\n+  @Override\n+  public void registerListener(Listener listener)\n+  {\n+    listeners.add(listener);\n+  }\n+\n+  boolean uncommittedMemberChangeInLog()\n+  {\n+    return state.uncommittedMemberChangeInLog();\n+  }\n+\n+  public void processLog(long commitIndex, Collection<RaftLogCommand> logCommands) throws IOException\n+  {\n+    for (RaftLogCommand logCommand : logCommands)\n     {\n-        return replicationMembers;\n+      logCommand.dispatch(this);\n     }\n \n-    @Override\n-    public void registerListener( Listener listener )\n+    if (state.commit(commitIndex))\n     {\n-        listeners.add( listener );\n+      membershipChanger.onRaftGroupCommitted();\n+      storage.persistStoreData(state);\n+      updateMemberSets();\n     }\n+  }\n \n-    boolean uncommittedMemberChangeInLog()\n-    {\n-        return state.uncommittedMemberChangeInLog();\n-    }\n+  @Override\n+  public void append(long baseIndex, RaftLogEntry... entries) throws IOException\n+  {\n+    /* The warnings in this method are rarely expected occurrences which warrant to be logged with significance. */\n \n-    public void processLog( long commitIndex, Collection<RaftLogCommand> logCommands ) throws IOException\n+    for (RaftLogEntry entry : entries)\n     {\n-        for ( RaftLogCommand logCommand : logCommands )\n-        {\n-            logCommand.dispatch( this );\n-        }\n+      if (entry.content() instanceof RaftGroup)\n+      {\n+        RaftGroup<MemberId> raftGroup = (RaftGroup<MemberId>) entry.content();\n \n-        if ( state.commit( commitIndex ) )\n+        if (state.uncommittedMemberChangeInLog())\n         {\n-            membershipChanger.onRaftGroupCommitted();\n-            storage.persistStoreData( state );\n-            updateMemberSets();\n+          log.warn(\"Appending with uncommitted membership change in log\");\n         }\n-    }\n-\n-    @Override\n-    public void append( long baseIndex, RaftLogEntry... entries ) throws IOException\n-    {\n-        /* The warnings in this method are rarely expected occurrences which warrant to be logged with significance. */\n \n-        for ( RaftLogEntry entry : entries )\n+        if (state.append(baseIndex, new HashSet<>(raftGroup.getMembers())))\n         {\n-            if ( entry.content() instanceof RaftGroup )\n-            {\n-                RaftGroup<MemberId> raftGroup = (RaftGroup<MemberId>) entry.content();\n-\n-                if ( state.uncommittedMemberChangeInLog() )\n-                {\n-                    log.warn( \"Appending with uncommitted membership change in log\" );\n-                }\n-\n-                if ( state.append( baseIndex, new HashSet<>( raftGroup.getMembers() ) ) )\n-                {\n-                    log.info( \"Appending new member set %s\", state );\n-                    storage.persistStoreData( state );\n-                    updateMemberSets();\n-                }\n-                else\n-                {\n-                    log.warn( \"Appending member set was ignored. Current state: %s, Appended set: %s, Log index: %d%n\",\n-                            state, raftGroup, baseIndex );\n-                }\n-            }\n-            baseIndex++;\n-        }\n-    }\n-\n-    @Override\n-    public void truncate( long fromIndex ) throws IOException\n-    {\n-        if ( state.truncate( fromIndex ) )\n+          log.info(\"Appending new member set %s\", state);\n+          storage.persistStoreData(state);\n+          updateMemberSets();\n+        } else\n         {\n-            storage.persistStoreData( state );\n-            updateMemberSets();\n+          log.warn(\"Appending member set was ignored. Current state: %s, Appended set: %s, Log index: %d%n\",\n+              state, raftGroup, baseIndex);\n         }\n+      }\n+      baseIndex++;\n     }\n+  }\n \n-    @Override\n-    public void prune( long pruneIndex )\n-    {\n-        // only the actual log prunes\n-    }\n-\n-    public MembershipEntry getCommitted()\n-    {\n-        return state.committed();\n-\n-    }\n-\n-    public void install( MembershipEntry committed ) throws IOException\n+  @Override\n+  public void truncate(long fromIndex) throws IOException\n+  {\n+    if (state.truncate(fromIndex))\n     {\n-        state = new RaftMembershipState( committed.logIndex(), committed, null );\n-        storage.persistStoreData( state );\n-        updateMemberSets();\n+      storage.persistStoreData(state);\n+      updateMemberSets();\n     }\n+  }\n+\n+  @Override\n+  public void prune(long pruneIndex)\n+  {\n+    // only the actual log prunes\n+  }\n+\n+  public MembershipEntry getCommitted()\n+  {\n+    return state.committed();\n+\n+  }\n+\n+  public void install(MembershipEntry committed) throws IOException\n+  {\n+    state = new RaftMembershipState(committed.logIndex(), committed, null);\n+    storage.persistStoreData(state);\n+    updateMemberSets();\n+  }\n }\n",
            "diff_size": 421
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 265).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3924/RaftMembershipManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3924/RaftMembershipManager.java\nindex 737cbd0b3d8..6de3661692c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3924/RaftMembershipManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3924/RaftMembershipManager.java\n@@ -83,8 +83,7 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n         this.minimumConsensusGroupSize = minimumConsensusGroupSize;\n         this.storage = membershipStorage;\n         this.log = logProvider.getLog( getClass() );\n-        this.membershipChanger =\n-                new RaftMembershipChanger( raftLog, clock, electionTimeout, logProvider, catchupTimeout, this );\n+        this.membershipChanger = new RaftMembershipChanger( raftLog, clock, electionTimeout, logProvider, catchupTimeout, this );\n     }\n \n     public void setRecoverFromIndexSupplier( LongSupplier recoverFromIndexSupplier )\n@@ -115,10 +114,8 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n     public void setTargetMembershipSet( Set<MemberId> targetMembers )\n     {\n         boolean targetMembershipChanged = !targetMembers.equals( this.targetMembers );\n-\n-        this.targetMembers = new HashSet<>( targetMembers );\n-\n-        if ( targetMembershipChanged )\n+this.targetMembers = new HashSet<>( targetMembers );\n+if ( targetMembershipChanged )\n         {\n             log.info( \"Target membership: \" + targetMembers );\n         }\n@@ -136,8 +133,7 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n         }\n         Set<MemberId> missingMembers = new HashSet<>( targetMembers );\n         missingMembers.removeAll( votingMembers() );\n-\n-        return missingMembers;\n+return missingMembers;\n     }\n \n     /**\n@@ -149,8 +145,7 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n \n         HashSet<MemberId> newReplicationMembers = new HashSet<>( votingMembers );\n         newReplicationMembers.addAll( additionalReplicationMembers );\n-\n-        replicationMembers = Collections.unmodifiableSet( newReplicationMembers );\n+replicationMembers = Collections.unmodifiableSet( newReplicationMembers );\n         listeners.forEach( Listener::onMembershipChanged );\n     }\n \n@@ -188,11 +183,7 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n         if ( !safeToRemoveMember )\n         {\n             Set<MemberId> membersToRemove = superfluousMembers();\n-\n-            log.info( \"Not safe to remove %s %s because it would reduce the number of voting members below the expected \" +\n-                            \"cluster size of %d. Voting members: %s\",\n-                    membersToRemove.size() > 1 ? \"members\" : \"member\",\n-                    membersToRemove, minimumConsensusGroupSize, votingMembers  );\n+log.info( \"Not safe to remove %s %s because it would reduce the number of voting members below the expected \" + \"cluster size of %d. Voting members: %s\", membersToRemove.size() > 1 ? \"members\" : \"member\", membersToRemove, minimumConsensusGroupSize, votingMembers );\n         }\n \n         return safeToRemoveMember;\n@@ -206,8 +197,7 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n         }\n         Set<MemberId> superfluousMembers = new HashSet<>( votingMembers() );\n         superfluousMembers.removeAll( targetMembers );\n-\n-        return superfluousMembers;\n+return superfluousMembers;\n     }\n \n     private void checkForStartCondition()\n@@ -295,14 +285,12 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n     public void append( long baseIndex, RaftLogEntry... entries ) throws IOException\n     {\n         /* The warnings in this method are rarely expected occurrences which warrant to be logged with significance. */\n-\n-        for ( RaftLogEntry entry : entries )\n+for ( RaftLogEntry entry : entries )\n         {\n             if ( entry.content() instanceof RaftGroup )\n             {\n                 RaftGroup<MemberId> raftGroup = (RaftGroup<MemberId>) entry.content();\n-\n-                if ( state.uncommittedMemberChangeInLog() )\n+if ( state.uncommittedMemberChangeInLog() )\n                 {\n                     log.warn( \"Appending with uncommitted membership change in log\" );\n                 }\n@@ -317,7 +305,7 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n                 {\n                     log.warn( \"Appending member set was ignored. Current state: %s, Appended set: %s, Log index: %d%n\",\n                             state, raftGroup, baseIndex );\n-                }\n+    }\n             }\n             baseIndex++;\n         }\n@@ -342,7 +330,6 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n     public MembershipEntry getCommitted()\n     {\n         return state.committed();\n-\n     }\n \n     public void install( MembershipEntry committed ) throws IOException\n@@ -351,4 +338,4 @@ public class RaftMembershipManager extends LifecycleAdapter implements RaftMembe\n         storage.persistStoreData( state );\n         updateMemberSets();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
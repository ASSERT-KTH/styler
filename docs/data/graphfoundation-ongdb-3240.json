{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3240",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3240/DbStructureTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3240/DbStructureTool.java\nindex 3e3f6f453f7..5042d20eef6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3240/DbStructureTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3240/DbStructureTool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.dbstructure;\n \n import java.io.File;\n@@ -31,109 +32,107 @@ import static java.lang.String.format;\n \n public class DbStructureTool\n {\n-    protected DbStructureTool()\n-    {\n-    }\n-\n-    public static void main( String[] args ) throws IOException\n+  protected DbStructureTool()\n+  {\n+  }\n+\n+  public static void main(String[] args) throws IOException\n+  {\n+    new DbStructureTool().run(args);\n+  }\n+\n+  protected void run(String[] args) throws IOException\n+  {\n+    if (args.length != 2 && args.length != 3)\n     {\n-        new DbStructureTool().run( args );\n+      System.err.println(\"arguments: <generated class name> [<output source root>] <database dir>\");\n+      System.exit(1);\n     }\n \n-    protected void run( String[] args ) throws IOException\n-    {\n-        if ( args.length != 2 && args.length != 3 )\n-        {\n-            System.err.println( \"arguments: <generated class name> [<output source root>] <database dir>\" );\n-            System.exit( 1 );\n-        }\n-\n-        boolean writeToFile = args.length == 3;\n-        String generatedClassWithPackage = args[0];\n-        String dbDir = writeToFile ? args[2] : args[1];\n+    boolean writeToFile = args.length == 3;\n+    String generatedClassWithPackage = args[0];\n+    String dbDir = writeToFile ? args[2] : args[1];\n \n-        Pair<String, String> parsedGenerated = parseClassNameWithPackage( generatedClassWithPackage );\n-        String generatedClassPackage = parsedGenerated.first();\n-        String generatedClassName = parsedGenerated.other();\n+    Pair<String, String> parsedGenerated = parseClassNameWithPackage(generatedClassWithPackage);\n+    String generatedClassPackage = parsedGenerated.first();\n+    String generatedClassName = parsedGenerated.other();\n \n-        String generator = format( \"%s %s [<output source root>] <db-dir>\",\n-                getClass().getCanonicalName(),\n-                generatedClassWithPackage\n-        );\n+    String generator = format(\"%s %s [<output source root>] <db-dir>\",\n+        getClass().getCanonicalName(),\n+        generatedClassWithPackage\n+    );\n \n-        GraphDatabaseService graph = instantiateGraphDatabase( dbDir );\n-        try\n-        {\n-            if ( writeToFile )\n-            {\n-                File sourceRoot = new File( args[1] );\n-                String outputPackageDir = generatedClassPackage.replace( '.', File.separatorChar );\n-                String outputFileName = generatedClassName + \".java\";\n-                File outputDir = new File( sourceRoot, outputPackageDir );\n-                File outputFile = new File( outputDir, outputFileName );\n-                try ( PrintWriter writer = new PrintWriter( outputFile ) )\n-                {\n-                    traceDb( generator, generatedClassPackage, generatedClassName, graph, writer );\n-                }\n-            }\n-            else\n-            {\n-                traceDb( generator, generatedClassPackage, generatedClassName, graph, System.out );\n-            }\n-        }\n-        finally\n+    GraphDatabaseService graph = instantiateGraphDatabase(dbDir);\n+    try\n+    {\n+      if (writeToFile)\n+      {\n+        File sourceRoot = new File(args[1]);\n+        String outputPackageDir = generatedClassPackage.replace('.', File.separatorChar);\n+        String outputFileName = generatedClassName + \".java\";\n+        File outputDir = new File(sourceRoot, outputPackageDir);\n+        File outputFile = new File(outputDir, outputFileName);\n+        try (PrintWriter writer = new PrintWriter(outputFile))\n         {\n-            graph.shutdown();\n+          traceDb(generator, generatedClassPackage, generatedClassName, graph, writer);\n         }\n-    }\n-\n-    protected GraphDatabaseService instantiateGraphDatabase( String dbDir )\n+      } else\n+      {\n+        traceDb(generator, generatedClassPackage, generatedClassName, graph, System.out);\n+      }\n+    } finally\n     {\n-        return new GraphDatabaseFactory().newEmbeddedDatabase( new File( dbDir ) );\n+      graph.shutdown();\n     }\n-\n-    private void traceDb( String generator,\n-                                 String generatedClazzPackage, String generatedClazzName,\n-                                 GraphDatabaseService graph,\n-                                 Appendable output )\n-            throws IOException\n+  }\n+\n+  protected GraphDatabaseService instantiateGraphDatabase(String dbDir)\n+  {\n+    return new GraphDatabaseFactory().newEmbeddedDatabase(new File(dbDir));\n+  }\n+\n+  private void traceDb(String generator,\n+                       String generatedClazzPackage, String generatedClazzName,\n+                       GraphDatabaseService graph,\n+                       Appendable output)\n+      throws IOException\n+  {\n+    InvocationTracer<DbStructureVisitor> tracer = new InvocationTracer<>(\n+        generator,\n+        generatedClazzPackage,\n+        generatedClazzName,\n+        DbStructureVisitor.class,\n+        DbStructureArgumentFormatter.INSTANCE,\n+        output\n+    );\n+\n+    DbStructureVisitor visitor = tracer.newProxy();\n+    GraphDbStructureGuide guide = new GraphDbStructureGuide(graph);\n+    guide.accept(visitor);\n+    tracer.close();\n+  }\n+\n+  private Pair<String, String> parseClassNameWithPackage(String classNameWithPackage)\n+  {\n+    if (classNameWithPackage.contains(\"%\"))\n     {\n-        InvocationTracer<DbStructureVisitor> tracer = new InvocationTracer<>(\n-                generator,\n-                generatedClazzPackage,\n-                generatedClazzName,\n-                DbStructureVisitor.class,\n-                DbStructureArgumentFormatter.INSTANCE,\n-                output\n-        );\n-\n-        DbStructureVisitor visitor = tracer.newProxy();\n-        GraphDbStructureGuide guide = new GraphDbStructureGuide( graph );\n-        guide.accept( visitor );\n-        tracer.close();\n+      throw new IllegalArgumentException(\n+          \"Format character in generated class name: \" + classNameWithPackage\n+      );\n     }\n \n-    private Pair<String, String> parseClassNameWithPackage( String classNameWithPackage )\n-    {\n-        if ( classNameWithPackage.contains( \"%\" ) )\n-        {\n-            throw new IllegalArgumentException(\n-                \"Format character in generated class name: \" + classNameWithPackage\n-            );\n-        }\n-\n-        int index = classNameWithPackage.lastIndexOf( '.' );\n+    int index = classNameWithPackage.lastIndexOf('.');\n \n-        if ( index < 0 )\n-        {\n-            throw new IllegalArgumentException(\n-                \"Expected fully qualified class name but got: \" + classNameWithPackage\n-            );\n-        }\n-\n-        return Pair.of(\n-            classNameWithPackage.substring( 0, index ),\n-            classNameWithPackage.substring( index + 1 )\n-        );\n+    if (index < 0)\n+    {\n+      throw new IllegalArgumentException(\n+          \"Expected fully qualified class name but got: \" + classNameWithPackage\n+      );\n     }\n+\n+    return Pair.of(\n+        classNameWithPackage.substring(0, index),\n+        classNameWithPackage.substring(index + 1)\n+    );\n+  }\n }\n",
            "diff_size": 132
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3240/DbStructureTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3240/DbStructureTool.java\nindex 3e3f6f453f7..fa88928d707 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3240/DbStructureTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3240/DbStructureTool.java\n@@ -52,16 +52,12 @@ public class DbStructureTool\n         String generatedClassWithPackage = args[0];\n         String dbDir = writeToFile ? args[2] : args[1];\n \n-        Pair<String, String> parsedGenerated = parseClassNameWithPackage( generatedClassWithPackage );\n+        Pair<String,String> parsedGenerated = parseClassNameWithPackage( generatedClassWithPackage );\n         String generatedClassPackage = parsedGenerated.first();\n         String generatedClassName = parsedGenerated.other();\n-\n-        String generator = format( \"%s %s [<output source root>] <db-dir>\",\n-                getClass().getCanonicalName(),\n-                generatedClassWithPackage\n-        );\n-\n-        GraphDatabaseService graph = instantiateGraphDatabase( dbDir );\n+String generator = format( \"%s %s [<output source root>] <db-dir>\",\n+                getClass().getCanonicalName(), generatedClassWithPackage );\n+GraphDatabaseService graph = instantiateGraphDatabase( dbDir );\n         try\n         {\n             if ( writeToFile )\n@@ -92,48 +88,33 @@ public class DbStructureTool\n         return new GraphDatabaseFactory().newEmbeddedDatabase( new File( dbDir ) );\n     }\n \n-    private void traceDb( String generator,\n-                                 String generatedClazzPackage, String generatedClazzName,\n+    private void traceDb( String generator, String generatedClazzPackage, String generatedClazzName,\n                                  GraphDatabaseService graph,\n-                                 Appendable output )\n-            throws IOException\n-    {\n-        InvocationTracer<DbStructureVisitor> tracer = new InvocationTracer<>(\n-                generator,\n-                generatedClazzPackage,\n-                generatedClazzName,\n+                                 Appendable output ) throws IOException\n+{\n+        InvocationTracer<DbStructureVisitor> tracer = new InvocationTracer<>( generator, generatedClazzPackage, generatedClazzName,\n                 DbStructureVisitor.class,\n                 DbStructureArgumentFormatter.INSTANCE,\n-                output\n-        );\n-\n-        DbStructureVisitor visitor = tracer.newProxy();\n+                output );\n+DbStructureVisitor visitor = tracer.newProxy();\n         GraphDbStructureGuide guide = new GraphDbStructureGuide( graph );\n         guide.accept( visitor );\n         tracer.close();\n     }\n \n-    private Pair<String, String> parseClassNameWithPackage( String classNameWithPackage )\n+    private Pair<String,String> parseClassNameWithPackage( String classNameWithPackage )\n     {\n         if ( classNameWithPackage.contains( \"%\" ) )\n         {\n-            throw new IllegalArgumentException(\n-                \"Format character in generated class name: \" + classNameWithPackage\n-            );\n+            throw new IllegalArgumentException( \"Format character in generated class name: \" + classNameWithPackage );\n         }\n \n         int index = classNameWithPackage.lastIndexOf( '.' );\n-\n-        if ( index < 0 )\n+if ( index < 0 )\n         {\n-            throw new IllegalArgumentException(\n-                \"Expected fully qualified class name but got: \" + classNameWithPackage\n-            );\n+            throw new IllegalArgumentException( \"Expected fully qualified class name but got: \" + classNameWithPackage );\n         }\n \n-        return Pair.of(\n-            classNameWithPackage.substring( 0, index ),\n-            classNameWithPackage.substring( index + 1 )\n-        );\n+        return Pair.of( classNameWithPackage.substring( 0, index ), classNameWithPackage.substring( index + 1 ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
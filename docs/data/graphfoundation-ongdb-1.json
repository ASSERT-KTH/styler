{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1/FileWatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1/FileWatcher.java\nindex 1dd31303b9b..3c0dc29ad4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1/FileWatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1/FileWatcher.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.fs.watcher;\n \n import java.io.Closeable;\n@@ -28,7 +29,7 @@ import org.neo4j.io.fs.watcher.resource.WatchedResource;\n \n /**\n  * Watcher that allows receive notification about files modifications/removal for particular underlying file system.\n- *\n+ * <p>\n  * To be able to get notification users need to register resource they are interested in using\n  * {@link #watch(File)} method call and add by adding {@link FileWatchEventListener listner} to be able to receive\n  * status updates.\n@@ -38,41 +39,45 @@ import org.neo4j.io.fs.watcher.resource.WatchedResource;\n public interface FileWatcher extends Closeable\n {\n \n-    FileWatcher SILENT_WATCHER = new SilentFileWatcher();\n+  FileWatcher SILENT_WATCHER = new SilentFileWatcher();\n \n-    /**\n-     * Register provided directory in list of resources that we would like to watch and receive status modification\n-     * updates\n-     * @param file directory to be monitored for updates\n-     * @return\n-     * @throws IOException\n-     */\n-    WatchedResource watch( File file ) throws IOException;\n+  /**\n+   * Register provided directory in list of resources that we would like to watch and receive status modification\n+   * updates\n+   *\n+   * @param file directory to be monitored for updates\n+   * @return\n+   * @throws IOException\n+   */\n+  WatchedResource watch(File file) throws IOException;\n \n-    /**\n-     * Register listener to receive updates about registered resources.\n-     * @param listener listener to register\n-     */\n-    void addFileWatchEventListener( FileWatchEventListener listener );\n+  /**\n+   * Register listener to receive updates about registered resources.\n+   *\n+   * @param listener listener to register\n+   */\n+  void addFileWatchEventListener(FileWatchEventListener listener);\n \n-    /**\n-     * Remove listener from a list of updates receivers.\n-     * @param listener listener to remove\n-     */\n-    void removeFileWatchEventListener( FileWatchEventListener listener );\n+  /**\n+   * Remove listener from a list of updates receivers.\n+   *\n+   * @param listener listener to remove\n+   */\n+  void removeFileWatchEventListener(FileWatchEventListener listener);\n \n-    /**\n-     * Stop monitoring of registered directories\n-     */\n-    void stopWatching();\n+  /**\n+   * Stop monitoring of registered directories\n+   */\n+  void stopWatching();\n \n-    /**\n-     * Start monitoring of registered directories.\n-     * This method we will wait for notification about registered resources, meaning that it will block thread where\n-     * it was called. If it is desired to start file watching as background task - watcher should be started in\n-     * separate thread.\n-     * Watching can be stopped by calling {@link #stopWatching()}.\n-     * @throws InterruptedException when interrupted while waiting for update notification to come\n-     */\n-    void startWatching() throws InterruptedException;\n+  /**\n+   * Start monitoring of registered directories.\n+   * This method we will wait for notification about registered resources, meaning that it will block thread where\n+   * it was called. If it is desired to start file watching as background task - watcher should be started in\n+   * separate thread.\n+   * Watching can be stopped by calling {@link #stopWatching()}.\n+   *\n+   * @throws InterruptedException when interrupted while waiting for update notification to come\n+   */\n+  void startWatching() throws InterruptedException;\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1/FileWatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1/FileWatcher.java\nindex 1dd31303b9b..3138f994ab3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1/FileWatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1/FileWatcher.java\n@@ -37,7 +37,6 @@ import org.neo4j.io.fs.watcher.resource.WatchedResource;\n  */\n public interface FileWatcher extends Closeable\n {\n-\n     FileWatcher SILENT_WATCHER = new SilentFileWatcher();\n \n     /**\n@@ -75,4 +74,4 @@ public interface FileWatcher extends Closeable\n      * @throws InterruptedException when interrupted while waiting for update notification to come\n      */\n     void startWatching() throws InterruptedException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
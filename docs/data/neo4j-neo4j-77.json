{
    "project_name": "neo4j-neo4j",
    "error_id": "77",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "198",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "271",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/77/NotificationCode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/77/NotificationCode.java\nindex 2b4534c8675..989f713d83a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/77/NotificationCode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/77/NotificationCode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl.notification;\n \n \n@@ -32,215 +33,215 @@ import org.neo4j.kernel.api.exceptions.Status;\n public enum NotificationCode\n {\n     CARTESIAN_PRODUCT(\n-       SeverityLevel.WARNING,\n-       Status.Statement.CartesianProductWarning,\n-       \"If a part of a query contains multiple disconnected patterns, this will build a \" +\n-       \"cartesian product between all those parts. This may produce a large amount of data and slow down\" +\n-       \" query processing. \" +\n-       \"While occasionally intended, it may often be possible to reformulate the query that avoids the \" +\n-       \"use of this cross \" +\n-       \"product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.CartesianProductWarning,\n+      \"If a part of a query contains multiple disconnected patterns, this will build a \" +\n+        \"cartesian product between all those parts. This may produce a large amount of data and slow down\" +\n+        \" query processing. \" +\n+        \"While occasionally intended, it may often be possible to reformulate the query that avoids the \" +\n+        \"use of this cross \" +\n+        \"product, perhaps by adding a relationship between the different parts or by using OPTIONAL MATCH\"\n     ),\n     RUNTIME_UNSUPPORTED(\n-        SeverityLevel.WARNING,\n-        Status.Statement.RuntimeUnsupportedWarning,\n-        \"Selected runtime is unsupported for this query, please use a different runtime instead or fallback to default.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.RuntimeUnsupportedWarning,\n+      \"Selected runtime is unsupported for this query, please use a different runtime instead or fallback to default.\"\n     ),\n     INDEX_HINT_UNFULFILLABLE(\n-        SeverityLevel.WARNING,\n-        Status.Schema.IndexNotFound,\n-        \"The hinted index does not exist, please check the schema\"\n+      SeverityLevel.WARNING,\n+      Status.Schema.IndexNotFound,\n+      \"The hinted index does not exist, please check the schema\"\n     ),\n     JOIN_HINT_UNFULFILLABLE(\n-        SeverityLevel.WARNING,\n-        Status.Statement.JoinHintUnfulfillableWarning,\n-        \"The hinted join was not planned. This could happen because no generated plan contained the join key, \" +\n-                \"please try using a different join key or restructure your query.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.JoinHintUnfulfillableWarning,\n+      \"The hinted join was not planned. This could happen because no generated plan contained the join key, \" +\n+        \"please try using a different join key or restructure your query.\"\n     ),\n     LENGTH_ON_NON_PATH(\n-        SeverityLevel.WARNING,\n-        Status.Statement.FeatureDeprecationWarning,\n-        \"Using 'length' on anything that is not a path is deprecated, please use 'size' instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"Using 'length' on anything that is not a path is deprecated, please use 'size' instead\"\n     ),\n     INDEX_LOOKUP_FOR_DYNAMIC_PROPERTY(\n-        SeverityLevel.WARNING,\n-        Status.Statement.DynamicPropertyWarning,\n-        \"Using a dynamic property makes it impossible to use an index lookup for this query\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.DynamicPropertyWarning,\n+      \"Using a dynamic property makes it impossible to use an index lookup for this query\"\n     ),\n     DEPRECATED_FUNCTION(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated function.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The query used a deprecated function.\"\n     ),\n     DEPRECATED_PROCEDURE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated procedure.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The query used a deprecated procedure.\"\n     ),\n     PROCEDURE_WARNING(\n-            SeverityLevel.WARNING,\n-            Status.Procedure.ProcedureWarning,\n-            \"The query used a procedure that generated a warning.\"\n+      SeverityLevel.WARNING,\n+      Status.Procedure.ProcedureWarning,\n+      \"The query used a procedure that generated a warning.\"\n     ),\n     DEPRECATED_PROCEDURE_RETURN_FIELD(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The query used a deprecated field from a procedure.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The query used a deprecated field from a procedure.\"\n     ),\n     DEPRECATED_BINDING_VAR_LENGTH_RELATIONSHIP(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"Binding relationships to a list in a variable length pattern is deprecated.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"Binding relationships to a list in a variable length pattern is deprecated.\"\n     ),\n     DEPRECATED_RELATIONSHIP_TYPE_SEPARATOR(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The semantics of using colon in the separation of alternative relationship types in conjunction with the \" +\n-            \"use of variable binding, inlined property predicates, or variable length will change in a future version.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The semantics of using colon in the separation of alternative relationship types in conjunction with the \" +\n+        \"use of variable binding, inlined property predicates, or variable length will change in a future version.\"\n     ),\n     DEPRECATED_PARAMETER_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The parameter syntax `{param}` is deprecated, please use `$param` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The parameter syntax `{param}` is deprecated, please use `$param` instead\"\n     ),\n     DEPRECATED_CREATE_INDEX_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The create index syntax `CREATE INDEX ON :Label(property)` is deprecated, please use `CREATE INDEX FOR (n:Label) ON (n.property)` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The create index syntax `CREATE INDEX ON :Label(property)` is deprecated, please use `CREATE INDEX FOR (n:Label) ON (n.property)` instead\"\n     ),\n     DEPRECATED_DROP_INDEX_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The drop index syntax `DROP INDEX ON :Label(property)` is deprecated, please use `DROP INDEX index_name` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The drop index syntax `DROP INDEX ON :Label(property)` is deprecated, please use `DROP INDEX index_name` instead\"\n     ),\n     DEPRECATED_DROP_CONSTRAINT_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The drop constraint by schema syntax `DROP CONSTRAINT ON ...` is deprecated, please use `DROP CONSTRAINT constraint_name` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The drop constraint by schema syntax `DROP CONSTRAINT ON ...` is deprecated, please use `DROP CONSTRAINT constraint_name` instead\"\n     ),\n     DEPRECATED_CREATE_PROPERTY_EXISTENCE_CONSTRAINT_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The create property existence constraint syntax `CREATE CONSTRAINT ON ... ASSERT exists(variable.property)` is deprecated, \" +\n-                    \"please use `CREATE CONSTRAINT ON ... ASSERT (variable.property) IS NOT NULL` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The create property existence constraint syntax `CREATE CONSTRAINT ON ... ASSERT exists(variable.property)` is deprecated, \" +\n+        \"please use `CREATE CONSTRAINT ON ... ASSERT (variable.property) IS NOT NULL` instead\"\n     ),\n     DEPRECATED_PROPERTY_EXISTENCE_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The property existence syntax `... exists(variable.property)` is deprecated, please use `variable.property IS NOT NULL` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The property existence syntax `... exists(variable.property)` is deprecated, please use `variable.property IS NOT NULL` instead\"\n     ),\n     DEPRECATED_OCTAL_LITERAL_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The octal integer literal syntax `0123` is deprecated, please use `0o123` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The octal integer literal syntax `0123` is deprecated, please use `0o123` instead\"\n     ),\n     DEPRECATED_HEX_LITERAL_SYNTAX(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"The hex integer literal syntax `0X123` is deprecated, please use `0x123` instead\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"The hex integer literal syntax `0X123` is deprecated, please use `0x123` instead\"\n     ),\n     DEPRECATED_USE_OF_PATTERN_EXPRESSION(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"A pattern expression should only be used in order to test the existence of a pattern. \" +\n-            \"It should therefore only be used in contexts that evaluate to a Boolean, e.g. inside the function exists() or in a WHERE-clause. \" +\n-            \"All other uses are deprecated.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"A pattern expression should only be used in order to test the existence of a pattern. \" +\n+        \"It should therefore only be used in contexts that evaluate to a Boolean, e.g. inside the function exists() or in a WHERE-clause. \" +\n+        \"All other uses are deprecated.\"\n     ),\n     EAGER_LOAD_CSV(\n-        SeverityLevel.WARNING,\n-        Status.Statement.EagerOperatorWarning,\n-        \"Using LOAD CSV with a large data set in a query where the execution plan contains the \" +\n+      SeverityLevel.WARNING,\n+      Status.Statement.EagerOperatorWarning,\n+      \"Using LOAD CSV with a large data set in a query where the execution plan contains the \" +\n         \"Eager operator could potentially consume a lot of memory and is likely to not perform well. \" +\n         \"See the Neo4j Manual entry on the Eager operator for more information and hints on \" +\n         \"how problems could be avoided.\"\n     ),\n     LARGE_LABEL_LOAD_CSV(\n-        SeverityLevel.WARNING,\n-        Status.Statement.NoApplicableIndexWarning,\n-        \"Using LOAD CSV followed by a MATCH or MERGE that matches a non-indexed label will most likely \" +\n+      SeverityLevel.WARNING,\n+      Status.Statement.NoApplicableIndexWarning,\n+      \"Using LOAD CSV followed by a MATCH or MERGE that matches a non-indexed label will most likely \" +\n         \"not perform well on large data sets. Please consider using a schema index.\"\n-        ),\n+    ),\n     MISSING_LABEL(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownLabelWarning,\n-            \"One of the labels in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnknownLabelWarning,\n+      \"One of the labels in your query is not available in the database, make sure you didn't \" +\n+        \"misspell it or that the label is available when you run this statement in your application\"\n     ),\n     MISSING_REL_TYPE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownRelationshipTypeWarning,\n-            \"One of the relationship types in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnknownRelationshipTypeWarning,\n+      \"One of the relationship types in your query is not available in the database, make sure you didn't \" +\n+        \"misspell it or that the label is available when you run this statement in your application\"\n     ),\n     MISSING_PROPERTY_NAME(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnknownPropertyKeyWarning,\n-            \"One of the property names in your query is not available in the database, make sure you didn't \" +\n-            \"misspell it or that the label is available when you run this statement in your application\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnknownPropertyKeyWarning,\n+      \"One of the property names in your query is not available in the database, make sure you didn't \" +\n+        \"misspell it or that the label is available when you run this statement in your application\"\n     ),\n     UNBOUNDED_SHORTEST_PATH(\n-            SeverityLevel.WARNING,\n-            Status.Statement.UnboundedVariableLengthPatternWarning,\n-            \"Using shortest path with an unbounded pattern will likely result in long execution times. \" +\n-            \"It is recommended to use an upper limit to the number of node hops in your pattern.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.UnboundedVariableLengthPatternWarning,\n+      \"Using shortest path with an unbounded pattern will likely result in long execution times. \" +\n+        \"It is recommended to use an upper limit to the number of node hops in your pattern.\"\n     ),\n     EXHAUSTIVE_SHORTEST_PATH(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ExhaustiveShortestPathWarning,\n-            \"Using shortest path with an exhaustive search fallback might cause query slow down since shortest path \" +\n-            \"graph algorithms might not work for this use case. It is recommended to introduce a WITH to separate the \" +\n-            \"MATCH containing the shortest path from the existential predicates on that path.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.ExhaustiveShortestPathWarning,\n+      \"Using shortest path with an exhaustive search fallback might cause query slow down since shortest path \" +\n+        \"graph algorithms might not work for this use case. It is recommended to introduce a WITH to separate the \" +\n+        \"MATCH containing the shortest path from the existential predicates on that path.\"\n     ),\n     EXPERIMENTAL_FEATURE(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ExperimentalFeature,\n-            \"You are using an experimental feature\" ),\n+      SeverityLevel.WARNING,\n+      Status.Statement.ExperimentalFeature,\n+      \"You are using an experimental feature\"),\n     MISSING_PARAMETERS_FOR_EXPLAIN(\n-            SeverityLevel.WARNING,\n-            Status.Statement.ParameterMissing,\n-            \"Did not supply query with enough parameters. The produced query plan will not be cached and is not executable without EXPLAIN.\" ),\n+      SeverityLevel.WARNING,\n+      Status.Statement.ParameterMissing,\n+      \"Did not supply query with enough parameters. The produced query plan will not be cached and is not executable without EXPLAIN.\"),\n     SUBOPTIMAL_INDEX_FOR_CONTAINS_QUERY(\n-            SeverityLevel.INFORMATION,\n-            Status.Statement.SuboptimalIndexForWildcardQuery,\n-            \"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see \" +\n-                    \"documentation on index configuration.\" ),\n+      SeverityLevel.INFORMATION,\n+      Status.Statement.SuboptimalIndexForWildcardQuery,\n+      \"If the performance of this statement using `CONTAINS` doesn't meet your expectations check out the alternative index-providers, see \" +\n+        \"documentation on index configuration.\"),\n     SUBOPTIMAL_INDEX_FOR_ENDS_WITH_QUERY(\n-            SeverityLevel.INFORMATION,\n-            Status.Statement.SuboptimalIndexForWildcardQuery,\n-            \"If the performance of this statement using `ENDS WITH` doesn't meet your expectations check out the alternative index-providers, see \" +\n-                    \"documentation on index configuration.\" ),\n+      SeverityLevel.INFORMATION,\n+      Status.Statement.SuboptimalIndexForWildcardQuery,\n+      \"If the performance of this statement using `ENDS WITH` doesn't meet your expectations check out the alternative index-providers, see \" +\n+        \"documentation on index configuration.\"),\n     CODE_GENERATION_FAILED(\n-            SeverityLevel.WARNING,\n-            Status.Statement.CodeGenerationFailed,\n-            \"The database was unable to generate code for the query. A stacktrace can be found in the debug.log.\" ),\n+      SeverityLevel.WARNING,\n+      Status.Statement.CodeGenerationFailed,\n+      \"The database was unable to generate code for the query. A stacktrace can be found in the debug.log.\"),\n     REPEATED_REL_IN_PATTERN_EXPRESSION(\n-            SeverityLevel.WARNING,\n-            Status.Statement.FeatureDeprecationWarning,\n-            \"You are using the same relationship variable for multiple patterns in a pattern expression/comprehension. \" +\n-            \"This feature is deprecated and will be removed in a future version, \" +\n-            \"because it does not follow Cyphers pattern matching relationship uniqueness rule. \" +\n-            \"It can lead to the optimizer choosing bad plans for that pattern expression/comprehension. \" +\n-            \"Please rewrite your query, using the start node and/or end node of the relationship in the pattern expression/comprehension instead.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.FeatureDeprecationWarning,\n+      \"You are using the same relationship variable for multiple patterns in a pattern expression/comprehension. \" +\n+        \"This feature is deprecated and will be removed in a future version, \" +\n+        \"because it does not follow Cyphers pattern matching relationship uniqueness rule. \" +\n+        \"It can lead to the optimizer choosing bad plans for that pattern expression/comprehension. \" +\n+        \"Please rewrite your query, using the start node and/or end node of the relationship in the pattern expression/comprehension instead.\"\n     ),\n     SUBQUERY_VARIABLE_SHADOWING(\n-            SeverityLevel.WARNING,\n-            Status.Statement.SubqueryVariableShadowingWarning,\n-            \"Variable in subquery is shadowing a variable with the same name from the outer scope. \" +\n-            \"If you want to use that variable instead, it must be imported into the subquery using importing WITH clause.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.SubqueryVariableShadowingWarning,\n+      \"Variable in subquery is shadowing a variable with the same name from the outer scope. \" +\n+        \"If you want to use that variable instead, it must be imported into the subquery using importing WITH clause.\"\n     ),\n     MISSING_ALIAS(\n-            SeverityLevel.WARNING,\n-            Status.Statement.MissingAlias,\n-            \"There is no alias for one or more complex returned items in a RETURN clause in a CALL subquery. \" +\n-            \"All returned items except variables, e.g. 'RETURN n', and map projections, e.g. 'RETURN n { .prop, .prop2 }' \" +\n-            \"should be aliased explicitly using 'AS'. The support for such unaliased returned items will be removed in a future version.\"\n+      SeverityLevel.WARNING,\n+      Status.Statement.MissingAlias,\n+      \"There is no alias for one or more complex returned items in a RETURN clause in a CALL subquery. \" +\n+        \"All returned items except variables, e.g. 'RETURN n', and map projections, e.g. 'RETURN n { .prop, .prop2 }' \" +\n+        \"should be aliased explicitly using 'AS'. The support for such unaliased returned items will be removed in a future version.\"\n     );\n \n     private final Status status;\n     private final String description;\n     private final SeverityLevel severity;\n \n-    NotificationCode( SeverityLevel severity, Status status, String description )\n+    NotificationCode(SeverityLevel severity, Status status, String description)\n     {\n         this.severity = severity;\n         this.status = status;\n@@ -248,9 +249,9 @@ public enum NotificationCode\n     }\n \n     // TODO: Move construction of Notifications to a factory with explicit methods per type of notification\n-    public Notification notification( InputPosition position, NotificationDetail... details )\n+    public Notification notification(InputPosition position, NotificationDetail... details)\n     {\n-        return new Notification( position, details );\n+        return new Notification(position, details);\n     }\n \n     public final class Notification implements org.neo4j.graphdb.Notification\n@@ -258,28 +259,27 @@ public enum NotificationCode\n         private final InputPosition position;\n         private final String detailedDescription;\n \n-        Notification( InputPosition position, NotificationDetail... details )\n+        Notification(InputPosition position, NotificationDetail... details)\n         {\n             this.position = position;\n \n-            if ( details.length == 0 )\n+            if (details.length == 0)\n             {\n                 this.detailedDescription = description;\n-            }\n-            else\n+            } else\n             {\n-                StringBuilder builder = new StringBuilder( description.length() );\n-                builder.append( description );\n-                builder.append( ' ' );\n-                builder.append( '(' );\n+                StringBuilder builder = new StringBuilder(description.length());\n+                builder.append(description);\n+                builder.append(' ');\n+                builder.append('(');\n                 String comma = \"\";\n-                for ( NotificationDetail detail : details )\n+                for (NotificationDetail detail : details)\n                 {\n-                    builder.append( comma );\n-                    builder.append( detail );\n+                    builder.append(comma);\n+                    builder.append(detail);\n                     comma = \", \";\n                 }\n-                builder.append( ')' );\n+                builder.append(')');\n \n                 this.detailedDescription = builder.toString();\n             }\n@@ -319,31 +319,31 @@ public enum NotificationCode\n         public String toString()\n         {\n             return \"Notification{\" +\n-                    \"position=\" + position +\n-                    \", detailedDescription='\" + detailedDescription + '\\'' +\n-                    '}';\n+              \"position=\" + position +\n+              \", detailedDescription='\" + detailedDescription + '\\'' +\n+              '}';\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n             Notification that = (Notification) o;\n-            return Objects.equals( position, that.position ) &&\n-                    Objects.equals( detailedDescription, that.detailedDescription );\n+            return Objects.equals(position, that.position) &&\n+              Objects.equals(detailedDescription, that.detailedDescription);\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( position, detailedDescription );\n+            return Objects.hash(position, detailedDescription);\n         }\n     }\n }\n",
            "diff_size": 159
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
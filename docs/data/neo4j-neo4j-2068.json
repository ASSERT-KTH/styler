{
    "project_name": "neo4j-neo4j",
    "error_id": "2068",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2068/BoltFabricDatabaseService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2068/BoltFabricDatabaseService.java\nindex 10297707f8d..69b43f1fbbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2068/BoltFabricDatabaseService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2068/BoltFabricDatabaseService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.bolt;\n \n import java.time.Duration;\n@@ -60,12 +61,12 @@ public class BoltFabricDatabaseService implements BoltGraphDatabaseServiceSPI\n     private final LocalGraphTransactionIdTracker transactionIdTracker;\n     private final TransactionBookmarkManagerFactory transactionBookmarkManagerFactory;\n \n-    public BoltFabricDatabaseService( NamedDatabaseId namedDatabaseId,\n-                                      FabricExecutor fabricExecutor,\n-                                      FabricConfig config,\n-                                      TransactionManager transactionManager,\n-                                      LocalGraphTransactionIdTracker transactionIdTracker,\n-                                      TransactionBookmarkManagerFactory transactionBookmarkManagerFactory )\n+    public BoltFabricDatabaseService(NamedDatabaseId namedDatabaseId,\n+                                     FabricExecutor fabricExecutor,\n+                                     FabricConfig config,\n+                                     TransactionManager transactionManager,\n+                                     LocalGraphTransactionIdTracker transactionIdTracker,\n+                                     TransactionBookmarkManagerFactory transactionBookmarkManagerFactory)\n     {\n         this.namedDatabaseId = namedDatabaseId;\n         this.config = config;\n@@ -76,36 +77,36 @@ public class BoltFabricDatabaseService implements BoltGraphDatabaseServiceSPI\n     }\n \n     @Override\n-    public BoltTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, List<Bookmark> bookmarks,\n-                                             Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata, RoutingContext routingContext )\n+    public BoltTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, List<Bookmark> bookmarks,\n+                                            Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata, RoutingContext routingContext)\n     {\n-        if ( txTimeout == null )\n+        if (txTimeout == null)\n         {\n             txTimeout = config.getTransactionTimeout();\n         }\n \n         FabricTransactionInfo transactionInfo = new FabricTransactionInfo(\n-                accessMode,\n-                loginContext,\n-                clientInfo,\n-                namedDatabaseId.name(),\n-                KernelTransaction.Type.IMPLICIT == type,\n-                txTimeout,\n-                txMetadata,\n-                TestOverrides.routingContext( routingContext )\n+          accessMode,\n+          loginContext,\n+          clientInfo,\n+          namedDatabaseId.name(),\n+          KernelTransaction.Type.IMPLICIT == type,\n+          txTimeout,\n+          txMetadata,\n+          TestOverrides.routingContext(routingContext)\n         );\n \n-        var transactionBookmarkManager = transactionBookmarkManagerFactory.createTransactionBookmarkManager( transactionIdTracker );\n-        transactionBookmarkManager.processSubmittedByClient( bookmarks );\n+        var transactionBookmarkManager = transactionBookmarkManagerFactory.createTransactionBookmarkManager(transactionIdTracker);\n+        transactionBookmarkManager.processSubmittedByClient(bookmarks);\n \n-        FabricTransaction fabricTransaction = transactionManager.begin( transactionInfo, transactionBookmarkManager );\n-        return new BoltTransactionImpl( transactionInfo, fabricTransaction );\n+        FabricTransaction fabricTransaction = transactionManager.begin(transactionInfo, transactionBookmarkManager);\n+        return new BoltTransactionImpl(transactionInfo, fabricTransaction);\n     }\n \n     @Override\n-    public boolean isPeriodicCommit( String query )\n+    public boolean isPeriodicCommit(String query)\n     {\n-        return fabricExecutor.isPeriodicCommit( query );\n+        return fabricExecutor.isPeriodicCommit(query);\n     }\n \n     @Override\n@@ -118,7 +119,7 @@ public class BoltFabricDatabaseService implements BoltGraphDatabaseServiceSPI\n     {\n         private final FabricTransaction fabricTransaction;\n \n-        BoltTransactionImpl( FabricTransactionInfo transactionInfo, FabricTransaction fabricTransaction )\n+        BoltTransactionImpl(FabricTransactionInfo transactionInfo, FabricTransaction fabricTransaction)\n         {\n             this.fabricTransaction = fabricTransaction;\n         }\n@@ -136,15 +137,15 @@ public class BoltFabricDatabaseService implements BoltGraphDatabaseServiceSPI\n         }\n \n         @Override\n-        public void markForTermination( Status reason )\n+        public void markForTermination(Status reason)\n         {\n-            fabricTransaction.markForTermination( reason );\n+            fabricTransaction.markForTermination(reason);\n         }\n \n         @Override\n         public void markForTermination()\n         {\n-            fabricTransaction.markForTermination( Terminated );\n+            fabricTransaction.markForTermination(Terminated);\n         }\n \n         @Override\n@@ -160,17 +161,16 @@ public class BoltFabricDatabaseService implements BoltGraphDatabaseServiceSPI\n         }\n \n         @Override\n-        public BoltQueryExecution executeQuery( String query, MapValue parameters, boolean prePopulate, QuerySubscriber subscriber )\n+        public BoltQueryExecution executeQuery(String query, MapValue parameters, boolean prePopulate, QuerySubscriber subscriber)\n         {\n-            StatementResult statementResult = fabricExecutor.run( fabricTransaction, query, parameters );\n-            final BoltQueryExecutionImpl queryExecution = new BoltQueryExecutionImpl( statementResult, subscriber, config );\n+            StatementResult statementResult = fabricExecutor.run(fabricTransaction, query, parameters);\n+            final BoltQueryExecutionImpl queryExecution = new BoltQueryExecutionImpl(statementResult, subscriber, config);\n             try\n             {\n                 queryExecution.initialize();\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                QuerySubscriber.safelyOnError( subscriber, e );\n+                QuerySubscriber.safelyOnError(subscriber, e);\n             }\n             return queryExecution;\n         }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
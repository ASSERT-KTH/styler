{
    "project_name": "bakdata-conquery",
    "error_id": "863",
    "information": {
        "errors": [
            {
                "line": "320",
                "severity": "error",
                "message": "Indent must use tab characters",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\t\t\tuseOldType ?\n\t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n\t\t\t\t\t\t\t   :\n\t\t\t\t\tsrc.getType()\n\t\t\t);\n\t\t\tcol.setParent(imp);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/863/ImportJob.java\nindex 057fb0a0212..98188fcb552 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/863/ImportJob.java\n@@ -317,7 +317,7 @@ public class ImportJob extends Job {\n \t\t\tcol.setType(\n \t\t\t\t\tuseOldType ?\n \t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n-\t\t\t\t\t\t\t   :\n+\t\t\t\t\t:\n \t\t\t\t\tsrc.getType()\n \t\t\t);\n \t\t\tcol.setParent(imp);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "211",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "243",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "253",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "255",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "275",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "277",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "289",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "290",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "292",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "294",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "296",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "302",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "304",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "306",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "307",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "308",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "309",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "310",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "311",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "312",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "313",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "314",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "315",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "317",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "319",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "320",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "321",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "322",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "323",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "324",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "325",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "326",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "328",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "329",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "330",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "331",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "332",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "333",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "334",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "335",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "338",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "339",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "340",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "341",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "342",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "343",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "344",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "344",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "345",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "346",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "347",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "348",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "349",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "351",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "352",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "354",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "355",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "356",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "357",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "358",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "359",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "361",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "362",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "363",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "364",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "365",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "367",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "368",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "369",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "370",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "371",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "372",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "373",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "374",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "375",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "376",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "378",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "379",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "380",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "381",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "382",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "383",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "385",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "386",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "387",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "388",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/863/ImportJob.java\nindex 057fb0a0212..b5349abccc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/863/ImportJob.java\n@@ -64,330 +64,327 @@ import lombok.extern.slf4j.Slf4j;\n @Slf4j\n public class ImportJob extends Job {\n \n-\tprivate final ObjectReader headerReader = Jackson.BINARY_MAPPER.readerFor(PreprocessedHeader.class);\n+    private final ObjectReader headerReader = Jackson.BINARY_MAPPER.readerFor(PreprocessedHeader.class);\n \n-\tprivate final Namespace namespace;\n-\tprivate final TableId table;\n-\tprivate final File importFile;\n+    private final Namespace namespace;\n+    private final TableId table;\n+    private final File importFile;\n \n-\t@Override\n-\tpublic void execute() throws JSONException {\n-\t\tthis.progressReporter.setMax(7);\n+    @Override\n+    public void execute() throws JSONException {\n+        this.progressReporter.setMax(7);\n \n-\t\ttry (HCFile file = new HCFile(importFile, false)) {\n+        try (HCFile file = new HCFile(importFile, false)) {\n \n-\t\t\tif (log.isInfoEnabled()) {\n-\t\t\t\tlog.info(\"Reading HCFile {}: header size: {}  content size: {}\", importFile, BinaryByteUnit.format(file.getHeaderSize()), BinaryByteUnit.format(file.getContentSize()));\n-\t\t\t}\n+            if (log.isInfoEnabled()) {\n+                log.info(\"Reading HCFile {}: header size: {}  content size: {}\", importFile, BinaryByteUnit.format(file.getHeaderSize()), BinaryByteUnit.format(file.getContentSize()));\n+            }\n \n-\t\t\tPreprocessedHeader header = readHeader(file);\n+            PreprocessedHeader header = readHeader(file);\n \n-\t\t\t//check that all workers are connected\n-\t\t\tnamespace.checkConnections();\n+            //check that all workers are connected\n+            namespace.checkConnections();\n \n-\t\t\t//update primary dictionary\n-\t\t\tboolean mappingRequired = createMappings(header);\n+            //update primary dictionary\n+            boolean mappingRequired = createMappings(header);\n \n-\t\t\tthis.progressReporter.report(1);\n+            this.progressReporter.report(1);\n \n-\t\t\tDictionaryMapping primaryMapping = header.getPrimaryColumn().getValueMapping();\n+            DictionaryMapping primaryMapping = header.getPrimaryColumn().getValueMapping();\n \n-\t\t\t// Distribute the new IDs between the slaves\n-\t\t\tlog.debug(\"\\tpartition new IDs\");\n+            // Distribute the new IDs between the slaves\n+            log.debug(\"\\tpartition new IDs\");\n \n-\t\t\t// Allocate a responsibility for all yet unassigned buckets.\n-\t\t\tsynchronized (namespace) {\n-\t\t\t\tfor (int bucket : primaryMapping.getUsedBuckets()) {\n-\t\t\t\t\tif (namespace.getResponsibleWorkerForBucket(bucket) != null) {\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n+            // Allocate a responsibility for all yet unassigned buckets.\n+            synchronized (namespace) {\n+                for (int bucket : primaryMapping.getUsedBuckets()) {\n+                    if (namespace.getResponsibleWorkerForBucket(bucket) != null) {\n+                        continue;\n+                    }\n \n-\t\t\t\t\tnamespace.addResponsibility(bucket);\n-\t\t\t\t}\n+                    namespace.addResponsibility(bucket);\n+                }\n \n-\t\t\t\t// While we hold the lock on the namespace distribute the new, consistent state among the workers\n-\t\t\t\tfor (WorkerInformation w : namespace.getWorkers()) {\n-\t\t\t\t\tw.send(new UpdateWorkerBucket(w));\n-\t\t\t\t}\n-\t\t\t}\n+                // While we hold the lock on the namespace distribute the new, consistent state among the workers\n+                for (WorkerInformation w : namespace.getWorkers()) {\n+                    w.send(new UpdateWorkerBucket(w));\n+                }\n+            }\n \n-\t\t\t//create data import and store/send it\n-\t\t\tlog.info(\"\\tupdating import information\");\n-\t\t\t//if mapping is not required we can also use the old infos here\n-\t\t\tImport outImport = createImport(header, !mappingRequired);\n-\t\t\tImport inImport = createImport(header, true);\n+            //create data import and store/send it\n+            log.info(\"\\tupdating import information\");\n+            //if mapping is not required we can also use the old infos here\n+            Import outImport = createImport(header, !mappingRequired);\n+            Import inImport = createImport(header, true);\n \n-\t\t\tinImport.setSuffix(inImport.getSuffix() + \"_old\");\n+            inImport.setSuffix(inImport.getSuffix() + \"_old\");\n \n-\t\t\tnamespace.getStorage().updateImport(outImport);\n-\t\t\tnamespace.sendToAll(new AddImport(outImport));\n+            namespace.getStorage().updateImport(outImport);\n+            namespace.sendToAll(new AddImport(outImport));\n \n-\t\t\tthis.progressReporter.report(1);\n+            this.progressReporter.report(1);\n \n \n-\t\t\t//import the actual data\n-\t\t\tlog.info(\"\\timporting\");\n+            //import the actual data\n+            log.info(\"\\timporting\");\n \n-\t\t\tint bucketSize = ConqueryConfig.getInstance().getCluster().getEntityBucketSize();\n+            int bucketSize = ConqueryConfig.getInstance().getCluster().getEntityBucketSize();\n \n-\t\t\tInt2ObjectMap<ImportBucket> buckets = new Int2ObjectOpenHashMap<>(primaryMapping.getUsedBuckets().size());\n+            Int2ObjectMap<ImportBucket> buckets = new Int2ObjectOpenHashMap<>(primaryMapping.getUsedBuckets().size());\n \n-\t\t\ttry (InputStream in = new GZIPInputStream(file.readContent())) {\n-\t\t\t\tfinal Preprocessed.DataContainer container = Jackson.BINARY_MAPPER.readerFor(Preprocessed.DataContainer.class).readValue(in);\n+            try (InputStream in = new GZIPInputStream(file.readContent())) {\n+                final Preprocessed.DataContainer container = Jackson.BINARY_MAPPER.readerFor(Preprocessed.DataContainer.class).readValue(in);\n \n-\t\t\t\tif(container.getStarts() == null){\n-\t\t\t\t\tlog.warn(\"Import was empty. Skipping.\");\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n+                if (container.getStarts() == null) {\n+                    log.warn(\"Import was empty. Skipping.\");\n+                    return;\n+                }\n \n-\t\t\t\tfinal ColumnStore<?>[] stores = container.getValues();\n+                final ColumnStore<?>[] stores = container.getValues();\n \n-\t\t\t\tMultimap<Integer, Integer> buckets2LocalEntities = LinkedHashMultimap.create();\n+                Multimap<Integer, Integer> buckets2LocalEntities = LinkedHashMultimap.create();\n \n-\t\t\t\t// collect entities into their buckets\n-\t\t\t\tfor (Integer entity : container.getStarts().keySet()) {\n-\t\t\t\t\tint entityId = primaryMapping.source2Target(entity);\n-\t\t\t\t\tint currentBucket = Entity.getBucket(entityId, bucketSize);\n-\t\t\t\t\tbuckets2LocalEntities.put(currentBucket, entity);\n-\t\t\t\t}\n+                // collect entities into their buckets\n+                for (Integer entity : container.getStarts().keySet()) {\n+                    int entityId = primaryMapping.source2Target(entity);\n+                    int currentBucket = Entity.getBucket(entityId, bucketSize);\n+                    buckets2LocalEntities.put(currentBucket, entity);\n+                }\n \n-\t\t\t\tfor (Map.Entry<Integer, Collection<Integer>> bucket2entities : buckets2LocalEntities.asMap().entrySet()) {\n+                for (Map.Entry<Integer, Collection<Integer>> bucket2entities : buckets2LocalEntities.asMap().entrySet()) {\n \n-\t\t\t\t\tint currentBucket = bucket2entities.getKey();\n-\t\t\t\t\tfinal List<Integer> entities = new ArrayList<>(bucket2entities.getValue());\n+                    int currentBucket = bucket2entities.getKey();\n+                    final List<Integer> entities = new ArrayList<>(bucket2entities.getValue());\n \n-\t\t\t\t\tint[] selStart = new int[entities.size()];\n-\t\t\t\t\tint[] selEnd = new int[entities.size()];\n+                    int[] selStart = new int[entities.size()];\n+                    int[] selEnd = new int[entities.size()];\n \n-\t\t\t\t\tfor (int index = 0; index < entities.size(); index++) {\n-\t\t\t\t\t\tint localId = entities.get(index);\n-\t\t\t\t\t\tselStart[index] = container.getStarts().get(localId);\n-\t\t\t\t\t\tselEnd[index] = container.getEnds().get(localId);\n-\t\t\t\t\t}\n+                    for (int index = 0; index < entities.size(); index++) {\n+                        int localId = entities.get(index);\n+                        selStart[index] = container.getStarts().get(localId);\n+                        selEnd[index] = container.getEnds().get(localId);\n+                    }\n \n-\t\t\t\t\tfinal List<ColumnStore<?>> list = new ArrayList<>(stores.length);\n-\t\t\t\t\tlist.addAll(Arrays.asList(stores));\n+                    final List<ColumnStore<?>> list = new ArrayList<>(stores.length);\n+                    list.addAll(Arrays.asList(stores));\n \n-\t\t\t\t\t// copy only the parts of the bucket we need\n-\t\t\t\t\tlist.replaceAll(store -> store.select(selStart, selEnd));\n+                    // copy only the parts of the bucket we need\n+                    list.replaceAll(store -> store.select(selStart, selEnd));\n \n-\t\t\t\t\tint[] lengths = IntStream.range(0, selStart.length)\n-\t\t\t\t\t\t\t.map(index -> selEnd[index] - selStart[index])\n-\t\t\t\t\t\t\t.toArray();\n+                    int[] lengths = IntStream.range(0, selStart.length)\n+                        .map(index -> selEnd[index] - selStart[index])\n+                        .toArray();\n \n-\t\t\t\t\tfinal Int2IntMap starts = new Int2IntAVLTreeMap();\n-\t\t\t\t\tfinal Int2IntMap ends = new Int2IntAVLTreeMap();\n+                    final Int2IntMap starts = new Int2IntAVLTreeMap();\n+                    final Int2IntMap ends = new Int2IntAVLTreeMap();\n \n-\t\t\t\t\tstarts.put(primaryMapping.source2Target(entities.get(0)), 0);\n-\t\t\t\t\tends.put(primaryMapping.source2Target(entities.get(0)), lengths[0]);\n+                    starts.put(primaryMapping.source2Target(entities.get(0)), 0);\n+                    ends.put(primaryMapping.source2Target(entities.get(0)), lengths[0]);\n \n-\t\t\t\t\tfor (int index = 1; index < lengths.length; index++) {\n-\t\t\t\t\t\tint localId = entities.get(index);\n-\t\t\t\t\t\tint globalId = primaryMapping.source2Target(localId);\n+                    for (int index = 1; index < lengths.length; index++) {\n+                        int localId = entities.get(index);\n+                        int globalId = primaryMapping.source2Target(localId);\n \n-\t\t\t\t\t\tfinal int previousEntity = primaryMapping.source2Target(entities.get(index - 1));\n+                        final int previousEntity = primaryMapping.source2Target(entities.get(index - 1));\n \n-\t\t\t\t\t\tstarts.put(globalId, ends.get(previousEntity));\n-\t\t\t\t\t\tends.put(globalId, starts.get(globalId) + lengths[index]);\n-\t\t\t\t\t}\n+                        starts.put(globalId, ends.get(previousEntity));\n+                        ends.put(globalId, starts.get(globalId) + lengths[index]);\n+                    }\n \n \n-\t\t\t\t\tbuckets.put(currentBucket, new ImportBucket(\n-\t\t\t\t\t\t\tnew BucketId(outImport.getId(), currentBucket),\n-\t\t\t\t\t\t\tnew Bucket(\n-\t\t\t\t\t\t\t\t\tcurrentBucket,\n-\t\t\t\t\t\t\t\t\toutImport.getId(),\n-\t\t\t\t\t\t\t\t\tends.values().stream().mapToInt(i -> i).max().orElse(0),\n-\t\t\t\t\t\t\t\t\tlist.toArray(new ColumnStore[0]),\n-\t\t\t\t\t\t\t\t\tstarts,\n-\t\t\t\t\t\t\t\t\tends,\n-\t\t\t\t\t\t\t\t\tstarts.size()\n-\t\t\t\t\t\t\t)));\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tsendBuckets(primaryMapping, buckets);\n-\t\t\tgetProgressReporter().done();\n-\t\t}\n-\t\tcatch (IOException e) {\n-\t\t\tthrow new IllegalStateException(\"Failed to load the file \" + importFile, e);\n-\t\t}\n-\t}\n-\n-\tprivate PreprocessedHeader readHeader(HCFile file) throws JsonParseException, IOException {\n-\t\ttry (JsonParser in = Jackson.BINARY_MAPPER.getFactory().createParser(file.readHeader())) {\n-\t\t\tPreprocessedHeader header = headerReader.readValue(in);\n-\n-\t\t\tlog.info(\"Importing {} into {}\", header.getName(), table);\n-\t\t\tTable tab = namespace.getStorage().getDataset().getTables().getOrFail(table);\n-\n-\t\t\theader.assertMatch(tab);\n-\n-\t\t\tlog.debug(\"\\tparsing dictionaries\");\n-\t\t\theader.getPrimaryColumn().getType().readHeader(in);\n-\t\t\tfor (PPColumn col : header.getColumns()) {\n-\t\t\t\tcol.getType().readHeader(in);\n-\t\t\t}\n-\n-\t\t\theader.getPrimaryColumn().getType().init(namespace.getStorage().getDataset().getId());\n-\t\t\tfor (PPColumn col : header.getColumns()) {\n-\t\t\t\tcol.getType().init(namespace.getStorage().getDataset().getId());\n-\t\t\t}\n-\n-\t\t\treturn header;\n-\t\t}\n-\t}\n-\n-\tprivate boolean createMappings(PreprocessedHeader header) throws JSONException {\n-\t\tlog.debug(\"\\tupdating primary dictionary\");\n-\t\tDictionary entities = ((StringTypeEncoded) header.getPrimaryColumn().getType()).getSubType().getDictionary();\n-\t\tthis.progressReporter.report(1);\n-\t\tlog.debug(\"\\tcompute dictionary\");\n-\t\tDictionary oldPrimaryDict = namespace.getStorage().computeDictionary(ConqueryConstants.getPrimaryDictionary(namespace.getStorage().getDataset()));\n-\t\tDictionary primaryDict = Dictionary.copyUncompressed(oldPrimaryDict);\n-\t\tlog.debug(\"\\tmap values\");\n-\t\tDictionaryMapping primaryMapping = DictionaryMapping.create(entities, primaryDict);\n-\n-\t\t//if no new ids we shouldn't recompress and store\n-\t\tif (primaryMapping.getNewIds() == null) {\n-\t\t\tlog.debug(\"\\t\\tno new ids\");\n-\t\t\tprimaryDict = oldPrimaryDict;\n-\t\t\tthis.progressReporter.report(2);\n-\t\t}\n-\t\t//but if there are new ids we have to\n-\t\telse {\n-\t\t\tlog.debug(\"\\t\\t {} new ids {}\", primaryMapping.getNumberOfNewIds(), primaryMapping.getNewIds());\n-\t\t\tlog.debug(\"\\t\\texample of new id: {}\", new String(primaryDict.getElement(primaryMapping.getNewIds().getMin())));\n-\t\t\tlog.debug(\"\\t\\tstoring\");\n-\n-\t\t\tnamespace.getStorage().updateDictionary(primaryDict);\n-\n-\t\t\tthis.progressReporter.report(1);\n-\n-\t\t\tlog.debug(\"\\t\\tsending\");\n-\n-\t\t\tnamespace.sendToAll(new UpdateDictionary(primaryDict));\n-\n-\t\t\tthis.progressReporter.report(1);\n-\t\t}\n-\n-\t\tboolean mappingRequired = false;\n-\n-\t\tlog.debug(\"\\tsending secondary dictionaries\");\n-\n-\t\tTable table = namespace.getStorage().getDataset().getTables().get(this.table);\n-\n-\t\tfor (int colPos = 0; colPos < header.getColumns().length; colPos++) {\n-\t\t\tPPColumn col = header.getColumns()[colPos];\n-\t\t\tColumn tableCol = table.getColumns()[colPos];\n-\t\t\t//if the column uses a shared dictionary we have to merge the existing dictionary into that\n-\t\t\tif (tableCol.getType() == MajorTypeId.STRING && tableCol.getSharedDictionary() != null) {\n-\t\t\t\tmappingRequired |= createSharedDictionary(col, tableCol);\n-\t\t\t}\n-\n-\t\t\t//store external infos into master and slaves\n-\t\t\tcol.getType().storeExternalInfos(\n-\t\t\t\t\tnamespace.getStorage(),\n-\t\t\t\t\t(Consumer<Dictionary>) (dict -> {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tnamespace.getStorage().updateDictionary(dict);\n-\t\t\t\t\t\t\tnamespace.sendToAll(new UpdateDictionary(dict));\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\t\tthrow new RuntimeException(\"Failed to store dictionary \" + dict, e);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t})\n-\t\t\t);\n-\t\t}\n-\t\theader.getPrimaryColumn().setValueMapping(primaryMapping);\n-\t\treturn mappingRequired;\n-\t}\n-\n-\tprivate Import createImport(PreprocessedHeader header, boolean useOldType) {\n-\t\tImport imp = new Import();\n-\t\timp.setName(header.getName());\n-\t\timp.setTable(table);\n-\t\timp.setNumberOfEntries(header.getRows());\n-\t\timp.setSuffix(header.getSuffix());\n-\t\timp.setColumns(new ImportColumn[header.getColumns().length]);\n-\t\tfor (int i = 0; i < header.getColumns().length; i++) {\n-\t\t\tPPColumn src = header.getColumns()[i];\n-\t\t\tImportColumn col = new ImportColumn();\n-\t\t\tcol.setName(src.getName());\n-\t\t\tcol.setType(\n-\t\t\t\t\tuseOldType ?\n-\t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n-\t\t\t\t\t\t\t   :\n-\t\t\t\t\tsrc.getType()\n-\t\t\t);\n-\t\t\tcol.setParent(imp);\n-\t\t\tcol.setPosition(i);\n-\t\t\timp.getColumns()[i] = col;\n-\t\t}\n-\t\treturn imp;\n-\t}\n-\n-\tprivate void sendBuckets(DictionaryMapping primaryMapping, Int2ObjectMap<ImportBucket> buckets) {\n-\t\tfor (int bucketNumber : primaryMapping.getUsedBuckets()) {\n-\t\t\tImportBucket bucket = buckets.get(bucketNumber);\n-\t\t\t//a bucket could be empty since the used buckets coming from the\n-\t\t\t//dictionary could contain ids that have no events (see filter)\n-\t\t\tif (bucket == null) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\n-\t\t\tWorkerInformation responsibleWorker = namespace.getResponsibleWorkerForBucket(bucketNumber);\n-\t\t\tif (responsibleWorker == null) {\n-\t\t\t\tthrow new IllegalStateException(\"No responsible worker for bucket \" + bucketNumber);\n-\t\t\t}\n-\t\t\ttry {\n-\t\t\t\tresponsibleWorker.getConnectedSlave().waitForFreeJobqueue();\n-\t\t\t}\n-\t\t\tcatch (InterruptedException e) {\n-\t\t\t\tlog.error(\"Interrupted while waiting for worker \" + responsibleWorker + \" to have free space in queue\", e);\n-\t\t\t}\n-\t\t\tresponsibleWorker.send(bucket);\n-\t\t}\n-\t}\n-\n-\tprivate boolean createSharedDictionary(PPColumn col, Column tableCol) throws JSONException {\n-\t\tAStringType<?> oldType = (AStringType<?>) col.getType();\n-\t\tDictionary source = oldType.getUnderlyingDictionary();\n-\t\t//could be null if the strin column has no (or too few) values\n-\t\tif (source == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tDictionaryId sharedId = new DictionaryId(namespace.getDataset().getId(), tableCol.getSharedDictionary());\n-\t\tlog.info(\"\\t\\tmerging {} into shared dictionary {}\", col.getName(), sharedId);\n-\n-\t\tDictionary shared = namespace.getStorage().computeDictionary(sharedId);\n-\t\tDictionaryMapping mapping = DictionaryMapping.create(\n-\t\t\t\tsource,\n-\t\t\t\tshared\n-\t\t);\n-\n-\t\tAStringType<?> newType = Cloner.clone(oldType);\n-\t\t//find the new number type to represent the ids\n-\t\tint minTargetId = Ints.min(mapping.getSource2TargetMap());\n-\t\tint maxTargetId = Ints.max(mapping.getSource2TargetMap());\n-\t\tVarIntParser numberParser = new VarIntParser();\n-\t\tnumberParser.registerValue(minTargetId);\n-\t\tnumberParser.registerValue(maxTargetId);\n-\t\tnumberParser.setLines(oldType.getLines());\n-\t\tnumberParser.setNullLines(oldType.getNullLines());\n-\t\tDecision<Integer, Number, VarIntType> decision = numberParser.findBestType();\n-\n-\t\tnewType.adaptUnderlyingDictionary(shared, decision.getType());\n-\t\tcol.setOldType(oldType);\n-\t\tcol.setValueMapping(mapping);\n-\t\tcol.setType(newType);\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic String getLabel() {\n-\t\treturn \"Importing into \" + table + \" from \" + importFile;\n-\t}\n+                    buckets.put(currentBucket, new ImportBucket(\n+                        new BucketId(outImport.getId(), currentBucket),\n+                        new Bucket(\n+                            currentBucket,\n+                            outImport.getId(),\n+                            ends.values().stream().mapToInt(i -> i).max().orElse(0),\n+                            list.toArray(new ColumnStore[0]),\n+                            starts,\n+                            ends,\n+                            starts.size()\n+                        )));\n+                }\n+            }\n+\n+            sendBuckets(primaryMapping, buckets);\n+            getProgressReporter().done();\n+        } catch (IOException e) {\n+            throw new IllegalStateException(\"Failed to load the file \" + importFile, e);\n+        }\n+    }\n+\n+    private PreprocessedHeader readHeader(HCFile file) throws JsonParseException, IOException {\n+        try (JsonParser in = Jackson.BINARY_MAPPER.getFactory().createParser(file.readHeader())) {\n+            PreprocessedHeader header = headerReader.readValue(in);\n+\n+            log.info(\"Importing {} into {}\", header.getName(), table);\n+            Table tab = namespace.getStorage().getDataset().getTables().getOrFail(table);\n+\n+            header.assertMatch(tab);\n+\n+            log.debug(\"\\tparsing dictionaries\");\n+            header.getPrimaryColumn().getType().readHeader(in);\n+            for (PPColumn col : header.getColumns()) {\n+                col.getType().readHeader(in);\n+            }\n+\n+            header.getPrimaryColumn().getType().init(namespace.getStorage().getDataset().getId());\n+            for (PPColumn col : header.getColumns()) {\n+                col.getType().init(namespace.getStorage().getDataset().getId());\n+            }\n+\n+            return header;\n+        }\n+    }\n+\n+    private boolean createMappings(PreprocessedHeader header) throws JSONException {\n+        log.debug(\"\\tupdating primary dictionary\");\n+        Dictionary entities = ((StringTypeEncoded) header.getPrimaryColumn().getType()).getSubType().getDictionary();\n+        this.progressReporter.report(1);\n+        log.debug(\"\\tcompute dictionary\");\n+        Dictionary oldPrimaryDict = namespace.getStorage().computeDictionary(ConqueryConstants.getPrimaryDictionary(namespace.getStorage().getDataset()));\n+        Dictionary primaryDict = Dictionary.copyUncompressed(oldPrimaryDict);\n+        log.debug(\"\\tmap values\");\n+        DictionaryMapping primaryMapping = DictionaryMapping.create(entities, primaryDict);\n+\n+        //if no new ids we shouldn't recompress and store\n+        if (primaryMapping.getNewIds() == null) {\n+            log.debug(\"\\t\\tno new ids\");\n+            primaryDict = oldPrimaryDict;\n+            this.progressReporter.report(2);\n+        }\n+        //but if there are new ids we have to\n+        else {\n+            log.debug(\"\\t\\t {} new ids {}\", primaryMapping.getNumberOfNewIds(), primaryMapping.getNewIds());\n+            log.debug(\"\\t\\texample of new id: {}\", new String(primaryDict.getElement(primaryMapping.getNewIds().getMin())));\n+            log.debug(\"\\t\\tstoring\");\n+\n+            namespace.getStorage().updateDictionary(primaryDict);\n+\n+            this.progressReporter.report(1);\n+\n+            log.debug(\"\\t\\tsending\");\n+\n+            namespace.sendToAll(new UpdateDictionary(primaryDict));\n+\n+            this.progressReporter.report(1);\n+        }\n+\n+        boolean mappingRequired = false;\n+\n+        log.debug(\"\\tsending secondary dictionaries\");\n+\n+        Table table = namespace.getStorage().getDataset().getTables().get(this.table);\n+\n+        for (int colPos = 0; colPos < header.getColumns().length; colPos++) {\n+            PPColumn col = header.getColumns()[colPos];\n+            Column tableCol = table.getColumns()[colPos];\n+            //if the column uses a shared dictionary we have to merge the existing dictionary into that\n+            if (tableCol.getType() == MajorTypeId.STRING && tableCol.getSharedDictionary() != null) {\n+                mappingRequired |= createSharedDictionary(col, tableCol);\n+            }\n+\n+            //store external infos into master and slaves\n+            col.getType().storeExternalInfos(\n+                namespace.getStorage(),\n+                (Consumer<Dictionary>) (dict -> {\n+                    try {\n+                        namespace.getStorage().updateDictionary(dict);\n+                        namespace.sendToAll(new UpdateDictionary(dict));\n+                    } catch (Exception e) {\n+                        throw new RuntimeException(\"Failed to store dictionary \" + dict, e);\n+                    }\n+                })\n+            );\n+        }\n+        header.getPrimaryColumn().setValueMapping(primaryMapping);\n+        return mappingRequired;\n+    }\n+\n+    private Import createImport(PreprocessedHeader header, boolean useOldType) {\n+        Import imp = new Import();\n+        imp.setName(header.getName());\n+        imp.setTable(table);\n+        imp.setNumberOfEntries(header.getRows());\n+        imp.setSuffix(header.getSuffix());\n+        imp.setColumns(new ImportColumn[header.getColumns().length]);\n+        for (int i = 0; i < header.getColumns().length; i++) {\n+            PPColumn src = header.getColumns()[i];\n+            ImportColumn col = new ImportColumn();\n+            col.setName(src.getName());\n+            col.setType(\n+                useOldType ?\n+                    Objects.requireNonNullElse(src.getOldType(), src.getType())\n+                    :\n+                    src.getType()\n+            );\n+            col.setParent(imp);\n+            col.setPosition(i);\n+            imp.getColumns()[i] = col;\n+        }\n+        return imp;\n+    }\n+\n+    private void sendBuckets(DictionaryMapping primaryMapping, Int2ObjectMap<ImportBucket> buckets) {\n+        for (int bucketNumber : primaryMapping.getUsedBuckets()) {\n+            ImportBucket bucket = buckets.get(bucketNumber);\n+            //a bucket could be empty since the used buckets coming from the\n+            //dictionary could contain ids that have no events (see filter)\n+            if (bucket == null) {\n+                continue;\n+            }\n+\n+\n+            WorkerInformation responsibleWorker = namespace.getResponsibleWorkerForBucket(bucketNumber);\n+            if (responsibleWorker == null) {\n+                throw new IllegalStateException(\"No responsible worker for bucket \" + bucketNumber);\n+            }\n+            try {\n+                responsibleWorker.getConnectedSlave().waitForFreeJobqueue();\n+            } catch (InterruptedException e) {\n+                log.error(\"Interrupted while waiting for worker \" + responsibleWorker + \" to have free space in queue\", e);\n+            }\n+            responsibleWorker.send(bucket);\n+        }\n+    }\n+\n+    private boolean createSharedDictionary(PPColumn col, Column tableCol) throws JSONException {\n+        AStringType<?> oldType = (AStringType<?>) col.getType();\n+        Dictionary source = oldType.getUnderlyingDictionary();\n+        //could be null if the strin column has no (or too few) values\n+        if (source == null) {\n+            return false;\n+        }\n+        DictionaryId sharedId = new DictionaryId(namespace.getDataset().getId(), tableCol.getSharedDictionary());\n+        log.info(\"\\t\\tmerging {} into shared dictionary {}\", col.getName(), sharedId);\n+\n+        Dictionary shared = namespace.getStorage().computeDictionary(sharedId);\n+        DictionaryMapping mapping = DictionaryMapping.create(\n+            source,\n+            shared\n+        );\n+\n+        AStringType<?> newType = Cloner.clone(oldType);\n+        //find the new number type to represent the ids\n+        int minTargetId = Ints.min(mapping.getSource2TargetMap());\n+        int maxTargetId = Ints.max(mapping.getSource2TargetMap());\n+        VarIntParser numberParser = new VarIntParser();\n+        numberParser.registerValue(minTargetId);\n+        numberParser.registerValue(maxTargetId);\n+        numberParser.setLines(oldType.getLines());\n+        numberParser.setNullLines(oldType.getNullLines());\n+        Decision<Integer, Number, VarIntType> decision = numberParser.findBestType();\n+\n+        newType.adaptUnderlyingDictionary(shared, decision.getType());\n+        col.setOldType(oldType);\n+        col.setValueMapping(mapping);\n+        col.setType(newType);\n+        return true;\n+    }\n+\n+    @Override\n+    public String getLabel() {\n+        return \"Importing into \" + table + \" from \" + importFile;\n+    }\n \n }\n",
            "diff_size": 285
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "126",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 127.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "128",
                    "column": "1",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "column": "1",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "column": "1",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "323",
                    "column": "1",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/863/ImportJob.java\nindex 057fb0a0212..3060b7510b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/863/ImportJob.java\n@@ -123,19 +123,16 @@ public class ImportJob extends Job {\n \t\t\tnamespace.sendToAll(new AddImport(outImport));\n \n \t\t\tthis.progressReporter.report(1);\n-\n-\n-\t\t\t//import the actual data\n+//import the actual data\n \t\t\tlog.info(\"\\timporting\");\n-\n-\t\t\tint bucketSize = ConqueryConfig.getInstance().getCluster().getEntityBucketSize();\n+int bucketSize = ConqueryConfig.getInstance().getCluster().getEntityBucketSize();\n \n \t\t\tInt2ObjectMap<ImportBucket> buckets = new Int2ObjectOpenHashMap<>(primaryMapping.getUsedBuckets().size());\n \n \t\t\ttry (InputStream in = new GZIPInputStream(file.readContent())) {\n \t\t\t\tfinal Preprocessed.DataContainer container = Jackson.BINARY_MAPPER.readerFor(Preprocessed.DataContainer.class).readValue(in);\n \n-\t\t\t\tif(container.getStarts() == null){\n+\t\t\t\tif(container.getStarts() == null) {\n \t\t\t\t\tlog.warn(\"Import was empty. Skipping.\");\n \t\t\t\t\treturn;\n \t\t\t\t}\n@@ -152,11 +149,9 @@ public class ImportJob extends Job {\n \t\t\t\t}\n \n \t\t\t\tfor (Map.Entry<Integer, Collection<Integer>> bucket2entities : buckets2LocalEntities.asMap().entrySet()) {\n-\n-\t\t\t\t\tint currentBucket = bucket2entities.getKey();\n+\tint currentBucket = bucket2entities.getKey();\n \t\t\t\t\tfinal List<Integer> entities = new ArrayList<>(bucket2entities.getValue());\n-\n-\t\t\t\t\tint[] selStart = new int[entities.size()];\n+\tint[] selStart = new int[entities.size()];\n \t\t\t\t\tint[] selEnd = new int[entities.size()];\n \n \t\t\t\t\tfor (int index = 0; index < entities.size(); index++) {\n@@ -170,12 +165,9 @@ public class ImportJob extends Job {\n \n \t\t\t\t\t// copy only the parts of the bucket we need\n \t\t\t\t\tlist.replaceAll(store -> store.select(selStart, selEnd));\n-\n-\t\t\t\t\tint[] lengths = IntStream.range(0, selStart.length)\n-\t\t\t\t\t\t\t.map(index -> selEnd[index] - selStart[index])\n+\tint[] lengths = IntStream.range(0, selStart.length).map(index -> selEnd[index] - selStart[index])\n \t\t\t\t\t\t\t.toArray();\n-\n-\t\t\t\t\tfinal Int2IntMap starts = new Int2IntAVLTreeMap();\n+final Int2IntMap starts = new Int2IntAVLTreeMap();\n \t\t\t\t\tfinal Int2IntMap ends = new Int2IntAVLTreeMap();\n \n \t\t\t\t\tstarts.put(primaryMapping.source2Target(entities.get(0)), 0);\n@@ -190,9 +182,7 @@ public class ImportJob extends Job {\n \t\t\t\t\t\tstarts.put(globalId, ends.get(previousEntity));\n \t\t\t\t\t\tends.put(globalId, starts.get(globalId) + lengths[index]);\n \t\t\t\t\t}\n-\n-\n-\t\t\t\t\tbuckets.put(currentBucket, new ImportBucket(\n+buckets.put(currentBucket, new ImportBucket(\n \t\t\t\t\t\t\tnew BucketId(outImport.getId(), currentBucket),\n \t\t\t\t\t\t\tnew Bucket(\n \t\t\t\t\t\t\t\t\tcurrentBucket,\n@@ -201,8 +191,7 @@ public class ImportJob extends Job {\n \t\t\t\t\t\t\t\t\tlist.toArray(new ColumnStore[0]),\n \t\t\t\t\t\t\t\t\tstarts,\n \t\t\t\t\t\t\t\t\tends,\n-\t\t\t\t\t\t\t\t\tstarts.size()\n-\t\t\t\t\t\t\t)));\n+\t\t\t\t\t\t\t\t\tstarts.size())));\n \t\t\t\t}\n \t\t\t}\n \n@@ -287,8 +276,7 @@ public class ImportJob extends Job {\n \n \t\t\t//store external infos into master and slaves\n \t\t\tcol.getType().storeExternalInfos(\n-\t\t\t\t\tnamespace.getStorage(),\n-\t\t\t\t\t(Consumer<Dictionary>) (dict -> {\n+\t\t\t\t\tnamespace.getStorage(), (Consumer<Dictionary>) (dict -> {\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tnamespace.getStorage().updateDictionary(dict);\n \t\t\t\t\t\t\tnamespace.sendToAll(new UpdateDictionary(dict));\n@@ -314,11 +302,7 @@ public class ImportJob extends Job {\n \t\t\tPPColumn src = header.getColumns()[i];\n \t\t\tImportColumn col = new ImportColumn();\n \t\t\tcol.setName(src.getName());\n-\t\t\tcol.setType(\n-\t\t\t\t\tuseOldType ?\n-\t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n-\t\t\t\t\t\t\t   :\n-\t\t\t\t\tsrc.getType()\n+\t\t\tcol.setType(useOldType ? Objects.requireNonNullElse(src.getOldType(), src.getType()) : src.getType()\n \t\t\t);\n \t\t\tcol.setParent(imp);\n \t\t\tcol.setPosition(i);\n@@ -336,8 +320,7 @@ public class ImportJob extends Job {\n \t\t\t\tcontinue;\n \t\t\t}\n \n-\n-\t\t\tWorkerInformation responsibleWorker = namespace.getResponsibleWorkerForBucket(bucketNumber);\n+WorkerInformation responsibleWorker = namespace.getResponsibleWorkerForBucket(bucketNumber);\n \t\t\tif (responsibleWorker == null) {\n \t\t\t\tthrow new IllegalStateException(\"No responsible worker for bucket \" + bucketNumber);\n \t\t\t}\n@@ -390,4 +373,4 @@ public class ImportJob extends Job {\n \t\treturn \"Importing into \" + table + \" from \" + importFile;\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "4",
                    "severity": "warning",
                    "message": "'synchronized rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "column": "7",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "179",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "183",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "185",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "186",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "187",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "188",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "189",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "190",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "191",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "192",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "193",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "194",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "195",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "197",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "198",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "199",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "201",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "202",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "203",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "204",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "205",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "206",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "207",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "208",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "209",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "212",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "213",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "214",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "215",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "216",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "218",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "219",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "222",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method call rparen' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "223",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "224",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "224",
                    "column": "14",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 13, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "225",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method call rparen' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "226",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "227",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "227",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "228",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "229",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "229",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "230",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "231",
                    "column": "4",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "232",
                    "column": "3",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "233",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "233",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "234",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "234",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "235",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "236",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "237",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "238",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "240",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "241",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "242",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "245",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "245",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "246",
                    "column": "84",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 83, expected level should be 7.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "247",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "247",
                    "column": "85",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 84, expected level should be 11.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "248",
                    "column": "85",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 84, expected level should be 11.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "249",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "249",
                    "column": "84",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 83, expected level should be 7.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "250",
                    "column": "84",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 83, expected level should be 7.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "251",
                    "column": "85",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 84, expected level should be 11.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "252",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "252",
                    "column": "84",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 83, expected level should be 7.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "253",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "253",
                    "column": "83",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 82, expected level should be 3.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "254",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "254",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "255",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "255",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "256",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "257",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "259",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "260",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "261",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "262",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "263",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "264",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "264",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "265",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "265",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "266",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "267",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "267",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "268",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "269",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "270",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "271",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "272",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "272",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "273",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "274",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "275",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "275",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "276",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "278",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "279",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "280",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "283",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "284",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "285",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "287",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "288",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "289",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "289",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "290",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "290",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "291",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "291",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "292",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "292",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "293",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "293",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "294",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "295",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "296",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "296",
                    "column": "15",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 14, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "297",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method call rparen' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "298",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "298",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "299",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "300",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "301",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "303",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "304",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "304",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "305",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "306",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "307",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "307",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "308",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "308",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "309",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "309",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "311",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "311",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "312",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "312",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "313",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "313",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "314",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "314",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "315",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "315",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "317",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "317",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "318",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "319",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "319",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "320",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "320",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "321",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "321",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "322",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "322",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "323",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "323",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "324",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "324",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "325",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "325",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "326",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "326",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "327",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "327",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "328",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "328",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "329",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "329",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "330",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "330",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "332",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "332",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "333",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "334",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "334",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "335",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "335",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/863/ImportJob.java\nindex 057fb0a0212..d6f0bd3bff4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/863/ImportJob.java\n@@ -12,7 +12,6 @@ import java.util.Objects;\n import java.util.function.Consumer;\n import java.util.stream.IntStream;\n import java.util.zip.GZIPInputStream;\n-\n import com.bakdata.conquery.ConqueryConstants;\n import com.bakdata.conquery.io.HCFile;\n import com.bakdata.conquery.io.jackson.Jackson;\n@@ -60,334 +59,278 @@ import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n \n-@RequiredArgsConstructor\n-@Slf4j\n+@RequiredArgsConstructor @Slf4j\n public class ImportJob extends Job {\n \n-\tprivate final ObjectReader headerReader = Jackson.BINARY_MAPPER.readerFor(PreprocessedHeader.class);\n-\n-\tprivate final Namespace namespace;\n-\tprivate final TableId table;\n-\tprivate final File importFile;\n-\n-\t@Override\n-\tpublic void execute() throws JSONException {\n-\t\tthis.progressReporter.setMax(7);\n-\n-\t\ttry (HCFile file = new HCFile(importFile, false)) {\n-\n-\t\t\tif (log.isInfoEnabled()) {\n-\t\t\t\tlog.info(\"Reading HCFile {}: header size: {}  content size: {}\", importFile, BinaryByteUnit.format(file.getHeaderSize()), BinaryByteUnit.format(file.getContentSize()));\n-\t\t\t}\n-\n-\t\t\tPreprocessedHeader header = readHeader(file);\n-\n-\t\t\t//check that all workers are connected\n-\t\t\tnamespace.checkConnections();\n-\n-\t\t\t//update primary dictionary\n-\t\t\tboolean mappingRequired = createMappings(header);\n-\n-\t\t\tthis.progressReporter.report(1);\n-\n-\t\t\tDictionaryMapping primaryMapping = header.getPrimaryColumn().getValueMapping();\n-\n-\t\t\t// Distribute the new IDs between the slaves\n-\t\t\tlog.debug(\"\\tpartition new IDs\");\n-\n-\t\t\t// Allocate a responsibility for all yet unassigned buckets.\n-\t\t\tsynchronized (namespace) {\n-\t\t\t\tfor (int bucket : primaryMapping.getUsedBuckets()) {\n-\t\t\t\t\tif (namespace.getResponsibleWorkerForBucket(bucket) != null) {\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tnamespace.addResponsibility(bucket);\n-\t\t\t\t}\n-\n-\t\t\t\t// While we hold the lock on the namespace distribute the new, consistent state among the workers\n-\t\t\t\tfor (WorkerInformation w : namespace.getWorkers()) {\n-\t\t\t\t\tw.send(new UpdateWorkerBucket(w));\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t//create data import and store/send it\n-\t\t\tlog.info(\"\\tupdating import information\");\n-\t\t\t//if mapping is not required we can also use the old infos here\n-\t\t\tImport outImport = createImport(header, !mappingRequired);\n-\t\t\tImport inImport = createImport(header, true);\n-\n-\t\t\tinImport.setSuffix(inImport.getSuffix() + \"_old\");\n-\n-\t\t\tnamespace.getStorage().updateImport(outImport);\n-\t\t\tnamespace.sendToAll(new AddImport(outImport));\n-\n-\t\t\tthis.progressReporter.report(1);\n-\n-\n-\t\t\t//import the actual data\n-\t\t\tlog.info(\"\\timporting\");\n-\n-\t\t\tint bucketSize = ConqueryConfig.getInstance().getCluster().getEntityBucketSize();\n-\n-\t\t\tInt2ObjectMap<ImportBucket> buckets = new Int2ObjectOpenHashMap<>(primaryMapping.getUsedBuckets().size());\n-\n-\t\t\ttry (InputStream in = new GZIPInputStream(file.readContent())) {\n-\t\t\t\tfinal Preprocessed.DataContainer container = Jackson.BINARY_MAPPER.readerFor(Preprocessed.DataContainer.class).readValue(in);\n-\n-\t\t\t\tif(container.getStarts() == null){\n-\t\t\t\t\tlog.warn(\"Import was empty. Skipping.\");\n-\t\t\t\t\treturn;\n-\t\t\t\t}\n-\n-\t\t\t\tfinal ColumnStore<?>[] stores = container.getValues();\n-\n-\t\t\t\tMultimap<Integer, Integer> buckets2LocalEntities = LinkedHashMultimap.create();\n-\n-\t\t\t\t// collect entities into their buckets\n-\t\t\t\tfor (Integer entity : container.getStarts().keySet()) {\n-\t\t\t\t\tint entityId = primaryMapping.source2Target(entity);\n-\t\t\t\t\tint currentBucket = Entity.getBucket(entityId, bucketSize);\n-\t\t\t\t\tbuckets2LocalEntities.put(currentBucket, entity);\n-\t\t\t\t}\n-\n-\t\t\t\tfor (Map.Entry<Integer, Collection<Integer>> bucket2entities : buckets2LocalEntities.asMap().entrySet()) {\n-\n-\t\t\t\t\tint currentBucket = bucket2entities.getKey();\n-\t\t\t\t\tfinal List<Integer> entities = new ArrayList<>(bucket2entities.getValue());\n-\n-\t\t\t\t\tint[] selStart = new int[entities.size()];\n-\t\t\t\t\tint[] selEnd = new int[entities.size()];\n-\n-\t\t\t\t\tfor (int index = 0; index < entities.size(); index++) {\n-\t\t\t\t\t\tint localId = entities.get(index);\n-\t\t\t\t\t\tselStart[index] = container.getStarts().get(localId);\n-\t\t\t\t\t\tselEnd[index] = container.getEnds().get(localId);\n-\t\t\t\t\t}\n-\n-\t\t\t\t\tfinal List<ColumnStore<?>> list = new ArrayList<>(stores.length);\n-\t\t\t\t\tlist.addAll(Arrays.asList(stores));\n-\n-\t\t\t\t\t// copy only the parts of the bucket we need\n-\t\t\t\t\tlist.replaceAll(store -> store.select(selStart, selEnd));\n-\n-\t\t\t\t\tint[] lengths = IntStream.range(0, selStart.length)\n-\t\t\t\t\t\t\t.map(index -> selEnd[index] - selStart[index])\n-\t\t\t\t\t\t\t.toArray();\n-\n-\t\t\t\t\tfinal Int2IntMap starts = new Int2IntAVLTreeMap();\n-\t\t\t\t\tfinal Int2IntMap ends = new Int2IntAVLTreeMap();\n-\n-\t\t\t\t\tstarts.put(primaryMapping.source2Target(entities.get(0)), 0);\n-\t\t\t\t\tends.put(primaryMapping.source2Target(entities.get(0)), lengths[0]);\n-\n-\t\t\t\t\tfor (int index = 1; index < lengths.length; index++) {\n-\t\t\t\t\t\tint localId = entities.get(index);\n-\t\t\t\t\t\tint globalId = primaryMapping.source2Target(localId);\n-\n-\t\t\t\t\t\tfinal int previousEntity = primaryMapping.source2Target(entities.get(index - 1));\n-\n-\t\t\t\t\t\tstarts.put(globalId, ends.get(previousEntity));\n-\t\t\t\t\t\tends.put(globalId, starts.get(globalId) + lengths[index]);\n-\t\t\t\t\t}\n-\n-\n-\t\t\t\t\tbuckets.put(currentBucket, new ImportBucket(\n-\t\t\t\t\t\t\tnew BucketId(outImport.getId(), currentBucket),\n-\t\t\t\t\t\t\tnew Bucket(\n-\t\t\t\t\t\t\t\t\tcurrentBucket,\n-\t\t\t\t\t\t\t\t\toutImport.getId(),\n-\t\t\t\t\t\t\t\t\tends.values().stream().mapToInt(i -> i).max().orElse(0),\n-\t\t\t\t\t\t\t\t\tlist.toArray(new ColumnStore[0]),\n-\t\t\t\t\t\t\t\t\tstarts,\n-\t\t\t\t\t\t\t\t\tends,\n-\t\t\t\t\t\t\t\t\tstarts.size()\n-\t\t\t\t\t\t\t)));\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tsendBuckets(primaryMapping, buckets);\n-\t\t\tgetProgressReporter().done();\n-\t\t}\n-\t\tcatch (IOException e) {\n-\t\t\tthrow new IllegalStateException(\"Failed to load the file \" + importFile, e);\n-\t\t}\n-\t}\n-\n-\tprivate PreprocessedHeader readHeader(HCFile file) throws JsonParseException, IOException {\n-\t\ttry (JsonParser in = Jackson.BINARY_MAPPER.getFactory().createParser(file.readHeader())) {\n-\t\t\tPreprocessedHeader header = headerReader.readValue(in);\n-\n-\t\t\tlog.info(\"Importing {} into {}\", header.getName(), table);\n-\t\t\tTable tab = namespace.getStorage().getDataset().getTables().getOrFail(table);\n-\n-\t\t\theader.assertMatch(tab);\n-\n-\t\t\tlog.debug(\"\\tparsing dictionaries\");\n-\t\t\theader.getPrimaryColumn().getType().readHeader(in);\n-\t\t\tfor (PPColumn col : header.getColumns()) {\n-\t\t\t\tcol.getType().readHeader(in);\n-\t\t\t}\n-\n-\t\t\theader.getPrimaryColumn().getType().init(namespace.getStorage().getDataset().getId());\n-\t\t\tfor (PPColumn col : header.getColumns()) {\n-\t\t\t\tcol.getType().init(namespace.getStorage().getDataset().getId());\n-\t\t\t}\n-\n-\t\t\treturn header;\n-\t\t}\n-\t}\n-\n-\tprivate boolean createMappings(PreprocessedHeader header) throws JSONException {\n-\t\tlog.debug(\"\\tupdating primary dictionary\");\n-\t\tDictionary entities = ((StringTypeEncoded) header.getPrimaryColumn().getType()).getSubType().getDictionary();\n-\t\tthis.progressReporter.report(1);\n-\t\tlog.debug(\"\\tcompute dictionary\");\n-\t\tDictionary oldPrimaryDict = namespace.getStorage().computeDictionary(ConqueryConstants.getPrimaryDictionary(namespace.getStorage().getDataset()));\n-\t\tDictionary primaryDict = Dictionary.copyUncompressed(oldPrimaryDict);\n-\t\tlog.debug(\"\\tmap values\");\n-\t\tDictionaryMapping primaryMapping = DictionaryMapping.create(entities, primaryDict);\n-\n-\t\t//if no new ids we shouldn't recompress and store\n-\t\tif (primaryMapping.getNewIds() == null) {\n-\t\t\tlog.debug(\"\\t\\tno new ids\");\n-\t\t\tprimaryDict = oldPrimaryDict;\n-\t\t\tthis.progressReporter.report(2);\n-\t\t}\n-\t\t//but if there are new ids we have to\n-\t\telse {\n-\t\t\tlog.debug(\"\\t\\t {} new ids {}\", primaryMapping.getNumberOfNewIds(), primaryMapping.getNewIds());\n-\t\t\tlog.debug(\"\\t\\texample of new id: {}\", new String(primaryDict.getElement(primaryMapping.getNewIds().getMin())));\n-\t\t\tlog.debug(\"\\t\\tstoring\");\n-\n-\t\t\tnamespace.getStorage().updateDictionary(primaryDict);\n-\n-\t\t\tthis.progressReporter.report(1);\n-\n-\t\t\tlog.debug(\"\\t\\tsending\");\n-\n-\t\t\tnamespace.sendToAll(new UpdateDictionary(primaryDict));\n-\n-\t\t\tthis.progressReporter.report(1);\n-\t\t}\n-\n-\t\tboolean mappingRequired = false;\n-\n-\t\tlog.debug(\"\\tsending secondary dictionaries\");\n-\n-\t\tTable table = namespace.getStorage().getDataset().getTables().get(this.table);\n-\n-\t\tfor (int colPos = 0; colPos < header.getColumns().length; colPos++) {\n-\t\t\tPPColumn col = header.getColumns()[colPos];\n-\t\t\tColumn tableCol = table.getColumns()[colPos];\n-\t\t\t//if the column uses a shared dictionary we have to merge the existing dictionary into that\n-\t\t\tif (tableCol.getType() == MajorTypeId.STRING && tableCol.getSharedDictionary() != null) {\n-\t\t\t\tmappingRequired |= createSharedDictionary(col, tableCol);\n-\t\t\t}\n-\n-\t\t\t//store external infos into master and slaves\n-\t\t\tcol.getType().storeExternalInfos(\n-\t\t\t\t\tnamespace.getStorage(),\n-\t\t\t\t\t(Consumer<Dictionary>) (dict -> {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tnamespace.getStorage().updateDictionary(dict);\n-\t\t\t\t\t\t\tnamespace.sendToAll(new UpdateDictionary(dict));\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\t\tthrow new RuntimeException(\"Failed to store dictionary \" + dict, e);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t})\n-\t\t\t);\n-\t\t}\n-\t\theader.getPrimaryColumn().setValueMapping(primaryMapping);\n-\t\treturn mappingRequired;\n-\t}\n-\n-\tprivate Import createImport(PreprocessedHeader header, boolean useOldType) {\n-\t\tImport imp = new Import();\n-\t\timp.setName(header.getName());\n-\t\timp.setTable(table);\n-\t\timp.setNumberOfEntries(header.getRows());\n-\t\timp.setSuffix(header.getSuffix());\n-\t\timp.setColumns(new ImportColumn[header.getColumns().length]);\n-\t\tfor (int i = 0; i < header.getColumns().length; i++) {\n-\t\t\tPPColumn src = header.getColumns()[i];\n-\t\t\tImportColumn col = new ImportColumn();\n-\t\t\tcol.setName(src.getName());\n-\t\t\tcol.setType(\n-\t\t\t\t\tuseOldType ?\n-\t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n-\t\t\t\t\t\t\t   :\n-\t\t\t\t\tsrc.getType()\n-\t\t\t);\n-\t\t\tcol.setParent(imp);\n-\t\t\tcol.setPosition(i);\n-\t\t\timp.getColumns()[i] = col;\n-\t\t}\n-\t\treturn imp;\n-\t}\n-\n-\tprivate void sendBuckets(DictionaryMapping primaryMapping, Int2ObjectMap<ImportBucket> buckets) {\n-\t\tfor (int bucketNumber : primaryMapping.getUsedBuckets()) {\n-\t\t\tImportBucket bucket = buckets.get(bucketNumber);\n-\t\t\t//a bucket could be empty since the used buckets coming from the\n-\t\t\t//dictionary could contain ids that have no events (see filter)\n-\t\t\tif (bucket == null) {\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\n-\t\t\tWorkerInformation responsibleWorker = namespace.getResponsibleWorkerForBucket(bucketNumber);\n-\t\t\tif (responsibleWorker == null) {\n-\t\t\t\tthrow new IllegalStateException(\"No responsible worker for bucket \" + bucketNumber);\n-\t\t\t}\n-\t\t\ttry {\n-\t\t\t\tresponsibleWorker.getConnectedSlave().waitForFreeJobqueue();\n-\t\t\t}\n-\t\t\tcatch (InterruptedException e) {\n-\t\t\t\tlog.error(\"Interrupted while waiting for worker \" + responsibleWorker + \" to have free space in queue\", e);\n-\t\t\t}\n-\t\t\tresponsibleWorker.send(bucket);\n-\t\t}\n-\t}\n-\n-\tprivate boolean createSharedDictionary(PPColumn col, Column tableCol) throws JSONException {\n-\t\tAStringType<?> oldType = (AStringType<?>) col.getType();\n-\t\tDictionary source = oldType.getUnderlyingDictionary();\n-\t\t//could be null if the strin column has no (or too few) values\n-\t\tif (source == null) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tDictionaryId sharedId = new DictionaryId(namespace.getDataset().getId(), tableCol.getSharedDictionary());\n-\t\tlog.info(\"\\t\\tmerging {} into shared dictionary {}\", col.getName(), sharedId);\n-\n-\t\tDictionary shared = namespace.getStorage().computeDictionary(sharedId);\n-\t\tDictionaryMapping mapping = DictionaryMapping.create(\n-\t\t\t\tsource,\n-\t\t\t\tshared\n-\t\t);\n-\n-\t\tAStringType<?> newType = Cloner.clone(oldType);\n-\t\t//find the new number type to represent the ids\n-\t\tint minTargetId = Ints.min(mapping.getSource2TargetMap());\n-\t\tint maxTargetId = Ints.max(mapping.getSource2TargetMap());\n-\t\tVarIntParser numberParser = new VarIntParser();\n-\t\tnumberParser.registerValue(minTargetId);\n-\t\tnumberParser.registerValue(maxTargetId);\n-\t\tnumberParser.setLines(oldType.getLines());\n-\t\tnumberParser.setNullLines(oldType.getNullLines());\n-\t\tDecision<Integer, Number, VarIntType> decision = numberParser.findBestType();\n-\n-\t\tnewType.adaptUnderlyingDictionary(shared, decision.getType());\n-\t\tcol.setOldType(oldType);\n-\t\tcol.setValueMapping(mapping);\n-\t\tcol.setType(newType);\n-\t\treturn true;\n-\t}\n-\n-\t@Override\n-\tpublic String getLabel() {\n-\t\treturn \"Importing into \" + table + \" from \" + importFile;\n-\t}\n-\n-}\n+ private final ObjectReader headerReader = Jackson.BINARY_MAPPER.readerFor(PreprocessedHeader.class);\n+ private final Namespace namespace;\n+ private final TableId table;\n+ private final File importFile;\n+\n+ @Override\n+ public void execute() throws JSONException {\n+  this.progressReporter.setMax(7);\n+  try(HCFile file = new HCFile(importFile, false)) {\n+   if (log.isInfoEnabled()) {\n+    log.info(\"Reading HCFile {}: header size: {}  content size: {}\", importFile, BinaryByteUnit.format(file.getHeaderSize()), BinaryByteUnit.format(file.getContentSize()));\n+   }\n+\n+   PreprocessedHeader header = readHeader(file);\n+\n+   //check that all workers are connected\n+   namespace.checkConnections();\n+\n+   //update primary dictionary\n+   boolean mappingRequired = createMappings(header);\n+   this.progressReporter.report(1);\n+   DictionaryMapping primaryMapping = header.getPrimaryColumn().getValueMapping();\n+\n+   // Distribute the new IDs between the slaves\n+   log.debug(\"\\tpartition new IDs\");\n+\n+   // Allocate a responsibility for all yet unassigned buckets.\n+   synchronized (namespace) {\n+    for(int bucket :primaryMapping.getUsedBuckets()) {\n+     if (namespace.getResponsibleWorkerForBucket(bucket) != null) {\n+      continue;\n+     }\n+     namespace.addResponsibility(bucket);\n+    }\n+\n+    // While we hold the lock on the namespace distribute the new, consistent state among the workers\n+\n+    for(WorkerInformation w :namespace.getWorkers()) {\n+     w.send(new UpdateWorkerBucket(w));\n+    }\n+   }\n+\n+   //create data import and store/send it\n+   log.info(\"\\tupdating import information\");\n+   //if mapping is not required we can also use the old infos here\n+   Import outImport = createImport(header, !mappingRequired);\n+   Import inImport = createImport(header, true);\n+   inImport.setSuffix(inImport.getSuffix()+\"_old\");\n+   namespace.getStorage().updateImport(outImport);\n+   namespace.sendToAll(new AddImport(outImport));\n+   this.progressReporter.report(1);\n+\n+\n+   //import the actual data\n+   log.info(\"\\timporting\");\n+   int bucketSize = ConqueryConfig.getInstance().getCluster().getEntityBucketSize();\n+   Int2ObjectMap<ImportBucket> buckets = new Int2ObjectOpenHashMap<>(primaryMapping.getUsedBuckets().size());\n+   try(InputStream in = new GZIPInputStream(file.readContent())) {\n+    final Preprocessed.DataContainer container = Jackson.BINARY_MAPPER.readerFor(Preprocessed.DataContainer.class).readValue(in);\n+    if (container.getStarts() == null) {\n+     log.warn(\"Import was empty. Skipping.\");\n+     return;\n+    }\n+\n+    final ColumnStore<?>[] stores = container.getValues();\n+    Multimap<Integer, Integer> buckets2LocalEntities = LinkedHashMultimap.create();\n+\n+    // collect entities into their buckets\n+    for(Integer entity :container.getStarts().keySet()) {\n+     int entityId = primaryMapping.source2Target(entity);\n+     int currentBucket = Entity.getBucket(entityId, bucketSize);\n+     buckets2LocalEntities.put(currentBucket, entity);\n+    }\n+\n+    for(Map.Entry<Integer, Collection<Integer>> bucket2entities :buckets2LocalEntities.asMap().entrySet()) {\n+     int currentBucket = bucket2entities.getKey();\n+\n+     final List<Integer> entities = new ArrayList<>(bucket2entities.getValue());\n+     int[] selStart = new int[entities.size()];\n+     int[] selEnd = new int[entities.size()];\n+     for(int index = 0;index<entities.size();index++) {\n+      int localId = entities.get(index);\n+      selStart[index] = container.getStarts().get(localId);\n+      selEnd[index] = container.getEnds().get(localId);\n+     }\n+\n+     final List<ColumnStore<?>> list = new ArrayList<>(stores.length);\n+     list.addAll(Arrays.asList(stores));\n+\n+     // copy only the parts of the bucket we need\n+     list.replaceAll(store -> store.select(selStart, selEnd));\n+     int[] lengths = IntStream.range(0, selStart.length).map(index -> selEnd[index] - selStart[index]).toArray();\n+\n+     final Int2IntMap starts = new Int2IntAVLTreeMap();\n+\n+     final Int2IntMap ends = new Int2IntAVLTreeMap();\n+     starts.put(primaryMapping.source2Target(entities.get(0)), 0);\n+     ends.put(primaryMapping.source2Target(entities.get(0)), lengths[0]);\n+     for(int index = 1;index<lengths.length;index++) {\n+      int localId = entities.get(index);\n+      int globalId = primaryMapping.source2Target(localId);\n+\n+      final int previousEntity = primaryMapping.source2Target(entities.get(index -1));\n+      starts.put(globalId, ends.get(previousEntity));\n+      ends.put(globalId, starts.get(globalId)+lengths[index]);\n+     }\n+     buckets.put(currentBucket, new ImportBucket(new BucketId(outImport.getId(), currentBucket), new Bucket(currentBucket, outImport.getId(), ends.values().stream().mapToInt(i -> i).max().orElse(0), list.toArray(new ColumnStore[0]), starts, ends, starts.size())));\n+    }\n+   }\n+   sendBuckets(primaryMapping, buckets);\n+   getProgressReporter().done();\n+  }\n+  catch (IOException e) {\n+   throw new IllegalStateException(\"Failed to load the file \"+importFile, e);\n+  }\n+ }\n+\n+ private PreprocessedHeader readHeader(HCFile file) throws JsonParseException, IOException {\n+  try(JsonParser in = Jackson.BINARY_MAPPER.getFactory().createParser(file.readHeader())) {\n+   PreprocessedHeader header = headerReader.readValue(in);\n+   log.info(\"Importing {} into {}\", header.getName(), table);\n+   Table tab = namespace.getStorage().getDataset().getTables().getOrFail(table);\n+   header.assertMatch(tab);\n+   log.debug(\"\\tparsing dictionaries\");\n+   header.getPrimaryColumn().getType().readHeader(in);\n+   for(PPColumn col :header.getColumns()) {\n+    col.getType().readHeader(in);\n+   }\n+   header.getPrimaryColumn().getType().init(namespace.getStorage().getDataset().getId());\n+   for(PPColumn col :header.getColumns()) {\n+    col.getType().init(namespace.getStorage().getDataset().getId());\n+   }\n+   return header;\n+  }\n+ }\n+\n+ private boolean createMappings(PreprocessedHeader header) throws JSONException {\n+  log.debug(\"\\tupdating primary dictionary\");\n+  Dictionary entities = ((StringTypeEncoded)header.getPrimaryColumn().getType()).getSubType().getDictionary();\n+  this.progressReporter.report(1);\n+  log.debug(\"\\tcompute dictionary\");\n+  Dictionary oldPrimaryDict = namespace.getStorage().computeDictionary(ConqueryConstants.getPrimaryDictionary(namespace.getStorage().getDataset()));\n+  Dictionary primaryDict = Dictionary.copyUncompressed(oldPrimaryDict);\n+  log.debug(\"\\tmap values\");\n+  DictionaryMapping primaryMapping = DictionaryMapping.create(entities, primaryDict);\n+\n+  //if no new ids we shouldn't recompress and store\n+  if(primaryMapping.getNewIds() == null) {\n+   log.debug(\"\\t\\tno new ids\");\n+   primaryDict = oldPrimaryDict;\n+   this.progressReporter.report(2);\n+  }\n+  //but if there are new ids we have to\n+  else {\n+   log.debug(\"\\t\\t {} new ids {}\",\n+             primaryMapping.getNumberOfNewIds(),\n+             primaryMapping.getNewIds()\n+   );\n+   log.debug(\"\\t\\texample of new id: {}\",\n+             new String(primaryDict.getElement(primaryMapping.getNewIds().getMin()))\n+   );\n+   log.debug(\"\\t\\tstoring\");\n+   namespace.getStorage().updateDictionary(primaryDict);\n+   this.progressReporter.report(1);\n+   log.debug(\"\\t\\tsending\");\n+   namespace.sendToAll(new UpdateDictionary(primaryDict));\n+   this.progressReporter.report(1);\n+  }\n+  boolean mappingRequired = false;\n+  log.debug(\"\\tsending secondary dictionaries\");\n+  Table table = namespace.getStorage().getDataset().getTables().get(this.table);\n+  for(int colPos = 0;colPos<header.getColumns().length;colPos++) {\n+   PPColumn col = header.getColumns()[colPos];\n+   Column tableCol = table.getColumns()[colPos];\n+   //if the column uses a shared dictionary we have to merge the existing dictionary into that\n+   if (tableCol.getType() == MajorTypeId.STRING && tableCol.getSharedDictionary() != null) {\n+    mappingRequired |= createSharedDictionary(col, tableCol);\n+   }\n+\n+   //store external infos into master and slaves\n+   col.getType().storeExternalInfos(namespace.getStorage(), (Consumer<Dictionary>)(dict -> {\n+                                                                                   try {\n+                                                                                    namespace.getStorage().updateDictionary(dict);\n+                                                                                    namespace.sendToAll(new UpdateDictionary(dict));\n+                                                                                   }\n+                                                                                   catch (Exception e) {\n+                                                                                    throw new RuntimeException(\"Failed to store dictionary \"+dict, e);\n+                                                                                   }\n+                                                                                  }));\n+  }\n+  header.getPrimaryColumn().setValueMapping(primaryMapping);\n+  return mappingRequired;\n+ }\n+\n+ private Import createImport(PreprocessedHeader header, boolean useOldType) {\n+  Import imp = new Import();\n+  imp.setName(header.getName());\n+  imp.setTable(table);\n+  imp.setNumberOfEntries(header.getRows());\n+  imp.setSuffix(header.getSuffix());\n+  imp.setColumns(new ImportColumn[header.getColumns().length]);\n+  for(int i = 0;i<header.getColumns().length;i++) {\n+   PPColumn src = header.getColumns()[i];\n+   ImportColumn col = new ImportColumn();\n+   col.setName(src.getName());\n+   col.setType(useOldType ? Objects.requireNonNullElse(src.getOldType(), src.getType()) : src.getType());\n+   col.setParent(imp);\n+   col.setPosition(i);\n+   imp.getColumns()[i] = col;\n+  }\n+  return imp;\n+ }\n+\n+ private void sendBuckets(DictionaryMapping primaryMapping, Int2ObjectMap<ImportBucket> buckets) {\n+  for(int bucketNumber :primaryMapping.getUsedBuckets()) {\n+   ImportBucket bucket = buckets.get(bucketNumber);\n+   //a bucket could be empty since the used buckets coming from the\n+   //dictionary could contain ids that have no events (see filter)\n+   if (bucket == null) {\n+    continue;\n+   }\n+\n+   WorkerInformation responsibleWorker = namespace.getResponsibleWorkerForBucket(bucketNumber);\n+   if (responsibleWorker == null) {\n+    throw new IllegalStateException(\"No responsible worker for bucket \"+bucketNumber);\n+   }\n+   try {\n+    responsibleWorker.getConnectedSlave().waitForFreeJobqueue();\n+   }\n+   catch (InterruptedException e) {\n+    log.error(\"Interrupted while waiting for worker \"+responsibleWorker+\" to have free space in queue\",\n+              e\n+    );\n+   }\n+   responsibleWorker.send(bucket);\n+  }\n+ }\n+\n+ private boolean createSharedDictionary(PPColumn col, Column tableCol) throws JSONException {\n+  AStringType<?> oldType = (AStringType<?>)col.getType();\n+  Dictionary source = oldType.getUnderlyingDictionary();\n+  //could be null if the strin column has no (or too few) values\n+  if (source == null) {\n+   return false;\n+  }\n+\n+  DictionaryId sharedId = new DictionaryId(namespace.getDataset().getId(), tableCol.getSharedDictionary());\n+  log.info(\"\\t\\tmerging {} into shared dictionary {}\", col.getName(), sharedId);\n+  Dictionary shared = namespace.getStorage().computeDictionary(sharedId);\n+  DictionaryMapping mapping = DictionaryMapping.create(source, shared);\n+  AStringType<?> newType = Cloner.clone(oldType);\n+  //find the new number type to represent the ids\n+  int minTargetId = Ints.min(mapping.getSource2TargetMap());\n+  int maxTargetId = Ints.max(mapping.getSource2TargetMap());\n+  VarIntParser numberParser = new VarIntParser();\n+  numberParser.registerValue(minTargetId);\n+  numberParser.registerValue(maxTargetId);\n+  numberParser.setLines(oldType.getLines());\n+  numberParser.setNullLines(oldType.getNullLines());\n+  Decision<Integer, Number, VarIntType> decision = numberParser.findBestType();\n+  newType.adaptUnderlyingDictionary(shared, decision.getType());\n+  col.setOldType(oldType);\n+  col.setValueMapping(mapping);\n+  col.setType(newType);\n+  return true;\n+ }\n+\n+ @Override\n+ public String getLabel() {\n+  return \"Importing into \"+table+\" from \"+importFile;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 330
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/863/ImportJob.java\nindex 057fb0a0212..98188fcb552 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/863/ImportJob.java\n@@ -317,7 +317,7 @@ public class ImportJob extends Job {\n \t\t\tcol.setType(\n \t\t\t\t\tuseOldType ?\n \t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n-\t\t\t\t\t\t\t   :\n+\t\t\t\t\t:\n \t\t\t\t\tsrc.getType()\n \t\t\t);\n \t\t\tcol.setParent(imp);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/863/ImportJob.java\nindex 057fb0a0212..f36b014ff1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/863/ImportJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/863/ImportJob.java\n@@ -316,9 +316,8 @@ public class ImportJob extends Job {\n \t\t\tcol.setName(src.getName());\n \t\t\tcol.setType(\n \t\t\t\t\tuseOldType ?\n-\t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType())\n-\t\t\t\t\t\t\t   :\n-\t\t\t\t\tsrc.getType()\n+\t\t\t\t\tObjects.requireNonNullElse(src.getOldType(), src.getType()):\n+\t\t\t\tsrc.getType()\n \t\t\t);\n \t\t\tcol.setParent(imp);\n \t\t\tcol.setPosition(i);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
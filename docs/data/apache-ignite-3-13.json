{
    "project_name": "apache-ignite-3",
    "error_id": "13",
    "information": {
        "errors": [
            {
                "line": "35",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n    private final AtomicInteger counter = new AtomicInteger(0);\n    private final boolean daemon;\n\n    public NamedThreadFactory(String prefix) {\n        this(prefix, false);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/13/NamedThreadFactory.java\nindex fd786295a46..13831e043d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/13/NamedThreadFactory.java\n@@ -32,6 +32,7 @@ public class NamedThreadFactory implements ThreadFactory {\n     private final String prefix;\n \n     private final AtomicInteger counter = new AtomicInteger(0);\n+\n     private final boolean daemon;\n \n     public NamedThreadFactory(String prefix) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/13/NamedThreadFactory.java\nindex fd786295a46..26abccbb257 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/13/NamedThreadFactory.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.ignite.raft.jraft.util;\n \n import java.util.concurrent.ThreadFactory;\n@@ -25,38 +26,39 @@ import org.slf4j.LoggerFactory;\n  * Named thread factory with prefix.\n  */\n public class NamedThreadFactory implements ThreadFactory {\n-    private static final Logger LOG = LoggerFactory.getLogger(NamedThreadFactory.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(NamedThreadFactory.class);\n \n-    private static final LogUncaughtExceptionHandler UNCAUGHT_EX_HANDLER = new LogUncaughtExceptionHandler();\n+  private static final LogUncaughtExceptionHandler UNCAUGHT_EX_HANDLER = new LogUncaughtExceptionHandler();\n \n-    private final String prefix;\n+  private final String prefix;\n \n-    private final AtomicInteger counter = new AtomicInteger(0);\n-    private final boolean daemon;\n+  private final AtomicInteger counter = new AtomicInteger(0);\n \n-    public NamedThreadFactory(String prefix) {\n-        this(prefix, false);\n-    }\n+  private final boolean daemon;\n \n-    public NamedThreadFactory(String prefix, boolean daemon) {\n-        super();\n-        this.prefix = prefix;\n-        this.daemon = daemon;\n-    }\n+  public NamedThreadFactory(String prefix) {\n+    this(prefix, false);\n+  }\n \n-    @Override\n-    public Thread newThread(Runnable r) {\n-        Thread t = new Thread(r);\n-        t.setDaemon(this.daemon);\n-        t.setUncaughtExceptionHandler(UNCAUGHT_EX_HANDLER);\n-        t.setName(this.prefix + counter.getAndIncrement());\n-        return t;\n-    }\n+  public NamedThreadFactory(String prefix, boolean daemon) {\n+    super();\n+    this.prefix = prefix;\n+    this.daemon = daemon;\n+  }\n+\n+  @Override\n+  public Thread newThread(Runnable r) {\n+    Thread t = new Thread(r);\n+    t.setDaemon(this.daemon);\n+    t.setUncaughtExceptionHandler(UNCAUGHT_EX_HANDLER);\n+    t.setName(this.prefix + counter.getAndIncrement());\n+    return t;\n+  }\n \n-    private static final class LogUncaughtExceptionHandler implements Thread.UncaughtExceptionHandler {\n-        @Override\n-        public void uncaughtException(Thread t, Throwable e) {\n-            LOG.error(\"Uncaught exception in thread {}\", t, e);\n-        }\n+  private static final class LogUncaughtExceptionHandler implements Thread.UncaughtExceptionHandler {\n+    @Override\n+    public void uncaughtException(Thread t, Throwable e) {\n+      LOG.error(\"Uncaught exception in thread {}\", t, e);\n     }\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/13/NamedThreadFactory.java\nindex fd786295a46..f3e463716d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/13/NamedThreadFactory.java\n@@ -59,4 +59,4 @@ public class NamedThreadFactory implements ThreadFactory {\n             LOG.error(\"Uncaught exception in thread {}\", t, e);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "40",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "59",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/13/NamedThreadFactory.java\nindex fd786295a46..d2b489ee0e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/13/NamedThreadFactory.java\n@@ -24,39 +24,55 @@ import org.slf4j.LoggerFactory;\n /**\n  * Named thread factory with prefix.\n  */\n+\n+\n public class NamedThreadFactory implements ThreadFactory {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(NamedThreadFactory.class);\n \n+\n     private static final LogUncaughtExceptionHandler UNCAUGHT_EX_HANDLER = new LogUncaughtExceptionHandler();\n \n+\n     private final String prefix;\n \n+\n     private final AtomicInteger counter = new AtomicInteger(0);\n+\n+\n     private final boolean daemon;\n \n+\n     public NamedThreadFactory(String prefix) {\n         this(prefix, false);\n     }\n \n+\n     public NamedThreadFactory(String prefix, boolean daemon) {\n         super();\n+\n         this.prefix = prefix;\n         this.daemon = daemon;\n     }\n \n-    @Override\n-    public Thread newThread(Runnable r) {\n+\n+    @Override public Thread newThread(Runnable r) {\n         Thread t = new Thread(r);\n+\n         t.setDaemon(this.daemon);\n+\n         t.setUncaughtExceptionHandler(UNCAUGHT_EX_HANDLER);\n+\n         t.setName(this.prefix + counter.getAndIncrement());\n+\n         return t;\n     }\n \n+\n     private static final class LogUncaughtExceptionHandler implements Thread.UncaughtExceptionHandler {\n-        @Override\n-        public void uncaughtException(Thread t, Throwable e) {\n+\n+        @Override public void uncaughtException(Thread t, Throwable e) {\n             LOG.error(\"Uncaught exception in thread {}\", t, e);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/13/NamedThreadFactory.java\nindex fd786295a46..13831e043d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/13/NamedThreadFactory.java\n@@ -32,6 +32,7 @@ public class NamedThreadFactory implements ThreadFactory {\n     private final String prefix;\n \n     private final AtomicInteger counter = new AtomicInteger(0);\n+\n     private final boolean daemon;\n \n     public NamedThreadFactory(String prefix) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/13/NamedThreadFactory.java\nindex fd786295a46..13831e043d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/13/NamedThreadFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/13/NamedThreadFactory.java\n@@ -32,6 +32,7 @@ public class NamedThreadFactory implements ThreadFactory {\n     private final String prefix;\n \n     private final AtomicInteger counter = new AtomicInteger(0);\n+\n     private final boolean daemon;\n \n     public NamedThreadFactory(String prefix) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
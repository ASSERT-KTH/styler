{
    "project_name": "apache-usergrid",
    "error_id": "186",
    "information": {
        "errors": [
            {
                "line": "59",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Inject\n    public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n                                                     final MigrationInfoCache migrationInfoCache ) {\n\n        this.keyspace = keyspace;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/186/MvccEntitySerializationStrategyProxyImpl.java\nindex 1fe342ea5fa..6607bd86e75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/186/MvccEntitySerializationStrategyProxyImpl.java\n@@ -56,7 +56,7 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n     @Inject\n     public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n-                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n+                                           final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n                                                      final MigrationInfoCache migrationInfoCache ) {\n \n         this.keyspace = keyspace;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/186/MvccEntitySerializationStrategyProxyImpl.java\nindex 1fe342ea5fa..fd2cd222c61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/186/MvccEntitySerializationStrategyProxyImpl.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.collection.serialization.impl;\n \n \n@@ -50,14 +51,16 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n \n     protected final Keyspace keyspace;\n+\n     private final VersionedMigrationSet<MvccEntitySerializationStrategy> versions;\n+\n     private final MigrationInfoCache migrationInfoCache;\n \n \n     @Inject\n-    public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n-                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n-                                                     final MigrationInfoCache migrationInfoCache ) {\n+    public MvccEntitySerializationStrategyProxyImpl(final Keyspace keyspace,\n+                                                    final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n+                                                    final MigrationInfoCache migrationInfoCache) {\n \n         this.keyspace = keyspace;\n         this.migrationInfoCache = migrationInfoCache;\n@@ -66,110 +69,109 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n \n     @Override\n-    public MutationBatch write( final ApplicationScope context, final MvccEntity entity ) {\n+    public MutationBatch write(final ApplicationScope context, final MvccEntity entity) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration() ) {\n+        if (migration.needsMigration()) {\n             final MutationBatch aggregateBatch = keyspace.prepareMutationBatch();\n \n-            aggregateBatch.mergeShallow( migration.from.write( context, entity ) );\n-            aggregateBatch.mergeShallow( migration.to.write( context, entity ) );\n+            aggregateBatch.mergeShallow(migration.from.write(context, entity));\n+            aggregateBatch.mergeShallow(migration.to.write(context, entity));\n \n             return aggregateBatch;\n         }\n \n-        return migration.to.write( context, entity );\n+        return migration.to.write(context, entity);\n     }\n \n \n     @Override\n-    public EntitySet load( final ApplicationScope scope, final Collection<Id> entityIds, final UUID maxVersion ) {\n+    public EntitySet load(final ApplicationScope scope, final Collection<Id> entityIds, final UUID maxVersion) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration() ) {\n-            return migration.from.load( scope, entityIds, maxVersion );\n+        if (migration.needsMigration()) {\n+            return migration.from.load(scope, entityIds, maxVersion);\n         }\n \n-        return migration.to.load( scope, entityIds, maxVersion );\n+        return migration.to.load(scope, entityIds, maxVersion);\n     }\n \n \n-\n     @Override\n-    public Iterator<MvccEntity> loadDescendingHistory( final ApplicationScope context, final Id entityId,\n-                                                       final UUID version, final int fetchSize ) {\n+    public Iterator<MvccEntity> loadDescendingHistory(final ApplicationScope context, final Id entityId,\n+                                                      final UUID version, final int fetchSize) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration()) {\n-            return migration.from.loadDescendingHistory( context, entityId, version, fetchSize );\n+        if (migration.needsMigration()) {\n+            return migration.from.loadDescendingHistory(context, entityId, version, fetchSize);\n         }\n \n-        return migration.to.loadDescendingHistory( context, entityId, version, fetchSize );\n+        return migration.to.loadDescendingHistory(context, entityId, version, fetchSize);\n     }\n \n \n     @Override\n-    public Iterator<MvccEntity> loadAscendingHistory( final ApplicationScope context, final Id entityId,\n-                                                      final UUID version, final int fetchSize ) {\n+    public Iterator<MvccEntity> loadAscendingHistory(final ApplicationScope context, final Id entityId,\n+                                                     final UUID version, final int fetchSize) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration() ) {\n-            return migration.from.loadAscendingHistory( context, entityId, version, fetchSize );\n+        if (migration.needsMigration()) {\n+            return migration.from.loadAscendingHistory(context, entityId, version, fetchSize);\n         }\n \n-        return migration.to.loadAscendingHistory( context, entityId, version, fetchSize );\n+        return migration.to.loadAscendingHistory(context, entityId, version, fetchSize);\n     }\n \n     @Override\n-    public Optional<MvccEntity> load( final ApplicationScope scope, final Id entityId ) {\n+    public Optional<MvccEntity> load(final ApplicationScope scope, final Id entityId) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration() ) {\n-            return migration.from.load( scope, entityId );\n+        if (migration.needsMigration()) {\n+            return migration.from.load(scope, entityId);\n         }\n \n-        return migration.to.load( scope, entityId );\n+        return migration.to.load(scope, entityId);\n     }\n \n \n     @Override\n-    public MutationBatch mark( final ApplicationScope context, final Id entityId, final UUID version ) {\n+    public MutationBatch mark(final ApplicationScope context, final Id entityId, final UUID version) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration() ) {\n+        if (migration.needsMigration()) {\n             final MutationBatch aggregateBatch = keyspace.prepareMutationBatch();\n \n-            aggregateBatch.mergeShallow( migration.from.mark( context, entityId, version ) );\n-            aggregateBatch.mergeShallow( migration.to.mark( context, entityId, version ) );\n+            aggregateBatch.mergeShallow(migration.from.mark(context, entityId, version));\n+            aggregateBatch.mergeShallow(migration.to.mark(context, entityId, version));\n \n             return aggregateBatch;\n         }\n \n-        return migration.to.mark( context, entityId, version );\n+        return migration.to.mark(context, entityId, version);\n     }\n \n \n     @Override\n-    public MutationBatch delete( final ApplicationScope context, final Id entityId, final UUID version ) {\n+    public MutationBatch delete(final ApplicationScope context, final Id entityId, final UUID version) {\n \n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-        if ( migration.needsMigration() ) {\n+        if (migration.needsMigration()) {\n             final MutationBatch aggregateBatch = keyspace.prepareMutationBatch();\n \n-            aggregateBatch.mergeShallow( migration.from.delete( context, entityId, version ) );\n-            aggregateBatch.mergeShallow( migration.to.delete( context, entityId, version ) );\n+            aggregateBatch.mergeShallow(migration.from.delete(context, entityId, version));\n+            aggregateBatch.mergeShallow(migration.to.delete(context, entityId, version));\n \n             return aggregateBatch;\n         }\n \n-        return migration.to.delete( context, entityId, version );\n+        return migration.to.delete(context, entityId, version);\n     }\n \n     /**\n@@ -177,7 +179,7 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n      */\n     private MigrationRelationship<MvccEntitySerializationStrategy> getMigrationRelationShip() {\n         return this.versions.getMigrationRelationship(\n-                migrationInfoCache.getVersion( CollectionMigrationPlugin.PLUGIN_NAME ) );\n+            migrationInfoCache.getVersion(CollectionMigrationPlugin.PLUGIN_NAME));\n     }\n \n \n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/186/MvccEntitySerializationStrategyProxyImpl.java\nindex 1fe342ea5fa..2833a216b19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/186/MvccEntitySerializationStrategyProxyImpl.java\n@@ -48,18 +48,14 @@ import com.netflix.astyanax.MutationBatch;\n @Singleton\n public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySerializationStrategy {\n \n-\n     protected final Keyspace keyspace;\n     private final VersionedMigrationSet<MvccEntitySerializationStrategy> versions;\n     private final MigrationInfoCache migrationInfoCache;\n \n \n     @Inject\n-    public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n-                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n-                                                     final MigrationInfoCache migrationInfoCache ) {\n-\n-        this.keyspace = keyspace;\n+    public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace, final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions, final MigrationInfoCache migrationInfoCache ) {\n+    this.keyspace = keyspace;\n         this.migrationInfoCache = migrationInfoCache;\n         this.versions = allVersions;\n     }\n@@ -96,14 +92,11 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n     }\n \n \n+@Override\n+    public Iterator<MvccEntity> loadDescendingHistory( final ApplicationScope context, final Id entityId, final UUID version, final int fetchSize ) {\n+    final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n-    @Override\n-    public Iterator<MvccEntity> loadDescendingHistory( final ApplicationScope context, final Id entityId,\n-                                                       final UUID version, final int fetchSize ) {\n-\n-        final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n-        if ( migration.needsMigration()) {\n+        if ( migration.needsMigration() ) {\n             return migration.from.loadDescendingHistory( context, entityId, version, fetchSize );\n         }\n \n@@ -112,10 +105,8 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n \n     @Override\n-    public Iterator<MvccEntity> loadAscendingHistory( final ApplicationScope context, final Id entityId,\n-                                                      final UUID version, final int fetchSize ) {\n-\n-        final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n+    public Iterator<MvccEntity> loadAscendingHistory( final ApplicationScope context, final Id entityId, final UUID version, final int fetchSize ) {\n+    final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n \n         if ( migration.needsMigration() ) {\n             return migration.from.loadAscendingHistory( context, entityId, version, fetchSize );\n@@ -172,7 +163,8 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n         return migration.to.delete( context, entityId, version );\n     }\n \n-    /**\n+\n+/**\n      * Return true if we're on an old version\n      */\n     private MigrationRelationship<MvccEntitySerializationStrategy> getMigrationRelationShip() {\n@@ -191,5 +183,4 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n     public int getImplementationVersion() {\n         throw new UnsupportedOperationException(\"Not supported in the proxy\");\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/186/MvccEntitySerializationStrategyProxyImpl.java\nindex 1fe342ea5fa..6f944c93158 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/186/MvccEntitySerializationStrategyProxyImpl.java\n@@ -21,7 +21,6 @@ import java.util.Collection;\n import java.util.Collections;\n import java.util.Iterator;\n import java.util.UUID;\n-\n import org.apache.usergrid.persistence.collection.EntitySet;\n import org.apache.usergrid.persistence.collection.MvccEntity;\n import org.apache.usergrid.persistence.collection.serialization.MvccEntitySerializationStrategy;\n@@ -32,7 +31,6 @@ import org.apache.usergrid.persistence.core.migration.data.MigrationRelationship\n import org.apache.usergrid.persistence.core.migration.data.VersionedMigrationSet;\n import org.apache.usergrid.persistence.core.scope.ApplicationScope;\n import org.apache.usergrid.persistence.model.entity.Id;\n-\n import com.google.common.base.Optional;\n import com.google.inject.Inject;\n import com.google.inject.Singleton;\n@@ -45,20 +43,18 @@ import com.netflix.astyanax.MutationBatch;\n  * migration data goes to both sources and is read from the old source. After the upgrade completes,\n  * it will be available from the new source\n  */\n+\n+\n @Singleton\n public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySerializationStrategy {\n \n-\n     protected final Keyspace keyspace;\n     private final VersionedMigrationSet<MvccEntitySerializationStrategy> versions;\n     private final MigrationInfoCache migrationInfoCache;\n \n \n     @Inject\n-    public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n-                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n-                                                     final MigrationInfoCache migrationInfoCache ) {\n-\n+    public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace, final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions, final MigrationInfoCache migrationInfoCache ) {\n         this.keyspace = keyspace;\n         this.migrationInfoCache = migrationInfoCache;\n         this.versions = allVersions;\n@@ -67,117 +63,89 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n     @Override\n     public MutationBatch write( final ApplicationScope context, final MvccEntity entity ) {\n-\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n         if ( migration.needsMigration() ) {\n             final MutationBatch aggregateBatch = keyspace.prepareMutationBatch();\n-\n             aggregateBatch.mergeShallow( migration.from.write( context, entity ) );\n             aggregateBatch.mergeShallow( migration.to.write( context, entity ) );\n-\n             return aggregateBatch;\n         }\n-\n         return migration.to.write( context, entity );\n     }\n \n \n     @Override\n     public EntitySet load( final ApplicationScope scope, final Collection<Id> entityIds, final UUID maxVersion ) {\n-\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n         if ( migration.needsMigration() ) {\n             return migration.from.load( scope, entityIds, maxVersion );\n         }\n-\n         return migration.to.load( scope, entityIds, maxVersion );\n     }\n \n \n-\n     @Override\n-    public Iterator<MvccEntity> loadDescendingHistory( final ApplicationScope context, final Id entityId,\n-                                                       final UUID version, final int fetchSize ) {\n-\n+    public Iterator<MvccEntity> loadDescendingHistory( final ApplicationScope context, final Id entityId, final UUID version, final int fetchSize ) {\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n-        if ( migration.needsMigration()) {\n+        if ( migration.needsMigration() ) {\n             return migration.from.loadDescendingHistory( context, entityId, version, fetchSize );\n         }\n-\n         return migration.to.loadDescendingHistory( context, entityId, version, fetchSize );\n     }\n \n \n     @Override\n-    public Iterator<MvccEntity> loadAscendingHistory( final ApplicationScope context, final Id entityId,\n-                                                      final UUID version, final int fetchSize ) {\n-\n+    public Iterator<MvccEntity> loadAscendingHistory( final ApplicationScope context, final Id entityId, final UUID version, final int fetchSize ) {\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n         if ( migration.needsMigration() ) {\n             return migration.from.loadAscendingHistory( context, entityId, version, fetchSize );\n         }\n-\n         return migration.to.loadAscendingHistory( context, entityId, version, fetchSize );\n     }\n \n+\n     @Override\n     public Optional<MvccEntity> load( final ApplicationScope scope, final Id entityId ) {\n-\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n         if ( migration.needsMigration() ) {\n             return migration.from.load( scope, entityId );\n         }\n-\n         return migration.to.load( scope, entityId );\n     }\n \n \n     @Override\n     public MutationBatch mark( final ApplicationScope context, final Id entityId, final UUID version ) {\n-\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n         if ( migration.needsMigration() ) {\n             final MutationBatch aggregateBatch = keyspace.prepareMutationBatch();\n-\n             aggregateBatch.mergeShallow( migration.from.mark( context, entityId, version ) );\n             aggregateBatch.mergeShallow( migration.to.mark( context, entityId, version ) );\n-\n             return aggregateBatch;\n         }\n-\n         return migration.to.mark( context, entityId, version );\n     }\n \n \n     @Override\n     public MutationBatch delete( final ApplicationScope context, final Id entityId, final UUID version ) {\n-\n         final MigrationRelationship<MvccEntitySerializationStrategy> migration = getMigrationRelationShip();\n-\n         if ( migration.needsMigration() ) {\n             final MutationBatch aggregateBatch = keyspace.prepareMutationBatch();\n-\n             aggregateBatch.mergeShallow( migration.from.delete( context, entityId, version ) );\n             aggregateBatch.mergeShallow( migration.to.delete( context, entityId, version ) );\n-\n             return aggregateBatch;\n         }\n-\n         return migration.to.delete( context, entityId, version );\n     }\n \n     /**\n      * Return true if we're on an old version\n      */\n+\n+\n     private MigrationRelationship<MvccEntitySerializationStrategy> getMigrationRelationShip() {\n-        return this.versions.getMigrationRelationship(\n-                migrationInfoCache.getVersion( CollectionMigrationPlugin.PLUGIN_NAME ) );\n+        return this.versions.getMigrationRelationship( migrationInfoCache.getVersion( CollectionMigrationPlugin.PLUGIN_NAME ) );\n     }\n \n \n@@ -189,7 +157,6 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n     @Override\n     public int getImplementationVersion() {\n-        throw new UnsupportedOperationException(\"Not supported in the proxy\");\n+        throw new UnsupportedOperationException( \"Not supported in the proxy\" );\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_random/186/MvccEntitySerializationStrategyProxyImpl.java\nindex 1fe342ea5fa..6607bd86e75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_random/186/MvccEntitySerializationStrategyProxyImpl.java\n@@ -56,7 +56,7 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n     @Inject\n     public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n-                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n+                                           final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n                                                      final MigrationInfoCache migrationInfoCache ) {\n \n         this.keyspace = keyspace;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/186/MvccEntitySerializationStrategyProxyImpl.java\nindex 1fe342ea5fa..d0377e29569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/186/MvccEntitySerializationStrategyProxyImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/186/MvccEntitySerializationStrategyProxyImpl.java\n@@ -56,8 +56,7 @@ public class MvccEntitySerializationStrategyProxyImpl implements MvccEntitySeria\n \n     @Inject\n     public MvccEntitySerializationStrategyProxyImpl( final Keyspace keyspace,\n-                                                     final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions,\n-                                                     final MigrationInfoCache migrationInfoCache ) {\n+            final VersionedMigrationSet<MvccEntitySerializationStrategy> allVersions, final MigrationInfoCache migrationInfoCache ) {\n \n         this.keyspace = keyspace;\n         this.migrationInfoCache = migrationInfoCache;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
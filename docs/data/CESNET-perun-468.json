{
    "project_name": "CESNET-perun",
    "error_id": "468",
    "information": {
        "errors": [
            {
                "line": "236",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\t\t}\n\t},\n\t\n\t/*#\n\t * Returns service states for defined facility.\n\t *",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/468/PropagationStatsReaderMethod.java\nindex ba2a3efbc91..2d0d6d37d99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/468/PropagationStatsReaderMethod.java\n@@ -233,7 +233,7 @@ public enum PropagationStatsReaderMethod implements ManagerMethod {\n \t\t\treturn ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n \t\t}\n \t},\n-\t\n+\n \t/*#\n \t * Returns service states for defined facility.\n \t *\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/468/PropagationStatsReaderMethod.java\nindex ba2a3efbc91..4fc6320a889 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/468/PropagationStatsReaderMethod.java\n@@ -17,245 +17,245 @@ import cz.metacentrum.perun.taskslib.model.TaskResult;\n \n public enum PropagationStatsReaderMethod implements ManagerMethod {\n \n-\t/*#\n-\t * Returns a task.\n-\t *\n-\t * @param execService int Exec service <code>id</code>\n-\t * @param facility int Facility <code>id</code>\n-\t * @return Task Found task\n-\t */\n-\tgetTask {\n-\t\tpublic Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n-\t\t\tFacility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n-\t\t\treturn ac.getPropagationStatsReader().getTask(ac.getSession(), execService, facility);\n-\t\t}\n-\t},\n+    /*#\n+     * Returns a task.\n+     *\n+     * @param execService int Exec service <code>id</code>\n+     * @param facility int Facility <code>id</code>\n+     * @return Task Found task\n+     */\n+    getTask {\n+        public Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            ExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n+            Facility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n+            return ac.getPropagationStatsReader().getTask(ac.getSession(), execService, facility);\n+        }\n+    },\n \n-\t/*#\n-\t * Returns all tasks.\n-\t *\n-\t * @return List<Task> All tasks\n-\t */\n-\tlistAllTasks {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().listAllTasks(ac.getSession());\n-\t\t}\n-\t},\n+    /*#\n+     * Returns all tasks.\n+     *\n+     * @return List<Task> All tasks\n+     */\n+    listAllTasks {\n+        public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().listAllTasks(ac.getSession());\n+        }\n+    },\n \n-\t/*#\n-\t * Returns all tasks associated with selected facility.\n-\t *\n-\t * @param facility int Facility <code>id</code>\n-\t * @return List<Tasks> Tasks\n-\t */\n-\tlistAllTasksForFacility {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().listAllTasksForFacility(ac.getSession(), parms.readInt(\"facility\"));\n-\t\t}\n-\t},\n+    /*#\n+     * Returns all tasks associated with selected facility.\n+     *\n+     * @param facility int Facility <code>id</code>\n+     * @return List<Tasks> Tasks\n+     */\n+    listAllTasksForFacility {\n+        public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().listAllTasksForFacility(ac.getSession(), parms.readInt(\"facility\"));\n+        }\n+    },\n \n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistAllTasksInState {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n+    /*#\n+     *\tNOT IMPLEMENTED YET\n+     */\n+    listAllTasksInState {\n+        public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            throw new InternalErrorException(\"Not implemented yet!\");\n+        }\n+    },\n \n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistTasksScheduledBetweenDates {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n+    /*#\n+     *\tNOT IMPLEMENTED YET\n+     */\n+    listTasksScheduledBetweenDates {\n+        public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            throw new InternalErrorException(\"Not implemented yet!\");\n+        }\n+    },\n \n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistTasksStartedBetweenDates {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n+    /*#\n+     *\tNOT IMPLEMENTED YET\n+     */\n+    listTasksStartedBetweenDates {\n+        public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            throw new InternalErrorException(\"Not implemented yet!\");\n+        }\n+    },\n \n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistTasksEndedBetweenDates {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n+    /*#\n+     *\tNOT IMPLEMENTED YET\n+     */\n+    listTasksEndedBetweenDates {\n+        public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            throw new InternalErrorException(\"Not implemented yet!\");\n+        }\n+    },\n \n-\t/*#\n-\t * Whether task exists.\n-\t *\n-\t * @param execService int ExecService <code>id</code>\n-\t * @param facility int Facility <code>id</code>\n-\t * @return int 1 = true; 0 = false\n-\t */\n-\tisThereSuchTask {\n-\t\tpublic Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n-\t\t\tFacility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n-\t\t\treturn ( ac.getPropagationStatsReader().isThereSuchTask(execService, facility) ? 1 : 0 );\n-\t\t}\n-\t},\n+    /*#\n+     * Whether task exists.\n+     *\n+     * @param execService int ExecService <code>id</code>\n+     * @param facility int Facility <code>id</code>\n+     * @return int 1 = true; 0 = false\n+     */\n+    isThereSuchTask {\n+        public Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            ExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n+            Facility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n+            return (ac.getPropagationStatsReader().isThereSuchTask(execService, facility) ? 1 : 0);\n+        }\n+    },\n \n-\t/*#\n-\t * Returns the count of all tasks.\n-\t *\n-\t * @return int Task count\n-\t */\n-\tcountTasks {\n-\t\tpublic Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().countTasks();\n-\t\t}\n-\t},\n+    /*#\n+     * Returns the count of all tasks.\n+     *\n+     * @return int Task count\n+     */\n+    countTasks {\n+        public Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().countTasks();\n+        }\n+    },\n \n-\t/*#\n-\t * Returns all task results.\n-\t *\n-\t * @return List<TaskResult> Task results.\n-\t */\n-\tgetTaskResults {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResults();\n-\t\t}\n-\t},\n+    /*#\n+     * Returns all task results.\n+     *\n+     * @return List<TaskResult> Task results.\n+     */\n+    getTaskResults {\n+        public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getTaskResults();\n+        }\n+    },\n \n-\t/*#\n-\t * Return list of TaskResults by a Task.\n-\t *\n-\t * @param task int Task <code>id</code>\n-\t * @return List<TaskResult> Results\n-\t */\n-\tgetTaskResultsByTask {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultsByTask(parms.readInt(\"task\"));\n-\t\t}\n-\t},\n+    /*#\n+     * Return list of TaskResults by a Task.\n+     *\n+     * @param task int Task <code>id</code>\n+     * @return List<TaskResult> Results\n+     */\n+    getTaskResultsByTask {\n+        public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getTaskResultsByTask(parms.readInt(\"task\"));\n+        }\n+    },\n \n-\t/*#\n-\t * Return list of TaskResults by a Task for GUI.\n-\t *\n-\t * @param task int Task\n-\t * @return List<TaskResult> Results\n-\t */\n-\tgetTaskResultsForGUIByTask {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultsForGUIByTask(ac.getSession(), parms.readInt(\"task\"));\n-\t\t}\n-\t},\n+    /*#\n+     * Return list of TaskResults by a Task for GUI.\n+     *\n+     * @param task int Task\n+     * @return List<TaskResult> Results\n+     */\n+    getTaskResultsForGUIByTask {\n+        public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getTaskResultsForGUIByTask(ac.getSession(), parms.readInt(\"task\"));\n+        }\n+    },\n \n-\t/*#\n-\t * Returns TaskResult by its <code>id</code>.\n-\t *\n-\t * @param taskResult int TaskResult <code>id</code>\n-\t * @return TaskResult Result\n-\t */\n-\tgetTaskResultById {\n-\t\tpublic TaskResult call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultById(parms.readInt(\"taskResult\"));\n-\t\t}\n-\t},\n+    /*#\n+     * Returns TaskResult by its <code>id</code>.\n+     *\n+     * @param taskResult int TaskResult <code>id</code>\n+     * @return TaskResult Result\n+     */\n+    getTaskResultById {\n+        public TaskResult call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getTaskResultById(parms.readInt(\"taskResult\"));\n+        }\n+    },\n \n-\t/*#\n-\t * Returns Task by its <code>id</code>.\n-\t *\n-\t * @param id int Task <code>id</code>\n-\t * @return Task Task\n-\t */\n+    /*#\n+     * Returns Task by its <code>id</code>.\n+     *\n+     * @param id int Task <code>id</code>\n+     * @return Task Task\n+     */\n \n-\tgetTaskById {\n-\t\tpublic Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"id\"));\n-\t\t}\n-\t},\n+    getTaskById {\n+        public Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"id\"));\n+        }\n+    },\n \n-\t/*#\n-\t * Return propagation status of facility.\n-\t *\n-\t * @param facility int Facility <code>id</code>\n-\t * @return FacilityState Facility state\n-\t */\n-\tgetFacilityState {\n-\t\tpublic FacilityState call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getFacilityState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n-\t\t}\n-\t},\n+    /*#\n+     * Return propagation status of facility.\n+     *\n+     * @param facility int Facility <code>id</code>\n+     * @return FacilityState Facility state\n+     */\n+    getFacilityState {\n+        public FacilityState call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getFacilityState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n+        }\n+    },\n \n-\t/*#\n-\t * Return propagation status of all facilities in Perun.\n-\t *\n-\t * @return List<FacilityState> Propagation status\n-\t */\n-\t/*#\n-\t * Return propagation status of all facilities related to VO resources.\n-\t *\n-\t * @param vo int VO <code>id</code>\n-\t * @return List<FacilityState> Propagation status\n-\t */\n-\tgetAllFacilitiesStates {\n-\t\tpublic List<FacilityState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tif (parms.contains(\"vo\")) {\n-\t\t\t\treturn ac.getPropagationStatsReader().getAllFacilitiesStatesForVo(ac.getSession(), ac.getVoById(parms.readInt(\"vo\")));\n-\t\t\t} else {\n-\t\t\t\treturn ac.getPropagationStatsReader().getAllFacilitiesStates(ac.getSession());\n-\t\t\t}\n-\t\t}\n-\t},\n+    /*#\n+     * Return propagation status of all facilities in Perun.\n+     *\n+     * @return List<FacilityState> Propagation status\n+     */\n+    /*#\n+     * Return propagation status of all facilities related to VO resources.\n+     *\n+     * @param vo int VO <code>id</code>\n+     * @return List<FacilityState> Propagation status\n+     */\n+    getAllFacilitiesStates {\n+        public List<FacilityState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            if (parms.contains(\"vo\")) {\n+                return ac.getPropagationStatsReader().getAllFacilitiesStatesForVo(ac.getSession(), ac.getVoById(parms.readInt(\"vo\")));\n+            } else {\n+                return ac.getPropagationStatsReader().getAllFacilitiesStates(ac.getSession());\n+            }\n+        }\n+    },\n \n-\t/*#\n-\t * Return propagation status of all resources related to VO.\n-\t *\n-\t * @param voId int VO <code>id</code>\n-\t * @return List<ResourceState> Propagation status\n-\t */\n-\tgetAllResourcesState {\n-\t\tpublic List<ResourceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getResourcesState(ac.getSession(), ac.getVoById(parms.readInt(\"voId\")));\n-\t\t}\n-\t},\n+    /*#\n+     * Return propagation status of all resources related to VO.\n+     *\n+     * @param voId int VO <code>id</code>\n+     * @return List<ResourceState> Propagation status\n+     */\n+    getAllResourcesState {\n+        public List<ResourceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getResourcesState(ac.getSession(), ac.getVoById(parms.readInt(\"voId\")));\n+        }\n+    },\n \n-\t/*#\n-\t * Returns task results for defined destinations.\n-\t *\n-\t * @param destinations List<String> Destinations\n-\t * @return List<TaskResult> Results.\n-\t */\n-\tgetTaskResultsForDestinations {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n-\t\t}\n-\t},\n-\t\n-\t/*#\n-\t * Returns service states for defined facility.\n-\t *\n-\t * @param Facility int <code>id</code> of facility\n-\t * @return List<ServiceState> serviceStates.\n-\t */\n-\tgetFacilityServicesState {\n-\t\tpublic List<ServiceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getFacilityServicesState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n-\t\t}\n-\t},\n+    /*#\n+     * Returns task results for defined destinations.\n+     *\n+     * @param destinations List<String> Destinations\n+     * @return List<TaskResult> Results.\n+     */\n+    getTaskResultsForDestinations {\n+        public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n+        }\n+    },\n \n-\t/*#\n-\t * Delete Task and TaskResults.\n-\t *\n-\t * @param task Task Task to delete.\n-\t */\n-\tdeleteTask {\n-\t\tpublic Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tac.getPropagationStatsReader().deleteTask(ac.getSession(), ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"task\")));\n-\t\t\treturn null;\n-\t\t}\n-\t};\n+    /*#\n+     * Returns service states for defined facility.\n+     *\n+     * @param Facility int <code>id</code> of facility\n+     * @return List<ServiceState> serviceStates.\n+     */\n+    getFacilityServicesState {\n+        public List<ServiceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            return ac.getPropagationStatsReader().getFacilityServicesState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n+        }\n+    },\n+\n+    /*#\n+     * Delete Task and TaskResults.\n+     *\n+     * @param task Task Task to delete.\n+     */\n+    deleteTask {\n+        public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n+            ac.getPropagationStatsReader().deleteTask(ac.getSession(), ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"task\")));\n+            return null;\n+        }\n+    };\n \n }\n",
            "diff_size": 233
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "271",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/468/PropagationStatsReaderMethod.java\nindex ba2a3efbc91..9da4a2d0f75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/468/PropagationStatsReaderMethod.java\n@@ -1,7 +1,6 @@\n package cz.metacentrum.perun.rpc.methods;\n \n import java.util.List;\n-\n import cz.metacentrum.perun.controller.model.FacilityState;\n import cz.metacentrum.perun.controller.model.ResourceState;\n import cz.metacentrum.perun.controller.model.ServiceState;\n@@ -15,247 +14,286 @@ import cz.metacentrum.perun.taskslib.model.ExecService;\n import cz.metacentrum.perun.taskslib.model.Task;\n import cz.metacentrum.perun.taskslib.model.TaskResult;\n \n+\n public enum PropagationStatsReaderMethod implements ManagerMethod {\n \n-\t/*#\n-\t * Returns a task.\n-\t *\n-\t * @param execService int Exec service <code>id</code>\n-\t * @param facility int Facility <code>id</code>\n-\t * @return Task Found task\n-\t */\n-\tgetTask {\n-\t\tpublic Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n-\t\t\tFacility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n-\t\t\treturn ac.getPropagationStatsReader().getTask(ac.getSession(), execService, facility);\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns all tasks.\n-\t *\n-\t * @return List<Task> All tasks\n-\t */\n-\tlistAllTasks {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().listAllTasks(ac.getSession());\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns all tasks associated with selected facility.\n-\t *\n-\t * @param facility int Facility <code>id</code>\n-\t * @return List<Tasks> Tasks\n-\t */\n-\tlistAllTasksForFacility {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().listAllTasksForFacility(ac.getSession(), parms.readInt(\"facility\"));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistAllTasksInState {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistTasksScheduledBetweenDates {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistTasksStartedBetweenDates {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t *\tNOT IMPLEMENTED YET\n-\t */\n-\tlistTasksEndedBetweenDates {\n-\t\tpublic List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tthrow new InternalErrorException(\"Not implemented yet!\");\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Whether task exists.\n-\t *\n-\t * @param execService int ExecService <code>id</code>\n-\t * @param facility int Facility <code>id</code>\n-\t * @return int 1 = true; 0 = false\n-\t */\n-\tisThereSuchTask {\n-\t\tpublic Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n-\t\t\tFacility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n-\t\t\treturn ( ac.getPropagationStatsReader().isThereSuchTask(execService, facility) ? 1 : 0 );\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns the count of all tasks.\n-\t *\n-\t * @return int Task count\n-\t */\n-\tcountTasks {\n-\t\tpublic Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().countTasks();\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns all task results.\n-\t *\n-\t * @return List<TaskResult> Task results.\n-\t */\n-\tgetTaskResults {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResults();\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Return list of TaskResults by a Task.\n-\t *\n-\t * @param task int Task <code>id</code>\n-\t * @return List<TaskResult> Results\n-\t */\n-\tgetTaskResultsByTask {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultsByTask(parms.readInt(\"task\"));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Return list of TaskResults by a Task for GUI.\n-\t *\n-\t * @param task int Task\n-\t * @return List<TaskResult> Results\n-\t */\n-\tgetTaskResultsForGUIByTask {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultsForGUIByTask(ac.getSession(), parms.readInt(\"task\"));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns TaskResult by its <code>id</code>.\n-\t *\n-\t * @param taskResult int TaskResult <code>id</code>\n-\t * @return TaskResult Result\n-\t */\n-\tgetTaskResultById {\n-\t\tpublic TaskResult call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultById(parms.readInt(\"taskResult\"));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns Task by its <code>id</code>.\n-\t *\n-\t * @param id int Task <code>id</code>\n-\t * @return Task Task\n-\t */\n-\n-\tgetTaskById {\n-\t\tpublic Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"id\"));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Return propagation status of facility.\n-\t *\n-\t * @param facility int Facility <code>id</code>\n-\t * @return FacilityState Facility state\n-\t */\n-\tgetFacilityState {\n-\t\tpublic FacilityState call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getFacilityState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Return propagation status of all facilities in Perun.\n-\t *\n-\t * @return List<FacilityState> Propagation status\n-\t */\n-\t/*#\n-\t * Return propagation status of all facilities related to VO resources.\n-\t *\n-\t * @param vo int VO <code>id</code>\n-\t * @return List<FacilityState> Propagation status\n-\t */\n-\tgetAllFacilitiesStates {\n-\t\tpublic List<FacilityState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tif (parms.contains(\"vo\")) {\n-\t\t\t\treturn ac.getPropagationStatsReader().getAllFacilitiesStatesForVo(ac.getSession(), ac.getVoById(parms.readInt(\"vo\")));\n-\t\t\t} else {\n-\t\t\t\treturn ac.getPropagationStatsReader().getAllFacilitiesStates(ac.getSession());\n-\t\t\t}\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Return propagation status of all resources related to VO.\n-\t *\n-\t * @param voId int VO <code>id</code>\n-\t * @return List<ResourceState> Propagation status\n-\t */\n-\tgetAllResourcesState {\n-\t\tpublic List<ResourceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getResourcesState(ac.getSession(), ac.getVoById(parms.readInt(\"voId\")));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Returns task results for defined destinations.\n-\t *\n-\t * @param destinations List<String> Destinations\n-\t * @return List<TaskResult> Results.\n-\t */\n-\tgetTaskResultsForDestinations {\n-\t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n-\t\t}\n-\t},\n-\t\n-\t/*#\n-\t * Returns service states for defined facility.\n-\t *\n-\t * @param Facility int <code>id</code> of facility\n-\t * @return List<ServiceState> serviceStates.\n-\t */\n-\tgetFacilityServicesState {\n-\t\tpublic List<ServiceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\treturn ac.getPropagationStatsReader().getFacilityServicesState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n-\t\t}\n-\t},\n-\n-\t/*#\n-\t * Delete Task and TaskResults.\n-\t *\n-\t * @param task Task Task to delete.\n-\t */\n-\tdeleteTask {\n-\t\tpublic Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n-\t\t\tac.getPropagationStatsReader().deleteTask(ac.getSession(), ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"task\")));\n-\t\t\treturn null;\n-\t\t}\n-\t};\n-\n-}\n+ /*#\n+  * Returns a task.\n+  *\n+  * @param execService int Exec service <code>id</code>\n+  * @param facility int Facility <code>id</code>\n+  * @return Task Found task\n+  */\n+\n+\n+ getTask {\n+  public Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   ExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n+   Facility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n+   return ac.getPropagationStatsReader().getTask(ac.getSession(), execService, facility);\n+  }\n+ },\n+\n+ /*#\n+  * Returns all tasks.\n+  *\n+  * @return List<Task> All tasks\n+  */\n+\n+\n+ listAllTasks {\n+  public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().listAllTasks(ac.getSession());\n+  }\n+ },\n+\n+ /*#\n+  * Returns all tasks associated with selected facility.\n+  *\n+  * @param facility int Facility <code>id</code>\n+  * @return List<Tasks> Tasks\n+  */\n+\n+\n+ listAllTasksForFacility {\n+  public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().listAllTasksForFacility(ac.getSession(), parms.readInt(\"facility\"));\n+  }\n+ },\n+\n+ /*#\n+  * NOT IMPLEMENTED YET\n+  */\n+\n+\n+ listAllTasksInState {\n+  public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   throw new InternalErrorException(\"Not implemented yet!\");\n+  }\n+ },\n+\n+ /*#\n+  * NOT IMPLEMENTED YET\n+  */\n+\n+\n+ listTasksScheduledBetweenDates {\n+  public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   throw new InternalErrorException(\"Not implemented yet!\");\n+  }\n+ },\n+\n+ /*#\n+  * NOT IMPLEMENTED YET\n+  */\n+\n+\n+ listTasksStartedBetweenDates {\n+  public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   throw new InternalErrorException(\"Not implemented yet!\");\n+  }\n+ },\n+\n+ /*#\n+  * NOT IMPLEMENTED YET\n+  */\n+\n+\n+ listTasksEndedBetweenDates {\n+  public List<Task> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   throw new InternalErrorException(\"Not implemented yet!\");\n+  }\n+ },\n+\n+ /*#\n+  * Whether task exists.\n+  *\n+  * @param execService int ExecService <code>id</code>\n+  * @param facility int Facility <code>id</code>\n+  * @return int 1 = true; 0 = false\n+  */\n+\n+\n+ isThereSuchTask {\n+  public Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   ExecService execService = ac.getExecServiceById(parms.readInt(\"execService\"));\n+   Facility facility = ac.getFacilityById(parms.readInt(\"facility\"));\n+   return (ac.getPropagationStatsReader().isThereSuchTask(execService, facility) ? 1 : 0);\n+  }\n+ },\n+\n+ /*#\n+  * Returns the count of all tasks.\n+  *\n+  * @return int Task count\n+  */\n+\n+\n+ countTasks {\n+  public Integer call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().countTasks();\n+  }\n+ },\n+\n+ /*#\n+  * Returns all task results.\n+  *\n+  * @return List<TaskResult> Task results.\n+  */\n+\n+\n+ getTaskResults {\n+  public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getTaskResults();\n+  }\n+ },\n+\n+ /*#\n+  * Return list of TaskResults by a Task.\n+  *\n+  * @param task int Task <code>id</code>\n+  * @return List<TaskResult> Results\n+  */\n+\n+\n+ getTaskResultsByTask {\n+  public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getTaskResultsByTask(parms.readInt(\"task\"));\n+  }\n+ },\n+\n+ /*#\n+  * Return list of TaskResults by a Task for GUI.\n+  *\n+  * @param task int Task\n+  * @return List<TaskResult> Results\n+  */\n+\n+\n+ getTaskResultsForGUIByTask {\n+  public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getTaskResultsForGUIByTask(ac.getSession(), parms.readInt(\"task\"));\n+  }\n+ },\n+\n+ /*#\n+  * Returns TaskResult by its <code>id</code>.\n+  *\n+  * @param taskResult int TaskResult <code>id</code>\n+  * @return TaskResult Result\n+  */\n+\n+\n+ getTaskResultById {\n+  public TaskResult call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getTaskResultById(parms.readInt(\"taskResult\"));\n+  }\n+ },\n+\n+ /*#\n+  * Returns Task by its <code>id</code>.\n+  *\n+  * @param id int Task <code>id</code>\n+  * @return Task Task\n+  */\n+\n+\n+ getTaskById {\n+  public Task call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"id\"));\n+  }\n+ },\n+\n+ /*#\n+  * Return propagation status of facility.\n+  *\n+  * @param facility int Facility <code>id</code>\n+  * @return FacilityState Facility state\n+  */\n+\n+\n+ getFacilityState {\n+  public FacilityState call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getFacilityState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n+  }\n+ },\n+\n+ /*#\n+  * Return propagation status of all facilities in Perun.\n+  *\n+  * @return List<FacilityState> Propagation status\n+  */\n+ /*#\n+  * Return propagation status of all facilities related to VO resources.\n+  *\n+  * @param vo int VO <code>id</code>\n+  * @return List<FacilityState> Propagation status\n+  */\n+\n+\n+ getAllFacilitiesStates {\n+  public List<FacilityState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   if (parms.contains(\"vo\")) {\n+    return ac.getPropagationStatsReader().getAllFacilitiesStatesForVo(ac.getSession(), ac.getVoById(parms.readInt(\"vo\")));\n+   } else {\n+    return ac.getPropagationStatsReader().getAllFacilitiesStates(ac.getSession());\n+   }\n+  }\n+ },\n+\n+ /*#\n+  * Return propagation status of all resources related to VO.\n+  *\n+  * @param voId int VO <code>id</code>\n+  * @return List<ResourceState> Propagation status\n+  */\n+\n+\n+ getAllResourcesState {\n+  public List<ResourceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getResourcesState(ac.getSession(), ac.getVoById(parms.readInt(\"voId\")));\n+  }\n+ },\n+\n+ /*#\n+  * Returns task results for defined destinations.\n+  *\n+  * @param destinations List<String> Destinations\n+  * @return List<TaskResult> Results.\n+  */\n+\n+\n+ getTaskResultsForDestinations {\n+  public List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n+  }\n+ },\n+ \n+ /*#\n+  * Returns service states for defined facility.\n+  *\n+  * @param Facility int <code>id</code> of facility\n+  * @return List<ServiceState> serviceStates.\n+  */\n+\n+\n+ getFacilityServicesState {\n+  public List<ServiceState> call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   return ac.getPropagationStatsReader().getFacilityServicesState(ac.getSession(), ac.getFacilityById(parms.readInt(\"facility\")));\n+  }\n+ },\n+\n+ /*#\n+  * Delete Task and TaskResults.\n+  *\n+  * @param task Task Task to delete.\n+  */\n+\n+\n+ deleteTask {\n+  public Void call(ApiCaller ac, Deserializer parms) throws PerunException {\n+   ac.getPropagationStatsReader().deleteTask(ac.getSession(), ac.getPropagationStatsReader().getTaskById(ac.getSession(), parms.readInt(\"task\")));\n+   return null;\n+  }\n+ };\n+}\n\\ No newline at end of file\n",
            "diff_size": 282
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/468/PropagationStatsReaderMethod.java\nindex ba2a3efbc91..2d0d6d37d99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/468/PropagationStatsReaderMethod.java\n@@ -233,7 +233,7 @@ public enum PropagationStatsReaderMethod implements ManagerMethod {\n \t\t\treturn ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n \t\t}\n \t},\n-\t\n+\n \t/*#\n \t * Returns service states for defined facility.\n \t *\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/468/PropagationStatsReaderMethod.java\nindex ba2a3efbc91..72d0be4cad8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/468/PropagationStatsReaderMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/468/PropagationStatsReaderMethod.java\n@@ -232,9 +232,8 @@ public enum PropagationStatsReaderMethod implements ManagerMethod {\n \t\tpublic List<TaskResult> call(ApiCaller ac, Deserializer parms) throws PerunException {\n \t\t\treturn ac.getPropagationStatsReader().getTaskResultsForDestinations(ac.getSession(), parms.readList(\"destinations\", String.class));\n \t\t}\n-\t},\n-\t\n-\t/*#\n+\t}\n+\t,/*#\n \t * Returns service states for defined facility.\n \t *\n \t * @param Facility int <code>id</code> of facility\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "176",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport static java.lang.reflect.Modifier.isAbstract;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/176/DefaultRepositoryStrategy.java\nindex d976233f665..73fcf242122 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/176/DefaultRepositoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/176/DefaultRepositoryStrategy.java\nindex d976233f665..a8e74e5881d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/176/DefaultRepositoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n@@ -35,7 +36,7 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n     private final Key<? extends T> defaultKey;\n \n     DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics,\n-            Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n+                              Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n         this.repositoryInterface = repositoryInterface;\n         this.generics = generics;\n         this.implementations = implementations;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "5",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "1",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/176/DefaultRepositoryStrategy.java\nindex d976233f665..ad86eb4dd0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/176/DefaultRepositoryStrategy.java\n@@ -34,9 +34,8 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n     private final Collection<Class<? extends T>> implementations;\n     private final Key<? extends T> defaultKey;\n \n-    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics,\n-            Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n-        this.repositoryInterface = repositoryInterface;\n+    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics, Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n+    this.repositoryInterface = repositoryInterface;\n         this.generics = generics;\n         this.implementations = implementations;\n         this.defaultKey = defaultKey;\n@@ -48,12 +47,11 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n             if (Arrays.stream(impl.getMethods()).anyMatch(m -> isAbstract(m.getModifiers()))) {\n                 LOGGER.warn(\"Skipping default repository implementation {}: abstract methods are still present\",\n                         impl.getName());\n-            } else {\n+    } else {\n                 Key<T> key = BusinessUtils.getQualifier(impl)\n                         .map(qualifier -> Key.get(repositoryInterface, qualifier))\n                         .orElseThrow(() -> new IllegalStateException(\"Missing qualifier on implementation\" + impl));\n-\n-                if (defaultKey != null) {\n+if (defaultKey != null) {\n                     binder.bind(repositoryInterface).to(defaultKey);\n                 }\n \n@@ -63,10 +61,8 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n \n                 FactoryModuleBuilder guiceFactoryBuilder = new FactoryModuleBuilder();\n                 guiceFactoryBuilder.implement(key, impl);\n-                binder.install(guiceFactoryBuilder.build(\n-                        TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))\n-                ));\n+                binder.install(guiceFactoryBuilder.build(TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))));\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "59",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 58, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "63",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 62, expected level should be 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "74",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "column": "63",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "1",
                    "severity": "warning",
                    "message": "'impl' has incorrect indentation level 0, expected level should be 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 58, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "67",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 66, expected level should be 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "column": "81",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "column": "67",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 66, expected level should be 70.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "column": "82",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "column": "148",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "56",
                    "column": "63",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "column": "63",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "57",
                    "column": "67",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 66, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "column": "65",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "63",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "63",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "column": "63",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "63",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "column": "63",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 62, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "59",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 58, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 54, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/176/DefaultRepositoryStrategy.java\nindex d976233f665..a5cb1fdc774 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/176/DefaultRepositoryStrategy.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n-\n import com.google.inject.Binder;\n import com.google.inject.Key;\n import com.google.inject.Provider;\n@@ -26,7 +25,9 @@ import org.seedstack.seed.core.internal.guice.GenericGuiceProvider;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy {\n+\n     private static final Logger LOGGER = LoggerFactory.getLogger(DefaultRepositoryStrategy.class);\n     private static final Class<?> FACTORY_CLASS = GenericGuiceFactory.class;\n     private final Class<T> repositoryInterface;\n@@ -34,8 +35,7 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n     private final Collection<Class<? extends T>> implementations;\n     private final Key<? extends T> defaultKey;\n \n-    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics,\n-            Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n+    DefaultRepositoryStrategy(Class<T> repositoryInterface, Type[] generics, Collection<Class<? extends T>> implementations, Key<? extends T> defaultKey) {\n         this.repositoryInterface = repositoryInterface;\n         this.generics = generics;\n         this.implementations = implementations;\n@@ -44,29 +44,24 @@ class DefaultRepositoryStrategy<T extends Repository> implements BindingStrategy\n \n     @Override\n     public void resolve(Binder binder) {\n-        for (Class<? extends T> impl : implementations) {\n-            if (Arrays.stream(impl.getMethods()).anyMatch(m -> isAbstract(m.getModifiers()))) {\n-                LOGGER.warn(\"Skipping default repository implementation {}: abstract methods are still present\",\n-                        impl.getName());\n-            } else {\n-                Key<T> key = BusinessUtils.getQualifier(impl)\n-                        .map(qualifier -> Key.get(repositoryInterface, qualifier))\n-                        .orElseThrow(() -> new IllegalStateException(\"Missing qualifier on implementation\" + impl));\n-\n-                if (defaultKey != null) {\n-                    binder.bind(repositoryInterface).to(defaultKey);\n-                }\n-\n-                Provider<T> provider = new GenericGuiceProvider<>(impl, generics);\n-                binder.requestInjection(provider);\n-                binder.bind(key).toProvider(provider);\n-\n-                FactoryModuleBuilder guiceFactoryBuilder = new FactoryModuleBuilder();\n-                guiceFactoryBuilder.implement(key, impl);\n-                binder.install(guiceFactoryBuilder.build(\n-                        TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))\n-                ));\n-            }\n-        }\n+        for(Class<? extends T> impl :implementations) {\n+                                                          if (Arrays.stream(impl.getMethods())\n+                                                              .anyMatch(m-> isAbstract(m.getModifiers()))) {\n+                                                              LOGGER.warn(\"Skipping default repository implementation {}: abstract methods are still present\",\n+impl.getName());\n+                                                          } else {\n+                                                              Key<T> key = BusinessUtils.getQualifier(impl)\n+                                                                  .map(qualifier-> Key.get(repositoryInterface, qualifier))\n+                                                                  .orElseThrow(()-> new IllegalStateException(\"Missing qualifier on implementation\"+ impl));\n+                                                              if(defaultKey != null) {\n+                                                                  binder.bind(repositoryInterface).to(defaultKey);\n+                                                              } Provider<T> provider = new GenericGuiceProvider<>(impl, generics);\n+                                                              binder.requestInjection(provider);\n+                                                              binder.bind(key).toProvider(provider);\n+                                                              FactoryModuleBuilder guiceFactoryBuilder = new FactoryModuleBuilder();\n+                                                              guiceFactoryBuilder.implement(key, impl);\n+                                                              binder.install(guiceFactoryBuilder.build(TypeLiteral.get(Types.newParameterizedType(FACTORY_CLASS, impl))));\n+                                                          }\n+                                                      }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/176/DefaultRepositoryStrategy.java\nindex d976233f665..73fcf242122 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/176/DefaultRepositoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/176/DefaultRepositoryStrategy.java\nindex d976233f665..73fcf242122 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/176/DefaultRepositoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/176/DefaultRepositoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static java.lang.reflect.Modifier.isAbstract;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
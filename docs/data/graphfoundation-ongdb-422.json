{
    "project_name": "graphfoundation-ongdb",
    "error_id": "422",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/422/ReadGroupRecordsByCacheStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/422/ReadGroupRecordsByCacheStep.java\nindex 102e88db529..dcb1c4a9fa9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/422/ReadGroupRecordsByCacheStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/422/ReadGroupRecordsByCacheStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.function.Supplier;\n@@ -41,83 +42,83 @@ import static java.lang.System.nanoTime;\n  */\n public class ReadGroupRecordsByCacheStep extends ProducerStep\n {\n-    private final RecordStore<RelationshipGroupRecord> store;\n-    private final NodeRelationshipCache cache;\n+  private final RecordStore<RelationshipGroupRecord> store;\n+  private final NodeRelationshipCache cache;\n+\n+  public ReadGroupRecordsByCacheStep(StageControl control, Configuration config,\n+                                     RecordStore<RelationshipGroupRecord> store, NodeRelationshipCache cache)\n+  {\n+    super(control, config);\n+    this.store = store;\n+    this.cache = cache;\n+  }\n \n-    public ReadGroupRecordsByCacheStep( StageControl control, Configuration config,\n-            RecordStore<RelationshipGroupRecord> store, NodeRelationshipCache cache )\n+  @Override\n+  protected void process()\n+  {\n+    try (NodeVisitor visitor = new NodeVisitor())\n     {\n-        super( control, config );\n-        this.store = store;\n-        this.cache = cache;\n+      cache.visitChangedNodes(visitor, NodeType.NODE_TYPE_DENSE);\n     }\n+  }\n+\n+  private class NodeVisitor implements NodeChangeVisitor, AutoCloseable, GroupVisitor, Supplier<RelationshipGroupRecord[]>\n+  {\n+    private final RecordDataAssembler<RelationshipGroupRecord> assembler = new RecordDataAssembler<>(store::newRecord);\n+    private RelationshipGroupRecord[] batch = get();\n+    private int cursor;\n+    private long time = nanoTime();\n \n     @Override\n-    protected void process()\n+    public void change(long nodeId, ByteArray array)\n     {\n-        try ( NodeVisitor visitor = new NodeVisitor() )\n-        {\n-            cache.visitChangedNodes( visitor, NodeType.NODE_TYPE_DENSE );\n-        }\n+      cache.getFirstRel(nodeId, this);\n     }\n \n-    private class NodeVisitor implements NodeChangeVisitor, AutoCloseable, GroupVisitor, Supplier<RelationshipGroupRecord[]>\n+    @Override\n+    public long visit(long nodeId, int typeId, long out, long in, long loop)\n     {\n-        private final RecordDataAssembler<RelationshipGroupRecord> assembler = new RecordDataAssembler<>( store::newRecord );\n-        private RelationshipGroupRecord[] batch = get();\n-        private int cursor;\n-        private long time = nanoTime();\n-\n-        @Override\n-        public void change( long nodeId, ByteArray array )\n-        {\n-            cache.getFirstRel( nodeId, this );\n-        }\n-\n-        @Override\n-        public long visit( long nodeId, int typeId, long out, long in, long loop )\n-        {\n-            long id = store.nextId();\n-            RelationshipGroupRecord record = batch[cursor++];\n-            record.setId( id );\n-            record.initialize( true, typeId, out, in, loop, nodeId, loop );\n-            if ( cursor == batchSize )\n-            {\n-                send();\n-                batch = control.reuse( this );\n-                cursor = 0;\n-            }\n-            return id;\n-        }\n-\n-        private void send()\n-        {\n-            totalProcessingTime.add( nanoTime() - time );\n-            sendDownstream( batch );\n-            time = nanoTime();\n-            assertHealthy();\n-        }\n+      long id = store.nextId();\n+      RelationshipGroupRecord record = batch[cursor++];\n+      record.setId(id);\n+      record.initialize(true, typeId, out, in, loop, nodeId, loop);\n+      if (cursor == batchSize)\n+      {\n+        send();\n+        batch = control.reuse(this);\n+        cursor = 0;\n+      }\n+      return id;\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-            if ( cursor > 0 )\n-            {\n-                batch = assembler.cutOffAt( batch, cursor );\n-                send();\n-            }\n-        }\n+    private void send()\n+    {\n+      totalProcessingTime.add(nanoTime() - time);\n+      sendDownstream(batch);\n+      time = nanoTime();\n+      assertHealthy();\n+    }\n \n-        @Override\n-        public RelationshipGroupRecord[] get()\n-        {\n-            return assembler.newBatchObject( batchSize );\n-        }\n+    @Override\n+    public void close()\n+    {\n+      if (cursor > 0)\n+      {\n+        batch = assembler.cutOffAt(batch, cursor);\n+        send();\n+      }\n     }\n \n     @Override\n-    protected long position()\n+    public RelationshipGroupRecord[] get()\n     {\n-        return store.getHighId() * store.getRecordSize();\n+      return assembler.newBatchObject(batchSize);\n     }\n+  }\n+\n+  @Override\n+  protected long position()\n+  {\n+    return store.getHighId() * store.getRecordSize();\n+  }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/422/ReadGroupRecordsByCacheStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/422/ReadGroupRecordsByCacheStep.java\nindex 102e88db529..fd4db652d29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/422/ReadGroupRecordsByCacheStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/422/ReadGroupRecordsByCacheStep.java\n@@ -44,8 +44,7 @@ public class ReadGroupRecordsByCacheStep extends ProducerStep\n     private final RecordStore<RelationshipGroupRecord> store;\n     private final NodeRelationshipCache cache;\n \n-    public ReadGroupRecordsByCacheStep( StageControl control, Configuration config,\n-            RecordStore<RelationshipGroupRecord> store, NodeRelationshipCache cache )\n+    public ReadGroupRecordsByCacheStep( StageControl control, Configuration config, RecordStore<RelationshipGroupRecord> store, NodeRelationshipCache cache )\n     {\n         super( control, config );\n         this.store = store;\n@@ -87,7 +86,8 @@ public class ReadGroupRecordsByCacheStep extends ProducerStep\n                 batch = control.reuse( this );\n                 cursor = 0;\n             }\n-            return id;\n+\n+return id;\n         }\n \n         private void send()\n@@ -120,4 +120,4 @@ public class ReadGroupRecordsByCacheStep extends ProducerStep\n     {\n         return store.getHighId() * store.getRecordSize();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
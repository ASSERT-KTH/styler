{
    "project_name": "neo4j-neo4j",
    "error_id": "2082",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2082/IndexTransactionApplierFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2082/IndexTransactionApplierFactory.java\nindex 645ffa95bf2..57d1e83b22a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2082/IndexTransactionApplierFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2082/IndexTransactionApplierFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.io.IOException;\n@@ -46,15 +47,15 @@ public class IndexTransactionApplierFactory implements TransactionApplierFactory\n {\n     private final IndexUpdateListener indexUpdateListener;\n \n-    public IndexTransactionApplierFactory( IndexUpdateListener indexUpdateListener )\n+    public IndexTransactionApplierFactory(IndexUpdateListener indexUpdateListener)\n     {\n         this.indexUpdateListener = indexUpdateListener;\n     }\n \n     @Override\n-    public TransactionApplier startTx( CommandsToApply commands, BatchContext batchContext )\n+    public TransactionApplier startTx(CommandsToApply commands, BatchContext batchContext)\n     {\n-        return new SingleTransactionApplier( commands, batchContext );\n+        return new SingleTransactionApplier(commands, batchContext);\n     }\n \n     /**\n@@ -71,7 +72,7 @@ public class IndexTransactionApplierFactory implements TransactionApplierFactory\n         private final IndexActivator indexActivator;\n         private final BatchContext batchContext;\n \n-        SingleTransactionApplier( CommandsToApply commands, BatchContext batchContext )\n+        SingleTransactionApplier(CommandsToApply commands, BatchContext batchContext)\n         {\n             this.txId = commands.transactionId();\n             this.subject = commands.subject();\n@@ -82,48 +83,48 @@ public class IndexTransactionApplierFactory implements TransactionApplierFactory\n         @Override\n         public void close() throws IOException\n         {\n-            if ( indexUpdatesExtractor.containsAnyEntityOrPropertyUpdate() )\n+            if (indexUpdatesExtractor.containsAnyEntityOrPropertyUpdate())\n             {\n                 // Queue the index updates. When index updates from all transactions in this batch have been accumulated\n                 // we'll feed them to the index updates work sync at the end of the batch\n-                batchContext.indexUpdates().feed( indexUpdatesExtractor.getNodeCommands(), indexUpdatesExtractor.getRelationshipCommands() );\n+                batchContext.indexUpdates().feed(indexUpdatesExtractor.getNodeCommands(), indexUpdatesExtractor.getRelationshipCommands());\n                 indexUpdatesExtractor.close();\n             }\n \n             // Created pending indexes\n-            if ( createdIndexes != null )\n+            if (createdIndexes != null)\n             {\n-                indexUpdateListener.createIndexes( subject, createdIndexes.toArray( new IndexDescriptor[0] ) );\n+                indexUpdateListener.createIndexes(subject, createdIndexes.toArray(new IndexDescriptor[0]));\n                 createdIndexes = null;\n             }\n         }\n \n         @Override\n-        public boolean visitNodeCommand( Command.NodeCommand command )\n+        public boolean visitNodeCommand(Command.NodeCommand command)\n         {\n             // for label store updates\n             NodeRecord before = command.getBefore();\n             NodeRecord after = command.getAfter();\n \n-            NodeLabels labelFieldBefore = parseLabelsField( before );\n-            NodeLabels labelFieldAfter = parseLabelsField( after );\n-            if ( !(labelFieldBefore.isInlined() && labelFieldAfter.isInlined() &&\n-                    before.getLabelField() == after.getLabelField()) )\n+            NodeLabels labelFieldBefore = parseLabelsField(before);\n+            NodeLabels labelFieldAfter = parseLabelsField(after);\n+            if (!(labelFieldBefore.isInlined() && labelFieldAfter.isInlined() &&\n+              before.getLabelField() == after.getLabelField()))\n             {\n                 long[] labelsBefore = labelFieldBefore.getIfLoaded();\n                 long[] labelsAfter = labelFieldAfter.getIfLoaded();\n-                if ( labelsBefore != null && labelsAfter != null )\n+                if (labelsBefore != null && labelsAfter != null)\n                 {\n-                    batchContext.labelUpdates().add( EntityTokenUpdate.tokenChanges( command.getKey(), labelsBefore, labelsAfter, txId ) );\n+                    batchContext.labelUpdates().add(EntityTokenUpdate.tokenChanges(command.getKey(), labelsBefore, labelsAfter, txId));\n                 }\n             }\n \n             // for indexes\n-            return indexUpdatesExtractor.visitNodeCommand( command );\n+            return indexUpdatesExtractor.visitNodeCommand(command);\n         }\n \n         @Override\n-        public boolean visitRelationshipCommand( Command.RelationshipCommand command )\n+        public boolean visitRelationshipCommand(Command.RelationshipCommand command)\n         {\n             // for relationship type scan store updates\n             RelationshipRecord before = command.getBefore();\n@@ -131,33 +132,33 @@ public class IndexTransactionApplierFactory implements TransactionApplierFactory\n \n             int beforeType = before.getType();\n             int afterType = after.getType();\n-            long[] beforeArray = beforeType == -1 || !before.inUse() ? EMPTY_LONG_ARRAY : new long[]{beforeType};\n-            long[] afterArray = afterType == -1 || !after.inUse() ? EMPTY_LONG_ARRAY : new long[]{afterType};\n-            if ( !Arrays.equals( beforeArray, afterArray ) )\n+            long[] beforeArray = beforeType == -1 || !before.inUse() ? EMPTY_LONG_ARRAY : new long[] {beforeType};\n+            long[] afterArray = afterType == -1 || !after.inUse() ? EMPTY_LONG_ARRAY : new long[] {afterType};\n+            if (!Arrays.equals(beforeArray, afterArray))\n             {\n-                batchContext.relationshipTypeUpdates().add( EntityTokenUpdate.tokenChanges( command.getKey(), beforeArray, afterArray ) );\n+                batchContext.relationshipTypeUpdates().add(EntityTokenUpdate.tokenChanges(command.getKey(), beforeArray, afterArray));\n             }\n \n-            return indexUpdatesExtractor.visitRelationshipCommand( command );\n+            return indexUpdatesExtractor.visitRelationshipCommand(command);\n         }\n \n         @Override\n-        public boolean visitPropertyCommand( PropertyCommand command )\n+        public boolean visitPropertyCommand(PropertyCommand command)\n         {\n-            return indexUpdatesExtractor.visitPropertyCommand( command );\n+            return indexUpdatesExtractor.visitPropertyCommand(command);\n         }\n \n         @Override\n-        public boolean visitSchemaRuleCommand( Command.SchemaRuleCommand command ) throws IOException\n+        public boolean visitSchemaRuleCommand(Command.SchemaRuleCommand command) throws IOException\n         {\n             SchemaRule schemaRule = command.getSchemaRule();\n-            processSchemaCommand( command.getMode(), schemaRule );\n+            processSchemaCommand(command.getMode(), schemaRule);\n             return false;\n         }\n \n-        private void processSchemaCommand( Command.Mode commandMode, SchemaRule schemaRule ) throws IOException\n+        private void processSchemaCommand(Command.Mode commandMode, SchemaRule schemaRule) throws IOException\n         {\n-            if ( schemaRule instanceof IndexDescriptor )\n+            if (schemaRule instanceof IndexDescriptor)\n             {\n                 IndexDescriptor indexRule = (IndexDescriptor) schemaRule;\n                 // Why apply index updates here? Here's the thing... this is a batch applier, which means that\n@@ -169,30 +170,30 @@ public class IndexTransactionApplierFactory implements TransactionApplierFactory\n                 // apply pending index updates up to this point in this batch before index schema changes occur.\n                 batchContext.applyPendingLabelAndIndexUpdates();\n \n-                switch ( commandMode )\n+                switch (commandMode)\n                 {\n-                case UPDATE:\n-                    // Shouldn't we be more clear about that we are waiting for an index to come online here?\n-                    // right now we just assume that an update to index records means wait for it to be online.\n-                    if ( indexRule.isUnique() )\n-                    {\n-                        // Register activations into the IndexActivator instead of IndexingService to avoid deadlock\n-                        // that could ensue for applying batches of transactions where a previous transaction in the same\n-                        // batch acquires a low-level commit lock that prevents the very same index population to complete.\n-                        indexActivator.activateIndex( indexRule );\n-                    }\n-                    break;\n-                case CREATE:\n-                    // Add to list so that all these indexes will be created in one call later\n-                    createdIndexes = createdIndexes == null ? new ArrayList<>() : createdIndexes;\n-                    createdIndexes.add( indexRule );\n-                    break;\n-                case DELETE:\n-                    indexUpdateListener.dropIndex( indexRule );\n-                    indexActivator.indexDropped( indexRule );\n-                    break;\n-                default:\n-                    throw new IllegalStateException( commandMode.name() );\n+                    case UPDATE:\n+                        // Shouldn't we be more clear about that we are waiting for an index to come online here?\n+                        // right now we just assume that an update to index records means wait for it to be online.\n+                        if (indexRule.isUnique())\n+                        {\n+                            // Register activations into the IndexActivator instead of IndexingService to avoid deadlock\n+                            // that could ensue for applying batches of transactions where a previous transaction in the same\n+                            // batch acquires a low-level commit lock that prevents the very same index population to complete.\n+                            indexActivator.activateIndex(indexRule);\n+                        }\n+                        break;\n+                    case CREATE:\n+                        // Add to list so that all these indexes will be created in one call later\n+                        createdIndexes = createdIndexes == null ? new ArrayList<>() : createdIndexes;\n+                        createdIndexes.add(indexRule);\n+                        break;\n+                    case DELETE:\n+                        indexUpdateListener.dropIndex(indexRule);\n+                        indexActivator.indexDropped(indexRule);\n+                        break;\n+                    default:\n+                        throw new IllegalStateException(commandMode.name());\n                 }\n             }\n         }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "161",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.data;\n\nimport com.fasterxml.jackson.core.JsonFactory;\nimport com.fasterxml.jackson.core.JsonGenerator;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/161/DataManagerImpl.java\nindex 7cee2917233..6dbbe94e2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/161/DataManagerImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import com.fasterxml.jackson.core.JsonFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/161/DataManagerImpl.java\nindex 7cee2917233..6dbbe94e2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/161/DataManagerImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import com.fasterxml.jackson.core.JsonFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "78",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "column": "35",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "column": "67",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "215",
                    "column": "5",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "245",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "271",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "273",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 12, indentation should be the same level as line 274.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "301",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "309",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "317",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "317",
                    "column": "76",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "333",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "334",
                    "column": "9",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "350",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "355",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/161/DataManagerImpl.java\nindex 7cee2917233..53eaf4352e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/161/DataManagerImpl.java\n@@ -75,13 +75,13 @@ class DataManagerImpl implements DataManager {\n         if (dataExporterDefinitions == null) {\n             throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n                     .put(DATA_SET, group);\n-        }\n+    }\n \n         List<DataSetMarker<?>> datasets = new ArrayList<>();\n         for (DataExporterDefinition<?> dataExporterDefinition : dataExporterDefinitions.values()) {\n             datasets.add(new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n                     getExporterInstance(dataExporterDefinition.getExportedClass()).exportData()));\n-        }\n+    }\n \n         dumpAll(datasets, outputStream);\n     }\n@@ -93,17 +93,16 @@ class DataManagerImpl implements DataManager {\n         if (dataExporterDefinitionMap == null) {\n             throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n                     .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name));\n-        }\n+    }\n \n         DataExporterDefinition<?> dataExporterDefinition = dataExporterDefinitionMap.get(name);\n \n         if (dataExporterDefinition == null) {\n             throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n                     .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name));\n-        }\n+    }\n \n-        dumpAll(Lists.newArrayList(\n-                new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n+        dumpAll(Lists.newArrayList( new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n                         getExporterInstance(dataExporterDefinition.getExportedClass()).exportData())), outputStream);\n     }\n \n@@ -116,7 +115,7 @@ class DataManagerImpl implements DataManager {\n                 DataExporter<Object> dataExporter = getExporterInstance(dataExporterDefinition.getExportedClass());\n                 dataSets.add(new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n                         dataExporter.exportData()));\n-            }\n+    }\n         }\n \n         dumpAll(dataSets, outputStream);\n@@ -135,10 +134,9 @@ class DataManagerImpl implements DataManager {\n     @Override\n     @SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\",\n             justification = \"False positive due to Java 11\")\n-    public void importData(InputStream inputStream, String acceptGroup, String acceptName) {\n-        try (JsonParser jsonParser = this.jsonFactory.createParser(\n-                new InputStreamReader(inputStream, Charset.forName(UTF_8)))) {\n-            ParsingState state = ParsingState.START;\n+public void importData(InputStream inputStream, String acceptGroup, String acceptName) {\n+        try (JsonParser jsonParser = this.jsonFactory.createParser( new InputStreamReader(inputStream, Charset.forName(UTF_8)))) {\n+    ParsingState state = ParsingState.START;\n             String group = null;\n             String name = null;\n             JsonToken jsonToken = jsonParser.nextToken();\n@@ -183,11 +181,10 @@ class DataManagerImpl implements DataManager {\n                         if (jsonToken == JsonToken.FIELD_NAME && ITEMS.equals(jsonParser.getCurrentName())) {\n                             if ((acceptGroup == null || acceptGroup.equals(group))\n                                     && (acceptName == null || acceptName.equals(name))) {\n-                                consumeItems(jsonParser, group, name);\n+    consumeItems(jsonParser, group, name);\n                             } else {\n                                 skipItems(jsonParser);\n-                            }\n-                            state = ParsingState.DEFINITION_END;\n+                            } state = ParsingState.DEFINITION_END;\n                         } else {\n                             throwParsingError(jsonParser.getCurrentLocation(), \"items field expected\");\n                         }\n@@ -215,7 +212,7 @@ class DataManagerImpl implements DataManager {\n                         break;\n                     default:\n                         throwParsingError(jsonParser.getCurrentLocation(), \"unexpected parser state\");\n-                }\n+    }\n \n                 jsonToken = jsonParser.nextToken();\n             }\n@@ -238,26 +235,26 @@ class DataManagerImpl implements DataManager {\n             throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n                     .put(GROUP, group)\n                     .put(NAME, name);\n-        }\n+    }\n \n         DataImporterDefinition<?> currentImporterDefinition = dataImporterDefinitionMap.get(name);\n         if (currentImporterDefinition == null) {\n             throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n                     .put(GROUP, group)\n                     .put(NAME, name);\n-        }\n+    }\n         if (!group.equals(currentImporterDefinition.getGroup())) {\n             throw BusinessException.createNew(DataErrorCode.UNEXPECTED_DATA_TYPE)\n                     .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name))\n                     .put(IMPORTED_CLASS, currentImporterDefinition.getImportedClass()\n                             .getName());\n-        }\n+    }\n         if (!name.equals(currentImporterDefinition.getName())) {\n             throw BusinessException.createNew(DataErrorCode.UNEXPECTED_DATA_TYPE)\n                     .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name))\n                     .put(IMPORTED_CLASS, currentImporterDefinition.getImportedClass()\n                             .getName());\n-        }\n+    }\n \n         // Check if items contains an array\n         if (jsonParser.nextToken() != JsonToken.START_ARRAY) {\n@@ -268,16 +265,12 @@ class DataManagerImpl implements DataManager {\n \n         // If the array is not empty consume it\n         if (jsonParser.getCurrentToken() != JsonToken.END_ARRAY) {\n-            DataImporter<Object> currentDataImporter = getImporterInstance(\n-                    currentImporterDefinition.getImportedClass());\n+            DataImporter<Object> currentDataImporter = getImporterInstance(currentImporterDefinition.getImportedClass());\n             if (dataConfig.isClearBeforeImport()) {\n                 currentDataImporter.clear();\n-            }\n-            currentDataImporter.importData(StreamSupport.stream(Spliterators.spliteratorUnknownSize(\n-                    jsonParser.readValuesAs(currentImporterDefinition.getImportedClass()), Spliterator.ORDERED),\n+            } currentDataImporter.importData(StreamSupport.stream(Spliterators.spliteratorUnknownSize(jsonParser.readValuesAs(currentImporterDefinition.getImportedClass()), Spliterator.ORDERED),\n                     false));\n-\n-            // The array should properly end\n+// The array should properly end\n             if (jsonParser.getCurrentToken() != JsonToken.END_ARRAY) {\n                 throw new IllegalArgumentException(\"end array expected\");\n             }\n@@ -305,7 +298,7 @@ class DataManagerImpl implements DataManager {\n             throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n                     .put(GROUP, group)\n                     .put(NAME, name);\n-        }\n+    }\n \n         DataImporterDefinition<?> dataImporterDefinition = dataImporterDefinitionMap.get(name);\n \n@@ -313,17 +306,16 @@ class DataManagerImpl implements DataManager {\n             throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n                     .put(GROUP, group)\n                     .put(NAME, name);\n-        }\n+    }\n \n         return getImporterInstance(dataImporterDefinition.getImportedClass()).isInitialized();\n     }\n \n     @SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\",\n             justification = \"False positive due to Java 11\")\n-    private void dumpAll(List<DataSetMarker<?>> dataSetMarker, OutputStream outputStream) {\n-        try (JsonGenerator jsonGenerator = this.jsonFactory.createGenerator(\n-                new OutputStreamWriter(outputStream, Charset.forName(UTF_8)))) {\n-            ObjectWriter objectWriter = objectMapper.writer();\n+private void dumpAll(List<DataSetMarker<?>> dataSetMarker, OutputStream outputStream) {\n+        try (JsonGenerator jsonGenerator = this.jsonFactory.createGenerator( new OutputStreamWriter(outputStream, Charset.forName(UTF_8)))) {\n+    ObjectWriter objectWriter = objectMapper.writer();\n \n             jsonGenerator.writeStartArray();\n \n@@ -338,9 +330,8 @@ class DataManagerImpl implements DataManager {\n                 // items\n                 jsonGenerator.writeArrayFieldStart(ITEMS);\n                 objectDataSetMarker.getItems()\n-                        .forEach((Throwing.Consumer<Object, IOException>) item -> objectWriter.writeValue(jsonGenerator,\n-                                item));\n-                jsonGenerator.writeEndArray();\n+                        .forEach((Throwing.Consumer<Object, IOException>) item -> objectWriter.writeValue(jsonGenerator, item));\n+        jsonGenerator.writeEndArray();\n \n                 // end\n                 jsonGenerator.writeEndObject();\n@@ -356,17 +347,15 @@ class DataManagerImpl implements DataManager {\n \n     @SuppressWarnings(\"unchecked\")\n     private DataExporter<Object> getExporterInstance(Class<?> exportedClass) {\n-        return injector.getInstance(\n-                (Key<DataExporter<Object>>) Key.get(Types.newParameterizedType(DataExporter.class, exportedClass)));\n+        return injector.getInstance((Key<DataExporter<Object>>) Key.get(Types.newParameterizedType(DataExporter.class, exportedClass)));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private DataImporter<Object> getImporterInstance(Class<?> importedClass) {\n-        return injector.getInstance(\n-                (Key<DataImporter<Object>>) Key.get(Types.newParameterizedType(DataImporter.class, importedClass)));\n+        return injector.getInstance((Key<DataImporter<Object>>) Key.get(Types.newParameterizedType(DataImporter.class, importedClass)));\n     }\n \n     private enum ParsingState {\n         START, DEFINITION_START, DEFINITION_GROUP, DEFINITION_NAME, DEFINITION_ITEMS, DEFINITION_END, END\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "76",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 48, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "column": "101",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 100, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "1",
                    "severity": "warning",
                    "message": "'dataExporterDefinition' has incorrect indentation level 0, expected level should be 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "1",
                    "severity": "warning",
                    "message": "'getExporterInstance' has incorrect indentation level 0, expected level should be 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "5",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 4, expected level should be 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "97",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 96, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "48",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "column": "1",
                    "severity": "warning",
                    "message": "'dataExporterDefinition' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "column": "1",
                    "severity": "warning",
                    "message": "'getExporterInstance' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "column": "5",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "column": "110",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 109, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "column": "110",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 302).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "column": "204",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 203, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 270).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "column": "204",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 203, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "column": "1",
                    "severity": "warning",
                    "message": "'dataExporterDefinition' has incorrect indentation level 0, expected level should be 211.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "column": "1",
                    "severity": "warning",
                    "message": "'dataExporter' has incorrect indentation level 0, expected level should be 211.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "column": "200",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 199, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "column": "106",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 105, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'while' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "149",
                    "column": "42",
                    "severity": "warning",
                    "message": "'switch' has incorrect indentation level 41, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "column": "42",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "150",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "154",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "column": "46",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "column": "46",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "column": "83",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "166",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "168",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "column": "46",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "173",
                    "column": "83",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "174",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "177",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "column": "46",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "column": "83",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "column": "74",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "column": "103",
                    "severity": "warning",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "182",
                    "column": "125",
                    "severity": "warning",
                    "message": "WhitespaceAround: '||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "183",
                    "column": "54",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 53, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "185",
                    "column": "54",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 53, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "188",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "column": "46",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "193",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "196",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "column": "50",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "column": "46",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "column": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "column": "46",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "column": "53",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "205",
                    "column": "57",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 56, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "column": "53",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 52, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "207",
                    "column": "57",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 56, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "column": "53",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 52, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "209",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "210",
                    "column": "1",
                    "severity": "warning",
                    "message": "'case' child has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "211",
                    "column": "46",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "212",
                    "column": "1",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "column": "42",
                    "severity": "warning",
                    "message": "'while' child has incorrect indentation level 41, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "218",
                    "column": "17",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "232",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "233",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "238",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "243",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "243",
                    "column": "70",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 69, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "244",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "245",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "248",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "249",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "249",
                    "column": "68",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 67, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "250",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "251",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "256",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "256",
                    "column": "34",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "257",
                    "column": "64",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "262",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "262",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "263",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "264",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "267",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "268",
                    "column": "17",
                    "severity": "warning",
                    "message": "'Spliterator' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "269",
                    "column": "1",
                    "severity": "warning",
                    "message": "'false' has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "272",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "272",
                    "column": "44",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "273",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "273",
                    "column": "72",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 71, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "280",
                    "column": "34",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "281",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "281",
                    "column": "64",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 63, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "column": "60",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 59, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "286",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "286",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '!=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "287",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "287",
                    "column": "68",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 67, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "295",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "300",
                    "column": "48",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "308",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "311",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "314",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "315",
                    "column": "17",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 16, expected is 73, indentation should be the same level as line 316.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "316",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "318",
                    "column": "17",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 16, expected is 73, indentation should be the same level as line 319.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "319",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "319",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "320",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "320",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "322",
                    "column": "17",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 16, expected is 73, indentation should be the same level as line 323.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "323",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "324",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "324",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "324",
                    "column": "158",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "325",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "327",
                    "column": "17",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 16, expected is 73, indentation should be the same level as line 328.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "328",
                    "column": "74",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "329",
                    "column": "70",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 69, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "334",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "334",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "335",
                    "column": "17",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "336",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "341",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "346",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "349",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "349",
                    "column": "31",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "349",
                    "column": "129",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/161/DataManagerImpl.java\nindex 7cee2917233..1fa0d714901 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/161/DataManagerImpl.java\n@@ -43,7 +43,10 @@ import org.seedstack.shed.exception.Throwing;\n /**\n  * Implementation of the {@link DataManager}.\n  */\n+\n+\n class DataManagerImpl implements DataManager {\n+\n     private static final String UTF_8 = \"UTF-8\";\n     private static final String DATA_SET = \"dataSet\";\n     private static final String IMPORTED_CLASS = \"importedClass\";\n@@ -53,72 +56,70 @@ class DataManagerImpl implements DataManager {\n     private static final String CLASSES_MAP_KEY = \"%s:%s\";\n     private final JsonFactory jsonFactory;\n     private final ObjectMapper objectMapper;\n+\n     @Inject\n     private Map<String, Map<String, DataExporterDefinition<?>>> allDataExporters;\n+\n     @Inject\n     private Map<String, Map<String, DataImporterDefinition<?>>> allDataImporters;\n+\n     @Configuration\n     private BusinessConfig.DataConfig dataConfig;\n+\n     @Inject\n     private Injector injector;\n \n     DataManagerImpl() {\n         this.jsonFactory = new JsonFactory();\n         this.objectMapper = new ObjectMapper();\n-        this.jsonFactory.setCodec(this.objectMapper);\n+        this.jsonFactory.setCodec(this\n+            .objectMapper);\n     }\n \n     @Override\n     public void exportData(OutputStream outputStream, String group) {\n         Map<String, DataExporterDefinition<?>> dataExporterDefinitions = allDataExporters.get(group);\n-\n-        if (dataExporterDefinitions == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n-                    .put(DATA_SET, group);\n-        }\n-\n-        List<DataSetMarker<?>> datasets = new ArrayList<>();\n-        for (DataExporterDefinition<?> dataExporterDefinition : dataExporterDefinitions.values()) {\n-            datasets.add(new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n-                    getExporterInstance(dataExporterDefinition.getExportedClass()).exportData()));\n-        }\n-\n+        if(dataExporterDefinitions == null) {\n+                                                throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n+                                                    .put(DATA_SET, group);\n+        } List<DataSetMarker<?>> datasets = new ArrayList<>();\n+        for(DataExporterDefinition<?> dataExporterDefinition :dataExporterDefinitions.values()) {\n+                                                                                                    datasets.add(new DataSetMarker<>(dataExporterDefinition.getGroup(),\n+dataExporterDefinition.getName(),\n+getExporterInstance(dataExporterDefinition.getExportedClass())\n+    .exportData()));\n+                                                                                                }\n         dumpAll(datasets, outputStream);\n     }\n \n     @Override\n     public void exportData(OutputStream outputStream, String group, String name) {\n         Map<String, DataExporterDefinition<?>> dataExporterDefinitionMap = allDataExporters.get(group);\n-\n-        if (dataExporterDefinitionMap == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n-                    .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name));\n-        }\n-\n-        DataExporterDefinition<?> dataExporterDefinition = dataExporterDefinitionMap.get(name);\n-\n-        if (dataExporterDefinition == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n-                    .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name));\n+        if(dataExporterDefinitionMap == null) {\n+                                                  throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n+                                                      .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name));\n+        } DataExporterDefinition<?> dataExporterDefinition = dataExporterDefinitionMap.get(name);\n+        if(dataExporterDefinition == null) {\n+                                               throw BusinessException.createNew(DataErrorCode.NO_EXPORTER_FOUND)\n+                                                   .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name));\n         }\n-\n-        dumpAll(Lists.newArrayList(\n-                new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n-                        getExporterInstance(dataExporterDefinition.getExportedClass()).exportData())), outputStream);\n+        dumpAll(Lists.newArrayList(new DataSetMarker<>(dataExporterDefinition.getGroup(),\n+dataExporterDefinition.getName(),\n+getExporterInstance(dataExporterDefinition.getExportedClass())\n+    .exportData())), outputStream);\n     }\n \n     @Override\n     public void exportData(OutputStream outputStream) {\n         List<DataSetMarker<?>> dataSets = new ArrayList<>();\n-\n-        for (Map<String, DataExporterDefinition<?>> dataExporterDefinitionMap : allDataExporters.values()) {\n-            for (DataExporterDefinition<?> dataExporterDefinition : dataExporterDefinitionMap.values()) {\n-                DataExporter<Object> dataExporter = getExporterInstance(dataExporterDefinition.getExportedClass());\n-                dataSets.add(new DataSetMarker<>(dataExporterDefinition.getGroup(), dataExporterDefinition.getName(),\n-                        dataExporter.exportData()));\n-            }\n-        }\n-\n+        for(Map<String, DataExporterDefinition<?>> dataExporterDefinitionMap :allDataExporters.values()) {\n+                                                                                                             for(DataExporterDefinition<?> dataExporterDefinition :dataExporterDefinitionMap.values()) {\n+                                                                                                                                                                                                           DataExporter<Object> dataExporter = getExporterInstance(dataExporterDefinition.getExportedClass());\n+                                                                                                                                                                                                           dataSets.add(new DataSetMarker<>(dataExporterDefinition.getGroup(),\n+dataExporterDefinition.getName(),\n+dataExporter.exportData()));\n+                                                                                                                                                                                                       }\n+                                                                                                         }\n         dumpAll(dataSets, outputStream);\n     }\n \n@@ -133,240 +134,217 @@ class DataManagerImpl implements DataManager {\n     }\n \n     @Override\n-    @SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\",\n-            justification = \"False positive due to Java 11\")\n+    @SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\", justification = \"False positive due to Java 11\")\n     public void importData(InputStream inputStream, String acceptGroup, String acceptName) {\n-        try (JsonParser jsonParser = this.jsonFactory.createParser(\n-                new InputStreamReader(inputStream, Charset.forName(UTF_8)))) {\n+        try (JsonParser jsonParser = this\n+            .jsonFactory.createParser(new InputStreamReader(inputStream, Charset.forName(UTF_8)))) {\n             ParsingState state = ParsingState.START;\n+\n             String group = null;\n+\n             String name = null;\n-            JsonToken jsonToken = jsonParser.nextToken();\n \n-            while (jsonToken != null) {\n-                switch (state) {\n-                    case START:\n-                        if (jsonToken == JsonToken.START_ARRAY) {\n-                            state = ParsingState.DEFINITION_START;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"start array expected\");\n-                        }\n-\n-                        break;\n-                    case DEFINITION_START:\n-                        if (jsonToken == JsonToken.START_OBJECT) {\n-                            state = ParsingState.DEFINITION_GROUP;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"start object expected\");\n-                        }\n-\n-                        break;\n-                    case DEFINITION_GROUP:\n-                        if (jsonToken == JsonToken.FIELD_NAME && GROUP.equals(jsonParser.getCurrentName())) {\n-                            group = jsonParser.nextTextValue();\n-                            state = ParsingState.DEFINITION_NAME;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"group field expected\");\n-                        }\n-\n-                        break;\n-                    case DEFINITION_NAME:\n-                        if (jsonToken == JsonToken.FIELD_NAME && NAME.equals(jsonParser.getCurrentName())) {\n-                            name = jsonParser.nextTextValue();\n-                            state = ParsingState.DEFINITION_ITEMS;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"name field expected\");\n-                        }\n-\n-                        break;\n-                    case DEFINITION_ITEMS:\n-                        if (jsonToken == JsonToken.FIELD_NAME && ITEMS.equals(jsonParser.getCurrentName())) {\n-                            if ((acceptGroup == null || acceptGroup.equals(group))\n-                                    && (acceptName == null || acceptName.equals(name))) {\n-                                consumeItems(jsonParser, group, name);\n-                            } else {\n-                                skipItems(jsonParser);\n-                            }\n-                            state = ParsingState.DEFINITION_END;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"items field expected\");\n-                        }\n-\n-                        break;\n-                    case DEFINITION_END:\n-                        if (jsonToken == JsonToken.END_OBJECT) {\n-                            group = null;\n-                            name = null;\n-                            state = ParsingState.END;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"end object expected\");\n-                        }\n-\n-                        break;\n-                    case END:\n-                        if (jsonToken == JsonToken.START_OBJECT) {\n-                            state = ParsingState.DEFINITION_GROUP;\n-                        } else if (jsonToken == JsonToken.END_ARRAY) {\n-                            state = ParsingState.START;\n-                        } else {\n-                            throwParsingError(jsonParser.getCurrentLocation(), \"start object or end array expected\");\n-                        }\n-\n-                        break;\n-                    default:\n-                        throwParsingError(jsonParser.getCurrentLocation(), \"unexpected parser state\");\n-                }\n-\n-                jsonToken = jsonParser.nextToken();\n+            JsonToken jsonToken = jsonParser.nextToken();\n+            while(jsonToken != null) {\n+                                         switch(state) {\n+case START:\n+                                             if (jsonToken == JsonToken.START_ARRAY) {\n+                                                 state = ParsingState.DEFINITION_START;\n+                                             } else {\n+                                                 throwParsingError(jsonParser.getCurrentLocation(), \"start array expected\");\n+                                             }\n+                                             break;\n+case DEFINITION_START:\n+                                             if (jsonToken == JsonToken.START_OBJECT) {\n+                                                 state = ParsingState.DEFINITION_GROUP;\n+                                             } else {\n+                                                 throwParsingError(jsonParser.getCurrentLocation(), \"start object expected\");\n+                                             }\n+                                             break;\n+case DEFINITION_GROUP:\n+                                             if (jsonToken == JsonToken.FIELD_NAME&& GROUP.equals(jsonParser.getCurrentName())) {\n+                                                 group = jsonParser.nextTextValue();\n+                                                 state = ParsingState.DEFINITION_NAME;\n+                                             } else {\n+                                                 throwParsingError(jsonParser.getCurrentLocation(), \"group field expected\");\n+                                             }\n+                                             break;\n+case DEFINITION_NAME:\n+                                             if (jsonToken == JsonToken.FIELD_NAME&& NAME.equals(jsonParser.getCurrentName())) {\n+                                                 name = jsonParser.nextTextValue();\n+                                                 state = ParsingState.DEFINITION_ITEMS;\n+                                             } else {\n+                                                 throwParsingError(jsonParser.getCurrentLocation(), \"name field expected\");\n+                                             }\n+                                             break;\n+case DEFINITION_ITEMS:\n+                                             if (jsonToken == JsonToken.FIELD_NAME&& ITEMS.equals(jsonParser.getCurrentName())) {\n+                                                 if ((acceptGroup == null|| acceptGroup.equals(group))&& (acceptName == null|| acceptName.equals(name))) {\n+                                                     consumeItems(jsonParser, group, name);\n+                                                 } else {\n+                                                     skipItems(jsonParser);\n+                                                 }\n+                                                 state = ParsingState.DEFINITION_END;\n+                                             } else {\n+                                                 throwParsingError(jsonParser.getCurrentLocation(), \"items field expected\");\n+                                             }\n+                                             break;\n+case DEFINITION_END:\n+                                             if (jsonToken == JsonToken.END_OBJECT) {\n+                                                 group = null;\n+                                                 name = null;\n+                                                 state = ParsingState.END;\n+                                             } else {\n+                                                 throwParsingError(jsonParser.getCurrentLocation(), \"end object expected\");\n+                                             }\n+                                             break;\n+case END:\n+                                             if (jsonToken == JsonToken.START_OBJECT) {\n+                                                 state = ParsingState.DEFINITION_GROUP;\n+                                             } else if(jsonToken == JsonToken.END_ARRAY) {\n+                                                        state = ParsingState.START;\n+                                                    } else {\n+                                                        throwParsingError(jsonParser.getCurrentLocation(), \"start object or end array expected\");\n+                                                    }\n+                                             break;\n+default:\n+                                             throwParsingError(jsonParser.getCurrentLocation(), \"unexpected parser state\");\n+}\n+                                         jsonToken = jsonParser.nextToken();\n             }\n-        } catch (IOException e) {\n-            throw BusinessException.wrap(e, DataErrorCode.IMPORT_FAILED);\n         }\n+\n+            catch(IOException e) {\n+                throw BusinessException.wrap(e, DataErrorCode.IMPORT_FAILED);\n+            }\n     }\n \n     private void throwParsingError(JsonLocation jsonLocation, String message) {\n         throw BusinessException.createNew(DataErrorCode.FAILED_TO_PARSE_DATA_STREAM)\n-                .put(\"parsingError\", message)\n-                .put(\"line\", jsonLocation.getLineNr())\n-                .put(\"col\", jsonLocation.getColumnNr())\n-                .put(\"offset\", jsonLocation.getCharOffset());\n+            .put(\"parsingError\", message)\n+            .put(\"line\", jsonLocation.getLineNr())\n+            .put(\"col\", jsonLocation.getColumnNr())\n+            .put(\"offset\", jsonLocation.getCharOffset());\n     }\n \n     private void consumeItems(JsonParser jsonParser, String group, String name) throws IOException {\n         Map<String, DataImporterDefinition<?>> dataImporterDefinitionMap = allDataImporters.get(group);\n-        if (dataImporterDefinitionMap == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n-                    .put(GROUP, group)\n-                    .put(NAME, name);\n-        }\n-\n-        DataImporterDefinition<?> currentImporterDefinition = dataImporterDefinitionMap.get(name);\n-        if (currentImporterDefinition == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n-                    .put(GROUP, group)\n-                    .put(NAME, name);\n+        if(dataImporterDefinitionMap == null) {\n+                                                  throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n+                                                      .put(GROUP, group)\n+                                                      .put(NAME, name);\n+        } DataImporterDefinition<?> currentImporterDefinition = dataImporterDefinitionMap.get(name);\n+        if(currentImporterDefinition == null) {\n+                                                  throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n+                                                      .put(GROUP, group)\n+                                                      .put(NAME, name);\n         }\n-        if (!group.equals(currentImporterDefinition.getGroup())) {\n-            throw BusinessException.createNew(DataErrorCode.UNEXPECTED_DATA_TYPE)\n-                    .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name))\n-                    .put(IMPORTED_CLASS, currentImporterDefinition.getImportedClass()\n-                            .getName());\n+        if(! group.equals(currentImporterDefinition.getGroup())) {\n+                                                                     throw BusinessException.createNew(DataErrorCode.UNEXPECTED_DATA_TYPE)\n+                                                                         .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name))\n+                                                                         .put(IMPORTED_CLASS, currentImporterDefinition.getImportedClass()\n+                                                                             .getName());\n         }\n-        if (!name.equals(currentImporterDefinition.getName())) {\n-            throw BusinessException.createNew(DataErrorCode.UNEXPECTED_DATA_TYPE)\n-                    .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name))\n-                    .put(IMPORTED_CLASS, currentImporterDefinition.getImportedClass()\n-                            .getName());\n+        if(! name.equals(currentImporterDefinition.getName())) {\n+                                                                   throw BusinessException.createNew(DataErrorCode.UNEXPECTED_DATA_TYPE)\n+                                                                       .put(DATA_SET, String.format(CLASSES_MAP_KEY, group, name))\n+                                                                       .put(IMPORTED_CLASS, currentImporterDefinition.getImportedClass()\n+                                                                           .getName());\n         }\n \n         // Check if items contains an array\n-        if (jsonParser.nextToken() != JsonToken.START_ARRAY) {\n-            throw new IllegalArgumentException(\"Items should be an array\");\n+        if(jsonParser.nextToken()!= JsonToken.START_ARRAY) {\n+                                                               throw new IllegalArgumentException(\"Items should be an array\");\n         }\n-\n         jsonParser.nextToken();\n \n         // If the array is not empty consume it\n-        if (jsonParser.getCurrentToken() != JsonToken.END_ARRAY) {\n-            DataImporter<Object> currentDataImporter = getImporterInstance(\n-                    currentImporterDefinition.getImportedClass());\n-            if (dataConfig.isClearBeforeImport()) {\n+        if(jsonParser.getCurrentToken()!= JsonToken.END_ARRAY) {\n+            DataImporter<Object> currentDataImporter = getImporterInstance(currentImporterDefinition.getImportedClass());\n+            if(dataConfig.isClearBeforeImport()) {\n                 currentDataImporter.clear();\n             }\n-            currentDataImporter.importData(StreamSupport.stream(Spliterators.spliteratorUnknownSize(\n-                    jsonParser.readValuesAs(currentImporterDefinition.getImportedClass()), Spliterator.ORDERED),\n-                    false));\n+            currentDataImporter.importData(StreamSupport.stream(Spliterators.spliteratorUnknownSize(jsonParser.readValuesAs(currentImporterDefinition.getImportedClass()),\n+                Spliterator.ORDERED),\n+false));\n \n             // The array should properly end\n-            if (jsonParser.getCurrentToken() != JsonToken.END_ARRAY) {\n-                throw new IllegalArgumentException(\"end array expected\");\n+            if(jsonParser.getCurrentToken()!= JsonToken.END_ARRAY) {\n+                                                                       throw new IllegalArgumentException(\"end array expected\");\n             }\n         }\n     }\n \n     private void skipItems(JsonParser jsonParser) throws IOException {\n         // Check if items contains an array\n-        if (jsonParser.nextToken() != JsonToken.START_ARRAY) {\n-            throw new IllegalArgumentException(\"Items should be an array\");\n-        }\n+        if(jsonParser.nextToken()!= JsonToken.START_ARRAY) {\n+                                                               throw new IllegalArgumentException(\"Items should be an array\");\n+                                                           }\n         // Skip values\n         jsonParser.skipChildren();\n         // The array should properly end\n-        if (jsonParser.getCurrentToken() != JsonToken.END_ARRAY) {\n-            throw new IllegalArgumentException(\"end array expected\");\n+        if(jsonParser.getCurrentToken()!= JsonToken.END_ARRAY) {\n+                                                                   throw new IllegalArgumentException(\"end array expected\");\n         }\n     }\n \n     @Override\n     public boolean isInitialized(String group, String name) {\n         Map<String, DataImporterDefinition<?>> dataImporterDefinitionMap = allDataImporters.get(group);\n-\n-        if (dataImporterDefinitionMap == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n-                    .put(GROUP, group)\n-                    .put(NAME, name);\n+        if(dataImporterDefinitionMap == null) {\n+                                                  throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n+                                                      .put(GROUP, group)\n+                                                      .put(NAME, name);\n+        } DataImporterDefinition<?> dataImporterDefinition = dataImporterDefinitionMap.get(name);\n+        if(dataImporterDefinition == null) {\n+                                               throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n+                                                   .put(GROUP, group)\n+                                                   .put(NAME, name);\n         }\n-\n-        DataImporterDefinition<?> dataImporterDefinition = dataImporterDefinitionMap.get(name);\n-\n-        if (dataImporterDefinition == null) {\n-            throw BusinessException.createNew(DataErrorCode.NO_IMPORTER_FOUND)\n-                    .put(GROUP, group)\n-                    .put(NAME, name);\n-        }\n-\n-        return getImporterInstance(dataImporterDefinition.getImportedClass()).isInitialized();\n+        return getImporterInstance(dataImporterDefinition.getImportedClass())\n+            .isInitialized();\n     }\n \n-    @SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\",\n-            justification = \"False positive due to Java 11\")\n+    @SuppressFBWarnings(value = \"RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE\", justification = \"False positive due to Java 11\")\n     private void dumpAll(List<DataSetMarker<?>> dataSetMarker, OutputStream outputStream) {\n-        try (JsonGenerator jsonGenerator = this.jsonFactory.createGenerator(\n-                new OutputStreamWriter(outputStream, Charset.forName(UTF_8)))) {\n+        try (JsonGenerator jsonGenerator = this\n+            .jsonFactory.createGenerator(new OutputStreamWriter(outputStream, Charset.forName(UTF_8)))) {\n             ObjectWriter objectWriter = objectMapper.writer();\n-\n             jsonGenerator.writeStartArray();\n-\n-            for (DataSetMarker<?> objectDataSetMarker : dataSetMarker) {\n+            for(DataSetMarker<?> objectDataSetMarker :dataSetMarker) {\n                 // start\n-                jsonGenerator.writeStartObject();\n+                                                                         jsonGenerator.writeStartObject();\n \n                 // metadata\n-                jsonGenerator.writeStringField(GROUP, objectDataSetMarker.getGroup());\n-                jsonGenerator.writeStringField(NAME, objectDataSetMarker.getName());\n+                                                                         jsonGenerator.writeStringField(GROUP, objectDataSetMarker.getGroup());\n+                                                                         jsonGenerator.writeStringField(NAME, objectDataSetMarker.getName());\n \n                 // items\n-                jsonGenerator.writeArrayFieldStart(ITEMS);\n-                objectDataSetMarker.getItems()\n-                        .forEach((Throwing.Consumer<Object, IOException>) item -> objectWriter.writeValue(jsonGenerator,\n-                                item));\n-                jsonGenerator.writeEndArray();\n+                                                                         jsonGenerator.writeArrayFieldStart(ITEMS);\n+                                                                         objectDataSetMarker.getItems().forEach((Throwing.Consumer<Object, IOException>) item-> objectWriter.writeValue(jsonGenerator, item));\n+                                                                         jsonGenerator.writeEndArray();\n \n                 // end\n-                jsonGenerator.writeEndObject();\n-            }\n-\n+                                                                         jsonGenerator.writeEndObject();\n+                                                                     }\n             jsonGenerator.writeEndArray();\n-\n             jsonGenerator.flush();\n-        } catch (IOException e) {\n-            throw BusinessException.wrap(e, DataErrorCode.EXPORT_FAILED);\n         }\n+\n+            catch(IOException e) {\n+                throw BusinessException.wrap(e, DataErrorCode.EXPORT_FAILED);\n+            }\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private DataExporter<Object> getExporterInstance(Class<?> exportedClass) {\n-        return injector.getInstance(\n-                (Key<DataExporter<Object>>) Key.get(Types.newParameterizedType(DataExporter.class, exportedClass)));\n+        return injector.getInstance((Key<DataExporter<Object>>) Key.get(Types.newParameterizedType(DataExporter.class, exportedClass)));\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private DataImporter<Object> getImporterInstance(Class<?> importedClass) {\n-        return injector.getInstance(\n-                (Key<DataImporter<Object>>) Key.get(Types.newParameterizedType(DataImporter.class, importedClass)));\n+        return injector.getInstance((Key<DataImporter<Object>>) Key.get(Types.newParameterizedType(DataImporter.class, importedClass)));\n     }\n \n-    private enum ParsingState {\n-        START, DEFINITION_START, DEFINITION_GROUP, DEFINITION_NAME, DEFINITION_ITEMS, DEFINITION_END, END\n-    }\n-}\n+    private enum ParsingState {START, DEFINITION_START, DEFINITION_GROUP, DEFINITION_NAME, DEFINITION_ITEMS, DEFINITION_END, END}\n+}\n\\ No newline at end of file\n",
            "diff_size": 227
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/161/DataManagerImpl.java\nindex 7cee2917233..6dbbe94e2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/161/DataManagerImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import com.fasterxml.jackson.core.JsonFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/161/DataManagerImpl.java\nindex 7cee2917233..6dbbe94e2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/161/DataManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/161/DataManagerImpl.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.data;\n \n import com.fasterxml.jackson.core.JsonFactory;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
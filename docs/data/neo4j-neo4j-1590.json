{
    "project_name": "neo4j-neo4j",
    "error_id": "1590",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1590/BinaryLatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1590/BinaryLatch.java\nindex c2a5128d9a0..41e45723b91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1590/BinaryLatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1590/BinaryLatch.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.util.concurrent;\n \n import java.util.concurrent.locks.LockSupport;\n@@ -48,13 +49,13 @@ public class BinaryLatch\n     }\n \n     private static final long stackOffset =\n-            UnsafeUtil.getFieldOffset( BinaryLatch.class, \"stack\" );\n+      UnsafeUtil.getFieldOffset(BinaryLatch.class, \"stack\");\n     private static final Node end = new Node();\n     private static final Node released = new Node();\n     private static final byte waiterStateSuccessor = 1;\n     private static final byte waiterStateReleased = 2;\n \n-    @SuppressWarnings( \"unused\" )\n+    @SuppressWarnings(\"unused\")\n     private volatile Node stack; // written to via unsafe\n \n     /**\n@@ -66,22 +67,22 @@ public class BinaryLatch\n         // Waiters might accidentally remove the released sentinel from the stack for brief periods of time, but then\n         // they are required to fix the situation and put it back.\n         // Atomically swapping the release sentinel onto the stack will give us back all the waiters, if any.\n-        Node waiters = (Node) UnsafeUtil.getAndSetObject( this, stackOffset, released );\n-        if ( waiters == null )\n+        Node waiters = (Node) UnsafeUtil.getAndSetObject(this, stackOffset, released);\n+        if (waiters == null)\n         {\n             // There are no waiters to unpark, so don't bother.\n             return;\n         }\n-        unparkSuccessor( waiters );\n+        unparkSuccessor(waiters);\n     }\n \n-    private void unparkSuccessor( Node waiters )\n+    private void unparkSuccessor(Node waiters)\n     {\n-        if ( waiters.getClass() == Waiter.class )\n+        if (waiters.getClass() == Waiter.class)\n         {\n             Waiter waiter = (Waiter) waiters;\n             waiter.state = waiterStateSuccessor;\n-            LockSupport.unpark( waiter.waitingThread );\n+            LockSupport.unpark(waiter.waitingThread);\n         }\n     }\n \n@@ -94,25 +95,24 @@ public class BinaryLatch\n     {\n         // Put in a local variable to avoid volatile reads we don't need.\n         Node state = stack;\n-        if ( state != released )\n+        if (state != released)\n         {\n             // The latch hasn't obviously already been released, so we want to add a waiter to the stack. Trouble is,\n             // we might race with release here, so we need to re-check for release after we've modified the stack.\n             Waiter waiter = new Waiter();\n-            state = (Node) UnsafeUtil.getAndSetObject( this, stackOffset, waiter );\n-            if ( state == released )\n+            state = (Node) UnsafeUtil.getAndSetObject(this, stackOffset, waiter);\n+            if (state == released)\n             {\n                 // If we get 'released' back from the swap, then we raced with release, and it is our job to put the\n                 // released sentinel back. Doing so can, however, return more waiters that have added themselves in\n                 // the mean time. If we find such waiters, then we must make sure to unpark them. Note that we will\n                 // never get a null back from this swap, because we at least added our own waiter earlier.\n-                Node others = (Node) UnsafeUtil.getAndSetObject( this, stackOffset, released );\n+                Node others = (Node) UnsafeUtil.getAndSetObject(this, stackOffset, released);\n                 // Set our next pointer to 'released' as a signal to other threads who might be going through the\n                 // stack in the isReleased check.\n                 waiter.next = released;\n-                unparkAll( others );\n-            }\n-            else\n+                unparkAll(others);\n+            } else\n             {\n                 // It looks like the latch hasn't yet been released, so we are going to park. Before that, we must\n                 // assign a non-null value to our next pointer, so other threads will know that we have been properly\n@@ -123,29 +123,28 @@ public class BinaryLatch\n                 {\n                     // Park may wake up spuriously, so we have to loop on it until we observe from the state of the\n                     // stack, that the latch has been released.\n-                    if ( count < MAX_SPINS )\n+                    if (count < MAX_SPINS)\n                     {\n                         Thread.onSpinWait();\n                         count++;\n-                    }\n-                    else\n+                    } else\n                     {\n-                        LockSupport.park( this );\n+                        LockSupport.park(this);\n                     }\n                 }\n-                while ( !isReleased( waiter ) );\n+                while (!isReleased(waiter));\n             }\n         }\n     }\n \n-    private boolean isReleased( Waiter waiter )\n+    private boolean isReleased(Waiter waiter)\n     {\n         // If we are the most recently enqueued waiter on the stack before the release, then that makes us the\n         // successor. As the successor, it is our job to wake up all the other threads. We can *only* become the\n         // successor if the latch has been released, so there's no need to check anything else in this case.\n-        if ( waiter.state == waiterStateSuccessor )\n+        if (waiter.state == waiterStateSuccessor)\n         {\n-            unparkAll( waiter.next );\n+            unparkAll(waiter.next);\n             return true;\n         }\n \n@@ -154,14 +153,14 @@ public class BinaryLatch\n         Node state = stack;\n         do\n         {\n-            if ( state == released )\n+            if (state == released)\n             {\n                 // We've been released!\n-                if ( waiter.state != waiterStateReleased )\n+                if (waiter.state != waiterStateReleased)\n                 {\n                     // But it doesn't look like someone else is unparking the threads, so let's do that.\n                     // This can happen if we missed the signal to become the successor.\n-                    unparkAll( waiter.next );\n+                    unparkAll(waiter.next);\n                 }\n                 return true;\n             }\n@@ -174,30 +173,30 @@ public class BinaryLatch\n                 // properly enqueued node is never null.\n                 next = state.next;\n             }\n-            while ( next == null );\n+            while (next == null);\n             state = next;\n         }\n-        while ( state != end );\n+        while (state != end);\n         // Reaching the end of the stack without seeing 'released' means we're not released.\n         return false;\n     }\n \n-    private void unparkAll( Node waiters )\n+    private void unparkAll(Node waiters)\n     {\n         // If we find a node that is not a waiter, then it is either 'end' or 'released'. Looking at the type pointer\n         // is the cheapest way to make this check.\n-        while ( waiters.getClass() == Waiter.class )\n+        while (waiters.getClass() == Waiter.class)\n         {\n             Waiter waiter = (Waiter) waiters;\n             waiter.state = waiterStateReleased;\n-            LockSupport.unpark( waiter.waitingThread );\n+            LockSupport.unpark(waiter.waitingThread);\n             Node next;\n             do\n             {\n                 // Just like in isReleased, loop if the next pointer is null.\n                 next = waiters.next;\n             }\n-            while ( next == null );\n+            while (next == null);\n             waiters = next;\n         }\n     }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
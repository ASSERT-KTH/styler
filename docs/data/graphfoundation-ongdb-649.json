{
    "project_name": "graphfoundation-ongdb",
    "error_id": "649",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "159",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/649/StoreMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/649/StoreMigration.java\nindex 871ab05f126..5a80a97bb58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/649/StoreMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/649/StoreMigration.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.migration;\n \n import java.io.File;\n@@ -77,155 +78,153 @@ import static org.neo4j.kernel.impl.pagecache.ConfigurableStandalonePageCacheFac\n //: TODO introduce abstract tool class as soon as we will have several tools in tools module\n public class StoreMigration\n {\n-    private static final String HELP_FLAG = \"help\";\n+  private static final String HELP_FLAG = \"help\";\n \n-    public static void main( String[] args ) throws IOException\n+  public static void main(String[] args) throws IOException\n+  {\n+    Args arguments = Args.withFlags(HELP_FLAG).parse(args);\n+    if (arguments.getBoolean(HELP_FLAG, false) || args.length == 0)\n     {\n-        Args arguments = Args.withFlags( HELP_FLAG ).parse( args );\n-        if ( arguments.getBoolean( HELP_FLAG, false ) || args.length == 0 )\n-        {\n-            printUsageAndExit();\n-        }\n-        File storeDir = parseDir( arguments );\n-\n-        FormattedLogProvider userLogProvider = FormattedLogProvider.toOutputStream( System.out );\n-        try ( FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n-        {\n-            new StoreMigration().run( fileSystem, storeDir, getMigrationConfig( storeDir ), userLogProvider );\n-        }\n+      printUsageAndExit();\n     }\n+    File storeDir = parseDir(arguments);\n \n-    private static Config getMigrationConfig( File storeDir )\n+    FormattedLogProvider userLogProvider = FormattedLogProvider.toOutputStream(System.out);\n+    try (FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction())\n     {\n-        Config config = Config.defaults( GraphDatabaseSettings.allow_upgrade, Settings.TRUE );\n-        config.augment( GraphDatabaseSettings.neo4j_home, storeDir.getAbsolutePath() );\n-        return config;\n+      new StoreMigration().run(fileSystem, storeDir, getMigrationConfig(storeDir), userLogProvider);\n     }\n+  }\n+\n+  private static Config getMigrationConfig(File storeDir)\n+  {\n+    Config config = Config.defaults(GraphDatabaseSettings.allow_upgrade, Settings.TRUE);\n+    config.augment(GraphDatabaseSettings.neo4j_home, storeDir.getAbsolutePath());\n+    return config;\n+  }\n+\n+  public void run(final FileSystemAbstraction fs, final File storeDirectory, Config config,\n+                  LogProvider userLogProvider) throws IOException\n+  {\n+    StoreLogService logService = StoreLogService.withUserLogProvider(userLogProvider)\n+        .withInternalLog(config.get(store_internal_log_path)).build(fs);\n+\n+    VisibleMigrationProgressMonitor progressMonitor =\n+        new VisibleMigrationProgressMonitor(logService.getUserLog(StoreMigration.class));\n \n-    public void run( final FileSystemAbstraction fs, final File storeDirectory, Config config,\n-            LogProvider userLogProvider ) throws IOException\n+    LifeSupport life = new LifeSupport();\n+\n+    life.add(logService);\n+\n+    // Add participants from kernel extensions...\n+    ExplicitIndexProvider explicitIndexProvider = new ExplicitIndexProvider();\n+\n+    Log log = userLogProvider.getLog(StoreMigration.class);\n+    try (PageCache pageCache = createPageCache(fs, config))\n+    {\n+      Dependencies deps = new Dependencies();\n+      Monitors monitors = new Monitors();\n+      deps.satisfyDependencies(fs, config, explicitIndexProvider, pageCache, logService, monitors,\n+          RecoveryCleanupWorkCollector.immediate());\n+\n+      KernelContext kernelContext = new SimpleKernelContext(storeDirectory, DatabaseInfo.UNKNOWN, deps);\n+      KernelExtensions kernelExtensions = life.add(new KernelExtensions(\n+          kernelContext, GraphDatabaseDependencies.newDependencies().kernelExtensions(),\n+          deps, ignore()));\n+\n+      final LogFiles logFiles = LogFilesBuilder.activeFilesBuilder(storeDirectory, fs, pageCache)\n+          .withConfig(config).build();\n+      LogTailScanner tailScanner = new LogTailScanner(logFiles, new VersionAwareLogEntryReader<>(), monitors);\n+\n+      // Add the kernel store migrator\n+      life.start();\n+\n+      AllByPrioritySelectionStrategy<IndexProvider> indexProviderSelection = new AllByPrioritySelectionStrategy<>();\n+      IndexProvider defaultIndexProvider = kernelExtensions.resolveDependency(IndexProvider.class,\n+          indexProviderSelection);\n+      IndexProviderMap indexProviderMap = new DefaultIndexProviderMap(defaultIndexProvider,\n+          indexProviderSelection.lowerPrioritizedCandidates());\n+\n+      long startTime = System.currentTimeMillis();\n+      DatabaseMigrator migrator = new DatabaseMigrator(progressMonitor, fs, config, logService,\n+          indexProviderMap, explicitIndexProvider.getIndexProviders(),\n+          pageCache, RecordFormatSelector.selectForConfig(config, userLogProvider), tailScanner);\n+      migrator.migrate(storeDirectory);\n+\n+      // Append checkpoint so the last log entry will have the latest version\n+      appendCheckpoint(logFiles, tailScanner);\n+\n+      long duration = System.currentTimeMillis() - startTime;\n+      log.info(format(\"Migration completed in %d s%n\", duration / 1000));\n+    } catch (Exception e)\n     {\n-        StoreLogService logService = StoreLogService.withUserLogProvider( userLogProvider )\n-                .withInternalLog( config.get( store_internal_log_path ) ).build( fs );\n-\n-        VisibleMigrationProgressMonitor progressMonitor =\n-                new VisibleMigrationProgressMonitor( logService.getUserLog( StoreMigration.class ) );\n-\n-        LifeSupport life = new LifeSupport();\n-\n-        life.add( logService );\n-\n-        // Add participants from kernel extensions...\n-        ExplicitIndexProvider explicitIndexProvider = new ExplicitIndexProvider();\n-\n-        Log log = userLogProvider.getLog( StoreMigration.class );\n-        try ( PageCache pageCache = createPageCache( fs, config ) )\n-        {\n-            Dependencies deps = new Dependencies();\n-            Monitors monitors = new Monitors();\n-            deps.satisfyDependencies( fs, config, explicitIndexProvider, pageCache, logService, monitors,\n-                    RecoveryCleanupWorkCollector.immediate() );\n-\n-            KernelContext kernelContext = new SimpleKernelContext( storeDirectory, DatabaseInfo.UNKNOWN, deps );\n-            KernelExtensions kernelExtensions = life.add( new KernelExtensions(\n-                    kernelContext, GraphDatabaseDependencies.newDependencies().kernelExtensions(),\n-                    deps, ignore() ) );\n-\n-            final LogFiles logFiles = LogFilesBuilder.activeFilesBuilder( storeDirectory, fs, pageCache )\n-                    .withConfig( config ).build();\n-            LogTailScanner tailScanner = new LogTailScanner( logFiles, new VersionAwareLogEntryReader<>(), monitors );\n-\n-            // Add the kernel store migrator\n-            life.start();\n-\n-            AllByPrioritySelectionStrategy<IndexProvider> indexProviderSelection = new AllByPrioritySelectionStrategy<>();\n-            IndexProvider defaultIndexProvider = kernelExtensions.resolveDependency( IndexProvider.class,\n-                    indexProviderSelection );\n-            IndexProviderMap indexProviderMap = new DefaultIndexProviderMap( defaultIndexProvider,\n-                    indexProviderSelection.lowerPrioritizedCandidates() );\n-\n-            long startTime = System.currentTimeMillis();\n-            DatabaseMigrator migrator = new DatabaseMigrator( progressMonitor, fs, config, logService,\n-                    indexProviderMap, explicitIndexProvider.getIndexProviders(),\n-                    pageCache, RecordFormatSelector.selectForConfig( config, userLogProvider ), tailScanner );\n-            migrator.migrate( storeDirectory );\n-\n-            // Append checkpoint so the last log entry will have the latest version\n-            appendCheckpoint( logFiles, tailScanner );\n-\n-            long duration = System.currentTimeMillis() - startTime;\n-            log.info( format( \"Migration completed in %d s%n\", duration / 1000 ) );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new StoreUpgrader.UnableToUpgradeException( \"Failure during upgrade\", e );\n-        }\n-        finally\n-        {\n-            life.shutdown();\n-        }\n+      throw new StoreUpgrader.UnableToUpgradeException(\"Failure during upgrade\", e);\n+    } finally\n+    {\n+      life.shutdown();\n     }\n+  }\n \n-    private void appendCheckpoint( LogFiles logFiles, LogTailScanner tailScanner ) throws IOException\n+  private void appendCheckpoint(LogFiles logFiles, LogTailScanner tailScanner) throws IOException\n+  {\n+    try (Lifespan lifespan = new Lifespan(logFiles))\n     {\n-        try ( Lifespan lifespan = new Lifespan( logFiles ) )\n-        {\n-            FlushablePositionAwareChannel writer = logFiles.getLogFile().getWriter();\n-            TransactionLogWriter transactionLogWriter = new TransactionLogWriter( new LogEntryWriter( writer ) );\n-            transactionLogWriter.checkPoint( tailScanner.getTailInformation().lastCheckPoint.getLogPosition() );\n-            writer.prepareForFlush().flush();\n-        }\n+      FlushablePositionAwareChannel writer = logFiles.getLogFile().getWriter();\n+      TransactionLogWriter transactionLogWriter = new TransactionLogWriter(new LogEntryWriter(writer));\n+      transactionLogWriter.checkPoint(tailScanner.getTailInformation().lastCheckPoint.getLogPosition());\n+      writer.prepareForFlush().flush();\n     }\n+  }\n+\n+  private class ExplicitIndexProvider implements IndexProviders\n+  {\n+    private final Map<String, IndexImplementation> indexProviders = new HashMap<>();\n \n-    private class ExplicitIndexProvider implements IndexProviders\n+    public Map<String, IndexImplementation> getIndexProviders()\n     {\n-        private final Map<String,IndexImplementation> indexProviders = new HashMap<>();\n-\n-        public Map<String,IndexImplementation> getIndexProviders()\n-        {\n-            return indexProviders;\n-        }\n-\n-        @Override\n-        public void registerIndexProvider( String name, IndexImplementation index )\n-        {\n-            indexProviders.put( name, index );\n-        }\n-\n-        @Override\n-        public boolean unregisterIndexProvider( String name )\n-        {\n-            IndexImplementation removed = indexProviders.remove( name );\n-            return removed != null;\n-        }\n+      return indexProviders;\n     }\n \n-    private static File parseDir( Args args )\n+    @Override\n+    public void registerIndexProvider(String name, IndexImplementation index)\n     {\n-        if ( args.orphans().size() != 1 )\n-        {\n-            System.out.println( \"Error: too much arguments provided.\" );\n-            printUsageAndExit();\n-        }\n-        File dir = new File( args.orphans().get( 0 ) );\n-        if ( !dir.isDirectory() )\n-        {\n-            System.out.println( \"Invalid directory: '\" + dir + \"'\" );\n-            printUsageAndExit();\n-        }\n-        return dir;\n+      indexProviders.put(name, index);\n     }\n \n-    private static void printUsageAndExit()\n+    @Override\n+    public boolean unregisterIndexProvider(String name)\n+    {\n+      IndexImplementation removed = indexProviders.remove(name);\n+      return removed != null;\n+    }\n+  }\n+\n+  private static File parseDir(Args args)\n+  {\n+    if (args.orphans().size() != 1)\n+    {\n+      System.out.println(\"Error: too much arguments provided.\");\n+      printUsageAndExit();\n+    }\n+    File dir = new File(args.orphans().get(0));\n+    if (!dir.isDirectory())\n     {\n-        System.out.println( \"Store migration tool performs migration of a store in specified location to latest \" +\n-                            \"supported store version.\" );\n-        System.out.println();\n-        System.out.println( \"Options:\" );\n-        System.out.println( \"-help    print this help message\" );\n-        System.out.println();\n-        System.out.println( \"Usage:\" );\n-        System.out.println( \"./storeMigration [option] <store directory>\" );\n-        System.exit( 1 );\n+      System.out.println(\"Invalid directory: '\" + dir + \"'\");\n+      printUsageAndExit();\n     }\n+    return dir;\n+  }\n+\n+  private static void printUsageAndExit()\n+  {\n+    System.out.println(\"Store migration tool performs migration of a store in specified location to latest \" +\n+        \"supported store version.\");\n+    System.out.println();\n+    System.out.println(\"Options:\");\n+    System.out.println(\"-help    print this help message\");\n+    System.out.println();\n+    System.out.println(\"Usage:\");\n+    System.out.println(\"./storeMigration [option] <store directory>\");\n+    System.exit(1);\n+  }\n }\n",
            "diff_size": 236
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 302).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "column": "302",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/649/StoreMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/649/StoreMigration.java\nindex 871ab05f126..e653c43b5f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/649/StoreMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/649/StoreMigration.java\n@@ -86,9 +86,9 @@ public class StoreMigration\n         {\n             printUsageAndExit();\n         }\n-        File storeDir = parseDir( arguments );\n \n-        FormattedLogProvider userLogProvider = FormattedLogProvider.toOutputStream( System.out );\n+File storeDir = parseDir( arguments );\n+FormattedLogProvider userLogProvider = FormattedLogProvider.toOutputStream( System.out );\n         try ( FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n         {\n             new StoreMigration().run( fileSystem, storeDir, getMigrationConfig( storeDir ), userLogProvider );\n@@ -104,36 +104,24 @@ public class StoreMigration\n \n     public void run( final FileSystemAbstraction fs, final File storeDirectory, Config config,\n             LogProvider userLogProvider ) throws IOException\n-    {\n-        StoreLogService logService = StoreLogService.withUserLogProvider( userLogProvider )\n-                .withInternalLog( config.get( store_internal_log_path ) ).build( fs );\n-\n-        VisibleMigrationProgressMonitor progressMonitor =\n-                new VisibleMigrationProgressMonitor( logService.getUserLog( StoreMigration.class ) );\n-\n-        LifeSupport life = new LifeSupport();\n-\n-        life.add( logService );\n+{\n+        StoreLogService logService = StoreLogService.withUserLogProvider( userLogProvider ).withInternalLog( config.get( store_internal_log_path ) ).build( fs );\n+VisibleMigrationProgressMonitor progressMonitor = new VisibleMigrationProgressMonitor( logService.getUserLog( StoreMigration.class ) );\n+LifeSupport life = new LifeSupport();\n+life.add( logService );\n \n         // Add participants from kernel extensions...\n         ExplicitIndexProvider explicitIndexProvider = new ExplicitIndexProvider();\n-\n-        Log log = userLogProvider.getLog( StoreMigration.class );\n+Log log = userLogProvider.getLog( StoreMigration.class );\n         try ( PageCache pageCache = createPageCache( fs, config ) )\n         {\n             Dependencies deps = new Dependencies();\n             Monitors monitors = new Monitors();\n             deps.satisfyDependencies( fs, config, explicitIndexProvider, pageCache, logService, monitors,\n                     RecoveryCleanupWorkCollector.immediate() );\n-\n-            KernelContext kernelContext = new SimpleKernelContext( storeDirectory, DatabaseInfo.UNKNOWN, deps );\n-            KernelExtensions kernelExtensions = life.add( new KernelExtensions(\n-                    kernelContext, GraphDatabaseDependencies.newDependencies().kernelExtensions(),\n-                    deps, ignore() ) );\n-\n-            final LogFiles logFiles = LogFilesBuilder.activeFilesBuilder( storeDirectory, fs, pageCache )\n-                    .withConfig( config ).build();\n-            LogTailScanner tailScanner = new LogTailScanner( logFiles, new VersionAwareLogEntryReader<>(), monitors );\n+KernelContext kernelContext = new SimpleKernelContext( storeDirectory, DatabaseInfo.UNKNOWN, deps );\n+            KernelExtensions kernelExtensions = life.add( new KernelExtensions( kernelContext, GraphDatabaseDependencies.newDependencies().kernelExtensions(), deps, ignore() ) ); final LogFiles logFiles = LogFilesBuilder.activeFilesBuilder( storeDirectory, fs, pageCache ).withConfig( config ).build();\n+LogTailScanner tailScanner = new LogTailScanner( logFiles, new VersionAwareLogEntryReader<>(), monitors );\n \n             // Add the kernel store migrator\n             life.start();\n@@ -141,14 +129,12 @@ public class StoreMigration\n             AllByPrioritySelectionStrategy<IndexProvider> indexProviderSelection = new AllByPrioritySelectionStrategy<>();\n             IndexProvider defaultIndexProvider = kernelExtensions.resolveDependency( IndexProvider.class,\n                     indexProviderSelection );\n-            IndexProviderMap indexProviderMap = new DefaultIndexProviderMap( defaultIndexProvider,\n+IndexProviderMap indexProviderMap = new DefaultIndexProviderMap( defaultIndexProvider,\n                     indexProviderSelection.lowerPrioritizedCandidates() );\n-\n-            long startTime = System.currentTimeMillis();\n+    long startTime = System.currentTimeMillis();\n             DatabaseMigrator migrator = new DatabaseMigrator( progressMonitor, fs, config, logService,\n-                    indexProviderMap, explicitIndexProvider.getIndexProviders(),\n-                    pageCache, RecordFormatSelector.selectForConfig( config, userLogProvider ), tailScanner );\n-            migrator.migrate( storeDirectory );\n+                    indexProviderMap, explicitIndexProvider.getIndexProviders(), pageCache, RecordFormatSelector.selectForConfig( config, userLogProvider ), tailScanner );\n+migrator.migrate( storeDirectory );\n \n             // Append checkpoint so the last log entry will have the latest version\n             appendCheckpoint( logFiles, tailScanner );\n@@ -207,20 +193,21 @@ public class StoreMigration\n             System.out.println( \"Error: too much arguments provided.\" );\n             printUsageAndExit();\n         }\n-        File dir = new File( args.orphans().get( 0 ) );\n+\n+File dir = new File( args.orphans().get( 0 ) );\n         if ( !dir.isDirectory() )\n         {\n             System.out.println( \"Invalid directory: '\" + dir + \"'\" );\n             printUsageAndExit();\n         }\n-        return dir;\n+\n+return dir;\n     }\n \n     private static void printUsageAndExit()\n     {\n-        System.out.println( \"Store migration tool performs migration of a store in specified location to latest \" +\n-                            \"supported store version.\" );\n-        System.out.println();\n+        System.out.println( \"Store migration tool performs migration of a store in specified location to latest \" + \"supported store version.\" );\n+System.out.println();\n         System.out.println( \"Options:\" );\n         System.out.println( \"-help    print this help message\" );\n         System.out.println();\n@@ -228,4 +215,4 @@ public class StoreMigration\n         System.out.println( \"./storeMigration [option] <store directory>\" );\n         System.exit( 1 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "87",
                    "column": "54",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "95",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 254).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "column": "72",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "156",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/649/StoreMigration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/649/StoreMigration.java\nindex 871ab05f126..04fd5357de5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/649/StoreMigration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/649/StoreMigration.java\n@@ -23,7 +23,6 @@ import java.io.File;\n import java.io.IOException;\n import java.util.HashMap;\n import java.util.Map;\n-\n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n import org.neo4j.helpers.Args;\n import org.neo4j.index.internal.gbptree.RecoveryCleanupWorkCollector;\n@@ -63,10 +62,12 @@ import org.neo4j.kernel.spi.explicitindex.IndexProviders;\n import org.neo4j.logging.FormattedLogProvider;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.graphdb.factory.GraphDatabaseSettings.store_internal_log_path;\n+\n import static org.neo4j.kernel.extension.UnsatisfiedDependencyStrategies.ignore;\n+\n import static org.neo4j.kernel.impl.pagecache.ConfigurableStandalonePageCacheFactory.createPageCache;\n \n /**\n@@ -75,6 +76,7 @@ import static org.neo4j.kernel.impl.pagecache.ConfigurableStandalonePageCacheFac\n  * @see StoreMigrator\n  */\n //: TODO introduce abstract tool class as soon as we will have several tools in tools module\n+\n public class StoreMigration\n {\n     private static final String HELP_FLAG = \"help\";\n@@ -82,14 +84,15 @@ public class StoreMigration\n     public static void main( String[] args ) throws IOException\n     {\n         Args arguments = Args.withFlags( HELP_FLAG ).parse( args );\n-        if ( arguments.getBoolean( HELP_FLAG, false ) || args.length == 0 )\n+        if ( arguments.getBoolean( HELP_FLAG, false )|| args.length == 0 )\n         {\n             printUsageAndExit();\n         }\n-        File storeDir = parseDir( arguments );\n \n+        File storeDir = parseDir( arguments );\n         FormattedLogProvider userLogProvider = FormattedLogProvider.toOutputStream( System.out );\n-        try ( FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction() )\n+        try\n+        ( FileSystemAbstraction fileSystem = new DefaultFileSystemAbstraction())\n         {\n             new StoreMigration().run( fileSystem, storeDir, getMigrationConfig( storeDir ), userLogProvider );\n         }\n@@ -102,63 +105,44 @@ public class StoreMigration\n         return config;\n     }\n \n-    public void run( final FileSystemAbstraction fs, final File storeDirectory, Config config,\n-            LogProvider userLogProvider ) throws IOException\n+    public void run( final FileSystemAbstraction fs, final File storeDirectory, Config config, LogProvider userLogProvider ) throws IOException\n     {\n-        StoreLogService logService = StoreLogService.withUserLogProvider( userLogProvider )\n-                .withInternalLog( config.get( store_internal_log_path ) ).build( fs );\n-\n-        VisibleMigrationProgressMonitor progressMonitor =\n-                new VisibleMigrationProgressMonitor( logService.getUserLog( StoreMigration.class ) );\n-\n+        StoreLogService logService = StoreLogService.withUserLogProvider( userLogProvider ).withInternalLog( config.get( store_internal_log_path ) ).build( fs );\n+        VisibleMigrationProgressMonitor progressMonitor = new VisibleMigrationProgressMonitor( logService.getUserLog( StoreMigration.class ) );\n         LifeSupport life = new LifeSupport();\n-\n         life.add( logService );\n \n         // Add participants from kernel extensions...\n         ExplicitIndexProvider explicitIndexProvider = new ExplicitIndexProvider();\n-\n         Log log = userLogProvider.getLog( StoreMigration.class );\n-        try ( PageCache pageCache = createPageCache( fs, config ) )\n+        try\n+        ( PageCache pageCache = createPageCache( fs, config ))\n         {\n             Dependencies deps = new Dependencies();\n             Monitors monitors = new Monitors();\n-            deps.satisfyDependencies( fs, config, explicitIndexProvider, pageCache, logService, monitors,\n-                    RecoveryCleanupWorkCollector.immediate() );\n-\n+            deps.satisfyDependencies( fs, config, explicitIndexProvider, pageCache, logService, monitors, RecoveryCleanupWorkCollector.immediate() );\n             KernelContext kernelContext = new SimpleKernelContext( storeDirectory, DatabaseInfo.UNKNOWN, deps );\n-            KernelExtensions kernelExtensions = life.add( new KernelExtensions(\n-                    kernelContext, GraphDatabaseDependencies.newDependencies().kernelExtensions(),\n-                    deps, ignore() ) );\n-\n-            final LogFiles logFiles = LogFilesBuilder.activeFilesBuilder( storeDirectory, fs, pageCache )\n-                    .withConfig( config ).build();\n+            KernelExtensions kernelExtensions = life.add( new KernelExtensions( kernelContext, GraphDatabaseDependencies.newDependencies().kernelExtensions(), deps, ignore() ) );\n+            final LogFiles logFiles = LogFilesBuilder.activeFilesBuilder( storeDirectory, fs, pageCache ).withConfig( config ).build();\n             LogTailScanner tailScanner = new LogTailScanner( logFiles, new VersionAwareLogEntryReader<>(), monitors );\n \n             // Add the kernel store migrator\n             life.start();\n-\n             AllByPrioritySelectionStrategy<IndexProvider> indexProviderSelection = new AllByPrioritySelectionStrategy<>();\n-            IndexProvider defaultIndexProvider = kernelExtensions.resolveDependency( IndexProvider.class,\n-                    indexProviderSelection );\n-            IndexProviderMap indexProviderMap = new DefaultIndexProviderMap( defaultIndexProvider,\n-                    indexProviderSelection.lowerPrioritizedCandidates() );\n-\n+            IndexProvider defaultIndexProvider = kernelExtensions.resolveDependency( IndexProvider.class, indexProviderSelection );\n+            IndexProviderMap indexProviderMap = new DefaultIndexProviderMap( defaultIndexProvider, indexProviderSelection.lowerPrioritizedCandidates() );\n             long startTime = System.currentTimeMillis();\n-            DatabaseMigrator migrator = new DatabaseMigrator( progressMonitor, fs, config, logService,\n-                    indexProviderMap, explicitIndexProvider.getIndexProviders(),\n-                    pageCache, RecordFormatSelector.selectForConfig( config, userLogProvider ), tailScanner );\n+            DatabaseMigrator migrator = new DatabaseMigrator( progressMonitor, fs, config, logService, indexProviderMap, explicitIndexProvider.getIndexProviders(), pageCache, RecordFormatSelector.selectForConfig( config, userLogProvider ), tailScanner );\n             migrator.migrate( storeDirectory );\n \n             // Append checkpoint so the last log entry will have the latest version\n             appendCheckpoint( logFiles, tailScanner );\n-\n             long duration = System.currentTimeMillis() - startTime;\n-            log.info( format( \"Migration completed in %d s%n\", duration / 1000 ) );\n+            log.info( format( \"Migration completed in %d s%n\", duration/ 1000 ) );\n         }\n         catch ( Exception e )\n         {\n-            throw new StoreUpgrader.UnableToUpgradeException( \"Failure during upgrade\", e );\n+            throw new StoreUpgrader. UnableToUpgradeException( \"Failure during upgrade\", e );\n         }\n         finally\n         {\n@@ -168,7 +152,8 @@ public class StoreMigration\n \n     private void appendCheckpoint( LogFiles logFiles, LogTailScanner tailScanner ) throws IOException\n     {\n-        try ( Lifespan lifespan = new Lifespan( logFiles ) )\n+        try\n+            ( Lifespan lifespan = new Lifespan( logFiles ))\n         {\n             FlushablePositionAwareChannel writer = logFiles.getLogFile().getWriter();\n             TransactionLogWriter transactionLogWriter = new TransactionLogWriter( new LogEntryWriter( writer ) );\n@@ -207,19 +192,20 @@ public class StoreMigration\n             System.out.println( \"Error: too much arguments provided.\" );\n             printUsageAndExit();\n         }\n+\n         File dir = new File( args.orphans().get( 0 ) );\n-        if ( !dir.isDirectory() )\n+        if ( ! dir.isDirectory() )\n         {\n             System.out.println( \"Invalid directory: '\" + dir + \"'\" );\n             printUsageAndExit();\n         }\n+\n         return dir;\n     }\n \n     private static void printUsageAndExit()\n     {\n-        System.out.println( \"Store migration tool performs migration of a store in specified location to latest \" +\n-                            \"supported store version.\" );\n+        System.out.println( \"Store migration tool performs migration of a store in specified location to latest \" + \"supported store version.\" );\n         System.out.println();\n         System.out.println( \"Options:\" );\n         System.out.println( \"-help    print this help message\" );\n@@ -228,4 +214,4 @@ public class StoreMigration\n         System.out.println( \"./storeMigration [option] <store directory>\" );\n         System.exit( 1 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "368",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/368/IntTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/368/IntTracker.java\nindex 1ec2bb019e7..f737d074c8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/368/IntTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/368/IntTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache.idmapping.string;\n \n import org.neo4j.unsafe.impl.batchimport.cache.IntArray;\n@@ -28,47 +29,47 @@ import org.neo4j.unsafe.impl.batchimport.cache.LongBitsManipulator;\n  */\n public class IntTracker extends AbstractTracker<IntArray>\n {\n-    static final int SIZE = Integer.BYTES;\n-    static final int ID_BITS = Byte.SIZE * SIZE - 1;\n-    static final long MAX_ID = (1 << ID_BITS) - 1;\n-    static final int DEFAULT_VALUE = -1;\n-    private static final LongBitsManipulator BITS = new LongBitsManipulator( ID_BITS, 1 );\n+  static final int SIZE = Integer.BYTES;\n+  static final int ID_BITS = Byte.SIZE * SIZE - 1;\n+  static final long MAX_ID = (1 << ID_BITS) - 1;\n+  static final int DEFAULT_VALUE = -1;\n+  private static final LongBitsManipulator BITS = new LongBitsManipulator(ID_BITS, 1);\n \n-    public IntTracker( IntArray array )\n-    {\n-        super( array );\n-    }\n+  public IntTracker(IntArray array)\n+  {\n+    super(array);\n+  }\n \n-    @Override\n-    public long get( long index )\n-    {\n-        return BITS.get( array.get( index ), 0 );\n-    }\n+  @Override\n+  public long get(long index)\n+  {\n+    return BITS.get(array.get(index), 0);\n+  }\n \n-    /**\n-     * @throws ArithmeticException if value is bigger than {@link Integer#MAX_VALUE}.\n-     */\n-    @Override\n-    public void set( long index, long value )\n-    {\n-        long field = array.get( index );\n-        field = BITS.set( field, 0, value );\n-        array.set( index, (int) field );\n-    }\n+  /**\n+   * @throws ArithmeticException if value is bigger than {@link Integer#MAX_VALUE}.\n+   */\n+  @Override\n+  public void set(long index, long value)\n+  {\n+    long field = array.get(index);\n+    field = BITS.set(field, 0, value);\n+    array.set(index, (int) field);\n+  }\n \n-    @Override\n-    public void markAsDuplicate( long index )\n-    {\n-        long field = array.get( index );\n-        // Since the default value for the whole field is -1 (i.e. all 1s) then this mark will have to be 0.\n-        field = BITS.set( field, 1, 0 );\n-        array.set( index, (int) field );\n-    }\n+  @Override\n+  public void markAsDuplicate(long index)\n+  {\n+    long field = array.get(index);\n+    // Since the default value for the whole field is -1 (i.e. all 1s) then this mark will have to be 0.\n+    field = BITS.set(field, 1, 0);\n+    array.set(index, (int) field);\n+  }\n \n-    @Override\n-    public boolean isMarkedAsDuplicate( long index )\n-    {\n-        long field = array.get( index );\n-        return BITS.get( field, 1 ) == 0;\n-    }\n+  @Override\n+  public boolean isMarkedAsDuplicate(long index)\n+  {\n+    long field = array.get(index);\n+    return BITS.get(field, 1) == 0;\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/368/IntTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/368/IntTracker.java\nindex 1ec2bb019e7..39803b7a369 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/368/IntTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/368/IntTracker.java\n@@ -30,7 +30,7 @@ public class IntTracker extends AbstractTracker<IntArray>\n {\n     static final int SIZE = Integer.BYTES;\n     static final int ID_BITS = Byte.SIZE * SIZE - 1;\n-    static final long MAX_ID = (1 << ID_BITS) - 1;\n+    static final long MAX_ID = ( 1 << ID_BITS) - 1;\n     static final int DEFAULT_VALUE = -1;\n     private static final LongBitsManipulator BITS = new LongBitsManipulator( ID_BITS, 1 );\n \n@@ -53,7 +53,7 @@ public class IntTracker extends AbstractTracker<IntArray>\n     {\n         long field = array.get( index );\n         field = BITS.set( field, 0, value );\n-        array.set( index, (int) field );\n+        array.set( index, ( int) field );\n     }\n \n     @Override\n@@ -62,7 +62,7 @@ public class IntTracker extends AbstractTracker<IntArray>\n         long field = array.get( index );\n         // Since the default value for the whole field is -1 (i.e. all 1s) then this mark will have to be 0.\n         field = BITS.set( field, 1, 0 );\n-        array.set( index, (int) field );\n+        array.set( index, ( int) field );\n     }\n \n     @Override\n@@ -71,4 +71,4 @@ public class IntTracker extends AbstractTracker<IntArray>\n         long field = array.get( index );\n         return BITS.get( field, 1 ) == 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
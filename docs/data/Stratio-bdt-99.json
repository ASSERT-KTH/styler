{
    "project_name": "Stratio-bdt",
    "error_id": "99",
    "information": {
        "errors": [
            {
                "line": "651",
                "severity": "error",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @param numberOfCookies number of cookies that must be saved\n     */\n    @Then(\"^I have '(.+?)' selenium cookies saved$\")\n    public void getSeleniumCookiesSize(int numberOfCookies) throws Exception {\n        Assertions.assertThat(commonspec.getSeleniumCookies().size()).isEqualTo(numberOfCookies);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "651",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/99/ThenGSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/99/ThenGSpec.java\nindex aae8e27d030..7fda68c5f52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/99/ThenGSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/99/ThenGSpec.java\n@@ -73,8 +73,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @param exceptionMsg\n      */\n     @Then(\"^an exception '(.+?)' thrown( with class '(.+?)'( and message like '(.+?)')?)?\")\n-    public void assertExceptionNotThrown(String exception, String foo, String clazz, String bar, String exceptionMsg)\n-            throws ClassNotFoundException {\n+    public void assertExceptionNotThrown(String exception, String foo, String clazz, String bar,\n+                                         String exceptionMsg)\n+        throws ClassNotFoundException {\n         List<Exception> exceptions = commonspec.getExceptions();\n         if (\"IS NOT\".equals(exception)) {\n             assertThat(exceptions).as(\"Captured exception list is not empty\").isEmpty();\n@@ -83,10 +84,12 @@ public class ThenGSpec extends BaseGSpec {\n             Exception ex = exceptions.get(exceptions.size() - 1);\n             if ((clazz != null) && (exceptionMsg != null)) {\n                 assertThat(ex.toString()).as(\"Unexpected last exception class\").contains(clazz);\n-                assertThat(ex.toString()).as(\"Unexpected last exception message\").contains(exceptionMsg);\n+                assertThat(ex.toString()).as(\"Unexpected last exception message\")\n+                    .contains(exceptionMsg);\n \n             } else if (clazz != null) {\n-                assertThat(exceptions.get(exceptions.size() - 1).getClass().getSimpleName()).as(\"Unexpected last exception class\").isEqualTo(clazz);\n+                assertThat(exceptions.get(exceptions.size() - 1).getClass().getSimpleName())\n+                    .as(\"Unexpected last exception class\").isEqualTo(clazz);\n             }\n \n             commonspec.getExceptions().clear();\n@@ -100,7 +103,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' exists$\")\n     public void assertKeyspaceOnCassandraExists(String keyspace) {\n-        assertThat(commonspec.getCassandraClient().getKeyspaces()).as(\"The keyspace \" + keyspace + \" exists on cassandra\").contains(keyspace);\n+        assertThat(commonspec.getCassandraClient().getKeyspaces())\n+            .as(\"The keyspace \" + keyspace + \" exists on cassandra\").contains(keyspace);\n     }\n \n     /**\n@@ -110,7 +114,9 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' does not exist$\")\n     public void assertKeyspaceOnCassandraDoesNotExist(String keyspace) {\n-        assertThat(commonspec.getCassandraClient().getKeyspaces()).as(\"The keyspace \" + keyspace + \" does not exist on cassandra\").doesNotContain(keyspace);\n+        assertThat(commonspec.getCassandraClient().getKeyspaces())\n+            .as(\"The keyspace \" + keyspace + \" does not exist on cassandra\")\n+            .doesNotContain(keyspace);\n     }\n \n     /**\n@@ -121,7 +127,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)'$\")\n     public void assertTableExistsOnCassandraKeyspace(String keyspace, String tableName) {\n-        assertThat(commonspec.getCassandraClient().getTables(keyspace)).as(\"The table \" + tableName + \"exists on cassandra\").contains(tableName);\n+        assertThat(commonspec.getCassandraClient().getTables(keyspace))\n+            .as(\"The table \" + tableName + \"exists on cassandra\").contains(tableName);\n     }\n \n     /**\n@@ -132,7 +139,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' does not contain a table '(.+?)'$\")\n     public void assertTableDoesNotExistOnCassandraKeyspace(String keyspace, String tableName) {\n-        assertThat(commonspec.getCassandraClient().getTables(keyspace)).as(\"The table \" + tableName + \"exists on cassandra\").doesNotContain(tableName);\n+        assertThat(commonspec.getCassandraClient().getTables(keyspace))\n+            .as(\"The table \" + tableName + \"exists on cassandra\").doesNotContain(tableName);\n     }\n \n \n@@ -144,11 +152,14 @@ public class ThenGSpec extends BaseGSpec {\n      * @param numberRows\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)' with '(.+?)' rows$\")\n-    public void assertRowNumberOfTableOnCassandraKeyspace(String keyspace, String tableName, String numberRows) {\n+    public void assertRowNumberOfTableOnCassandraKeyspace(String keyspace, String tableName,\n+                                                          String numberRows) {\n         Long numberRowsLong = Long.parseLong(numberRows);\n         commonspec.getCassandraClient().useKeyspace(keyspace);\n-        assertThat(commonspec.getCassandraClient().executeQuery(\"SELECT COUNT(*) FROM \" + tableName + \";\").all().get(0).getLong(0)).as(\"The table \" + tableName + \"exists on cassandra\").\n-                isEqualTo(numberRowsLong);\n+        assertThat(\n+            commonspec.getCassandraClient().executeQuery(\"SELECT COUNT(*) FROM \" + tableName + \";\")\n+                .all().get(0).getLong(0)).as(\"The table \" + tableName + \"exists on cassandra\").\n+            isEqualTo(numberRowsLong);\n     }\n \n     /**\n@@ -160,7 +171,8 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws InterruptedException\n      */\n     @Then(\"^a Cassandra keyspace '(.+?)' contains a table '(.+?)' with values:$\")\n-    public void assertValuesOfTable(String keyspace, String tableName, DataTable data) throws InterruptedException {\n+    public void assertValuesOfTable(String keyspace, String tableName, DataTable data)\n+        throws InterruptedException {\n         //  USE of Keyspace\n         commonspec.getCassandraClient().useKeyspace(keyspace);\n         // Obtain the types and column names of the datatable\n@@ -168,19 +180,24 @@ public class ThenGSpec extends BaseGSpec {\n         Map<String, String> dataTableColumns = extractColumnNamesAndTypes(data.raw().get(0));\n         // check if the table has columns\n         String query = \"SELECT * FROM \" + tableName + \" LIMIT 1;\";\n-        com.datastax.driver.core.ResultSet res = commonspec.getCassandraClient().executeQuery(query);\n+        com.datastax.driver.core.ResultSet res =\n+            commonspec.getCassandraClient().executeQuery(query);\n         equalsColumns(res.getColumnDefinitions(), dataTableColumns);\n         //receiving the string from the select with the columns\n         // that belong to the dataTable\n-        List<String> selectQueries = giveQueriesList(data, tableName, columnNames(data.raw().get(0)));\n+        List<String> selectQueries =\n+            giveQueriesList(data, tableName, columnNames(data.raw().get(0)));\n         //Check the data  of cassandra with different queries\n         int index = 1;\n         for (String execQuery : selectQueries) {\n             res = commonspec.getCassandraClient().executeQuery(execQuery);\n             List<Row> resAsList = res.all();\n-            assertThat(resAsList.size()).as(\"The query \" + execQuery + \" not return any result on Cassandra\").isGreaterThan(0);\n+            assertThat(resAsList.size())\n+                .as(\"The query \" + execQuery + \" not return any result on Cassandra\")\n+                .isGreaterThan(0);\n             assertThat(resAsList.get(0).toString()\n-                    .substring(VALUE_SUBSTRING)).as(\"The resultSet is not as expected\").isEqualTo(data.raw().get(index).toString().replace(\"'\", \"\"));\n+                .substring(VALUE_SUBSTRING)).as(\"The resultSet is not as expected\")\n+                .isEqualTo(data.raw().get(index).toString().replace(\"'\", \"\"));\n             index++;\n         }\n     }\n@@ -190,9 +207,11 @@ public class ThenGSpec extends BaseGSpec {\n         Iterator it = dataTableColumns.entrySet().iterator();\n         while (it.hasNext()) {\n             Map.Entry e = (Map.Entry) it.next();\n-            assertThat(resCols.toString()).as(\"The table not contains the column.\").contains(e.getKey().toString());\n+            assertThat(resCols.toString()).as(\"The table not contains the column.\")\n+                .contains(e.getKey().toString());\n             DataType type = resCols.getType(e.getKey().toString());\n-            assertThat(type.getName().toString()).as(\"The column type is not equals.\").isEqualTo(e.getValue().toString());\n+            assertThat(type.getName().toString()).as(\"The column type is not equals.\")\n+                .isEqualTo(e.getValue().toString());\n         }\n     }\n \n@@ -252,7 +271,8 @@ public class ThenGSpec extends BaseGSpec {\n     @Then(\"^a Mongo dataBase '(.+?)' contains a table '(.+?)' with values:\")\n     public void assertValuesOfTableMongo(String dataBase, String tableName, DataTable data) {\n         commonspec.getMongoDBClient().connectToMongoDBDataBase(dataBase);\n-        ArrayList<DBObject> result = (ArrayList<DBObject>) commonspec.getMongoDBClient().readFromMongoDBCollection(\n+        ArrayList<DBObject> result =\n+            (ArrayList<DBObject>) commonspec.getMongoDBClient().readFromMongoDBCollection(\n                 tableName, data);\n         DBObjectsAssert.assertThat(result).containedInMongoDBResult(data);\n \n@@ -268,7 +288,8 @@ public class ThenGSpec extends BaseGSpec {\n     public void aMongoDataBaseContainsaTable(String database, String tableName) {\n         commonspec.getMongoDBClient().connectToMongoDBDataBase(database);\n         Set<String> collectionsNames = commonspec.getMongoDBClient().getMongoDBCollections();\n-        assertThat(collectionsNames).as(\"The Mongo dataBase contains the table\").doesNotContain(tableName);\n+        assertThat(collectionsNames).as(\"The Mongo dataBase contains the table\")\n+            .doesNotContain(tableName);\n     }\n \n     /**\n@@ -279,15 +300,20 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' has '(.+?)' as text$\")\n     public void assertSeleniumTextOnElementPresent(Integer index, String text) {\n-        assertThat(commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        String elementText = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText().replace(\"\\n\", \" \").replace(\"\\r\", \" \");\n+        assertThat(commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        String elementText =\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText()\n+                .replace(\"\\n\", \" \").replace(\"\\r\", \" \");\n         if (!elementText.startsWith(\"regex:\")) {\n             //We are verifying that a web element contains a string\n             assertThat(elementText.matches(\"(.*)\" + text + \"(.*)\")).isTrue();\n         } else {\n             //We are verifying that a web element contains a regex\n-            assertThat(elementText.matches(text.substring(text.indexOf(\"regex:\") + 6, text.length()))).isTrue();\n+            assertThat(\n+                elementText.matches(text.substring(text.indexOf(\"regex:\") + 6, text.length())))\n+                .isTrue();\n         }\n     }\n \n@@ -298,7 +324,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^this text exists '(.+?)'$\")\n     public void assertSeleniumTextInSource(String text) {\n-        assertThat(this.commonspec, commonspec.getDriver()).as(\"Expected text not found at page\").contains(text);\n+        assertThat(this.commonspec, commonspec.getDriver()).as(\"Expected text not found at page\")\n+            .contains(text);\n     }\n \n     /**\n@@ -314,7 +341,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws ClassNotFoundException\n      */\n     @Then(\"^'(\\\\d+?)' elements? exists? with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExists(Integer expectedCount, String method, String element) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertSeleniumNElementExists(Integer expectedCount, String method, String element)\n+        throws ClassNotFoundException, NoSuchFieldException, SecurityException,\n+        IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = commonspec.locateElement(method, element, expectedCount);\n         PreviousWebElements pwel = new PreviousWebElements(wel);\n         commonspec.setPreviousWebElements(pwel);\n@@ -338,8 +367,11 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws ClassNotFoundException\n      */\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, '(\\\\d+?)' elements exists with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount,\n-                                                      String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait,\n+                                                      Integer expectedCount,\n+                                                      String method, String element)\n+        throws InterruptedException, ClassNotFoundException, NoSuchFieldException,\n+        SecurityException, IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = null;\n         for (int i = 0; i < timeout; i += wait) {\n             wel = commonspec.locateElement(method, element, -1);\n@@ -368,7 +400,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws InterruptedException\n      */\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, the command output '(.+?)' contains '(.+?)'( with exit status '(.+?)')?$\")\n-    public void assertCommandExistsOnTimeOut(Integer timeout, Integer wait, String command, String search, String foo, Integer exitStatus) throws Exception {\n+    public void assertCommandExistsOnTimeOut(Integer timeout, Integer wait, String command,\n+                                             String search, String foo, Integer exitStatus)\n+        throws Exception {\n         Boolean found = false;\n         AssertionError ex = null;\n         command = \"set -o pipefail && alias grep='grep --color=never' && \" + command;\n@@ -381,13 +415,16 @@ public class ThenGSpec extends BaseGSpec {\n             commonspec.setCommandResult(commonspec.getRemoteSSHConnection().getResult());\n             try {\n                 if (exitStatus != null) {\n-                    assertThat(commonspec.getRemoteSSHConnection().getExitStatus()).isEqualTo(exitStatus);\n+                    assertThat(commonspec.getRemoteSSHConnection().getExitStatus())\n+                        .isEqualTo(exitStatus);\n                 }\n-                assertThat(commonspec.getCommandResult()).as(\"Contains \" + search + \".\").contains(search);\n+                assertThat(commonspec.getCommandResult()).as(\"Contains \" + search + \".\")\n+                    .contains(search);\n                 found = true;\n                 timeout = i;\n             } catch (AssertionError e) {\n-                commonspec.getLogger().info(\"Command output don't found yet after \" + i + \" seconds\");\n+                commonspec.getLogger()\n+                    .info(\"Command output don't found yet after \" + i + \" seconds\");\n                 Thread.sleep(wait * 1000);\n                 ex = e;\n             }\n@@ -407,9 +444,12 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) displayed$\")\n     public void assertSeleniumIsDisplayed(Integer index, Boolean isDisplayed) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isDisplayed()).as(\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isDisplayed())\n+            .as(\n                 \"Unexpected element display property\").isEqualTo(isDisplayed);\n     }\n \n@@ -421,10 +461,12 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) enabled$\")\n     public void assertSeleniumIsEnabled(Integer index, Boolean isEnabled) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isEnabled())\n-                .as(\"Unexpected element enabled property\").isEqualTo(isEnabled);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isEnabled())\n+            .as(\"Unexpected element enabled property\").isEqualTo(isEnabled);\n     }\n \n     /**\n@@ -435,9 +477,12 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' (IS|IS NOT) selected$\")\n     public void assertSeleniumIsSelected(Integer index, Boolean isSelected) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isSelected()).as(\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        assertThat(this.commonspec,\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).isSelected())\n+            .as(\n                 \"Unexpected element selected property\").isEqualTo(isSelected);\n     }\n \n@@ -450,11 +495,14 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^the element on index '(\\\\d+?)' has '(.+?)' as '(.+?)'$\")\n     public void assertSeleniumHasAttributeValue(Integer index, String attribute, String value) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        String val = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getAttribute(attribute);\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        String val = commonspec.getPreviousWebElements().getPreviousWebElements().get(index)\n+            .getAttribute(attribute);\n         assertThat(this.commonspec, val).as(\"Attribute not found\").isNotNull();\n-        assertThat(this.commonspec, val).as(\"Unexpected value for specified attribute\").matches(value);\n+        assertThat(this.commonspec, val).as(\"Unexpected value for specified attribute\")\n+            .matches(value);\n     }\n \n     /**\n@@ -486,18 +534,22 @@ public class ThenGSpec extends BaseGSpec {\n \n         String webURL = commonspec.getWebHost() + commonspec.getWebPort();\n \n-        assertThat(commonspec.getDriver().getCurrentUrl()).as(\"We are not in the expected url: \" + webURL.toLowerCase() + url)\n-                .endsWith(webURL.toLowerCase() + url);\n+        assertThat(commonspec.getDriver().getCurrentUrl())\n+            .as(\"We are not in the expected url: \" + webURL.toLowerCase() + url)\n+            .endsWith(webURL.toLowerCase() + url);\n     }\n \n     @Then(\"^the service response must contain the text '(.*?)'$\")\n-    public void assertResponseMessage(String expectedText) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+    public void assertResponseMessage(String expectedText)\n+        throws ClassNotFoundException, NoSuchFieldException, SecurityException,\n+        IllegalArgumentException, IllegalAccessException {\n         Pattern pattern = CommonG.matchesOrContains(expectedText);\n         assertThat(commonspec.getResponse().getResponse()).containsPattern(pattern);\n     }\n \n     @Then(\"^the service response status must be '(.*?)'( and its response length must be '(.*?)' | and its response must contain the text '(.*?)')?$\")\n-    public void assertResponseStatusLength(Integer expectedStatus, String foo, Integer expectedLength, String expectedText) {\n+    public void assertResponseStatusLength(Integer expectedStatus, String foo,\n+                                           Integer expectedLength, String expectedText) {\n         if (foo != null) {\n             if (foo.contains(\"length\")) {\n                 assertThat(Optional.of(commonspec.getResponse())).hasValueSatisfying(r -> {\n@@ -536,7 +588,8 @@ public class ThenGSpec extends BaseGSpec {\n     public void resultsMustBe(DataTable expectedResults) throws Exception {\n \n         String type = commonspec.getResultsType();\n-        assertThat(type).isNotEqualTo(\"\").overridingErrorMessage(\"It's necessary to define the result type\");\n+        assertThat(type).isNotEqualTo(\"\")\n+            .overridingErrorMessage(\"It's necessary to define the result type\");\n         switch (type) {\n             case \"cassandra\":\n                 commonspec.resultsMustBeCassandra(expectedResults);\n@@ -572,7 +625,8 @@ public class ThenGSpec extends BaseGSpec {\n      **/\n     @Then(\"^the command output does not contain '(.+?)'$\")\n     public void notFindShellOutput(String search) throws Exception {\n-        assertThat(commonspec.getCommandResult()).as(\"NotContains \" + search + \".\").doesNotContain(search);\n+        assertThat(commonspec.getCommandResult()).as(\"NotContains \" + search + \".\")\n+            .doesNotContain(search);\n     }\n \n     /**\n@@ -585,7 +639,8 @@ public class ThenGSpec extends BaseGSpec {\n     @Deprecated\n     @Then(\"^the command exit status is '(.+?)'$\")\n     public void checkShellExitStatus(int expectedExitStatus) throws Exception {\n-        assertThat(commonspec.getCommandExitStatus()).as(\"Is equal to \" + expectedExitStatus + \".\").isEqualTo(expectedExitStatus);\n+        assertThat(commonspec.getCommandExitStatus()).as(\"Is equal to \" + expectedExitStatus + \".\")\n+            .isEqualTo(expectedExitStatus);\n     }\n \n     /**\n@@ -602,8 +657,9 @@ public class ThenGSpec extends BaseGSpec {\n      **/\n     @Then(\"^I save selenium dcos acs auth cookie in variable '(.+?)'$\")\n     public void getDcosAcsAuthCookie(String envVar) throws Exception {\n-        if (commonspec.getSeleniumCookies() != null && commonspec.getSeleniumCookies().size() != 0) {\n-            for (Cookie cookie: commonspec.getSeleniumCookies()) {\n+        if (commonspec.getSeleniumCookies() != null &&\n+            commonspec.getSeleniumCookies().size() != 0) {\n+            for (Cookie cookie : commonspec.getSeleniumCookies()) {\n                 if (cookie.getName().contains(\"dcos-acs-auth-cookie\")) {\n                     //It's this cookie where we have to extract the value\n                     ThreadProperty.set(envVar, cookie.getValue());\n@@ -620,8 +676,9 @@ public class ThenGSpec extends BaseGSpec {\n      **/\n     @Then(\"^I save selenium cookie '(.+?)' in variable '(.+?)'$\")\n     public void getDcosAcsAuthCookie(String cookieName, String envVar) throws Exception {\n-        if (commonspec.getSeleniumCookies() != null && commonspec.getSeleniumCookies().size() != 0) {\n-            for (Cookie cookie: commonspec.getSeleniumCookies()) {\n+        if (commonspec.getSeleniumCookies() != null &&\n+            commonspec.getSeleniumCookies().size() != 0) {\n+            for (Cookie cookie : commonspec.getSeleniumCookies()) {\n                 if (cookie.getName().contains(cookieName)) {\n                     //It's this cookie where we have to extract the value\n                     ThreadProperty.set(envVar, cookie.getValue());\n@@ -643,6 +700,7 @@ public class ThenGSpec extends BaseGSpec {\n         Assertions.assertThat(commonspec.cookieExists(cookieName)).isEqualTo(true);\n \n     }\n+\n     /**\n      * Check if the length of the cookie set match with the number of cookies thas must be saved\n      *\n@@ -684,23 +742,30 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I add a new DCOS label with key '(.+?)' and value '(.+?)' to the service '(.+?)'?$\")\n     public void sendAppendRequest(String key, String value, String service) throws Exception {\n-        commonspec.runCommandAndGetResult(\"touch \" + service + \".json && dcos marathon app show \" + service + \" > /dcos/\" + service + \".json\");\n+        commonspec.runCommandAndGetResult(\n+            \"touch \" + service + \".json && dcos marathon app show \" + service + \" > /dcos/\" +\n+                service + \".json\");\n         commonspec.runCommandAndGetResult(\"cat /dcos/\" + service + \".json\");\n \n         String configFile = commonspec.getRemoteSSHConnection().getResult();\n         String myValue = commonspec.getJSONPathString(configFile, \".labels\", \"0\");\n-        String myJson = commonspec.updateMarathonJson(commonspec.removeJSONPathElement(configFile, \"$.labels\"));\n+        String myJson =\n+            commonspec.updateMarathonJson(commonspec.removeJSONPathElement(configFile, \"$.labels\"));\n \n         String newValue = myValue.replaceFirst(\"\\\\{\", \"{\\\"\" + key + \"\\\": \\\"\" + value + \"\\\", \");\n         newValue = \"\\\"labels\\\":\" + newValue;\n-        String myFinalJson = myJson.replaceFirst(\"\\\\{\", \"{\" + newValue.replace(\"\\\\n\", \"\\\\\\\\n\") + \",\");\n+        String myFinalJson =\n+            myJson.replaceFirst(\"\\\\{\", \"{\" + newValue.replace(\"\\\\n\", \"\\\\\\\\n\") + \",\");\n         if (myFinalJson.contains(\"uris\")) {\n             String test = myFinalJson.replaceAll(\"\\\"uris\\\"\", \"\\\"none\\\"\");\n-            commonspec.runCommandAndGetResult(\"echo '\" + test + \"' > /dcos/final\" + service + \".json\");\n+            commonspec\n+                .runCommandAndGetResult(\"echo '\" + test + \"' > /dcos/final\" + service + \".json\");\n         } else {\n-            commonspec.runCommandAndGetResult(\"echo '\" + myFinalJson + \"' > /dcos/final\" + service + \".json\");\n+            commonspec.runCommandAndGetResult(\n+                \"echo '\" + myFinalJson + \"' > /dcos/final\" + service + \".json\");\n         }\n-        commonspec.runCommandAndGetResult(\"dcos marathon app update \" + service + \" < /dcos/final\" + service + \".json\");\n+        commonspec.runCommandAndGetResult(\n+            \"dcos marathon app update \" + service + \" < /dcos/final\" + service + \".json\");\n \n         commonspec.setCommandExitStatus(commonspec.getRemoteSSHConnection().getExitStatus());\n     }\n@@ -717,7 +782,8 @@ public class ThenGSpec extends BaseGSpec {\n             String breakpoint = commonspec.getZookeeperSecClient().zRead(zNode);\n             assert breakpoint.equals(\"\") : \"The zNode does not exist\";\n         } else {\n-            assert commonspec.getZookeeperSecClient().zRead(zNode).contains(document) : \"The zNode does not exist or the content does not match\";\n+            assert commonspec.getZookeeperSecClient().zRead(zNode).contains(document) :\n+                \"The zNode does not exist or the content does not match\";\n         }\n     }\n \n@@ -733,7 +799,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^A kafka topic named '(.+?)' exists\")\n     public void kafkaTopicExist(String topic_name) throws KeeperException, InterruptedException {\n-        assert commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) : \"There is no topic with that name\";\n+        assert commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) :\n+            \"There is no topic with that name\";\n     }\n \n     /**\n@@ -743,7 +810,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^A kafka topic named '(.+?)' does not exist\")\n     public void kafkaTopicNotExist(String topic_name) throws KeeperException, InterruptedException {\n-        assert !commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) : \"There is a topic with that name\";\n+        assert !commonspec.getKafkaUtils().getZkUtils().pathExists(\"/\" + topic_name) :\n+            \"There is a topic with that name\";\n     }\n \n \n@@ -757,7 +825,9 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I modify marathon environment variable '(.+?)' with value '(.+?)' for service '(.+?)'?$\")\n     public void setMarathonProperty(String key, String value, String service) throws Exception {\n-        commonspec.runCommandAndGetResult(\"touch \" + service + \"-env.json && dcos marathon app show \" + service + \" > /dcos/\" + service + \"-env.json\");\n+        commonspec.runCommandAndGetResult(\n+            \"touch \" + service + \"-env.json && dcos marathon app show \" + service + \" > /dcos/\" +\n+                service + \"-env.json\");\n         commonspec.runCommandAndGetResult(\"cat /dcos/\" + service + \"-env.json\");\n \n         String configFile = commonspec.getRemoteSSHConnection().getResult();\n@@ -765,8 +835,10 @@ public class ThenGSpec extends BaseGSpec {\n         String myJson4 = commonspec.updateMarathonJson(myJson1);\n         String myJson = myJson4.replaceAll(\"\\\"uris\\\"\", \"\\\"none\\\"\");\n \n-        commonspec.runCommandAndGetResult(\"echo '\" + myJson + \"' > /dcos/final\" + service + \"-env.json\");\n-        commonspec.runCommandAndGetResult(\"dcos marathon app update \" + service + \" < /dcos/final\" + service + \"-env.json\");\n+        commonspec\n+            .runCommandAndGetResult(\"echo '\" + myJson + \"' > /dcos/final\" + service + \"-env.json\");\n+        commonspec.runCommandAndGetResult(\n+            \"dcos marathon app update \" + service + \" < /dcos/final\" + service + \"-env.json\");\n         commonspec.setCommandExitStatus(commonspec.getRemoteSSHConnection().getExitStatus());\n     }\n \n@@ -779,7 +851,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^The number of partitions in topic '(.+?)' should be '(.+?)''?$\")\n     public void checkNumberOfPartitions(String topic_name, int numOfPartitions) throws Exception {\n-        Assertions.assertThat(commonspec.getKafkaUtils().getPartitions(topic_name)).isEqualTo(numOfPartitions);\n+        Assertions.assertThat(commonspec.getKafkaUtils().getPartitions(topic_name))\n+            .isEqualTo(numOfPartitions);\n \n     }\n \n@@ -790,7 +863,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^An elasticsearch index named '(.+?)' exists\")\n     public void elasticSearchIndexExist(String indexName) {\n-        assert (commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n+        assert (commonspec.getElasticSearchClient().indexExists(indexName)) :\n+            \"There is no index with that name\";\n     }\n \n     /**\n@@ -800,7 +874,8 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^An elasticsearch index named '(.+?)' does not exist\")\n     public void elasticSearchIndexDoesNotExist(String indexName) {\n-        assert !commonspec.getElasticSearchClient().indexExists(indexName) : \"There is an index with that name\";\n+        assert !commonspec.getElasticSearchClient().indexExists(indexName) :\n+            \"There is an index with that name\";\n     }\n \n     /**\n@@ -811,14 +886,17 @@ public class ThenGSpec extends BaseGSpec {\n      * @param columnValue\n      */\n     @Then(\"^The Elasticsearch index named '(.+?)' and mapping '(.+?)' contains a column named '(.+?)' with the value '(.+?)'$\")\n-    public void elasticSearchIndexContainsDocument(String indexName, String mappingName, String columnName, String columnValue) throws Exception {\n-        Assertions.assertThat((commonspec.getElasticSearchClient().searchSimpleFilterElasticsearchQuery(\n+    public void elasticSearchIndexContainsDocument(String indexName, String mappingName,\n+                                                   String columnName, String columnValue)\n+        throws Exception {\n+        Assertions\n+            .assertThat((commonspec.getElasticSearchClient().searchSimpleFilterElasticsearchQuery(\n                 indexName,\n                 mappingName,\n                 columnName,\n                 columnValue,\n                 \"equals\"\n-        ).size()) > 0).isTrue().withFailMessage(\"The index does not contain that document\");\n+            ).size()) > 0).isTrue().withFailMessage(\"The index does not contain that document\");\n     }\n \n     /*\n@@ -839,16 +917,20 @@ public class ThenGSpec extends BaseGSpec {\n                 break;\n             case \"is higher than\":\n                 if (envVar.matches(\"^-?\\\\d+$\") && value.matches(\"^-?\\\\d+$\")) {\n-                    Assertions.assertThat(Integer.parseInt(envVar)).isGreaterThan(Integer.parseInt(value));\n+                    Assertions.assertThat(Integer.parseInt(envVar))\n+                        .isGreaterThan(Integer.parseInt(value));\n                 } else {\n-                    Fail.fail(\"A number should be provided in order to perform a valid comparison.\");\n+                    Fail.fail(\n+                        \"A number should be provided in order to perform a valid comparison.\");\n                 }\n                 break;\n             case \"is lower than\":\n                 if (envVar.matches(\"^-?\\\\d+$\") && value.matches(\"^-?\\\\d+$\")) {\n-                    Assertions.assertThat(Integer.parseInt(envVar)).isLessThan(Integer.parseInt(value));\n+                    Assertions.assertThat(Integer.parseInt(envVar))\n+                        .isLessThan(Integer.parseInt(value));\n                 } else {\n-                    Fail.fail(\"A number should be provided in order to perform a valid comparison.\");\n+                    Fail.fail(\n+                        \"A number should be provided in order to perform a valid comparison.\");\n                 }\n                 break;\n             case \"contains\":\n@@ -861,23 +943,27 @@ public class ThenGSpec extends BaseGSpec {\n                 Assertions.assertThat(envVar).isNotEqualTo(value);\n                 break;\n             default:\n-                Fail.fail(\"Not a valid comparison. Valid ones are: is | matches | is higher than | is lower than | contains | does not contain | is different from\");\n+                Fail.fail(\n+                    \"Not a valid comparison. Valid ones are: is | matches | is higher than | is lower than | contains | does not contain | is different from\");\n         }\n     }\n \n     @Then(\"^The kafka topic '(.*?)' has a message containing '(.*?)'$\")\n     public void checkMessages(String topic, String content) {\n-        assert commonspec.getKafkaUtils().readTopicFromBeginning(topic).contains(content) : \"Topic does not exist or the content does not match\";\n+        assert commonspec.getKafkaUtils().readTopicFromBeginning(topic).contains(content) :\n+            \"Topic does not exist or the content does not match\";\n     }\n \n     @Then(\"^The kafka topic '(.*?)' has a message that contains '(.*?)'$\")\n     public void checkMessagesContent(String topic, String content) {\n-        assert commonspec.getKafkaUtils().checkMessageContent(topic, content) : \"Topic does not exist or the content does not match\";\n+        assert commonspec.getKafkaUtils().checkMessageContent(topic, content) :\n+            \"Topic does not exist or the content does not match\";\n     }\n \n     @Then(\"^The kafka topic '(.*?)' has '(.+?)' messages$\")\n     public void checkMessageOfTopicLentgh(String topic, int numberOfMessages) {\n-        Assertions.assertThat(commonspec.getKafkaUtils().checkTopicMessagesLenght(topic)).isEqualTo(numberOfMessages);\n+        Assertions.assertThat(commonspec.getKafkaUtils().checkTopicMessagesLenght(topic))\n+            .isEqualTo(numberOfMessages);\n     }\n \n     /**\n@@ -888,9 +974,11 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I save content of element in index '(\\\\d+?)' in environment variable '(.+?)'$\")\n     public void saveContentWebElementInEnvVar(Integer index, String envVar) {\n-        assertThat(this.commonspec, commonspec.getPreviousWebElements()).as(\"There are less found elements than required\")\n-                .hasAtLeast(index);\n-        String text = commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText();\n+        assertThat(this.commonspec, commonspec.getPreviousWebElements())\n+            .as(\"There are less found elements than required\")\n+            .hasAtLeast(index);\n+        String text =\n+            commonspec.getPreviousWebElements().getPreviousWebElements().get(index).getText();\n         ThreadProperty.set(envVar, text);\n     }\n \n@@ -903,7 +991,8 @@ public class ThenGSpec extends BaseGSpec {\n     @Then(\"^the LDAP entry contains the attribute '(.+?)' with the value '(.+?)'$\")\n     public void ldapEntryContains(String attributeName, String expectedValue) {\n         if (this.commonspec.getPreviousLdapResults().isPresent()) {\n-            Assertions.assertThat(this.commonspec.getPreviousLdapResults().get().getEntry().getAttribute(attributeName).getStringValues()).contains(expectedValue);\n+            Assertions.assertThat(this.commonspec.getPreviousLdapResults().get().getEntry()\n+                .getAttribute(attributeName).getStringValues()).contains(expectedValue);\n         } else {\n             fail(\"No previous LDAP results were stored in memory\");\n         }\n@@ -930,7 +1019,8 @@ public class ThenGSpec extends BaseGSpec {\n             } else {\n                 //data exist\n                 String resultTableName = rs.getString(2);\n-                assertThat(resultTableName).as(\"there are incorrect table name \" + tableName).contains(tableName);\n+                assertThat(resultTableName).as(\"there are incorrect table name \" + tableName)\n+                    .contains(tableName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -960,7 +1050,8 @@ public class ThenGSpec extends BaseGSpec {\n                 Assertions.assertThat(rs.next()).as(\"table exists \" + tableName).isFalse();\n             } else {\n                 String resultTableName = rs.getString(2);\n-                assertThat(resultTableName).as(\"table exists \" + tableName).isEqualToIgnoringCase(tableName);\n+                assertThat(resultTableName).as(\"table exists \" + tableName)\n+                    .isEqualToIgnoringCase(tableName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -1072,47 +1163,66 @@ public class ThenGSpec extends BaseGSpec {\n \n         switch (objetType) {\n             case \"Database\":\n-                query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Table\":\n-                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName +\n+                    \"\\'\" + \";\";\n                 break;\n \n             case \"View\":\n-                query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Sequence\":\n-                query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Data Wrapper\":\n-                query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Server\":\n-                query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Function\":\n-                query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Schema\":\n-                query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Domain\":\n-                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Type\":\n-                query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Column\":\n-                query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"select column_name from information_schema.columns WHERE column_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             default:\n@@ -1129,7 +1239,9 @@ public class ThenGSpec extends BaseGSpec {\n             } else {\n                 //data exist\n                 String resultName = rs.getString(1);\n-                assertThat(resultName).as(\"there are incorrect \" + objetType + \" name: \" + objectName).contains(objectName);\n+                assertThat(resultName)\n+                    .as(\"there are incorrect \" + objetType + \" name: \" + objectName)\n+                    .contains(objectName);\n             }\n             rs.close();\n             myStatement.close();\n@@ -1147,47 +1259,66 @@ public class ThenGSpec extends BaseGSpec {\n \n         switch (objetType) {\n             case \"Database\":\n-                query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Table\":\n-                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName +\n+                    \"\\'\" + \";\";\n                 break;\n \n             case \"View\":\n-                query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" +\n+                        \";\";\n                 break;\n \n             case \"Sequence\":\n-                query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Data Wrapper\":\n-                query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Foreign Server\":\n-                query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Function\":\n-                query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Schema\":\n-                query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Domain\":\n-                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Type\":\n-                query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query =\n+                    \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" +\n+                        \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             case \"Column\":\n-                query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n+                query = \"select column_name from information_schema.columns WHERE column_name = \" +\n+                    \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n \n             default:\n@@ -1203,7 +1334,8 @@ public class ThenGSpec extends BaseGSpec {\n                 assertThat(rs.next()).as(objectName + \" exists \" + objectName).isFalse();\n             } else {\n                 String resultName = rs.getString(1);\n-                assertThat(resultName).as(objectName + \" exists \" + objectName).isEqualToIgnoringCase(objectName);\n+                assertThat(resultName).as(objectName + \" exists \" + objectName)\n+                    .isEqualToIgnoringCase(objectName);\n             }\n             rs.close();\n             myStatement.close();\n",
            "diff_size": 245
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "343",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "794",
                    "column": "15",
                    "severity": "error",
                    "message": "'assert' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "992",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1074",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1077",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1080",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1083",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1086",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1089",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1092",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1095",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1098",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1101",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1104",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1107",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1138",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1141",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1144",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1147",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1150",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1153",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1156",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1159",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1162",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1165",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1168",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1171",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/99/ThenGSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/99/ThenGSpec.java\nindex aae8e27d030..a82b1bb4e7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/99/ThenGSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/99/ThenGSpec.java\n@@ -338,9 +338,9 @@ public class ThenGSpec extends BaseGSpec {\n      * @throws ClassNotFoundException\n      */\n     @Then(\"^in less than '(\\\\d+?)' seconds, checking each '(\\\\d+?)' seconds, '(\\\\d+?)' elements exists with '([^:]*?):(.+?)'$\")\n-    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount,\n-                                                      String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n-        List<WebElement> wel = null;\n+    public void assertSeleniumNElementExistsOnTimeOut(Integer timeout, Integer wait, Integer expectedCount, String method, String element) throws InterruptedException, ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+\n+    List<WebElement> wel = null;\n         for (int i = 0; i < timeout; i += wait) {\n             wel = commonspec.locateElement(method, element, -1);\n             if (wel.size() == expectedCount) {\n@@ -643,7 +643,8 @@ public class ThenGSpec extends BaseGSpec {\n         Assertions.assertThat(commonspec.cookieExists(cookieName)).isEqualTo(true);\n \n     }\n-    /**\n+\n+/**\n      * Check if the length of the cookie set match with the number of cookies thas must be saved\n      *\n      * @param numberOfCookies number of cookies that must be saved\n@@ -790,7 +791,7 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^An elasticsearch index named '(.+?)' exists\")\n     public void elasticSearchIndexExist(String indexName) {\n-        assert (commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n+        assert(commonspec.getElasticSearchClient().indexExists(indexName)) : \"There is no index with that name\";\n     }\n \n     /**\n@@ -937,7 +938,6 @@ public class ThenGSpec extends BaseGSpec {\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n-\n     }\n \n \n@@ -989,9 +989,7 @@ public class ThenGSpec extends BaseGSpec {\n         List<String> tablePattern = new ArrayList<String>();\n         //comparison is by lists of string\n         tablePattern = dataTable.asList(String.class);\n-\n-\n-        Connection myConnection = this.commonspec.getConnection();\n+Connection myConnection = this.commonspec.getConnection();\n         String query = \"SELECT * FROM \" + tableName + \" order by \" + \"id\" + \";\";\n         try {\n             myStatement = myConnection.createStatement();\n@@ -1038,8 +1036,7 @@ public class ThenGSpec extends BaseGSpec {\n      */\n     @Then(\"^I check that result is:$\")\n     public void comparetable(DataTable dataTable) throws Exception {\n-\n-        //from Cucumber Datatable, the pattern to verify\n+    //from Cucumber Datatable, the pattern to verify\n         List<String> tablePattern = new ArrayList<String>();\n         tablePattern = dataTable.asList(String.class);\n         //the result from select\n@@ -1074,51 +1071,40 @@ public class ThenGSpec extends BaseGSpec {\n             case \"Database\":\n                 query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Table\":\n+    case \"Table\":\n                 query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"View\":\n+    case \"View\":\n                 query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Sequence\":\n+    case \"Sequence\":\n                 query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Data Wrapper\":\n+    case \"Foreign Data Wrapper\":\n                 query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Server\":\n+    case \"Foreign Server\":\n                 query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Function\":\n+    case \"Function\":\n                 query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Schema\":\n+    case \"Schema\":\n                 query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Domain\":\n+    case \"Domain\":\n                 query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Type\":\n+    case \"Type\":\n                 query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Column\":\n+    case \"Column\":\n                 query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            default:\n+    default:\n                 query = \"SELECT 1;\";\n                 break;\n-        }\n+    }\n \n         try {\n             myStatement = myConnection.createStatement();\n@@ -1149,51 +1135,40 @@ public class ThenGSpec extends BaseGSpec {\n             case \"Database\":\n                 query = \"SELECT datname FROM pg_database WHERE datname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Table\":\n+    case \"Table\":\n                 query = \"SELECT tablename FROM pg_tables WHERE tablename = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"View\":\n+    case \"View\":\n                 query = \"SELECT viewname FROM pg_views WHERE viewname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Sequence\":\n+    case \"Sequence\":\n                 query = \"SELECT sequence_name FROM information_schema.sequences WHERE sequence_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Data Wrapper\":\n+    case \"Foreign Data Wrapper\":\n                 query = \"SELECT foreign_data_wrapper_name FROM information_schema.foreign_data_wrappers WHERE foreign_data_wrapper_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Foreign Server\":\n+    case \"Foreign Server\":\n                 query = \"SELECT foreign_server_name FROM information_schema.foreign_servers WHERE foreign_server_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Function\":\n+    case \"Function\":\n                 query = \"SELECT p.proname FROM pg_catalog.pg_proc p JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace WHERE p.proname = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Schema\":\n+    case \"Schema\":\n                 query = \"SELECT schema_name from information_schema.schemata join pg_namespace on schema_name = nspname where schema_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Domain\":\n+    case \"Domain\":\n                 query = \"SELECT domain_name from information_schema.domains WHERE domain_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Type\":\n+    case \"Type\":\n                 query = \"SELECT user_defined_type_name FROM information_schema.user_defined_types WHERE user_defined_type_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            case \"Column\":\n+    case \"Column\":\n                 query = \"select column_name from information_schema.columns WHERE column_name = \" + \"\\'\" + objectName + \"\\'\" + \";\";\n                 break;\n-\n-            default:\n+    default:\n                 query = \"SELECT 1;\";\n                 break;\n-        }\n+    }\n \n         try {\n             myStatement = myConnection.createStatement();\n@@ -1212,5 +1187,4 @@ public class ThenGSpec extends BaseGSpec {\n         }\n     }\n \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "651",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "651",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
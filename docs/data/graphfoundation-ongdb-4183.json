{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4183",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4183/IndexPartsCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4183/IndexPartsCache.java\nindex 45293837c4a..94cca663e6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4183/IndexPartsCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4183/IndexPartsCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.util.Iterator;\n@@ -24,31 +25,31 @@ import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.locks.Lock;\n import java.util.concurrent.locks.ReentrantLock;\n \n-abstract class IndexPartsCache<KEY,T> implements Iterable<T>\n+abstract class IndexPartsCache<KEY, T> implements Iterable<T>\n {\n-    final ConcurrentHashMap<KEY,T> cache = new ConcurrentHashMap<>();\n-    final Lock instantiateCloseLock = new ReentrantLock();\n-    // guarded by instantiateCloseLock\n-    private boolean closed;\n+  final ConcurrentHashMap<KEY, T> cache = new ConcurrentHashMap<>();\n+  final Lock instantiateCloseLock = new ReentrantLock();\n+  // guarded by instantiateCloseLock\n+  private boolean closed;\n \n-    void assertOpen()\n+  void assertOpen()\n+  {\n+    if (closed)\n     {\n-        if ( closed )\n-        {\n-            throw new IllegalStateException( this + \" is already closed\" );\n-        }\n+      throw new IllegalStateException(this + \" is already closed\");\n     }\n+  }\n \n-    void closeInstantiateCloseLock()\n-    {\n-        instantiateCloseLock.lock();\n-        closed = true;\n-        instantiateCloseLock.unlock();\n-    }\n+  void closeInstantiateCloseLock()\n+  {\n+    instantiateCloseLock.lock();\n+    closed = true;\n+    instantiateCloseLock.unlock();\n+  }\n \n-    @Override\n-    public Iterator<T> iterator()\n-    {\n-        return cache.values().iterator();\n-    }\n+  @Override\n+  public Iterator<T> iterator()\n+  {\n+    return cache.values().iterator();\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4183/IndexPartsCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4183/IndexPartsCache.java\nindex 45293837c4a..4e25f7b9e48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4183/IndexPartsCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4183/IndexPartsCache.java\n@@ -51,4 +51,4 @@ abstract class IndexPartsCache<KEY,T> implements Iterable<T>\n     {\n         return cache.values().iterator();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
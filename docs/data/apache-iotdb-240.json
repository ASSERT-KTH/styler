{
    "project_name": "apache-iotdb",
    "error_id": "240",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.monitor;\n\nimport org.apache.iotdb.db.conf.IoTDBConfig;\nimport org.apache.iotdb.db.conf.IoTDBConstant;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/240/StatMonitor.java\nindex 497337ad641..f0ae23a6620 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/240/StatMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.monitor;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/240/StatMonitor.java\nindex 497337ad641..5b1f3d4cda5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/240/StatMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.monitor;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n@@ -94,7 +95,9 @@ public class StatMonitor implements StatMonitorMBean, IService {\n     }\n   }\n \n-  /** Generate tsRecords for stat parameters and insert them into StorageEngine. */\n+  /**\n+   * Generate tsRecords for stat parameters and insert them into StorageEngine.\n+   */\n   public void saveStatValue(String storageGroupName)\n       throws MetadataException, StorageEngineException {\n     long insertTime = System.currentTimeMillis();\n@@ -125,7 +128,9 @@ public class StatMonitor implements StatMonitorMBean, IService {\n     }\n   }\n \n-  /** Recover the cache values of monitor series using last query if time series exist. */\n+  /**\n+   * Recover the cache values of monitor series using last query if time series exist.\n+   */\n   public void recovery() {\n     try {\n       for (int i = 0; i < globalSeries.size(); i++) {\n@@ -161,13 +166,13 @@ public class StatMonitor implements StatMonitorMBean, IService {\n     if (mManager.isPathExist(monitorSeries)) {\n       TimeValuePair timeValuePair =\n           LastQueryExecutor.calculateLastPairForSeriesLocally(\n-                  Collections.singletonList(monitorSeries),\n-                  Collections.singletonList(TSDataType.INT64),\n-                  new QueryContext(QueryResourceManager.getInstance().assignQueryId(true, 1024, 1)),\n-                  null,\n-                  Collections.singletonMap(\n-                      monitorSeries.getDevice(),\n-                      Collections.singleton(monitorSeries.getMeasurement())))\n+              Collections.singletonList(monitorSeries),\n+              Collections.singletonList(TSDataType.INT64),\n+              new QueryContext(QueryResourceManager.getInstance().assignQueryId(true, 1024, 1)),\n+              null,\n+              Collections.singletonMap(\n+                  monitorSeries.getDevice(),\n+                  Collections.singleton(monitorSeries.getMeasurement())))\n               .get(0)\n               .right;\n       if (timeValuePair.getValue() != null) {\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/240/StatMonitor.java\nindex 497337ad641..f0ae23a6620 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/240/StatMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.monitor;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/240/StatMonitor.java\nindex 497337ad641..f0ae23a6620 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/240/StatMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/240/StatMonitor.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.monitor;\n \n import org.apache.iotdb.db.conf.IoTDBConfig;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
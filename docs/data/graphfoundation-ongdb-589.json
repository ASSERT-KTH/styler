{
    "project_name": "graphfoundation-ongdb",
    "error_id": "589",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/589/OptionalHostnamePort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/589/OptionalHostnamePort.java\nindex 3421d868a2f..fd2a257b08b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/589/OptionalHostnamePort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/589/OptionalHostnamePort.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.Optional;\n@@ -26,41 +27,42 @@ import org.neo4j.helpers.HostnamePort;\n \n public class OptionalHostnamePort\n {\n-    private Optional<String> hostname;\n-    private Optional<Integer> port;\n-    private Optional<Integer> upperRangePort;\n+  private Optional<String> hostname;\n+  private Optional<Integer> port;\n+  private Optional<Integer> upperRangePort;\n+\n+  public OptionalHostnamePort(Optional<String> hostname, Optional<Integer> port, Optional<Integer> upperRangePort)\n+  {\n+    this.hostname = hostname;\n+    this.port = port;\n+    this.upperRangePort = upperRangePort;\n+  }\n \n-    public OptionalHostnamePort( Optional<String> hostname, Optional<Integer> port, Optional<Integer> upperRangePort )\n-    {\n-        this.hostname = hostname;\n-        this.port = port;\n-        this.upperRangePort = upperRangePort;\n-    }\n+  public OptionalHostnamePort(@Nullable String hostname, @Nullable Integer port, @Nullable Integer upperRangePort)\n+  {\n+    this.hostname = Optional.ofNullable(hostname);\n+    this.port = Optional.ofNullable(port);\n+    this.upperRangePort = Optional.ofNullable(upperRangePort);\n+  }\n \n-    public OptionalHostnamePort( @Nullable String hostname, @Nullable Integer port, @Nullable Integer upperRangePort )\n-    {\n-        this.hostname = Optional.ofNullable( hostname );\n-        this.port = Optional.ofNullable( port );\n-        this.upperRangePort = Optional.ofNullable( upperRangePort );\n-    }\n+  public Optional<String> getHostname()\n+  {\n+    return hostname;\n+  }\n \n-    public Optional<String> getHostname()\n-    {\n-        return hostname;\n-    }\n+  public Optional<Integer> getPort()\n+  {\n+    return port;\n+  }\n \n-    public Optional<Integer> getPort()\n-    {\n-        return port;\n-    }\n+  public Optional<Integer> getUpperRangePort()\n+  {\n+    return upperRangePort;\n+  }\n \n-    public Optional<Integer> getUpperRangePort()\n-    {\n-        return upperRangePort;\n-    }\n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"OptionalHostnamePort<%s,%s,%s>\", hostname, port, upperRangePort );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"OptionalHostnamePort<%s,%s,%s>\", hostname, port, upperRangePort);\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/589/OptionalHostnamePort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/589/OptionalHostnamePort.java\nindex 3421d868a2f..245f9642007 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/589/OptionalHostnamePort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/589/OptionalHostnamePort.java\n@@ -58,9 +58,10 @@ public class OptionalHostnamePort\n     {\n         return upperRangePort;\n     }\n-    @Override\n+\n+@Override\n     public String toString()\n     {\n         return String.format( \"OptionalHostnamePort<%s,%s,%s>\", hostname, port, upperRangePort );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4223",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4223/TestServerBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4223/TestServerBuilder.java\nindex 1ddef49299a..bc3ae9ea50b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4223/TestServerBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4223/TestServerBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.harness;\n \n import java.io.File;\n@@ -33,109 +34,114 @@ import org.neo4j.procedure.UserFunction;\n  */\n public interface TestServerBuilder\n {\n-    /**\n-     * Start a new server. By default, the server will listen to a random free port, and you can determine where to\n-     * connect using the {@link ServerControls#httpURI()} method. You could also specify explicit ports using the\n-     * {@link #withConfig(org.neo4j.graphdb.config.Setting, String)} method. Please refer to the Neo4j Manual for\n-     * details on available configuration options.\n-     *\n-     * When the returned controls are {@link ServerControls#close() closed}, the temporary directory the server used\n-     * will be removed as well.\n-     */\n-    ServerControls newServer();\n+  /**\n+   * Start a new server. By default, the server will listen to a random free port, and you can determine where to\n+   * connect using the {@link ServerControls#httpURI()} method. You could also specify explicit ports using the\n+   * {@link #withConfig(org.neo4j.graphdb.config.Setting, String)} method. Please refer to the Neo4j Manual for\n+   * details on available configuration options.\n+   * <p>\n+   * When the returned controls are {@link ServerControls#close() closed}, the temporary directory the server used\n+   * will be removed as well.\n+   */\n+  ServerControls newServer();\n \n-    /**\n-     * Configure the Neo4j instance. Configuration here can be both configuration aimed at the server as well as the\n-     * database tuning options. Please refer to the Neo4j Manual for details on available configuration options.\n-     *\n-     * @param key the config key\n-     * @param value the config value\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withConfig( Setting<?> key, String value );\n+  /**\n+   * Configure the Neo4j instance. Configuration here can be both configuration aimed at the server as well as the\n+   * database tuning options. Please refer to the Neo4j Manual for details on available configuration options.\n+   *\n+   * @param key   the config key\n+   * @param value the config value\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withConfig(Setting<?> key, String value);\n \n-    /**\n-     * @see #withConfig(org.neo4j.graphdb.config.Setting, String)\n-     */\n-    TestServerBuilder withConfig( String key, String value );\n+  /**\n+   * @see #withConfig(org.neo4j.graphdb.config.Setting, String)\n+   */\n+  TestServerBuilder withConfig(String key, String value);\n \n-    /**\n-     * Shortcut for configuring the server to use an unmanaged extension. Please refer to the Neo4j Manual on how to\n-     * write unmanaged extensions.\n-     *\n-     * @param mountPath the http path, relative to the server base URI, that this extension should be mounted at.\n-     * @param extension the extension class.\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withExtension( String mountPath, Class<?> extension );\n+  /**\n+   * Shortcut for configuring the server to use an unmanaged extension. Please refer to the Neo4j Manual on how to\n+   * write unmanaged extensions.\n+   *\n+   * @param mountPath the http path, relative to the server base URI, that this extension should be mounted at.\n+   * @param extension the extension class.\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withExtension(String mountPath, Class<?> extension);\n \n-    /**\n-     * Shortcut for configuring the server to find and mount all unmanaged extensions in the given package.\n-     * @see #withExtension(String, Class)\n-     * @param mountPath the http path, relative to the server base URI, that this extension should be mounted at.\n-     * @param packageName a java package with extension classes.\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withExtension( String mountPath, String packageName );\n+  /**\n+   * Shortcut for configuring the server to find and mount all unmanaged extensions in the given package.\n+   *\n+   * @param mountPath   the http path, relative to the server base URI, that this extension should be mounted at.\n+   * @param packageName a java package with extension classes.\n+   * @return this builder instance\n+   * @see #withExtension(String, Class)\n+   */\n+  TestServerBuilder withExtension(String mountPath, String packageName);\n \n-    /**\n-     * Data fixtures to inject upon server start. This can be either a file with a plain-text cypher query\n-     * (for example, myFixture.cyp), or a directory containing such files with the suffix \".cyp\".\n-     * @param cypherFileOrDirectory file with cypher statement, or directory containing \".cyp\"-suffixed files.\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withFixture( File cypherFileOrDirectory );\n+  /**\n+   * Data fixtures to inject upon server start. This can be either a file with a plain-text cypher query\n+   * (for example, myFixture.cyp), or a directory containing such files with the suffix \".cyp\".\n+   *\n+   * @param cypherFileOrDirectory file with cypher statement, or directory containing \".cyp\"-suffixed files.\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withFixture(File cypherFileOrDirectory);\n \n-    /**\n-     * Data fixture to inject upon server start. This should be a valid Cypher statement.\n-     * @param fixtureStatement a cypher statement\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withFixture( String fixtureStatement );\n+  /**\n+   * Data fixture to inject upon server start. This should be a valid Cypher statement.\n+   *\n+   * @param fixtureStatement a cypher statement\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withFixture(String fixtureStatement);\n \n-    /**\n-     * Data fixture to inject upon server start. This should be a user implemented fixture function\n-     * operating on a {@link GraphDatabaseService} instance\n-     * @param fixtureFunction a fixture function\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withFixture( Function<GraphDatabaseService, Void> fixtureFunction );\n+  /**\n+   * Data fixture to inject upon server start. This should be a user implemented fixture function\n+   * operating on a {@link GraphDatabaseService} instance\n+   *\n+   * @param fixtureFunction a fixture function\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withFixture(Function<GraphDatabaseService, Void> fixtureFunction);\n \n-    /**\n-     * Pre-populate the server with databases copied from the specified source directory.\n-     * The source directory needs to have sub-folders `databases/graph.db` in which the source store files are located.\n-     * @param sourceDirectory the directory to copy from\n-     * @return this builder instance\n-     */\n-    TestServerBuilder copyFrom( File sourceDirectory );\n+  /**\n+   * Pre-populate the server with databases copied from the specified source directory.\n+   * The source directory needs to have sub-folders `databases/graph.db` in which the source store files are located.\n+   *\n+   * @param sourceDirectory the directory to copy from\n+   * @return this builder instance\n+   */\n+  TestServerBuilder copyFrom(File sourceDirectory);\n \n-    /**\n-     * Configure the server to load the specified procedure definition class. The class should contain one or more\n-     * methods annotated with {@link Procedure}, these will become available to call through\n-     * cypher.\n-     *\n-     * @param procedureClass a class containing one or more procedure definitions\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withProcedure( Class<?> procedureClass );\n+  /**\n+   * Configure the server to load the specified procedure definition class. The class should contain one or more\n+   * methods annotated with {@link Procedure}, these will become available to call through\n+   * cypher.\n+   *\n+   * @param procedureClass a class containing one or more procedure definitions\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withProcedure(Class<?> procedureClass);\n \n-    /**\n-     * Configure the server to load the specified function definition class. The class should contain one or more\n-     * methods annotated with {@link UserFunction}, these will become available to call through\n-     * cypher.\n-     *\n-     * @param functionClass a class containing one or more function definitions\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withFunction( Class<?> functionClass );\n+  /**\n+   * Configure the server to load the specified function definition class. The class should contain one or more\n+   * methods annotated with {@link UserFunction}, these will become available to call through\n+   * cypher.\n+   *\n+   * @param functionClass a class containing one or more function definitions\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withFunction(Class<?> functionClass);\n \n-    /**\n-     * Configure the server to load the specified aggregation function definition class. The class should contain one or more\n-     * methods annotated with {@link UserAggregationFunction}, these will become available to call through\n-     * cypher.\n-     *\n-     * @param functionClass a class containing one or more function definitions\n-     * @return this builder instance\n-     */\n-    TestServerBuilder withAggregationFunction( Class<?> functionClass );\n+  /**\n+   * Configure the server to load the specified aggregation function definition class. The class should contain one or more\n+   * methods annotated with {@link UserAggregationFunction}, these will become available to call through\n+   * cypher.\n+   *\n+   * @param functionClass a class containing one or more function definitions\n+   * @return this builder instance\n+   */\n+  TestServerBuilder withAggregationFunction(Class<?> functionClass);\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4223/TestServerBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4223/TestServerBuilder.java\nindex 1ddef49299a..d1311c566de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4223/TestServerBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4223/TestServerBuilder.java\n@@ -99,7 +99,7 @@ public interface TestServerBuilder\n      * @param fixtureFunction a fixture function\n      * @return this builder instance\n      */\n-    TestServerBuilder withFixture( Function<GraphDatabaseService, Void> fixtureFunction );\n+    TestServerBuilder withFixture( Function<GraphDatabaseService,Void> fixtureFunction );\n \n     /**\n      * Pre-populate the server with databases copied from the specified source directory.\n@@ -138,4 +138,4 @@ public interface TestServerBuilder\n      * @return this builder instance\n      */\n     TestServerBuilder withAggregationFunction( Class<?> functionClass );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
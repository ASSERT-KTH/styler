{
    "project_name": "graphfoundation-ongdb",
    "error_id": "817",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/817/HighAvailabilityMemberChangeEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/817/HighAvailabilityMemberChangeEvent.java\nindex 1dfc3f5814c..f5a0b0c7bea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/817/HighAvailabilityMemberChangeEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/817/HighAvailabilityMemberChangeEvent.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster;\n \n import java.net.URI;\n@@ -29,45 +30,45 @@ import org.neo4j.cluster.InstanceId;\n  */\n public class HighAvailabilityMemberChangeEvent\n {\n-    private final HighAvailabilityMemberState oldState;\n-    private final HighAvailabilityMemberState newState;\n-    private final InstanceId instanceId;\n-    private final URI serverHaUri;\n+  private final HighAvailabilityMemberState oldState;\n+  private final HighAvailabilityMemberState newState;\n+  private final InstanceId instanceId;\n+  private final URI serverHaUri;\n \n-    public HighAvailabilityMemberChangeEvent( HighAvailabilityMemberState oldState,\n-                                              HighAvailabilityMemberState newState,\n-                                              InstanceId instanceId, URI serverHaUri )\n-    {\n-        this.oldState = oldState;\n-        this.newState = newState;\n-        this.instanceId = instanceId;\n-        this.serverHaUri = serverHaUri;\n-    }\n+  public HighAvailabilityMemberChangeEvent(HighAvailabilityMemberState oldState,\n+                                           HighAvailabilityMemberState newState,\n+                                           InstanceId instanceId, URI serverHaUri)\n+  {\n+    this.oldState = oldState;\n+    this.newState = newState;\n+    this.instanceId = instanceId;\n+    this.serverHaUri = serverHaUri;\n+  }\n \n-    public HighAvailabilityMemberState getOldState()\n-    {\n-        return oldState;\n-    }\n+  public HighAvailabilityMemberState getOldState()\n+  {\n+    return oldState;\n+  }\n \n-    public HighAvailabilityMemberState getNewState()\n-    {\n-        return newState;\n-    }\n+  public HighAvailabilityMemberState getNewState()\n+  {\n+    return newState;\n+  }\n \n-    public InstanceId getInstanceId()\n-    {\n-        return instanceId;\n-    }\n+  public InstanceId getInstanceId()\n+  {\n+    return instanceId;\n+  }\n \n-    public URI getServerHaUri()\n-    {\n-        return serverHaUri;\n-    }\n+  public URI getServerHaUri()\n+  {\n+    return serverHaUri;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"HA Member State Event[ old state: \" + oldState + \", new state: \" + newState +\n-                \", server cluster URI: \" + instanceId + \", server HA URI: \" + serverHaUri + \"]\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"HA Member State Event[ old state: \" + oldState + \", new state: \" + newState +\n+        \", server cluster URI: \" + instanceId + \", server HA URI: \" + serverHaUri + \"]\";\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/817/HighAvailabilityMemberChangeEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/817/HighAvailabilityMemberChangeEvent.java\nindex 1dfc3f5814c..5b1c1613fe4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/817/HighAvailabilityMemberChangeEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/817/HighAvailabilityMemberChangeEvent.java\n@@ -34,10 +34,9 @@ public class HighAvailabilityMemberChangeEvent\n     private final InstanceId instanceId;\n     private final URI serverHaUri;\n \n-    public HighAvailabilityMemberChangeEvent( HighAvailabilityMemberState oldState,\n-                                              HighAvailabilityMemberState newState,\n+    public HighAvailabilityMemberChangeEvent( HighAvailabilityMemberState oldState, HighAvailabilityMemberState newState,\n                                               InstanceId instanceId, URI serverHaUri )\n-    {\n+{\n         this.oldState = oldState;\n         this.newState = newState;\n         this.instanceId = instanceId;\n@@ -67,7 +66,6 @@ public class HighAvailabilityMemberChangeEvent\n     @Override\n     public String toString()\n     {\n-        return \"HA Member State Event[ old state: \" + oldState + \", new state: \" + newState +\n-                \", server cluster URI: \" + instanceId + \", server HA URI: \" + serverHaUri + \"]\";\n+        return \"HA Member State Event[ old state: \" + oldState + \", new state: \" + newState + \", server cluster URI: \" + instanceId + \", server HA URI: \" + serverHaUri + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2165",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2165/MuninnReadPageCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2165/MuninnReadPageCursor.java\nindex 6c2139bc83b..f6dfcb1b10a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2165/MuninnReadPageCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2165/MuninnReadPageCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import java.io.IOException;\n@@ -27,165 +28,165 @@ import org.neo4j.io.pagecache.tracing.cursor.context.VersionContextSupplier;\n \n final class MuninnReadPageCursor extends MuninnPageCursor\n {\n-    private long lockStamp;\n-\n-    MuninnReadPageCursor( long victimPage, PageCursorTracer pageCursorTracer,\n-            VersionContextSupplier versionContextSupplier )\n-    {\n-        super( victimPage, pageCursorTracer, versionContextSupplier );\n-    }\n-\n-    @Override\n-    protected void unpinCurrentPage()\n-    {\n-        if ( pinnedPageRef != 0 )\n-        {\n-            pinEvent.done();\n-        }\n-        lockStamp = 0; // make sure not to accidentally keep a lock state around\n-        clearPageCursorState();\n-    }\n-\n-    @Override\n-    public boolean next() throws IOException\n-    {\n-        unpinCurrentPage();\n-        long lastPageId = assertPagedFileStillMappedAndGetIdOfLastPage();\n-        if ( nextPageId > lastPageId | nextPageId < 0 )\n-        {\n-            return false;\n-        }\n-        currentPageId = nextPageId;\n-        nextPageId++;\n-        pin( currentPageId, false );\n-        verifyContext();\n+  private long lockStamp;\n+\n+  MuninnReadPageCursor(long victimPage, PageCursorTracer pageCursorTracer,\n+                       VersionContextSupplier versionContextSupplier)\n+  {\n+    super(victimPage, pageCursorTracer, versionContextSupplier);\n+  }\n+\n+  @Override\n+  protected void unpinCurrentPage()\n+  {\n+    if (pinnedPageRef != 0)\n+    {\n+      pinEvent.done();\n+    }\n+    lockStamp = 0; // make sure not to accidentally keep a lock state around\n+    clearPageCursorState();\n+  }\n+\n+  @Override\n+  public boolean next() throws IOException\n+  {\n+    unpinCurrentPage();\n+    long lastPageId = assertPagedFileStillMappedAndGetIdOfLastPage();\n+    if (nextPageId > lastPageId | nextPageId < 0)\n+    {\n+      return false;\n+    }\n+    currentPageId = nextPageId;\n+    nextPageId++;\n+    pin(currentPageId, false);\n+    verifyContext();\n+    return true;\n+  }\n+\n+  @Override\n+  protected boolean tryLockPage(long pageRef)\n+  {\n+    lockStamp = pagedFile.tryOptimisticReadLock(pageRef);\n+    return true;\n+  }\n+\n+  @Override\n+  protected void unlockPage(long pageRef)\n+  {\n+  }\n+\n+  @Override\n+  protected void pinCursorToPage(long pageRef, long filePageId, PageSwapper swapper)\n+  {\n+    reset(pageRef);\n+    pagedFile.incrementUsage(pageRef);\n+  }\n+\n+  @Override\n+  protected void convertPageFaultLock(long pageRef)\n+  {\n+    lockStamp = pagedFile.unlockExclusive(pageRef);\n+  }\n+\n+  @Override\n+  public boolean shouldRetry() throws IOException\n+  {\n+    MuninnReadPageCursor cursor = this;\n+    do\n+    {\n+      long pageRef = cursor.pinnedPageRef;\n+      if (pageRef != 0 && !pagedFile.validateReadLock(pageRef, cursor.lockStamp))\n+      {\n+        startRetryLinkedChain();\n         return true;\n-    }\n-\n-    @Override\n-    protected boolean tryLockPage( long pageRef )\n-    {\n-        lockStamp = pagedFile.tryOptimisticReadLock( pageRef );\n-        return true;\n-    }\n-\n-    @Override\n-    protected void unlockPage( long pageRef )\n-    {\n-    }\n-\n-    @Override\n-    protected void pinCursorToPage( long pageRef, long filePageId, PageSwapper swapper )\n-    {\n-        reset( pageRef );\n-        pagedFile.incrementUsage( pageRef );\n-    }\n-\n-    @Override\n-    protected void convertPageFaultLock( long pageRef )\n-    {\n-        lockStamp = pagedFile.unlockExclusive( pageRef );\n-    }\n-\n-    @Override\n-    public boolean shouldRetry() throws IOException\n-    {\n-        MuninnReadPageCursor cursor = this;\n-        do\n-        {\n-            long pageRef = cursor.pinnedPageRef;\n-            if ( pageRef != 0 && !pagedFile.validateReadLock( pageRef, cursor.lockStamp ) )\n-            {\n-                startRetryLinkedChain();\n-                return true;\n-            }\n-            cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n-        }\n-        while ( cursor != null );\n-        return false;\n-    }\n-\n-    private void startRetryLinkedChain() throws IOException\n-    {\n-        MuninnReadPageCursor cursor = this;\n-        do\n-        {\n-            if ( cursor.pinnedPageRef != 0 )\n-            {\n-                cursor.startRetry();\n-            }\n-            cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n-        }\n-        while ( cursor != null );\n-    }\n-\n-    private void startRetry() throws IOException\n-    {\n-        setOffset( 0 );\n-        checkAndClearBoundsFlag();\n-        clearCursorException();\n-        lockStamp = pagedFile.tryOptimisticReadLock( pinnedPageRef );\n-        // The page might have been evicted while we held the optimistic\n-        // read lock, so we need to check with page.pin that this is still\n-        // the page we're actually interested in:\n-        if ( !pagedFile.isBoundTo( pinnedPageRef, pagedFile.swapperId, currentPageId ) )\n-        {\n-            // This is no longer the page we're interested in, so we have\n-            // to redo the pinning.\n-            // This might in turn lead to a new optimistic lock on a\n-            // different page if someone else has taken the page fault for\n-            // us. If nobody has done that, we'll take the page fault\n-            // ourselves, and in that case we'll end up with first an exclusive\n-            // lock during the faulting, and then an optimistic read lock once the\n-            // fault itself is over.\n-            // First, forget about this page in case pin() throws and the cursor\n-            // is closed; we don't want unpinCurrentPage() to try unlocking\n-            // this page.\n-            clearPageReference();\n-            // Then try pin again.\n-            pin( currentPageId, false );\n-        }\n-    }\n-\n-    @Override\n-    public void putByte( byte value )\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n-\n-    @Override\n-    public void putLong( long value )\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n-\n-    @Override\n-    public void putInt( int value )\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n-\n-    @Override\n-    public void putBytes( byte[] data, int arrayOffset, int length )\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n-\n-    @Override\n-    public void putShort( short value )\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n-\n-    @Override\n-    public void shiftBytes( int sourceStart, int length, int shift )\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n-\n-    @Override\n-    public void zapPage()\n-    {\n-        throw new IllegalStateException( \"Cannot write to read-locked page\" );\n-    }\n+      }\n+      cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n+    }\n+    while (cursor != null);\n+    return false;\n+  }\n+\n+  private void startRetryLinkedChain() throws IOException\n+  {\n+    MuninnReadPageCursor cursor = this;\n+    do\n+    {\n+      if (cursor.pinnedPageRef != 0)\n+      {\n+        cursor.startRetry();\n+      }\n+      cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n+    }\n+    while (cursor != null);\n+  }\n+\n+  private void startRetry() throws IOException\n+  {\n+    setOffset(0);\n+    checkAndClearBoundsFlag();\n+    clearCursorException();\n+    lockStamp = pagedFile.tryOptimisticReadLock(pinnedPageRef);\n+    // The page might have been evicted while we held the optimistic\n+    // read lock, so we need to check with page.pin that this is still\n+    // the page we're actually interested in:\n+    if (!pagedFile.isBoundTo(pinnedPageRef, pagedFile.swapperId, currentPageId))\n+    {\n+      // This is no longer the page we're interested in, so we have\n+      // to redo the pinning.\n+      // This might in turn lead to a new optimistic lock on a\n+      // different page if someone else has taken the page fault for\n+      // us. If nobody has done that, we'll take the page fault\n+      // ourselves, and in that case we'll end up with first an exclusive\n+      // lock during the faulting, and then an optimistic read lock once the\n+      // fault itself is over.\n+      // First, forget about this page in case pin() throws and the cursor\n+      // is closed; we don't want unpinCurrentPage() to try unlocking\n+      // this page.\n+      clearPageReference();\n+      // Then try pin again.\n+      pin(currentPageId, false);\n+    }\n+  }\n+\n+  @Override\n+  public void putByte(byte value)\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n+\n+  @Override\n+  public void putLong(long value)\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n+\n+  @Override\n+  public void putInt(int value)\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n+\n+  @Override\n+  public void putBytes(byte[] data, int arrayOffset, int length)\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n+\n+  @Override\n+  public void putShort(short value)\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n+\n+  @Override\n+  public void shiftBytes(int sourceStart, int length, int shift)\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n+\n+  @Override\n+  public void zapPage()\n+  {\n+    throw new IllegalStateException(\"Cannot write to read-locked page\");\n+  }\n }\n",
            "diff_size": 199
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2165/MuninnReadPageCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2165/MuninnReadPageCursor.java\nindex 6c2139bc83b..3d07dea9ede 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2165/MuninnReadPageCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2165/MuninnReadPageCursor.java\n@@ -42,7 +42,8 @@ final class MuninnReadPageCursor extends MuninnPageCursor\n         {\n             pinEvent.done();\n         }\n-        lockStamp = 0; // make sure not to accidentally keep a lock state around\n+\n+lockStamp = 0; // make sure not to accidentally keep a lock state around\n         clearPageCursorState();\n     }\n \n@@ -51,12 +52,12 @@ final class MuninnReadPageCursor extends MuninnPageCursor\n     {\n         unpinCurrentPage();\n         long lastPageId = assertPagedFileStillMappedAndGetIdOfLastPage();\n-        if ( nextPageId > lastPageId | nextPageId < 0 )\n+        if ( nextPageId> lastPageId | nextPageId < 0 )\n         {\n             return false;\n         }\n-        currentPageId = nextPageId;\n-        nextPageId++;\n+\n+currentPageId = nextPageId; nextPageId++;\n         pin( currentPageId, false );\n         verifyContext();\n         return true;\n@@ -99,7 +100,8 @@ final class MuninnReadPageCursor extends MuninnPageCursor\n                 startRetryLinkedChain();\n                 return true;\n             }\n-            cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n+\n+cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n         }\n         while ( cursor != null );\n         return false;\n@@ -114,7 +116,8 @@ final class MuninnReadPageCursor extends MuninnPageCursor\n             {\n                 cursor.startRetry();\n             }\n-            cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n+\n+cursor = (MuninnReadPageCursor) cursor.linkedCursor;\n         }\n         while ( cursor != null );\n     }\n@@ -188,4 +191,4 @@ final class MuninnReadPageCursor extends MuninnPageCursor\n     {\n         throw new IllegalStateException( \"Cannot write to read-locked page\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
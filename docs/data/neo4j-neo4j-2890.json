{
    "project_name": "neo4j-neo4j",
    "error_id": "2890",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2890/IndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2890/IndexStoreView.java\nindex 1b4ca9a519c..401051c9610 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2890/IndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2890/IndexStoreView.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.util.function.IntPredicate;\n@@ -30,7 +31,9 @@ import org.neo4j.storageengine.api.EntityUpdates;\n import org.neo4j.storageengine.api.IndexEntryUpdate;\n import org.neo4j.storageengine.api.NodePropertyAccessor;\n \n-/** The indexing services view of the universe. */\n+/**\n+ * The indexing services view of the universe.\n+ */\n public interface IndexStoreView\n {\n     /**\n@@ -38,41 +41,42 @@ public interface IndexStoreView\n      * one or more of the given property key ids. This scan additionally accepts a visitor\n      * for label updates for a joint scan.\n      *\n-     * @param labelIds array of label ids to generate updates for. Empty array means all.\n-     * @param propertyKeyIdFilter property key ids to generate updates for.\n+     * @param labelIds              array of label ids to generate updates for. Empty array means all.\n+     * @param propertyKeyIdFilter   property key ids to generate updates for.\n      * @param propertyUpdateVisitor visitor which will see all generated {@link EntityUpdates}.\n-     * @param labelUpdateVisitor visitor which will see all generated {@link EntityTokenUpdate}.\n-     * @param forceStoreScan overrides decision about which source to scan from. If {@code true}\n-     * then store scan will be used, otherwise if {@code false} then the best suited will be used.\n-     * @param cursorTracer underlying page cursor events tracer.\n+     * @param labelUpdateVisitor    visitor which will see all generated {@link EntityTokenUpdate}.\n+     * @param forceStoreScan        overrides decision about which source to scan from. If {@code true}\n+     *                              then store scan will be used, otherwise if {@code false} then the best suited will be used.\n+     * @param cursorTracer          underlying page cursor events tracer.\n      * @return a {@link StoreScan} to start and to stop the scan.\n      */\n     <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(\n-            int[] labelIds, IntPredicate propertyKeyIdFilter,\n-            Visitor<EntityUpdates, FAILURE> propertyUpdateVisitor,\n-            Visitor<EntityTokenUpdate, FAILURE> labelUpdateVisitor,\n-            boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker );\n+      int[] labelIds, IntPredicate propertyKeyIdFilter,\n+      Visitor<EntityUpdates, FAILURE> propertyUpdateVisitor,\n+      Visitor<EntityTokenUpdate, FAILURE> labelUpdateVisitor,\n+      boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker);\n \n     /**\n      * Retrieve all relationships in the database which has any of the the given relationship types AND\n      * one or more of the given property key ids.\n      *\n-     * @param relationshipTypeIds array of relationship type ids to generate updates for. Empty array means all.\n-     * @param propertyKeyIdFilter property key ids to generate updates for.\n-     * @param propertyUpdateVisitor visitor which will see all generated {@link EntityUpdates}\n+     * @param relationshipTypeIds           array of relationship type ids to generate updates for. Empty array means all.\n+     * @param propertyKeyIdFilter           property key ids to generate updates for.\n+     * @param propertyUpdateVisitor         visitor which will see all generated {@link EntityUpdates}\n      * @param relationshipTypeUpdateVisitor visitor which will see all generated {@link EntityTokenUpdate}.\n-     * @param forceStoreScan overrides decision about which source to scan from. If {@code true}\n-     * then store scan will be used, otherwise if {@code false} then the best suited will be used.\n-     * @param cursorTracer underlying page cursor events tracer.\n+     * @param forceStoreScan                overrides decision about which source to scan from. If {@code true}\n+     *                                      then store scan will be used, otherwise if {@code false} then the best suited will be used.\n+     * @param cursorTracer                  underlying page cursor events tracer.\n      * @return a {@link StoreScan} to start and to stop the scan.\n      */\n-    <FAILURE extends Exception> StoreScan<FAILURE> visitRelationships( int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter,\n-            Visitor<EntityUpdates,FAILURE> propertyUpdateVisitor, Visitor<EntityTokenUpdate,FAILURE> relationshipTypeUpdateVisitor,\n-            boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker );\n+    <FAILURE extends Exception> StoreScan<FAILURE> visitRelationships(int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter,\n+                                                                      Visitor<EntityUpdates, FAILURE> propertyUpdateVisitor,\n+                                                                      Visitor<EntityTokenUpdate, FAILURE> relationshipTypeUpdateVisitor,\n+                                                                      boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker);\n \n-    NodePropertyAccessor newPropertyAccessor( PageCursorTracer cursorTracer, MemoryTracker memoryTracker );\n+    NodePropertyAccessor newPropertyAccessor(PageCursorTracer cursorTracer, MemoryTracker memoryTracker);\n \n-    @SuppressWarnings( \"rawtypes\" )\n+    @SuppressWarnings(\"rawtypes\")\n     StoreScan EMPTY_SCAN = new StoreScan()\n     {\n         @Override\n@@ -86,8 +90,8 @@ public interface IndexStoreView\n         }\n \n         @Override\n-        public void acceptUpdate( MultipleIndexPopulator.MultipleIndexUpdater updater, IndexEntryUpdate update,\n-                long currentlyIndexedNodeId )\n+        public void acceptUpdate(MultipleIndexPopulator.MultipleIndexUpdater updater, IndexEntryUpdate update,\n+                                 long currentlyIndexedNodeId)\n         {\n         }\n \n@@ -104,26 +108,30 @@ public interface IndexStoreView\n \n     class Adaptor implements IndexStoreView\n     {\n-        @SuppressWarnings( \"unchecked\" )\n+        @SuppressWarnings(\"unchecked\")\n         @Override\n-        public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes( int[] labelIds,\n-                IntPredicate propertyKeyIdFilter, Visitor<EntityUpdates,FAILURE> propertyUpdateVisitor,\n-                Visitor<EntityTokenUpdate,FAILURE> labelUpdateVisitor, boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+        public <FAILURE extends Exception> StoreScan<FAILURE> visitNodes(int[] labelIds,\n+                                                                         IntPredicate propertyKeyIdFilter,\n+                                                                         Visitor<EntityUpdates, FAILURE> propertyUpdateVisitor,\n+                                                                         Visitor<EntityTokenUpdate, FAILURE> labelUpdateVisitor, boolean forceStoreScan,\n+                                                                         PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n         {\n             return EMPTY_SCAN;\n         }\n \n-        @SuppressWarnings( \"unchecked\" )\n+        @SuppressWarnings(\"unchecked\")\n         @Override\n-        public <FAILURE extends Exception> StoreScan<FAILURE> visitRelationships( int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter,\n-                Visitor<EntityUpdates,FAILURE> propertyUpdateVisitor, Visitor<EntityTokenUpdate,FAILURE> relationshipTypeUpdateVisitor,\n-                boolean forceStoreScan, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+        public <FAILURE extends Exception> StoreScan<FAILURE> visitRelationships(int[] relationshipTypeIds, IntPredicate propertyKeyIdFilter,\n+                                                                                 Visitor<EntityUpdates, FAILURE> propertyUpdateVisitor,\n+                                                                                 Visitor<EntityTokenUpdate, FAILURE> relationshipTypeUpdateVisitor,\n+                                                                                 boolean forceStoreScan, PageCursorTracer cursorTracer,\n+                                                                                 MemoryTracker memoryTracker)\n         {\n             return EMPTY_SCAN;\n         }\n \n         @Override\n-        public NodePropertyAccessor newPropertyAccessor( PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+        public NodePropertyAccessor newPropertyAccessor(PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n         {\n             return NodePropertyAccessor.EMPTY;\n         }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2890/IndexStoreView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2890/IndexStoreView.java\nindex 1b4ca9a519c..0646a184cf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2890/IndexStoreView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2890/IndexStoreView.java\n@@ -134,4 +134,4 @@ public interface IndexStoreView\n             return true;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
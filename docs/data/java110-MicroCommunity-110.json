{
    "project_name": "java110-MicroCommunity",
    "error_id": "110",
    "information": {
        "errors": [
            {
                "line": "65",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 214).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n\n        return rentingPoolFlows;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/110/RentingPoolFlowInnerServiceSMOImpl.java\nindex 17f17cb269c..37706168e79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/110/RentingPoolFlowInnerServiceSMOImpl.java\n@@ -61,8 +61,7 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n         if (page != PageDto.DEFAULT_PAGE) {\n             rentingPoolFlowDto.setPage((page - 1) * rentingPoolFlowDto.getRow());\n         }\n-\n-        List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n+    List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n \n         return rentingPoolFlows;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/110/RentingPoolFlowInnerServiceSMOImpl.java\nindex 17f17cb269c..74b72006416 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/110/RentingPoolFlowInnerServiceSMOImpl.java\n@@ -62,7 +62,9 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n             rentingPoolFlowDto.setPage((page - 1) * rentingPoolFlowDto.getRow());\n         }\n \n-        List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n+        List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil\n+            .covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)),\n+                RentingPoolFlowDto.class);\n \n         return rentingPoolFlows;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/110/RentingPoolFlowInnerServiceSMOImpl.java\nindex 17f17cb269c..c0d928b8e64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/110/RentingPoolFlowInnerServiceSMOImpl.java\n@@ -80,4 +80,4 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n     public void setRentingPoolFlowServiceDaoImpl(IRentingPoolFlowServiceDao rentingPoolFlowServiceDaoImpl) {\n         this.rentingPoolFlowServiceDaoImpl = rentingPoolFlowServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/110/RentingPoolFlowInnerServiceSMOImpl.java\nindex 17f17cb269c..f18822905a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/110/RentingPoolFlowInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.user.smo.impl;\n \n-\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.dto.PageDto;\n import com.java110.dto.rentingPoolFlow.RentingPoolFlowDto;\n@@ -11,7 +10,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,15 +20,19 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implements IRentingPoolFlowInnerServiceSMO {\n \n     @Autowired\n     private IRentingPoolFlowServiceDao rentingPoolFlowServiceDaoImpl;\n \n-\n     @Override\n     public int saveRentingPoolFlow(@RequestBody RentingPoolFlowPo rentingPoolFlowPo) {\n+\n+\n+\n         int saveFlag = 1;\n         rentingPoolFlowServiceDaoImpl.saveRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowPo));\n         return saveFlag;\n@@ -38,6 +40,9 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n \n     @Override\n     public int updateRentingPoolFlow(@RequestBody RentingPoolFlowPo rentingPoolFlowPo) {\n+\n+\n+\n         int saveFlag = 1;\n         rentingPoolFlowServiceDaoImpl.updateRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowPo));\n         return saveFlag;\n@@ -45,6 +50,9 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n \n     @Override\n     public int deleteRentingPoolFlow(@RequestBody RentingPoolFlowPo rentingPoolFlowPo) {\n+\n+\n+\n         int saveFlag = 1;\n         rentingPoolFlowPo.setStatusCd(\"1\");\n         rentingPoolFlowServiceDaoImpl.updateRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowPo));\n@@ -56,18 +64,17 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = rentingPoolFlowDto.getPage();\n \n+\n+        int page = rentingPoolFlowDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             rentingPoolFlowDto.setPage((page - 1) * rentingPoolFlowDto.getRow());\n         }\n \n         List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n-\n         return rentingPoolFlows;\n     }\n \n-\n     @Override\n     public int queryRentingPoolFlowsCount(@RequestBody RentingPoolFlowDto rentingPoolFlowDto) {\n         return rentingPoolFlowServiceDaoImpl.queryRentingPoolFlowsCount(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto));\n@@ -80,4 +87,4 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n     public void setRentingPoolFlowServiceDaoImpl(IRentingPoolFlowServiceDao rentingPoolFlowServiceDaoImpl) {\n         this.rentingPoolFlowServiceDaoImpl = rentingPoolFlowServiceDaoImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/110/RentingPoolFlowInnerServiceSMOImpl.java\nindex 17f17cb269c..c92feb02655 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/110/RentingPoolFlowInnerServiceSMOImpl.java\n@@ -60,9 +60,7 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             rentingPoolFlowDto.setPage((page - 1) * rentingPoolFlowDto.getRow());\n-        }\n-\n-        List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n+        }List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n \n         return rentingPoolFlows;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/110/RentingPoolFlowInnerServiceSMOImpl.java\nindex 17f17cb269c..37706168e79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/110/RentingPoolFlowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/110/RentingPoolFlowInnerServiceSMOImpl.java\n@@ -61,8 +61,7 @@ public class RentingPoolFlowInnerServiceSMOImpl extends BaseServiceSMO implement\n         if (page != PageDto.DEFAULT_PAGE) {\n             rentingPoolFlowDto.setPage((page - 1) * rentingPoolFlowDto.getRow());\n         }\n-\n-        List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n+    List<RentingPoolFlowDto> rentingPoolFlows = BeanConvertUtil.covertBeanList(rentingPoolFlowServiceDaoImpl.getRentingPoolFlowInfo(BeanConvertUtil.beanCovertMap(rentingPoolFlowDto)), RentingPoolFlowDto.class);\n \n         return rentingPoolFlows;\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "588",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "486",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "511",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "514",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "565",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "578",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "628",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "628",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "682",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "719",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "738",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "752",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "761",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "771",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "788",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "788",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "866",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "866",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "872",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "872",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "900",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "900",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "904",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "904",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "918",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "918",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "941",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "941",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "953",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "953",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "966",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "966",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "985",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "985",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1008",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1008",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1010",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1010",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1015",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1015",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1034",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1034",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1044",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1044",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1046",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1046",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1057",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1057",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1064",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1064",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1082",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1082",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1086",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1092",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1092",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1106",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1106",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1112",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1112",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1122",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1125",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1131",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1131",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1134",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1134",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1139",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1150",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1150",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1152",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1162",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1162",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1167",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1167",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1175",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1180",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1185",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1185",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1188",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1193",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1193",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1198",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1198",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1201",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1209",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1212",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1212",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1219",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1220",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1225",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1226",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1228",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1228",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1237",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1237",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1239",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1239",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1251",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1258",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1258",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1263",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1263",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1269",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1269",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1275",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1275",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1281",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1281",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1297",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1297",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1301",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1305",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1305",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1309",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1309",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1313",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1313",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1317",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1317",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1321",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1321",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1325",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1325",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1335",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1335",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1341",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1341",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1352",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1352",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1358",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1358",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1369",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1369",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1375",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1375",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1386",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1386",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1392",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1392",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1398",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1398",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1413",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1413",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1415",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1415",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1417",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1417",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1427",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1427",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1441",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1441",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1443",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1443",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1447",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1447",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1449",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1449",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1451",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1451",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1461",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1461",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/588/TxState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/588/TxState.java\nindex a464b89c289..5fdd243a7a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/588/TxState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/588/TxState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import java.util.HashMap;\n@@ -96,1381 +97,1370 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n  */\n public class TxState implements TransactionState, RelationshipVisitor.Home\n {\n-    /**\n-     * This factory must be used only for creating collections representing internal state that doesn't leak outside this class.\n-     */\n-    private final CollectionsFactory collectionsFactory;\n-\n-    private PrimitiveIntObjectMap<DiffSets<Long>> labelStatesMap;\n-    private PrimitiveLongObjectMap<NodeStateImpl> nodeStatesMap;\n-    private PrimitiveLongObjectMap<RelationshipStateImpl> relationshipStatesMap;\n-\n-    private static final ValueTuple MAX_STRING_TUPLE = ValueTuple.of( Values.MAX_STRING );\n-\n-    private PrimitiveIntObjectMap<String> createdLabelTokens;\n-    private PrimitiveIntObjectMap<String> createdPropertyKeyTokens;\n-    private PrimitiveIntObjectMap<String> createdRelationshipTypeTokens;\n-\n-    private GraphState graphState;\n-\n-    /**\n-     * The {@link SchemaIndexDescriptor} keys in {@link #indexChanges} have a corresponding entry in {@link #specificIndexProviders},\n-     * but may have been set there in cases where the default is to be used (which is the typical case). Keep these two in sync.\n-     */\n-    private DiffSets<SchemaIndexDescriptor> indexChanges;\n-    private Map<SchemaIndexDescriptor,IndexProvider.Descriptor> specificIndexProviders;\n-\n-    private DiffSets<ConstraintDescriptor> constraintsChanges;\n-\n-    private RemovalsCountingDiffSets nodes;\n-    private RemovalsCountingRelationshipsDiffSets relationships;\n-\n-    private Map<IndexBackedConstraintDescriptor, Long> createdConstraintIndexesByConstraint;\n-\n-    private Map<SchemaDescriptor,Map<ValueTuple,PrimitiveLongDiffSets>> indexUpdates;\n-\n-    private InstanceCache<TxSingleNodeCursor> singleNodeCursor;\n-    private InstanceCache<TxIteratorRelationshipCursor> iteratorRelationshipCursor;\n-    private InstanceCache<TxSingleRelationshipCursor> singleRelationshipCursor;\n-    private InstanceCache<TxAllPropertyCursor> propertyCursor;\n-    private InstanceCache<TxSinglePropertyCursor> singlePropertyCursor;\n-\n-    private boolean hasChanges;\n-    private boolean hasDataChanges;\n-\n-    public TxState()\n-    {\n-        this( OnHeapCollectionsFactory.INSTANCE );\n-    }\n-\n-    public TxState( CollectionsFactory collectionsFactory )\n-    {\n-        this.collectionsFactory = collectionsFactory;\n-        singleNodeCursor = new InstanceCache<TxSingleNodeCursor>()\n-        {\n-            @Override\n-            protected TxSingleNodeCursor create()\n-            {\n-                return new TxSingleNodeCursor( TxState.this, this );\n-            }\n-        };\n-        propertyCursor = new InstanceCache<TxAllPropertyCursor>()\n-        {\n-            @Override\n-            protected TxAllPropertyCursor create()\n-            {\n-                return new TxAllPropertyCursor( (Consumer) this );\n-            }\n-        };\n-        singlePropertyCursor = new InstanceCache<TxSinglePropertyCursor>()\n-        {\n-            @Override\n-            protected TxSinglePropertyCursor create()\n-            {\n-                return new TxSinglePropertyCursor( (Consumer) this );\n-            }\n-        };\n-        singleRelationshipCursor = new InstanceCache<TxSingleRelationshipCursor>()\n-        {\n-            @Override\n-            protected TxSingleRelationshipCursor create()\n-            {\n-                return new TxSingleRelationshipCursor( TxState.this, this );\n-            }\n-        };\n-\n-        iteratorRelationshipCursor = new InstanceCache<TxIteratorRelationshipCursor>()\n-        {\n-            @Override\n-            protected TxIteratorRelationshipCursor create()\n-            {\n-                return new TxIteratorRelationshipCursor( TxState.this, this );\n-            }\n-        };\n-    }\n-\n-    @Override\n-    public void accept( final TxStateVisitor visitor )\n-            throws ConstraintValidationException, CreateConstraintFailureException\n-    {\n-        // Created nodes\n-        if ( nodes != null )\n-        {\n-            nodes.accept( createdNodesVisitor( visitor ) );\n-        }\n+  /**\n+   * This factory must be used only for creating collections representing internal state that doesn't leak outside this class.\n+   */\n+  private final CollectionsFactory collectionsFactory;\n+\n+  private PrimitiveIntObjectMap<DiffSets<Long>> labelStatesMap;\n+  private PrimitiveLongObjectMap<NodeStateImpl> nodeStatesMap;\n+  private PrimitiveLongObjectMap<RelationshipStateImpl> relationshipStatesMap;\n+\n+  private static final ValueTuple MAX_STRING_TUPLE = ValueTuple.of(Values.MAX_STRING);\n+\n+  private PrimitiveIntObjectMap<String> createdLabelTokens;\n+  private PrimitiveIntObjectMap<String> createdPropertyKeyTokens;\n+  private PrimitiveIntObjectMap<String> createdRelationshipTypeTokens;\n \n-        if ( relationships != null )\n-        {\n-            // Created relationships\n-            relationships.accept( createdRelationshipsVisitor( this, visitor ) );\n+  private GraphState graphState;\n \n-            // Deleted relationships\n-            relationships.accept( deletedRelationshipsVisitor( visitor ) );\n-        }\n+  /**\n+   * The {@link SchemaIndexDescriptor} keys in {@link #indexChanges} have a corresponding entry in {@link #specificIndexProviders},\n+   * but may have been set there in cases where the default is to be used (which is the typical case). Keep these two in sync.\n+   */\n+  private DiffSets<SchemaIndexDescriptor> indexChanges;\n+  private Map<SchemaIndexDescriptor, IndexProvider.Descriptor> specificIndexProviders;\n \n-        // Deleted nodes\n-        if ( nodes != null )\n-        {\n-            nodes.accept( deletedNodesVisitor( visitor ) );\n-        }\n+  private DiffSets<ConstraintDescriptor> constraintsChanges;\n \n-        for ( NodeState node : modifiedNodes() )\n-        {\n-            node.accept( nodeVisitor( visitor ) );\n-        }\n+  private RemovalsCountingDiffSets nodes;\n+  private RemovalsCountingRelationshipsDiffSets relationships;\n \n-        for ( RelationshipState rel : modifiedRelationships() )\n-        {\n-            rel.accept( relVisitor( visitor ) );\n-        }\n+  private Map<IndexBackedConstraintDescriptor, Long> createdConstraintIndexesByConstraint;\n \n-        if ( graphState != null )\n-        {\n-            graphState.accept( graphPropertyVisitor( visitor ) );\n-        }\n+  private Map<SchemaDescriptor, Map<ValueTuple, PrimitiveLongDiffSets>> indexUpdates;\n \n-        if ( indexChanges != null )\n-        {\n-            indexChanges.accept( indexVisitor( visitor ) );\n-        }\n+  private InstanceCache<TxSingleNodeCursor> singleNodeCursor;\n+  private InstanceCache<TxIteratorRelationshipCursor> iteratorRelationshipCursor;\n+  private InstanceCache<TxSingleRelationshipCursor> singleRelationshipCursor;\n+  private InstanceCache<TxAllPropertyCursor> propertyCursor;\n+  private InstanceCache<TxSinglePropertyCursor> singlePropertyCursor;\n \n-        if ( constraintsChanges != null )\n-        {\n-            constraintsChanges.accept( constraintsVisitor( visitor ) );\n-        }\n-\n-        if ( createdLabelTokens != null )\n-        {\n-            createdLabelTokens.visitEntries( new LabelTokenStateVisitor( visitor ) );\n-        }\n-\n-        if ( createdPropertyKeyTokens != null )\n-        {\n-            createdPropertyKeyTokens.visitEntries( new PropertyKeyTokenStateVisitor( visitor ) );\n-        }\n+  private boolean hasChanges;\n+  private boolean hasDataChanges;\n \n-        if ( createdRelationshipTypeTokens != null )\n-        {\n-            createdRelationshipTypeTokens.visitEntries( new RelationshipTypeTokenStateVisitor( visitor ) );\n-        }\n-    }\n-\n-    private static DiffSetsVisitor<Long> deletedNodesVisitor( final TxStateVisitor visitor )\n-    {\n-        return new DiffSetsVisitor.Adapter<Long>()\n-        {\n-            @Override\n-            public void visitRemoved( Long element )\n-            {\n-                visitor.visitDeletedNode( element );\n-            }\n-        };\n-    }\n+  public TxState()\n+  {\n+    this(OnHeapCollectionsFactory.INSTANCE);\n+  }\n \n-    private static DiffSetsVisitor<Long> createdNodesVisitor( final TxStateVisitor visitor )\n+  public TxState(CollectionsFactory collectionsFactory)\n+  {\n+    this.collectionsFactory = collectionsFactory;\n+    singleNodeCursor = new InstanceCache<TxSingleNodeCursor>()\n     {\n-        return new DiffSetsVisitor.Adapter<Long>()\n-        {\n-            @Override\n-            public void visitAdded( Long element )\n-            {\n-                visitor.visitCreatedNode( element );\n-            }\n-        };\n-    }\n-\n-    private static DiffSetsVisitor<Long> deletedRelationshipsVisitor( final TxStateVisitor visitor )\n+      @Override\n+      protected TxSingleNodeCursor create()\n+      {\n+        return new TxSingleNodeCursor(TxState.this, this);\n+      }\n+    };\n+    propertyCursor = new InstanceCache<TxAllPropertyCursor>()\n     {\n-        return new DiffSetsVisitor.Adapter<Long>()\n-        {\n-            @Override\n-            public void visitRemoved( Long id )\n-            {\n-                visitor.visitDeletedRelationship( id );\n-            }\n-        };\n-    }\n-\n-    private static DiffSetsVisitor<Long> createdRelationshipsVisitor( ReadableTransactionState tx, final TxStateVisitor visitor )\n+      @Override\n+      protected TxAllPropertyCursor create()\n+      {\n+        return new TxAllPropertyCursor((Consumer) this);\n+      }\n+    };\n+    singlePropertyCursor = new InstanceCache<TxSinglePropertyCursor>()\n     {\n-        return new RelationshipChangeVisitorAdapter( tx )\n-        {\n-            @Override\n-            protected void visitAddedRelationship( long relationshipId, int type, long startNode, long endNode )\n-                    throws ConstraintValidationException\n-            {\n-                visitor.visitCreatedRelationship( relationshipId, type, startNode, endNode );\n-            }\n-        };\n-    }\n-\n-    private static DiffSetsVisitor<ConstraintDescriptor> constraintsVisitor( final TxStateVisitor visitor )\n+      @Override\n+      protected TxSinglePropertyCursor create()\n+      {\n+        return new TxSinglePropertyCursor((Consumer) this);\n+      }\n+    };\n+    singleRelationshipCursor = new InstanceCache<TxSingleRelationshipCursor>()\n     {\n-        return new ConstraintDiffSetsVisitor( visitor );\n-    }\n+      @Override\n+      protected TxSingleRelationshipCursor create()\n+      {\n+        return new TxSingleRelationshipCursor(TxState.this, this);\n+      }\n+    };\n \n-    private DiffSetsVisitor<SchemaIndexDescriptor> indexVisitor( final TxStateVisitor visitor )\n+    iteratorRelationshipCursor = new InstanceCache<TxIteratorRelationshipCursor>()\n     {\n-        return new DiffSetsVisitor<SchemaIndexDescriptor>()\n-        {\n-            @Override\n-            public void visitAdded( SchemaIndexDescriptor index )\n-            {\n-                visitor.visitAddedIndex( index, specificIndexProviders.get( index ) );\n-            }\n-\n-            @Override\n-            public void visitRemoved( SchemaIndexDescriptor index )\n-            {\n-                visitor.visitRemovedIndex( index );\n-            }\n-        };\n-    }\n+      @Override\n+      protected TxIteratorRelationshipCursor create()\n+      {\n+        return new TxIteratorRelationshipCursor(TxState.this, this);\n+      }\n+    };\n+  }\n \n-    private static NodeState.Visitor nodeVisitor( final TxStateVisitor visitor )\n+  @Override\n+  public void accept(final TxStateVisitor visitor)\n+      throws ConstraintValidationException, CreateConstraintFailureException\n+  {\n+    // Created nodes\n+    if (nodes != null)\n     {\n-        return new NodeState.Visitor()\n-        {\n-            @Override\n-            public void visitLabelChanges( long nodeId, Set<Integer> added, Set<Integer> removed )\n-                    throws ConstraintValidationException\n-            {\n-                visitor.visitNodeLabelChanges( nodeId, added, removed );\n-            }\n-\n-            @Override\n-            public void visitPropertyChanges( long entityId, Iterator<StorageProperty> added,\n-                    Iterator<StorageProperty> changed, Iterator<Integer> removed )\n-                    throws ConstraintValidationException\n-            {\n-                visitor.visitNodePropertyChanges( entityId, added, changed, removed );\n-            }\n-        };\n+      nodes.accept(createdNodesVisitor(visitor));\n     }\n \n-    private static PropertyContainerState.Visitor relVisitor( final TxStateVisitor visitor )\n+    if (relationships != null)\n     {\n-        return visitor::visitRelPropertyChanges;\n-    }\n+      // Created relationships\n+      relationships.accept(createdRelationshipsVisitor(this, visitor));\n \n-    private static PropertyContainerState.Visitor graphPropertyVisitor( final TxStateVisitor visitor )\n-    {\n-        return ( entityId, added, changed, removed ) -> visitor.visitGraphPropertyChanges( added, changed, removed );\n+      // Deleted relationships\n+      relationships.accept(deletedRelationshipsVisitor(visitor));\n     }\n \n-    @Override\n-    public boolean hasChanges()\n+    // Deleted nodes\n+    if (nodes != null)\n     {\n-        return hasChanges;\n+      nodes.accept(deletedNodesVisitor(visitor));\n     }\n \n-    @Override\n-    public Iterable<NodeState> modifiedNodes()\n+    for (NodeState node : modifiedNodes())\n     {\n-        return nodeStatesMap == null ? Iterables.empty() : Iterables.cast( nodeStatesMap.values() );\n+      node.accept(nodeVisitor(visitor));\n     }\n \n-    private DiffSets<Long> getOrCreateLabelStateNodeDiffSets( int labelId )\n+    for (RelationshipState rel : modifiedRelationships())\n     {\n-        if ( labelStatesMap == null )\n-        {\n-            labelStatesMap = collectionsFactory.newIntObjectMap();\n-        }\n-        return labelStatesMap.computeIfAbsent( labelId, unused -> new DiffSets<>() );\n+      rel.accept(relVisitor(visitor));\n     }\n \n-    private ReadableDiffSets<Long> getLabelStateNodeDiffSets( int labelId )\n+    if (graphState != null)\n     {\n-        if ( labelStatesMap == null )\n-        {\n-            return ReadableDiffSets.Empty.instance();\n-        }\n-        final DiffSets<Long> nodeDiffSets = labelStatesMap.get( labelId );\n-        return ReadableDiffSets.Empty.ifNull( nodeDiffSets );\n+      graphState.accept(graphPropertyVisitor(visitor));\n     }\n \n-    @Override\n-    public ReadableDiffSets<Integer> nodeStateLabelDiffSets( long nodeId )\n+    if (indexChanges != null)\n     {\n-        return getNodeState( nodeId ).labelDiffSets();\n+      indexChanges.accept(indexVisitor(visitor));\n     }\n \n-    private DiffSets<Integer> getOrCreateNodeStateLabelDiffSets( long nodeId )\n+    if (constraintsChanges != null)\n     {\n-        return getOrCreateNodeState( nodeId ).getOrCreateLabelDiffSets();\n+      constraintsChanges.accept(constraintsVisitor(visitor));\n     }\n \n-    @Override\n-    public Iterator<StorageProperty> augmentGraphProperties( Iterator<StorageProperty> original )\n+    if (createdLabelTokens != null)\n     {\n-        if ( graphState != null )\n-        {\n-            return graphState.augmentProperties( original );\n-        }\n-        return original;\n+      createdLabelTokens.visitEntries(new LabelTokenStateVisitor(visitor));\n     }\n \n-    @Override\n-    public boolean nodeIsAddedInThisTx( long nodeId )\n+    if (createdPropertyKeyTokens != null)\n     {\n-        return nodes != null && nodes.isAdded( nodeId );\n+      createdPropertyKeyTokens.visitEntries(new PropertyKeyTokenStateVisitor(visitor));\n     }\n \n-    @Override\n-    public boolean relationshipIsAddedInThisTx( long relationshipId )\n+    if (createdRelationshipTypeTokens != null)\n     {\n-        return relationships != null && relationships.isAdded( relationshipId );\n+      createdRelationshipTypeTokens.visitEntries(new RelationshipTypeTokenStateVisitor(visitor));\n     }\n+  }\n \n-    private void changed()\n+  private static DiffSetsVisitor<Long> deletedNodesVisitor(final TxStateVisitor visitor)\n+  {\n+    return new DiffSetsVisitor.Adapter<Long>()\n     {\n-        hasChanges = true;\n-    }\n+      @Override\n+      public void visitRemoved(Long element)\n+      {\n+        visitor.visitDeletedNode(element);\n+      }\n+    };\n+  }\n \n-    private void dataChanged()\n+  private static DiffSetsVisitor<Long> createdNodesVisitor(final TxStateVisitor visitor)\n+  {\n+    return new DiffSetsVisitor.Adapter<Long>()\n     {\n-        changed();\n-        hasDataChanges = true;\n-    }\n+      @Override\n+      public void visitAdded(Long element)\n+      {\n+        visitor.visitCreatedNode(element);\n+      }\n+    };\n+  }\n \n-    @Override\n-    public void nodeDoCreate( long id )\n+  private static DiffSetsVisitor<Long> deletedRelationshipsVisitor(final TxStateVisitor visitor)\n+  {\n+    return new DiffSetsVisitor.Adapter<Long>()\n     {\n-        nodes().add( id );\n-        dataChanged();\n-    }\n+      @Override\n+      public void visitRemoved(Long id)\n+      {\n+        visitor.visitDeletedRelationship(id);\n+      }\n+    };\n+  }\n \n-    @Override\n-    public void nodeDoDelete( long nodeId )\n+  private static DiffSetsVisitor<Long> createdRelationshipsVisitor(ReadableTransactionState tx, final TxStateVisitor visitor)\n+  {\n+    return new RelationshipChangeVisitorAdapter(tx)\n     {\n-        nodes().remove( nodeId );\n+      @Override\n+      protected void visitAddedRelationship(long relationshipId, int type, long startNode, long endNode)\n+          throws ConstraintValidationException\n+      {\n+        visitor.visitCreatedRelationship(relationshipId, type, startNode, endNode);\n+      }\n+    };\n+  }\n \n-        if ( nodeStatesMap != null )\n-        {\n-            NodeStateImpl nodeState = nodeStatesMap.remove( nodeId );\n-            if ( nodeState != null )\n-            {\n-                ReadableDiffSets<Integer> diff = nodeState.labelDiffSets();\n-                for ( Integer label : diff.getAdded() )\n-                {\n-                    getOrCreateLabelStateNodeDiffSets( label ).remove( nodeId );\n-                }\n-                nodeState.clearIndexDiffs( nodeId );\n-                nodeState.clear();\n-            }\n-        }\n-        dataChanged();\n-    }\n+  private static DiffSetsVisitor<ConstraintDescriptor> constraintsVisitor(final TxStateVisitor visitor)\n+  {\n+    return new ConstraintDiffSetsVisitor(visitor);\n+  }\n \n-    @Override\n-    public void relationshipDoCreate( long id, int relationshipTypeId, long startNodeId, long endNodeId )\n+  private DiffSetsVisitor<SchemaIndexDescriptor> indexVisitor(final TxStateVisitor visitor)\n+  {\n+    return new DiffSetsVisitor<SchemaIndexDescriptor>()\n     {\n-        relationships().add( id );\n+      @Override\n+      public void visitAdded(SchemaIndexDescriptor index)\n+      {\n+        visitor.visitAddedIndex(index, specificIndexProviders.get(index));\n+      }\n \n-        if ( startNodeId == endNodeId )\n-        {\n-            getOrCreateNodeState( startNodeId ).addRelationship( id, relationshipTypeId, Direction.BOTH );\n-        }\n-        else\n-        {\n-            getOrCreateNodeState( startNodeId ).addRelationship( id, relationshipTypeId, Direction.OUTGOING );\n-            getOrCreateNodeState( endNodeId ).addRelationship( id, relationshipTypeId, Direction.INCOMING );\n-        }\n+      @Override\n+      public void visitRemoved(SchemaIndexDescriptor index)\n+      {\n+        visitor.visitRemovedIndex(index);\n+      }\n+    };\n+  }\n \n-        getOrCreateRelationshipState( id ).setMetaData( startNodeId, endNodeId, relationshipTypeId );\n+  private static NodeState.Visitor nodeVisitor(final TxStateVisitor visitor)\n+  {\n+    return new NodeState.Visitor()\n+    {\n+      @Override\n+      public void visitLabelChanges(long nodeId, Set<Integer> added, Set<Integer> removed)\n+          throws ConstraintValidationException\n+      {\n+        visitor.visitNodeLabelChanges(nodeId, added, removed);\n+      }\n+\n+      @Override\n+      public void visitPropertyChanges(long entityId, Iterator<StorageProperty> added,\n+                                       Iterator<StorageProperty> changed, Iterator<Integer> removed)\n+          throws ConstraintValidationException\n+      {\n+        visitor.visitNodePropertyChanges(entityId, added, changed, removed);\n+      }\n+    };\n+  }\n+\n+  private static PropertyContainerState.Visitor relVisitor(final TxStateVisitor visitor)\n+  {\n+    return visitor::visitRelPropertyChanges;\n+  }\n+\n+  private static PropertyContainerState.Visitor graphPropertyVisitor(final TxStateVisitor visitor)\n+  {\n+    return (entityId, added, changed, removed) -> visitor.visitGraphPropertyChanges(added, changed, removed);\n+  }\n+\n+  @Override\n+  public boolean hasChanges()\n+  {\n+    return hasChanges;\n+  }\n+\n+  @Override\n+  public Iterable<NodeState> modifiedNodes()\n+  {\n+    return nodeStatesMap == null ? Iterables.empty() : Iterables.cast(nodeStatesMap.values());\n+  }\n+\n+  private DiffSets<Long> getOrCreateLabelStateNodeDiffSets(int labelId)\n+  {\n+    if (labelStatesMap == null)\n+    {\n+      labelStatesMap = collectionsFactory.newIntObjectMap();\n+    }\n+    return labelStatesMap.computeIfAbsent(labelId, unused -> new DiffSets<>());\n+  }\n+\n+  private ReadableDiffSets<Long> getLabelStateNodeDiffSets(int labelId)\n+  {\n+    if (labelStatesMap == null)\n+    {\n+      return ReadableDiffSets.Empty.instance();\n+    }\n+    final DiffSets<Long> nodeDiffSets = labelStatesMap.get(labelId);\n+    return ReadableDiffSets.Empty.ifNull(nodeDiffSets);\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<Integer> nodeStateLabelDiffSets(long nodeId)\n+  {\n+    return getNodeState(nodeId).labelDiffSets();\n+  }\n+\n+  private DiffSets<Integer> getOrCreateNodeStateLabelDiffSets(long nodeId)\n+  {\n+    return getOrCreateNodeState(nodeId).getOrCreateLabelDiffSets();\n+  }\n+\n+  @Override\n+  public Iterator<StorageProperty> augmentGraphProperties(Iterator<StorageProperty> original)\n+  {\n+    if (graphState != null)\n+    {\n+      return graphState.augmentProperties(original);\n+    }\n+    return original;\n+  }\n+\n+  @Override\n+  public boolean nodeIsAddedInThisTx(long nodeId)\n+  {\n+    return nodes != null && nodes.isAdded(nodeId);\n+  }\n+\n+  @Override\n+  public boolean relationshipIsAddedInThisTx(long relationshipId)\n+  {\n+    return relationships != null && relationships.isAdded(relationshipId);\n+  }\n+\n+  private void changed()\n+  {\n+    hasChanges = true;\n+  }\n+\n+  private void dataChanged()\n+  {\n+    changed();\n+    hasDataChanges = true;\n+  }\n+\n+  @Override\n+  public void nodeDoCreate(long id)\n+  {\n+    nodes().add(id);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void nodeDoDelete(long nodeId)\n+  {\n+    nodes().remove(nodeId);\n+\n+    if (nodeStatesMap != null)\n+    {\n+      NodeStateImpl nodeState = nodeStatesMap.remove(nodeId);\n+      if (nodeState != null)\n+      {\n+        ReadableDiffSets<Integer> diff = nodeState.labelDiffSets();\n+        for (Integer label : diff.getAdded())\n+        {\n+          getOrCreateLabelStateNodeDiffSets(label).remove(nodeId);\n+        }\n+        nodeState.clearIndexDiffs(nodeId);\n+        nodeState.clear();\n+      }\n+    }\n+    dataChanged();\n+  }\n \n-        dataChanged();\n-    }\n+  @Override\n+  public void relationshipDoCreate(long id, int relationshipTypeId, long startNodeId, long endNodeId)\n+  {\n+    relationships().add(id);\n \n-    @Override\n-    public boolean nodeIsDeletedInThisTx( long nodeId )\n+    if (startNodeId == endNodeId)\n     {\n-        return nodes != null && nodes.wasRemoved( nodeId );\n-    }\n-\n-    @Override\n-    public boolean nodeModifiedInThisTx( long nodeId )\n+      getOrCreateNodeState(startNodeId).addRelationship(id, relationshipTypeId, Direction.BOTH);\n+    } else\n     {\n-        return nodeIsAddedInThisTx( nodeId ) || nodeIsDeletedInThisTx( nodeId ) || hasNodeState( nodeId );\n+      getOrCreateNodeState(startNodeId).addRelationship(id, relationshipTypeId, Direction.OUTGOING);\n+      getOrCreateNodeState(endNodeId).addRelationship(id, relationshipTypeId, Direction.INCOMING);\n     }\n \n-    @Override\n-    public void relationshipDoDelete( long id, int type, long startNodeId, long endNodeId )\n-    {\n-        relationships().remove( id );\n-\n-        if ( startNodeId == endNodeId )\n-        {\n-            getOrCreateNodeState( startNodeId ).removeRelationship( id, type, Direction.BOTH );\n-        }\n-        else\n-        {\n-            getOrCreateNodeState( startNodeId ).removeRelationship( id, type, Direction.OUTGOING );\n-            getOrCreateNodeState( endNodeId ).removeRelationship( id, type, Direction.INCOMING );\n-        }\n-\n-        if ( relationshipStatesMap != null )\n-        {\n-            RelationshipStateImpl removed = relationshipStatesMap.remove( id );\n-            if ( removed != null )\n-            {\n-                removed.clear();\n-            }\n-        }\n+    getOrCreateRelationshipState(id).setMetaData(startNodeId, endNodeId, relationshipTypeId);\n \n-        dataChanged();\n-    }\n+    dataChanged();\n+  }\n \n-    @Override\n-    public void relationshipDoDeleteAddedInThisTx( long relationshipId )\n-    {\n-        getRelationshipState( relationshipId ).accept( this::relationshipDoDelete );\n-    }\n+  @Override\n+  public boolean nodeIsDeletedInThisTx(long nodeId)\n+  {\n+    return nodes != null && nodes.wasRemoved(nodeId);\n+  }\n+\n+  @Override\n+  public boolean nodeModifiedInThisTx(long nodeId)\n+  {\n+    return nodeIsAddedInThisTx(nodeId) || nodeIsDeletedInThisTx(nodeId) || hasNodeState(nodeId);\n+  }\n+\n+  @Override\n+  public void relationshipDoDelete(long id, int type, long startNodeId, long endNodeId)\n+  {\n+    relationships().remove(id);\n+\n+    if (startNodeId == endNodeId)\n+    {\n+      getOrCreateNodeState(startNodeId).removeRelationship(id, type, Direction.BOTH);\n+    } else\n+    {\n+      getOrCreateNodeState(startNodeId).removeRelationship(id, type, Direction.OUTGOING);\n+      getOrCreateNodeState(endNodeId).removeRelationship(id, type, Direction.INCOMING);\n+    }\n+\n+    if (relationshipStatesMap != null)\n+    {\n+      RelationshipStateImpl removed = relationshipStatesMap.remove(id);\n+      if (removed != null)\n+      {\n+        removed.clear();\n+      }\n+    }\n+\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void relationshipDoDeleteAddedInThisTx(long relationshipId)\n+  {\n+    getRelationshipState(relationshipId).accept(this::relationshipDoDelete);\n+  }\n+\n+  @Override\n+  public boolean relationshipIsDeletedInThisTx(long relationshipId)\n+  {\n+    return relationships != null && relationships.wasRemoved(relationshipId);\n+  }\n+\n+  @Override\n+  public void nodeDoAddProperty(long nodeId, int newPropertyKeyId, Value value)\n+  {\n+    NodeStateImpl nodeState = getOrCreateNodeState(nodeId);\n+    nodeState.addProperty(newPropertyKeyId, value);\n+    dataChanged();\n+  }\n \n-    @Override\n-    public boolean relationshipIsDeletedInThisTx( long relationshipId )\n+  @Override\n+  public void nodeDoChangeProperty(long nodeId, int propertyKeyId, Value replacedValue, Value newValue)\n+  {\n+    getOrCreateNodeState(nodeId).changeProperty(propertyKeyId, newValue);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void relationshipDoReplaceProperty(long relationshipId, int propertyKeyId, Value replacedValue,\n+                                            Value newValue)\n+  {\n+    if (replacedValue != NO_VALUE)\n     {\n-        return relationships != null && relationships.wasRemoved( relationshipId );\n-    }\n-\n-    @Override\n-    public void nodeDoAddProperty( long nodeId, int newPropertyKeyId, Value value )\n+      getOrCreateRelationshipState(relationshipId).changeProperty(propertyKeyId, newValue);\n+    } else\n     {\n-        NodeStateImpl nodeState = getOrCreateNodeState( nodeId );\n-        nodeState.addProperty( newPropertyKeyId, value );\n-        dataChanged();\n-    }\n-\n-    @Override\n-    public void nodeDoChangeProperty( long nodeId, int propertyKeyId, Value replacedValue, Value newValue )\n+      getOrCreateRelationshipState(relationshipId).addProperty(propertyKeyId, newValue);\n+    }\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void graphDoReplaceProperty(int propertyKeyId, Value replacedValue, Value newValue)\n+  {\n+    if (replacedValue != NO_VALUE)\n     {\n-        getOrCreateNodeState( nodeId ).changeProperty( propertyKeyId, newValue );\n-        dataChanged();\n-    }\n+      getOrCreateGraphState().changeProperty(propertyKeyId, newValue);\n+    } else\n+    {\n+      getOrCreateGraphState().addProperty(propertyKeyId, newValue);\n+    }\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void nodeDoRemoveProperty(long nodeId, int propertyKeyId)\n+  {\n+    getOrCreateNodeState(nodeId).removeProperty(propertyKeyId);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void relationshipDoRemoveProperty(long relationshipId, int propertyKeyId)\n+  {\n+    getOrCreateRelationshipState(relationshipId).removeProperty(propertyKeyId);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void graphDoRemoveProperty(int propertyKeyId)\n+  {\n+    getOrCreateGraphState().removeProperty(propertyKeyId);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void nodeDoAddLabel(int labelId, long nodeId)\n+  {\n+    getOrCreateLabelStateNodeDiffSets(labelId).add(nodeId);\n+    getOrCreateNodeStateLabelDiffSets(nodeId).add(labelId);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void nodeDoRemoveLabel(int labelId, long nodeId)\n+  {\n+    getOrCreateLabelStateNodeDiffSets(labelId).remove(nodeId);\n+    getOrCreateNodeStateLabelDiffSets(nodeId).remove(labelId);\n+    dataChanged();\n+  }\n+\n+  @Override\n+  public void labelDoCreateForName(String labelName, int id)\n+  {\n+    if (createdLabelTokens == null)\n+    {\n+      createdLabelTokens = collectionsFactory.newIntObjectMap();\n+    }\n+    createdLabelTokens.put(id, labelName);\n+    changed();\n+  }\n+\n+  @Override\n+  public void propertyKeyDoCreateForName(String propertyKeyName, int id)\n+  {\n+    if (createdPropertyKeyTokens == null)\n+    {\n+      createdPropertyKeyTokens = collectionsFactory.newIntObjectMap();\n+    }\n+    createdPropertyKeyTokens.put(id, propertyKeyName);\n+    changed();\n+  }\n+\n+  @Override\n+  public void relationshipTypeDoCreateForName(String labelName, int id)\n+  {\n+    if (createdRelationshipTypeTokens == null)\n+    {\n+      createdRelationshipTypeTokens = collectionsFactory.newIntObjectMap();\n+    }\n+    createdRelationshipTypeTokens.put(id, labelName);\n+    changed();\n+  }\n+\n+  @Override\n+  public NodeState getNodeState(long id)\n+  {\n+    if (nodeStatesMap == null)\n+    {\n+      return NodeStateImpl.EMPTY;\n+    }\n+    final NodeState nodeState = nodeStatesMap.get(id);\n+    return nodeState == null ? NodeStateImpl.EMPTY : nodeState;\n+  }\n+\n+  @Override\n+  public RelationshipState getRelationshipState(long id)\n+  {\n+    if (relationshipStatesMap == null)\n+    {\n+      return RelationshipStateImpl.EMPTY;\n+    }\n+    final RelationshipStateImpl relationshipState = relationshipStatesMap.get(id);\n+    return relationshipState == null ? RelationshipStateImpl.EMPTY : relationshipState;\n+  }\n+\n+  @Override\n+  public GraphState getGraphState()\n+  {\n+    return graphState;\n+  }\n+\n+  @Override\n+  public Cursor<NodeItem> augmentSingleNodeCursor(Cursor<NodeItem> cursor, long nodeId)\n+  {\n+    return hasChanges ? singleNodeCursor.get().init(cursor, nodeId) : cursor;\n+  }\n+\n+  @Override\n+  public Cursor<PropertyItem> augmentPropertyCursor(Cursor<PropertyItem> cursor,\n+                                                    PropertyContainerState propertyContainerState)\n+  {\n+    return propertyContainerState.hasPropertyChanges() ?\n+        propertyCursor.get().init(cursor, propertyContainerState) : cursor;\n+  }\n+\n+  @Override\n+  public Cursor<PropertyItem> augmentSinglePropertyCursor(Cursor<PropertyItem> cursor,\n+                                                          PropertyContainerState propertyContainerState, int propertyKeyId)\n+  {\n+    return propertyContainerState.hasPropertyChanges() ?\n+        singlePropertyCursor.get().init(cursor, propertyContainerState, propertyKeyId) : cursor;\n+  }\n+\n+  @Override\n+  public PrimitiveIntSet augmentLabels(PrimitiveIntSet labels, NodeState nodeState)\n+  {\n+    ReadableDiffSets<Integer> labelDiffSets = nodeState.labelDiffSets();\n+    if (!labelDiffSets.isEmpty())\n+    {\n+      labelDiffSets.getRemoved().forEach(labels::remove);\n+      labelDiffSets.getAdded().forEach(labels::add);\n+    }\n+    return labels;\n+  }\n+\n+  @Override\n+  public Cursor<RelationshipItem> augmentSingleRelationshipCursor(Cursor<RelationshipItem> cursor,\n+                                                                  long relationshipId)\n+  {\n+    return hasChanges ? singleRelationshipCursor.get().init(cursor, relationshipId) : cursor;\n+  }\n+\n+  @Override\n+  public Cursor<RelationshipItem> augmentNodeRelationshipCursor(Cursor<RelationshipItem> cursor,\n+                                                                NodeState nodeState,\n+                                                                Direction direction)\n+  {\n+    return nodeState.hasRelationshipChanges()\n+        ? iteratorRelationshipCursor.get().init(cursor, nodeState.getAddedRelationships(direction))\n+        : cursor;\n+  }\n+\n+  @Override\n+  public Cursor<RelationshipItem> augmentNodeRelationshipCursor(Cursor<RelationshipItem> cursor,\n+                                                                NodeState nodeState,\n+                                                                Direction direction,\n+                                                                int[] relTypes)\n+  {\n+    return nodeState.hasRelationshipChanges()\n+        ? iteratorRelationshipCursor.get().init(cursor, nodeState.getAddedRelationships(direction, relTypes))\n+        : cursor;\n+  }\n+\n+  @Override\n+  public Cursor<RelationshipItem> augmentRelationshipsGetAllCursor(Cursor<RelationshipItem> cursor)\n+  {\n+    return hasChanges && relationships != null && !relationships.isEmpty()\n+        ? iteratorRelationshipCursor.get().init(cursor, toPrimitiveIterator(relationships.getAdded().iterator()))\n+        : cursor;\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<Long> nodesWithLabelChanged(int label)\n+  {\n+    return getLabelStateNodeDiffSets(label);\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<Long> nodesWithAnyOfLabelsChanged(int... labels)\n+  {\n+    //It is enough that one of the labels is added\n+    //It is necessary for all the labels are removed\n+    Set<Long> added = new HashSet<>();\n+    Set<Long> removed = new HashSet<>();\n+    for (int i = 0; i < labels.length; i++)\n+    {\n+      ReadableDiffSets<Long> nodeDiffSets = getLabelStateNodeDiffSets(labels[i]);\n+      if (i == 0)\n+      {\n+        removed.addAll(nodeDiffSets.getRemoved());\n+      } else\n+      {\n+        removed.retainAll(nodeDiffSets.getRemoved());\n+      }\n+      added.addAll(nodeDiffSets.getAdded());\n+    }\n+\n+    return new DiffSets<>(added, removed);\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<Long> nodesWithAllLabelsChanged(int... labels)\n+  {\n+    DiffSets<Long> changes = new DiffSets<>();\n+    for (int label : labels)\n+    {\n+      final ReadableDiffSets<Long> nodeDiffSets = getLabelStateNodeDiffSets(label);\n+      changes.addAll(nodeDiffSets.getAdded().iterator());\n+      changes.removeAll(nodeDiffSets.getRemoved().iterator());\n+    }\n+    return changes;\n+  }\n+\n+  @Override\n+  public void indexRuleDoAdd(SchemaIndexDescriptor descriptor, IndexProvider.Descriptor providerDescriptor)\n+  {\n+    DiffSets<SchemaIndexDescriptor> diff = indexChangesDiffSets();\n+    if (!diff.unRemove(descriptor))\n+    {\n+      diff.add(descriptor);\n+    }\n+    if (specificIndexProviders == null)\n+    {\n+      specificIndexProviders = new HashMap<>();\n+    }\n+    if (providerDescriptor != null)\n+    {\n+      specificIndexProviders.put(descriptor, providerDescriptor);\n+    }\n+    changed();\n+  }\n+\n+  @Override\n+  public void indexDoDrop(SchemaIndexDescriptor descriptor)\n+  {\n+    indexChangesDiffSets().remove(descriptor);\n+    if (specificIndexProviders != null)\n+    {\n+      specificIndexProviders.remove(descriptor);\n+    }\n+    changed();\n+  }\n+\n+  @Override\n+  public boolean indexDoUnRemove(SchemaIndexDescriptor descriptor)\n+  {\n+    return indexChangesDiffSets().unRemove(descriptor);\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<SchemaIndexDescriptor> indexDiffSetsByLabel(int labelId)\n+  {\n+    return indexChangesDiffSets().filterAdded(SchemaDescriptorPredicates.hasLabel(labelId));\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<SchemaIndexDescriptor> indexChanges()\n+  {\n+    return ReadableDiffSets.Empty.ifNull(indexChanges);\n+  }\n+\n+  private DiffSets<SchemaIndexDescriptor> indexChangesDiffSets()\n+  {\n+    if (indexChanges == null)\n+    {\n+      indexChanges = new DiffSets<>();\n+    }\n+    return indexChanges;\n+  }\n+\n+  @Override\n+  public ReadableDiffSets<Long> addedAndRemovedNodes()\n+  {\n+    return ReadableDiffSets.Empty.ifNull(nodes);\n+  }\n+\n+  private RemovalsCountingDiffSets nodes()\n+  {\n+    if (nodes == null)\n+    {\n+      nodes = new RemovalsCountingDiffSets();\n+    }\n+    return nodes;\n+  }\n+\n+  @Override\n+  public int augmentNodeDegree(long nodeId, int degree, Direction direction)\n+  {\n+    return getNodeState(nodeId).augmentDegree(direction, degree);\n+  }\n+\n+  @Override\n+  public int augmentNodeDegree(long nodeId, int degree, Direction direction, int typeId)\n+  {\n+    return getNodeState(nodeId).augmentDegree(direction, degree, typeId);\n+  }\n \n-    @Override\n-    public void relationshipDoReplaceProperty( long relationshipId, int propertyKeyId, Value replacedValue,\n-            Value newValue )\n-    {\n-        if ( replacedValue != NO_VALUE )\n-        {\n-            getOrCreateRelationshipState( relationshipId ).changeProperty( propertyKeyId, newValue );\n-        }\n-        else\n-        {\n-            getOrCreateRelationshipState( relationshipId ).addProperty( propertyKeyId, newValue );\n-        }\n-        dataChanged();\n-    }\n+  @Override\n+  public PrimitiveIntSet nodeRelationshipTypes(long nodeId)\n+  {\n+    return getNodeState(nodeId).relationshipTypes();\n+  }\n+\n+  @Override\n+  public ReadableRelationshipDiffSets<Long> addedAndRemovedRelationships()\n+  {\n+    return ReadableRelationshipDiffSets.Empty.ifNull(relationships);\n+  }\n \n-    @Override\n-    public void graphDoReplaceProperty( int propertyKeyId, Value replacedValue, Value newValue )\n+  private RemovalsCountingRelationshipsDiffSets relationships()\n+  {\n+    if (relationships == null)\n     {\n-        if ( replacedValue != NO_VALUE )\n-        {\n-            getOrCreateGraphState().changeProperty( propertyKeyId, newValue );\n-        }\n-        else\n-        {\n-            getOrCreateGraphState().addProperty( propertyKeyId, newValue );\n-        }\n-        dataChanged();\n-    }\n+      relationships = new RemovalsCountingRelationshipsDiffSets(this);\n+    }\n+    return relationships;\n+  }\n \n-    @Override\n-    public void nodeDoRemoveProperty( long nodeId, int propertyKeyId )\n-    {\n-        getOrCreateNodeState( nodeId ).removeProperty( propertyKeyId );\n-        dataChanged();\n-    }\n+  @Override\n+  public Iterable<RelationshipState> modifiedRelationships()\n+  {\n+    return relationshipStatesMap == null ? Iterables.empty() : Iterables.cast(relationshipStatesMap.values());\n+  }\n+\n+  private NodeStateImpl getOrCreateNodeState(long nodeId)\n+  {\n+    if (nodeStatesMap == null)\n+    {\n+      nodeStatesMap = collectionsFactory.newLongObjectMap();\n+    }\n+    return nodeStatesMap.computeIfAbsent(nodeId, unused -> new NodeStateImpl(nodeId, this));\n+  }\n+\n+  private RelationshipStateImpl getOrCreateRelationshipState(long relationshipId)\n+  {\n+    if (relationshipStatesMap == null)\n+    {\n+      relationshipStatesMap = collectionsFactory.newLongObjectMap();\n+    }\n+    return relationshipStatesMap.computeIfAbsent(relationshipId, unused -> new RelationshipStateImpl(relationshipId));\n+  }\n+\n+  private GraphState getOrCreateGraphState()\n+  {\n+    if (graphState == null)\n+    {\n+      graphState = new GraphState();\n+    }\n+    return graphState;\n+  }\n+\n+  @Override\n+  public void constraintDoAdd(IndexBackedConstraintDescriptor constraint, long indexId)\n+  {\n+    constraintsChangesDiffSets().add(constraint);\n+    createdConstraintIndexesByConstraint().put(constraint, indexId);\n+    changed();\n+  }\n+\n+  @Override\n+  public void constraintDoAdd(ConstraintDescriptor constraint)\n+  {\n+    constraintsChangesDiffSets().add(constraint);\n+    changed();\n+  }\n \n-    @Override\n-    public void relationshipDoRemoveProperty( long relationshipId, int propertyKeyId )\n-    {\n-        getOrCreateRelationshipState( relationshipId ).removeProperty( propertyKeyId );\n-        dataChanged();\n-    }\n+  @Override\n+  public ReadableDiffSets<ConstraintDescriptor> constraintsChangesForLabel(int labelId)\n+  {\n+    return constraintsChangesDiffSets().filterAdded(SchemaDescriptorPredicates.hasLabel(labelId));\n+  }\n \n-    @Override\n-    public void graphDoRemoveProperty( int propertyKeyId )\n-    {\n-        getOrCreateGraphState().removeProperty( propertyKeyId );\n-        dataChanged();\n-    }\n+  @Override\n+  public ReadableDiffSets<ConstraintDescriptor> constraintsChangesForSchema(SchemaDescriptor descriptor)\n+  {\n+    return constraintsChangesDiffSets().filterAdded(SchemaDescriptor.equalTo(descriptor));\n+  }\n \n-    @Override\n-    public void nodeDoAddLabel( int labelId, long nodeId )\n-    {\n-        getOrCreateLabelStateNodeDiffSets( labelId ).add( nodeId );\n-        getOrCreateNodeStateLabelDiffSets( nodeId ).add( labelId );\n-        dataChanged();\n-    }\n+  @Override\n+  public ReadableDiffSets<ConstraintDescriptor> constraintsChangesForRelationshipType(int relTypeId)\n+  {\n+    return constraintsChangesDiffSets().filterAdded(SchemaDescriptorPredicates.hasRelType(relTypeId));\n+  }\n \n-    @Override\n-    public void nodeDoRemoveLabel( int labelId, long nodeId )\n-    {\n-        getOrCreateLabelStateNodeDiffSets( labelId ).remove( nodeId );\n-        getOrCreateNodeStateLabelDiffSets( nodeId ).remove( labelId );\n-        dataChanged();\n-    }\n+  @Override\n+  public ReadableDiffSets<ConstraintDescriptor> constraintsChanges()\n+  {\n+    return ReadableDiffSets.Empty.ifNull(constraintsChanges);\n+  }\n \n-    @Override\n-    public void labelDoCreateForName( String labelName, int id )\n-    {\n-        if ( createdLabelTokens == null )\n-        {\n-            createdLabelTokens = collectionsFactory.newIntObjectMap();\n-        }\n-        createdLabelTokens.put( id, labelName );\n-        changed();\n+  private DiffSets<ConstraintDescriptor> constraintsChangesDiffSets()\n+  {\n+    if (constraintsChanges == null)\n+    {\n+      constraintsChanges = new DiffSets<>();\n     }\n+    return constraintsChanges;\n+  }\n \n-    @Override\n-    public void propertyKeyDoCreateForName( String propertyKeyName, int id )\n+  @Override\n+  public void constraintDoDrop(ConstraintDescriptor constraint)\n+  {\n+    constraintsChangesDiffSets().remove(constraint);\n+    if (constraint.enforcesUniqueness())\n     {\n-        if ( createdPropertyKeyTokens == null )\n-        {\n-            createdPropertyKeyTokens = collectionsFactory.newIntObjectMap();\n-        }\n-        createdPropertyKeyTokens.put( id, propertyKeyName );\n-        changed();\n+      indexDoDrop(getIndexForIndexBackedConstraint((IndexBackedConstraintDescriptor) constraint));\n     }\n+    changed();\n+  }\n \n-    @Override\n-    public void relationshipTypeDoCreateForName( String labelName, int id )\n-    {\n-        if ( createdRelationshipTypeTokens == null )\n-        {\n-            createdRelationshipTypeTokens = collectionsFactory.newIntObjectMap();\n-        }\n-        createdRelationshipTypeTokens.put( id, labelName );\n-        changed();\n-    }\n+  @Override\n+  public boolean constraintDoUnRemove(ConstraintDescriptor constraint)\n+  {\n+    return constraintsChangesDiffSets().unRemove(constraint);\n+  }\n \n-    @Override\n-    public NodeState getNodeState( long id )\n+  @Override\n+  public Iterable<SchemaIndexDescriptor> constraintIndexesCreatedInTx()\n+  {\n+    if (createdConstraintIndexesByConstraint != null && !createdConstraintIndexesByConstraint.isEmpty())\n     {\n-        if ( nodeStatesMap == null )\n-        {\n-            return NodeStateImpl.EMPTY;\n-        }\n-        final NodeState nodeState = nodeStatesMap.get( id );\n-        return nodeState == null ? NodeStateImpl.EMPTY : nodeState;\n+      return map(this::getIndexForIndexBackedConstraint, createdConstraintIndexesByConstraint.keySet());\n     }\n+    return Iterables.empty();\n+  }\n \n-    @Override\n-    public RelationshipState getRelationshipState( long id )\n-    {\n-        if ( relationshipStatesMap == null )\n-        {\n-            return RelationshipStateImpl.EMPTY;\n-        }\n-        final RelationshipStateImpl relationshipState = relationshipStatesMap.get( id );\n-        return relationshipState == null ? RelationshipStateImpl.EMPTY : relationshipState;\n-    }\n+  @Override\n+  public Long indexCreatedForConstraint(ConstraintDescriptor constraint)\n+  {\n+    return createdConstraintIndexesByConstraint == null ? null :\n+        createdConstraintIndexesByConstraint.get(constraint);\n+  }\n \n-    @Override\n-    public GraphState getGraphState( )\n+  @Override\n+  public PrimitiveLongReadableDiffSets indexUpdatesForScan(SchemaIndexDescriptor descriptor)\n+  {\n+    if (indexUpdates == null)\n     {\n-        return graphState;\n+      return PrimitiveLongReadableDiffSets.EMPTY;\n     }\n-\n-    @Override\n-    public Cursor<NodeItem> augmentSingleNodeCursor( Cursor<NodeItem> cursor, long nodeId )\n+    Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get(descriptor.schema());\n+    if (updates == null)\n     {\n-        return hasChanges ? singleNodeCursor.get().init( cursor, nodeId ) : cursor;\n+      return PrimitiveLongReadableDiffSets.EMPTY;\n     }\n-\n-    @Override\n-    public Cursor<PropertyItem> augmentPropertyCursor( Cursor<PropertyItem> cursor,\n-            PropertyContainerState propertyContainerState )\n+    PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n+    for (PrimitiveLongDiffSets diffSet : updates.values())\n     {\n-        return propertyContainerState.hasPropertyChanges() ?\n-                propertyCursor.get().init( cursor, propertyContainerState ) : cursor;\n+      diffs.addAll(diffSet.getAdded().iterator());\n+      diffs.removeAll(diffSet.getRemoved().iterator());\n     }\n+    return diffs;\n+  }\n \n-    @Override\n-    public Cursor<PropertyItem> augmentSinglePropertyCursor( Cursor<PropertyItem> cursor,\n-            PropertyContainerState propertyContainerState, int propertyKeyId )\n-    {\n-        return propertyContainerState.hasPropertyChanges() ?\n-                singlePropertyCursor.get().init( cursor, propertyContainerState, propertyKeyId ) : cursor;\n-    }\n+  @Override\n+  public PrimitiveLongReadableDiffSets indexUpdatesForSuffixOrContains(SchemaIndexDescriptor descriptor, IndexQuery query)\n+  {\n+    assert descriptor.schema().getPropertyIds().length == 1 :\n+        \"Suffix and contains queries are only supported for single property queries\";\n \n-    @Override\n-    public PrimitiveIntSet augmentLabels( PrimitiveIntSet labels, NodeState nodeState )\n+    if (indexUpdates == null)\n     {\n-        ReadableDiffSets<Integer> labelDiffSets = nodeState.labelDiffSets();\n-        if ( !labelDiffSets.isEmpty() )\n-        {\n-            labelDiffSets.getRemoved().forEach( labels::remove );\n-            labelDiffSets.getAdded().forEach( labels::add );\n-        }\n-        return labels;\n+      return PrimitiveLongReadableDiffSets.EMPTY;\n     }\n-\n-    @Override\n-    public Cursor<RelationshipItem> augmentSingleRelationshipCursor( Cursor<RelationshipItem> cursor,\n-            long relationshipId )\n+    Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get(descriptor.schema());\n+    if (updates == null)\n     {\n-        return hasChanges ? singleRelationshipCursor.get().init( cursor, relationshipId ) : cursor;\n+      return PrimitiveLongReadableDiffSets.EMPTY;\n     }\n-\n-    @Override\n-    public Cursor<RelationshipItem> augmentNodeRelationshipCursor( Cursor<RelationshipItem> cursor,\n-            NodeState nodeState,\n-            Direction direction )\n+    PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n+    for (Map.Entry<ValueTuple, PrimitiveLongDiffSets> entry : updates.entrySet())\n     {\n-        return nodeState.hasRelationshipChanges()\n-               ? iteratorRelationshipCursor.get().init( cursor, nodeState.getAddedRelationships( direction ) )\n-               : cursor;\n+      if (query.acceptsValue(entry.getKey().getOnlyValue()))\n+      {\n+        PrimitiveLongDiffSets diffsets = entry.getValue();\n+        diffs.addAll(diffsets.getAdded().iterator());\n+        diffs.removeAll(diffsets.getRemoved().iterator());\n+      }\n     }\n+    return diffs;\n+  }\n \n-    @Override\n-    public Cursor<RelationshipItem> augmentNodeRelationshipCursor( Cursor<RelationshipItem> cursor,\n-            NodeState nodeState,\n-            Direction direction,\n-            int[] relTypes )\n-    {\n-        return nodeState.hasRelationshipChanges()\n-               ? iteratorRelationshipCursor.get().init( cursor, nodeState.getAddedRelationships( direction, relTypes ) )\n-               : cursor;\n-    }\n+  @Override\n+  public PrimitiveLongReadableDiffSets indexUpdatesForSeek(SchemaIndexDescriptor descriptor, ValueTuple values)\n+  {\n+    PrimitiveLongDiffSets indexUpdatesForSeek = getIndexUpdatesForSeek(descriptor.schema(), values, /*create=*/false);\n+    return indexUpdatesForSeek == null ? PrimitiveLongReadableDiffSets.EMPTY : indexUpdatesForSeek;\n+  }\n \n-    @Override\n-    public Cursor<RelationshipItem> augmentRelationshipsGetAllCursor( Cursor<RelationshipItem> cursor )\n-    {\n-        return hasChanges && relationships != null && !relationships.isEmpty()\n-               ? iteratorRelationshipCursor.get().init( cursor, toPrimitiveIterator( relationships.getAdded().iterator() ) )\n-               : cursor;\n-    }\n+  @Override\n+  public PrimitiveLongReadableDiffSets indexUpdatesForRangeSeek(SchemaIndexDescriptor descriptor, IndexQuery.RangePredicate<?> predicate)\n+  {\n+    Value lower = predicate.fromValue();\n+    Value upper = predicate.toValue();\n+    assert lower != null && upper != null : \"Use Values.NO_VALUE to encode the lack of a bound\";\n \n-    @Override\n-    public ReadableDiffSets<Long> nodesWithLabelChanged( int label )\n+    TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates(descriptor.schema());\n+    if (sortedUpdates == null)\n     {\n-        return getLabelStateNodeDiffSets( label );\n+      return PrimitiveLongReadableDiffSets.EMPTY;\n     }\n \n-    @Override\n-    public ReadableDiffSets<Long> nodesWithAnyOfLabelsChanged( int... labels )\n-    {\n-        //It is enough that one of the labels is added\n-        //It is necessary for all the labels are removed\n-        Set<Long> added = new HashSet<>();\n-        Set<Long> removed = new HashSet<>();\n-        for ( int i = 0; i < labels.length; i++ )\n-        {\n-            ReadableDiffSets<Long> nodeDiffSets = getLabelStateNodeDiffSets( labels[i] );\n-            if ( i == 0 )\n-            {\n-                removed.addAll( nodeDiffSets.getRemoved() );\n-            }\n-            else\n-            {\n-                removed.retainAll( nodeDiffSets.getRemoved() );\n-            }\n-            added.addAll( nodeDiffSets.getAdded() );\n-        }\n+    ValueTuple selectedLower;\n+    boolean selectedIncludeLower;\n \n-        return new DiffSets<>( added, removed );\n-    }\n+    ValueTuple selectedUpper;\n+    boolean selectedIncludeUpper;\n \n-    @Override\n-    public ReadableDiffSets<Long> nodesWithAllLabelsChanged( int... labels )\n+    if (lower == NO_VALUE)\n     {\n-        DiffSets<Long> changes = new DiffSets<>();\n-        for ( int label : labels )\n-        {\n-            final ReadableDiffSets<Long> nodeDiffSets = getLabelStateNodeDiffSets( label );\n-            changes.addAll( nodeDiffSets.getAdded().iterator() );\n-            changes.removeAll( nodeDiffSets.getRemoved().iterator() );\n-        }\n-        return changes;\n-    }\n-\n-    @Override\n-    public void indexRuleDoAdd( SchemaIndexDescriptor descriptor, IndexProvider.Descriptor providerDescriptor )\n+      selectedLower = ValueTuple.of(Values.minValue(predicate.valueGroup(), upper));\n+      selectedIncludeLower = true;\n+    } else\n     {\n-        DiffSets<SchemaIndexDescriptor> diff = indexChangesDiffSets();\n-        if ( !diff.unRemove( descriptor ) )\n-        {\n-            diff.add( descriptor );\n-        }\n-        if ( specificIndexProviders == null )\n-        {\n-            specificIndexProviders = new HashMap<>();\n-        }\n-        if ( providerDescriptor != null )\n-        {\n-            specificIndexProviders.put( descriptor, providerDescriptor );\n-        }\n-        changed();\n+      selectedLower = ValueTuple.of(lower);\n+      selectedIncludeLower = predicate.fromInclusive();\n     }\n \n-    @Override\n-    public void indexDoDrop( SchemaIndexDescriptor descriptor )\n+    if (upper == NO_VALUE)\n     {\n-        indexChangesDiffSets().remove( descriptor );\n-        if ( specificIndexProviders != null )\n-        {\n-            specificIndexProviders.remove( descriptor );\n-        }\n-        changed();\n-    }\n-\n-    @Override\n-    public boolean indexDoUnRemove( SchemaIndexDescriptor descriptor )\n+      selectedUpper = ValueTuple.of(Values.maxValue(predicate.valueGroup(), lower));\n+      selectedIncludeUpper = false;\n+    } else\n     {\n-        return indexChangesDiffSets().unRemove( descriptor );\n+      selectedUpper = ValueTuple.of(upper);\n+      selectedIncludeUpper = predicate.toInclusive();\n     }\n \n-    @Override\n-    public ReadableDiffSets<SchemaIndexDescriptor> indexDiffSetsByLabel( int labelId )\n-    {\n-        return indexChangesDiffSets().filterAdded( SchemaDescriptorPredicates.hasLabel( labelId ) );\n-    }\n+    PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n \n-    @Override\n-    public ReadableDiffSets<SchemaIndexDescriptor> indexChanges()\n+    NavigableMap<ValueTuple, PrimitiveLongDiffSets> inRangeX =\n+        sortedUpdates.subMap(selectedLower, selectedIncludeLower, selectedUpper, selectedIncludeUpper);\n+    for (Map.Entry<ValueTuple, PrimitiveLongDiffSets> entry : inRangeX.entrySet())\n     {\n-        return ReadableDiffSets.Empty.ifNull( indexChanges );\n+      ValueTuple values = entry.getKey();\n+      PrimitiveLongDiffSets diffForSpecificValue = entry.getValue();\n+      // The TreeMap cannot perfectly order multi-dimensional types (spatial) and need additional filtering out false positives\n+      // TODO: If the composite index starts to be able to handle spatial types the line below needs enhancement\n+      if (predicate.isRegularOrder() || predicate.acceptsValue(values.getOnlyValue()))\n+      {\n+        diffs.addAll(diffForSpecificValue.getAdded().iterator());\n+        diffs.removeAll(diffForSpecificValue.getRemoved().iterator());\n+      }\n     }\n+    return diffs;\n+  }\n \n-    private DiffSets<SchemaIndexDescriptor> indexChangesDiffSets()\n+  @Override\n+  public PrimitiveLongReadableDiffSets indexUpdatesForRangeSeekByPrefix(SchemaIndexDescriptor descriptor, String prefix)\n+  {\n+    TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates(descriptor.schema());\n+    if (sortedUpdates == null)\n     {\n-        if ( indexChanges == null )\n-        {\n-            indexChanges = new DiffSets<>();\n-        }\n-        return indexChanges;\n-    }\n-\n-    @Override\n-    public ReadableDiffSets<Long> addedAndRemovedNodes()\n+      return PrimitiveLongReadableDiffSets.EMPTY;\n+    }\n+    ValueTuple floor = ValueTuple.of(Values.stringValue(prefix));\n+    PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n+    for (Map.Entry<ValueTuple, PrimitiveLongDiffSets> entry : sortedUpdates.subMap(floor, MAX_STRING_TUPLE).entrySet())\n     {\n-        return ReadableDiffSets.Empty.ifNull( nodes );\n-    }\n-\n-    private RemovalsCountingDiffSets nodes()\n+      ValueTuple key = entry.getKey();\n+      if (((TextValue) key.getOnlyValue()).stringValue().startsWith(prefix))\n+      {\n+        PrimitiveLongDiffSets diffSets = entry.getValue();\n+        diffs.addAll(diffSets.getAdded().iterator());\n+        diffs.removeAll(diffSets.getRemoved().iterator());\n+      } else\n+      {\n+        break;\n+      }\n+    }\n+    return diffs;\n+  }\n+\n+  // Ensure sorted index updates for a given index. This is needed for range query support and\n+  // may involve converting the existing hash map first\n+  //\n+  private TreeMap<ValueTuple, PrimitiveLongDiffSets> getSortedIndexUpdates(SchemaDescriptor descriptor)\n+  {\n+    if (indexUpdates == null)\n+    {\n+      return null;\n+    }\n+    Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get(descriptor);\n+    if (updates == null)\n+    {\n+      return null;\n+    }\n+    TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates;\n+    if (updates instanceof TreeMap)\n+    {\n+      sortedUpdates = (TreeMap<ValueTuple, PrimitiveLongDiffSets>) updates;\n+    } else\n     {\n-        if ( nodes == null )\n-        {\n-            nodes = new RemovalsCountingDiffSets();\n-        }\n-        return nodes;\n+      sortedUpdates = new TreeMap<>(ValueTuple.COMPARATOR);\n+      sortedUpdates.putAll(updates);\n+      indexUpdates.put(descriptor, sortedUpdates);\n     }\n+    return sortedUpdates;\n+  }\n \n-    @Override\n-    public int augmentNodeDegree( long nodeId, int degree, Direction direction )\n-    {\n-        return getNodeState( nodeId ).augmentDegree( direction, degree );\n+  @Override\n+  public void indexDoUpdateEntry(SchemaDescriptor descriptor, long nodeId,\n+                                 ValueTuple propertiesBefore, ValueTuple propertiesAfter)\n+  {\n+    NodeStateImpl nodeState = getOrCreateNodeState(nodeId);\n+    Map<ValueTuple, PrimitiveLongDiffSets> updates = getIndexUpdatesByDescriptor(descriptor, true);\n+    if (propertiesBefore != null)\n+    {\n+      PrimitiveLongDiffSets before = getIndexUpdatesForSeek(updates, propertiesBefore, true);\n+      //noinspection ConstantConditions\n+      before.remove(nodeId);\n+      if (before.getRemoved().contains(nodeId))\n+      {\n+        nodeState.addIndexDiff(before);\n+      } else\n+      {\n+        nodeState.removeIndexDiff(before);\n+      }\n+    }\n+    if (propertiesAfter != null)\n+    {\n+      PrimitiveLongDiffSets after = getIndexUpdatesForSeek(updates, propertiesAfter, true);\n+      //noinspection ConstantConditions\n+      after.add(nodeId);\n+      if (after.getAdded().contains(nodeId))\n+      {\n+        nodeState.addIndexDiff(after);\n+      } else\n+      {\n+        nodeState.removeIndexDiff(after);\n+      }\n+    }\n+  }\n+\n+  private PrimitiveLongDiffSets getIndexUpdatesForSeek(\n+      SchemaDescriptor schema, ValueTuple values, boolean create)\n+  {\n+    Map<ValueTuple, PrimitiveLongDiffSets> updates = getIndexUpdatesByDescriptor(schema, create);\n+    if (updates != null)\n+    {\n+      return getIndexUpdatesForSeek(updates, values, create);\n+    }\n+    return null;\n+  }\n+\n+  private PrimitiveLongDiffSets getIndexUpdatesForSeek(Map<ValueTuple, PrimitiveLongDiffSets> updates,\n+                                                       ValueTuple values, boolean create)\n+  {\n+    return create ? updates.computeIfAbsent(values, value -> new PrimitiveLongDiffSets()) : updates.get(values);\n+  }\n+\n+  private Map<ValueTuple, PrimitiveLongDiffSets> getIndexUpdatesByDescriptor(SchemaDescriptor schema,\n+                                                                             boolean create)\n+  {\n+    if (indexUpdates == null)\n+    {\n+      if (!create)\n+      {\n+        return null;\n+      }\n+      indexUpdates = new HashMap<>();\n     }\n-\n-    @Override\n-    public int augmentNodeDegree( long nodeId, int degree, Direction direction, int typeId )\n+    Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get(schema);\n+    if (updates == null)\n     {\n-        return getNodeState( nodeId ).augmentDegree( direction, degree, typeId );\n+      if (!create)\n+      {\n+        return null;\n+      }\n+      updates = new HashMap<>();\n+      indexUpdates.put(schema, updates);\n     }\n+    return updates;\n+  }\n \n-    @Override\n-    public PrimitiveIntSet nodeRelationshipTypes( long nodeId )\n+  private Map<IndexBackedConstraintDescriptor, Long> createdConstraintIndexesByConstraint()\n+  {\n+    if (createdConstraintIndexesByConstraint == null)\n     {\n-        return getNodeState( nodeId ).relationshipTypes();\n+      createdConstraintIndexesByConstraint = new HashMap<>();\n     }\n+    return createdConstraintIndexesByConstraint;\n+  }\n \n-    @Override\n-    public ReadableRelationshipDiffSets<Long> addedAndRemovedRelationships()\n-    {\n-        return ReadableRelationshipDiffSets.Empty.ifNull( relationships );\n-    }\n+  private SchemaIndexDescriptor getIndexForIndexBackedConstraint(IndexBackedConstraintDescriptor constraint)\n+  {\n+    return constraint.ownedIndexDescriptor();\n+  }\n \n-    private RemovalsCountingRelationshipsDiffSets relationships()\n-    {\n-        if ( relationships == null )\n-        {\n-            relationships = new RemovalsCountingRelationshipsDiffSets( this );\n-        }\n-        return relationships;\n-    }\n+  private boolean hasNodeState(long nodeId)\n+  {\n+    return nodeStatesMap != null && nodeStatesMap.containsKey(nodeId);\n+  }\n \n-    @Override\n-    public Iterable<RelationshipState> modifiedRelationships()\n-    {\n-        return relationshipStatesMap == null ? Iterables.empty() : Iterables.cast( relationshipStatesMap.values() );\n-    }\n+  @Override\n+  public PrimitiveLongIterator augmentNodesGetAll(PrimitiveLongIterator committed)\n+  {\n+    return addedAndRemovedNodes().augment(committed);\n+  }\n \n-    private NodeStateImpl getOrCreateNodeState( long nodeId )\n-    {\n-        if ( nodeStatesMap == null )\n-        {\n-            nodeStatesMap = collectionsFactory.newLongObjectMap();\n-        }\n-        return nodeStatesMap.computeIfAbsent( nodeId, unused -> new NodeStateImpl( nodeId, this ) );\n-    }\n+  @Override\n+  public RelationshipIterator augmentRelationshipsGetAll(RelationshipIterator committed)\n+  {\n+    return addedAndRemovedRelationships().augment(committed);\n+  }\n \n-    private RelationshipStateImpl getOrCreateRelationshipState( long relationshipId )\n-    {\n-        if ( relationshipStatesMap == null )\n-        {\n-            relationshipStatesMap = collectionsFactory.newLongObjectMap();\n-        }\n-        return relationshipStatesMap.computeIfAbsent( relationshipId, unused -> new RelationshipStateImpl( relationshipId ) );\n-    }\n+  @Override\n+  public <EX extends Exception> boolean relationshipVisit(long relId, RelationshipVisitor<EX> visitor) throws EX\n+  {\n+    return getRelationshipState(relId).accept(visitor);\n+  }\n \n-    private GraphState getOrCreateGraphState()\n-    {\n-        if ( graphState == null )\n-        {\n-            graphState = new GraphState();\n-        }\n-        return graphState;\n-    }\n+  @Override\n+  public boolean hasDataChanges()\n+  {\n+    return hasDataChanges;\n+  }\n \n-    @Override\n-    public void constraintDoAdd( IndexBackedConstraintDescriptor constraint, long indexId )\n+  /**\n+   * Release all underlying resources. The instance must not be used after calling this method .\n+   */\n+  public void release()\n+  {\n+    if (!collectionsFactory.collectionsMustBeReleased())\n     {\n-        constraintsChangesDiffSets().add( constraint );\n-        createdConstraintIndexesByConstraint().put( constraint, indexId );\n-        changed();\n+      return;\n     }\n-\n-    @Override\n-    public void constraintDoAdd( ConstraintDescriptor constraint )\n+    if (labelStatesMap != null)\n     {\n-        constraintsChangesDiffSets().add( constraint );\n-        changed();\n+      labelStatesMap.close();\n     }\n-\n-    @Override\n-    public ReadableDiffSets<ConstraintDescriptor> constraintsChangesForLabel( int labelId )\n+    if (createdLabelTokens != null)\n     {\n-        return constraintsChangesDiffSets().filterAdded( SchemaDescriptorPredicates.hasLabel( labelId ) );\n+      createdLabelTokens.close();\n     }\n-\n-    @Override\n-    public ReadableDiffSets<ConstraintDescriptor> constraintsChangesForSchema( SchemaDescriptor descriptor )\n+    if (createdRelationshipTypeTokens != null)\n     {\n-        return constraintsChangesDiffSets().filterAdded( SchemaDescriptor.equalTo( descriptor ) );\n+      createdRelationshipTypeTokens.close();\n     }\n-\n-    @Override\n-    public ReadableDiffSets<ConstraintDescriptor> constraintsChangesForRelationshipType( int relTypeId )\n+    if (nodeStatesMap != null)\n     {\n-        return constraintsChangesDiffSets().filterAdded( SchemaDescriptorPredicates.hasRelType( relTypeId ) );\n+      nodeStatesMap.close();\n     }\n-\n-    @Override\n-    public ReadableDiffSets<ConstraintDescriptor> constraintsChanges()\n+    if (relationshipStatesMap != null)\n     {\n-        return ReadableDiffSets.Empty.ifNull( constraintsChanges );\n+      relationshipStatesMap.close();\n     }\n-\n-    private DiffSets<ConstraintDescriptor> constraintsChangesDiffSets()\n+    if (nodes != null && nodes.removedFromAdded != null)\n     {\n-        if ( constraintsChanges == null )\n-        {\n-            constraintsChanges = new DiffSets<>();\n-        }\n-        return constraintsChanges;\n+      nodes.removedFromAdded.close();\n     }\n-\n-    @Override\n-    public void constraintDoDrop( ConstraintDescriptor constraint )\n+    if (relationships != null && relationships.removedFromAdded != null)\n     {\n-        constraintsChangesDiffSets().remove( constraint );\n-        if ( constraint.enforcesUniqueness() )\n-        {\n-            indexDoDrop( getIndexForIndexBackedConstraint( (IndexBackedConstraintDescriptor) constraint ) );\n-        }\n-        changed();\n+      relationships.removedFromAdded.close();\n     }\n+  }\n \n-    @Override\n-    public boolean constraintDoUnRemove( ConstraintDescriptor constraint )\n-    {\n-        return constraintsChangesDiffSets().unRemove( constraint );\n-    }\n+  private static class LabelTokenStateVisitor implements PrimitiveIntObjectVisitor<String, RuntimeException>\n+  {\n+    private final TxStateVisitor visitor;\n \n-    @Override\n-    public Iterable<SchemaIndexDescriptor> constraintIndexesCreatedInTx()\n+    LabelTokenStateVisitor(TxStateVisitor visitor)\n     {\n-        if ( createdConstraintIndexesByConstraint != null && !createdConstraintIndexesByConstraint.isEmpty() )\n-        {\n-            return map( this::getIndexForIndexBackedConstraint, createdConstraintIndexesByConstraint.keySet() );\n-        }\n-        return Iterables.empty();\n+      this.visitor = visitor;\n     }\n \n     @Override\n-    public Long indexCreatedForConstraint( ConstraintDescriptor constraint )\n+    public boolean visited(int key, String value)\n     {\n-        return createdConstraintIndexesByConstraint == null ? null :\n-                createdConstraintIndexesByConstraint.get( constraint );\n+      visitor.visitCreatedLabelToken(value, key);\n+      return false;\n     }\n+  }\n \n-    @Override\n-    public PrimitiveLongReadableDiffSets indexUpdatesForScan( SchemaIndexDescriptor descriptor )\n-    {\n-        if ( indexUpdates == null )\n-        {\n-            return PrimitiveLongReadableDiffSets.EMPTY;\n-        }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor.schema() );\n-        if ( updates == null )\n-        {\n-            return PrimitiveLongReadableDiffSets.EMPTY;\n-        }\n-        PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n-        for ( PrimitiveLongDiffSets diffSet : updates.values() )\n-        {\n-            diffs.addAll( diffSet.getAdded().iterator() );\n-            diffs.removeAll( diffSet.getRemoved().iterator() );\n-        }\n-        return diffs;\n-    }\n+  private static class PropertyKeyTokenStateVisitor implements PrimitiveIntObjectVisitor<String, RuntimeException>\n+  {\n+    private final TxStateVisitor visitor;\n \n-    @Override\n-    public PrimitiveLongReadableDiffSets indexUpdatesForSuffixOrContains( SchemaIndexDescriptor descriptor, IndexQuery query )\n+    PropertyKeyTokenStateVisitor(TxStateVisitor visitor)\n     {\n-        assert descriptor.schema().getPropertyIds().length == 1 :\n-                \"Suffix and contains queries are only supported for single property queries\";\n-\n-        if ( indexUpdates == null )\n-        {\n-            return PrimitiveLongReadableDiffSets.EMPTY;\n-        }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor.schema() );\n-        if ( updates == null )\n-        {\n-            return PrimitiveLongReadableDiffSets.EMPTY;\n-        }\n-        PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n-        for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : updates.entrySet() )\n-        {\n-            if ( query.acceptsValue( entry.getKey().getOnlyValue() ) )\n-            {\n-                PrimitiveLongDiffSets diffsets = entry.getValue();\n-                diffs.addAll( diffsets.getAdded().iterator() );\n-                diffs.removeAll( diffsets.getRemoved().iterator() );\n-            }\n-        }\n-        return diffs;\n+      this.visitor = visitor;\n     }\n \n     @Override\n-    public PrimitiveLongReadableDiffSets indexUpdatesForSeek( SchemaIndexDescriptor descriptor, ValueTuple values )\n+    public boolean visited(int key, String value)\n     {\n-        PrimitiveLongDiffSets indexUpdatesForSeek = getIndexUpdatesForSeek( descriptor.schema(), values, /*create=*/false );\n-        return indexUpdatesForSeek == null ? PrimitiveLongReadableDiffSets.EMPTY : indexUpdatesForSeek;\n+      visitor.visitCreatedPropertyKeyToken(value, key);\n+      return false;\n     }\n+  }\n \n-    @Override\n-    public PrimitiveLongReadableDiffSets indexUpdatesForRangeSeek( SchemaIndexDescriptor descriptor, IndexQuery.RangePredicate<?> predicate )\n-    {\n-        Value lower = predicate.fromValue();\n-        Value upper = predicate.toValue();\n-        assert lower != null && upper != null : \"Use Values.NO_VALUE to encode the lack of a bound\";\n-\n-        TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates( descriptor.schema() );\n-        if ( sortedUpdates == null )\n-        {\n-            return PrimitiveLongReadableDiffSets.EMPTY;\n-        }\n-\n-        ValueTuple selectedLower;\n-        boolean selectedIncludeLower;\n+  private static class RelationshipTypeTokenStateVisitor implements PrimitiveIntObjectVisitor<String, RuntimeException>\n+  {\n+    private final TxStateVisitor visitor;\n \n-        ValueTuple selectedUpper;\n-        boolean selectedIncludeUpper;\n-\n-        if ( lower == NO_VALUE )\n-        {\n-            selectedLower = ValueTuple.of( Values.minValue( predicate.valueGroup(), upper ) );\n-            selectedIncludeLower = true;\n-        }\n-        else\n-        {\n-            selectedLower = ValueTuple.of( lower );\n-            selectedIncludeLower = predicate.fromInclusive();\n-        }\n-\n-        if ( upper == NO_VALUE )\n-        {\n-            selectedUpper = ValueTuple.of( Values.maxValue( predicate.valueGroup(), lower ) );\n-            selectedIncludeUpper = false;\n-        }\n-        else\n-        {\n-            selectedUpper = ValueTuple.of( upper );\n-            selectedIncludeUpper = predicate.toInclusive();\n-        }\n-\n-        PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n-\n-        NavigableMap<ValueTuple,PrimitiveLongDiffSets> inRangeX =\n-                sortedUpdates.subMap( selectedLower, selectedIncludeLower, selectedUpper, selectedIncludeUpper );\n-        for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : inRangeX.entrySet() )\n-        {\n-            ValueTuple values = entry.getKey();\n-            PrimitiveLongDiffSets diffForSpecificValue = entry.getValue();\n-            // The TreeMap cannot perfectly order multi-dimensional types (spatial) and need additional filtering out false positives\n-            // TODO: If the composite index starts to be able to handle spatial types the line below needs enhancement\n-            if ( predicate.isRegularOrder() || predicate.acceptsValue( values.getOnlyValue() ) )\n-            {\n-                diffs.addAll( diffForSpecificValue.getAdded().iterator() );\n-                diffs.removeAll( diffForSpecificValue.getRemoved().iterator() );\n-            }\n-        }\n-        return diffs;\n-    }\n-\n-    @Override\n-    public PrimitiveLongReadableDiffSets indexUpdatesForRangeSeekByPrefix( SchemaIndexDescriptor descriptor, String prefix )\n+    RelationshipTypeTokenStateVisitor(TxStateVisitor visitor)\n     {\n-        TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates( descriptor.schema() );\n-        if ( sortedUpdates == null )\n-        {\n-            return PrimitiveLongReadableDiffSets.EMPTY;\n-        }\n-        ValueTuple floor = ValueTuple.of( Values.stringValue( prefix ) );\n-        PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n-        for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : sortedUpdates.subMap( floor, MAX_STRING_TUPLE ).entrySet() )\n-        {\n-            ValueTuple key = entry.getKey();\n-            if ( ((TextValue) key.getOnlyValue()).stringValue().startsWith( prefix ) )\n-            {\n-                PrimitiveLongDiffSets diffSets = entry.getValue();\n-                diffs.addAll( diffSets.getAdded().iterator() );\n-                diffs.removeAll( diffSets.getRemoved().iterator() );\n-            }\n-            else\n-            {\n-                break;\n-            }\n-        }\n-        return diffs;\n-    }\n-\n-    // Ensure sorted index updates for a given index. This is needed for range query support and\n-    // may involve converting the existing hash map first\n-    //\n-    private TreeMap<ValueTuple, PrimitiveLongDiffSets> getSortedIndexUpdates( SchemaDescriptor descriptor )\n-    {\n-        if ( indexUpdates == null )\n-        {\n-            return null;\n-        }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor );\n-        if ( updates == null )\n-        {\n-            return null;\n-        }\n-        TreeMap<ValueTuple,PrimitiveLongDiffSets> sortedUpdates;\n-        if ( updates instanceof TreeMap )\n-        {\n-            sortedUpdates = (TreeMap<ValueTuple,PrimitiveLongDiffSets>) updates;\n-        }\n-        else\n-        {\n-            sortedUpdates = new TreeMap<>( ValueTuple.COMPARATOR );\n-            sortedUpdates.putAll( updates );\n-            indexUpdates.put( descriptor, sortedUpdates );\n-        }\n-        return sortedUpdates;\n+      this.visitor = visitor;\n     }\n \n     @Override\n-    public void indexDoUpdateEntry( SchemaDescriptor descriptor, long nodeId,\n-            ValueTuple propertiesBefore, ValueTuple propertiesAfter )\n-    {\n-        NodeStateImpl nodeState = getOrCreateNodeState( nodeId );\n-        Map<ValueTuple,PrimitiveLongDiffSets> updates = getIndexUpdatesByDescriptor( descriptor, true);\n-        if ( propertiesBefore != null )\n-        {\n-            PrimitiveLongDiffSets before = getIndexUpdatesForSeek( updates, propertiesBefore, true );\n-            //noinspection ConstantConditions\n-            before.remove( nodeId );\n-            if ( before.getRemoved().contains( nodeId ) )\n-            {\n-                nodeState.addIndexDiff( before );\n-            }\n-            else\n-            {\n-                nodeState.removeIndexDiff( before );\n-            }\n-        }\n-        if ( propertiesAfter != null )\n-        {\n-            PrimitiveLongDiffSets after = getIndexUpdatesForSeek( updates, propertiesAfter, true );\n-            //noinspection ConstantConditions\n-            after.add( nodeId );\n-            if ( after.getAdded().contains( nodeId ) )\n-            {\n-                nodeState.addIndexDiff( after );\n-            }\n-            else\n-            {\n-                nodeState.removeIndexDiff( after );\n-            }\n-        }\n-    }\n-\n-    private PrimitiveLongDiffSets getIndexUpdatesForSeek(\n-            SchemaDescriptor schema, ValueTuple values, boolean create )\n-    {\n-        Map<ValueTuple,PrimitiveLongDiffSets> updates = getIndexUpdatesByDescriptor( schema, create );\n-        if ( updates != null )\n-        {\n-            return getIndexUpdatesForSeek( updates, values, create );\n-        }\n-        return null;\n-    }\n-\n-    private PrimitiveLongDiffSets getIndexUpdatesForSeek( Map<ValueTuple,PrimitiveLongDiffSets> updates,\n-            ValueTuple values, boolean create )\n+    public boolean visited(int key, String value)\n     {\n-        return create ? updates.computeIfAbsent( values, value -> new PrimitiveLongDiffSets() ) : updates.get( values );\n+      visitor.visitCreatedRelationshipTypeToken(value, key);\n+      return false;\n     }\n+  }\n \n-    private Map<ValueTuple,PrimitiveLongDiffSets> getIndexUpdatesByDescriptor( SchemaDescriptor schema,\n-            boolean create )\n-    {\n-        if ( indexUpdates == null )\n-        {\n-            if ( !create )\n-            {\n-                return null;\n-            }\n-            indexUpdates = new HashMap<>();\n-        }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( schema );\n-        if ( updates == null )\n-        {\n-            if ( !create )\n-            {\n-                return null;\n-            }\n-            updates = new HashMap<>();\n-            indexUpdates.put( schema, updates );\n-        }\n-        return updates;\n-    }\n-\n-    private Map<IndexBackedConstraintDescriptor, Long> createdConstraintIndexesByConstraint()\n-    {\n-        if ( createdConstraintIndexesByConstraint == null )\n-        {\n-            createdConstraintIndexesByConstraint = new HashMap<>();\n-        }\n-        return createdConstraintIndexesByConstraint;\n-    }\n-\n-    private SchemaIndexDescriptor getIndexForIndexBackedConstraint( IndexBackedConstraintDescriptor constraint )\n-    {\n-        return constraint.ownedIndexDescriptor();\n-    }\n+  private static class ConstraintDiffSetsVisitor implements DiffSetsVisitor<ConstraintDescriptor>\n+  {\n+    private final TxStateVisitor visitor;\n \n-    private boolean hasNodeState( long nodeId )\n+    ConstraintDiffSetsVisitor(TxStateVisitor visitor)\n     {\n-        return nodeStatesMap != null && nodeStatesMap.containsKey( nodeId );\n+      this.visitor = visitor;\n     }\n \n     @Override\n-    public PrimitiveLongIterator augmentNodesGetAll( PrimitiveLongIterator committed )\n+    public void visitAdded(ConstraintDescriptor constraint) throws CreateConstraintFailureException\n     {\n-        return addedAndRemovedNodes().augment( committed );\n+      visitor.visitAddedConstraint(constraint);\n     }\n \n     @Override\n-    public RelationshipIterator augmentRelationshipsGetAll( RelationshipIterator committed )\n+    public void visitRemoved(ConstraintDescriptor constraint)\n     {\n-        return addedAndRemovedRelationships().augment( committed );\n+      visitor.visitRemovedConstraint(constraint);\n     }\n+  }\n \n-    @Override\n-    public <EX extends Exception> boolean relationshipVisit( long relId, RelationshipVisitor<EX> visitor ) throws EX\n-    {\n-        return getRelationshipState( relId ).accept( visitor );\n-    }\n+  /**\n+   * This class works around the fact that create-delete in the same transaction is a no-op in {@link DiffSets},\n+   * whereas we need to know total number of explicit removals.\n+   */\n+  private class RemovalsCountingDiffSets extends DiffSets<Long>\n+  {\n+    private PrimitiveLongSet removedFromAdded;\n \n     @Override\n-    public boolean hasDataChanges()\n+    public boolean remove(Long elem)\n     {\n-        return hasDataChanges;\n-    }\n-\n-    /**\n-     * Release all underlying resources. The instance must not be used after calling this method .\n-     */\n-    public void release()\n-    {\n-        if ( !collectionsFactory.collectionsMustBeReleased() )\n+      if (added(false).remove(elem))\n+      {\n+        if (removedFromAdded == null)\n         {\n-            return;\n-        }\n-        if ( labelStatesMap != null )\n-        {\n-            labelStatesMap.close();\n-        }\n-        if ( createdLabelTokens != null )\n-        {\n-            createdLabelTokens.close();\n-        }\n-        if ( createdRelationshipTypeTokens != null )\n-        {\n-            createdRelationshipTypeTokens.close();\n-        }\n-        if ( nodeStatesMap != null )\n-        {\n-            nodeStatesMap.close();\n-        }\n-        if ( relationshipStatesMap != null )\n-        {\n-            relationshipStatesMap.close();\n-        }\n-        if ( nodes != null && nodes.removedFromAdded != null )\n-        {\n-            nodes.removedFromAdded.close();\n-        }\n-        if ( relationships != null && relationships.removedFromAdded != null )\n-        {\n-            relationships.removedFromAdded.close();\n+          removedFromAdded = collectionsFactory.newLongSet();\n         }\n+        removedFromAdded.add(elem);\n+        return true;\n+      }\n+      return removed(true).add(elem);\n     }\n \n-    private static class LabelTokenStateVisitor implements PrimitiveIntObjectVisitor<String,RuntimeException>\n+    private boolean wasRemoved(long id)\n     {\n-        private final TxStateVisitor visitor;\n-\n-        LabelTokenStateVisitor( TxStateVisitor visitor )\n-        {\n-            this.visitor = visitor;\n-        }\n-\n-        @Override\n-        public boolean visited( int key, String value )\n-        {\n-            visitor.visitCreatedLabelToken( value, key );\n-            return false;\n-        }\n+      return (removedFromAdded != null && removedFromAdded.contains(id)) || super.isRemoved(id);\n     }\n+  }\n \n-    private static class PropertyKeyTokenStateVisitor implements PrimitiveIntObjectVisitor<String,RuntimeException>\n-    {\n-        private final TxStateVisitor visitor;\n+  /**\n+   * This class works around the fact that create-delete in the same transaction is a no-op in {@link DiffSets},\n+   * whereas we need to know total number of explicit removals.\n+   */\n+  private class RemovalsCountingRelationshipsDiffSets extends RelationshipDiffSets<Long>\n+  {\n+    private PrimitiveLongSet removedFromAdded;\n \n-        PropertyKeyTokenStateVisitor( TxStateVisitor visitor )\n-        {\n-            this.visitor = visitor;\n-        }\n-\n-        @Override\n-        public boolean visited( int key, String value )\n-        {\n-            visitor.visitCreatedPropertyKeyToken( value, key );\n-            return false;\n-        }\n-    }\n-\n-    private static class RelationshipTypeTokenStateVisitor implements PrimitiveIntObjectVisitor<String,RuntimeException>\n+    private RemovalsCountingRelationshipsDiffSets(RelationshipVisitor.Home txStateRelationshipHome)\n     {\n-        private final TxStateVisitor visitor;\n-\n-        RelationshipTypeTokenStateVisitor( TxStateVisitor visitor )\n-        {\n-            this.visitor = visitor;\n-        }\n-\n-        @Override\n-        public boolean visited( int key, String value )\n-        {\n-            visitor.visitCreatedRelationshipTypeToken( value, key );\n-            return false;\n-        }\n+      super(txStateRelationshipHome);\n     }\n \n-    private static class ConstraintDiffSetsVisitor implements DiffSetsVisitor<ConstraintDescriptor>\n-    {\n-        private final TxStateVisitor visitor;\n-\n-        ConstraintDiffSetsVisitor( TxStateVisitor visitor )\n-        {\n-            this.visitor = visitor;\n-        }\n-\n-        @Override\n-        public void visitAdded( ConstraintDescriptor constraint ) throws CreateConstraintFailureException\n-        {\n-            visitor.visitAddedConstraint( constraint );\n-        }\n-\n-        @Override\n-        public void visitRemoved( ConstraintDescriptor constraint )\n-        {\n-            visitor.visitRemovedConstraint( constraint );\n-        }\n-    }\n-\n-    /**\n-     * This class works around the fact that create-delete in the same transaction is a no-op in {@link DiffSets},\n-     * whereas we need to know total number of explicit removals.\n-     */\n-    private class RemovalsCountingDiffSets extends DiffSets<Long>\n+    @Override\n+    public boolean remove(Long elem)\n     {\n-        private PrimitiveLongSet removedFromAdded;\n-\n-        @Override\n-        public boolean remove( Long elem )\n-        {\n-            if ( added( false ).remove( elem ) )\n-            {\n-                if ( removedFromAdded == null )\n-                {\n-                    removedFromAdded = collectionsFactory.newLongSet();\n-                }\n-                removedFromAdded.add( elem );\n-                return true;\n-            }\n-            return removed( true ).add( elem );\n-        }\n-\n-        private boolean wasRemoved( long id )\n+      if (added(false).remove(elem))\n+      {\n+        if (removedFromAdded == null)\n         {\n-            return (removedFromAdded != null && removedFromAdded.contains( id )) || super.isRemoved( id );\n+          removedFromAdded = collectionsFactory.newLongSet();\n         }\n+        removedFromAdded.add(elem);\n+        return true;\n+      }\n+      return removed(true).add(elem);\n     }\n \n-    /**\n-     * This class works around the fact that create-delete in the same transaction is a no-op in {@link DiffSets},\n-     * whereas we need to know total number of explicit removals.\n-     */\n-    private class RemovalsCountingRelationshipsDiffSets extends RelationshipDiffSets<Long>\n+    private boolean wasRemoved(long id)\n     {\n-        private PrimitiveLongSet removedFromAdded;\n-\n-        private RemovalsCountingRelationshipsDiffSets( RelationshipVisitor.Home txStateRelationshipHome )\n-        {\n-            super( txStateRelationshipHome );\n-        }\n-\n-        @Override\n-        public boolean remove( Long elem )\n-        {\n-            if ( added( false ).remove( elem ) )\n-            {\n-                if ( removedFromAdded == null )\n-                {\n-                    removedFromAdded = collectionsFactory.newLongSet();\n-                }\n-                removedFromAdded.add( elem );\n-                return true;\n-            }\n-            return removed( true ).add( elem );\n-        }\n-\n-        private boolean wasRemoved( long id )\n-        {\n-            return (removedFromAdded != null && removedFromAdded.contains( id )) || super.isRemoved( id );\n-        }\n+      return (removedFromAdded != null && removedFromAdded.contains(id)) || super.isRemoved(id);\n     }\n+  }\n }\n",
            "diff_size": 1906
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "339",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "728",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "734",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1113",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/588/TxState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/588/TxState.java\nindex a464b89c289..3f7ef0a0de7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/588/TxState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/588/TxState.java\n@@ -125,7 +125,7 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     private RemovalsCountingDiffSets nodes;\n     private RemovalsCountingRelationshipsDiffSets relationships;\n \n-    private Map<IndexBackedConstraintDescriptor, Long> createdConstraintIndexesByConstraint;\n+    private Map<IndexBackedConstraintDescriptor,Long> createdConstraintIndexesByConstraint;\n \n     private Map<SchemaDescriptor,Map<ValueTuple,PrimitiveLongDiffSets>> indexUpdates;\n \n@@ -190,9 +190,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     }\n \n     @Override\n-    public void accept( final TxStateVisitor visitor )\n-            throws ConstraintValidationException, CreateConstraintFailureException\n-    {\n+    public void accept( final TxStateVisitor visitor ) throws ConstraintValidationException, CreateConstraintFailureException\n+{\n         // Created nodes\n         if ( nodes != null )\n         {\n@@ -296,9 +295,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         return new RelationshipChangeVisitorAdapter( tx )\n         {\n             @Override\n-            protected void visitAddedRelationship( long relationshipId, int type, long startNode, long endNode )\n-                    throws ConstraintValidationException\n-            {\n+            protected void visitAddedRelationship( long relationshipId, int type, long startNode, long endNode ) throws ConstraintValidationException\n+{\n                 visitor.visitCreatedRelationship( relationshipId, type, startNode, endNode );\n             }\n         };\n@@ -332,17 +330,14 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         return new NodeState.Visitor()\n         {\n             @Override\n-            public void visitLabelChanges( long nodeId, Set<Integer> added, Set<Integer> removed )\n-                    throws ConstraintValidationException\n-            {\n+            public void visitLabelChanges( long nodeId, Set<Integer> added, Set<Integer> removed ) throws ConstraintValidationException\n+{\n                 visitor.visitNodeLabelChanges( nodeId, added, removed );\n             }\n \n             @Override\n-            public void visitPropertyChanges( long entityId, Iterator<StorageProperty> added,\n-                    Iterator<StorageProperty> changed, Iterator<Integer> removed )\n-                    throws ConstraintValidationException\n-            {\n+            public void visitPropertyChanges( long entityId, Iterator<StorageProperty> added, Iterator<StorageProperty> changed, Iterator<Integer> removed ) throws ConstraintValidationException\n+{\n                 visitor.visitNodePropertyChanges( entityId, added, changed, removed );\n             }\n         };\n@@ -376,7 +371,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             labelStatesMap = collectionsFactory.newIntObjectMap();\n         }\n-        return labelStatesMap.computeIfAbsent( labelId, unused -> new DiffSets<>() );\n+\n+return labelStatesMap.computeIfAbsent( labelId, unused -> new DiffSets<>() );\n     }\n \n     private ReadableDiffSets<Long> getLabelStateNodeDiffSets( int labelId )\n@@ -407,7 +403,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             return graphState.augmentProperties( original );\n         }\n-        return original;\n+\n+return original;\n     }\n \n     @Override\n@@ -444,8 +441,7 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     public void nodeDoDelete( long nodeId )\n     {\n         nodes().remove( nodeId );\n-\n-        if ( nodeStatesMap != null )\n+if ( nodeStatesMap != null )\n         {\n             NodeStateImpl nodeState = nodeStatesMap.remove( nodeId );\n             if ( nodeState != null )\n@@ -459,15 +455,15 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n                 nodeState.clear();\n             }\n         }\n-        dataChanged();\n+\n+dataChanged();\n     }\n \n     @Override\n     public void relationshipDoCreate( long id, int relationshipTypeId, long startNodeId, long endNodeId )\n     {\n         relationships().add( id );\n-\n-        if ( startNodeId == endNodeId )\n+if ( startNodeId == endNodeId )\n         {\n             getOrCreateNodeState( startNodeId ).addRelationship( id, relationshipTypeId, Direction.BOTH );\n         }\n@@ -498,8 +494,7 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     public void relationshipDoDelete( long id, int type, long startNodeId, long endNodeId )\n     {\n         relationships().remove( id );\n-\n-        if ( startNodeId == endNodeId )\n+if ( startNodeId == endNodeId )\n         {\n             getOrCreateNodeState( startNodeId ).removeRelationship( id, type, Direction.BOTH );\n         }\n@@ -560,7 +555,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             getOrCreateRelationshipState( relationshipId ).addProperty( propertyKeyId, newValue );\n         }\n-        dataChanged();\n+\n+dataChanged();\n     }\n \n     @Override\n@@ -574,7 +570,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             getOrCreateGraphState().addProperty( propertyKeyId, newValue );\n         }\n-        dataChanged();\n+\n+dataChanged();\n     }\n \n     @Override\n@@ -685,16 +682,14 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     public Cursor<PropertyItem> augmentPropertyCursor( Cursor<PropertyItem> cursor,\n             PropertyContainerState propertyContainerState )\n     {\n-        return propertyContainerState.hasPropertyChanges() ?\n-                propertyCursor.get().init( cursor, propertyContainerState ) : cursor;\n+        return propertyContainerState.hasPropertyChanges() ? propertyCursor.get().init( cursor, propertyContainerState ) : cursor;\n     }\n \n     @Override\n     public Cursor<PropertyItem> augmentSinglePropertyCursor( Cursor<PropertyItem> cursor,\n             PropertyContainerState propertyContainerState, int propertyKeyId )\n     {\n-        return propertyContainerState.hasPropertyChanges() ?\n-                singlePropertyCursor.get().init( cursor, propertyContainerState, propertyKeyId ) : cursor;\n+        return propertyContainerState.hasPropertyChanges() ? singlePropertyCursor.get().init( cursor, propertyContainerState, propertyKeyId ) : cursor;\n     }\n \n     @Override\n@@ -706,7 +701,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n             labelDiffSets.getRemoved().forEach( labels::remove );\n             labelDiffSets.getAdded().forEach( labels::add );\n         }\n-        return labels;\n+\n+return labels;\n     }\n \n     @Override\n@@ -721,28 +717,21 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n             NodeState nodeState,\n             Direction direction )\n     {\n-        return nodeState.hasRelationshipChanges()\n-               ? iteratorRelationshipCursor.get().init( cursor, nodeState.getAddedRelationships( direction ) )\n-               : cursor;\n+        return nodeState.hasRelationshipChanges() ? iteratorRelationshipCursor.get().init( cursor, nodeState.getAddedRelationships( direction ) ) : cursor;\n     }\n \n     @Override\n     public Cursor<RelationshipItem> augmentNodeRelationshipCursor( Cursor<RelationshipItem> cursor,\n             NodeState nodeState,\n-            Direction direction,\n-            int[] relTypes )\n+            Direction direction, int[] relTypes )\n     {\n-        return nodeState.hasRelationshipChanges()\n-               ? iteratorRelationshipCursor.get().init( cursor, nodeState.getAddedRelationships( direction, relTypes ) )\n-               : cursor;\n+        return nodeState.hasRelationshipChanges() ? iteratorRelationshipCursor.get().init( cursor, nodeState.getAddedRelationships( direction, relTypes ) ) : cursor;\n     }\n \n     @Override\n     public Cursor<RelationshipItem> augmentRelationshipsGetAllCursor( Cursor<RelationshipItem> cursor )\n     {\n-        return hasChanges && relationships != null && !relationships.isEmpty()\n-               ? iteratorRelationshipCursor.get().init( cursor, toPrimitiveIterator( relationships.getAdded().iterator() ) )\n-               : cursor;\n+        return hasChanges && relationships != null && !relationships.isEmpty() ? iteratorRelationshipCursor.get().init( cursor, toPrimitiveIterator( relationships.getAdded().iterator() ) ) : cursor;\n     }\n \n     @Override\n@@ -785,7 +774,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n             changes.addAll( nodeDiffSets.getAdded().iterator() );\n             changes.removeAll( nodeDiffSets.getRemoved().iterator() );\n         }\n-        return changes;\n+\n+return changes;\n     }\n \n     @Override\n@@ -796,15 +786,18 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             diff.add( descriptor );\n         }\n-        if ( specificIndexProviders == null )\n+\n+if ( specificIndexProviders == null )\n         {\n             specificIndexProviders = new HashMap<>();\n         }\n-        if ( providerDescriptor != null )\n+\n+if ( providerDescriptor != null )\n         {\n             specificIndexProviders.put( descriptor, providerDescriptor );\n         }\n-        changed();\n+\n+changed();\n     }\n \n     @Override\n@@ -815,7 +808,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             specificIndexProviders.remove( descriptor );\n         }\n-        changed();\n+\n+changed();\n     }\n \n     @Override\n@@ -842,7 +836,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             indexChanges = new DiffSets<>();\n         }\n-        return indexChanges;\n+\n+return indexChanges;\n     }\n \n     @Override\n@@ -857,7 +852,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             nodes = new RemovalsCountingDiffSets();\n         }\n-        return nodes;\n+\n+return nodes;\n     }\n \n     @Override\n@@ -890,7 +886,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             relationships = new RemovalsCountingRelationshipsDiffSets( this );\n         }\n-        return relationships;\n+\n+return relationships;\n     }\n \n     @Override\n@@ -905,7 +902,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             nodeStatesMap = collectionsFactory.newLongObjectMap();\n         }\n-        return nodeStatesMap.computeIfAbsent( nodeId, unused -> new NodeStateImpl( nodeId, this ) );\n+\n+return nodeStatesMap.computeIfAbsent( nodeId, unused -> new NodeStateImpl( nodeId, this ) );\n     }\n \n     private RelationshipStateImpl getOrCreateRelationshipState( long relationshipId )\n@@ -914,7 +912,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             relationshipStatesMap = collectionsFactory.newLongObjectMap();\n         }\n-        return relationshipStatesMap.computeIfAbsent( relationshipId, unused -> new RelationshipStateImpl( relationshipId ) );\n+\n+return relationshipStatesMap.computeIfAbsent( relationshipId, unused -> new RelationshipStateImpl( relationshipId ) );\n     }\n \n     private GraphState getOrCreateGraphState()\n@@ -923,7 +922,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             graphState = new GraphState();\n         }\n-        return graphState;\n+\n+return graphState;\n     }\n \n     @Override\n@@ -971,7 +971,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             constraintsChanges = new DiffSets<>();\n         }\n-        return constraintsChanges;\n+\n+return constraintsChanges;\n     }\n \n     @Override\n@@ -982,7 +983,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             indexDoDrop( getIndexForIndexBackedConstraint( (IndexBackedConstraintDescriptor) constraint ) );\n         }\n-        changed();\n+\n+changed();\n     }\n \n     @Override\n@@ -998,14 +1000,14 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             return map( this::getIndexForIndexBackedConstraint, createdConstraintIndexesByConstraint.keySet() );\n         }\n-        return Iterables.empty();\n+\n+return Iterables.empty();\n     }\n \n     @Override\n     public Long indexCreatedForConstraint( ConstraintDescriptor constraint )\n     {\n-        return createdConstraintIndexesByConstraint == null ? null :\n-                createdConstraintIndexesByConstraint.get( constraint );\n+        return createdConstraintIndexesByConstraint == null ? null : createdConstraintIndexesByConstraint.get( constraint );\n     }\n \n     @Override\n@@ -1015,36 +1017,37 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             return PrimitiveLongReadableDiffSets.EMPTY;\n         }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor.schema() );\n+        Map<ValueTuple,PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor.schema() );\n         if ( updates == null )\n         {\n             return PrimitiveLongReadableDiffSets.EMPTY;\n         }\n-        PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n+\n+PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n         for ( PrimitiveLongDiffSets diffSet : updates.values() )\n         {\n             diffs.addAll( diffSet.getAdded().iterator() );\n             diffs.removeAll( diffSet.getRemoved().iterator() );\n         }\n-        return diffs;\n+\n+return diffs;\n     }\n \n     @Override\n     public PrimitiveLongReadableDiffSets indexUpdatesForSuffixOrContains( SchemaIndexDescriptor descriptor, IndexQuery query )\n     {\n-        assert descriptor.schema().getPropertyIds().length == 1 :\n-                \"Suffix and contains queries are only supported for single property queries\";\n-\n-        if ( indexUpdates == null )\n+        assert descriptor.schema().getPropertyIds().length == 1 : \"Suffix and contains queries are only supported for single property queries\";\n+if ( indexUpdates == null )\n         {\n             return PrimitiveLongReadableDiffSets.EMPTY;\n         }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor.schema() );\n+        Map<ValueTuple,PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor.schema() );\n         if ( updates == null )\n         {\n             return PrimitiveLongReadableDiffSets.EMPTY;\n         }\n-        PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n+\n+PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n         for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : updates.entrySet() )\n         {\n             if ( query.acceptsValue( entry.getKey().getOnlyValue() ) )\n@@ -1071,7 +1074,7 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         Value upper = predicate.toValue();\n         assert lower != null && upper != null : \"Use Values.NO_VALUE to encode the lack of a bound\";\n \n-        TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates( descriptor.schema() );\n+        TreeMap<ValueTuple,PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates( descriptor.schema() );\n         if ( sortedUpdates == null )\n         {\n             return PrimitiveLongReadableDiffSets.EMPTY;\n@@ -1107,9 +1110,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n \n         PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n \n-        NavigableMap<ValueTuple,PrimitiveLongDiffSets> inRangeX =\n-                sortedUpdates.subMap( selectedLower, selectedIncludeLower, selectedUpper, selectedIncludeUpper );\n-        for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : inRangeX.entrySet() )\n+        NavigableMap<ValueTuple,PrimitiveLongDiffSets> inRangeX = sortedUpdates.subMap( selectedLower, selectedIncludeLower, selectedUpper, selectedIncludeUpper );\n+for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : inRangeX.entrySet() )\n         {\n             ValueTuple values = entry.getKey();\n             PrimitiveLongDiffSets diffForSpecificValue = entry.getValue();\n@@ -1127,12 +1129,13 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     @Override\n     public PrimitiveLongReadableDiffSets indexUpdatesForRangeSeekByPrefix( SchemaIndexDescriptor descriptor, String prefix )\n     {\n-        TreeMap<ValueTuple, PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates( descriptor.schema() );\n+        TreeMap<ValueTuple,PrimitiveLongDiffSets> sortedUpdates = getSortedIndexUpdates( descriptor.schema() );\n         if ( sortedUpdates == null )\n         {\n             return PrimitiveLongReadableDiffSets.EMPTY;\n         }\n-        ValueTuple floor = ValueTuple.of( Values.stringValue( prefix ) );\n+\n+ValueTuple floor = ValueTuple.of( Values.stringValue( prefix ) );\n         PrimitiveLongDiffSets diffs = new PrimitiveLongDiffSets();\n         for ( Map.Entry<ValueTuple,PrimitiveLongDiffSets> entry : sortedUpdates.subMap( floor, MAX_STRING_TUPLE ).entrySet() )\n         {\n@@ -1154,13 +1157,13 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n     // Ensure sorted index updates for a given index. This is needed for range query support and\n     // may involve converting the existing hash map first\n     //\n-    private TreeMap<ValueTuple, PrimitiveLongDiffSets> getSortedIndexUpdates( SchemaDescriptor descriptor )\n+    private TreeMap<ValueTuple,PrimitiveLongDiffSets> getSortedIndexUpdates( SchemaDescriptor descriptor )\n     {\n         if ( indexUpdates == null )\n         {\n             return null;\n         }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor );\n+        Map<ValueTuple,PrimitiveLongDiffSets> updates = indexUpdates.get( descriptor );\n         if ( updates == null )\n         {\n             return null;\n@@ -1176,7 +1179,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n             sortedUpdates.putAll( updates );\n             indexUpdates.put( descriptor, sortedUpdates );\n         }\n-        return sortedUpdates;\n+\n+return sortedUpdates;\n     }\n \n     @Override\n@@ -1215,8 +1219,7 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         }\n     }\n \n-    private PrimitiveLongDiffSets getIndexUpdatesForSeek(\n-            SchemaDescriptor schema, ValueTuple values, boolean create )\n+    private PrimitiveLongDiffSets getIndexUpdatesForSeek( SchemaDescriptor schema, ValueTuple values, boolean create )\n     {\n         Map<ValueTuple,PrimitiveLongDiffSets> updates = getIndexUpdatesByDescriptor( schema, create );\n         if ( updates != null )\n@@ -1241,28 +1244,32 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n             {\n                 return null;\n             }\n-            indexUpdates = new HashMap<>();\n+\n+indexUpdates = new HashMap<>();\n         }\n-        Map<ValueTuple, PrimitiveLongDiffSets> updates = indexUpdates.get( schema );\n+        Map<ValueTuple,PrimitiveLongDiffSets> updates = indexUpdates.get( schema );\n         if ( updates == null )\n         {\n             if ( !create )\n             {\n                 return null;\n             }\n-            updates = new HashMap<>();\n+\n+updates = new HashMap<>();\n             indexUpdates.put( schema, updates );\n         }\n-        return updates;\n+\n+return updates;\n     }\n \n-    private Map<IndexBackedConstraintDescriptor, Long> createdConstraintIndexesByConstraint()\n+    private Map<IndexBackedConstraintDescriptor,Long> createdConstraintIndexesByConstraint()\n     {\n         if ( createdConstraintIndexesByConstraint == null )\n         {\n             createdConstraintIndexesByConstraint = new HashMap<>();\n         }\n-        return createdConstraintIndexesByConstraint;\n+\n+return createdConstraintIndexesByConstraint;\n     }\n \n     private SchemaIndexDescriptor getIndexForIndexBackedConstraint( IndexBackedConstraintDescriptor constraint )\n@@ -1308,31 +1315,38 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n         {\n             return;\n         }\n-        if ( labelStatesMap != null )\n+\n+if ( labelStatesMap != null )\n         {\n             labelStatesMap.close();\n         }\n-        if ( createdLabelTokens != null )\n+\n+if ( createdLabelTokens != null )\n         {\n             createdLabelTokens.close();\n         }\n-        if ( createdRelationshipTypeTokens != null )\n+\n+if ( createdRelationshipTypeTokens != null )\n         {\n             createdRelationshipTypeTokens.close();\n         }\n-        if ( nodeStatesMap != null )\n+\n+if ( nodeStatesMap != null )\n         {\n             nodeStatesMap.close();\n         }\n-        if ( relationshipStatesMap != null )\n+\n+if ( relationshipStatesMap != null )\n         {\n             relationshipStatesMap.close();\n         }\n-        if ( nodes != null && nodes.removedFromAdded != null )\n+\n+if ( nodes != null && nodes.removedFromAdded != null )\n         {\n             nodes.removedFromAdded.close();\n         }\n-        if ( relationships != null && relationships.removedFromAdded != null )\n+\n+if ( relationships != null && relationships.removedFromAdded != null )\n         {\n             relationships.removedFromAdded.close();\n         }\n@@ -1431,7 +1445,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n                 removedFromAdded.add( elem );\n                 return true;\n             }\n-            return removed( true ).add( elem );\n+\n+return removed( true ).add( elem );\n         }\n \n         private boolean wasRemoved( long id )\n@@ -1465,7 +1480,8 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n                 removedFromAdded.add( elem );\n                 return true;\n             }\n-            return removed( true ).add( elem );\n+\n+return removed( true ).add( elem );\n         }\n \n         private boolean wasRemoved( long id )\n@@ -1473,4 +1489,4 @@ public class TxState implements TransactionState, RelationshipVisitor.Home\n             return (removedFromAdded != null && removedFromAdded.contains( id )) || super.isRemoved( id );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 131
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
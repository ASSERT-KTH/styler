{
    "project_name": "neo4j-neo4j",
    "error_id": "884",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "300",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "302",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/884/LogConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/884/LogConfig.java\nindex 6a7686e76b9..ba3dc8b9941 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/884/LogConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/884/LogConfig.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging.log4j;\n \n import org.apache.logging.log4j.Level;\n@@ -54,37 +55,37 @@ public final class LogConfig\n     {\n     }\n \n-    public static void updateLogLevel( org.neo4j.logging.Level level, Neo4jLoggerContext context )\n+    public static void updateLogLevel(org.neo4j.logging.Level level, Neo4jLoggerContext context)\n     {\n         LoggerContext log4jContext = context.getLoggerContext();\n         Configuration config = log4jContext.getConfiguration();\n-        Level newLevel = convertNeo4jLevelToLevel( level );\n+        Level newLevel = convertNeo4jLevelToLevel(level);\n \n         LoggerConfig loggerConfig = config.getRootLogger();\n-        loggerConfig.setLevel( newLevel );\n+        loggerConfig.setLevel(newLevel);\n \n         // This causes all Loggers to refetch information from their LoggerConfig.\n         log4jContext.updateLoggers();\n     }\n \n-    public static void reconfigureLogging( Neo4jLoggerContext ctx, Builder builder )\n+    public static void reconfigureLogging(Neo4jLoggerContext ctx, Builder builder)\n     {\n-        checkArgument( !ctx.haveExternalResources(), \"Can not reconfigure logging that is using output stream\" );\n+        checkArgument(!ctx.haveExternalResources(), \"Can not reconfigure logging that is using output stream\");\n         LoggerContext log4jContext = ctx.getLoggerContext();\n-        configureLogging( log4jContext, builder );\n+        configureLogging(log4jContext, builder);\n     }\n \n-    public static Builder createBuilder( FileSystemAbstraction fs, Path logPath, org.neo4j.logging.Level level )\n+    public static Builder createBuilder(FileSystemAbstraction fs, Path logPath, org.neo4j.logging.Level level)\n     {\n-        return new Builder( fs, logPath, level );\n+        return new Builder(fs, logPath, level);\n     }\n \n-    public static Builder createBuilder( OutputStream outputStream, org.neo4j.logging.Level level )\n+    public static Builder createBuilder(OutputStream outputStream, org.neo4j.logging.Level level)\n     {\n-        return new Builder( outputStream, level );\n+        return new Builder(outputStream, level);\n     }\n \n-    private static void configureLogging( LoggerContext context, Builder builder )\n+    private static void configureLogging(LoggerContext context, Builder builder)\n     {\n         Configuration configuration = new DefaultConfiguration()\n         {\n@@ -95,102 +96,101 @@ public final class LogConfig\n             }\n         };\n \n-        Neo4jLogLayout layout = getLayout( builder );\n+        Neo4jLogLayout layout = getLayout(builder);\n \n-        Appender appender = getAppender( builder, layout );\n+        Appender appender = getAppender(builder, layout);\n         appender.start();\n-        configuration.addAppender( appender );\n+        configuration.addAppender(appender);\n \n         // Must be done after the appender is started to get first file without header - which is the\n         // desired behavior since diagnostics (the usual header) is written when starting dbms.\n-        if ( builder.headerLogger != null )\n+        if (builder.headerLogger != null)\n         {\n-            layout.setHeaderLogger( builder.headerLogger, builder.headerClassName );\n+            layout.setHeaderLogger(builder.headerLogger, builder.headerClassName);\n         }\n \n         LoggerConfig rootLogger = configuration.getRootLogger();\n-        rootLogger.addAppender( appender, null, null );\n-        rootLogger.setLevel( builder.level );\n+        rootLogger.addAppender(appender, null, null);\n+        rootLogger.setLevel(builder.level);\n \n-        context.setConfiguration( configuration );\n+        context.setConfiguration(configuration);\n     }\n \n-    private static Neo4jLogLayout getLayout( Builder builder )\n+    private static Neo4jLogLayout getLayout(Builder builder)\n     {\n         String datePattern = \"yyyy-MM-dd HH:mm:ss.SSSZ\";\n-        if ( builder.format == FormattedLogFormat.STANDARD_FORMAT )\n+        if (builder.format == FormattedLogFormat.STANDARD_FORMAT)\n         {\n             String date = \"%d{\" + datePattern + \"}\" + (builder.timezone == LogTimeZone.UTC ? \"{GMT+0}\" : \"\");\n-            return Neo4jLogLayout.createLayout( builder.includeCategory ?\n-                    date + \" %-5p [%c{1.}] %m%n\" :\n-                    date + \" %-5p %m%n\" );\n+            return Neo4jLogLayout.createLayout(builder.includeCategory ?\n+              date + \" %-5p [%c{1.}] %m%n\" :\n+              date + \" %-5p %m%n\");\n         }\n-        return Neo4jJsonLogLayout.createLayout( datePattern, builder.timezone == LogTimeZone.UTC ? \"GMT+0\" : null, builder.includeCategory );\n+        return Neo4jJsonLogLayout.createLayout(datePattern, builder.timezone == LogTimeZone.UTC ? \"GMT+0\" : null, builder.includeCategory);\n     }\n \n-    private static Appender getAppender( Builder builder, Layout<String> layout )\n+    private static Appender getAppender(Builder builder, Layout<String> layout)\n     {\n         OutputStream outputStream = builder.outputStream;\n \n-        if ( builder.logToSystemOut )\n+        if (builder.logToSystemOut)\n         {\n             return ConsoleAppender.newBuilder()\n-                    .setName( APPENDER_NAME )\n-                    .setLayout( layout )\n-                    .setTarget( ConsoleAppender.Target.SYSTEM_OUT )\n-                    .build();\n-        }\n-        else if ( builder.fileSystemAbstraction instanceof DefaultFileSystemAbstraction )\n+              .setName(APPENDER_NAME)\n+              .setLayout(layout)\n+              .setTarget(ConsoleAppender.Target.SYSTEM_OUT)\n+              .build();\n+        } else if (builder.fileSystemAbstraction instanceof DefaultFileSystemAbstraction)\n         {\n             // Uses RollingFile appender even if no rotation is requested (but with threshold that won't be reached) to be able to\n             // reconfigure between with and without rotation.\n-            return createRollingFileAppender( builder, layout );\n+            return createRollingFileAppender(builder, layout);\n         }\n-        return ((OutputStreamAppender.Builder<?>) OutputStreamAppender.newBuilder().setName( APPENDER_NAME ).setLayout( layout ))\n-                .setTarget( outputStream ).build();\n+        return ((OutputStreamAppender.Builder<?>) OutputStreamAppender.newBuilder().setName(APPENDER_NAME).setLayout(layout))\n+          .setTarget(outputStream).build();\n     }\n \n-    private static Appender createRollingFileAppender( Builder builder, Layout<String> layout )\n+    private static Appender createRollingFileAppender(Builder builder, Layout<String> layout)\n     {\n         long rotationThreshold = builder.rotationThreshold;\n         int maxArchives = builder.maxArchives;\n \n-        if ( builder.rotationThreshold == 0 || builder.maxArchives == 0 )\n+        if (builder.rotationThreshold == 0 || builder.maxArchives == 0)\n         {\n             // Should not rotate - set threshold that won't be reached.\n             rotationThreshold = Long.MAX_VALUE;\n             maxArchives = 1;\n         }\n \n-        SizeBasedTriggeringPolicy policy = SizeBasedTriggeringPolicy.createPolicy( String.valueOf( rotationThreshold ) );\n+        SizeBasedTriggeringPolicy policy = SizeBasedTriggeringPolicy.createPolicy(String.valueOf(rotationThreshold));\n \n         DefaultRolloverStrategy rolloverStrategy =\n-                DefaultRolloverStrategy.newBuilder().withMax( String.valueOf( maxArchives ) ).withFileIndex( \"min\" ).build();\n+          DefaultRolloverStrategy.newBuilder().withMax(String.valueOf(maxArchives)).withFileIndex(\"min\").build();\n \n         return RollingFileAppender.newBuilder()\n-                .setName( APPENDER_NAME )\n-                .setLayout( layout )\n-                .withCreateOnDemand( builder.createOnDemand )\n-                .withFileName( builder.logPath.toString() )\n-                .withFilePattern( builder.logPath + \".%i\" )\n-                .withPolicy( policy )\n-                .withStrategy( rolloverStrategy )\n-                .build();\n+          .setName(APPENDER_NAME)\n+          .setLayout(layout)\n+          .withCreateOnDemand(builder.createOnDemand)\n+          .withFileName(builder.logPath.toString())\n+          .withFilePattern(builder.logPath + \".%i\")\n+          .withPolicy(policy)\n+          .withStrategy(rolloverStrategy)\n+          .build();\n     }\n \n-    private static Level convertNeo4jLevelToLevel( org.neo4j.logging.Level level )\n+    private static Level convertNeo4jLevelToLevel(org.neo4j.logging.Level level)\n     {\n-        switch ( level )\n+        switch (level)\n         {\n-        case ERROR:\n-            return Level.ERROR;\n-        case WARN:\n-            return Level.WARN;\n-        case INFO:\n-            return Level.INFO;\n-        case DEBUG:\n-        default:\n-            return Level.DEBUG;\n+            case ERROR:\n+                return Level.ERROR;\n+            case WARN:\n+                return Level.WARN;\n+            case INFO:\n+                return Level.INFO;\n+            case DEBUG:\n+            default:\n+                return Level.DEBUG;\n         }\n     }\n \n@@ -210,47 +210,47 @@ public final class LogConfig\n         private boolean createOnDemand;\n         private FileSystemAbstraction fileSystemAbstraction;\n \n-        private Builder( FileSystemAbstraction fileSystemAbstraction, Path logPath, org.neo4j.logging.Level level )\n+        private Builder(FileSystemAbstraction fileSystemAbstraction, Path logPath, org.neo4j.logging.Level level)\n         {\n             this.fileSystemAbstraction = fileSystemAbstraction;\n             this.logPath = logPath;\n             this.outputStream = null;\n-            this.level = convertNeo4jLevelToLevel( level );\n+            this.level = convertNeo4jLevelToLevel(level);\n         }\n \n-        private Builder( OutputStream outputStream, org.neo4j.logging.Level level )\n+        private Builder(OutputStream outputStream, org.neo4j.logging.Level level)\n         {\n             this.logPath = null;\n             this.outputStream = outputStream;\n-            this.level = convertNeo4jLevelToLevel( level );\n+            this.level = convertNeo4jLevelToLevel(level);\n         }\n \n-        public Builder withRotation( long rotationThreshold, int maxArchives )\n+        public Builder withRotation(long rotationThreshold, int maxArchives)\n         {\n             this.rotationThreshold = rotationThreshold;\n             this.maxArchives = maxArchives;\n             return this;\n         }\n \n-        public Builder withTimezone( LogTimeZone timezone )\n+        public Builder withTimezone(LogTimeZone timezone)\n         {\n             this.timezone = timezone;\n             return this;\n         }\n \n-        public Builder withFormat( FormattedLogFormat format )\n+        public Builder withFormat(FormattedLogFormat format)\n         {\n             this.format = format;\n             return this;\n         }\n \n-        public Builder withCategory( boolean includeCategory )\n+        public Builder withCategory(boolean includeCategory)\n         {\n             this.includeCategory = includeCategory;\n             return this;\n         }\n \n-        public Builder withHeaderLogger( Consumer<Log> headerLogger, String headerClassName )\n+        public Builder withHeaderLogger(Consumer<Log> headerLogger, String headerClassName)\n         {\n             this.headerLogger = headerLogger;\n             this.headerClassName = headerClassName;\n@@ -273,37 +273,35 @@ public final class LogConfig\n         {\n             try\n             {\n-                LoggerContext context = new LoggerContext( \"loggercontext\" );\n+                LoggerContext context = new LoggerContext(\"loggercontext\");\n \n                 // We only need to have a rotating file supplier for the real file system\n-                if ( fileSystemAbstraction instanceof DefaultFileSystemAbstraction )\n+                if (fileSystemAbstraction instanceof DefaultFileSystemAbstraction)\n                 {\n-                    if ( outputStream != null )\n+                    if (outputStream != null)\n                     {\n-                        throw new IllegalStateException( \"When using filesystem abstraction you cannot provide a stream since we cant rotate that\" );\n+                        throw new IllegalStateException(\"When using filesystem abstraction you cannot provide a stream since we cant rotate that\");\n                     }\n-                    configureLogging( context, this );\n-                    return new Neo4jLoggerContext( context, null );\n+                    configureLogging(context, this);\n+                    return new Neo4jLoggerContext(context, null);\n                 }\n \n                 // Everything else should be fine without rotation\n-                if ( outputStream == null )\n+                if (outputStream == null)\n                 {\n                     // We are use a different file system than DefaultFileSystemAbstraction, we cannot use log4j file appenders here\n-                    fileSystemAbstraction.mkdirs( logPath.getParent() );\n-                    outputStream = fileSystemAbstraction.openAsOutputStream( logPath, true );\n-                    configureLogging( context, this );\n-                    return new Neo4jLoggerContext( context, outputStream );\n-                }\n-                else\n+                    fileSystemAbstraction.mkdirs(logPath.getParent());\n+                    outputStream = fileSystemAbstraction.openAsOutputStream(logPath, true);\n+                    configureLogging(context, this);\n+                    return new Neo4jLoggerContext(context, outputStream);\n+                } else\n                 {\n-                    configureLogging( context, this );\n-                    return new Neo4jLoggerContext( context, null );\n+                    configureLogging(context, this);\n+                    return new Neo4jLoggerContext(context, null);\n                 }\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n-                throw new UncheckedIOException( e );\n+                throw new UncheckedIOException(e);\n             }\n         }\n     }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/884/LogConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/884/LogConfig.java\nindex 6a7686e76b9..51130fbe467 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/884/LogConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/884/LogConfig.java\n@@ -307,4 +307,4 @@ public final class LogConfig\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
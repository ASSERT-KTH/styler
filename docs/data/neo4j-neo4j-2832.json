{
    "project_name": "neo4j-neo4j",
    "error_id": "2832",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2832/AbstractCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2832/AbstractCommand.java\nindex 36b49a5a530..c604433c0a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2832/AbstractCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2832/AbstractCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cli;\n \n import picocli.CommandLine;\n@@ -32,26 +33,26 @@ import org.neo4j.kernel.internal.Version;\n import static java.util.Objects.requireNonNull;\n \n @CommandLine.Command(\n-        headerHeading = \"%n\",\n-        synopsisHeading = \"%n@|bold,underline USAGE|@%n%n\",\n-        descriptionHeading = \"%n@|bold,underline DESCRIPTION|@%n%n\",\n-        optionListHeading = \"%n@|bold,underline OPTIONS|@%n%n\",\n-        parameterListHeading = \"%n@|bold,underline PARAMETERS|@%n%n\",\n-        showDefaultValues = true,\n-        sortOptions = false\n+  headerHeading = \"%n\",\n+  synopsisHeading = \"%n@|bold,underline USAGE|@%n%n\",\n+  descriptionHeading = \"%n@|bold,underline DESCRIPTION|@%n%n\",\n+  optionListHeading = \"%n@|bold,underline OPTIONS|@%n%n\",\n+  parameterListHeading = \"%n@|bold,underline PARAMETERS|@%n%n\",\n+  showDefaultValues = true,\n+  sortOptions = false\n )\n public abstract class AbstractCommand implements Command\n {\n-    @Option( names = \"--verbose\", arity = \"0\", description = \"Enable verbose output.\" )\n+    @Option(names = \"--verbose\", arity = \"0\", description = \"Enable verbose output.\")\n     protected boolean verbose;\n \n     protected final ExecutionContext ctx;\n     @Spec\n     protected CommandSpec spec;\n \n-    protected AbstractCommand( ExecutionContext ctx )\n+    protected AbstractCommand(ExecutionContext ctx)\n     {\n-        this.ctx = requireNonNull( ctx );\n+        this.ctx = requireNonNull(ctx);\n     }\n \n     protected abstract void execute() throws Exception;\n@@ -59,23 +60,21 @@ public abstract class AbstractCommand implements Command\n     @Override\n     public Integer call() throws Exception\n     {\n-        if ( verbose )\n+        if (verbose)\n         {\n             printVerboseHeader();\n         }\n         try\n         {\n             execute();\n-        }\n-        catch ( CommandFailedException e )\n+        } catch (CommandFailedException e)\n         {\n-            if ( verbose )\n+            if (verbose)\n             {\n-                e.printStackTrace( ctx.err() );\n-            }\n-            else\n+                e.printStackTrace(ctx.err());\n+            } else\n             {\n-                ctx.err().println( e.getMessage() );\n+                ctx.err().println(e.getMessage());\n             }\n             return e.getExitCode();\n         }\n@@ -85,7 +84,7 @@ public abstract class AbstractCommand implements Command\n     private void printVerboseHeader()\n     {\n         PrintStream out = ctx.out();\n-        out.println( \"neo4j \" + Version.getNeo4jVersion() );\n-        SystemDiagnostics.JAVA_VIRTUAL_MACHINE.dump( out::println );\n+        out.println(\"neo4j \" + Version.getNeo4jVersion());\n+        SystemDiagnostics.JAVA_VIRTUAL_MACHINE.dump(out::println);\n     }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
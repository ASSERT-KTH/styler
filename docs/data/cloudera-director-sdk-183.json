{
    "project_name": "cloudera-director-sdk",
    "error_id": "183",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/183/VersionsApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/183/VersionsApi.java\nindex cb6c70dcf78..781bb23f5f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/183/VersionsApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/183/VersionsApi.java\n@@ -20,6 +20,7 @@ import java.util.HashMap;\n import java.util.Map;\n \n public class VersionsApi {\n+\n   private ApiClient apiClient;\n \n   public VersionsApi(ApiClient apiClient) {\n@@ -56,8 +57,6 @@ public class VersionsApi {\n \n     String contentType = \"application/json\";\n \n-    return apiClient.invokeAPI(endpoint, \"GET\", queryParams, null, headerParams, formParams,\n-        contentType);\n+    return apiClient.invokeAPI(endpoint, \"GET\", queryParams, null, headerParams, formParams, contentType);\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "51",
                    "column": "19",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/183/VersionsApi.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/183/VersionsApi.java\nindex cb6c70dcf78..db5fa7c8a9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/183/VersionsApi.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/183/VersionsApi.java\n@@ -19,12 +19,15 @@ package com.cloudera.director.client.common;\n import java.util.HashMap;\n import java.util.Map;\n \n+\n public class VersionsApi {\n+\n   private ApiClient apiClient;\n \n+\n   public VersionsApi(ApiClient apiClient) {\n-    this.apiClient = apiClient;\n-  }\n+                                          this.apiClient = apiClient;\n+                         }\n \n   /**\n    * Returns the current version information.\n@@ -32,9 +35,9 @@ public class VersionsApi {\n    * @return The current version information.\n    * @throws ApiException\n    */\n+\n   public Version get() throws ApiException {\n-    return (Version) ApiClient.deserialize(getResponse(\"/api/versions\"), \"\",\n-        Version.class);\n+    return (Version)ApiClient.deserialize(getResponse(\"/api/versions\"), \"\", Version.class);\n   }\n \n   /**\n@@ -43,21 +46,22 @@ public class VersionsApi {\n    * @return The latest API version supported by Director.\n    * @throws ApiException\n    */\n+\n   public String getLatestApiVersion() throws ApiException {\n-    return (String) ApiClient.deserialize(getResponse(\"/api/versions/latest\"), \"\", String.class);\n+    return (String)ApiClient.deserialize(getResponse(\"/api/versions/latest\"), \"\", String.class);\n   }\n \n   // Gets the response as a string from the given endpoint\n+\n   private String getResponse(String endpoint) throws ApiException {\n     // query params\n     Map<String, String> queryParams = new HashMap<String, String>();\n+\n     Map<String, String> headerParams = new HashMap<String, String>();\n+\n     Map<String, String> formParams = new HashMap<String, String>();\n \n     String contentType = \"application/json\";\n-\n-    return apiClient.invokeAPI(endpoint, \"GET\", queryParams, null, headerParams, formParams,\n-        contentType);\n+    return apiClient.invokeAPI(endpoint, \"GET\", queryParams, null, headerParams, formParams, contentType);\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
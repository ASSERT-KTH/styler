{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1559",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1559/FloatingPointValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1559/FloatingPointValue.java\nindex 9cdc2d21334..6bfebde564e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1559/FloatingPointValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1559/FloatingPointValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import org.neo4j.hashing.HashFunction;\n@@ -24,129 +25,127 @@ import org.neo4j.values.utils.ValueMath;\n \n public abstract class FloatingPointValue extends NumberValue\n {\n-    @Override\n-    public final boolean equals( long x )\n-    {\n-        return NumberValues.numbersEqual( doubleValue(), x );\n-    }\n-\n-    @Override\n-    public final boolean equals( double x )\n-    {\n-        return doubleValue() == x;\n-    }\n-\n-    @Override\n-    public final int computeHash()\n-    {\n-        return NumberValues.hash( doubleValue() );\n-    }\n-\n-    @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n-    {\n-        return hashFunction.update( hash, Double.doubleToLongBits( doubleValue() ) );\n-    }\n-\n-    @Override\n-    public boolean eq( Object other )\n-    {\n-        return other instanceof Value && equals( (Value) other );\n-    }\n-\n-    @Override\n-    public final boolean equals( Value other )\n-    {\n-        if ( other instanceof FloatingPointValue )\n-        {\n-            FloatingPointValue that = (FloatingPointValue) other;\n-            return this.doubleValue() == that.doubleValue();\n-        }\n-        else if ( other instanceof IntegralValue )\n-        {\n-            IntegralValue that = (IntegralValue) other;\n-            return NumberValues.numbersEqual( this.doubleValue(), that.longValue() );\n-        }\n-        else\n-        {\n-            return false;\n-        }\n-    }\n-\n-    @Override\n-    public NumberType numberType()\n-    {\n-        return NumberType.FLOATING_POINT;\n-    }\n-\n-    @Override\n-    public int compareTo( IntegralValue other )\n-    {\n-        return NumberValues.compareDoubleAgainstLong( doubleValue(), other.longValue() );\n-    }\n-\n-    @Override\n-    public int compareTo( FloatingPointValue other )\n-    {\n-        return Double.compare( doubleValue(), other.doubleValue() );\n-    }\n-\n-    @Override\n-    public boolean isNaN()\n-    {\n-        return Double.isNaN( this.doubleValue() );\n-    }\n-\n-    @Override\n-    public long longValue()\n-    {\n-        return (long) doubleValue();\n-    }\n-\n-    @Override\n-    public DoubleValue minus( long b )\n-    {\n-        return ValueMath.subtract( doubleValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue minus( double b )\n-    {\n-        return ValueMath.subtract( doubleValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue plus( long b )\n-    {\n-        return ValueMath.add( doubleValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue plus( double b )\n-    {\n-        return ValueMath.add( doubleValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue times( long b )\n-    {\n-        return ValueMath.multiply( doubleValue(), b );\n-    }\n-\n-    @Override\n-    public DoubleValue times( double b )\n-    {\n-        return ValueMath.multiply( doubleValue(), b );\n-    }\n-\n-    public DoubleValue dividedBy( long b )\n-    {\n-        return Values.doubleValue( doubleValue() / b );\n-    }\n-\n-    @Override\n-    public DoubleValue dividedBy( double b )\n-    {\n-        return Values.doubleValue( doubleValue() / b );\n-    }\n+  @Override\n+  public final boolean equals(long x)\n+  {\n+    return NumberValues.numbersEqual(doubleValue(), x);\n+  }\n+\n+  @Override\n+  public final boolean equals(double x)\n+  {\n+    return doubleValue() == x;\n+  }\n+\n+  @Override\n+  public final int computeHash()\n+  {\n+    return NumberValues.hash(doubleValue());\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    return hashFunction.update(hash, Double.doubleToLongBits(doubleValue()));\n+  }\n+\n+  @Override\n+  public boolean eq(Object other)\n+  {\n+    return other instanceof Value && equals((Value) other);\n+  }\n+\n+  @Override\n+  public final boolean equals(Value other)\n+  {\n+    if (other instanceof FloatingPointValue)\n+    {\n+      FloatingPointValue that = (FloatingPointValue) other;\n+      return this.doubleValue() == that.doubleValue();\n+    } else if (other instanceof IntegralValue)\n+    {\n+      IntegralValue that = (IntegralValue) other;\n+      return NumberValues.numbersEqual(this.doubleValue(), that.longValue());\n+    } else\n+    {\n+      return false;\n+    }\n+  }\n+\n+  @Override\n+  public NumberType numberType()\n+  {\n+    return NumberType.FLOATING_POINT;\n+  }\n+\n+  @Override\n+  public int compareTo(IntegralValue other)\n+  {\n+    return NumberValues.compareDoubleAgainstLong(doubleValue(), other.longValue());\n+  }\n+\n+  @Override\n+  public int compareTo(FloatingPointValue other)\n+  {\n+    return Double.compare(doubleValue(), other.doubleValue());\n+  }\n+\n+  @Override\n+  public boolean isNaN()\n+  {\n+    return Double.isNaN(this.doubleValue());\n+  }\n+\n+  @Override\n+  public long longValue()\n+  {\n+    return (long) doubleValue();\n+  }\n+\n+  @Override\n+  public DoubleValue minus(long b)\n+  {\n+    return ValueMath.subtract(doubleValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue minus(double b)\n+  {\n+    return ValueMath.subtract(doubleValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue plus(long b)\n+  {\n+    return ValueMath.add(doubleValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue plus(double b)\n+  {\n+    return ValueMath.add(doubleValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue times(long b)\n+  {\n+    return ValueMath.multiply(doubleValue(), b);\n+  }\n+\n+  @Override\n+  public DoubleValue times(double b)\n+  {\n+    return ValueMath.multiply(doubleValue(), b);\n+  }\n+\n+  public DoubleValue dividedBy(long b)\n+  {\n+    return Values.doubleValue(doubleValue() / b);\n+  }\n+\n+  @Override\n+  public DoubleValue dividedBy(double b)\n+  {\n+    return Values.doubleValue(doubleValue() / b);\n+  }\n }\n",
            "diff_size": 126
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1559/FloatingPointValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1559/FloatingPointValue.java\nindex 9cdc2d21334..276a3a34a19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1559/FloatingPointValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1559/FloatingPointValue.java\n@@ -149,4 +149,4 @@ public abstract class FloatingPointValue extends NumberValue\n     {\n         return Values.doubleValue( doubleValue() / b );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}